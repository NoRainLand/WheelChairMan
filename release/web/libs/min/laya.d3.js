!function(e,t){"use strict";class r{static createDepthCasterUniformBlock(){if(!r.DepthCasterUBOData){let e=new Map;e.set(t.Shader3D.propertyNameToID("u_ShadowBias"),t.UniformBufferParamsType.Vector4),e.set(t.Shader3D.propertyNameToID("u_ShadowLightDirection"),t.UniformBufferParamsType.Vector3),r.DepthCasterUBOData=new t.UnifromBufferData(e)}return r.DepthCasterUBOData}}var a;e.DepthTextureMode=void 0,(a=e.DepthTextureMode||(e.DepthTextureMode={}))[a.None=0]="None",a[a.Depth=1]="Depth",a[a.DepthNormals=2]="DepthNormals",a[a.DepthAndDepthNormals=3]="DepthAndDepthNormals",a[a.MotionVectors=4]="MotionVectors";class n{static __init__(){n.DEPTHPASS=t.Shader3D.getDefineByName("DEPTHPASS"),n.DEFINE_SHADOW_BIAS=t.Shader3D.propertyNameToID("u_ShadowBias"),n.DEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthTexture"),n.DEPTHNORMALSTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthNormalsTexture"),n.DEPTHZBUFFERPARAMS=t.Shader3D.propertyNameToID("u_ZBufferParams"),n.SHADOWUNIFORMBLOCK=t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SHADOW)}constructor(){this._defaultNormalDepthColor=new t.Color(.5,.5,1,0),this._zBufferParams=new t.Vector4,t.Config3D._uniformBlock&&(this._castDepthData=r.createDepthCasterUniformBlock(),this._castDepthUBO=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_SHADOW,0),this._castDepthUBO||(this._castDepthUBO=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_SHADOW,t.BufferUsage.Dynamic,this._castDepthData.getbyteLength(),!0)))}update(r,a,n){switch(this._viewPort=r.viewport,this._camera=r,a){case e.DepthTextureMode.Depth:r.depthTexture=this._depthTexture=t.RenderTexture.createFromPool(this._viewPort.width,this._viewPort.height,n,t.RenderTargetFormat.None,!1,1);break;case e.DepthTextureMode.DepthNormals:r.depthNormalTexture=this._depthNormalsTexture=t.RenderTexture.createFromPool(this._viewPort.width,this._viewPort.height,t.RenderTargetFormat.R8G8B8A8,n,!1,1);break;case e.DepthTextureMode.MotionVectors:break;default:throw"there is UnDefined type of DepthTextureMode"}}render(r,a){var i=r.scene,s=i._shaderValues;switch(a){case e.DepthTextureMode.Depth:r.pipelineMode="ShadowCaster",s.addDefine(n.DEPTHPASS),s.setVector(n.DEFINE_SHADOW_BIAS,n.SHADOW_BIAS);var o=this._viewPort.x,l=this._viewPort.y;this._depthTexture._start(),t.LayaGL.renderEngine.viewport(o,l,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.scissor(o,l,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,null,1),r.changeViewport(o,l,this._viewPort.width,this._viewPort.height),r.changeScissor(o,l,this._viewPort.width,this._viewPort.height),r.destTarget=this._depthTexture,t.Stat.depthCastDrawCall+=i._opaqueQueue.renderQueue(r),this._depthTexture._end(),this._setupDepthModeShaderValue(a,this._camera),r.pipelineMode=r.configPipeLineMode,s.removeDefine(n.DEPTHPASS);break;case e.DepthTextureMode.DepthNormals:r.pipelineMode="DepthNormal",this._depthNormalsTexture._start();o=this._viewPort.x,l=this._viewPort.y;t.LayaGL.renderEngine.viewport(o,l,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.scissor(o,l,this._viewPort.width,this._viewPort.height),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,this._defaultNormalDepthColor,1),r.destTarget=this._depthNormalsTexture,r.changeViewport(o,l,this._viewPort.width,this._viewPort.height),r.changeScissor(o,l,this._viewPort.width,this._viewPort.height),t.Stat.depthCastDrawCall+=i._opaqueQueue.renderQueue(r),this._depthNormalsTexture._end(),this._setupDepthModeShaderValue(a,this._camera),r.pipelineMode=r.configPipeLineMode;break;case e.DepthTextureMode.MotionVectors:break;default:throw"there is UnDefined type of DepthTextureMode"}}_setupDepthModeShaderValue(t,r){switch(t){case e.DepthTextureMode.Depth:var a=r.farPlane,i=r.nearPlane;this._zBufferParams.setValue(1-a/i,a/i,(i-a)/(i*a),1/i),r._shaderValues.setVector(n.DEFINE_SHADOW_BIAS,n.SHADOW_BIAS),r._shaderValues.setTexture(n.DEPTHTEXTURE,this._depthTexture),r._shaderValues.setVector(n.DEPTHZBUFFERPARAMS,this._zBufferParams);break;case e.DepthTextureMode.DepthNormals:r._shaderValues.setTexture(n.DEPTHNORMALSTEXTURE,this._depthNormalsTexture);break;case e.DepthTextureMode.MotionVectors:break;default:throw"there is UnDefined type of DepthTextureMode"}}cleanUp(){this._depthTexture instanceof t.RenderTexture&&this._depthTexture&&t.RenderTexture.recoverToPool(this._depthTexture),this._depthNormalsTexture&&t.RenderTexture.recoverToPool(this._depthNormalsTexture),this._depthTexture=null,this._depthNormalsTexture=null}}n.SHADOW_BIAS=new t.Vector4;class i{constructor(){}static setColliderCollision(e,t,r){}static getIColliderCollision(e,t){return!1}}i.COLLISIONFILTERGROUP_DEFAULTFILTER=1,i.COLLISIONFILTERGROUP_STATICFILTER=2,i.COLLISIONFILTERGROUP_KINEMATICFILTER=4,i.COLLISIONFILTERGROUP_DEBRISFILTER=8,i.COLLISIONFILTERGROUP_SENSORTRIGGER=16,i.COLLISIONFILTERGROUP_CHARACTERFILTER=32,i.COLLISIONFILTERGROUP_CUSTOMFILTER1=64,i.COLLISIONFILTERGROUP_CUSTOMFILTER2=128,i.COLLISIONFILTERGROUP_CUSTOMFILTER3=256,i.COLLISIONFILTERGROUP_CUSTOMFILTER4=512,i.COLLISIONFILTERGROUP_CUSTOMFILTER5=1024,i.COLLISIONFILTERGROUP_CUSTOMFILTER6=2048,i.COLLISIONFILTERGROUP_CUSTOMFILTER7=4096,i.COLLISIONFILTERGROUP_CUSTOMFILTER8=8192,i.COLLISIONFILTERGROUP_CUSTOMFILTER9=16384,i.COLLISIONFILTERGROUP_CUSTOMFILTER10=32768,i.COLLISIONFILTERGROUP_ALLFILTER=-1,i.gravity=new t.Vector3(0,-9.81,0);class s{constructor(){}static lightAttenTexture(e,t,r,a,n,i){var s=e/r,o=1/(1+25*s);s>=.64&&(s>1?o=0:o*=1-(s-.64)/.36),i[n]=Math.floor(255*o+.5)}static haloTexture(e,t,r,a,n,i){var s=(e-(r>>=1))/r,o=(t-(a>>=1))/a,l=s*s+o*o;l>1&&(l=1),i[n]=Math.floor(255*(1-l)+.5)}static _generateTexture2D(e,r,a,n){var i=0,s=0;switch(e.format){case t.TextureFormat.R8G8B8:s=3;break;case t.TextureFormat.R8G8B8A8:s=4;break;case t.TextureFormat.Alpha8:s=1;break;default:throw"GeneratedTexture._generateTexture: unkonw texture format."}for(var o=new Uint8Array(r*a*s),l=0;l<a;l++)for(var h=0;h<r;h++)n(h,l,r,a,i,o),i+=s;e.setPixelsData(o,!1,!1)}}class o{}o.Scene3D=null,o.Laya3D=null,o.Physics3D=null;class l{static _createFloatTextureBuffer(e,r){var a=new t.Texture2D(e,r,t.TextureFormat.R32G32B32A32,!1,!1);return a.setPixelsData(null,!1,!1),a.filterMode=t.FilterMode.Point,a.wrapModeU=t.WrapMode.Clamp,a.wrapModeV=t.WrapMode.Clamp,a.anisoLevel=0,a}static _convertToLayaVec3(e,t){var r=o.Physics3D._bullet;t.x=r.btVector3_x(e),t.y=r.btVector3_y(e),t.z=r.btVector3_z(e)}static _convertToBulletVec3(e,t){o.Physics3D._bullet.btVector3_setValue(t,e.x,e.y,e.z)}static _rotationTransformScaleSkinAnimation(e,t,r,a,n,i,s,o,h,c,d,_){var u,m,f,g,p,S=l._tempArray16_0,T=l._tempArray16_1,E=l._tempArray16_2,A=a+a,x=n+n,D=i+i,R=a*A,C=n*A,v=n*x,y=i*A,I=i*x,M=i*D,L=s*A,O=s*x,b=s*D;for(S[15]=1,S[0]=1-v-M,S[1]=C+b,S[2]=y-O,S[4]=C-b,S[5]=1-R-M,S[6]=I+L,S[8]=y+O,S[9]=I-L,S[10]=1-R-v,T[15]=1,T[0]=o,T[5]=h,T[10]=c,u=0;u<4;u++)m=S[u],f=S[u+4],g=S[u+8],p=S[u+12],E[u]=m,E[u+4]=f,E[u+8]=g,E[u+12]=m*e+f*t+g*r+p;for(u=0;u<4;u++)m=E[u],f=E[u+4],g=E[u+8],p=E[u+12],d[u+_]=m*T[0]+f*T[1]+g*T[2]+p*T[3],d[u+_+4]=m*T[4]+f*T[5]+g*T[6]+p*T[7],d[u+_+8]=m*T[8]+f*T[9]+g*T[10]+p*T[11],d[u+_+12]=m*T[12]+f*T[13]+g*T[14]+p*T[15]}static _computeBoneAndAnimationDatasByBindPoseMatrxix(e,t,r,a,n,i){var s,o,h=0,c=0,d=e.length;for(s=0;s<d;h+=e[s].keyframeWidth,c+=16,s++)l._rotationTransformScaleSkinAnimation(t[h+0],t[h+1],t[h+2],t[h+3],t[h+4],t[h+5],t[h+6],t[h+7],t[h+8],t[h+9],a,c),0!=s&&(o=16*e[s].parentIndex,l.mulMatrixByArray(a,o,a,c,a,c));var _=r.length;for(s=0;s<_;s++)l.mulMatrixByArrayAndMatrixFast(a,16*i[s],r[s],n,16*s)}static _computeAnimationDatasByArrayAndMatrixFast(e,t,r,a){for(var n=0,i=e.length;n<i;n++)l.mulMatrixByArrayAndMatrixFast(t,16*a[n],e[n],r,16*n)}static _computeBoneAndAnimationDatasByBindPoseMatrxixOld(e,t,r,a,n){var i,s,o=0,h=0,c=e.length;for(i=0;i<c;o+=e[i].keyframeWidth,h+=16,i++)l._rotationTransformScaleSkinAnimation(t[o+7],t[o+8],t[o+9],t[o+3],t[o+4],t[o+5],t[o+6],t[o+0],t[o+1],t[o+2],a,h),0!=i&&(s=16*e[i].parentIndex,l.mulMatrixByArray(a,s,a,h,a,h));var d=r.length;for(i=0;i<d;i++){var _=16*i;l.mulMatrixByArrayAndMatrixFast(a,_,r[i],n,_)}}static _computeAnimationDatasByArrayAndMatrixFastOld(e,t,r){for(var a=e.length,n=0;n<a;n++){var i=16*n;l.mulMatrixByArrayAndMatrixFast(t,i,e[n],r,i)}}static _computeRootAnimationData(e,t,r){for(var a=0,n=0,i=0,s=e.length;a<s;n+=e[a].keyframeWidth,i+=16,a++)l.createAffineTransformationArray(t[n+0],t[n+1],t[n+2],t[n+3],t[n+4],t[n+5],t[n+6],t[n+7],t[n+8],t[n+9],r,i)}static transformVector3ArrayByQuat(e,t,r,a,n){var i=e[t],s=e[t+1],o=e[t+2],l=r.x,h=r.y,c=r.z,d=r.w,_=d*i+h*o-c*s,u=d*s+c*i-l*o,m=d*o+l*s-h*i,f=-l*i-h*s-c*o;a[n]=_*d+f*-l+u*-c-m*-h,a[n+1]=u*d+f*-h+m*-l-_*-c,a[n+2]=m*d+f*-c+_*-h-u*-l}static mulMatrixByArray(e,t,r,a,n,i){var s,o,h,c,d;if(n===r){for(r=l._tempArray16_3,s=0;s<16;++s)r[s]=n[i+s];a=0}for(s=0;s<4;s++)o=e[t+s],h=e[t+s+4],c=e[t+s+8],d=e[t+s+12],n[i+s]=o*r[a+0]+h*r[a+1]+c*r[a+2]+d*r[a+3],n[i+s+4]=o*r[a+4]+h*r[a+5]+c*r[a+6]+d*r[a+7],n[i+s+8]=o*r[a+8]+h*r[a+9]+c*r[a+10]+d*r[a+11],n[i+s+12]=o*r[a+12]+h*r[a+13]+c*r[a+14]+d*r[a+15]}static mulMatrixByArrayFast(e,t,r,a,n,i){var s,o,l,h,c;for(s=0;s<4;s++)o=e[t+s],l=e[t+s+4],h=e[t+s+8],c=e[t+s+12],n[i+s]=o*r[a+0]+l*r[a+1]+h*r[a+2]+c*r[a+3],n[i+s+4]=o*r[a+4]+l*r[a+5]+h*r[a+6]+c*r[a+7],n[i+s+8]=o*r[a+8]+l*r[a+9]+h*r[a+10]+c*r[a+11],n[i+s+12]=o*r[a+12]+l*r[a+13]+h*r[a+14]+c*r[a+15]}static mulMatrixByArrayAndMatrixFast(e,t,r,a,n){var i,s,o,l,h,c=r.elements,d=c[0],_=c[1],u=c[2],m=c[3],f=c[4],g=c[5],p=c[6],S=c[7],T=c[8],E=c[9],A=c[10],x=c[11],D=c[12],R=c[13],C=c[14],v=c[15],y=t,I=t+4,M=t+8,L=t+12,O=n,b=n+4,w=n+8,B=n+12;for(i=0;i<4;i++)s=e[y+i],o=e[I+i],l=e[M+i],h=e[L+i],a[O+i]=s*d+o*_+l*u+h*m,a[b+i]=s*f+o*g+l*p+h*S,a[w+i]=s*T+o*E+l*A+h*x,a[B+i]=s*D+o*R+l*C+h*v}static createAffineTransformationArray(e,t,r,a,n,i,s,o,l,h,c,d){var _=a+a,u=n+n,m=i+i,f=a*_,g=a*u,p=a*m,S=n*u,T=n*m,E=i*m,A=s*_,x=s*u,D=s*m;c[d+0]=(1-(S+E))*o,c[d+1]=(g+D)*o,c[d+2]=(p-x)*o,c[d+3]=0,c[d+4]=(g-D)*l,c[d+5]=(1-(f+E))*l,c[d+6]=(T+A)*l,c[d+7]=0,c[d+8]=(p+x)*h,c[d+9]=(T-A)*h,c[d+10]=(1-(f+S))*h,c[d+11]=0,c[d+12]=e,c[d+13]=t,c[d+14]=r,c[d+15]=1}static transformVector3ArrayToVector3ArrayCoordinate(e,t,r,a,n){var i=e[t+0],s=e[t+1],o=e[t+2],l=r.elements,h=i*l[3]+s*l[7]+o*l[11]+l[15];a[n]=i*l[0]+s*l[4]+o*l[8]+l[12]/h,a[n+1]=i*l[1]+s*l[5]+o*l[9]+l[13]/h,a[n+2]=i*l[2]+s*l[6]+o*l[10]+l[14]/h}static transformVector3ArrayToVector3ArrayNormal(e,t,r,a,n){var i=e[t+0],s=e[t+1],o=e[t+2],l=r.elements;a[n]=i*l[0]+s*l[4]+o*l[8],a[n+1]=i*l[1]+s*l[5]+o*l[9],a[n+2]=i*l[2]+s*l[6]+o*l[10]}static transformLightingMapTexcoordArray(e,t,r,a,n){a[n+0]=e[t+0]*r.x+r.z,a[n+1]=1-((1-e[t+1])*r.y+r.w)}static getURLVerion(e){var t=e.indexOf("?");return t>=0?e.substr(t):null}static _createAffineTransformationArray(e,t,r,a){var n=t.x,i=t.y,s=t.z,o=t.w,l=n+n,h=i+i,c=s+s,d=n*l,_=n*h,u=n*c,m=i*h,f=i*c,g=s*c,p=o*l,S=o*h,T=o*c,E=r.x,A=r.y,x=r.z;a[0]=(1-(m+g))*E,a[1]=(_+T)*E,a[2]=(u-S)*E,a[3]=0,a[4]=(_-T)*A,a[5]=(1-(d+g))*A,a[6]=(f+p)*A,a[7]=0,a[8]=(u+S)*x,a[9]=(f-p)*x,a[10]=(1-(d+m))*x,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1}static _mulMatrixArray(e,t,r,a,n){var i=t,s=e,o=a,l=i[r],h=i[r+1],c=i[r+2],d=i[r+3],_=i[r+4],u=i[r+5],m=i[r+6],f=i[r+7],g=i[r+8],p=i[r+9],S=i[r+10],T=i[r+11],E=i[r+12],A=i[r+13],x=i[r+14],D=i[r+15],R=s[0],C=s[1],v=s[2],y=s[3],I=s[4],M=s[5],L=s[6],O=s[7],b=s[8],w=s[9],B=s[10],N=s[11],V=s[12],P=s[13],F=s[14],U=s[15];o[n]=l*R+h*I+c*b+d*V,o[n+1]=l*C+h*M+c*w+d*P,o[n+2]=l*v+h*L+c*B+d*F,o[n+3]=l*y+h*O+c*N+d*U,o[n+4]=_*R+u*I+m*b+f*V,o[n+5]=_*C+u*M+m*w+f*P,o[n+6]=_*v+u*L+m*B+f*F,o[n+7]=_*y+u*O+m*N+f*U,o[n+8]=g*R+p*I+S*b+T*V,o[n+9]=g*C+p*M+S*w+T*P,o[n+10]=g*v+p*L+S*B+T*F,o[n+11]=g*y+p*O+S*N+T*U,o[n+12]=E*R+A*I+x*b+D*V,o[n+13]=E*C+A*M+x*w+D*P,o[n+14]=E*v+A*L+x*B+D*F,o[n+15]=E*y+A*O+x*N+D*U}static arcTanAngle(e,t){return 0==e?1==t?Math.PI/2:-Math.PI/2:e>0?Math.atan(t/e):e<0?t>0?Math.atan(t/e)+Math.PI:Math.atan(t/e)-Math.PI:0}static angleTo(e,r,a){t.Vector3.subtract(r,e,h),t.Vector3.normalize(h,h),a.x=Math.asin(h.y),a.y=l.arcTanAngle(-h.z,-h.x)}static transformQuat(e,t,r){var a=t,n=e.x,i=e.y,s=e.z,o=a[0],l=a[1],h=a[2],c=a[3],d=c*n+l*s-h*i,_=c*i+h*n-o*s,u=c*s+o*i-l*n,m=-o*n-l*i-h*s;r.x=d*c+m*-o+_*-h-u*-l,r.y=_*c+m*-l+u*-o-d*-h,r.z=u*c+m*-h+d*-l-_*-o}static quaternionWeight(e,t,r){r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r.w=e.w}static quaternionConjugate(e,t){t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=e.w}static scaleWeight(e,t,r){var a=e.x,n=e.y,i=e.z;r.x=a>0?Math.pow(Math.abs(a),t):-Math.pow(Math.abs(a),t),r.y=n>0?Math.pow(Math.abs(n),t):-Math.pow(Math.abs(n),t),r.z=i>0?Math.pow(Math.abs(i),t):-Math.pow(Math.abs(i),t)}static scaleBlend(e,t,r,a){var n=l._tempVector3_0,i=l._tempVector3_1;l.scaleWeight(e,1-r,n),l.scaleWeight(t,r,i);var s=r>.5?t:e;a.x=s.x>0?Math.abs(n.x*i.x):-Math.abs(n.x*i.x),a.y=s.y>0?Math.abs(n.y*i.y):-Math.abs(n.y*i.y),a.z=s.z>0?Math.abs(n.z*i.z):-Math.abs(n.z*i.z)}static matrix4x4MultiplyFFF(e,t,r){var a,n,i,s,o;if(r===t)for(t=new Float32Array(16),a=0;a<16;++a)t[a]=r[a];var l=t[0],h=t[1],c=t[2],d=t[3],_=t[4],u=t[5],m=t[6],f=t[7],g=t[8],p=t[9],S=t[10],T=t[11],E=t[12],A=t[13],x=t[14],D=t[15];for(a=0;a<4;a++)n=e[a],i=e[a+4],s=e[a+8],o=e[a+12],r[a]=n*l+i*h+s*c+o*d,r[a+4]=n*_+i*u+s*m+o*f,r[a+8]=n*g+i*p+s*S+o*T,r[a+12]=n*E+i*A+s*x+o*D}static matrix4x4MultiplyMFM(e,t,r){l.matrix4x4MultiplyFFF(e.elements,t,r.elements)}static _buildTexture2D(e,r,a,n,i=!1){var o=new t.Texture2D(e,r,a,i,!0);return o.anisoLevel=1,o.filterMode=t.FilterMode.Point,s._generateTexture2D(o,e,r,n),o}static _drawBound(e,t,r){e.lineCount+12>e.maxLineCount&&(e.maxLineCount+=12);var a=l._tempVector3_0,n=l._tempVector3_1,i=t.min,s=t.max;a.setValue(i.x,i.y,i.z),n.setValue(s.x,i.y,i.z),e.addLine(a,n,r,r),a.setValue(i.x,i.y,i.z),n.setValue(i.x,i.y,s.z),e.addLine(a,n,r,r),a.setValue(s.x,i.y,i.z),n.setValue(s.x,i.y,s.z),e.addLine(a,n,r,r),a.setValue(i.x,i.y,s.z),n.setValue(s.x,i.y,s.z),e.addLine(a,n,r,r),a.setValue(i.x,i.y,i.z),n.setValue(i.x,s.y,i.z),e.addLine(a,n,r,r),a.setValue(i.x,i.y,s.z),n.setValue(i.x,s.y,s.z),e.addLine(a,n,r,r),a.setValue(s.x,i.y,i.z),n.setValue(s.x,s.y,i.z),e.addLine(a,n,r,r),a.setValue(s.x,i.y,s.z),n.setValue(s.x,s.y,s.z),e.addLine(a,n,r,r),a.setValue(i.x,s.y,i.z),n.setValue(s.x,s.y,i.z),e.addLine(a,n,r,r),a.setValue(i.x,s.y,i.z),n.setValue(i.x,s.y,s.z),e.addLine(a,n,r,r),a.setValue(s.x,s.y,i.z),n.setValue(s.x,s.y,s.z),e.addLine(a,n,r,r),a.setValue(i.x,s.y,s.z),n.setValue(s.x,s.y,s.z),e.addLine(a,n,r,r)}static _getHierarchyPath(e,t,r){r.length=0;for(var a=t;a!==e;){var n=a._parent;if(!n)return null;r.push(n.getChildIndex(a)),a=n}return r}static _getNodeByHierarchyPath(e,t){for(var r=e,a=t.length-1;a>=0;a--)r=r.getChildAt(t[a]);return r}static _getParentNodeByHierarchyPath(e,t){let r=t.length,a=e;for(let t=0;t<r;t++){if(!a)return null;a=e.parent}return a}static uint8ArrayToArrayBuffer(e){let r,a=e.width,n=e.height;switch(e.colorFormat){case t.RenderTargetFormat.R8G8B8:case t.RenderTargetFormat.R8G8B8A8:r=new Uint8Array(a*n*4);break;case t.RenderTargetFormat.R16G16B16A16:r=new Float32Array(a*n*4);break;default:throw"this function is not surpprt "+e.format.toString()+"format Material"}if(e.getData(0,0,e.width,e.height,r),e.colorFormat===t.RenderTargetFormat.R16G16B16A16){let e=r,t=new Uint8Array(a*n*4);for(let r=0,a=e.length;r<a;r++)t[r]=Math.min(Math.floor(255*e[r]),255);r=t}let i=r;var s;if(t.LayaEnv.isConch);else{var o=new t.HTMLCanvas(!0);o.lock=!0,o.size(a,n);var l=o.getContext("2d"),h=l.createImageData(a,n);h.data.set(new Uint8ClampedArray(i)),l.putImageData(h,0,0),s=o.source.toDataURL(),o.destroy()}return s}}l._tempVector3_0=new t.Vector3,l._tempVector3_1=new t.Vector3,l._tempArray16_0=new Float32Array(16),l._tempArray16_1=new Float32Array(16),l._tempArray16_2=new Float32Array(16),l._tempArray16_3=new Float32Array(16),l._compIdToNode=new Object,window.getRTBase64=l.uint8ArrayToArrayBuffer;const h=new t.Vector3;class c extends t.EventDispatcher{get isDefaultMatrix(){return this._getTransformFlag(c.TRANSFORM_LOCALMATRIX)&&this.localMatrix,this._isDefaultMatrix}get _isFrontFaceInvert(){var e=this.getWorldLossyScale(),t=e.x<0;return e.y<0&&(t=!t),e.z<0&&(t=!t),t}get owner(){return this._owner}get worldNeedUpdate(){return this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)}get localPositionX(){return this._localPosition.x}set localPositionX(e){this._localPosition.x=e,this.localPosition=this._localPosition}get localPositionY(){return this._localPosition.y}set localPositionY(e){this._localPosition.y=e,this.localPosition=this._localPosition}get localPositionZ(){return this._localPosition.z}set localPositionZ(e){this._localPosition.z=e,this.localPosition=this._localPosition}get localPosition(){return this._localPosition}set localPosition(e){this._localPosition!==e&&e.cloneTo(this._localPosition),this._setTransformFlag(c.TRANSFORM_LOCALMATRIX,!0),this._onWorldPositionTransform()}get localRotationX(){return this.localRotation.x}set localRotationX(e){let t=this.localRotation;t.x=e,this.localRotation=t}get localRotationY(){return this.localRotation.y}set localRotationY(e){let t=this.localRotation;t.y=e,this.localRotation=t}get localRotationZ(){return this.localRotation.z}set localRotationZ(e){let t=this.localRotation;t.z=e,this.localRotation=t}get localRotationW(){return this.localRotation.w}set localRotationW(e){let t=this.localRotation;t.w=e,this.localRotation=t}get localRotation(){if(this._getTransformFlag(c.TRANSFORM_LOCALQUATERNION)){var e=this._localRotationEuler;t.Quaternion.createFromYawPitchRoll(e.y/c._angleToRandin,e.x/c._angleToRandin,e.z/c._angleToRandin,this._localRotation),this._setTransformFlag(c.TRANSFORM_LOCALQUATERNION,!1)}return this._localRotation}set localRotation(e){this._localRotation!==e&&e.cloneTo(this._localRotation),this._localRotation.normalize(this._localRotation),this._setTransformFlag(c.TRANSFORM_LOCALEULER|c.TRANSFORM_LOCALMATRIX,!0),this._setTransformFlag(c.TRANSFORM_LOCALQUATERNION,!1),this._onWorldRotationTransform()}get localScaleX(){return this._localScale.x}set localScaleX(e){this._localScale.x=e,this.localScale=this._localScale}get localScaleY(){return this._localScale.y}set localScaleY(e){this._localScale.y=e,this.localScale=this._localScale}get localScaleZ(){return this._localScale.z}set localScaleZ(e){this._localScale.z=e,this.localScale=this._localScale}get localScale(){return this._localScale}set localScale(e){this._localScale!==e&&e.cloneTo(this._localScale),this._setTransformFlag(c.TRANSFORM_LOCALMATRIX,!0),this._onWorldScaleTransform()}get localRotationEulerX(){return this.localRotationEuler.x}set localRotationEulerX(e){let t=this.localRotationEuler;t.x=e,this.localRotationEuler=t}get localRotationEulerY(){return this.localRotationEuler.y}set localRotationEulerY(e){let t=this.localRotationEuler;t.y=e,this.localRotationEuler=t}get localRotationEulerZ(){return this.localRotationEuler.z}set localRotationEulerZ(e){let t=this.localRotationEuler;t.z=e,this.localRotationEuler=t}get localRotationEuler(){if(this._getTransformFlag(c.TRANSFORM_LOCALEULER)){this._localRotation.getYawPitchRoll(c._tempVector30);var e=c._tempVector30,t=this._localRotationEuler;t.x=e.y*c._angleToRandin,t.y=e.x*c._angleToRandin,t.z=e.z*c._angleToRandin,this._setTransformFlag(c.TRANSFORM_LOCALEULER,!1)}return this._localRotationEuler}set localRotationEuler(e){this._localRotationEuler!==e&&e.cloneTo(this._localRotationEuler),this._setTransformFlag(c.TRANSFORM_LOCALEULER,!1),this._setTransformFlag(c.TRANSFORM_LOCALQUATERNION|c.TRANSFORM_LOCALMATRIX,!0),this._onWorldRotationTransform()}get localMatrix(){return this._getTransformFlag(c.TRANSFORM_LOCALMATRIX)&&(t.Matrix4x4.createAffineTransformation(this._localPosition,this.localRotation,this._localScale,this._localMatrix),this._isDefaultMatrix=this._localMatrix.isIdentity(),this._setTransformFlag(c.TRANSFORM_LOCALMATRIX,!1)),this._localMatrix}set localMatrix(e){this._localMatrix!==e&&e.cloneTo(this._localMatrix),this._isDefaultMatrix=this._localMatrix.isIdentity(),this._localMatrix.decomposeTransRotScale(this._localPosition,this._localRotation,this._localScale),this._setTransformFlag(c.TRANSFORM_LOCALEULER,!0),this._setTransformFlag(c.TRANSFORM_LOCALMATRIX,!1),this._onWorldTransform()}get position(){if(this._getTransformFlag(c.TRANSFORM_WORLDPOSITION)){if(null!=this._parent){var e=this.worldMatrix.elements;this._position.x=e[12],this._position.y=e[13],this._position.z=e[14]}else this._localPosition.cloneTo(this._position);this._setTransformFlag(c.TRANSFORM_WORLDPOSITION,!1)}return this._position}set position(e){if(null!=this._parent){var r=c._tempMatrix0;this._parent.worldMatrix.invert(r),t.Vector3.transformCoordinate(e,r,this._localPosition)}else e.cloneTo(this._localPosition);this.localPosition=this._localPosition,this._position!==e&&e.cloneTo(this._position),this._setTransformFlag(c.TRANSFORM_WORLDPOSITION,!1)}get rotation(){return this._getTransformFlag(c.TRANSFORM_WORLDQUATERNION)&&(null!=this._parent?t.Quaternion.multiply(this._parent.rotation,this.localRotation,this._rotation):this.localRotation.cloneTo(this._rotation),this._setTransformFlag(c.TRANSFORM_WORLDQUATERNION,!1)),this._rotation}set rotation(e){null!=this._parent?(this._parent.rotation.invert(c._tempQuaternion0),t.Quaternion.multiply(c._tempQuaternion0,e,this._localRotation)):e.cloneTo(this._localRotation),this.localRotation=this._localRotation,e!==this._rotation&&e.cloneTo(this._rotation),this._setTransformFlag(c.TRANSFORM_WORLDQUATERNION,!1)}get rotationEuler(){if(this._getTransformFlag(c.TRANSFORM_WORLDEULER)){this.rotation.getYawPitchRoll(c._tempVector30);var e=c._tempVector30,t=this._rotationEuler;t.x=e.y*c._angleToRandin,t.y=e.x*c._angleToRandin,t.z=e.z*c._angleToRandin,this._setTransformFlag(c.TRANSFORM_WORLDEULER,!1)}return this._rotationEuler}set rotationEuler(e){t.Quaternion.createFromYawPitchRoll(e.y/c._angleToRandin,e.x/c._angleToRandin,e.z/c._angleToRandin,this._rotation),this.rotation=this._rotation,this._rotationEuler!==e&&e.cloneTo(this._rotationEuler),this._setTransformFlag(c.TRANSFORM_WORLDEULER,!1)}get worldMatrix(){if(this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)){if(null!=this._parent){let e=this._parent;for(;e._parent&&e.isDefaultMatrix;)e=e._parent;t.Matrix4x4.multiply(e.worldMatrix,this.localMatrix,this._worldMatrix)}else this.localMatrix.cloneTo(this._worldMatrix);this._setTransformFlag(c.TRANSFORM_WORLDMATRIX,!1)}return this._worldMatrix}set worldMatrix(e){null===this._parent?e.cloneTo(this._localMatrix):(this._parent.worldMatrix.invert(this._localMatrix),t.Matrix4x4.multiply(this._localMatrix,e,this._localMatrix)),this.localMatrix=this._localMatrix,this._worldMatrix!==e&&e.cloneTo(this._worldMatrix),this._setTransformFlag(c.TRANSFORM_WORLDMATRIX,!1)}constructor(e){super(),this._localPosition=new t.Vector3(0,0,0),this._localRotation=new t.Quaternion(0,0,0,1),this._localScale=new t.Vector3(1,1,1),this._localRotationEuler=new t.Vector3(0,0,0),this._localMatrix=new t.Matrix4x4,this._position=new t.Vector3(0,0,0),this._rotation=new t.Quaternion(0,0,0,1),this._scale=new t.Vector3(1,1,1),this._rotationEuler=new t.Vector3(0,0,0),this._worldMatrix=new t.Matrix4x4,this._children=null,this._isDefaultMatrix=!1,this._parent=null,this._transformFlag=0,this._owner=e,this._children=[],this._setTransformFlag(c.TRANSFORM_LOCALQUATERNION|c.TRANSFORM_LOCALEULER|c.TRANSFORM_LOCALMATRIX,!1),this._setTransformFlag(c.TRANSFORM_WORLDPOSITION|c.TRANSFORM_WORLDQUATERNION|c.TRANSFORM_WORLDEULER|c.TRANSFORM_WORLDSCALE|c.TRANSFORM_WORLDMATRIX,!0)}_getScaleMatrix(){var e=c._tempQuaternion0,r=c._tempMatrix3x30,a=c._tempMatrix3x31,n=c._tempMatrix3x32;return t.Matrix3x3.createFromMatrix4x4(this.worldMatrix,a),this.rotation.invert(e),t.Matrix3x3.createRotationQuaternion(e,r),t.Matrix3x3.multiply(r,a,n),n}_setTransformFlag(e,t){t?this._transformFlag|=e:this._transformFlag&=~e}_getTransformFlag(e){return 0!=(this._transformFlag&e)}_setParent(e){if(this._parent!==e){if(this._parent){var t=this._parent._children,r=t.indexOf(this);t.splice(r,1)}e&&(e._children.push(this),e&&this._onWorldTransform()),this._parent=e}}_onWorldPositionRotationTransform(){this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(c.TRANSFORM_WORLDPOSITION)&&this._getTransformFlag(c.TRANSFORM_WORLDQUATERNION)&&this._getTransformFlag(c.TRANSFORM_WORLDEULER)||(this._setTransformFlag(c.TRANSFORM_WORLDMATRIX|c.TRANSFORM_WORLDPOSITION|c.TRANSFORM_WORLDQUATERNION|c.TRANSFORM_WORLDEULER,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,r=this._children.length;e<r;e++)this._children[e]._onWorldPositionRotationTransform()}_onWorldPositionScaleTransform(){this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(c.TRANSFORM_WORLDPOSITION)&&this._getTransformFlag(c.TRANSFORM_WORLDSCALE)||(this._setTransformFlag(c.TRANSFORM_WORLDMATRIX|c.TRANSFORM_WORLDPOSITION|c.TRANSFORM_WORLDSCALE,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,r=this._children.length;e<r;e++)this._children[e]._onWorldPositionScaleTransform()}_onWorldPositionTransform(){this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(c.TRANSFORM_WORLDPOSITION)||(this._setTransformFlag(c.TRANSFORM_WORLDMATRIX|c.TRANSFORM_WORLDPOSITION,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,r=this._children.length;e<r;e++)this._children[e]._onWorldPositionTransform()}_onWorldRotationTransform(){this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(c.TRANSFORM_WORLDQUATERNION)&&this._getTransformFlag(c.TRANSFORM_WORLDEULER)||(this._setTransformFlag(c.TRANSFORM_WORLDMATRIX|c.TRANSFORM_WORLDQUATERNION|c.TRANSFORM_WORLDEULER,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,r=this._children.length;e<r;e++)this._children[e]._onWorldPositionRotationTransform()}_onWorldScaleTransform(){this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(c.TRANSFORM_WORLDSCALE)||(this._setTransformFlag(c.TRANSFORM_WORLDMATRIX|c.TRANSFORM_WORLDSCALE,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,r=this._children.length;e<r;e++)this._children[e]._onWorldPositionScaleTransform()}_onWorldTransform(){this._getTransformFlag(c.TRANSFORM_WORLDMATRIX)&&this._getTransformFlag(c.TRANSFORM_WORLDPOSITION)&&this._getTransformFlag(c.TRANSFORM_WORLDQUATERNION)&&this._getTransformFlag(c.TRANSFORM_WORLDEULER)&&this._getTransformFlag(c.TRANSFORM_WORLDSCALE)||(this._setTransformFlag(c.TRANSFORM_WORLDMATRIX|c.TRANSFORM_WORLDPOSITION|c.TRANSFORM_WORLDQUATERNION|c.TRANSFORM_WORLDEULER|c.TRANSFORM_WORLDSCALE,!0),this.event(t.Event.TRANSFORM_CHANGED,this._transformFlag));for(var e=0,r=this._children.length;e<r;e++)this._children[e]._onWorldTransform()}translate(e,r=!0){r?(t.Matrix4x4.createFromQuaternion(this.localRotation,c._tempMatrix0),t.Vector3.transformCoordinate(e,c._tempMatrix0,c._tempVector30),t.Vector3.add(this.localPosition,c._tempVector30,this._localPosition),this.localPosition=this._localPosition):(t.Vector3.add(this.position,e,this._position),this.position=this._position)}rotate(e,r=!0,a=!0){var n;a?n=e:(t.Vector3.scale(e,Math.PI/180,c._tempVector30),n=c._tempVector30),t.Quaternion.createFromYawPitchRoll(n.y,n.x,n.z,c._tempQuaternion0),r?(t.Quaternion.multiply(this._localRotation,c._tempQuaternion0,this._localRotation),this.localRotation=this._localRotation):(t.Quaternion.multiply(c._tempQuaternion0,this.rotation,this._rotation),this.rotation=this._rotation)}getForward(e){var t=this.worldMatrix.elements;e.x=-t[8],e.y=-t[9],e.z=-t[10]}getUp(e){var t=this.worldMatrix.elements;e.x=t[4],e.y=t[5],e.z=t[6]}getRight(e){var t=this.worldMatrix.elements;e.x=t[0],e.y=t[1],e.z=t[2]}lookAt(e,r,a=!1,n=!0){var i;if(a){if(i=this._localPosition,Math.abs(i.x-e.x)<t.MathUtils3D.zeroTolerance&&Math.abs(i.y-e.y)<t.MathUtils3D.zeroTolerance&&Math.abs(i.z-e.z)<t.MathUtils3D.zeroTolerance)return;n?(t.Quaternion.lookAt(this._localPosition,e,r,this._localRotation),this._localRotation.invert(this._localRotation)):(t.Vector3.subtract(this.localPosition,e,c._tempVector30),t.Quaternion.rotationLookAt(c._tempVector30,r,this.localRotation),this._localRotation.invert(this._localRotation)),this.localRotation=this._localRotation}else{var s=this.position;if(i=s,Math.abs(i.x-e.x)<t.MathUtils3D.zeroTolerance&&Math.abs(i.y-e.y)<t.MathUtils3D.zeroTolerance&&Math.abs(i.z-e.z)<t.MathUtils3D.zeroTolerance)return;n?(t.Quaternion.lookAt(s,e,r,this._rotation),this._rotation.invert(this._rotation)):(t.Vector3.subtract(this.position,e,c._tempVector30),t.Quaternion.rotationLookAt(c._tempVector30,r,this._rotation),this._rotation.invert(this._rotation)),this.rotation=this._rotation}}objLookat(e,t,r=!1){}getWorldLossyScale(){if(this._getTransformFlag(c.TRANSFORM_WORLDSCALE)){if(null!==this._parent){var e=this._getScaleMatrix().elements;this._scale.x=e[0],this._scale.y=e[4],this._scale.z=e[8]}else this._localScale.cloneTo(this._scale);this._setTransformFlag(c.TRANSFORM_WORLDSCALE,!1)}return this._scale}setWorldLossyScale(e){if(null!==this._parent){var r=c._tempMatrix3x33,a=c._tempMatrix3x33,n=a.elements,i=this._parent._getScaleMatrix();i.invert(i),t.Matrix3x3.createFromScaling(e,r),t.Matrix3x3.multiply(i,r,a),this._localScale.x=n[0],this._localScale.y=n[4],this._localScale.z=n[8]}else e.cloneTo(this._localScale);this.localScale=this._localScale,this._scale!==e&&e.cloneTo(this._scale),this._setTransformFlag(c.TRANSFORM_WORLDSCALE,!1)}get scale(){return console.warn("Transfrm3D: discard function,please use getWorldLossyScale instead."),this.getWorldLossyScale()}set scale(e){console.warn("Transfrm3D: discard function,please use setWorldLossyScale instead."),this.setWorldLossyScale(e)}localToGlobal(e,r){t.Vector3.transformV3ToV3(e,this.worldMatrix,r)}globalToLocal(e,r){this.worldMatrix.invert(c._tempMatrix0),t.Vector3.transformV3ToV3(e,c._tempMatrix0,r)}toLocalNormal(e,r){this.worldMatrix.invert(c._tempMatrix0),t.Vector3.TransformNormal(e,c._tempMatrix0,r)}toDir(e,t){this.worldMatrix,this.rotationTo(this.rotation,e,t),this.rotation=this.rotation}rotationTo(e,r,a){var n=t.Vector3.dot(r,a);return t.Vector3.Up,n<-.999999?(t.Vector3.cross(t.Vector3.UnitX,r,c.tmpVec3),t.Vector3.scalarLength(c.tmpVec3)<1e-6&&t.Vector3.cross(t.Vector3.UnitY,r,c.tmpVec3),t.Vector3.normalize(c.tmpVec3,c.tmpVec3),t.Quaternion.createFromAxisAngle(c.tmpVec3,Math.PI,e),!0):n>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,!1):(t.Vector3.cross(r,a,c.tmpVec3),e.x=c.tmpVec3.x,e.y=c.tmpVec3.y,e.z=c.tmpVec3.z,e.w=1+n,e.normalize(e),!0)}}c._tempVector30=new t.Vector3,c._tempQuaternion0=new t.Quaternion,c._tempMatrix0=new t.Matrix4x4,c._tempMatrix3x30=new t.Matrix3x3,c._tempMatrix3x31=new t.Matrix3x3,c._tempMatrix3x32=new t.Matrix3x3,c._tempMatrix3x33=new t.Matrix3x3,c.TRANSFORM_LOCALQUATERNION=1,c.TRANSFORM_LOCALEULER=2,c.TRANSFORM_LOCALMATRIX=4,c.TRANSFORM_WORLDPOSITION=8,c.TRANSFORM_WORLDQUATERNION=16,c.TRANSFORM_WORLDSCALE=32,c.TRANSFORM_WORLDMATRIX=64,c.TRANSFORM_WORLDEULER=128,c._angleToRandin=180/Math.PI,c.tmpVec3=new t.Vector3;class d{static __init__(){var e=o.Physics3D._bullet;d._btScale=e.btVector3_create(1,1,1),d._btVector30=e.btVector3_create(0,0,0),d._btQuaternion0=e.btQuaternion_create(0,0,0,1),d._btTransform0=e.btTransform_create()}static _createAffineTransformation(e,t,r){var a=t.x,n=t.y,i=t.z,s=t.w,o=a+a,l=n+n,h=i+i,c=a*o,d=a*l,_=a*h,u=n*l,m=n*h,f=i*h,g=s*o,p=s*l,S=s*h;r[0]=1-(u+f),r[1]=d+S,r[2]=_-p,r[3]=0,r[4]=d-S,r[5]=1-(c+f),r[6]=m+g,r[7]=0,r[8]=_+p,r[9]=m-g,r[10]=1-(c+u),r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1}get type(){return this._type}get localOffset(){return this._localOffset}set localOffset(e){this._localOffset=e,this._compoundParent&&this._compoundParent._updateChildTransform(this)}get localRotation(){return this._localRotation}set localRotation(e){this._localRotation=e,this._compoundParent&&this._compoundParent._updateChildTransform(this)}constructor(){this._scale=new t.Vector3(1,1,1),this._centerMatrix=new t.Matrix4x4,this._attatched=!1,this._indexInCompound=-1,this._compoundParent=null,this._attatchedCollisionObject=null,this._referenceCount=0,this._localOffset=new t.Vector3(0,0,0),this._localRotation=new t.Quaternion(0,0,0,1),this.needsCustomCollisionCallback=!1}_setScale(e){if(this._compoundParent)this.updateLocalTransformations();else{var t=o.Physics3D._bullet;t.btVector3_setValue(d._btScale,e.x,e.y,e.z),t.btCollisionShape_setLocalScaling(this._btShape,d._btScale)}}updateLocalTransformations(){if(this._compoundParent){var e=d._tempVector30;t.Vector3.multiply(this.localOffset,this._scale,e),d._createAffineTransformation(e,this.localRotation,this._centerMatrix.elements)}else d._createAffineTransformation(this.localOffset,this.localRotation,this._centerMatrix.elements)}cloneTo(e){var t=e;this._localOffset.cloneTo(t.localOffset),this._localRotation.cloneTo(t.localRotation),t.localOffset=t.localOffset,t.localRotation=t.localRotation}clone(){return null}destroy(){this._btShape&&(o.Physics3D._bullet.btCollisionShape_destroy(this._btShape),this._btShape=null)}}d.SHAPEORIENTATION_UPX=0,d.SHAPEORIENTATION_UPY=1,d.SHAPEORIENTATION_UPZ=2,d.SHAPETYPES_BOX=0,d.SHAPETYPES_SPHERE=1,d.SHAPETYPES_CYLINDER=2,d.SHAPETYPES_CAPSULE=3,d.SHAPETYPES_CONVEXHULL=4,d.SHAPETYPES_COMPOUND=5,d.SHAPETYPES_STATICPLANE=6,d.SHAPETYPES_CONE=7,d.SHAPETYPES_HEIGHTFIELDTERRAIN=8,d._tempVector30=new t.Vector3;class _ extends d{static __init__(){_._btSize=o.Physics3D._bullet.btVector3_create(0,0,0)}get sizeX(){return this._sizeX}set sizeX(e){this._sizeX=e,t.LayaEnv.isPlaying&&this.changeBoxShape()}get sizeY(){return this._sizeY}set sizeY(e){this._sizeY=e,t.LayaEnv.isPlaying&&this.changeBoxShape()}get sizeZ(){return this._sizeZ}set sizeZ(e){this._sizeZ=e,t.LayaEnv.isPlaying&&this.changeBoxShape()}constructor(e=1,t=1,r=1){super(),this._sizeX=e,this._sizeY=t,this._sizeZ=r,this._type=d.SHAPETYPES_BOX;var a=o.Physics3D._bullet;a.btVector3_setValue(_._btSize,e/2,t/2,r/2),this._btShape=a.btBoxShape_create(_._btSize)}changeBoxShape(){var e=o.Physics3D._bullet;this._btShape&&e.btCollisionShape_destroy(this._btShape),e.btVector3_setValue(_._btSize,this._sizeX/2,this._sizeY/2,this._sizeZ/2),this._btShape=e.btBoxShape_create(_._btSize)}clone(){var e=new _(this._sizeX,this._sizeY,this._sizeZ);return this.cloneTo(e),e}}class u extends d{get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeCapsuleShape()}get length(){return this._length}set length(e){this._length=e,t.LayaEnv.isPlaying&&this.changeCapsuleShape()}get orientation(){return this._orientation}set orientation(e){this._orientation=e,t.LayaEnv.isPlaying&&this.changeCapsuleShape()}constructor(e=.5,t=2,r=d.SHAPEORIENTATION_UPY){super(),this._radius=e,this._length=t,this._orientation=r,this._type=d.SHAPETYPES_CAPSULE;var a=o.Physics3D._bullet;switch(r){case d.SHAPEORIENTATION_UPX:this._btShape=a.btCapsuleShapeX_create(e,t-2*e);break;case d.SHAPEORIENTATION_UPY:this._btShape=a.btCapsuleShape_create(e,t-2*e);break;case d.SHAPEORIENTATION_UPZ:this._btShape=a.btCapsuleShapeZ_create(e,t-2*e);break;default:throw"CapsuleColliderShape:unknown orientation."}}changeCapsuleShape(){var e=o.Physics3D._bullet;switch(this._btShape&&e.btCollisionShape_destroy(this._btShape),this._orientation){case d.SHAPEORIENTATION_UPX:this._btShape=e.btCapsuleShapeX_create(this._radius,this._length-2*this._radius);break;case d.SHAPEORIENTATION_UPY:this._btShape=e.btCapsuleShape_create(this._radius,this._length-2*this._radius);break;case d.SHAPEORIENTATION_UPZ:this._btShape=e.btCapsuleShapeZ_create(this._radius,this._length-2*this._radius);break;default:throw"CapsuleColliderShape:unknown orientation."}}_setScale(e){var t=u._tempVector30;switch(this.orientation){case d.SHAPEORIENTATION_UPX:t.x=e.x,t.y=t.z=Math.max(e.y,e.z);break;case d.SHAPEORIENTATION_UPY:t.y=e.y,t.x=t.z=Math.max(e.x,e.z);break;case d.SHAPEORIENTATION_UPZ:t.z=e.z,t.x=t.y=Math.max(e.x,e.y);break;default:throw"CapsuleColliderShape:unknown orientation."}super._setScale(t)}clone(){var e=new u(this._radius,this._length,this._orientation);return this.cloneTo(e),e}}u._tempVector30=new t.Vector3;class m extends d{static __init__(){var e=o.Physics3D._bullet;m._btVector3One=e.btVector3_create(1,1,1),m._btTransform=e.btTransform_create(),m._btOffset=e.btVector3_create(0,0,0),m._btRotation=e.btQuaternion_create(0,0,0,1)}constructor(){super(),this._childColliderShapes=[],this._type=d.SHAPETYPES_COMPOUND,this._btShape=o.Physics3D._bullet.btCompoundShape_create()}_clearChildShape(e){e._attatched=!1,e._compoundParent=null,e._indexInCompound=-1}_updateChildTransform(e){var t=o.Physics3D._bullet,r=e.localOffset,a=e.localRotation,n=d._btVector30,i=d._btQuaternion0,s=d._btTransform0;t.btVector3_setValue(n,r.x,r.y,r.z),t.btQuaternion_setValue(i,a.x,a.y,a.z,a.w),t.btTransform_setOrigin(s,n),t.btTransform_setRotation(s,i),t.btCompoundShape_updateChildTransform(this._btShape,e._indexInCompound,s,!0)}set shapes(e){for(var t=this._childColliderShapes.length-1;t>=0;t--)this.removeChildShape(this._childColliderShapes[t]);for(t=0;t<e.length;t++)this.addChildShape(e[t])}get shapes(){return this._childColliderShapes}addChildShape(e){if(e._attatched)throw"CompoundColliderShape: this shape has attatched to other entity.";e._attatched=!0,e._compoundParent=this,e._indexInCompound=this._childColliderShapes.length,this._childColliderShapes.push(e);var t=e.localOffset,r=e.localRotation,a=o.Physics3D._bullet;a.btVector3_setValue(m._btOffset,t.x,t.y,t.z),a.btQuaternion_setValue(m._btRotation,r.x,r.y,r.z,r.w),a.btTransform_setOrigin(m._btTransform,m._btOffset),a.btTransform_setRotation(m._btTransform,m._btRotation);var n=a.btCollisionShape_getLocalScaling(this._btShape);a.btCollisionShape_setLocalScaling(this._btShape,m._btVector3One),a.btCompoundShape_addChildShape(this._btShape,m._btTransform,e._btShape),a.btCollisionShape_setLocalScaling(this._btShape,n),this._attatchedCollisionObject&&(this._attatchedCollisionObject.colliderShape=this)}removeChildShape(e){if(e._compoundParent===this){var t=e._indexInCompound;this._clearChildShape(e);var r=this._childColliderShapes[this._childColliderShapes.length-1];r._indexInCompound=t,this._childColliderShapes[t]=r,this._childColliderShapes.pop(),o.Physics3D._bullet.btCompoundShape_removeChildShapeByIndex(this._btShape,t)}}clearChildShape(){for(var e=0,t=this._childColliderShapes.length;e<t;e++)this._clearChildShape(this._childColliderShapes[e]),o.Physics3D._bullet.btCompoundShape_removeChildShapeByIndex(this._btShape,0);this._childColliderShapes.length=0}getChildShapeCount(){return this._childColliderShapes.length}cloneTo(e){var t=e;t.clearChildShape();for(var r=0,a=this._childColliderShapes.length;r<a;r++)t.addChildShape(this._childColliderShapes[r].clone())}clone(){var e=new m;return this.cloneTo(e),e}destroy(){super.destroy();for(var e=0,t=this._childColliderShapes.length;e<t;e++){var r=this._childColliderShapes[e];0===r._referenceCount&&r.destroy()}}}class f extends d{get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeConeShape()}get height(){return this._height}set height(e){this._height=e,t.LayaEnv.isPlaying&&this.changeConeShape()}get orientation(){return this._orientation}set orientation(e){this._orientation=e,t.LayaEnv.isPlaying&&this.changeConeShape()}constructor(e=.5,t=1,r=d.SHAPEORIENTATION_UPY){super(),this._radius=1,this._height=.5,this._radius=e,this._height=t,this._orientation=r,this._type=d.SHAPETYPES_CYLINDER;var a=o.Physics3D._bullet;switch(r){case d.SHAPEORIENTATION_UPX:this._btShape=a.btConeShapeX_create(e,t);break;case d.SHAPEORIENTATION_UPY:this._btShape=a.btConeShape_create(e,t);break;case d.SHAPEORIENTATION_UPZ:this._btShape=a.btConeShapeZ_create(e,t);break;default:throw"ConeColliderShape:unknown orientation."}}changeConeShape(){var e=o.Physics3D._bullet;switch(this._btShape&&e.btCollisionShape_destroy(this._btShape),this._orientation){case d.SHAPEORIENTATION_UPX:this._btShape=e.btConeShapeX_create(this._radius,this._height);break;case d.SHAPEORIENTATION_UPY:this._btShape=e.btConeShape_create(this._radius,this._height);break;case d.SHAPEORIENTATION_UPZ:this._btShape=e.btConeShapeZ_create(this._radius,this._height);break;default:throw"ConeColliderShape:unknown orientation."}}clone(){var e=new f(this._radius,this._height,this._orientation);return this.cloneTo(e),e}}class g extends d{static __init__(){g._btSize=o.Physics3D._bullet.btVector3_create(0,0,0)}get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeCylinder()}get height(){return this._height}set height(e){this._height=e,t.LayaEnv.isPlaying&&this.changeCylinder()}get orientation(){return this._orientation}set orientation(e){this._orientation=e,t.LayaEnv.isPlaying&&this.changeCylinder()}constructor(e=.5,t=1,r=d.SHAPEORIENTATION_UPY){super(),this._radius=1,this._height=.5,this._radius=e,this._height=t,this._orientation=r,this._type=d.SHAPETYPES_CYLINDER;var a=o.Physics3D._bullet;switch(r){case d.SHAPEORIENTATION_UPX:a.btVector3_setValue(g._btSize,t/2,e,e),this._btShape=a.btCylinderShapeX_create(g._btSize);break;case d.SHAPEORIENTATION_UPY:a.btVector3_setValue(g._btSize,e,t/2,e),this._btShape=a.btCylinderShape_create(g._btSize);break;case d.SHAPEORIENTATION_UPZ:a.btVector3_setValue(g._btSize,e,e,t/2),this._btShape=a.btCylinderShapeZ_create(g._btSize);break;default:throw"CapsuleColliderShape:unknown orientation."}}changeCylinder(){var e=o.Physics3D._bullet;switch(this._btShape&&e.btCollisionShape_destroy(this._btShape),this._orientation){case d.SHAPEORIENTATION_UPX:e.btVector3_setValue(g._btSize,this._height/2,this._radius,this._radius),this._btShape=e.btCylinderShapeX_create(g._btSize);break;case d.SHAPEORIENTATION_UPY:e.btVector3_setValue(g._btSize,this._radius,this._height/2,this._radius),this._btShape=e.btCylinderShape_create(g._btSize);break;case d.SHAPEORIENTATION_UPZ:e.btVector3_setValue(g._btSize,this._radius,this._radius,this._height/2),this._btShape=e.btCylinderShapeZ_create(g._btSize);break;default:throw"CapsuleColliderShape:unknown orientation."}}clone(){var e=new g(this._radius,this._height,this._orientation);return this.cloneTo(e),e}}class p extends d{get mesh(){return this._mesh}set mesh(e){if(e&&this._mesh!==e){var t=o.Physics3D._bullet;this._physicMesh=e._getPhysicMesh(),this._mesh&&t.btCollisionShape_destroy(this._btShape),this._setPhysicsMesh(),this._mesh=e}}get convex(){return this._convex}set convex(e){this._convex=e}constructor(){super(),this._mesh=null,this._convex=!1}_setPhysicsMesh(){this._createBvhTriangleCollider()}_createDynamicMeshCollider(){var e=o.Physics3D._bullet;this._physicMesh&&(this._btShape=e.btGImpactMeshShape_create(this._physicMesh),e.btGImpactShapeInterface_updateBound(this._btShape))}_createBvhTriangleCollider(){var e=o.Physics3D._bullet;this._physicMesh&&(this._btShape=e.btBvhTriangleMeshShape_create(this._physicMesh))}_setScale(e){if(this._compoundParent)this.updateLocalTransformations();else{var t=o.Physics3D._bullet;t.btVector3_setValue(d._btScale,e.x,e.y,e.z),t.btCollisionShape_setLocalScaling(this._btShape,d._btScale),this._attatchedCollisionObject&&this._attatchedCollisionObject._enableProcessCollisions&&t.btGImpactShapeInterface_updateBound(this._btShape)}}cloneTo(e){var t=e;t.convex=this._convex,t.mesh=this._mesh,super.cloneTo(e)}clone(){var e=new p;return this.cloneTo(e),e}destroy(){this._btShape&&(o.Physics3D._bullet.btCollisionShape_destroy(this._btShape),this._btShape=null)}}class S extends d{get radius(){return this._radius}set radius(e){this._radius=e,t.LayaEnv.isPlaying&&this.changeSphere()}constructor(e=.5){super(),this._radius=e,this._type=d.SHAPETYPES_SPHERE,this._btShape=o.Physics3D._bullet.btSphereShape_create(e)}changeSphere(){var e=o.Physics3D._bullet;this._btShape&&e.btCollisionShape_destroy(this._btShape),this._btShape=o.Physics3D._bullet.btSphereShape_create(this._radius)}clone(){var e=new S(this._radius);return this.cloneTo(e),e}}class T extends t.Component{static __init__(){var e=o.Physics3D._bullet;T._btVector30=e.btVector3_create(0,0,0),T._btQuaternion0=e.btQuaternion_create(0,0,0,1)}static _createAffineTransformationArray(e,t,r,a,n,i,s,o,l){var h=a+a,c=n+n,d=i+i,_=a*h,u=a*c,m=a*d,f=n*c,g=n*d,p=i*d,S=s*h,T=s*c,E=s*d,A=o[0],x=o[1],D=o[2];l[0]=(1-(f+p))*A,l[1]=(u+E)*A,l[2]=(m-T)*A,l[3]=0,l[4]=(u-E)*x,l[5]=(1-(_+p))*x,l[6]=(g+S)*x,l[7]=0,l[8]=(m+T)*D,l[9]=(g-S)*D,l[10]=(1-(_+f))*D,l[11]=0,l[12]=e,l[13]=t,l[14]=r,l[15]=1}static _creatShape(e){var r;switch(e.type){case"BoxColliderShape":var a=e.size;r=a?new _(a[0],a[1],a[2]):new _;break;case"SphereColliderShape":r=new S(e.radius);break;case"CapsuleColliderShape":r=new u(e.radius,e.height,e.orientation);break;case"MeshColliderShape":var n=new p;e.mesh&&(n.mesh=t.Loader.getRes(e.mesh)),r=n;break;case"ConeColliderShape":r=new f(e.radius,e.height,e.orientation);break;case"CylinderColliderShape":r=new g(e.radius,e.height,e.orientation);break;default:throw"unknown shape type."}if(e.center){var i=r.localOffset;i.fromArray(e.center),r.localOffset=i}return r}static physicVector3TransformQuat(e,t,r,a,n,i){var s=e.x,o=e.y,l=e.z,h=n*s+r*l-a*o,c=n*o+a*s-t*l,d=n*l+t*o-r*s,_=-t*s-r*o-a*l;i.x=h*n+_*-t+c*-a-d*-r,i.y=c*n+_*-r+d*-t-h*-a,i.z=d*n+_*-a+h*-r-c*-t}static physicQuaternionMultiply(e,t,r,a,n,i){var s=n.x,o=n.y,l=n.z,h=n.w,c=t*l-r*o,d=r*s-e*l,_=e*o-t*s,u=e*s+t*o+r*l;i.x=e*h+s*a+c,i.y=t*h+o*a+d,i.z=r*h+l*a+_,i.w=a*h-u}get restitution(){return this._restitution}set restitution(e){this._restitution=e,this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_setRestitution(this._btColliderObject,e)}get friction(){return this._friction}set friction(e){this._friction=e,this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_setFriction(this._btColliderObject,e)}get rollingFriction(){return this._rollingFriction}set rollingFriction(e){this._rollingFriction=e,this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_setRollingFriction(this._btColliderObject,e)}get ccdMotionThreshold(){return this._ccdMotionThreshold}set ccdMotionThreshold(e){this._ccdMotionThreshold=e,this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_setCcdMotionThreshold(this._btColliderObject,e)}get ccdSweptSphereRadius(){return this._ccdSweptSphereRadius}set ccdSweptSphereRadius(e){this._ccdSweptSphereRadius=e,this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_setCcdSweptSphereRadius(this._btColliderObject,e)}get isActive(){return!!this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_isActive(this._btColliderObject)}get colliderShape(){return this._colliderShape}set colliderShape(e){var t=this._colliderShape;if(t&&(t._attatched=!1,t._attatchedCollisionObject=null),this._colliderShape=e,e){if(e._attatched)throw"PhysicsComponent: this shape has attatched to other entity.";if(e._attatched=!0,e._attatchedCollisionObject=this,this._btColliderObject){o.Physics3D._bullet.btCollisionObject_setCollisionShape(this._btColliderObject,e._btShape);var r=this._simulation&&this._enabled;r&&t&&this._removeFromSimulation(),this._onShapeChange(e),r&&(this._derivePhysicsTransformation(!0),this._addToSimulation())}}else this._simulation&&this._enabled&&t&&this._removeFromSimulation()}get simulation(){return this._simulation}get collisionGroup(){return this._collisionGroup}set collisionGroup(e){this._collisionGroup!==e&&(this._collisionGroup=e,this._simulation&&this._colliderShape&&this._enabled&&(this._removeFromSimulation(),this._addToSimulation()))}get canCollideWith(){return this._canCollideWith}set canCollideWith(e){this._canCollideWith!==e&&(this._canCollideWith=e,this._simulation&&this._colliderShape&&this._enabled&&(this._removeFromSimulation(),this._addToSimulation()))}constructor(e,t){super(),this._restitution=0,this._friction=.5,this._rollingFriction=0,this._ccdMotionThreshold=0,this._ccdSweptSphereRadius=0,this._collisionGroup=i.COLLISIONFILTERGROUP_DEFAULTFILTER,this._canCollideWith=i.COLLISIONFILTERGROUP_ALLFILTER,this._colliderShape=null,this._transformFlag=2147483647,this._controlBySimulation=!1,this._enableProcessCollisions=!0,this._inPhysicUpdateListIndex=-1,this.canScaleShape=!0,this._collisionGroup=e,this._canCollideWith=t,T._physicObjectsMap[this.id]=this}_parseShape(e){var t=e.length;if(1===t){var r=T._creatShape(e[0]);this.colliderShape=r}else{for(var a=new m,n=0;n<t;n++)r=T._creatShape(e[n]),a.addChildShape(r);this.colliderShape=a}}_onScaleChange(e){this._colliderShape._setScale(e)}_onAdded(){this.restitution=this._restitution,this.friction=this._friction,this.rollingFriction=this._rollingFriction,this.ccdMotionThreshold=this._ccdMotionThreshold,this.ccdSweptSphereRadius=this._ccdSweptSphereRadius}_onEnable(){this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged),this._simulation=this.owner._scene.physicsSimulation,o.Physics3D._bullet.btCollisionObject_setContactProcessingThreshold(this._btColliderObject,0),this._colliderShape&&(this._derivePhysicsTransformation(!0),this._addToSimulation())}_onDisable(){this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged),this._colliderShape&&(this._removeFromSimulation(),-1!==this._inPhysicUpdateListIndex&&this._simulation._physicsUpdateList.remove(this)),this._simulation=null}_onDestroy(){delete T._physicObjectsMap[this.id],o.Physics3D._bullet.btCollisionObject_destroy(this._btColliderObject),this._colliderShape&&this._colliderShape.destroy(),this._btColliderObject=null,this._colliderShape=null,this._simulation=null}getPhysicsPosition(){var e=o.Physics3D._bullet,t=this._btColliderObject,r=e.btCollisionObject_getWorldTransform(t),a=e.btTransform_getOrigin(r);let n=e.btVector3_x(a),i=e.btVector3_y(a),s=e.btVector3_z(a);return T._tempVector30.setValue(n,i,s),T._tempVector30}getPhysicsOrientation(){var e=o.Physics3D._bullet,t=this._btColliderObject,r=e.btCollisionObject_getWorldTransform(t),a=e.btTransform_getRotation(r),n=e.btQuaternion_x(a),i=e.btQuaternion_y(a),s=e.btQuaternion_z(a),l=e.btQuaternion_w(a);return T._tempQuaternion0.setValue(n,i,s,l),T._tempQuaternion0}_isValid(){return this._simulation&&this._colliderShape&&this._enabled}_parse(e){null!=e.collisionGroup&&(this.collisionGroup=e.collisionGroup),null!=e.canCollideWith&&(this.canCollideWith=e.canCollideWith),null!=e.ccdMotionThreshold&&(this.ccdMotionThreshold=e.ccdMotionThreshold),null!=e.ccdSweptSphereRadius&&(this.ccdSweptSphereRadius=e.ccdSweptSphereRadius)}_setTransformFlag(e,t){t?this._transformFlag|=e:this._transformFlag&=~e}_getTransformFlag(e){return 0!=(this._transformFlag&e)}_addToSimulation(){}_removeFromSimulation(){}_derivePhysicsTransformation(e){var t=o.Physics3D._bullet,r=this._btColliderObject,a=t.btCollisionObject_getWorldTransform(r);this._innerDerivePhysicsTransformation(a,e),t.btCollisionObject_setWorldTransform(r,a)}_innerDerivePhysicsTransformation(e,r){var a=o.Physics3D._bullet,n=this.owner._transform;if(r||this._getTransformFlag(c.TRANSFORM_WORLDPOSITION)){var i=this._colliderShape.localOffset,s=n.position,l=T._btVector30;if(0!==i.x||0!==i.y||0!==i.z){var h=T._tempVector30,d=n.worldMatrix;t.Vector3.transformCoordinate(i,d,h),a.btVector3_setValue(l,h.x,h.y,h.z)}else a.btVector3_setValue(l,s.x-0,s.y-0,s.z-0);a.btTransform_setOrigin(e,l),this._setTransformFlag(c.TRANSFORM_WORLDPOSITION,!1)}if(r||this._getTransformFlag(c.TRANSFORM_WORLDQUATERNION)){var _=this._colliderShape.localRotation,u=T._btQuaternion0,m=n.rotation;if(0!==_.x||0!==_.y||0!==_.z||1!==_.w){var f=T._tempQuaternion0;T.physicQuaternionMultiply(m.x,m.y,m.z,m.w,_,f),a.btQuaternion_setValue(u,f.x,f.y,f.z,f.w)}else a.btQuaternion_setValue(u,m.x,m.y,m.z,m.w);a.btTransform_setRotation(e,u),this._setTransformFlag(c.TRANSFORM_WORLDQUATERNION,!1)}(r||this._getTransformFlag(c.TRANSFORM_WORLDSCALE))&&(this._onScaleChange(n.getWorldLossyScale()),this._setTransformFlag(c.TRANSFORM_WORLDSCALE,!1))}_updateTransformComponent(e,r=!0,a=0){var n=o.Physics3D._bullet,i=this._colliderShape,s=i.localOffset,l=i.localRotation,h=this.owner._transform;if(h){var c=h.position,d=h.rotation,_=n.btTransform_getOrigin(e);if(r){var u=n.btTransform_getRotation(e),m=n.btQuaternion_x(u),f=n.btQuaternion_y(u),g=n.btQuaternion_z(u),p=n.btQuaternion_w(u);if(0!==l.x||0!==l.y||0!==l.z||1!==l.w){var S=T._tempQuaternion0;l.invert(S),T.physicQuaternionMultiply(m,f,g,p,S,d)}else d.x=m,d.y=f,d.z=g,d.w=p;h.rotation=d}if(0!==s.x||0!==s.y||0!==s.z){var E=n.btCollisionShape_getLocalScaling(i._btShape),A=T._tempVector30;A.x=s.x*n.btVector3_x(E),A.y=s.y*n.btVector3_y(E),A.z=s.z*n.btVector3_z(E),t.Vector3.transformQuat(A,d,A),c.x=n.btVector3_x(_)-A.x,c.y=n.btVector3_y(_)-A.y+a,c.z=n.btVector3_z(_)-A.z}else c.x=n.btVector3_x(_),c.y=n.btVector3_y(_),c.z=n.btVector3_z(_);h.position=c}}_onShapeChange(e){var t=this._btColliderObject,r=o.Physics3D._bullet,a=r.btCollisionObject_getCollisionFlags(t);e.needsCustomCollisionCallback?0==(a&T.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK)&&r.btCollisionObject_setCollisionFlags(t,a|T.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK):(a&T.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK)>0&&r.btCollisionObject_setCollisionFlags(t,a^T.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK)}_onTransformChanged(e){!T._addUpdateList&&this._controlBySimulation||(e&=c.TRANSFORM_WORLDPOSITION|c.TRANSFORM_WORLDQUATERNION|c.TRANSFORM_WORLDSCALE)&&(this._transformFlag|=e,this._isValid()&&-1===this._inPhysicUpdateListIndex&&this._simulation._physicsUpdateList.add(this))}_cloneTo(e){var t=e;t.restitution=this._restitution,t.friction=this._friction,t.rollingFriction=this._rollingFriction,t.ccdMotionThreshold=this._ccdMotionThreshold,t.ccdSweptSphereRadius=this._ccdSweptSphereRadius,t.collisionGroup=this._collisionGroup,t.canCollideWith=this._canCollideWith,t.canScaleShape=this.canScaleShape,this._colliderShape&&(t.colliderShape=this._colliderShape.clone())}}T.ACTIVATIONSTATE_ACTIVE_TAG=1,T.ACTIVATIONSTATE_ISLAND_SLEEPING=2,T.ACTIVATIONSTATE_WANTS_DEACTIVATION=3,T.ACTIVATIONSTATE_DISABLE_DEACTIVATION=4,T.ACTIVATIONSTATE_DISABLE_SIMULATION=5,T.COLLISIONFLAGS_STATIC_OBJECT=1,T.COLLISIONFLAGS_KINEMATIC_OBJECT=2,T.COLLISIONFLAGS_NO_CONTACT_RESPONSE=4,T.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK=8,T.COLLISIONFLAGS_CHARACTER_OBJECT=16,T.COLLISIONFLAGS_DISABLE_VISUALIZE_OBJECT=32,T.COLLISIONFLAGS_DISABLE_SPU_COLLISION_PROCESSING=64,T._tempVector30=new t.Vector3,T._tempQuaternion0=new t.Quaternion,T._tempQuaternion1=new t.Quaternion,T._tempMatrix4x40=new t.Matrix4x4,T._physicObjectsMap={},T._addUpdateList=!0;class E extends T{static __init__(){E._btTempVector30=o.Physics3D._bullet.btVector3_create(0,0,0)}set colliderShape(e){e instanceof p&&(e=null,console.error("CharacterController is not support MeshColliderShape")),super.colliderShape=e}get colliderShape(){return this._colliderShape}get fallSpeed(){return this._fallSpeed}set fallSpeed(e){this._fallSpeed=e,o.Physics3D._bullet.btKinematicCharacterController_setFallSpeed(this._btKinematicCharacter,e)}set pushForce(e){(this._pushForce=e,this._btKinematicCharacter)&&o.Physics3D._bullet.btKinematicCharacterController_setPushForce(this._btKinematicCharacter,e)}get pushForce(){return this._pushForce}get jumpSpeed(){return this._jumpSpeed}set jumpSpeed(e){this._jumpSpeed=e,o.Physics3D._bullet.btKinematicCharacterController_setJumpSpeed(this._btKinematicCharacter,e)}get gravity(){return this._gravity}set gravity(e){this._gravity=e;var t=o.Physics3D._bullet,r=E._btTempVector30;t.btVector3_setValue(r,e.x,e.y,e.z),t.btKinematicCharacterController_setGravity(this._btKinematicCharacter,r)}get maxSlope(){return this._maxSlope}set maxSlope(e){this._maxSlope=e,o.Physics3D._bullet.btKinematicCharacterController_setMaxSlope(this._btKinematicCharacter,e/180*Math.PI)}get isGrounded(){return o.Physics3D._bullet.btKinematicCharacterController_onGround(this._btKinematicCharacter)}get stepHeight(){return this._stepHeight}set stepHeight(e){this._stepHeight=e,o.Physics3D._bullet.btKinematicCharacterController_setStepHeight(this._btKinematicCharacter,e)}get upAxis(){return this._upAxis}set upAxis(e){this._upAxis=e;var t=E._btTempVector30;l._convertToBulletVec3(e,t),o.Physics3D._bullet.btKinematicCharacterController_setUp(this._btKinematicCharacter,t)}get position(){let e=o.Physics3D._bullet,t=e.btKinematicCharacterController_getCurrentPosition(this._btKinematicCharacter);return E.tmpPosition.setValue(e.btVector3_x(t),e.btVector3_y(t),e.btVector3_z(t)),E.tmpPosition}set position(e){o.Physics3D._bullet.btKinematicCharacterController_setCurrentPosition(this._btKinematicCharacter,e.x,e.y,e.z)}get orientation(){let e=o.Physics3D._bullet,t=e.btKinematicCharacterController_getCurrentOrientation(this._btKinematicCharacter);return E.tmpOrientation.setValue(e.btQuaternion_x(t),e.btQuaternion_y(t),e.btQuaternion_z(t),e.btQuaternion_w(t)),E.tmpOrientation}set orientation(e){o.Physics3D._bullet,this._btColliderObject}constructor(e=.1,r=null,a=i.COLLISIONFILTERGROUP_DEFAULTFILTER,n=i.COLLISIONFILTERGROUP_ALLFILTER){super(a,n),this._upAxis=new t.Vector3(0,1,0),this._maxSlope=90,this._jumpSpeed=10,this._fallSpeed=55,this._gravity=new t.Vector3(0,3*-9.8,0),this._btKinematicCharacter=null,this._pushForce=1,this._stepHeight=e,r&&(this._upAxis=r),this._controlBySimulation=!0}setJumpAxis(e,t,r){o.Physics3D._bullet.btKinematicCharacterController_setJumpAxis(this._btKinematicCharacter,e,t,r)}_onAdded(){var e=o.Physics3D._bullet,t=e.btPairCachingGhostObject_create();e.btCollisionObject_setUserIndex(t,this.id),e.btCollisionObject_setCollisionFlags(t,T.COLLISIONFLAGS_CHARACTER_OBJECT),this._btColliderObject=t,this._colliderShape&&this._constructCharacter(),super._onAdded()}_onDestroy(){o.Physics3D._bullet.btKinematicCharacterController_destroy(this._btKinematicCharacter),super._onDestroy(),this._btKinematicCharacter=null}_constructCharacter(){var e=o.Physics3D._bullet;this._btKinematicCharacter&&e.btKinematicCharacterController_destroy(this._btKinematicCharacter);var t=E._btTempVector30;e.btVector3_setValue(t,this._upAxis.x,this._upAxis.y,this._upAxis.z),this._btKinematicCharacter=e.btKinematicCharacterController_create(this._btColliderObject,this._colliderShape._btShape,this._stepHeight,t),this.fallSpeed=this._fallSpeed,this.maxSlope=this._maxSlope,this.jumpSpeed=this._jumpSpeed,this.gravity=this._gravity,this.setJumpAxis(0,1,0),this.pushForce=this._pushForce}_onShapeChange(e){super._onShapeChange(e),this._constructCharacter()}_addToSimulation(){this._simulation._characters.push(this),this._simulation._addCharacter(this,this._collisionGroup,this._canCollideWith)}_removeFromSimulation(){this._simulation._removeCharacter(this);var e=this._simulation._characters;e.splice(e.indexOf(this),1)}getHitFlag(){return o.Physics3D._bullet.btKinematicCharacterController_getHitFlag(this._btKinematicCharacter)}getVerticalVel(){return o.Physics3D._bullet.btKinematicCharacterController_getVerticalVelocity(this._btKinematicCharacter)}getOverlappingObj(e){var t=o.Physics3D._bullet;let r=this._btColliderObject,a=t.btCollisionObject_getNumOverlappingObjects(r);for(let n=0;n<a;n++){let a=t.btCollisionObject_getOverlappingObject(r,n),i=T._physicObjectsMap[t.btCollisionObject_getUserIndex(a)];i&&e(i)}}move(e){var t=E._btVector30,r=o.Physics3D._bullet;r.btVector3_setValue(t,e.x,e.y,e.z),r.btKinematicCharacterController_setWalkDirection(this._btKinematicCharacter,t)}jump(e=null){var t=o.Physics3D._bullet,r=E._btVector30;e?(l._convertToBulletVec3(e,r),t.btKinematicCharacterController_jump(this._btKinematicCharacter,r)):(t.btVector3_setValue(r,0,this._jumpSpeed,0),t.btKinematicCharacterController_jump(this._btKinematicCharacter,r))}get btColliderObject(){return this._btColliderObject}_cloneTo(e){super._cloneTo(e);var t=e;t.stepHeight=this._stepHeight,t.upAxis=this._upAxis,t.maxSlope=this._maxSlope,t.jumpSpeed=this._jumpSpeed,t.fallSpeed=this._fallSpeed,t.gravity=this._gravity}}E.tmpPosition=new t.Vector3,E.tmpOrientation=new t.Quaternion,E.UPAXIS_X=0,E.UPAXIS_Y=1,E.UPAXIS_Z=2;class A extends t.SingletonList{constructor(){super()}add(e){if(-1!==e._inPhysicUpdateListIndex)throw"PhysicsUpdateList:element has  in  PhysicsUpdateList.";this._add(e),e._inPhysicUpdateListIndex=this.length++}remove(e){var t=e._inPhysicUpdateListIndex;if(this.length--,t!==this.length){var r=this.elements[this.length];this.elements[t]=r,r._inPhysicUpdateListIndex=t}e._inPhysicUpdateListIndex=-1}}class x{constructor(){this._idCounter=0,this.colliderA=null,this.colliderB=null,this.distance=0,this.normal=new t.Vector3,this.positionOnA=new t.Vector3,this.positionOnB=new t.Vector3,this._id=++this._idCounter}}class D{constructor(){this.succeeded=!1,this.collider=null,this.point=new t.Vector3,this.normal=new t.Vector3,this.hitFraction=0}}class R{constructor(){this._lastUpdateFrame=-2147483648,this._updateFrame=-2147483648,this._isTrigger=!1,this.contacts=[]}_setUpdateFrame(e){this._lastUpdateFrame=this._updateFrame,this._updateFrame=e}}class C{constructor(){this._hitResultsPoolIndex=0,this._hitResultsPool=[],this._contactPonintsPoolIndex=0,this._contactPointsPool=[],this._collisionsPool=[],this._collisions={}}getHitResult(){var e=this._hitResultsPool[this._hitResultsPoolIndex++];return e||(e=new D,this._hitResultsPool.push(e)),e}recoverAllHitResultsPool(){this._hitResultsPoolIndex=0}getContactPoints(){var e=this._contactPointsPool[this._contactPonintsPoolIndex++];return e||(e=new x,this._contactPointsPool.push(e)),e}recoverAllContactPointsPool(){this._contactPonintsPoolIndex=0}getCollision(e,t){var r,a=e.id,n=t.id,i=this._collisions[a];return i&&(r=i[n]),r||(i||(i={},this._collisions[a]=i),(r=0===this._collisionsPool.length?new R:this._collisionsPool.pop())._colliderA=e,r._colliderB=t,i[n]=r),r}recoverCollision(e){var t=e._colliderA.id,r=e._colliderB.id;this._collisions[t][r]=null,this._collisionsPool.push(e)}garbageCollection(){for(var e in this._hitResultsPoolIndex=0,this._hitResultsPool.length=0,this._contactPonintsPoolIndex=0,this._contactPointsPool.length=0,this._collisionsPool.length=0,this._collisionsPool){var t=this._collisionsPool[e],r=!0;for(var a in t)t[a]?r=!1:delete t[a];r&&delete this._collisionsPool[e]}}}class v{constructor(e){var r;this.worldPos=new t.Vector3,this.worldQuat=new t.Quaternion,this.worldMat=new t.Matrix4x4,this.btWheelPtr=e,this.bt=o.Physics3D._bullet,this.btMemory=null===(r=t.ILaya.Laya.WasmModules.bullet)||void 0===r?void 0:r.memory}set engineForce(e){this.bt.btWheelInfo_setEengineForce(this.btWheelPtr,e)}get engineForce(){return this.bt.btWheelInfo_getEengineForce(this.btWheelPtr)}set steeringValue(e){this.bt.btWheelInfo_setSteeringValue(this.btWheelPtr,e)}get steeringValue(){return this.bt.btWheelInfo_getSteeringValue(this.btWheelPtr)}set brake(e){this.bt.btWheelInfo_setBrake(this.btWheelPtr,e)}get brake(){return this.bt.btWheelInfo_getBrake(this.btWheelPtr)}get rotation(){return this.bt.btWheelInfo_getRrotation(this.btWheelPtr)}get deltaRotation(){return this.bt.btWheelInfo_getDeltaRotation(this.btWheelPtr)}get transform(){let e=this.bt,t=e.btWheelInfo_getWorldTransform(this.btWheelPtr),r=this.worldMat,a=r.elements;if(window.conch){let r=e.btTransform_getOrigin(t),n=e.btTransform_getBasis(t),i=e.btMatrix3x3_getRow(n,0),s=e.btMatrix3x3_getRow(n,1),o=e.btMatrix3x3_getRow(n,2);a[0]=e.btVector3_x(i),a[1]=e.btVector3_x(s),a[2]=e.btVector3_x(o),a[3]=0,a[4]=e.btVector3_y(i),a[5]=e.btVector3_y(s),a[6]=e.btVector3_y(o),a[7]=0,a[8]=e.btVector3_z(i),a[9]=e.btVector3_z(s),a[10]=e.btVector3_z(o),a[11]=0,a[12]=e.btVector3_x(r),a[13]=e.btVector3_y(r),a[14]=e.btVector3_z(r),a[15]=1}else{let e=this.btMemory,r=new Float64Array(e.buffer,t,16);a[0]=r[0],a[1]=r[4],a[2]=r[8],a[3]=0,a[4]=r[1],a[5]=r[5],a[6]=r[9],a[7]=0,a[8]=r[2],a[9]=r[6],a[10]=r[10],a[11]=0,a[12]=r[12],a[13]=r[13],a[14]=r[14],a[15]=1}return r}getWorldTransform(){let e=this.bt,t=e.btWheelInfo_getWorldTransform(this.btWheelPtr),r=e.btTransform_getOrigin(t),a=e.btTransform_getRotation(t);this.worldPos.set(e.btVector3_x(r),e.btVector3_y(r),e.btVector3_z(r)),this.worldQuat.set(e.btQuaternion_x(a),e.btQuaternion_y(a),e.btQuaternion_z(a),e.btQuaternion_w(a))}}class y{constructor(){this.suspensionStiffness=15.88,this.suspensionCompression=.83,this.suspensionDamping=.88,this.maxSuspensionTravelCm=500,this.frictionSlip=10.5,this.maxSuspensionForce=6e3}}class I{constructor(e){this.tuing=new y,this.wheels=[],this.btVehiclePtr=e}addWheel(e,t,r,a,n,i,s,l,h,c){let d=o.Physics3D._bullet,_=this.tuing;this.getNumWheels();let u=d.btRaycastVehicle_addWheel(this.btVehiclePtr,e.x,e.y,e.z,t.x,t.y,t.z,r.x,r.y,r.z,n,a,s||_.suspensionStiffness,_.suspensionCompression,l||_.suspensionDamping,h||_.frictionSlip,i?100*i:_.maxSuspensionTravelCm,_.maxSuspensionForce,c),m=new v(u);this.wheels.push(m);for(let e=0,t=this.wheels.length;e<t;e++){this.wheels[e].btWheelPtr=this.getWheelInfo(e)}return m}getNumWheels(){return o.Physics3D._bullet.btRaycastVehicle_getNumWheels(this.btVehiclePtr)}getWheelInfo(e){return o.Physics3D._bullet.btRaycastVehicle_getWheelInfo(this.btVehiclePtr,e)}}class M{static __init__(){var e=o.Physics3D._bullet;M._btTempVector30=e.btVector3_create(0,0,0),M._btTempVector31=e.btVector3_create(0,0,0),M._btTempQuaternion0=e.btQuaternion_create(0,0,0,1),M._btTempQuaternion1=e.btQuaternion_create(0,0,0,1),M._btTempTransform0=e.btTransform_create(),M._btTempTransform1=e.btTransform_create()}static createConstraint(){}get continuousCollisionDetection(){return o.Physics3D._bullet.btCollisionWorld_get_m_useContinuous(this._btDispatchInfo)}set continuousCollisionDetection(e){o.Physics3D._bullet.btCollisionWorld_set_m_useContinuous(this._btDispatchInfo,e)}get gravity(){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";return this._gravity}set gravity(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";this._gravity=e;var t=o.Physics3D._bullet,r=M._btTempVector30;t.btVector3_setValue(r,e.x,e.y,e.z),t.btDiscreteDynamicsWorld_setGravity(this._btDiscreteDynamicsWorld,r)}get speculativeContactRestitution(){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot Cannot perform this action when the physics engine is set to CollisionsOnly";return o.Physics3D._bullet.btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(this._btDiscreteDynamicsWorld)}set speculativeContactRestitution(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot Cannot perform this action when the physics engine is set to CollisionsOnly";o.Physics3D._bullet.btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(this._btDiscreteDynamicsWorld,e)}constructor(e){this._updateCount=0,this._gravity=new t.Vector3(0,-10,0),this._btVector3Zero=o.Physics3D._bullet.btVector3_create(0,0,0),this._btDefaultQuaternion=o.Physics3D._bullet.btQuaternion_create(0,0,0,-1),this._collisionsUtils=new C,this._previousFrameCollisions=[],this._currentFrameCollisions=[],this._currentConstraint={},this._physicsUpdateList=new A,this._characters=[],this._updatedRigidbodies=0,this.maxSubSteps=1,this.fixedTimeStep=1/60,this.dt=1/60,this.maxSubSteps=e.maxSubSteps,this.fixedTimeStep=e.fixedTimeStep;var r=o.Physics3D._bullet;this._btCollisionConfiguration=r.btDefaultCollisionConfiguration_create(),this._btDispatcher=r.btCollisionDispatcher_create(this._btCollisionConfiguration),this._btBroadphase=r.btDbvtBroadphase_create(),r.btOverlappingPairCache_setInternalGhostPairCallback(r.btDbvtBroadphase_getOverlappingPairCache(this._btBroadphase),r.btGhostPairCallback_create());var a=e.flags;if(a&M.PHYSICSENGINEFLAGS_COLLISIONSONLY)this._btCollisionWorld=new r.btCollisionWorld(this._btDispatcher,this._btBroadphase,this._btCollisionConfiguration);else{if(a&M.PHYSICSENGINEFLAGS_SOFTBODYSUPPORT)throw"PhysicsSimulation:SoftBody processing is not yet available";var n=r.btSequentialImpulseConstraintSolver_create();this._btDiscreteDynamicsWorld=r.btDiscreteDynamicsWorld_create(this._btDispatcher,this._btBroadphase,n,this._btCollisionConfiguration),this._btCollisionWorld=this._btDiscreteDynamicsWorld}this._btDiscreteDynamicsWorld&&(this._btSolverInfo=r.btDynamicsWorld_getSolverInfo(this._btDiscreteDynamicsWorld),this._btDispatchInfo=r.btCollisionWorld_getDispatchInfo(this._btDiscreteDynamicsWorld)),this._btClosestRayResultCallback=r.ClosestRayResultCallback_create(this._btVector3Zero,this._btVector3Zero),this._btAllHitsRayResultCallback=r.AllHitsRayResultCallback_create(this._btVector3Zero,this._btVector3Zero),this._btClosestConvexResultCallback=r.ClosestConvexResultCallback_create(this._btVector3Zero,this._btVector3Zero),this._btAllConvexResultCallback=r.AllConvexResultCallback_create(this._btVector3Zero,this._btVector3Zero),r.btGImpactCollisionAlgorithm_RegisterAlgorithm(this._btDispatcher)}enableDebugDrawer(e){o.Physics3D._bullet.btDynamicsWorld_enableDebugDrawer(this._btDiscreteDynamicsWorld,e)}_simulate(e){this._updatedRigidbodies=0,this.dt=e;var t=o.Physics3D._bullet;this._btDiscreteDynamicsWorld?t.btDiscreteDynamicsWorld_stepSimulation(this._btDiscreteDynamicsWorld,e,this.maxSubSteps,this.fixedTimeStep):t.PerformDiscreteCollisionDetection(this._btCollisionWorld),this._updateCount++}_destroy(){var e=o.Physics3D._bullet;this._btDiscreteDynamicsWorld?(e.btCollisionWorld_destroy(this._btDiscreteDynamicsWorld),this._btDiscreteDynamicsWorld=null):(e.btCollisionWorld_destroy(this._btCollisionWorld),this._btCollisionWorld=null),e.btDbvtBroadphase_destroy(this._btBroadphase),this._btBroadphase=null,e.btCollisionDispatcher_destroy(this._btDispatcher),this._btDispatcher=null,e.btDefaultCollisionConfiguration_destroy(this._btCollisionConfiguration),this._btCollisionConfiguration=null}_addPhysicsCollider(e,t,r){o.Physics3D._bullet.btCollisionWorld_addCollisionObject(this._btCollisionWorld,e._btColliderObject,t,r)}_removePhysicsCollider(e){o.Physics3D._bullet.btCollisionWorld_removeCollisionObject(this._btCollisionWorld,e._btColliderObject)}_addRigidBody(e,t,r){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";o.Physics3D._bullet.btDiscreteDynamicsWorld_addRigidBody(this._btCollisionWorld,e._btColliderObject,t,r)}_removeRigidBody(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";o.Physics3D._bullet.btDiscreteDynamicsWorld_removeRigidBody(this._btCollisionWorld,e._btColliderObject)}_addCharacter(e,t,r){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";var a=o.Physics3D._bullet;a.btCollisionWorld_addCollisionObject(this._btCollisionWorld,e._btColliderObject,t,r),a.btDynamicsWorld_addAction(this._btCollisionWorld,e._btKinematicCharacter)}_removeCharacter(e){if(!this._btDiscreteDynamicsWorld)throw"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly";var t=o.Physics3D._bullet;t.btCollisionWorld_removeCollisionObject(this._btCollisionWorld,e._btColliderObject),t.btDynamicsWorld_removeAction(this._btCollisionWorld,e._btKinematicCharacter)}raycastFromTo(e,t,r=null,a=i.COLLISIONFILTERGROUP_ALLFILTER,n=i.COLLISIONFILTERGROUP_ALLFILTER){var s=o.Physics3D._bullet,l=this._btClosestRayResultCallback,h=M._btTempVector30,c=M._btTempVector31;if(s.btVector3_setValue(h,e.x,e.y,e.z),s.btVector3_setValue(c,t.x,t.y,t.z),s.ClosestRayResultCallback_set_m_rayFromWorld(l,h),s.ClosestRayResultCallback_set_m_rayToWorld(l,c),s.RayResultCallback_set_m_collisionFilterGroup(l,a),s.RayResultCallback_set_m_collisionFilterMask(l,n),s.RayResultCallback_set_m_collisionObject(l,null),s.RayResultCallback_set_m_closestHitFraction(l,1),s.btCollisionWorld_rayTest(this._btCollisionWorld,h,c,l),s.RayResultCallback_hasHit(l)){if(r){r.succeeded=!0,r.collider=T._physicObjectsMap[s.btCollisionObject_getUserIndex(s.RayResultCallback_get_m_collisionObject(l))],r.hitFraction=s.RayResultCallback_get_m_closestHitFraction(l);var d=s.ClosestRayResultCallback_get_m_hitPointWorld(l),_=r.point;_.x=s.btVector3_x(d),_.y=s.btVector3_y(d),_.z=s.btVector3_z(d);var u=s.ClosestRayResultCallback_get_m_hitNormalWorld(l),m=r.normal;m.x=s.btVector3_x(u),m.y=s.btVector3_y(u),m.z=s.btVector3_z(u)}return!0}return r&&(r.succeeded=!1),!1}raycastAllFromTo(e,t,r,a=i.COLLISIONFILTERGROUP_ALLFILTER,n=i.COLLISIONFILTERGROUP_ALLFILTER){var s=o.Physics3D._bullet,l=this._btAllHitsRayResultCallback,h=M._btTempVector30,c=M._btTempVector31;r.length=0,s.btVector3_setValue(h,e.x,e.y,e.z),s.btVector3_setValue(c,t.x,t.y,t.z),s.AllHitsRayResultCallback_set_m_rayFromWorld(l,h),s.AllHitsRayResultCallback_set_m_rayToWorld(l,c),s.RayResultCallback_set_m_collisionFilterGroup(l,a),s.RayResultCallback_set_m_collisionFilterMask(l,n);var d=s.AllHitsRayResultCallback_get_m_collisionObjects(l),_=s.AllHitsRayResultCallback_get_m_hitPointWorld(l),u=s.AllHitsRayResultCallback_get_m_hitNormalWorld(l),m=s.AllHitsRayResultCallback_get_m_hitFractions(l);s.tBtCollisionObjectArray_clear(d),s.tVector3Array_clear(_),s.tVector3Array_clear(u),s.tScalarArray_clear(m),s.btCollisionWorld_rayTest(this._btCollisionWorld,h,c,l);var f=s.tBtCollisionObjectArray_size(d);if(f>0){this._collisionsUtils.recoverAllHitResultsPool();for(var g=0;g<f;g++){var p=this._collisionsUtils.getHitResult();r.push(p),p.succeeded=!0,p.collider=T._physicObjectsMap[s.btCollisionObject_getUserIndex(s.tBtCollisionObjectArray_at(d,g))],p.hitFraction=s.tScalarArray_at(m,g);var S=s.tVector3Array_at(_,g),E=p.point;E.x=s.btVector3_x(S),E.y=s.btVector3_y(S),E.z=s.btVector3_z(S);var A=s.tVector3Array_at(u,g),x=p.normal;x.x=s.btVector3_x(A),x.y=s.btVector3_y(A),x.z=s.btVector3_z(A)}return!0}return!1}rayCast(e,r=null,a=2147483647,n=i.COLLISIONFILTERGROUP_ALLFILTER,s=i.COLLISIONFILTERGROUP_ALLFILTER){var o=e.origin,l=M._tempVector30;return t.Vector3.normalize(e.direction,l),t.Vector3.scale(l,a,l),t.Vector3.add(o,l,l),this.raycastFromTo(o,l,r,n,s)}rayCastAll(e,r,a=2147483647,n=i.COLLISIONFILTERGROUP_ALLFILTER,s=i.COLLISIONFILTERGROUP_ALLFILTER){var o=e.origin,l=M._tempVector30;return t.Vector3.normalize(e.direction,l),t.Vector3.scale(l,a,l),t.Vector3.add(o,l,l),this.raycastAllFromTo(o,l,r,n,s)}shapeCast(e,t,r,a=null,n=null,s=null,l=i.COLLISIONFILTERGROUP_ALLFILTER,h=i.COLLISIONFILTERGROUP_ALLFILTER,c=0){var d=o.Physics3D._bullet,_=this._btClosestConvexResultCallback,u=M._btTempVector30,m=M._btTempVector31,f=M._btTempQuaternion0,g=M._btTempQuaternion1,p=M._btTempTransform0,S=M._btTempTransform1,E=e._btShape;if(d.btVector3_setValue(u,t.x,t.y,t.z),d.btVector3_setValue(m,r.x,r.y,r.z),d.ConvexResultCallback_set_m_collisionFilterGroup(_,l),d.ConvexResultCallback_set_m_collisionFilterMask(_,h),d.btTransform_setOrigin(p,u),d.btTransform_setOrigin(S,m),n?(d.btQuaternion_setValue(f,n.x,n.y,n.z,n.w),d.btTransform_setRotation(p,f)):d.btTransform_setRotation(p,this._btDefaultQuaternion),s?(d.btQuaternion_setValue(g,s.x,s.y,s.z,s.w),d.btTransform_setRotation(S,g)):d.btTransform_setRotation(S,this._btDefaultQuaternion),d.ClosestConvexResultCallback_set_m_hitCollisionObject(_,null),d.ConvexResultCallback_set_m_closestHitFraction(_,1),d.btCollisionWorld_convexSweepTest(this._btCollisionWorld,E,p,S,_,c),d.ConvexResultCallback_hasHit(_)){if(a){a.succeeded=!0,a.collider=T._physicObjectsMap[d.btCollisionObject_getUserIndex(d.ClosestConvexResultCallback_get_m_hitCollisionObject(_))],a.hitFraction=d.ConvexResultCallback_get_m_closestHitFraction(_);var A=d.ClosestConvexResultCallback_get_m_hitPointWorld(_),x=d.ClosestConvexResultCallback_get_m_hitNormalWorld(_),D=a.point,R=a.normal;D.x=d.btVector3_x(A),D.y=d.btVector3_y(A),D.z=d.btVector3_z(A),R.x=d.btVector3_x(x),R.y=d.btVector3_y(x),R.z=d.btVector3_z(x)}return!0}return a&&(a.succeeded=!1),!1}shapeCastAll(e,t,r,a,n=null,s=null,l=i.COLLISIONFILTERGROUP_ALLFILTER,h=i.COLLISIONFILTERGROUP_ALLFILTER,c=0){var d=o.Physics3D._bullet,_=this._btAllConvexResultCallback,u=M._btTempVector30,m=M._btTempVector31,f=M._btTempQuaternion0,g=M._btTempQuaternion1,p=M._btTempTransform0,S=M._btTempTransform1,E=e._btShape;a.length=0,d.btVector3_setValue(u,t.x,t.y,t.z),d.btVector3_setValue(m,r.x,r.y,r.z),d.ConvexResultCallback_set_m_collisionFilterGroup(_,l),d.ConvexResultCallback_set_m_collisionFilterMask(_,h),d.btTransform_setOrigin(p,u),d.btTransform_setOrigin(S,m),n?(d.btQuaternion_setValue(f,n.x,n.y,n.z,n.w),d.btTransform_setRotation(p,f)):d.btTransform_setRotation(p,this._btDefaultQuaternion),s?(d.btQuaternion_setValue(g,s.x,s.y,s.z,s.w),d.btTransform_setRotation(S,g)):d.btTransform_setRotation(S,this._btDefaultQuaternion);var A=d.AllConvexResultCallback_get_m_collisionObjects(_),x=d.AllConvexResultCallback_get_m_hitPointWorld(_),D=d.AllConvexResultCallback_get_m_hitNormalWorld(_),R=d.AllConvexResultCallback_get_m_hitFractions(_);d.tVector3Array_clear(x),d.tVector3Array_clear(D),d.tScalarArray_clear(R),d.tBtCollisionObjectArray_clear(A),d.btCollisionWorld_convexSweepTest(this._btCollisionWorld,E,p,S,_,c);var C=d.tBtCollisionObjectArray_size(A);if(C>0){this._collisionsUtils.recoverAllHitResultsPool();for(var v=0;v<C;v++){var y=this._collisionsUtils.getHitResult();a.push(y),y.succeeded=!0,y.collider=T._physicObjectsMap[d.btCollisionObject_getUserIndex(d.tBtCollisionObjectArray_at(A,v))],y.hitFraction=d.tScalarArray_at(R,v);var I=d.tVector3Array_at(x,v),L=y.point;L.x=d.btVector3_x(I),L.y=d.btVector3_y(I),L.z=d.btVector3_z(I);var O=d.tVector3Array_at(D,v),b=y.normal;b.x=d.btVector3_x(O),b.y=d.btVector3_y(O),b.z=d.btVector3_z(O)}return!0}return!1}addConstraint(e,t=!1){if(!this._btDiscreteDynamicsWorld)throw"Cannot perform this action when the physics engine is set to CollisionsOnly";o.Physics3D._bullet.btCollisionWorld_addConstraint(this._btDiscreteDynamicsWorld,e._btConstraint,t),this._currentConstraint[e.id]=e}removeConstraint(e){if(!this._btDiscreteDynamicsWorld)throw"Cannot perform this action when the physics engine is set to CollisionsOnly";o.Physics3D._bullet.btCollisionWorld_removeConstraint(this._btDiscreteDynamicsWorld,e._btConstraint),delete this._currentConstraint[e.id]}setHitsRayResultCallbackFlag(e=1){var t=o.Physics3D._bullet;t.RayResultCallback_set_m_flags(this._btAllHitsRayResultCallback,e),t.RayResultCallback_set_m_flags(this._btClosestRayResultCallback,e)}_updatePhysicsTransformFromRender(){for(var e=this._physicsUpdateList.elements,t=0,r=this._physicsUpdateList.length;t<r;t++){var a=e[t];a._derivePhysicsTransformation(!1),a._inPhysicUpdateListIndex=-1}this._physicsUpdateList.length=0}_updateCharacters(){let e=o.Physics3D._bullet;for(var t=0,r=this._characters.length;t<r;t++){var a=this._characters[t];a._updateTransformComponent(e.btCollisionObject_getWorldTransform(a._btColliderObject),!1,.04)}}_updateCollisions(){this._collisionsUtils.recoverAllContactPointsPool();var e=this._currentFrameCollisions;this._currentFrameCollisions=this._previousFrameCollisions,this._currentFrameCollisions.length=0,this._previousFrameCollisions=e;var r=this._updateCount,a=o.Physics3D._bullet,n=a.btDispatcher_getNumManifolds(this._btDispatcher);for(let e=0;e<n;e++){var i=a.btDispatcher_getManifoldByIndexInternal(this._btDispatcher,e),s=T._physicObjectsMap[a.btCollisionObject_getUserIndex(a.btPersistentManifold_getBody0(i))],l=T._physicObjectsMap[a.btCollisionObject_getUserIndex(a.btPersistentManifold_getBody1(i))];if(s.id>l.id){let e=s;s=l,l=e}var h,c=null,d=null;if(s.isTrigger||l.isTrigger){if(s.owner._getBit(t.NodeFlags.PROCESS_TRIGGERS)||l.owner._getBit(t.NodeFlags.PROCESS_TRIGGERS)){var _=a.btPersistentManifold_getNumContacts(i);for(let e=0;e<_;e++){var u=a.btPersistentManifold_getContactPoint(i,e),m=a.btManifoldPoint_getDistance(u);if(m<=0){d=(c=this._collisionsUtils.getCollision(s,l)).contacts,(h=c._updateFrame!==r)&&(c._isTrigger=!0,d.length=0);break}}}}else if((s.owner._getBit(t.NodeFlags.PROCESS_COLLISIONS)||l.owner._getBit(t.NodeFlags.PROCESS_COLLISIONS))&&(s._enableProcessCollisions||l._enableProcessCollisions)){_=a.btPersistentManifold_getNumContacts(i);for(let e=0;e<_;e++)if(u=a.btPersistentManifold_getContactPoint(i,e),(m=a.btManifoldPoint_getDistance(u))<=0){var f=this._collisionsUtils.getContactPoints();f.colliderA=s,f.colliderB=l,f.distance=m;var g=a.btManifoldPoint_get_m_normalWorldOnB(u),p=f.normal;p.x=a.btVector3_x(g),p.y=a.btVector3_y(g),p.z=a.btVector3_z(g);var S=a.btManifoldPoint_get_m_positionWorldOnA(u),A=f.positionOnA;A.x=a.btVector3_x(S),A.y=a.btVector3_y(S),A.z=a.btVector3_z(S);var x=a.btManifoldPoint_get_m_positionWorldOnB(u),D=f.positionOnB;D.x=a.btVector3_x(x),D.y=a.btVector3_y(x),D.z=a.btVector3_z(x),c||(d=(c=this._collisionsUtils.getCollision(s,l)).contacts,(h=c._updateFrame!==r)&&(c._isTrigger=!1,d.length=0)),d.push(f)}}c&&h&&(this._currentFrameCollisions.push(c),c._setUpdateFrame(r))}for(var R=0,C=this._characters.length;R<C;R++){var v=this._characters[R];v.getOverlappingObj((e=>{if(e instanceof E)return;let t=v,a=e;v.id>e.id&&(t=e,a=v);let n=this._collisionsUtils.getCollision(t,a);if(n._updateFrame===r)return;let i=n.contacts;i.length=1,n._setUpdateFrame(r);var s=this._collisionsUtils.getContactPoints();s.colliderA=t,s.colliderB=a,s.distance=0,i[0]=s,this._currentFrameCollisions.push(n)}))}}dispatchCollideEvent(){let e=this._updateCount;for(let r=0,a=this._currentFrameCollisions.length;r<a;r++){let a=this._currentFrameCollisions[r],n=a._colliderA,i=a._colliderB;if(n.destroyed||i.destroyed)continue;let s=n.owner,o=i.owner;e-a._lastUpdateFrame==1?a._isTrigger?(s.event(t.Event.TRIGGER_STAY,i),o.event(t.Event.TRIGGER_STAY,n)):(a.other=i,s.event(t.Event.COLLISION_STAY,a),a.other=n,o.event(t.Event.COLLISION_STAY,a)):a._isTrigger?(s.event(t.Event.TRIGGER_ENTER,i),o.event(t.Event.TRIGGER_ENTER,n)):(a.other=i,s.event(t.Event.COLLISION_ENTER,a),a.other=n,o.event(t.Event.COLLISION_ENTER,a))}for(let r=0,a=this._previousFrameCollisions.length;r<a;r++){let a=this._previousFrameCollisions[r],n=a._colliderA,i=a._colliderB;if(n.destroyed||i.destroyed)continue;let s=n.owner,o=i.owner;e-a._updateFrame==1&&(this._collisionsUtils.recoverCollision(a),a._isTrigger?(s.event(t.Event.TRIGGER_EXIT,i),o.event(t.Event.TRIGGER_EXIT,n)):(a.other=i,s.event(t.Event.COLLISION_EXIT,a),a.other=n,o.event(t.Event.COLLISION_EXIT,a)))}for(let e in this._currentConstraint){let r=this._currentConstraint[e];if(r.enabled&&r._isBreakConstrained()){let e=r.ownBody.owner,a=r.connectedBody.owner;e.event(t.Event.JOINT_BREAK),a.event(t.Event.JOINT_BREAK)}}}clearForces(){if(!this._btDiscreteDynamicsWorld)throw"Cannot perform this action when the physics engine is set to CollisionsOnly";o.Physics3D._bullet.btDiscreteDynamicsWorld_clearForces(this._btDiscreteDynamicsWorld)}createRaycastVehicle(e){let t=o.Physics3D._bullet,r=t.btRaycastVehicle_create(this._btDiscreteDynamicsWorld,e._btColliderObject);return t.btCollisionObject_forceActivationState(e._btColliderObject,T.ACTIVATIONSTATE_DISABLE_DEACTIVATION),new I(r)}addVehicle(e){o.Physics3D._bullet.btDynamicsWorld_addAction(this._btDiscreteDynamicsWorld,e.btVehiclePtr)}removeVehicle(e){o.Physics3D._bullet.btDynamicsWorld_removeAction(e.btVehiclePtr)}sphereQuery(e,t,r,a=i.COLLISIONFILTERGROUP_ALLFILTER){let n=o.Physics3D._bullet;this._btPairCachingGhost||(this._btPairCachingGhost=n.btPairCachingGhostObject_create(),this._btTransform=n.btTransform_create(),this._btVec=n.btVector3_create(0,0,0),this._btSphereShape=n.btSphereShape_create(1)),r.length=0;let s=this._btSphereShape;n.btSphereShpae_setUnscaledRadius(s,t);let l=this._btPairCachingGhost,h=this._btTransform,c=this._btVec;n.btVector3_setValue(c,e.x,e.y,e.z),n.btTransform_setIdentity(h),n.btTransform_setOrigin(h,c),n.btCollisionObject_setCollisionShape(l,s),n.btCollisionObject_setWorldTransform(l,h),n.btCollisionWorld_addCollisionObject(this._btDiscreteDynamicsWorld,l,-1,-1);let d=n.btCollisionObject_getNumOverlappingObjects(l);for(let e=0;e<d;e++){let t=n.btCollisionObject_getOverlappingObject(l,e),i=T._physicObjectsMap[n.btCollisionObject_getUserIndex(t)];i.collisionGroup&a&&r.push(i)}n.btCollisionWorld_removeCollisionObject(this._btDiscreteDynamicsWorld,l)}}M.PHYSICSENGINEFLAGS_NONE=0,M.PHYSICSENGINEFLAGS_COLLISIONSONLY=1,M.PHYSICSENGINEFLAGS_SOFTBODYSUPPORT=2,M.PHYSICSENGINEFLAGS_MULTITHREADED=4,M.PHYSICSENGINEFLAGS_USEHARDWAREWHENPOSSIBLE=8,M.SOLVERMODE_RANDMIZE_ORDER=1,M.SOLVERMODE_FRICTION_SEPARATE=2,M.SOLVERMODE_USE_WARMSTARTING=4,M.SOLVERMODE_USE_2_FRICTION_DIRECTIONS=16,M.SOLVERMODE_ENABLE_FRICTION_DIRECTION_CACHING=32,M.SOLVERMODE_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION=64,M.SOLVERMODE_CACHE_FRIENDLY=128,M.SOLVERMODE_SIMD=256,M.SOLVERMODE_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS=512,M.SOLVERMODE_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS=1024,M.HITSRAYRESULTCALLBACK_FLAG_NONE=0,M.HITSRAYRESULTCALLBACK_FLAG_FILTERBACKFACESS=1,M.HITSRAYRESULTCALLBACK_FLAG_KEEPUNFILIPPEDNORMAL=2,M.HITSRAYRESULTCALLBACK_FLAG_USESUBSIMPLEXCONVEXCASTRAYTEST=4,M.HITSRAYRESULTCALLBACK_FLAG_USEGJKCONVEXCASTRAYTEST=8,M.HITSRAYRESULTCALLBACK_FLAG_TERMINATOR=4294967295,M._tempVector30=new t.Vector3,M.disableSimulation=!1;class L extends T{get isTrigger(){return this._isTrigger}set isTrigger(e){this._isTrigger=e;var t=o.Physics3D._bullet;if(this._btColliderObject){var r=t.btCollisionObject_getCollisionFlags(this._btColliderObject);e?0==(r&T.COLLISIONFLAGS_NO_CONTACT_RESPONSE)&&t.btCollisionObject_setCollisionFlags(this._btColliderObject,r|T.COLLISIONFLAGS_NO_CONTACT_RESPONSE):0!=(r&T.COLLISIONFLAGS_NO_CONTACT_RESPONSE)&&t.btCollisionObject_setCollisionFlags(this._btColliderObject,r^T.COLLISIONFLAGS_NO_CONTACT_RESPONSE)}}constructor(e,t){super(e,t),this._isTrigger=!1}_onAdded(){super._onAdded(),this.isTrigger=this._isTrigger}_cloneTo(e){super._cloneTo(e),e.isTrigger=this._isTrigger}}class O extends L{static __init__(){var e=o.Physics3D._bullet;O._btTempVector30=e.btVector3_create(0,0,0),O._btTempVector31=e.btVector3_create(0,0,0),O._btVector3Zero=e.btVector3_create(0,0,0),O._btInertia=e.btVector3_create(0,0,0),O._btImpulse=e.btVector3_create(0,0,0),O._btImpulseOffset=e.btVector3_create(0,0,0),O._btGravity=e.btVector3_create(0,0,0),O._btTransform0=e.btTransform_create()}get mass(){return this._mass}set mass(e){e=Math.max(e,1e-7),this._mass=e,this._isKinematic||this._updateMass(e)}getCollisionFlags(){var e=o.Physics3D._bullet;return this._btColliderObject?e.btCollisionObject_getCollisionFlags(this._btColliderObject):0}get isKinematic(){return this._isKinematic}set isKinematic(e){this._isKinematic=e,this._controlBySimulation=!e;var t=o.Physics3D._bullet,r=!!(this._simulation&&this._enabled&&this._colliderShape);r&&this._removeFromSimulation();var a=this._btColliderObject,n=t.btCollisionObject_getCollisionFlags(a);e?(n|=T.COLLISIONFLAGS_KINEMATIC_OBJECT,t.btCollisionObject_setCollisionFlags(a,n),t.btCollisionObject_forceActivationState(this._btColliderObject,T.ACTIVATIONSTATE_DISABLE_DEACTIVATION),this._enableProcessCollisions=!1,this._updateMass(0)):((n&T.COLLISIONFLAGS_KINEMATIC_OBJECT)>0&&(n^=T.COLLISIONFLAGS_KINEMATIC_OBJECT),t.btCollisionObject_setCollisionFlags(a,n),t.btCollisionObject_setActivationState(this._btColliderObject,T.ACTIVATIONSTATE_ACTIVE_TAG),this._enableProcessCollisions=!0,this._updateMass(this._mass));var i=O._btVector3Zero;t.btCollisionObject_setInterpolationLinearVelocity(a,i),t.btRigidBody_setLinearVelocity(a,i),t.btCollisionObject_setInterpolationAngularVelocity(a,i),t.btRigidBody_setAngularVelocity(a,i),r&&this._addToSimulation()}get linearDamping(){return this._linearDamping}set linearDamping(e){this._linearDamping=e,this._btColliderObject&&o.Physics3D._bullet.btRigidBody_setDamping(this._btColliderObject,e,this._angularDamping)}get angularDamping(){return this._angularDamping}set angularDamping(e){this._angularDamping=e,this._btColliderObject&&o.Physics3D._bullet.btRigidBody_setDamping(this._btColliderObject,this._linearDamping,e)}get overrideGravity(){return this._overrideGravity}set overrideGravity(e){this._overrideGravity=e;var t=o.Physics3D._bullet;if(this._btColliderObject){var r=t.btRigidBody_getFlags(this._btColliderObject);e?0==(r&O._BT_DISABLE_WORLD_GRAVITY)&&t.btRigidBody_setFlags(this._btColliderObject,r|O._BT_DISABLE_WORLD_GRAVITY):(r&O._BT_DISABLE_WORLD_GRAVITY)>0&&t.btRigidBody_setFlags(this._btColliderObject,r^O._BT_DISABLE_WORLD_GRAVITY)}}get gravity(){var e=o.Physics3D._bullet;return O._btGravity=e.btRigidBody_getGravity(this._btColliderObject),l._convertToLayaVec3(O._btGravity,this._gravity),this._gravity}set gravity(e){this._gravity=e;var t=o.Physics3D._bullet;t.btVector3_setValue(O._btGravity,e.x,e.y,e.z),t.btRigidBody_setGravity(this._btColliderObject,O._btGravity)}get totalForce(){if(this._btColliderObject){var e=o.Physics3D._bullet.btRigidBody_getTotalForce(this._btColliderObject);return l._convertToLayaVec3(e,this._totalForce),this._totalForce}return null}get linearFactor(){return this._linearFactor}set linearFactor(e){this._linearFactor=e;var t=O._btTempVector30;l._convertToBulletVec3(e,t),o.Physics3D._bullet.btRigidBody_setLinearFactor(this._btColliderObject,t)}get linearVelocity(){return this._btColliderObject&&l._convertToLayaVec3(o.Physics3D._bullet.btRigidBody_getLinearVelocity(this._btColliderObject),this._linearVelocity),this._linearVelocity}set linearVelocity(e){if(this._linearVelocity=e,this._btColliderObject){var t=O._btTempVector30;l._convertToBulletVec3(e,t),this.isSleeping&&this.wakeUp(),o.Physics3D._bullet.btRigidBody_setLinearVelocity(this._btColliderObject,t)}}get angularFactor(){return this._angularFactor}set angularFactor(e){this._angularFactor=e;var t=O._btTempVector30;l._convertToBulletVec3(e,t),o.Physics3D._bullet.btRigidBody_setAngularFactor(this._btColliderObject,t)}get angularVelocity(){return this._btColliderObject&&l._convertToLayaVec3(o.Physics3D._bullet.btRigidBody_getAngularVelocity(this._btColliderObject),this._angularVelocity),this._angularVelocity}set angularVelocity(e){if(this._angularVelocity=e,this._btColliderObject){var t=O._btTempVector30;l._convertToBulletVec3(e,t),this.isSleeping&&this.wakeUp(),o.Physics3D._bullet.btRigidBody_setAngularVelocity(this._btColliderObject,t)}}get totalTorque(){if(this._btColliderObject){var e=o.Physics3D._bullet.btRigidBody_getTotalTorque(this._btColliderObject);return l._convertToLayaVec3(e,this._totalTorque),this._totalTorque}return null}get detectCollisions(){return this._detectCollisions}set detectCollisions(e){this._detectCollisions!==e&&(this._detectCollisions=e,this._colliderShape&&this._enabled&&this._simulation&&(this._simulation._removeRigidBody(this),this._simulation._addRigidBody(this,this._collisionGroup,e?this._canCollideWith:0)))}get isSleeping(){return!!this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_getActivationState(this._btColliderObject)===T.ACTIVATIONSTATE_ISLAND_SLEEPING}get sleepLinearVelocity(){return o.Physics3D._bullet.btRigidBody_getLinearSleepingThreshold(this._btColliderObject)}set sleepLinearVelocity(e){var t=o.Physics3D._bullet;t.btRigidBody_setSleepingThresholds(this._btColliderObject,e,t.btRigidBody_getAngularSleepingThreshold(this._btColliderObject))}get sleepAngularVelocity(){return o.Physics3D._bullet.btRigidBody_getAngularSleepingThreshold(this._btColliderObject)}set sleepAngularVelocity(e){var t=o.Physics3D._bullet;t.btRigidBody_setSleepingThresholds(this._btColliderObject,t.btRigidBody_getLinearSleepingThreshold(this._btColliderObject),e)}get btColliderObject(){return this._btColliderObject}set position(e){var t=o.Physics3D._bullet,r=this._btColliderObject;t.btRigidBody_setCenterOfMassPos(r,e.x,e.y,e.z)}get position(){return this.getPhysicsPosition()}set orientation(e){var t=o.Physics3D._bullet,r=this._btColliderObject;t.btRigidBody_setCenterOfMassOrientation(r,e.x,e.y,e.z,e.w)}get orientation(){return this.getPhysicsOrientation()}constructor(e=i.COLLISIONFILTERGROUP_DEFAULTFILTER,r=i.COLLISIONFILTERGROUP_ALLFILTER){super(e,r),this._isKinematic=!1,this._mass=1,this._gravity=new t.Vector3(0,-10,0),this._angularDamping=0,this._linearDamping=0,this._overrideGravity=!1,this._totalTorque=new t.Vector3(0,0,0),this._totalForce=new t.Vector3(0,0,0),this._linearVelocity=new t.Vector3,this._angularVelocity=new t.Vector3,this._linearFactor=new t.Vector3(1,1,1),this._angularFactor=new t.Vector3(1,1,1),this._detectCollisions=!0,this._controlBySimulation=!0}_updateMass(e){if(this._btColliderObject&&this._colliderShape&&this._colliderShape._btShape){var t=o.Physics3D._bullet;t.btCollisionShape_calculateLocalInertia(this._colliderShape._btShape,e,O._btInertia),t.btRigidBody_setMassProps(this._btColliderObject,e,O._btInertia),t.btRigidBody_updateInertiaTensor(this._btColliderObject)}}_onScaleChange(e){super._onScaleChange(e),this._updateMass(this._isKinematic?0:this._mass)}_derivePhysicsTransformation(e){var t=o.Physics3D._bullet,r=this._btColliderObject,a=t.btCollisionObject_getWorldTransform(r),n=O._btTransform0;t.btTransform_equal(n,a),this._innerDerivePhysicsTransformation(n,e),t.btRigidBody_setCenterOfMassTransform(r,n)}_initRigidbody(e){var t=o.Physics3D._bullet,r=t.layaMotionState_create();t.layaMotionState_set_rigidBodyID(r,e),this._btLayaMotionState=r;var a=t.btRigidBodyConstructionInfo_create(0,r,null,O._btVector3Zero),n=t.btRigidBody_create(a);t.btCollisionObject_setUserIndex(n,this.id),this._btColliderObject=n,t.btRigidBodyConstructionInfo_destroy(a)}_onAdded(){this._initRigidbody(this.id),super._onAdded(),this.mass=this._mass,this.linearFactor=this._linearFactor,this.angularFactor=this._angularFactor,this.linearDamping=this._linearDamping,this.angularDamping=this._angularDamping,this.overrideGravity=this._overrideGravity,this.gravity=this._gravity,this.isKinematic=this._isKinematic}_onDestroy(){o.Physics3D._bullet.btMotionState_destroy(this._btLayaMotionState),super._onDestroy(),this._btLayaMotionState=null,this._gravity=null,this._totalTorque=null,this._linearVelocity=null,this._angularVelocity=null,this._linearFactor=null,this._angularFactor=null}set colliderShape(e){e instanceof p&&(e=null,console.error("RigidBody3D is not support MeshColliderShape")),super.colliderShape=e}get colliderShape(){return this._colliderShape}_onShapeChange(e){if(super._onShapeChange(e),!(this.mass<=0))if(this._isKinematic)this._updateMass(0);else{var t=o.Physics3D._bullet;t.btRigidBody_setCenterOfMassTransform(this._btColliderObject,t.btCollisionObject_getWorldTransform(this._btColliderObject)),this._updateMass(this._mass)}}_parse(e){if(null!=e.friction&&(this.friction=e.friction),null!=e.rollingFriction&&(this.rollingFriction=e.rollingFriction),null!=e.restitution&&(this.restitution=e.restitution),null!=e.isTrigger&&(this.isTrigger=e.isTrigger),null!=e.mass&&(this.mass=e.mass),null!=e.linearDamping&&(this.linearDamping=e.linearDamping),null!=e.angularDamping&&(this.angularDamping=e.angularDamping),null!=e.overrideGravity&&(this.overrideGravity=e.overrideGravity),null!=e.linearFactor){var t=this.linearFactor;t.fromArray(e.linearFactor),this.linearFactor=t}if(null!=e.angularFactor){var r=this.angularFactor;r.fromArray(e.angularFactor),this.angularFactor=r}e.gravity&&(this.gravity.fromArray(e.gravity),this.gravity=this.gravity),super._parse(e),this._parseShape(e.shapes),null!=e.isKinematic&&(this.isKinematic=e.isKinematic)}_addToSimulation(){this._simulation._addRigidBody(this,this._collisionGroup,this._detectCollisions?this._canCollideWith:0)}_removeFromSimulation(){this._simulation._removeRigidBody(this)}_cloneTo(e){super._cloneTo(e);var t=e;t.isKinematic=this._isKinematic,t.mass=this._mass,t.gravity=this._gravity,t.angularDamping=this._angularDamping,t.linearDamping=this._linearDamping,t.overrideGravity=this._overrideGravity,t.linearVelocity=this._linearVelocity,t.angularVelocity=this._angularVelocity,t.linearFactor=this._linearFactor,t.angularFactor=this._angularFactor,t.detectCollisions=this._detectCollisions}applyForce(e,t=null){this.applyForceXYZ(e.x,e.y,e.z,t)}applyForceXYZ(e,t,r,a=null){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var n=o.Physics3D._bullet,i=O._btTempVector30;if(n.btVector3_setValue(i,e,t,r),this.wakeUp(),a){var s=O._btTempVector31;n.btVector3_setValue(s,a.x,a.y,a.z),n.btRigidBody_applyForce(this._btColliderObject,i,s)}else n.btRigidBody_applyCentralForce(this._btColliderObject,i)}setCollisionFlags(e){var t=o.Physics3D._bullet,r=!(!this._simulation||!this._enabled);r&&this._removeFromSimulation(),3&e?(this._isKinematic=!0,this._simulation&&this._updateMass(0)):this._simulation&&this._updateMass(this._mass),t.btCollisionObject_setCollisionFlags(this._btColliderObject,e),r&&this._addToSimulation()}applyTorque(e){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var t=o.Physics3D._bullet,r=O._btTempVector30;this.wakeUp(),t.btVector3_setValue(r,e.x,e.y,e.z),t.btRigidBody_applyTorque(this._btColliderObject,r)}applyImpulse(e,t=null){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var r=o.Physics3D._bullet;r.btVector3_setValue(O._btImpulse,e.x,e.y,e.z),this.wakeUp(),t?(r.btVector3_setValue(O._btImpulseOffset,t.x,t.y,t.z),r.btRigidBody_applyImpulse(this._btColliderObject,O._btImpulse,O._btImpulseOffset)):r.btRigidBody_applyCentralImpulse(this._btColliderObject,O._btImpulse)}applyTorqueImpulse(e){if(null==this._btColliderObject)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var t=o.Physics3D._bullet,r=O._btTempVector30;this.wakeUp(),t.btVector3_setValue(r,e.x,e.y,e.z),t.btRigidBody_applyTorqueImpulse(this._btColliderObject,r)}wakeUp(){this._btColliderObject&&o.Physics3D._bullet.btCollisionObject_activate(this._btColliderObject,!1)}clearForces(){var e=this._btColliderObject;if(null==e)throw"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.";var t=o.Physics3D._bullet;t.btRigidBody_clearForces(e);var r=O._btVector3Zero;t.btCollisionObject_setInterpolationLinearVelocity(e,r),t.btRigidBody_setLinearVelocity(e,r),t.btCollisionObject_setInterpolationAngularVelocity(e,r),t.btRigidBody_setAngularVelocity(e,r)}}O.TYPE_STATIC=0,O.TYPE_DYNAMIC=1,O.TYPE_KINEMATIC=2,O._BT_DISABLE_WORLD_GRAVITY=1,O._BT_ENABLE_GYROPSCOPIC_FORCE=2;class b extends d{static __init__(){b._btNormal=o.Physics3D._bullet.btVector3_create(0,0,0)}constructor(e,t){super(),this._normal=e,this._offset=t,this._type=d.SHAPETYPES_STATICPLANE;var r=o.Physics3D._bullet;r.btVector3_setValue(b._btNormal,-e.x,e.y,e.z),this._btShape=r.btStaticPlaneShape_create(b._btNormal,t)}clone(){var e=new b(this._normal,this._offset);return this.cloneTo(e),e}}class w{static __bulletinit__(){this._bullet=window.Physics3D,this._bullet&&(b.__init__(),d.__init__(),m.__init__(),T.__init__(),M.__init__(),_.__init__(),g.__init__(),E.__init__(),O.__init__())}}w._bullet=null,w._cannon=null,w._enablePhysics=!1;class B{constructor(){this._ownerPath=[],this._propertys=[],this._keyFrames=[]}get ownerPathCount(){return this._ownerPath.length}get propertyCount(){return this._propertys.length}get keyFramesCount(){return this._keyFrames.length}_setOwnerPathCount(e){this._ownerPath.length=e}_setOwnerPathByIndex(e,t){this._ownerPath[e]=t}_joinOwnerPath(e){return this._ownerPath.join(e)}_setPropertyCount(e){this._propertys.length=e}_setPropertyByIndex(e,t){this._propertys[e]=t}_joinProperty(e){return this._propertys.join(e)}_setKeyframeCount(e){this._keyFrames.length=e}_setKeyframeByIndex(e,t){this._keyFrames[e]=t}getOwnerPathByIndex(e){return this._ownerPath[e]}getPropertyByIndex(e){return this._propertys[e]}getKeyframeByIndex(e){return this._keyFrames[e]}}class N{constructor(){}}var V,P,F,U,G;e.WeightedMode=void 0,(V=e.WeightedMode||(e.WeightedMode={}))[V.None=0]="None",V[V.In=1]="In",V[V.Out=2]="Out",V[V.Both=3]="Both";class H{constructor(){}cloneTo(e){e.time=this.time}clone(){var e=new H;return this.cloneTo(e),e}}H.defaultWeight=.33333;class z extends H{constructor(){super(),this.inWeight=H.defaultWeight,this.outWeight=H.defaultWeight,this.weightedMode=e.WeightedMode.None}cloneTo(e){super.cloneTo(e);var t=e;t.inTangent=this.inTangent,t.outTangent=this.outTangent,t.value=this.value,t.inTangent=this.inTangent,t.outTangent=this.outTangent,t.value=this.value,t.inWeight=this.inWeight,t.outWeight=this.outWeight,t.weightedMode=this.weightedMode}clone(){let e=new z;return this.cloneTo(e),e}}class k extends H{constructor(){super(),this.inTangent=new t.Vector4,this.outTangent=new t.Vector4,this.value=new t.Quaternion,this.inWeight=new t.Vector4,this.outWeight=new t.Vector4,this.weightedMode=new t.Vector4}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode)}}class W extends H{constructor(){super(),this.inTangent=new t.Vector3,this.outTangent=new t.Vector3,this.value=new t.Vector3,this.inWeight=new t.Vector3(H.defaultWeight,H.defaultWeight,H.defaultWeight),this.outWeight=new t.Vector3(H.defaultWeight,H.defaultWeight,H.defaultWeight),this.weightedMode=new t.Vector3(e.WeightedMode.None,e.WeightedMode.None,e.WeightedMode.None)}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode)}}class Y{static READ_DATA(){Y._DATA.offset=Y._reader.getUint32(),Y._DATA.size=Y._reader.getUint32()}static READ_BLOCK(){for(var e=Y._BLOCK.count=Y._reader.getUint16(),t=Y._BLOCK.blockStarts=[],r=Y._BLOCK.blockLengths=[],a=0;a<e;a++)t.push(Y._reader.getUint32()),r.push(Y._reader.getUint32())}static READ_STRINGS(){var e=Y._reader.getUint32(),t=Y._reader.getUint16(),r=Y._reader.pos;Y._reader.pos=e+Y._DATA.offset;for(var a=0;a<t;a++)Y._strings[a]=Y._reader.readUTFString();Y._reader.pos=r}static parse(e,t){Y._animationClip=e,Y._reader=t,Y.READ_DATA(),Y.READ_BLOCK(),Y.READ_STRINGS();for(var r=0,a=Y._BLOCK.count;r<a;r++){var n=t.getUint16(),i=Y._strings[n],s=Y["READ_"+i];if(null==s)throw new Error("model file err,no this function:"+n+" "+i);s.call(null)}}static READ_ANIMATIONS(){var e,t,r,a=Y._reader,n=[],i=a.getUint16();for(n.length=i,e=0;e<i;e++)n[e]=a.getFloat32();var s=Y._animationClip;s.name=Y._strings[a.getUint16()];var o=s._duration=a.getFloat32();s.islooping=!!a.getByte(),s._frameRate=a.getInt16();var l=a.getInt16(),h=s._nodes;h.count=l;var c=s._nodesMap={},d=s._nodesDic={};for(e=0;e<l;e++){r=new B,h.setNodeByIndex(e,r),r._indexInList=e;var _=r.type=a.getUint8(),u=a.getUint16();for(r._setOwnerPathCount(u),t=0;t<u;t++)r._setOwnerPathByIndex(t,Y._strings[a.getUint16()]);var m=r._joinOwnerPath("/"),f=c[m];f||(c[m]=f=[]),f.push(r),r.propertyOwner=Y._strings[a.getUint16()];var g=a.getUint16();for(r._setPropertyCount(g),t=0;t<g;t++)r._setPropertyByIndex(t,Y._strings[a.getUint16()]);var p=m+"."+r.propertyOwner+"."+r._joinProperty(".");d[p]=r,r.fullPath=p;var S=a.getUint16();for(r._setKeyframeCount(S),t=0;t<S;t++)switch(_){case 0:var T=new z;r._setKeyframeByIndex(t,T),T.time=n[a.getUint16()],T.inTangent=a.getFloat32(),T.outTangent=a.getFloat32(),T.value=a.getFloat32();break;case 1:case 3:case 4:var E=new W;r._setKeyframeByIndex(t,E),E.time=n[a.getUint16()];var A=E.inTangent,x=E.outTangent,D=E.value;A.x=a.getFloat32(),A.y=a.getFloat32(),A.z=a.getFloat32(),x.x=a.getFloat32(),x.y=a.getFloat32(),x.z=a.getFloat32(),D.x=a.getFloat32(),D.y=a.getFloat32(),D.z=a.getFloat32();break;case 2:var R=new k;r._setKeyframeByIndex(t,R),R.time=n[a.getUint16()];var C=R.inTangent,v=R.outTangent,y=R.value;C.x=a.getFloat32(),C.y=a.getFloat32(),C.z=a.getFloat32(),C.w=a.getFloat32(),v.x=a.getFloat32(),v.y=a.getFloat32(),v.z=a.getFloat32(),v.w=a.getFloat32(),y.x=a.getFloat32(),y.y=a.getFloat32(),y.z=a.getFloat32(),y.w=a.getFloat32();break;default:throw"AnimationClipParser03:unknown type."}}var I=a.getUint16();for(e=0;e<I;e++){var M=new N;M.time=Math.min(o,a.getFloat32()),M.eventName=Y._strings[a.getUint16()];var L=[],O=a.getUint16();for(O>0&&(M.params=L=[]),t=0;t<O;t++){switch(a.getByte()){case 0:L.push(!!a.getByte());break;case 1:L.push(a.getInt32());break;case 2:L.push(a.getFloat32());break;case 3:L.push(Y._strings[a.getUint16()]);break;default:throw new Error("unknown type.")}}s.addEvent(M)}}}Y._strings=[],Y._BLOCK={count:0},Y._DATA={offset:0,size:0};class X extends H{constructor(){super(),this.inTangent=new t.Vector2,this.outTangent=new t.Vector2,this.value=new t.Vector2,this.inWeight=new t.Vector2(H.defaultWeight,H.defaultWeight),this.outWeight=new t.Vector2(H.defaultWeight,H.defaultWeight),this.weightedMode=new t.Vector2(e.WeightedMode.None,e.WeightedMode.None)}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode)}}class j extends H{constructor(){super(),this.inTangent=new t.Vector4,this.outTangent=new t.Vector4,this.value=new t.Vector4,this.inWeight=new t.Vector4(H.defaultWeight,H.defaultWeight,H.defaultWeight,H.defaultWeight),this.outWeight=new t.Vector4(H.defaultWeight,H.defaultWeight,H.defaultWeight,H.defaultWeight),this.weightedMode=new t.Vector4(e.WeightedMode.None,e.WeightedMode.None,e.WeightedMode.None,e.WeightedMode.None)}cloneTo(e){super.cloneTo(e);var t=e;this.inTangent.cloneTo(t.inTangent),this.outTangent.cloneTo(t.outTangent),this.value.cloneTo(t.value),this.inWeight.cloneTo(t.inWeight),this.outWeight.cloneTo(t.outWeight),this.weightedMode.cloneTo(t.weightedMode)}}e.KeyFrameValueType=void 0,(P=e.KeyFrameValueType||(e.KeyFrameValueType={}))[P.Float=0]="Float",P[P.Position=1]="Position",P[P.Rotation=2]="Rotation",P[P.Scale=3]="Scale",P[P.RotationEuler=4]="RotationEuler",P[P.Vector2=5]="Vector2",P[P.Vector3=6]="Vector3",P[P.Vector4=7]="Vector4",P[P.Color=8]="Color";class Q{constructor(){this.indexInList=-1,this.referenceCount=0,this.updateMark=-1,this.type=-1,this.fullPath=null,this.nodePath=null,this.propertyOwner=null,this.property=null,this.defaultValue=null,this.value=null,this.crossFixedValue=null,this.isMaterial=!1}saveCrossFixedValue(){if(this.propertyOwner)switch(this.type){case 0:this.crossFixedValue=this.value;break;case 1:case 3:case 4:case 2:this.value.cloneTo(this.crossFixedValue);break;default:throw"Animator:unknown type."}}}class K{static READ_DATA(){K._DATA.offset=K._reader.getUint32(),K._DATA.size=K._reader.getUint32()}static READ_BLOCK(){for(var e=K._BLOCK.count=K._reader.getUint16(),t=K._BLOCK.blockStarts=[],r=K._BLOCK.blockLengths=[],a=0;a<e;a++)t.push(K._reader.getUint32()),r.push(K._reader.getUint32())}static READ_STRINGS(){var e=K._reader.getUint32(),t=K._reader.getUint16(),r=K._reader.pos;K._reader.pos=e+K._DATA.offset;for(var a=0;a<t;a++)K._strings[a]=K._reader.readUTFString();K._reader.pos=r}static parse(e,t,r){K._animationClip=e,K._reader=t,K._version=r,K.READ_DATA(),K.READ_BLOCK(),K.READ_STRINGS();for(var a=0,n=K._BLOCK.count;a<n;a++){var i=t.getUint16(),s=K._strings[i],o=K["READ_"+s];if(null==o)throw new Error("model file err,no this function:"+i+" "+s);o.call(null)}K._version=null,K._reader=null,K._animationClip=null}static READ_ANIMATIONS(){var r,a,n,i=K._reader,s=[],o=i.getUint16();for(s.length=o,r=0;r<o;r++)s[r]=i.getFloat32();var l=K._animationClip;l.name=K._strings[i.getUint16()];var h=l._duration=i.getFloat32();l.islooping=!!i.getByte(),l._frameRate=i.getInt16();var c=i.getInt16(),d=l._nodes;d.count=c;var _=l._nodesMap={},u=l._nodesDic={};for(r=0;r<c;r++){n=new B,d.setNodeByIndex(r,n),n._indexInList=r;var m=n.type=i.getUint8(),f=i.getUint16();for(n._setOwnerPathCount(f),a=0;a<f;a++)n._setOwnerPathByIndex(a,K._strings[i.getUint16()]);var g=n._joinOwnerPath("/"),p=_[g];p||(_[g]=p=[]),p.push(n),n.propertyOwner=K._strings[i.getUint16()];var S=i.getUint16();for(n._setPropertyCount(S),a=0;a<S;a++)n._setPropertyByIndex(a,K._strings[i.getUint16()]);var T=g+"."+n.propertyOwner+"."+n._joinProperty(".");u[T]=n,n.fullPath=T,n.nodePath=g;var E=i.getUint16();switch(n._setKeyframeCount(E),K._version){case"LAYAANIMATION:04":for(a=0;a<E;a++)switch(m){case e.KeyFrameValueType.Float:var A=new z;n._setKeyframeByIndex(a,A),A.time=s[i.getUint16()],A.inTangent=i.getFloat32(),A.outTangent=i.getFloat32(),A.value=i.getFloat32();break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:var x=new W;n._setKeyframeByIndex(a,x),x.time=s[i.getUint16()];var D=x.inTangent,R=x.outTangent,C=x.value;D.x=i.getFloat32(),D.y=i.getFloat32(),D.z=i.getFloat32(),R.x=i.getFloat32(),R.y=i.getFloat32(),R.z=i.getFloat32(),C.x=i.getFloat32(),C.y=i.getFloat32(),C.z=i.getFloat32();break;case e.KeyFrameValueType.Rotation:var v=new k;n._setKeyframeByIndex(a,v),v.time=s[i.getUint16()];var y=v.inTangent,I=v.outTangent,M=v.value;y.x=i.getFloat32(),y.y=i.getFloat32(),y.z=i.getFloat32(),y.w=i.getFloat32(),I.x=i.getFloat32(),I.y=i.getFloat32(),I.z=i.getFloat32(),I.w=i.getFloat32(),M.x=i.getFloat32(),M.y=i.getFloat32(),M.z=i.getFloat32(),M.w=i.getFloat32();break;case e.KeyFrameValueType.Vector2:var L=new X;n._setKeyframeByIndex(a,L),L.time=s[i.getUint16()];var O=L.inTangent,b=L.outTangent,w=L.value;O.x=i.getFloat32(),O.y=i.getFloat32(),b.x=i.getFloat32(),b.y=i.getFloat32(),w.x=i.getFloat32(),w.y=i.getFloat32();break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:var V=new j;n._setKeyframeByIndex(a,V),V.time=s[i.getUint16()];var P=V.inTangent,F=V.outTangent,U=V.value;P.x=i.getFloat32(),P.y=i.getFloat32(),P.z=i.getFloat32(),P.w=i.getFloat32(),F.x=i.getFloat32(),F.y=i.getFloat32(),F.z=i.getFloat32(),F.w=i.getFloat32(),U.x=i.getFloat32(),U.y=i.getFloat32(),U.z=i.getFloat32(),U.w=i.getFloat32();break;default:throw"AnimationClipParser04:unknown type."}break;case"LAYAANIMATION:WEIGHT_04":for(a=0;a<E;a++)switch(m){case e.KeyFrameValueType.Float:A=new z;n._setKeyframeByIndex(a,A),A.time=s[i.getUint16()],A.inTangent=i.getFloat32(),A.outTangent=i.getFloat32(),A.value=i.getFloat32(),A.weightedMode=i.getUint8(),A.inWeight=i.getFloat32(),A.outWeight=i.getFloat32();break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:x=new W;n._setKeyframeByIndex(a,x),x.time=s[i.getUint16()];D=x.inTangent,R=x.outTangent,C=x.value;let t=x.weightedMode,r=x.inWeight,o=x.outWeight;D.x=i.getFloat32(),D.y=i.getFloat32(),D.z=i.getFloat32(),R.x=i.getFloat32(),R.y=i.getFloat32(),R.z=i.getFloat32(),C.x=i.getFloat32(),C.y=i.getFloat32(),C.z=i.getFloat32(),t.x=i.getUint8(),t.y=i.getUint8(),t.z=i.getUint8(),r.x=i.getFloat32(),r.y=i.getFloat32(),r.z=i.getFloat32(),o.x=i.getFloat32(),o.y=i.getFloat32(),o.z=i.getFloat32();break;case e.KeyFrameValueType.Rotation:v=new k;n._setKeyframeByIndex(a,v),v.time=s[i.getUint16()];y=v.inTangent,I=v.outTangent,M=v.value;let l=v.weightedMode,h=v.inWeight,c=v.outWeight;y.x=i.getFloat32(),y.y=i.getFloat32(),y.z=i.getFloat32(),y.w=i.getFloat32(),I.x=i.getFloat32(),I.y=i.getFloat32(),I.z=i.getFloat32(),I.w=i.getFloat32(),M.x=i.getFloat32(),M.y=i.getFloat32(),M.z=i.getFloat32(),M.w=i.getFloat32(),l.x=i.getUint8(),l.y=i.getUint8(),l.z=i.getUint8(),l.w=i.getUint8(),h.x=i.getFloat32(),h.y=i.getFloat32(),h.z=i.getFloat32(),h.w=i.getFloat32(),c.x=i.getFloat32(),c.y=i.getFloat32(),c.z=i.getFloat32(),c.w=i.getFloat32();break;case e.KeyFrameValueType.Vector2:L=new X;n._setKeyframeByIndex(a,L),L.time=s[i.getUint16()];O=L.inTangent,b=L.outTangent,w=L.value;let d=L.weightedMode,_=L.inWeight,u=L.outWeight;O.x=i.getFloat32(),O.y=i.getFloat32(),b.x=i.getFloat32(),b.y=i.getFloat32(),w.x=i.getFloat32(),w.y=i.getFloat32(),d.x=i.getUint8(),d.y=i.getUint8(),_.x=i.getFloat32(),_.y=i.getFloat32(),u.x=i.getFloat32(),u.y=i.getFloat32();break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:V=new j;n._setKeyframeByIndex(a,V),V.time=s[i.getUint16()];P=V.inTangent,F=V.outTangent,U=V.value;var G=V.weightedMode,H=V.inWeight,Y=V.outWeight;P.x=i.getFloat32(),P.y=i.getFloat32(),P.z=i.getFloat32(),P.w=i.getFloat32(),F.x=i.getFloat32(),F.y=i.getFloat32(),F.z=i.getFloat32(),F.w=i.getFloat32(),U.x=i.getFloat32(),U.y=i.getFloat32(),U.z=i.getFloat32(),U.w=i.getFloat32(),G.x=i.getUint8(),G.y=i.getUint8(),G.z=i.getUint8(),G.w=i.getUint8(),H.x=i.getFloat32(),H.y=i.getFloat32(),H.z=i.getFloat32(),H.w=i.getFloat32(),Y.x=i.getFloat32(),Y.y=i.getFloat32(),Y.z=i.getFloat32(),Y.w=i.getFloat32();break;default:throw"AnimationClipParser04:unknown type."}break;case"LAYAANIMATION:COMPRESSION_04":for(a=0;a<E;a++)switch(m){case e.KeyFrameValueType.Float:A=new z,n._setKeyframeByIndex(a,A),A.time=s[i.getUint16()],A.inTangent=t.HalfFloatUtils.convertToNumber(i.getUint16()),A.outTangent=t.HalfFloatUtils.convertToNumber(i.getUint16()),A.value=t.HalfFloatUtils.convertToNumber(i.getUint16());break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:x=new W,n._setKeyframeByIndex(a,x),x.time=s[i.getUint16()],D=x.inTangent,R=x.outTangent,C=x.value,D.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),D.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),D.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),R.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),R.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),R.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),C.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),C.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),C.z=t.HalfFloatUtils.convertToNumber(i.getUint16());break;case e.KeyFrameValueType.Rotation:v=new k,n._setKeyframeByIndex(a,v),v.time=s[i.getUint16()],y=v.inTangent,I=v.outTangent,M=v.value,y.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),y.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),y.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),y.w=t.HalfFloatUtils.convertToNumber(i.getUint16()),I.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),I.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),I.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),I.w=t.HalfFloatUtils.convertToNumber(i.getUint16()),M.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),M.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),M.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),M.w=t.HalfFloatUtils.convertToNumber(i.getUint16());break;case e.KeyFrameValueType.Vector2:L=new X;n._setKeyframeByIndex(a,L),L.time=s[i.getUint16()];O=L.inTangent,b=L.outTangent,w=L.value;O.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),O.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),b.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),b.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),w.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),w.y=t.HalfFloatUtils.convertToNumber(i.getUint16());break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:V=new j;n._setKeyframeByIndex(a,V),V.time=s[i.getUint16()];P=V.inTangent,F=V.outTangent,U=V.value;P.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),P.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),P.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),P.w=t.HalfFloatUtils.convertToNumber(i.getUint16()),F.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),F.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),F.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),F.w=t.HalfFloatUtils.convertToNumber(i.getUint16()),U.x=t.HalfFloatUtils.convertToNumber(i.getUint16()),U.y=t.HalfFloatUtils.convertToNumber(i.getUint16()),U.z=t.HalfFloatUtils.convertToNumber(i.getUint16()),U.w=t.HalfFloatUtils.convertToNumber(i.getUint16());break;default:throw"AnimationClipParser04:unknown type."}}}var Q=i.getUint16();for(r=0;r<Q;r++){var q=new N;q.time=Math.min(h,i.getFloat32()),q.eventName=K._strings[i.getUint16()];var Z=[],J=i.getUint16();for(J>0&&(q.params=Z=[]),a=0;a<J;a++){switch(i.getByte()){case 0:Z.push(!!i.getByte());break;case 1:Z.push(i.getInt32());break;case 2:Z.push(i.getFloat32());break;case 3:Z.push(K._strings[i.getUint16()]);break;default:throw new Error("unknown type.")}}l.addEvent(q)}}}K._strings=[],K._BLOCK={count:0},K._DATA={offset:0,size:0};class q{get count(){return this._nodes.length}set count(e){this._nodes.length=e}constructor(){this._nodes=[]}getNodeByIndex(e){return this._nodes[e]}setNodeByIndex(e,t){this._nodes[e]=t}}class Z extends t.Resource{static _parse(e){var r=new Z,a=new t.Byte(e),n=a.readUTFString();switch(n){case"LAYAANIMATION:03":Y.parse(r,a);break;case"LAYAANIMATION:04":case"LAYAANIMATION:COMPRESSION_04":case"LAYAANIMATION:WEIGHT_04":K.parse(r,a,n);break;default:throw"unknown animationClip version."}return r}static load(e,r){t.ILaya.loader.load(e,r,null,t.Loader.ANIMATIONCLIP)}duration(){return this._duration}constructor(){super(),this._duration=0,this._frameRate=0,this._nodes=new q,this.islooping=!1,this._animationEvents=[]}_weightModeHermite(t,r){return 0==(t&e.WeightedMode.Out)&&0==(r&e.WeightedMode.In)}_hermiteInterpolate(e,t,r,a){var n=e.outTangent,i=t.inTangent;if(Number.isFinite(n)&&Number.isFinite(i)){var s=r*r,o=s*r,l=o-2*s+r,h=o-s,c=-2*o+3*s;return(2*o-3*s+1)*e.value+l*n*a+h*i*a+c*t.value}return e.value}_hermiteInterpolateVector3(e,t,r,a,n){var i=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=r*r,c=h*r,d=2*c-3*h+1,_=c-2*h+r,u=c-h,m=-2*c+3*h,f=s.x,g=l.x;this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(g)?n.x=d*i.x+_*f*a+u*g*a+m*o.x:n.x=i.x:n.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,r),f=s.y,g=l.y,this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(g)?n.y=d*i.y+_*f*a+u*g*a+m*o.y:n.y=i.y:n.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,r),f=s.z,g=l.z,this._weightModeHermite(e.weightedMode.z,t.weightedMode.z)?Number.isFinite(f)&&Number.isFinite(g)?n.z=d*i.z+_*f*a+u*g*a+m*o.z:n.z=i.z:n.z=this._hermiteCurveSplineWeight(e.value.z,e.time,e.outWeight.z,e.outTangent.z,t.value.z,t.time,t.inWeight.z,t.inTangent.z,r)}_hermiteInterpolateQuaternion(e,t,r,a,n){var i=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=r*r,c=h*r,d=2*c-3*h+1,_=c-2*h+r,u=c-h,m=-2*c+3*h,f=s.x,g=l.x;this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(g)?n.x=d*i.x+_*f*a+u*g*a+m*o.x:n.x=i.x:n.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,r),f=s.y,g=l.y,this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(g)?n.y=d*i.y+_*f*a+u*g*a+m*o.y:n.y=i.y:n.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,r),f=s.z,g=l.z,this._weightModeHermite(e.weightedMode.z,t.weightedMode.z)?Number.isFinite(f)&&Number.isFinite(g)?n.z=d*i.z+_*f*a+u*g*a+m*o.z:n.z=i.z:n.z=this._hermiteCurveSplineWeight(e.value.z,e.time,e.outWeight.z,e.outTangent.z,t.value.z,t.time,t.inWeight.z,t.inTangent.z,r),f=s.w,g=l.w,this._weightModeHermite(e.weightedMode.w,t.weightedMode.w)?Number.isFinite(f)&&Number.isFinite(g)?n.w=d*i.w+_*f*a+u*g*a+m*o.w:n.w=i.w:n.w=this._hermiteCurveSplineWeight(e.value.w,e.time,e.outWeight.w,e.outTangent.w,t.value.w,t.time,t.inWeight.w,t.inTangent.w,r)}_hermiteInterpolateVector4(e,t,r,a,n){var i=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=r*r,c=h*r,d=2*c-3*h+1,_=c-2*h+r,u=c-h,m=-2*c+3*h,f=s.x,g=l.x;this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(g)?n.x=d*i.x+_*f*a+u*g*a+m*o.x:n.x=i.x:n.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,r),f=s.y,g=l.y,this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(g)?n.y=d*i.y+_*f*a+u*g*a+m*o.y:n.y=i.y:n.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,r),f=s.z,g=l.z,this._weightModeHermite(e.weightedMode.z,t.weightedMode.z)?Number.isFinite(f)&&Number.isFinite(g)?n.z=d*i.z+_*f*a+u*g*a+m*o.z:n.z=i.z:n.z=this._hermiteCurveSplineWeight(e.value.z,e.time,e.outWeight.z,e.outTangent.z,t.value.z,t.time,t.inWeight.z,t.inTangent.z,r),f=s.w,g=l.w,this._weightModeHermite(e.weightedMode.w,t.weightedMode.w)?Number.isFinite(f)&&Number.isFinite(g)?n.w=d*i.w+_*f*a+u*g*a+m*o.w:n.w=i.w:n.w=this._hermiteCurveSplineWeight(e.value.w,e.time,e.outWeight.w,e.outTangent.w,t.value.w,t.time,t.inWeight.w,t.inTangent.w,r)}_hermiteInterpolateVector2(e,t,r,a,n){var i=e.value,s=e.outTangent,o=t.value,l=t.inTangent,h=r*r,c=h*r,d=2*c-3*h+1,_=c-2*h+r,u=c-h,m=-2*c+3*h,f=s.x,g=l.x;this._weightModeHermite(e.weightedMode.x,t.weightedMode.x)?Number.isFinite(f)&&Number.isFinite(g)?n.x=d*i.x+_*f*a+u*g*a+m*o.x:n.x=i.x:n.x=this._hermiteCurveSplineWeight(e.value.x,e.time,e.outWeight.x,e.outTangent.x,t.value.x,t.time,t.inWeight.x,t.inTangent.x,r),f=s.y,g=l.y,this._weightModeHermite(e.weightedMode.y,t.weightedMode.y)?Number.isFinite(f)&&Number.isFinite(g)?n.y=d*i.y+_*f*a+u*g*a+m*o.y:n.y=i.y:n.y=this._hermiteCurveSplineWeight(e.value.y,e.time,e.outWeight.y,e.outTangent.y,t.value.y,t.time,t.inWeight.y,t.inTangent.y,r)}_hermiteCurveSplineWeight(e,t,r,a,n,i,s,o,l){let h=222e-18,c=l,d=e,_=r,u=s,m=i-t,f=n-d;f=Math.max(Math.abs(f),h)*(f<0?-1:1);let g=a,p=o;if(!Number.isFinite(g)||!Number.isFinite(p))return e;g=g*m/f,p=p*m/f;let S=1-u,T=.5,E=0;if(Math.abs(_-.33333334)<1e-4&&Math.abs(u-.33333334)<1e-4)T=c,E=1-T;else for(;;){E=1-T;let e=3*E*E*T*_+3*E*T*T*S+T*T*T-c;if(Math.abs(e)<=2.5*h)break;let t=3*E*E*_+6*E*T*(S-_)+3*T*T*(1-S),r=6*E*(S-2*_)+6*T*(1-2*S+_);T-=(6*e*t*t-3*e*e*r)/(6*t*t*t-6*e*t*r+e*e*(18*_-18*S+6))}return(3*E*E*T*_*g+3*E*T*T*(1-u*p)+T*T*T)*f+d}_curveInterpolate(e,t,r,a){return this._weightModeHermite(e.weightedMode,t.weightedMode)?this._hermiteInterpolate(e,t,r,a):this._hermiteCurveSplineWeight(e.value,e.time,e.outWeight,e.outTangent,t.value,t.time,t.inWeight,t.inTangent,r)}_evaluateClipDatasRealTime(r,a,n,i,s,o,h){for(var c=0,d=r.count;c<d;c++){var _,u=r.getNodeByIndex(c),m=u.type,f=u._keyFrames,g=f.length,p=n[c];if(!h||h.getTransformActive(u.nodePath)){if(s)for(-1!==p&&a<f[p].time&&(p=-1,n[c]=p),_=p+1;_<g&&!(f[_].time>a);)p++,_++,n[c]=p;else for((_=p+1)!==g&&a>f[_].time&&(p=g-1,n[c]=p),_=p+1;p>-1&&!(f[p].time<a);)p--,_--,n[c]=p;var S=_===g;switch(m){case e.KeyFrameValueType.Float:if(-1!==p){var T=f[p];if(S)o[c]=T.value;else{var E,A=f[_],x=A.time-T.time;E=0!==x?(a-T.time)/x:0,o[c]=this._curveInterpolate(T,A,E,x)}}else o[c]=f[0].value;i&&(o[c]=o[c]-f[0].value);break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:var D=o[c];if(this._evaluateFrameNodeVector3DatasRealTime(f,p,S,a,D),i){var R=f[0].value;D.x-=R.x,D.y-=R.y,D.z-=R.z}break;case e.KeyFrameValueType.Rotation:var C=o[c];if(this._evaluateFrameNodeQuaternionDatasRealTime(f,p,S,a,C),i){var v=Z._tempQuaternion0,y=f[0].value;l.quaternionConjugate(y,v),t.Quaternion.multiply(v,C,C)}break;case e.KeyFrameValueType.Scale:D=o[c],this._evaluateFrameNodeVector3DatasRealTime(f,p,S,a,D),i&&(R=f[0].value,D.x/=R.x,D.y/=R.y,D.z/=R.z);break;case e.KeyFrameValueType.Vector2:var I=o[c];if(this._evaluateFrameNodeVector2DatasRealTime(f,p,S,a,I),i){var M=f[0].value;I.x-=M.x,I.y-=M.y}break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:var L=o[c];if(this._evaluateFrameNodeVector4DatasRealTime(f,p,S,a,L),i){var O=f[0].value;L.x-=O.x,L.y-=O.y,L.z-=O.z,L.w-=O.w}break;default:throw"AnimationClip:unknown node type."}}}}_evaluateFrameNodeVector3DatasRealTime(e,t,r,a,n){if(-1!==t){var i=e[t];if(r){var s=i.value;n.x=s.x,n.y=s.y,n.z=s.z}else{var o,l=e[t+1],h=i.time,c=l.time-h;o=0!==c?(a-h)/c:0,this._hermiteInterpolateVector3(i,l,o,c,n)}}else{var d=e[0].value;n.x=d.x,n.y=d.y,n.z=d.z}}_evaluateFrameNodeVector2DatasRealTime(e,t,r,a,n){if(-1!==t){var i=e[t];if(r){var s=i.value;n.x=s.x,n.y=s.y}else{var o,l=e[t+1],h=i.time,c=l.time-h;o=0!==c?(a-h)/c:0,this._hermiteInterpolateVector2(i,l,o,c,n)}}else{var d=e[0].value;n.x=d.x,n.y=d.y}}_evaluateFrameNodeVector4DatasRealTime(e,t,r,a,n){if(-1!==t){var i=e[t];if(r){var s=i.value;n.x=s.x,n.y=s.y,n.z=s.z}else{var o,l=e[t+1],h=i.time,c=l.time-h;o=0!==c?(a-h)/c:0,this._hermiteInterpolateVector4(i,l,o,c,n)}}else{var d=e[0].value;n.x=d.x,n.y=d.y,n.z=d.z}}_evaluateFrameNodeQuaternionDatasRealTime(e,t,r,a,n){if(-1!==t){var i=e[t];if(r){var s=i.value;n.x=s.x,n.y=s.y,n.z=s.z,n.w=s.w}else{var o,l=e[t+1],h=i.time,c=l.time-h;o=0!==c?(a-h)/c:0,this._hermiteInterpolateQuaternion(i,l,o,c,n)}}else{var d=e[0].value;n.x=d.x,n.y=d.y,n.z=d.z,n.w=d.w}}_binarySearchEventIndex(e){for(var t,r=0,a=this._animationEvents.length-1;r<=a;){t=Math.floor((r+a)/2);var n=this._animationEvents[t].time;if(n==e)return t;n>e?a=t-1:r=t+1}return r}addEvent(e){var t=this._binarySearchEventIndex(e.time);this._animationEvents.splice(t,0,e)}_disposeResource(){this._nodes=null,this._nodesMap=null}}Z._tempQuaternion0=new t.Quaternion,e.StaticFlag=void 0,(F=e.StaticFlag||(e.StaticFlag={}))[F.Normal=1]="Normal",F[F.StaticBatch=2]="StaticBatch";class J extends t.Node{static __init__(){J.WORLDMATRIX=t.Shader3D.propertyNameToID("u_WorldMat"),J.sprite3DCommandUniformMap=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D"),J.sprite3DCommandUniformMap.addShaderUniform(J.WORLDMATRIX,"u_WorldMat")}static instantiate(e,t=null,r=!0,a=null,n=null){var i=e.clone();t&&t.addChild(i);var s=i.transform;if(r){var o=s.worldMatrix;e.transform.worldMatrix.cloneTo(o),s.worldMatrix=o}else a&&(s.position=a),n&&(s.rotation=n);return i}static load(e,r){t.ILaya.loader.load(e).then((e=>{r&&r.runWith([null==e?void 0:e.create()])}))}get id(){return this._id}get layer(){return this._layer}set layer(e){if(this._layer!==e){if(!(e>=0&&e<=30))throw new Error("Layer value must be 0-30.");this._layer=e,this.event(t.Event.LAYERCHANGE,e)}}get isStatic(){return!!(this._isStatic>>1|0)}set isStatic(r){this._isStatic=r?e.StaticFlag.StaticBatch:e.StaticFlag.Normal,this.event(t.Event.staticMask,this._isStatic)}get transform(){return this._transform}get scene(){return this._scene}constructor(r=null,a=!1){super(),this._isRenderNode=0,this._id=++J._uniqueIDCounter,this._is3D=!0,this._transform=t.LayaGL.renderOBJCreate.createTransform(this),this._isStatic=a?e.StaticFlag.StaticBatch:e.StaticFlag.Normal,this.layer=0,this.name=r||"New Sprite3D"}_onActive(){super._onActive(),t.Stat.sprite3DCount++}_onInActive(){super._onInActive(),t.Stat.sprite3DCount--}_onAdded(){if(this._parent instanceof J){var e=this._parent;this.transform._setParent(e.transform)}super._onAdded()}_onRemoved(){super._onRemoved(),this._parent instanceof J&&this.transform._setParent(null)}onStartListeningToType(e){super.onStartListeningToType(e),e.startsWith("collision")?this._setBit(t.NodeFlags.PROCESS_COLLISIONS,!0):e.startsWith("trigger")&&this._setBit(t.NodeFlags.PROCESS_TRIGGERS,!0)}_parse(e,t){if(void 0!==e.isStatic&&(this.isStatic=e.isStatic),void 0!==e.active&&(this.active=e.active),null!=e.name&&(this.name=e.name),void 0!==e.position){var r=this.transform.localPosition;r.fromArray(e.position),this.transform.localPosition=r}if(void 0!==e.rotationEuler){var a=this.transform.localRotationEuler;a.fromArray(e.rotationEuler),this.transform.localRotationEuler=a}if(void 0!==e.rotation){var n=this.transform.localRotation;n.fromArray(e.rotation),this.transform.localRotation=n}if(void 0!==e.scale){var i=this.transform.localScale;i.fromArray(e.scale),this.transform.localScale=i}null!=e.layer&&(this.layer=e.layer)}_cloneTo(e,t,r){if(this._destroyed)throw new Error("Sprite3D: Can't be cloned if the Sprite3D has destroyed.");var a=e,n=this._transform,i=a._transform;a.name=this.name,a._destroyed=this._destroyed,a.active=this.active,i.localPosition=n.localPosition,i.localRotation=n.localRotation,i.localScale=n.localScale,a._isStatic=this._isStatic,a.layer=this.layer,super._cloneTo(a,t,r)}static _createSprite3DInstance(e){for(var t=e._create(),r=e._children,a=0,n=r.length;a<n;a++){var i=J._createSprite3DInstance(r[a]);t.addChild(i)}return t}static _parseSprite3DInstance(e,t,r,a){for(var n=r._children,i=a._children,s=0,o=n.length;s<o;s++)J._parseSprite3DInstance(e,t,n[s],i[s]);r._cloneTo(a,e,t)}clone(){var e=J._createSprite3DInstance(this);return J._parseSprite3DInstance(this,e,this,e),e}destroy(e=!0){this._destroyed||(super.destroy(e),this._transform=null)}_create(){return new J}}J._uniqueIDCounter=0;class ${constructor(){this.updateMark=-1,this.pointLightCount=0,this.spotLightCount=0,this.indices=[]}}class ee{constructor(e,r,a,n){this._updateMark=0,this._depthSliceParam=new t.Vector2,this._xSlices=e,this._ySlices=r,this._zSlices=a;var i=e*r,s=a*(1+Math.ceil(n/4));this._clusterTexture=l._createFloatTextureBuffer(i,s),this._clusterTexture.lock=!0,this._clusterPixels=new Float32Array(i*s*4);for(var o=new Array(this._zSlices),h=0;h<this._zSlices;h++){o[h]=new Array(this._ySlices);for(var c=0;c<this._ySlices;c++){o[h][c]=new Array(this._xSlices);for(var d=0;d<this._xSlices;d++)o[h][c][d]=new $}}this._clusterDatas=o}_placePointLightToClusters(e,t){for(var r=this._clusterDatas,a=this._updateMark,n=t.zMin,i=t.zMax;n<i;n++)for(var s=t.yMin,o=t.yMax;s<o;s++)for(var l=t.xMin,h=t.xMax;l<h;l++){var c=r[n][s][l];c.updateMark!=a&&(c.pointLightCount=0,c.spotLightCount=0,c.updateMark=a);var d=c.indices,_=c.pointLightCount++;_<d.length?d[_]=e:d.push(e)}}_placeSpotLightToClusters(e,t){for(var r=this._clusterDatas,a=this._updateMark,n=t.zMin,i=t.zMax;n<i;n++)for(var s=t.yMin,o=t.yMax;s<o;s++)for(var l=t.xMin,h=t.xMax;l<h;l++){var c=r[n][s][l];c.updateMark!=a&&(c.pointLightCount=0,c.spotLightCount=0,c.updateMark=a);var d=c.indices,_=c.pointLightCount+c.spotLightCount++;_<d.length?d[_]=e:d.push(e)}}_insertConePlane(e,r,a,n,i){var s=ee._tempVector36,o=ee._tempVector37;t.Vector3.cross(i,r,s),t.Vector3.cross(s,r,o),t.Vector3.normalize(o,o);var l=a*Math.tan(n),h=e.x+a*r.x+l*o.x,c=e.y+a*r.y+l*o.y,d=e.z+a*r.z+l*o.z;return h*i.x+c*i.y+d*i.z<=0||e.x*i.x+e.y*i.y+e.z*i.z<=0}_shrinkSphereLightZPerspective(e,t,r,a,n){var i=r.z,s=i-a,o=i+a;if(s>t||o<=e)return!1;var l=this._depthSliceParam;return n.zMin=Math.floor(Math.log2(Math.max(s,e))*l.x-l.y),n.zMax=Math.min(Math.ceil(Math.log2(o)*l.x-l.y),this._zSlices),!0}_shrinkSpotLightZPerspective(e,t,r,a,n,i,s){var o=a.x,l=a.y,h=a.z,c=Math.tan(i)*n,d=r.x,_=r.y,u=r.z,m=o-d,f=l-_,g=h-u,p=m*m+f*f+g*g,S=Math.sqrt(1-g*g/p),T=Math.max(Math.min(u,h-S*c),r.z-n),E=Math.min(Math.max(u,h+S*c),r.z+n);if(T>t||E<=e)return!1;var A=this._depthSliceParam;return s.zMin=Math.floor(Math.log2(Math.max(T,e))*A.x-A.y),s.zMax=Math.min(Math.ceil(Math.log2(E)*A.x-A.y),this._zSlices),!0}_shrinkSphereLightByBoundOrth(e,t,r,a,n,i,s){var o=n.z,l=o-i,h=o+i;if(l>a||h<=r)return!1;var c=n.x,d=c-i,_=c+i;if(d>e||_<=-e)return!1;var u=n.y,m=u-i,f=u+i;if(m>t||f<=-t)return!1;var g=this._xSlices,p=this._ySlices,S=this._depthSliceParam,T=2*e/g,E=2*t/p;return s.xMin=Math.max(Math.floor((d+e)/T),0),s.xMax=Math.min(Math.ceil((_+e)/T),g),s.yMin=Math.max(Math.floor((t-f)/E),0),s.yMax=Math.min(Math.ceil((t-m)/E),p),s.zMin=Math.floor(Math.log2(Math.max(l,r))*S.x-S.y),s.zMax=Math.min(Math.ceil(Math.log2(h)*S.x-S.y),this._zSlices),!0}_shrinkSpotLightByBoundOrth(e,t,r,a,n,i,s,o,l){var h=i.x,c=i.y,d=i.z,_=Math.tan(o)*s,u=n.x,m=n.y,f=n.z,g=h-u,p=c-m,S=d-f,T=g*g+p*p+S*S,E=Math.sqrt(1-S*S/T),A=Math.max(Math.min(f,d-E*_),n.z-s),x=Math.min(Math.max(f,d+E*_),n.z+s);if(A>a||x<=r)return!1;var D=Math.sqrt(1-g*g/T),R=Math.max(Math.min(u,h-D*_),n.x-s),C=Math.min(Math.max(u,h+D*_),n.x+s);if(R>e||C<=-e)return!1;var v=Math.sqrt(1-p*p/T),y=Math.max(Math.min(m,c-v*_),n.y-s),I=Math.min(Math.max(m,c+v*_),n.y+s);if(y>t||I<=-t)return!1;var M=this._xSlices,L=this._ySlices,O=this._depthSliceParam,b=2*e/M,w=2*t/L;return l.xMin=Math.max(Math.floor((R+e)/b),0),l.xMax=Math.min(Math.ceil((C+e)/b),M),l.yMin=Math.max(Math.floor((t-I)/w),0),l.yMax=Math.min(Math.ceil((t-y)/w),L),l.zMin=Math.floor(Math.log2(Math.max(A,r))*O.x-O.y),l.zMax=Math.min(Math.ceil(Math.log2(x)*O.x-O.y),this._zSlices),!0}_shrinkXYByRadiusPerspective(e,t,r,a,n){var i,s,o,l,h,c=e.x,d=e.y,_=e.z,u=this._ySlices+1;for(h=0;h<u;h++){if(d*(m=n[h]).y+_*m.z<t){s=Math.max(0,h-1);break}}if(h==u)return!1;for(l=this._ySlices,h=s+1;h<u;h++){if(d*(m=n[h]).y+_*m.z<=-t){l=Math.max(0,h);break}}for(u=this._xSlices+1,h=0;h<u;h++){if(c*(m=a[h]).x+_*m.z<t){i=Math.max(0,h-1);break}}for(o=this._xSlices,h=i+1;h<u;h++){var m;if(c*(m=a[h]).x+_*m.z<=-t){o=Math.max(0,h);break}}return r.xMin=i,r.xMax=o,r.yMin=s,r.yMax=l,!0}_shrinkSpotXYByConePerspective(e,t,r,a,n,i,s){for(var o,l,h,c,d=ee._tempVector32,_=n.yMax+1,u=n.yMin+1;u<_;u++)if(this._insertConePlane(e,t,r,a,s[u])){l=Math.max(0,u-1);break}c=n.yMax;for(u=l+1;u<_;u++){var m=s[u];if(d.setValue(0,-m.y,-m.z),!this._insertConePlane(e,t,r,a,d)){c=Math.max(0,u);break}}_=n.xMax+1;for(u=n.xMin+1;u<_;u++)if(this._insertConePlane(e,t,r,a,i[u])){o=Math.max(0,u-1);break}h=n.xMax;for(u=o+1;u<_;u++){m=i[u];if(d.setValue(-m.x,0,-m.z),!this._insertConePlane(e,t,r,a,d)){h=Math.max(0,u);break}}n.xMin=o,n.xMax=h,n.yMin=l,n.yMax=c}_updatePointLightPerspective(e,r,a,n,i,s,o){var l=ee._tempLightBound,h=ee._tempVector30;t.Vector3.transformV3ToV3(n.owner._transform.position,a,h),h.z*=-1,this._shrinkSphereLightZPerspective(e,r,h,n.range,l)&&this._shrinkXYByRadiusPerspective(h,n.range,l,s,o)&&this._placePointLightToClusters(i,l)}_updateSpotLightPerspective(e,r,a,n,i,s,o){var l=ee._tempLightBound,h=ee._tempVector30,c=ee._tempVector31,d=ee._tempVector34,_=n.owner._transform.position,u=n.range;n.owner._transform.worldMatrix.getForward(c),t.Vector3.normalize(c,c),t.Vector3.scale(c,u,d),t.Vector3.add(_,d,d),t.Vector3.transformV3ToV3(_,a,h),t.Vector3.transformV3ToV3(d,a,d),h.z*=-1,d.z*=-1;var m=n.spotAngle/2*Math.PI/180;if(this._shrinkSpotLightZPerspective(e,r,h,d,u,m,l)&&this._shrinkXYByRadiusPerspective(h,u,l,s,o)){var f=ee._tempVector33;f.x=d.x-h.x,f.y=d.y-h.y,f.z=d.z-h.z,t.Vector3.normalize(f,f),this._shrinkSpotXYByConePerspective(h,f,u,m,l,s,o),this._placeSpotLightToClusters(i,l)}}_updatePointLightOrth(e,r,a,n,i,s,o){var l=ee._tempLightBound,h=ee._tempVector30;t.Vector3.transformV3ToV3(s.owner._transform.position,i,h),h.z*=-1,this._shrinkSphereLightByBoundOrth(e,r,a,n,h,s.range,l)&&this._placePointLightToClusters(o,l)}_updateSpotLightOrth(e,r,a,n,i,s,o){var l=ee._tempLightBound,h=ee._tempVector30,c=ee._tempVector31,d=ee._tempVector34,_=s.owner._transform.position,u=s.range;s.owner._transform.worldMatrix.getForward(c),t.Vector3.normalize(c,c),t.Vector3.scale(c,u,d),t.Vector3.add(_,d,d),t.Vector3.transformV3ToV3(_,i,h),t.Vector3.transformV3ToV3(d,i,d),h.z*=-1,d.z*=-1;var m=s.spotAngle/2*Math.PI/180;this._shrinkSpotLightByBoundOrth(e,r,a,n,h,d,u,m,l)&&this._placeSpotLightToClusters(o,l)}update(e,r){this._updateMark++;var a=e.nearPlane;this._depthSliceParam.x=t.Config3D.lightClusterCount.z/Math.log2(e.farPlane/a),this._depthSliceParam.y=Math.log2(a)*this._depthSliceParam.x;var n=e.nearPlane,i=e.farPlane,s=e.viewMatrix,o=r._directionLights._length,l=r._pointLights,h=l._length,c=l._elements,d=r._spotLights,_=d._length,u=d._elements;if(e.orthographic){for(var m=e.orthographicVerticalSize/2,f=m*e.aspectRatio,g=0;g<h;g++,o++)this._updatePointLightOrth(f,m,n,i,s,c[g],o);for(g=0;g<_;g++,o++)this._updateSpotLightOrth(f,m,n,i,s,u[g],o)}else{e._updateClusterPlaneXY();var p=e._clusterXPlanes,S=e._clusterYPlanes;for(g=0;g<h;g++,o++)this._updatePointLightPerspective(n,i,s,c[g],o,p,S);for(g=0;g<_;g++,o++)this._updateSpotLightPerspective(n,i,s,u[g],o,p,S)}if(h+_>0){for(var T=this._xSlices,E=this._ySlices,A=this._zSlices,x=T*E*4,D=x*A,R=this._clusterPixels,C=R.length,v=this._clusterDatas,y=this._updateMark,I=!0,M=0;M<A;M++)for(var L=0;L<E;L++)for(var O=0;O<T;O++){var b=v[M][L][O],w=4*(O+L*T+M*T*E);if(b.updateMark!==y)R[w]=0,R[w+1]=0;else if(I){var B=b.indices,N=b.pointLightCount,V=b.spotLightCount,P=N+V;if(D+P<C){R[w]=N,R[w+1]=V,R[w+2]=Math.floor(D/x),R[w+3]=D%x;for(g=0;g<P;g++)R[D++]=B[g]}else{P=C-(D+P),N=Math.min(N,P),R[w]=N,R[w+1]=Math.min(V,P-N),R[w+2]=Math.floor(D/x),R[w+3]=D%x;for(g=0;g<P;g++)R[D++]=B[g];I=!1}}}var F=this._clusterTexture.width;this._clusterTexture.setSubPixelsData(0,0,F,Math.ceil(D/(4*F)),R,0,!1,!1,!1)}}}ee._tempVector30=new t.Vector3,ee._tempVector31=new t.Vector3,ee._tempVector32=new t.Vector3,ee._tempVector33=new t.Vector3,ee._tempVector34=new t.Vector3,ee._tempVector35=new t.Vector3,ee._tempVector36=new t.Vector3,ee._tempVector37=new t.Vector3,ee._tempLightBound=new class{};class te{constructor(e=new t.Vector3,r=0){this._normal=e,this._distance=r}set normal(e){e.cloneTo(this._normal)}get normal(){return this._normal}set distance(e){this._distance=e}get distance(){return this._distance}static createPlaneBy3P(e,t,r,a){var n=t.x-e.x,i=t.y-e.y,s=t.z-e.z,o=r.x-e.x,l=r.y-e.y,h=r.z-e.z,c=i*h-s*l,d=s*o-n*h,_=n*l-i*o,u=1/Math.sqrt(c*c+d*d+_*_),m=c*u,f=d*u,g=_*u,p=a.normal;p.x=m,p.y=f,p.z=g,a.normal=p.normalize(),a.distance=-(m*e.x+f*e.y+g*e.z)}normalize(){var e=this.normal.x,t=this.normal.y,r=this.normal.z,a=1/Math.sqrt(e*e+t*t+r*r);this.normal.x=e*a,this.normal.y=t*a,this.normal.z=r*a,this.distance*=a}cloneTo(e){var t=e;this.normal.cloneTo(t.normal),t.distance=this.distance}clone(){var e=new te;return this.cloneTo(e),e}}te.PlaneIntersectionType_Back=0,te.PlaneIntersectionType_Front=1,te.PlaneIntersectionType_Intersecting=2;class re{constructor(e,t){this.origin=e,this.direction=t}at(e,r){t.Vector3.scale(this.direction,e,r),t.Vector3.add(this.origin,r,r)}}class ae{}ae.Disjoint=0,ae.Contains=1,ae.Intersects=2;class ne{constructor(){}static distancePlaneToPoint(e,r){return t.Vector3.dot(e.normal,r)+e.distance}static distanceBoxToPoint(e,t){var r=e.min,a=r.x,n=r.y,i=r.z,s=e.max,o=s.x,l=s.y,h=s.z,c=t.x,d=t.y,_=t.z,u=0;return c<a&&(u+=(a-c)*(a-c)),c>o&&(u+=(o-c)*(o-c)),d<n&&(u+=(n-d)*(n-d)),d>l&&(u+=(l-d)*(l-d)),_<i&&(u+=(i-_)*(i-_)),_>h&&(u+=(h-_)*(h-_)),Math.sqrt(u)}static distanceBoxToBox(e,t){var r,a=e.min,n=a.x,i=a.y,s=a.z,o=e.max,l=o.x,h=o.y,c=o.z,d=t.min,_=d.x,u=d.y,m=d.z,f=t.max,g=f.x,p=f.y,S=f.z,T=0;return n>g?T+=(r=n-g)*r:_>l&&(T+=(r=_-l)*r),i>p?T+=(r=i-p)*r:u>h&&(T+=(r=u-h)*r),s>S?T+=(r=s-S)*r:m>c&&(T+=(r=m-c)*r),Math.sqrt(T)}static distanceSphereToPoint(e,r){var a=Math.sqrt(t.Vector3.distanceSquared(e.center,r));return a-=e.radius,Math.max(a,0)}static distanceSphereToSphere(e,r){var a=Math.sqrt(t.Vector3.distanceSquared(e.center,r.center));return a-=e.radius+r.radius,Math.max(a,0)}static intersectsRayAndTriangleRD(e,r,a,n,i){var s=e.origin,o=s.x,l=s.y,h=s.z,c=e.direction,d=c.x,_=c.y,u=c.z,m=r.x,f=r.y,g=r.z,p=a.x,S=a.y,T=a.z,E=n.x,A=n.y,x=n.z,D=ne._tempV30.x,R=ne._tempV30.y,C=ne._tempV30.z;D=p-m,R=S-f,C=T-g;var v=ne._tempV31.x,y=ne._tempV31.y,I=ne._tempV31.z;v=E-m,y=A-f,I=x-g;var M=ne._tempV32.x,L=ne._tempV32.y,O=ne._tempV32.z,b=D*(M=_*I-u*y)+R*(L=u*v-d*I)+C*(O=d*y-_*v);if(t.MathUtils3D.isZero(b))return!1;var w=1/b,B=ne._tempV33.x,N=ne._tempV33.y,V=ne._tempV33.z,P=(B=o-m)*M+(N=l-f)*L+(V=h-g)*O;if((P*=w)<0||P>1)return!1;var F=ne._tempV34.x,U=ne._tempV34.y,G=ne._tempV34.z,H=d*(F=N*C-V*R)+_*(U=V*D-B*C)+u*(G=B*R-N*D);if((H*=w)<0||P+H>1)return!1;var z=v*F+y*U+I*G;return!((z*=w)<0)}static intersectsRayAndTriangleRP(e,r,a,n,i){var s;return ne.intersectsRayAndTriangleRD(e,r,a,n,s)?(t.Vector3.scale(e.direction,s,ne._tempV30),t.Vector3.add(e.origin,ne._tempV30,i),!0):(t.Vector3.ZERO.cloneTo(i),!1)}static intersectsRayAndPoint(e,r){t.Vector3.subtract(e.origin,r,ne._tempV30);var a=t.Vector3.dot(ne._tempV30,e.direction),n=t.Vector3.dot(ne._tempV30,ne._tempV30)-t.MathUtils3D.zeroTolerance;return!(n>0&&a>0)&&!(a*a-n<0)}static intersectsRayAndRay(e,r,a){var n=e.origin,i=n.x,s=n.y,o=n.z,l=e.direction,h=l.x,c=l.y,d=l.z,_=r.origin,u=_.x,m=_.y,f=_.z,g=r.direction,p=g.x,S=g.y,T=g.z;t.Vector3.cross(l,g,ne._tempV30);var E=ne._tempV30,A=t.Vector3.scalarLength(ne._tempV30);if(t.MathUtils3D.isZero(A)&&t.MathUtils3D.nearEqual(u,i)&&t.MathUtils3D.nearEqual(m,s)&&t.MathUtils3D.nearEqual(f,o))return t.Vector3.ZERO.cloneTo(a),!0;A*=A;var x=u-i,D=m-s,R=f-o,C=p,v=S,y=T,I=E.x,M=E.y,L=E.z,O=x*v*L+D*y*I+R*C*M-x*y*M-D*C*L-R*v*I;C=h,v=c,y=d;var b=O/A;t.Vector3.scale(l,b,ne._tempV30),t.Vector3.scale(g,b,ne._tempV31),t.Vector3.add(n,ne._tempV30,ne._tempV32),t.Vector3.add(_,ne._tempV31,ne._tempV33);var w=ne._tempV32,B=ne._tempV33;return t.MathUtils3D.nearEqual(B.x,w.x)&&t.MathUtils3D.nearEqual(B.y,w.y)&&t.MathUtils3D.nearEqual(B.z,w.z)?(a=ne._tempV32,!0):(t.Vector3.ZERO.cloneTo(a),!1)}static intersectsPlaneAndTriangle(e,t,r,a){var n=ne.intersectsPlaneAndPoint(e,t),i=ne.intersectsPlaneAndPoint(e,r),s=ne.intersectsPlaneAndPoint(e,a);return n==te.PlaneIntersectionType_Front&&i==te.PlaneIntersectionType_Front&&s==te.PlaneIntersectionType_Front?te.PlaneIntersectionType_Front:n==te.PlaneIntersectionType_Back&&i==te.PlaneIntersectionType_Back&&s==te.PlaneIntersectionType_Back?te.PlaneIntersectionType_Back:te.PlaneIntersectionType_Intersecting}static intersectsRayAndPlaneRD(e,r){var a=r.normal,n=t.Vector3.dot(a,e.direction);if(Math.abs(n)<t.MathUtils3D.zeroTolerance)return-1;var i=t.Vector3.dot(a,e.origin),s=(-r.distance-i)/n;if(s<0){if(s<-t.MathUtils3D.zeroTolerance)return-1;s=0}return s}static intersectsRayAndPlaneRP(e,r,a){var n=ne.intersectsRayAndPlaneRD(e,r);if(-1==n)return a.setValue(0,0,0),!1;var i=ne._tempV30;return t.Vector3.scale(e.direction,n,i),t.Vector3.add(e.origin,i,a),!0}static intersectsRayAndBoxRD(e,r){var a=e.origin,n=a.x,i=a.y,s=a.z,o=e.direction,l=o.x,h=o.y,c=o.z,d=r.min,_=d.x,u=d.y,m=d.z,f=r.max,g=f.x,p=f.y,S=f.z,T=0,E=t.MathUtils3D.MaxValue;if(t.MathUtils3D.isZero(l)){if(n<_||n>g)return-1}else{var A=1/l,x=(_-n)*A,D=(g-n)*A;if(x>D){var R=x;x=D,D=R}if((T=Math.max(x,T))>(E=Math.min(D,E)))return-1}if(t.MathUtils3D.isZero(h)){if(i<u||i>p)return-1}else{var C=1/h,v=(u-i)*C,y=(p-i)*C;if(v>y){var I=v;v=y,y=I}if((T=Math.max(v,T))>(E=Math.min(y,E)))return-1}if(t.MathUtils3D.isZero(c)){if(s<m||s>S)return-1}else{var M=1/c,L=(m-s)*M,O=(S-s)*M;if(L>O){var b=L;L=O,O=b}if((T=Math.max(L,T))>(E=Math.min(O,E)))return-1}return T}static intersectsRayAndBoxRP(e,r,a){var n=ne.intersectsRayAndBoxRD(e,r);return-1===n?(t.Vector3.ZERO.cloneTo(a),n):(t.Vector3.scale(e.direction,n,ne._tempV30),t.Vector3.add(e.origin,ne._tempV30,ne._tempV31),ne._tempV31.cloneTo(a),n)}static intersectsRayAndSphereRD(e,r){var a=r.radius;t.Vector3.subtract(e.origin,r.center,ne._tempV30);var n=t.Vector3.dot(ne._tempV30,e.direction),i=t.Vector3.dot(ne._tempV30,ne._tempV30)-a*a;if(i>0&&n>0)return-1;var s=n*n-i;if(s<0)return-1;var o=-n-Math.sqrt(s);return o<0&&(o=0),o}static intersectsRayAndSphereRP(e,r,a){var n=ne.intersectsRayAndSphereRD(e,r);return-1===n?(t.Vector3.ZERO.cloneTo(a),n):(t.Vector3.scale(e.direction,n,ne._tempV30),t.Vector3.add(e.origin,ne._tempV30,ne._tempV31),ne._tempV31.cloneTo(a),n)}static intersectsSphereAndTriangle(e,r,a,n){var i=e.center,s=e.radius;return ne.closestPointPointTriangle(i,r,a,n,ne._tempV30),t.Vector3.subtract(ne._tempV30,i,ne._tempV31),t.Vector3.dot(ne._tempV31,ne._tempV31)<=s*s}static intersectsPlaneAndPoint(e,r){var a=t.Vector3.dot(e.normal,r)+e.distance;return a>0?te.PlaneIntersectionType_Front:a<0?te.PlaneIntersectionType_Back:te.PlaneIntersectionType_Intersecting}static intersectsPlaneAndPlane(e,r){t.Vector3.cross(e.normal,r.normal,ne._tempV30);var a=t.Vector3.dot(ne._tempV30,ne._tempV30);return!t.MathUtils3D.isZero(a)}static intersectsPlaneAndPlaneRL(e,r,a){var n=e.normal,i=r.normal;t.Vector3.cross(n,i,ne._tempV34);var s=t.Vector3.dot(ne._tempV34,ne._tempV34);return!t.MathUtils3D.isZero(s)&&(t.Vector3.scale(i,e.distance,ne._tempV30),t.Vector3.scale(n,r.distance,ne._tempV31),t.Vector3.subtract(ne._tempV30,ne._tempV31,ne._tempV32),t.Vector3.cross(ne._tempV32,ne._tempV34,ne._tempV33),t.Vector3.normalize(ne._tempV34,ne._tempV34),new re(ne._tempV33,ne._tempV34),!0)}static intersectsPlaneAndBox(e,r){var a=e.distance,n=e.normal,i=n.x,s=n.y,o=n.z,l=r.min,h=l.x,c=l.y,d=l.z,_=r.max,u=_.x,m=_.y,f=_.z;ne._tempV30.x=i>0?h:u,ne._tempV30.y=s>0?c:m,ne._tempV30.z=o>0?d:f,ne._tempV31.x=i>0?u:h,ne._tempV31.y=s>0?m:c,ne._tempV31.z=o>0?f:d;var g=t.Vector3.dot(n,ne._tempV30);return g+a>0?te.PlaneIntersectionType_Front:(g=t.Vector3.dot(n,ne._tempV31))+a<0?te.PlaneIntersectionType_Back:te.PlaneIntersectionType_Intersecting}static intersectsPlaneAndSphere(e,r){var a=r.radius,n=t.Vector3.dot(e.normal,r.center)+e.distance;return n>a?te.PlaneIntersectionType_Front:n<-a?te.PlaneIntersectionType_Back:te.PlaneIntersectionType_Intersecting}static intersectsBoxAndBox(e,t){var r=e.min,a=e.max,n=t.min,i=t.max;return!(r.x>i.x||n.x>a.x)&&(!(r.y>i.y||n.y>a.y)&&!(r.z>i.z||n.z>a.z))}static intersectsBoxAndSphere(e,r){var a=r.center,n=r.radius,i=ne._tempV30;return t.Vector3.Clamp(a,e.min,e.max,i),t.Vector3.distanceSquared(a,i)<=n*n}static intersectsSphereAndSphere(e,r){var a=e.radius+r.radius;return t.Vector3.distanceSquared(e.center,r.center)<=a*a}static boxContainsPoint(e,t){var r=e.min,a=e.max;return r.x<=t.x&&a.x>=t.x&&r.y<=t.y&&a.y>=t.y&&r.z<=t.z&&a.z>=t.z?ae.Contains:ae.Disjoint}static boxContainsBox(e,t){var r=e.min,a=r.x,n=r.y,i=r.z,s=e.max,o=s.x,l=s.y,h=s.z,c=t.min,d=c.x,_=c.y,u=c.z,m=t.max,f=m.x,g=m.y,p=m.z;return o<d||a>f||l<_||n>g||h<u||i>p?ae.Disjoint:a<=d&&f<=o&&n<=_&&g<=l&&i<=u&&p<=h?ae.Contains:ae.Intersects}static boxContainsSphere(e,r){var a=e.min,n=a.x,i=a.y,s=a.z,o=e.max,l=o.x,h=o.y,c=o.z,d=r.center,_=d.x,u=d.y,m=d.z,f=r.radius;return t.Vector3.Clamp(d,a,o,ne._tempV30),t.Vector3.distanceSquared(d,ne._tempV30)>f*f?ae.Disjoint:n+f<=_&&_<=l-f&&l-n>f&&i+f<=u&&u<=h-f&&h-i>f&&s+f<=m&&m<=c-f&&c-s>f?ae.Contains:ae.Intersects}static sphereContainsPoint(e,r){return t.Vector3.distanceSquared(r,e.center)<=e.radius*e.radius?ae.Contains:ae.Disjoint}static sphereContainsTriangle(e,t,r,a){var n=ne.sphereContainsPoint(e,t),i=ne.sphereContainsPoint(e,r),s=ne.sphereContainsPoint(e,a);return n==ae.Contains&&i==ae.Contains&&s==ae.Contains?ae.Contains:ne.intersectsSphereAndTriangle(e,t,r,a)?ae.Intersects:ae.Disjoint}static sphereContainsBox(e,r){var a=e.center;a.x,a.y,a.z;var n=e.radius,i=r.min;i.x,i.y,i.z;var s=r.max;s.x,s.y,s.z;var o=ne._tempV30;if(o.x,o.y,o.z,!ne.intersectsBoxAndSphere(r,e))return ae.Disjoint;var l=n*n;return t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l||t.Vector3.scalarLengthSquared(ne._tempV30)>l?ae.Intersects:ae.Contains}static sphereContainsSphere(e,r){var a=e.radius,n=r.radius,i=t.Vector3.distance(e.center,r.center);return a+n<i?ae.Disjoint:a-n<i?ae.Intersects:ae.Contains}static closestPointPointTriangle(e,r,a,n,i){t.Vector3.subtract(a,r,ne._tempV30),t.Vector3.subtract(n,r,ne._tempV31),t.Vector3.subtract(e,r,ne._tempV32),t.Vector3.subtract(e,a,ne._tempV33),t.Vector3.subtract(e,n,ne._tempV34);var s=t.Vector3.dot(ne._tempV30,ne._tempV32),o=t.Vector3.dot(ne._tempV31,ne._tempV32),l=t.Vector3.dot(ne._tempV30,ne._tempV33),h=t.Vector3.dot(ne._tempV31,ne._tempV33),c=t.Vector3.dot(ne._tempV30,ne._tempV34),d=t.Vector3.dot(ne._tempV31,ne._tempV34);if(s<=0&&o<=0)r.cloneTo(i);else if(l>=0&&h<=l)a.cloneTo(i);else{var _=s*h-l*o;if(_<=0&&s>=0&&l<=0){var u=s/(s-l);return t.Vector3.scale(ne._tempV30,u,i),void t.Vector3.add(r,i,i)}if(d>=0&&c<=d)n.cloneTo(i);else{var m=c*o-s*d;if(m<=0&&o>=0&&d<=0){var f=o/(o-d);return t.Vector3.scale(ne._tempV31,f,i),void t.Vector3.add(r,i,i)}var g=l*d-c*h;if(g<=0&&h-l>=0&&c-d>=0){var p=(h-l)/(h-l+(c-d));return t.Vector3.subtract(n,a,i),t.Vector3.scale(i,p,i),void t.Vector3.add(a,i,i)}var S=1/(g+m+_),T=m*S,E=_*S;t.Vector3.scale(ne._tempV30,T,ne._tempV35),t.Vector3.scale(ne._tempV31,E,ne._tempV36),t.Vector3.add(ne._tempV35,ne._tempV36,i),t.Vector3.add(r,i,i)}}}static closestPointPlanePoint(e,r,a){var n=e.normal,i=t.Vector3.dot(n,r)-e.distance;t.Vector3.scale(n,i,ne._tempV30),t.Vector3.subtract(r,ne._tempV30,a)}static closestPointBoxPoint(e,r,a){t.Vector3.max(r,e.min,ne._tempV30),t.Vector3.min(ne._tempV30,e.max,a)}static closestPointSpherePoint(e,r,a){var n=e.center;t.Vector3.subtract(r,n,a),t.Vector3.normalize(a,a),t.Vector3.scale(a,e.radius,a),t.Vector3.add(a,n,a)}static closestPointSphereSphere(e,r,a){var n=e.center;t.Vector3.subtract(r.center,n,a),t.Vector3.normalize(a,a),t.Vector3.scale(a,e.radius,a),t.Vector3.add(a,n,a)}}ne._tempV30=new t.Vector3,ne._tempV31=new t.Vector3,ne._tempV32=new t.Vector3,ne._tempV33=new t.Vector3,ne._tempV34=new t.Vector3,ne._tempV35=new t.Vector3,ne._tempV36=new t.Vector3,e.FrustumCorner=void 0,(U=e.FrustumCorner||(e.FrustumCorner={}))[U.FarBottomLeft=0]="FarBottomLeft",U[U.FarTopLeft=1]="FarTopLeft",U[U.FarTopRight=2]="FarTopRight",U[U.FarBottomRight=3]="FarBottomRight",U[U.nearBottomLeft=4]="nearBottomLeft",U[U.nearTopLeft=5]="nearTopLeft",U[U.nearTopRight=6]="nearTopRight",U[U.nearBottomRight=7]="nearBottomRight",U[U.unknown=8]="unknown";class ie{static getPlanesFromMatrix(e,t,r,a,n,i,s){var o=e.elements,l=o[0],h=o[1],c=o[2],d=o[3],_=o[4],u=o[5],m=o[6],f=o[7],g=o[8],p=o[9],S=o[10],T=o[11],E=o[12],A=o[13],x=o[14],D=o[15],R=t.normal;R.x=c,R.y=m,R.z=S,t.distance=x,t.normal=R,t.normalize();var C=r.normal;C.x=d-c,C.y=f-m,C.z=T-S,r.distance=D-x,r.normal=C,r.normalize();var v=a.normal;v.x=d+l,v.y=f+_,v.z=T+g,a.distance=D+E,a.normal=v,a.normalize();var y=n.normal;y.x=d-l,y.y=f-_,y.z=T-g,n.distance=D-E,n.normal=y,n.normalize();var I=i.normal;I.x=d-h,I.y=f-u,I.z=T-p,i.distance=D-A,i.normal=I,i.normalize();var M=s.normal;M.x=d+h,M.y=f+u,M.z=T+p,s.distance=D+A,s.normal=M,s.normalize()}constructor(e){this._matrix=e,this.initBoundingPlane()}initBoundingPlane(){this._near=new te,this._far=new te,this._left=new te,this._right=new te,this._top=new te,this._bottom=new te,ie.getPlanesFromMatrix(this._matrix,this._near,this._far,this._left,this._right,this._top,this._bottom)}get matrix(){return this._matrix}set matrix(e){e.cloneTo(this._matrix),ie.getPlanesFromMatrix(this._matrix,this._near,this._far,this._left,this._right,this._top,this._bottom)}get near(){return this._near}get far(){return this._far}get left(){return this._left}get right(){return this._right}get top(){return this._top}get bottom(){return this._bottom}equalsBoundFrustum(e){return this._matrix.equalsOtherMatrix(e.matrix)}equalsObj(e){if(e instanceof ie){var t=e;return this.equalsBoundFrustum(t)}return!1}getPlane(e){switch(e){case 0:return this._near;case 1:return this._far;case 2:return this._left;case 3:return this._right;case 4:return this._top;case 5:return this._bottom;default:return null}}static get3PlaneInterPoint(e,r,a,n){var i=e.normal,s=r.normal,o=a.normal;t.Vector3.cross(s,o,ie._tempV30),t.Vector3.cross(o,i,ie._tempV31),t.Vector3.cross(i,s,ie._tempV32);var l=t.Vector3.dot(i,ie._tempV30),h=t.Vector3.dot(s,ie._tempV31),c=t.Vector3.dot(o,ie._tempV32);t.Vector3.scale(ie._tempV30,-e.distance/l,ie._tempV33),t.Vector3.scale(ie._tempV31,-r.distance/h,ie._tempV34),t.Vector3.scale(ie._tempV32,-a.distance/c,ie._tempV35),t.Vector3.add(ie._tempV33,ie._tempV34,ie._tempV36),t.Vector3.add(ie._tempV35,ie._tempV36,n)}getCorners(t){ie.get3PlaneInterPoint(this._near,this._bottom,this._right,t[e.FrustumCorner.nearBottomRight]),ie.get3PlaneInterPoint(this._near,this._top,this._right,t[e.FrustumCorner.nearTopRight]),ie.get3PlaneInterPoint(this._near,this._top,this._left,t[e.FrustumCorner.nearTopLeft]),ie.get3PlaneInterPoint(this._near,this._bottom,this._left,t[e.FrustumCorner.nearBottomLeft]),ie.get3PlaneInterPoint(this._far,this._bottom,this._right,t[e.FrustumCorner.FarBottomRight]),ie.get3PlaneInterPoint(this._far,this._top,this._right,t[e.FrustumCorner.FarTopRight]),ie.get3PlaneInterPoint(this._far,this._top,this._left,t[e.FrustumCorner.FarTopLeft]),ie.get3PlaneInterPoint(this._far,this._bottom,this._left,t[e.FrustumCorner.FarBottomLeft])}containsPoint(e){for(var t=te.PlaneIntersectionType_Front,r=te.PlaneIntersectionType_Front,a=0;a<6;a++){switch(a){case 0:r=ne.intersectsPlaneAndPoint(this._near,e);break;case 1:r=ne.intersectsPlaneAndPoint(this._far,e);break;case 2:r=ne.intersectsPlaneAndPoint(this._left,e);break;case 3:r=ne.intersectsPlaneAndPoint(this._right,e);break;case 4:r=ne.intersectsPlaneAndPoint(this._top,e);break;case 5:r=ne.intersectsPlaneAndPoint(this._bottom,e)}switch(r){case te.PlaneIntersectionType_Back:return ae.Disjoint;case te.PlaneIntersectionType_Intersecting:t=te.PlaneIntersectionType_Intersecting}}return t===te.PlaneIntersectionType_Intersecting?ae.Intersects:ae.Contains}intersects(e){var t=e.min,r=e.max,a=t.x,n=t.y,i=t.z,s=r.x,o=r.y,l=r.z,h=this._near.normal;if(this._near.distance+h.x*(h.x<0?a:s)+h.y*(h.y<0?n:o)+h.z*(h.z<0?i:l)<0)return!1;var c=this._left.normal;if(this._left.distance+c.x*(c.x<0?a:s)+c.y*(c.y<0?n:o)+c.z*(c.z<0?i:l)<0)return!1;var d=this._right.normal;if(this._right.distance+d.x*(d.x<0?a:s)+d.y*(d.y<0?n:o)+d.z*(d.z<0?i:l)<0)return!1;var _=this._bottom.normal;if(this._bottom.distance+_.x*(_.x<0?a:s)+_.y*(_.y<0?n:o)+_.z*(_.z<0?i:l)<0)return!1;var u=this._top.normal;if(this._top.distance+u.x*(u.x<0?a:s)+u.y*(u.y<0?n:o)+u.z*(u.z<0?i:l)<0)return!1;var m=this._far.normal;return!(this._far.distance+m.x*(m.x<0?a:s)+m.y*(m.y<0?n:o)+m.z*(m.z<0?i:l)<0)}containsBoundBox(e){for(var t=ie._tempV30,r=ie._tempV31,a=e.min,n=e.max,i=ae.Contains,s=0;s<6;s++){var o=this.getPlane(s),l=o.normal;if(l.x>=0?(t.x=n.x,r.x=a.x):(t.x=a.x,r.x=n.x),l.y>=0?(t.y=n.y,r.y=a.y):(t.y=a.y,r.y=n.y),l.z>=0?(t.z=n.z,r.z=a.z):(t.z=a.z,r.z=n.z),ne.intersectsPlaneAndPoint(o,t)===te.PlaneIntersectionType_Back)return ae.Disjoint;ne.intersectsPlaneAndPoint(o,r)===te.PlaneIntersectionType_Back&&(i=ae.Intersects)}return i}containsBoundSphere(e){for(var t=te.PlaneIntersectionType_Front,r=te.PlaneIntersectionType_Front,a=0;a<6;a++){switch(a){case 0:r=ne.intersectsPlaneAndSphere(this._near,e);break;case 1:r=ne.intersectsPlaneAndSphere(this._far,e);break;case 2:r=ne.intersectsPlaneAndSphere(this._left,e);break;case 3:r=ne.intersectsPlaneAndSphere(this._right,e);break;case 4:r=ne.intersectsPlaneAndSphere(this._top,e);break;case 5:r=ne.intersectsPlaneAndSphere(this._bottom,e)}switch(r){case te.PlaneIntersectionType_Back:return ae.Disjoint;case te.PlaneIntersectionType_Intersecting:t=te.PlaneIntersectionType_Intersecting}}return t===te.PlaneIntersectionType_Intersecting?ae.Intersects:ae.Contains}cloneTo(e){e.matrix=this.matrix}clone(){let e=new ie(new t.Matrix4x4);return this.cloneTo(e),e}}ie._tempV30=new t.Vector3,ie._tempV31=new t.Vector3,ie._tempV32=new t.Vector3,ie._tempV33=new t.Vector3,ie._tempV34=new t.Vector3,ie._tempV35=new t.Vector3,ie._tempV36=new t.Vector3;class se{constructor(e,t,r,a){this.minDepth=0,this.maxDepth=1,this.x=null!=e?e:0,this.y=null!=t?t:0,this.width=null!=r?r:0,this.height=null!=a?a:0}project(e,r,a){t.Vector3.transformV3ToV4(e,r,a);var n=a.x,i=a.y,s=a.z,o=a.w;1!==o&&(n/=o,i/=o,s/=o),a.x=.5*(n+1)*this.width+this.x,a.y=.5*(1-i)*this.height+this.y,a.z=s*(this.maxDepth-this.minDepth)+this.minDepth}unprojectFromMat(e,r,a){var n=r.elements;a.x=(e.x-this.x)/this.width*2-1,a.y=-((e.y-this.y)/this.height*2-1),a.z=(e.z-this.minDepth)/(this.maxDepth-this.minDepth);var i=a.x*n[3]+a.y*n[7]+a.z*n[11]+n[15];t.Vector3.transformV3ToV3(a,r,a),1!==i&&(a.x=a.x/i,a.y=a.y/i,a.z=a.z/i)}unprojectFromWVP(e,r,a,n,i){t.Matrix4x4.multiply(r,a,se._tempMatrix4x4),n&&t.Matrix4x4.multiply(se._tempMatrix4x4,n,se._tempMatrix4x4),se._tempMatrix4x4.invert(se._tempMatrix4x4),this.unprojectFromMat(e,se._tempMatrix4x4,i)}set(e,t,r,a){this.x=e,this.y=t,this.width=r,this.height=a}cloneTo(e){e.x=this.x,e.y=this.y,e.width=this.width,e.height=this.height,e.minDepth=this.minDepth,e.maxDepth=this.maxDepth}}se._tempMatrix4x4=new t.Matrix4x4,se._tempViewport=new se(0,0,0,0);class oe{constructor(){}static calculateCursorRay(e,r,a,n,i,s){var o=e.x,l=e.y,h=oe._tempVector30,c=h;c.x=o,c.y=l,c.z=r.minDepth;var d=oe._tempVector31,_=d;_.x=o,_.y=l,_.z=r.maxDepth;var u=s.origin,m=oe._tempVector32;r.unprojectFromWVP(h,a,n,i,u),r.unprojectFromWVP(d,a,n,i,m);var f=s.direction;f.x=m.x-u.x,f.y=m.y-u.y,f.z=m.z-u.z,t.Vector3.normalize(s.direction,s.direction)}static rayIntersectsTriangle(e,r,a,n){var i=oe._tempVector30,s=oe._tempVector31;t.Vector3.subtract(a,r,i),t.Vector3.subtract(n,r,s);var o,l=oe._tempVector32;if(t.Vector3.cross(e.direction,s,l),(o=t.Vector3.dot(i,l))>-Number.MIN_VALUE&&o<Number.MIN_VALUE)return Number.NaN;var h,c=1/o,d=oe._tempVector33;if(t.Vector3.subtract(e.origin,r,d),h=t.Vector3.dot(d,l),(h*=c)<0||h>1)return Number.NaN;var _,u,m=oe._tempVector34;return t.Vector3.cross(d,i,m),_=t.Vector3.dot(e.direction,m),(_*=c)<0||h+_>1?Number.NaN:(u=t.Vector3.dot(s,m),(u*=c)<0?Number.NaN:u)}static rayPlaneIntersection(e,r){let a=new t.Vector3,n=t.Vector3.dot(e.direction.normalize(),r.normal.normalize());if(0==n)return null;let i=(r.distance-t.Vector3.dot(e.origin,r.normal))/n;return i<0?null:(e.at(i,a),a)}}oe._tempVector30=new t.Vector3,oe._tempVector31=new t.Vector3,oe._tempVector32=new t.Vector3,oe._tempVector33=new t.Vector3,oe._tempVector34=new t.Vector3;class le extends J{static __init__(){le.SHADERDEFINE_RECEIVE_SHADOW=t.Shader3D.getDefineByName("RECEIVESHADOW"),le.SAHDERDEFINE_LIGHTMAP=t.Shader3D.getDefineByName("LIGHTMAP"),le.SHADERDEFINE_LIGHTMAP_DIRECTIONAL=t.Shader3D.getDefineByName("LIGHTMAP_DIRECTIONAL"),le.LIGHTMAPSCALEOFFSET=t.Shader3D.propertyNameToID("u_LightmapScaleOffset"),le.LIGHTMAP=t.Shader3D.propertyNameToID("u_LightMap"),le.LIGHTMAP_DIRECTION=t.Shader3D.propertyNameToID("u_LightMapDirection"),le.PICKCOLOR=t.Shader3D.propertyNameToID("u_PickColor"),le.REFLECTIONCUBE_PROBEPOSITION=t.Shader3D.propertyNameToID("u_SpecCubeProbePosition"),le.REFLECTIONCUBE_PROBEBOXMAX=t.Shader3D.propertyNameToID("u_SpecCubeBoxMax"),le.REFLECTIONCUBE_PROBEBOXMIN=t.Shader3D.propertyNameToID("u_SpecCubeBoxMin"),le.AMBIENTCOLOR=t.Shader3D.propertyNameToID("u_AmbientColor"),le.AMBIENTSH=t.Shader3D.propertyNameToID("u_IblSH"),le.AMBIENTINTENSITY=t.Shader3D.propertyNameToID("u_AmbientIntensity"),le.REFLECTIONINTENSITY=t.Shader3D.propertyNameToID("u_ReflectionIntensity"),le.IBLTEX=t.Shader3D.propertyNameToID("u_IBLTex");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(le.LIGHTMAPSCALEOFFSET,"u_LightmapScaleOffset"),e.addShaderUniform(le.LIGHTMAP,"u_LightMap"),e.addShaderUniform(le.LIGHTMAP_DIRECTION,"u_LightMapDirection"),e.addShaderUniform(le.PICKCOLOR,"u_PickColor"),e.addShaderUniform(le.REFLECTIONCUBE_PROBEPOSITION,"u_SpecCubeProbePosition"),e.addShaderUniform(le.REFLECTIONCUBE_PROBEBOXMAX,"u_SpecCubeBoxMax"),e.addShaderUniform(le.REFLECTIONCUBE_PROBEBOXMIN,"u_SpecCubeBoxMin"),e.addShaderUniform(le.IBLTEX,"u_IBLTex"),e.addShaderUniform(le.AMBIENTSH,"u_IblSH"),e.addShaderUniform(le.AMBIENTCOLOR,"u_AmbientColor"),e.addShaderUniform(le.AMBIENTINTENSITY,"u_AmbientIntensity"),e.addShaderUniform(le.REFLECTIONINTENSITY,"u_ReflectionIntensity"),le.REFLECTIONTEXTURE=t.Shader3D.propertyNameToID("u_ReflectTexture"),le.REFLECTIONCUBE_HDR_PARAMS=t.Shader3D.propertyNameToID("u_ReflectCubeHDRParams"),e.addShaderUniform(le.REFLECTIONTEXTURE,"REFLECTIONTEXTURE"),e.addShaderUniform(le.REFLECTIONCUBE_HDR_PARAMS,"u_ReflectCubeHDRParams"),le.AMBIENTSHAR=t.Shader3D.propertyNameToID("u_AmbientSHAr"),e.addShaderUniform(le.AMBIENTSHAR,"u_AmbientSHAr"),le.AMBIENTSHAG=t.Shader3D.propertyNameToID("u_AmbientSHAg"),e.addShaderUniform(le.AMBIENTSHAG,"u_AmbientSHAg"),le.AMBIENTSHAB=t.Shader3D.propertyNameToID("u_AmbientSHAb"),e.addShaderUniform(le.AMBIENTSHAB,"u_AmbientSHAb"),le.AMBIENTSHBR=t.Shader3D.propertyNameToID("u_AmbientSHBr"),e.addShaderUniform(le.AMBIENTSHBR,"u_AmbientSHBr"),le.AMBIENTSHBG=t.Shader3D.propertyNameToID("u_AmbientSHBg"),e.addShaderUniform(le.AMBIENTSHBG,"u_AmbientSHBg"),le.AMBIENTSHBB=t.Shader3D.propertyNameToID("u_AmbientSHBb"),e.addShaderUniform(le.AMBIENTSHBB,"u_AmbientSHBb"),le.AMBIENTSHC=t.Shader3D.propertyNameToID("u_AmbientSHC"),e.addShaderUniform(le.AMBIENTSHC,"u_AmbientSHC")}constructor(e){super(e)}_onInActive(){super._onInActive()}_onActive(){super._onActive()}_onActiveInScene(){super._onActiveInScene()}_create(){return new J(this.name)}_addToInitStaticBatchManager(){}_setBelongScene(e){super._setBelongScene(e)}_setUnBelongScene(){super._setUnBelongScene()}}class he{}e.TextureCubeFace=void 0,(G=e.TextureCubeFace||(e.TextureCubeFace={}))[G.PositiveX=0]="PositiveX",G[G.NegativeX=1]="NegativeX",G[G.PositiveY=2]="PositiveY",G[G.NegativeY=3]="NegativeY",G[G.PositiveZ=4]="PositiveZ",G[G.NegativeZ=5]="NegativeZ";const ce=new Uint8Array(3);class de extends t.BaseTexture{static get blackTexture(){return de._blackTexture}static get grayTexture(){return de._grayTexture}static get whiteTexture(){return de._grayTexture}static __init__(){var e=new de(1,t.TextureFormat.R8G8B8,!1),r=new de(1,t.TextureFormat.R8G8B8,!1),a=new de(1,t.TextureFormat.R8G8B8,!1),n=ce;n[0]=0,n[1]=0,n[2]=0,e.setPixelsData([n,n,n,n,n,n],!1,!1),e.lock=!0,n[0]=128,n[1]=128,n[2]=128,r.setPixelsData([n,n,n,n,n,n],!1,!1),r.lock=!0,n[0]=255,n[1]=255,n[2]=255,a.setPixelsData([n,n,n,n,n,n],!1,!1),a.lock=!0,de._grayTexture=r,de._blackTexture=e,de._whiteTexture=a}constructor(e,r,a=!0,n=!1){super(e,e,r),this._dimension=t.TextureDimension.Cube,this._texture=t.LayaGL.textureContext.createTextureInternal(this._dimension,e,e,r,a,n)}setImageData(e,r,a){let n=!1,i=e.findIndex((e=>null!=e));if(-1!=i){let t=e[i];e.every((e=>null!=e&&e.width==t.width&&e.height==t.height))||(n=!0)}else n=!0;let s=this._texture;if(n){let e=ce;t.LayaGL.textureContext.setCubePixelsData(s,[e,e,e,e,e,e],r,a)}else t.LayaGL.textureContext.setCubeImageData(s,e,r,a)}setPixelsData(e,r,a){let n=this._texture;t.LayaGL.textureContext.setCubePixelsData(n,e,r,a)}updateSubPixelsData(e,r,a,n,i,s,o,l,h){let c=this._texture;t.LayaGL.textureContext.setCubeSubPixelData(c,e,s,o,r,a,n,i,l,h)}setDDSData(e){let r=this._texture;t.LayaGL.textureContext.setCubeDDSData(r,e)}setKTXData(e){let r=this._texture;t.LayaGL.textureContext.setCubeKTXData(r,e)}get defaultTexture(){return de.grayTexture}}class _e{static merge(e,r,a){t.Vector3.min(e.min,r.min,a.min),t.Vector3.max(e.max,r.max,a.max),a.min=a.min,a.max=a.max}static containPoint(e,t){let r=e.getMax(),a=e.getMin();return!(t.x>r.x||t.x<a.x)&&(!(t.y>r.y||t.y<a.y)&&!(t.z>r.z||t.z<a.z))}get min(){return this.getMin()}set min(e){this.setMin(e)}get max(){return this.getMax()}set max(e){this.setMax(e)}setMin(e){this._imp.setMin(e)}getMin(){return this._imp.getMin()}setMax(e){this._imp.setMax(e)}getMax(){return this._imp.getMax()}setCenter(e){this._imp.setCenter(e)}getCenter(){return this._imp.getCenter()}setExtent(e){this._imp.setExtent(e)}getExtent(){return this._imp.getExtent()}constructor(e,r){this._imp=t.LayaGL.renderOBJCreate.createBounds(e,r)}_getUpdateFlag(e){return this._imp._getUpdateFlag(e)}_setUpdateFlag(e,t){this._imp._setUpdateFlag(e,t)}_getCenter(e,r,a){t.Vector3.add(e,r,a),t.Vector3.scale(a,.5,a)}_getExtent(e,r,a){t.Vector3.subtract(r,e,a),t.Vector3.scale(a,.5,a)}_getMin(e,r,a){t.Vector3.subtract(e,r,a)}_getMax(e,r,a){t.Vector3.add(e,r,a)}_rotateExtents(e,t,r){var a=e.x,n=e.y,i=e.z,s=t.elements;r.x=Math.abs(s[0]*a)+Math.abs(s[4]*n)+Math.abs(s[8]*i),r.y=Math.abs(s[1]*a)+Math.abs(s[5]*n)+Math.abs(s[9]*i),r.z=Math.abs(s[2]*a)+Math.abs(s[6]*n)+Math.abs(s[10]*i)}_tranform(e,t){this._imp._tranform(e,t._imp)}getCorners(e){this._imp.getCorners(e)}getBoundBox(e){this._imp._getBoundBox().cloneTo(e)}calculateBoundsintersection(e){return this._imp.calculateBoundsintersection(e._imp)}cloneTo(e){this._imp.cloneTo(e._imp)}clone(){var e=new _e(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}var ue,me,fe,ge,pe,Se,Te,Ee,Ae,xe,De,Re,Ce,ve,ye,Ie,Me,Le,Oe,be,we;_e._UPDATE_MIN=1,_e._UPDATE_MAX=2,_e._UPDATE_CENTER=4,_e._UPDATE_EXTENT=8,new t.Vector3,new t.Vector3,e.volumeIntersectType=void 0,(ue=e.volumeIntersectType||(e.volumeIntersectType={}))[ue.contain=0]="contain",ue[ue.intersect=1]="intersect",ue[ue.Disjoint=2]="Disjoint";class Be extends t.Component{constructor(){super(),this._aroundVolumeCacheNum=0,this._bounds=new _e,this._primitiveBounds=new _e,this._importance=0,this.runInEditor=!0}get type(){return this._type}get bounds(){return this._bounds}get boundsMax(){return this._primitiveBounds.getMax()}set boundsMax(e){this._primitiveBounds.setMax(e),this._reCaculateBoundBox()}set boundsMin(e){this._primitiveBounds.setMin(e),this._reCaculateBoundBox()}get boundsMin(){return this._primitiveBounds.getMin()}get probePosition(){return this.owner.transform.position}get importance(){return this._importance}set importance(e){this._importance=e}_onEnable(){this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._VolumeChange),this._volumeManager=this.owner.scene._volumeManager,this._volumeManager.add(this),this._reCaculateBoundBox()}_onDisable(){this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._VolumeChange),this._volumeManager.remove(this)}_VolumeChange(){this._volumeManager._needUpdateAllRender=!0,this._reCaculateBoundBox()}_reCaculateBoundBox(){this.owner&&this._primitiveBounds._tranform(this.owner.transform.worldMatrix,this._bounds)}_cloneTo(e){}}class Ne{constructor(){this._reflectionProbes=new t.SingletonList,this._needUpdateAllRender=!1,this._sceneReflectionProbe=new Ge,this._sceneReflectionProbe.boxProjection=!1,this._sceneReflectionProbe._isScene=!0}set sceneReflectionProbe(e){this._sceneReflectionProbe=e,this._needUpdateAllRender=!0}get sceneReflectionProbe(){return this._sceneReflectionProbe}_updateRenderObject(e){if(0!=this._reflectionProbes.length){for(var t,r,a=this._reflectionProbes.elements,n=0,i=e.bounds,s=0,o=this._reflectionProbes.length;s<o;s++){var l=a[s];if(t){if(t.importance>l.importance)continue;if((r=i.calculateBoundsintersection(l.bounds))<n&&t.importance==l.importance)continue}else if((r=i.calculateBoundsintersection(l.bounds))<n)continue;t=l,n=r}!t&&this._sceneReflectionProbe&&(t=this._sceneReflectionProbe),e.probReflection=t}else e.probReflection=this._sceneReflectionProbe}add(e){this._reflectionProbes.add(e),this._needUpdateAllRender=!0}remove(e){this._reflectionProbes.remove(e),this._needUpdateAllRender=!0}handleMotionlist(e){var t=e.elements;let r;for(var a=0,n=e.length;a<n;a++)r=t[a],r._surportReflectionProbe&&1==r._reflectionMode&&this._updateRenderObject(t[a])}reCaculateAllRenderObjects(e){var t=e.elements;let r;for(var a=0,n=e.length;a<n;a++)r=t[a],r._surportReflectionProbe&&1==r._reflectionMode&&this._updateRenderObject(r),this._needUpdateAllRender=!1}destroy(){for(let e=0;e<this._reflectionProbes.length;e++){this._reflectionProbes.elements[e].destroy()}this._reflectionProbes.length=0,this._sceneReflectionProbe.destroy(),this._sceneReflectionProbe=null}}class Ve{constructor(){this._motionObjects=new t.SingletonList,this._volumeList=new t.SingletonList,this._needUpdateAllRender=!1,this._regVolumeManager={},this._reflectionProbeManager=new Ne,this._regVolumeManager[Ve.ReflectionProbeVolumeType]=this._reflectionProbeManager}get reflectionProbeManager(){return this._reflectionProbeManager}add(e){let t=this._regVolumeManager[e.type];t?t.add(e):(this._volumeList.add(e),this._needUpdateAllRender=!0)}remove(e){let t=this._regVolumeManager[e.type];t?t.remove(e):(this._volumeList.remove(e),this._needUpdateAllRender=!0)}addMotionObject(e){this._motionObjects.add(e)}removeMotionObject(e){this._motionObjects.remove(e)}_updateRenderObject(e){let t,r=this._volumeList.elements,a=e.bounds.getCenter();for(var n=0,i=this._volumeList.length;n<i;n++){let e=r[n],i=e.bounds;_e.containPoint(i,a)&&(t=e)}e.volume=t}handleMotionlist(){for(var e=this._motionObjects.elements,t=0,r=this._motionObjects.length;t<r;t++)this._updateRenderObject(e[t]);this.reflectionProbeManager.handleMotionlist(this._motionObjects),this.clearMotionObjects()}reCaculateAllRenderObjects(e){if(this._needUpdateAllRender){for(var t=e.elements,r=0,a=e.length;r<a;r++)this._updateRenderObject(t[r]);this._needUpdateAllRender=!1}else this.handleMotionlist();this.reflectionProbeManager._needUpdateAllRender?this.reflectionProbeManager.reCaculateAllRenderObjects(e):this.reflectionProbeManager.handleMotionlist(this._motionObjects)}needreCaculateAllRenderObjects(){return this._needUpdateAllRender||this.reflectionProbeManager._needUpdateAllRender}clearMotionObjects(){this._motionObjects.length=0}destroy(){}}Ve.ReflectionProbeVolumeType=1;class Pe{constructor(){this._coefficients=new Float32Array(27)}getCoefficient(e,t){return this._coefficients[9*e+t]}setCoefficient(e,t,r){this._coefficients[9*e+t]=r}setCoefficients(e,t,r,a,n,i,s,o,l,h){var c=9*e;this._coefficients[c]=t,this._coefficients[++c]=r,this._coefficients[++c]=a,this._coefficients[++c]=n,this._coefficients[++c]=i,this._coefficients[++c]=s,this._coefficients[++c]=o,this._coefficients[++c]=l,this._coefficients[++c]=h}cloneTo(e){if(this!==e)for(var t=this._coefficients,r=e._coefficients,a=0;a<27;a++)r[a]=t[a]}}Pe._default=new Pe;class Fe{static surfaceArea(e,t){return Math.atan2(e*t,Math.sqrt(e*e+t*t+1))}static uv2Dir(t,r,a,n){switch(a){case e.TextureCubeFace.PositiveX:n.x=1,n.y=-r,n.z=-t;break;case e.TextureCubeFace.NegativeX:n.x=-1,n.y=-r,n.z=t;break;case e.TextureCubeFace.PositiveY:n.x=t,n.y=1,n.z=r;break;case e.TextureCubeFace.NegativeY:n.x=t,n.y=-1,n.z=-r;break;case e.TextureCubeFace.PositiveZ:n.x=t,n.y=-r,n.z=1;break;case e.TextureCubeFace.NegativeZ:n.x=-t,n.y=-r,n.z=-1}}static sh_eval_9(e,t,r,a){const n=Math.sqrt,i=Math.PI;switch(e){case 0:return.5*n(1/i);case 1:return.5*-r*n(3/i);case 2:return.5*a*n(3/i);case 3:return.5*-t*n(3/i);case 4:return t*r*.5*n(15/i);case 5:return-r*a*.5*n(15/i);case 6:return.25*(3*a*a-1)*n(5/i);case 7:return-t*a*.5*n(15/i);case 8:return.25*(t*t-r*r)*n(15/i);default:return 0}}static CalCubemapSH(e,r,a,n=!0){let i=a,s=a,o=this._tempSHR.fill(0),l=this._tempSHG.fill(0),h=this._tempSHB.fill(0),c=new t.Vector3;for(let a=0;a<6;a++){let d=e[a];for(let e=0;e<s;e++)for(let _=0;_<i;_++){let u=(_+.5)/i*2-1,m=(e+.5)/s*2-1,f=1/i,g=1/s,p=u-f,S=m-g,T=u+f,E=m+g,A=this.surfaceArea(p,S)-this.surfaceArea(p,E)-this.surfaceArea(T,S)+this.surfaceArea(T,E);this.uv2Dir(u,m,a,c),t.Vector3.normalize(c,c);let x=(_+e*i)*r,D=d[x],R=d[x+1],C=d[x+2];n&&(D=t.Color.gammaToLinearSpace(D),R=t.Color.gammaToLinearSpace(R),C=t.Color.gammaToLinearSpace(C));for(let e=0;e<this.SH_Count;e++){let t=this.sh_eval_9(e,c.x,c.y,c.z);o[e]+=D*t*A,l[e]+=R*t*A,h[e]+=C*t*A}}}let d=new Pe;for(let e=0;e<this.SH_Count;e++){let t=this.k[e],r=o[e];d.setCoefficient(0,e,r*t);let a=l[e];d.setCoefficient(1,e,a*t);let n=h[e];d.setCoefficient(2,e,n*t)}return d}static CalGradientSH(r,a,n,i=!0){console.time("Gradient SH");let s=this._tempSkyPixels,o=this._tempEquatorPixels,l=this._tempGroundPixels;const fillPixelBuffer=(e,r,a)=>{let n=new t.Color(r.x,r.y,r.z,1);a&&n.toLinear(n);let i=Math.min(n.r,1),s=Math.min(n.g,1),o=Math.min(n.b,1);for(let t=0;t<e.length;t+=3)e[t]=i,e[t+1]=s,e[t+2]=o};fillPixelBuffer(s,r,i),fillPixelBuffer(o,a,i),fillPixelBuffer(l,n,i);let h=[];h[e.TextureCubeFace.PositiveY]=s,h[e.TextureCubeFace.NegativeY]=l,h[e.TextureCubeFace.PositiveX]=o,h[e.TextureCubeFace.NegativeX]=o,h[e.TextureCubeFace.PositiveZ]=o,h[e.TextureCubeFace.NegativeZ]=o;let c=Fe.CalCubemapSH(h,3,this.GradientSimulateSize,!1);return console.timeEnd("Gradient SH"),c}}Fe._tempSHR=new Float32Array(9),Fe._tempSHG=new Float32Array(9),Fe._tempSHB=new Float32Array(9),Fe.k=[.28209479177387814,-.32573500793527993,.32573500793527993,-.32573500793527993,.2731371076480198,-.2731371076480198,.07884789131313,-.2731371076480198,.1365685538240099],Fe.GradientSimulateSize=3,Fe.SH_Count=9,Fe._tempSkyPixels=new Float32Array(Fe.GradientSimulateSize*Fe.GradientSimulateSize*3),Fe._tempEquatorPixels=new Float32Array(Fe.GradientSimulateSize*Fe.GradientSimulateSize*3),Fe._tempGroundPixels=new Float32Array(Fe.GradientSimulateSize*Fe.GradientSimulateSize*3);class Ue{}e.AmbientMode=void 0,(me=e.AmbientMode||(e.AmbientMode={}))[me.SolidColor=0]="SolidColor",me[me.SphericalHarmonics=1]="SphericalHarmonics",me[me.TripleColor=2]="TripleColor",e.ReflectionProbeMode=void 0,(fe=e.ReflectionProbeMode||(e.ReflectionProbeMode={}))[fe.off=0]="off",fe[fe.simple=1]="simple";class Ge extends Be{constructor(){super(),this._boxProjection=!1,this._ambientColor=new t.Color,this._ambientMode=e.AmbientMode.SolidColor,this._isScene=!1,this._reflectionHDRParams=new t.Vector4,this._reflectionDecodeFormat=t.TextureDecodeFormat.Normal,this._ambientSkyColor=new t.Vector3,this._ambientEquatorColor=new t.Vector3,this._ambientGroundColor=new t.Vector3,this._importance=0,this._type=Ve.ReflectionProbeVolumeType,this._ambientIntensity=1,this._reflectionIntensity=1,this.boundsMax=new t.Vector3(5,5,5),this.boundsMin=new t.Vector3(-5,-5,-5)}get boxProjection(){return this._boxProjection}set boxProjection(e){e!=this._boxProjection&&(this._updateMark=o.Scene3D._updateMark),this._boxProjection=e}get importance(){return this._importance}set importance(e){this._importance=e}get ambientIntensity(){return this._ambientIntensity}set ambientIntensity(e){e!=this._ambientIntensity&&(this._ambientIntensity=e,this._updateMark=o.Scene3D._updateMark)}get reflectionIntensity(){return this._reflectionIntensity}set reflectionIntensity(e){e!=this._reflectionIntensity&&(e=Math.max(e,0),this._reflectionIntensity=e,this._updateMark=o.Scene3D._updateMark)}get bounds(){return this._bounds}set boundsMax(e){super.boundsMax=e,this.boxProjection&&(this._updateMark=o.Scene3D._updateMark)}get boundsMax(){return this._primitiveBounds.getMax()}set boundsMin(e){super.boundsMin=e,this.boxProjection&&(this._updateMark=o.Scene3D._updateMark)}get boundsMin(){return this._primitiveBounds.getMin()}get probePosition(){return this.owner.transform.position}get ambientColor(){return this._ambientColor}set ambientColor(t){t&&t.cloneTo(this._ambientColor),this.ambientMode==e.AmbientMode.SolidColor&&(this._updateMark=o.Scene3D._updateMark)}get ambientSH(){return this._ambientSH}set ambientSH(t){this.ambientMode==e.AmbientMode.SphericalHarmonics&&(this._updateMark=o.Scene3D._updateMark),this._ambientSH=t}get ambientMode(){return this._ambientMode}set ambientMode(t){t!=this.ambientMode&&(this._ambientMode=t,this.ambientSH||(t==e.AmbientMode.SphericalHarmonics?this._ambientSphericalHarmonics&&this._applySHCoefficients(this._ambientSphericalHarmonics,2.2):t==e.AmbientMode.TripleColor&&this._ambientTripleColorSphericalHarmonics&&this._applySHCoefficients(this._ambientTripleColorSphericalHarmonics,1)),this._updateMark=o.Scene3D._updateMark)}get iblTex(){return this._iblTex}set iblTex(e){this.iblTex!=e&&(this.iblTex&&this.iblTex._removeReference(),this._iblTex=e,this._iblTex._addReference(),this._updateMark=o.Scene3D._updateMark)}get iblTexRGBD(){return this._iblTexRGBD}set iblTexRGBD(e){e!=this._iblTexRGBD&&(this._iblTexRGBD=e,this._updateMark=o.Scene3D._updateMark)}applyReflectionShaderData(r){this.boxProjection?(r.addDefine(Ue.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),r.setShaderData(le.REFLECTIONCUBE_PROBEPOSITION,t.ShaderDataType.Vector3,this.probePosition),r.setShaderData(le.REFLECTIONCUBE_PROBEBOXMAX,t.ShaderDataType.Vector3,this._bounds.getMax()),r.setShaderData(le.REFLECTIONCUBE_PROBEBOXMIN,t.ShaderDataType.Vector3,this._bounds.getMin())):r.removeDefine(Ue.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),this.ambientMode==e.AmbientMode.SolidColor?(r.removeDefine(Ue.SHADERDEFINE_GI_LEGACYIBL),r.removeDefine(Ue.SHADERDEFINE_GI_IBL),r.setColor(le.AMBIENTCOLOR,this.ambientColor)):this.iblTex&&this.ambientSH?(r.addDefine(Ue.SHADERDEFINE_GI_IBL),r.removeDefine(Ue.SHADERDEFINE_GI_LEGACYIBL),this.iblTex&&r.setTexture(le.IBLTEX,this.iblTex),this.iblTexRGBD?r.addDefine(Ue.SHADERDEFINE_IBL_RGBD):r.removeDefine(Ue.SHADERDEFINE_IBL_RGBD),this.ambientSH&&r.setBuffer(le.AMBIENTSH,this.ambientSH)):(r.removeDefine(Ue.SHADERDEFINE_GI_IBL),r.addDefine(Ue.SHADERDEFINE_GI_LEGACYIBL),this._reflectionTexture&&(r.setShaderData(le.REFLECTIONTEXTURE,t.ShaderDataType.TextureCube,this.reflectionTexture),r.setShaderData(le.REFLECTIONCUBE_HDR_PARAMS,t.ShaderDataType.Vector4,this.reflectionHDRParams)),this._shCoefficients&&(r.setVector(le.AMBIENTSHAR,this._shCoefficients[0]),r.setVector(le.AMBIENTSHAG,this._shCoefficients[1]),r.setVector(le.AMBIENTSHAB,this._shCoefficients[2]),r.setVector(le.AMBIENTSHBR,this._shCoefficients[3]),r.setVector(le.AMBIENTSHBG,this._shCoefficients[4]),r.setVector(le.AMBIENTSHBB,this._shCoefficients[5]),r.setVector(le.AMBIENTSHC,this._shCoefficients[6]))),r.setNumber(le.AMBIENTINTENSITY,this.ambientIntensity),r.setNumber(le.REFLECTIONINTENSITY,this.reflectionIntensity)}_onEnable(){super._onEnable(),this._updateMark=o.Scene3D._updateMark}_onDisable(){super._onDisable()}_onDestroy(){}_cloneTo(e){}get reflectionTexture(){return this._reflectionTexture}set reflectionTexture(e){this._reflectionTexture!=e&&(this._reflectionTexture&&this.iblTex._removeReference(),this._reflectionTexture=e,this._reflectionTexture._addReference(),this._updateMark=o.Scene3D._updateMark)}get customReflection(){return this.reflectionTexture}set customReflection(e){this.reflectionTexture=e}get reflectionHDRParams(){return this._reflectionHDRParams}set reflectionHDRParams(e){this._reflectionHDRParams=e,this._updateMark=o.Scene3D._updateMark}get reflectionDecodingFormat(){return this._reflectionDecodeFormat}set reflectionDecodingFormat(e){this._reflectionDecodeFormat!=e&&(this._reflectionDecodeFormat=e,this._reflectionDecodeFormat==t.TextureDecodeFormat.RGBM&&(this._reflectionHDRParams.x=5),this._updateMark=o.Scene3D._updateMark)}get ambientSphericalHarmonics(){return this._ambientSphericalHarmonics}set ambientSphericalHarmonics(t){var r=t||Pe._default;this._ambientSphericalHarmonics||(this._ambientSphericalHarmonics=new Pe),this._ambientSphericalHarmonics!=t&&t.cloneTo(this._ambientSphericalHarmonics),this.ambientMode==e.AmbientMode.TripleColor&&this._applySHCoefficients(r,2.2),this._updateMark=o.Scene3D._updateMark}_applySHCoefficients(e,r){if(!this._shCoefficients){this._shCoefficients=new Array(7);for(var a=0;a<7;a++)this._shCoefficients[a]=new t.Vector4}var n=this._shCoefficients;for(a=0;a<3;a++){var i=n[a],s=n[a+3];i.setValue(e.getCoefficient(a,3)*r,e.getCoefficient(a,1)*r,e.getCoefficient(a,2)*r,(e.getCoefficient(a,0)-e.getCoefficient(a,6))*r),s.setValue(e.getCoefficient(a,4)*r,e.getCoefficient(a,5)*r,3*e.getCoefficient(a,6)*r,e.getCoefficient(a,7)*r)}n[6].setValue(e.getCoefficient(0,8)*r,e.getCoefficient(1,8)*r,e.getCoefficient(2,8)*r,1)}setGradientAmbient(t,r,a){this._ambientSkyColor=t,this._ambientEquatorColor=r,this._ambientGroundColor=a;let n=Fe.CalGradientSH(this._ambientSkyColor,this._ambientEquatorColor,this._ambientGroundColor,!0);this._ambientTripleColorSphericalHarmonics=n,this.ambientMode==e.AmbientMode.TripleColor&&this._applySHCoefficients(n,2.2),this._updateMark=o.Scene3D._updateMark}}Ge.TEMPVECTOR3=new t.Vector3,Ge.defaultTextureHDRDecodeValues=new t.Vector4(1,1,0,0),e.RenderBitFlag=void 0,(ge=e.RenderBitFlag||(e.RenderBitFlag={}))[ge.RenderBitFlag_CullFlag=0]="RenderBitFlag_CullFlag",ge[ge.RenderBitFlag_Batch=1]="RenderBitFlag_Batch",ge[ge.RenderBitFlag_Editor=2]="RenderBitFlag_Editor",ge[ge.RenderBitFlag_InstanceBatch=3]="RenderBitFlag_InstanceBatch",ge[ge.RenderBitFlag_VertexMergeBatch=4]="RenderBitFlag_VertexMergeBatch";class He extends t.Component{static __init__(){He.shaderValueInit()}static getMeshDefine(e,r){r.length=0;for(var a=0,n=e._subMeshes.length;a<n;a++)for(var i=e.getSubMesh(a)._vertexBuffer._vertexDeclaration._vertexElements,s=0,o=i.length;s<o;s++){switch(i[s]._elementUsage){case t.VertexMesh.MESH_COLOR0:r.push(he.SHADERDEFINE_COLOR);break;case t.VertexMesh.MESH_TEXTURECOORDINATE0:r.push(he.SHADERDEFINE_UV0);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:r.push(he.SHADERDEFINE_UV1);break;case t.VertexMesh.MESH_TANGENT0:r.push(he.SHADERDEFINE_TANGENT)}}}static changeVertexDefine(e,t,r){var a=e;if(a){He.getMeshDefine(a,He._meshVerticeDefine);for(var n=0,i=He._meshVerticeDefine.length;n<i;n++)r.removeDefine(He._meshVerticeDefine[n])}if(t){He.getMeshDefine(t,He._meshVerticeDefine);for(n=0,i=He._meshVerticeDefine.length;n<i;n++)r.addDefine(He._meshVerticeDefine[n])}}static shaderValueInit(){Ue.SHADERDEFINE_GI_LEGACYIBL=t.Shader3D.getDefineByName("GI_LEGACYIBL"),Ue.SHADERDEFINE_GI_IBL=t.Shader3D.getDefineByName("GI_IBL"),Ue.SHADERDEFINE_IBL_RGBD=t.Shader3D.getDefineByName("IBL_RGBD"),Ue.SHADERDEFINE_SPECCUBE_BOX_PROJECTION=t.Shader3D.getDefineByName("SPECCUBE_BOX_PROJECTION")}set ratioIgnor(e){this._ratioIgnor=e}get ratioIgnor(){return this._ratioIgnor}get renderbitFlag(){return this._rendernode.renderbitFlag}set boundsChange(e){this._rendernode.boundsChange=e}get boundsChange(){return this._rendernode.boundsChange}get renderNode(){return this._rendernode}set distanceForSort(e){this._rendernode.distanceForSort=e}get distanceForSort(){return this._rendernode.distanceForSort}set geometryBounds(e){this._baseGeometryBounds=this._rendernode.geometryBounds=e}get geometryBounds(){return this._baseGeometryBounds}get id(){return this._rendernode.renderId}get lightmapIndex(){return this._lightmapIndex}set lightmapIndex(e){this._lightmapIndex=e}get lightmapScaleOffset(){return this._lightmapScaleOffset}set lightmapScaleOffset(e){if(!e)throw"BaseRender: lightmapScaleOffset can't be null.";this._lightmapScaleOffset=e,this._setShaderValue(le.LIGHTMAPSCALEOFFSET,t.ShaderDataType.Vector4,e)}get material(){var e=this._sharedMaterials[0];if(e&&!this._materialsInstance[0]){var t=this._getInstanceMaterial(e,0),r=this._renderElements[0];r&&(r.material=t)}return this._sharedMaterials[0]}set material(e){this.sharedMaterial=e,this._isSupportReflection()}get materials(){for(var e=0,t=this._sharedMaterials.length;e<t;e++)if(!this._materialsInstance[e]){var r=this._getInstanceMaterial(this._sharedMaterials[e],e),a=this._renderElements[e];a&&(a.material=r)}return this._sharedMaterials.slice()}set materials(e){this.sharedMaterials=e,this._isSupportReflection()}get sharedMaterial(){return this._sharedMaterials[0]}set sharedMaterial(e){var t=this._sharedMaterials[0];if(t!==e){this._sharedMaterials[0]=e,this._materialsInstance[0]=!1,this._changeMaterialReference(t,e);var r=this._renderElements[0];r&&(r.material=e)}this._isSupportReflection()}get sharedMaterials(){return this._sharedMaterials.slice()}set sharedMaterials(e){for(var t=this._materialsInstance,r=this._sharedMaterials,a=0,n=r.length;a<n;a++){var i=r[a];i&&i._removeReference()}if(!e)throw new Error("BaseRender: shadredMaterials value can't be null.");var s=e.length;for(t.length=s,r.length=s,a=0;a<s;a++){i=r[a];var o=e[a];if(i!==o){t[a]=!1;var l=this._renderElements[a];l&&(l.material=o)}o&&o._addReference(),r[a]=o}this._isSupportReflection()}get bounds(){return this.boundsChange&&(this._calculateBoundingBox(),this.boundsChange=!1),this._bounds}set receiveShadow(e){this.renderNode.receiveShadow!==e&&(this.renderNode.receiveShadow=e,e?this._shaderValues.addDefine(le.SHADERDEFINE_RECEIVE_SHADOW):this._shaderValues.removeDefine(le.SHADERDEFINE_RECEIVE_SHADOW))}get receiveShadow(){return this.renderNode.receiveShadow}get castShadow(){return this.renderNode.castShadow}set castShadow(e){this.renderNode.castShadow=e}set reflectionMode(e){this._reflectionMode=e}get reflectionMode(){return this._reflectionMode}set volume(e){if(e)return this._volume!=e?(e._addRenderNode&&e._addRenderNode(this),void(this._volume=e)):void(e._motionInVolume&&e._motionInVolume(this));this._volume&&(this._volume._removeRenderNode&&this._volume._removeRenderNode(this),this._volume=null)}get volume(){return this._volume}set probReflection(r){this._probReflection!=r&&(this._probReflection=r,this._reflectionMode==e.ReflectionProbeMode.off?(this._shaderValues.removeDefine(Ue.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),this._shaderValues.addDefine(Ue.SHADERDEFINE_GI_IBL),this._setShaderValue(le.IBLTEX,t.ShaderDataType.TextureCube,de.blackTexture)):this._probReflection.applyReflectionShaderData(this._shaderValues))}constructor(){super(),this._lightmapScaleOffset=new t.Vector4(1,1,0,0),this._sharedMaterials=[],this._supportOctree=!0,this._sceneUpdateMark=-1,this._updateMark=-1,this._surportReflectionProbe=!1,this._reflectionMode=e.ReflectionProbeMode.simple,this._updateRenderType=-1,this._motionIndexList=-1,this._ratioIgnor=.005,this._LOD=-1,this._rendernode=this._createBaseRenderNode(),this._rendernode.owner=this,this._rendernode.renderId=++He._uniqueIDCounter,this._bounds=this._rendernode.bounds=new _e(t.Vector3.ZERO,t.Vector3.ZERO),this._renderElements=[],this._enabled=!0,this._materialsInstance=[],this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(null),this.lightmapIndex=-1,this.receiveShadow=!1,this.sortingFudge=0,this._customCull=this._needRender!==He.prototype._needRender,this.runInEditor=!0,this.boundsChange=!0,this._rendernode.renderbitFlag=0,this._rendernode.staticMask=1}_createBaseRenderNode(){return t.LayaGL.renderOBJCreate.createBaseRenderNode()}_changeLayer(e){this._rendernode.layer=e}_changeStaticMask(e){this._rendernode.staticMask=e}_onAdded(){this._transform=this.owner.transform,this.owner._isRenderNode++,this.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_Editor,this.owner._getBit(t.NodeFlags.HIDE_BY_EDITOR)),this._rendernode.transform=this._transform,this._changeLayer(this.owner.layer),this._changeStaticMask(this.owner._isStatic)}_onEnable(){super._onEnable(),this.owner&&(this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this.owner.on(t.Event.LAYERCHANGE,this,this._changeLayer),this.owner.on(t.Event.staticMask,this,this._changeStaticMask),this._changeLayer(this.owner.layer),this._changeStaticMask(this.owner._isStatic)),this.owner.scene._addRenderObject(this),this._setBelongScene(this.owner.scene)}_onDisable(){this.owner&&(this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this.owner.off(t.Event.LAYERCHANGE,this,this._changeLayer),this.owner.off(t.Event.staticMask,this,this._changeStaticMask)),this.owner.scene._removeRenderObject(this),this._setUnBelongScene(),this.volume=null}_changeMaterialReference(e,t){e&&e._removeReference(),t._addReference()}_getInstanceMaterial(e,t){var r=e.clone();return r.name=r.name+"(Instance)",this._materialsInstance[t]=!0,this._changeMaterialReference(this._sharedMaterials[t],r),this._sharedMaterials[t]=r,r}_isSupportReflection(){let e=this._surportReflectionProbe;this._surportReflectionProbe=!1;for(var t=this._sharedMaterials,r=0,a=t.length;r<a;r++){var n=t[r];this._surportReflectionProbe||(this._surportReflectionProbe=this._surportReflectionProbe||n&&n._shader._supportReflectionProbe)}!e&&this._surportReflectionProbe&&this._addReflectionProbeUpdate()}_onWorldMatNeedChange(e){this.boundsChange=!0,this._addReflectionProbeUpdate(),this._subUniformBufferData&&(this._subUniformBufferData._needUpdate=!0),this._batchRender&&this._batchRender._updateOneRender(this)}_calculateBoundingBox(){throw"BaseRender: must override it."}setRenderbitFlag(e,t){t?this._rendernode.renderbitFlag|=1<<e:this._rendernode.renderbitFlag&=~(1<<e)}_setShaderValue(e,t,r){this._shaderValues.setShaderData(e,t,r)}_addReflectionProbeUpdate(){this._scene&&this._scene._volumeManager.addMotionObject(this)}_applyLightMapParams(){if(this._scene){var e=this._scene.lightmaps,t=this._shaderValues,r=this._lightmapIndex;if(r>=0&&r<e.length){var a=e[r];t.setTexture(le.LIGHTMAP,a.lightmapColor),t.addDefine(le.SAHDERDEFINE_LIGHTMAP),a.lightmapDirection?(t.setTexture(le.LIGHTMAP_DIRECTION,a.lightmapDirection),t.addDefine(le.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)):t.removeDefine(le.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}else t.removeDefine(le.SAHDERDEFINE_LIGHTMAP),t.removeDefine(le.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}}_applyReflection(){this._probReflection&&(this._probReflection._updateMark=o.Scene3D._updateMark)&&this._probReflection.applyReflectionShaderData(this._shaderValues)}_setBelongScene(e){this._scene=e,this._onWorldMatNeedChange(1),this._isSupportReflection(),this._batchRender&&this._batchRender._batchOneRender(this),t.Stat.renderNode++}_setUnBelongScene(){t.Stat.renderNode--,this._scene._volumeManager.removeMotionObject(this);let e=this._batchRender;this._batchRender&&this._batchRender._removeOneRender(this),this._batchRender=e,this._scene=null}_needRender(e,t){return!e||e.intersects(this.bounds)}_CullOut(){}_renderUpdate(e,t){}_renderUpdateWithCamera(e,t){}_onDestroy(){this.owner&&this.owner._isRenderNode--,-1!==this._motionIndexList&&this._scene._sceneRenderManager.removeMotionObject(this),this._scene&&this._scene.sceneRenderableManager.removeRenderObject(this);var e=0,t=0;for(e=0,t=this._renderElements.length;e<t;e++)this._renderElements[e].destroy();for(e=0,t=this._sharedMaterials.length;e<t;e++){let t=this._sharedMaterials[e];t&&!t.destroyed&&t._removeReference()}this._renderElements=null,this._sharedMaterials=null,this._bounds=null,this._lightmapScaleOffset=null,this._scene=null,this._rendernode=null,this._shaderValues.destroy(),this._shaderValues=null,this._transform=null,this._batchRender=null,this._subUniformBufferData&&(He._transLargeUbO.recover(this._subUniformBufferData),this._subUniformBufferData=null)}_cloneTo(e){super._cloneTo(e);let t=e;t.receiveShadow=this.receiveShadow,t.sharedMaterials=this.sharedMaterials,t.reflectionMode=this.reflectionMode,t.castShadow=this.castShadow,t.sortingFudge=this.sortingFudge}}He._meshVerticeDefine=[],He._uniqueIDCounter=0,He._tempBoundBoxCorners=[new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3],He._defaultLightmapScaleOffset=new t.Vector4(1,1,0,0);class ze{set transform(e){this._renderElementOBJ._transform=e}get transform(){return this._renderElementOBJ._transform}set material(e){e&&(this._material=e,this._renderElementOBJ._materialShaderData=e.shaderData)}get material(){return this._material}set renderSubShader(e){this._subShader=e}get renderSubShader(){return this._subShader}set render(e){this._baseRender=e,this._renderElementOBJ._renderShaderData=e._shaderValues}get render(){return this._baseRender}constructor(){this._canBatch=!1,this._subShaderIndex=0,this.renderType=ze.RENDERTYPE_NORMAL,this._createRenderElementOBJ()}_createRenderElementOBJ(){this._renderElementOBJ=t.LayaGL.renderOBJCreate.createRenderElement()}getInvertFront(){return!!this.transform&&this.transform._isFrontFaceInvert}setTransform(e){this.transform=e}setGeometry(e){this._geometry=e,this._renderElementOBJ._geometry=e._geometryElementOBj}compileShader(e){var r=this._subShader._passes;this._renderElementOBJ._clearShaderInstance();for(var a=0,n=r.length;a<n;a++){var i=r[a];if(i._pipelineMode===e.pipelineMode){var s=ze._compileDefine;e.sceneShaderData?e.sceneShaderData._defineDatas.cloneTo(s):t.Shader3D._configDefineValues.cloneTo(s),e.cameraShaderData&&s.addDefineDatas(e.cameraShaderData._defineDatas),this.render&&s.addDefineDatas(this.render._shaderValues._defineDatas),s.addDefineDatas(this._renderElementOBJ._materialShaderData._defineDatas);var o=i.withCompile(s);this._renderElementOBJ._addShaderInstance(o)}}}_convertSubShader(e,t,r=0){var a=this.material._shader.getSubShaderAt(this._subShaderIndex);if(this.renderSubShader=null,e)if(t){var n=a.getFlag(t);if(!n)return;for(var i=e._subShaders,s=0,o=i.length;s<o;s++){var l=i[s];if(n===l.getFlag(t)){this.renderSubShader=l;break}}if(!this.renderSubShader)return}else this.renderSubShader=e.getSubShaderAt(r);else this.renderSubShader=a}_update(e,t,r,a,n=0){if(this.material){if(this._convertSubShader(r,a,n),!this.renderSubShader)return;var i=e._getRenderQueue(this.material.renderQueue);i._isTransparent,i.addRenderElement(this)}}_renderUpdatePre(e){var t=o.Scene3D._updateMark,r=this.transform;e.renderElement=this,!!this.render&&(t!==this.render._sceneUpdateMark||this.renderType!==this.render._updateRenderType)&&(this.render._renderUpdate(e,r),this.render._sceneUpdateMark=t);var a=Ft._updateMark;!!this.render&&(a!==this.render._updateMark||this.renderType!==this.render._updateRenderType)&&(this.render._renderUpdateWithCamera(e,r),this.render._updateMark=a,this.render._updateRenderType=this.renderType);const n=!!this.render&&this.render._subUniformBufferData;n&&n._needUpdate&&He._transLargeUbO.updateSubData(n),this._renderElementOBJ._isRender=this._geometry._prepareRender(e),this._geometry._updateRenderParams(e),this.compileShader(e._contextOBJ),this._renderElementOBJ._invertFront=this.getInvertFront()}_render(e){this._renderElementOBJ._render(e)}destroy(){this._renderElementOBJ._destroy(),this._renderElementOBJ=null,this._geometry=null,this._baseRender=null,this._material=null,this._baseRender=null,this._subShader=null}}ze.RENDERTYPE_NORMAL=0,ze.RENDERTYPE_STATICBATCH=1,ze.RENDERTYPE_INSTANCEBATCH=2,ze.RENDERTYPE_VERTEXBATCH=3,ze._compileDefine=new t.DefineDatas;class ke{set bufferState(e){this._geometryElementOBj.bufferState=e}get bufferState(){return this._geometryElementOBj.bufferState}set mode(e){this._geometryElementOBj.mode=e}get mode(){return this._geometryElementOBj.mode}set drawType(e){this._geometryElementOBj.drawType=e}get drawType(){return this._geometryElementOBj.drawType}setDrawArrayParams(e,t){this._geometryElementOBj.setDrawArrayParams(e,t)}setDrawElemenParams(e,t){this._geometryElementOBj.setDrawElemenParams(e,t)}set instanceCount(e){this._geometryElementOBj.instanceCount=e}get instanceCount(){return this._geometryElementOBj.instanceCount}set indexFormat(e){this._geometryElementOBj.indexFormat=e}get indexFormat(){return this._geometryElementOBj.indexFormat}get destroyed(){return this._destroyed}constructor(e,r){this._destroyed=!1,this._geometryElementOBj=t.LayaGL.renderOBJCreate.createRenderGeometry(e,r),this._id=++ke._uniqueIDCounter}_getType(){throw"GeometryElement:must override it."}_prepareRender(e){return!0}_render(e){t.LayaGL.renderDrawContext.drawGeometryElement(this._geometryElementOBj)}_updateRenderParams(e){throw"GeometryElement:must override it."}destroy(){this._destroyed||(this._destroyed=!0,this._geometryElementOBj.destroy())}clearRenderParams(){this._geometryElementOBj.clearRenderParams()}}ke._uniqueIDCounter=0,ke._typeCounter=0;class We extends ke{static __init__(){We.instance=new We}constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElement);var e=new Float32Array([-1,1,-1,1,1,-1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1]),r=new Uint8Array([0,1,2,2,3,0,4,7,6,6,5,4,0,3,7,7,4,0,1,5,6,6,2,1,3,2,6,6,7,3,0,4,5,5,1,0]),a=t.VertexMesh.getVertexDeclaration("POSITION");let n=t.LayaGL.renderOBJCreate.createVertexBuffer3D(8*a.vertexStride,t.BufferUsage.Static,!1);n.vertexDeclaration=a;let i=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt8,36,t.BufferUsage.Static,!1);n.setData(e.buffer),i.setData(r),this.bufferState=new t.BufferState,this.bufferState.applyState([n],i),this._geometryElementOBj.setDrawElemenParams(36,0),this.indexFormat=t.IndexFormat.UInt8}_updateRenderParams(e){}}class Ye{static get vertexDeclaration(){return Ye._vertexDeclaration}static __init__(){Ye._vertexDeclaration=new t.VertexDeclaration(20,[new t.VertexElement(0,t.VertexElementFormat.Vector3,t.VertexMesh.MESH_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector2,t.VertexMesh.MESH_TEXTURECOORDINATE0)])}get position(){return this._position}get textureCoordinate0(){return this._textureCoordinate0}get vertexDeclaration(){return Ye._vertexDeclaration}constructor(e,t){this._position=e,this._textureCoordinate0=t}}class Xe extends ke{static __init__(){Xe.instance=new Xe}get stacks(){return this._stacks}get slices(){return this._slices}constructor(e=48,r=48){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this._stacks=e,this._slices=r;for(var a=Ye.vertexDeclaration,n=a.vertexStride/4,i=(this._stacks+1)*(this._slices+1),s=3*this._stacks*(this._slices+1)*2,o=new Float32Array(i*n),l=new Uint16Array(s),h=Math.PI/this._stacks,c=2*Math.PI/this._slices,d=0,_=0,u=0,m=0;m<this._stacks+1;m++)for(var f=Math.sin(m*h),g=Math.cos(m*h),p=0;p<this._slices+1;p++){var S=f*Math.sin(p*c),T=f*Math.cos(p*c);o[_+0]=S*Xe._radius,o[_+1]=g*Xe._radius,o[_+2]=T*Xe._radius,o[_+3]=-p/this._slices+.75,o[_+4]=m/this._stacks,_+=n,m!=this._stacks-1&&(l[u++]=d+1,l[u++]=d,l[u++]=d+(this._slices+1),l[u++]=d+(this._slices+1),l[u++]=d,l[u++]=d+this._slices,d++)}let E=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*o.length,t.BufferUsage.Static,!1);E.vertexDeclaration=a;let A=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,l.length,t.BufferUsage.Static,!1);E.setData(o.buffer),A.setData(l);var x=new t.BufferState;x.applyState([E],A),this.bufferState=x,this.indexFormat=t.IndexFormat.UInt16,this._geometryElementOBj.setDrawElemenParams(A.indexCount,0)}_updateRenderParams(e){}}Xe._radius=1;class je{static __init__(){je.SUNLIGHTDIRECTION=t.Shader3D.propertyNameToID("u_SunLight_direction"),je.SUNLIGHTDIRCOLOR=t.Shader3D.propertyNameToID("u_SunLight_color");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(je.SUNLIGHTDIRECTION,"u_SunLight_direction"),e.addShaderUniform(je.SUNLIGHTDIRCOLOR,"u_SunLight_color")}get material(){return this._material}set material(e){this._material!==e&&(this._material&&this._material._removeReference(),this._material=e,this._renderElement.material=e,e?(e._addReference(),e.cull=t.CullMode.Off,e.depthTest=t.CompareFunction.LessEqual,e.depthWrite=!1,e.stencilWrite=!1,this._renderElement.renderSubShader=this._material._shader.getSubShaderAt(0)):this._renderElement.renderSubShader=null)}get mesh(){return this._mesh}set mesh(e){this._mesh!==e&&(this._mesh=e,this._renderElement.setGeometry(this._mesh))}get meshType(){return this.mesh==We.instance?"box":this.mesh==Xe.instance?"dome":""}set meshType(e){this.mesh="dome"==e?Xe.instance:We.instance}constructor(){this._renderElement=new ze,this.mesh=Xe.instance,this._renderData=new He,this._renderElement.render=this._renderData}_isAvailable(){return!(!this._material||!this._mesh)}_render(e){if(this._material&&this._mesh){var r=e.camera,a=e.scene,n=je._tempMatrix1;r.orthographic&&t.Matrix4x4.createPerspective(r.fieldOfView,r.aspectRatio,r.nearPlane,r.farPlane,n),this._renderData._shaderValues.setColor(je.SUNLIGHTDIRCOLOR,a._sunColor),this._renderData._shaderValues.setVector3(je.SUNLIGHTDIRECTION,a._sundir);var i=je._tempMatrix0;r.viewMatrix.cloneTo(i),r.projectionMatrix.cloneTo(n),i.setTranslationVector(t.Vector3.ZERO);var s=1/Math.tan(3.1416*r.fieldOfView/180*.5);n.elements[0]=s/r.aspectRatio,n.elements[5]=s,n.elements[10]=-.999999,n.elements[11]=-1,n.elements[14]=-0,r.isWebXR?r._applyViewProject(e,i,r.projectionMatrix):r._applyViewProject(e,i,n),e._contextOBJ.applyContext(Ft._updateMark),e.drawRenderElement(this._renderElement),r._applyViewProject(e,r.viewMatrix,r.projectionMatrix)}}destroy(){this._material&&(this._material._removeReference(),this._material=null),this._renderData.destroy(),this._renderData._onDestroy(),this._renderElement.destroy()}}je._tempMatrix0=new t.Matrix4x4,je._tempMatrix1=new t.Matrix4x4;class Qe extends J{static shaderValueInit(){Qe.SHADERDEFINE_DEPTH=t.Shader3D.getDefineByName("DEPTHMAP"),Qe.SHADERDEFINE_DEPTHNORMALS=t.Shader3D.getDefineByName("DEPTHNORMALSMAP"),Qe.SHADERDEFINE_ORTHOGRAPHIC=t.Shader3D.getDefineByName("CAMERAORTHOGRAPHIC"),Qe.SHADERDEFINE_FXAA=t.Shader3D.getDefineByName("FXAA");let e=Qe.cameraUniformMap=t.LayaGL.renderOBJCreate.createGlobalUniformMap("BaseCamera");Qe.CAMERAPOS=t.Shader3D.propertyNameToID("u_CameraPos"),Qe.VIEWMATRIX=t.Shader3D.propertyNameToID("u_View"),Qe.VIEWPROJECTMATRIX=t.Shader3D.propertyNameToID("u_ViewProjection"),Qe.PROJECTMATRIX=t.Shader3D.propertyNameToID("u_Projection"),Qe.CAMERADIRECTION=t.Shader3D.propertyNameToID("u_CameraDirection"),Qe.CAMERAUP=t.Shader3D.propertyNameToID("u_CameraUp"),Qe.VIEWPORT=t.Shader3D.propertyNameToID("u_Viewport"),Qe.PROJECTION_PARAMS=t.Shader3D.propertyNameToID("u_ProjectionParams"),Qe.DEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthTexture"),Qe.DEPTHNORMALSTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthNormalsTexture"),Qe.OPAQUETEXTURE=t.Shader3D.propertyNameToID("u_CameraOpaqueTexture"),Qe.DEPTHZBUFFERPARAMS=t.Shader3D.propertyNameToID("u_ZBufferParams"),Qe.CAMERAUNIFORMBLOCK=t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_CAMERA),e.addShaderUniform(Qe.CAMERAPOS,"u_CameraPos"),e.addShaderUniform(Qe.VIEWMATRIX,"u_View"),e.addShaderUniform(Qe.PROJECTMATRIX,"u_Projection"),e.addShaderUniform(Qe.VIEWPROJECTMATRIX,"u_ViewProjection"),e.addShaderUniform(Qe.CAMERADIRECTION,"u_CameraDirection"),e.addShaderUniform(Qe.CAMERAUP,"u_CameraUp"),e.addShaderUniform(Qe.VIEWPORT,"u_Viewport"),e.addShaderUniform(Qe.PROJECTION_PARAMS,"u_ProjectionParams"),e.addShaderUniform(Qe.DEPTHTEXTURE,"u_CameraDepthTexture"),e.addShaderUniform(Qe.DEPTHNORMALSTEXTURE,"u_CameraDepthNormalsTexture"),e.addShaderUniform(Qe.OPAQUETEXTURE,"u_CameraOpaqueTexture"),e.addShaderUniform(Qe.DEPTHZBUFFERPARAMS,"u_ZBufferParams"),e.addShaderUniform(Qe.CAMERAUNIFORMBLOCK,t.UniformBufferObject.UBONAME_CAMERA)}static createCameraUniformBlock(){if(!Qe.CameraUBOData){let e=new Map;e.set("u_View",t.UniformBufferParamsType.Matrix4x4),e.set("u_Projection",t.UniformBufferParamsType.Matrix4x4),e.set("u_ViewProjection",t.UniformBufferParamsType.Matrix4x4),e.set("u_ProjectionParams",t.UniformBufferParamsType.Vector4),e.set("u_Viewport",t.UniformBufferParamsType.Vector4),e.set("u_CameraDirection",t.UniformBufferParamsType.Vector3),e.set("u_CameraUp",t.UniformBufferParamsType.Vector3),e.set("u_CameraPos",t.UniformBufferParamsType.Vector3);let r=new Map;e.forEach(((e,a)=>{r.set(t.Shader3D.propertyNameToID(a),e)})),Qe.CameraUBOData=new t.UnifromBufferData(r)}return Qe.CameraUBOData}static __init__(){Qe.shaderValueInit()}get clearColor(){return this._clearColor}set clearColor(e){this._clearColor=e,e.toLinear(this._linearClearColor)}get skyRenderer(){return this._skyRenderer}get fieldOfView(){return this._fieldOfView}set fieldOfView(e){this._fieldOfView=e,this._calculateProjectionMatrix(),this._caculateMaxLocalYRange()}get maxlocalYDistance(){return this._yrange}get nearPlane(){return this._nearPlane}set nearPlane(e){this._nearPlane=e,this._calculateProjectionMatrix()}get farPlane(){return this._farPlane}set farPlane(e){this._farPlane=e,this._calculateProjectionMatrix(),this._caculateMaxLocalYRange()}get orthographic(){return this._orthographic}set orthographic(e){this._orthographic=e,this._calculateProjectionMatrix(),e?this._shaderValues.addDefine(Qe.SHADERDEFINE_ORTHOGRAPHIC):this._shaderValues.removeDefine(Qe.SHADERDEFINE_ORTHOGRAPHIC)}get orthographicVerticalSize(){return this._orthographicVerticalSize}set orthographicVerticalSize(e){this._orthographicVerticalSize=e,this._calculateProjectionMatrix()}get cullingMask(){return this._cullingMask}set cullingMask(e){this._cullingMask=e}get renderingOrder(){return this._renderingOrder}set renderingOrder(e){this._renderingOrder=e,this._sortCamerasByRenderingOrder()}constructor(e=.3,r=1e3){super(),this._skyRenderer=new je,this._forward=new t.Vector3,this._up=new t.Vector3,this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(null),this._linearClearColor=new t.Color,this.clearColor=new t.Color(100/255,149/255,237/255,1),this._fieldOfView=60,this._useUserProjectionMatrix=!1,this._orthographicVerticalSize=10,this.renderingOrder=0,this._nearPlane=e,this._farPlane=r,this.cullingMask=2147483647,this.staticMask=4294967295,this.useOcclusionCulling=!0,this._renderEngine=t.LayaGL.renderEngine,this._orthographic=!1,t.Config3D._uniformBlock&&(this._cameraUniformUBO=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_CAMERA,0),this._cameraUniformData=Qe.createCameraUniformBlock(),this._cameraUniformUBO||(this._cameraUniformUBO=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_CAMERA,t.BufferUsage.Dynamic,this._cameraUniformData.getbyteLength(),!1)),this._shaderValues._addCheckUBO(t.UniformBufferObject.UBONAME_CAMERA,this._cameraUniformUBO,this._cameraUniformData),this._shaderValues.setUniformBuffer(Qe.CAMERAUNIFORMBLOCK,this._cameraUniformUBO))}_caculateMaxLocalYRange(){let e=3.1416*this.fieldOfView/180/2,t=this.farPlane;this._yrange=Math.tan(e)*t*2}_calculateProjectionMatrix(){}_onScreenSizeChanged(){this._calculateProjectionMatrix()}_create(){return new Qe}_sortCamerasByRenderingOrder(){if(this.displayedInStage)for(var e=this.scene._cameraPool,t=e.length-1,r=0;r<t;r++)if(e[r].renderingOrder>e[t].renderingOrder){var a=e[r];e[r]=e[t],e[t]=a}}_prepareCameraToRender(){this.transform.getForward(this._forward),this.transform.getUp(this._up),this._shaderValues.setVector3(Qe.CAMERAPOS,this.transform.position),this._shaderValues.setVector3(Qe.CAMERADIRECTION,this._forward),this._shaderValues.setVector3(Qe.CAMERAUP,this._up)}render(e=null,t=null){}addLayer(e){this.cullingMask|=Math.pow(2,e)}removeLayer(e){this.cullingMask&=~Math.pow(2,e)}addAllLayers(){this.cullingMask=2147483647}removeAllLayers(){this.cullingMask=0}resetProjectionMatrix(){this._useUserProjectionMatrix=!1,this._calculateProjectionMatrix()}_onActive(){this._scene._addCamera(this),super._onActive()}_onInActive(){this._scene._removeCamera(this),super._onInActive()}_parse(e,r){super._parse(e,r),this.orthographic=e.orthographic,void 0!==e.orthographicVerticalSize&&(this.orthographicVerticalSize=e.orthographicVerticalSize),void 0!==e.fieldOfView&&(this.fieldOfView=e.fieldOfView),this.nearPlane=e.nearPlane,this.farPlane=e.farPlane;var a=e.clearColor;this.clearColor=new t.Color(a[0],a[1],a[2],a[3]);var n=e.skyboxMaterial;n&&(this._skyRenderer.material=t.Loader.getRes(n.path))}destroy(e=!0){this._skyRenderer.destroy(),this._skyRenderer=null,t.ILaya.stage.off(t.Event.RESIZE,this,this._onScreenSizeChanged),super.destroy(e)}}Qe.RENDERINGTYPE_SHADERDEFINE_FXAA="FXAA",Qe.RENDERINGTYPE_DEFERREDLIGHTING="DEFERREDLIGHTING",Qe.RENDERINGTYPE_FORWARDRENDERING="FORWARDRENDERING",Qe._invertYScaleMatrix=new t.Matrix4x4(1,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,1),Qe._invertYProjectionMatrix=new t.Matrix4x4,Qe._invertYProjectionViewMatrix=new t.Matrix4x4,Qe._tempMatrix4x40=new t.Matrix4x4,e.ShadowMode=void 0,(pe=e.ShadowMode||(e.ShadowMode={}))[pe.None=0]="None",pe[pe.Hard=1]="Hard",pe[pe.SoftLow=2]="SoftLow",pe[pe.SoftHigh=3]="SoftHigh",e.ShadowCascadesMode=void 0,(Se=e.ShadowCascadesMode||(e.ShadowCascadesMode={}))[Se.NoCascades=0]="NoCascades",Se[Se.TwoCascades=1]="TwoCascades",Se[Se.FourCascades=2]="FourCascades",e.LightType=void 0,(Te=e.LightType||(e.LightType={}))[Te.Directional=0]="Directional",Te[Te.Spot=1]="Spot",Te[Te.Point=2]="Point",Te[Te.Area=3]="Area",e.LightMode=void 0,(Ee=e.LightMode||(e.LightMode={}))[Ee.mix=0]="mix",Ee[Ee.realTime=1]="realTime",Ee[Ee.bakeOnly=2]="bakeOnly";class Ke extends t.Component{get intensity(){return this._intensity}set intensity(e){this._intensity=e}get shadowMode(){return this._shadowMode}set shadowMode(e){this._shadowMode=e}get shadowDistance(){return this._shadowDistance}set shadowDistance(e){this._shadowDistance=e}get shadowResolution(){return this._shadowResolution}set shadowResolution(e){this._shadowResolution=e}get shadowDepthBias(){return this._shadowDepthBias}set shadowDepthBias(e){this._shadowDepthBias=e}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e}get shadowStrength(){return this._shadowStrength}set shadowStrength(e){this._shadowStrength=e}get shadowNearPlane(){return this._shadowNearPlane}set shadowNearPlane(e){this._shadowNearPlane=e}get lightmapBakedType(){return this._lightmapBakedType}set lightmapBakedType(t){let r=this._lightmapBakedType;this._lightmapBakedType!==t&&(this._lightmapBakedType=t,this._enabled&&(t==e.LightMode.bakeOnly?this._removeFromScene():r==e.LightMode.bakeOnly&&this._addToScene()))}get lightWorldMatrix(){var e=this.owner.transform.position,r=this.owner.transform.rotation;return t.Matrix4x4.createAffineTransformation(e,r,t.Vector3.ONE,this._lightWoldMatrix),this._lightWoldMatrix}constructor(){super(),this._shadowMode=e.ShadowMode.None,this._isAlternate=!1,this._shadowResolution=2048,this._shadowDistance=50,this._shadowDepthBias=1,this._shadowNormalBias=1,this._shadowNearPlane=.1,this._shadowStrength=1,this._lightWoldMatrix=new t.Matrix4x4,this.runInEditor=!0,this._intensity=1,this._intensityColor=new t.Vector3,this.color=new t.Color(1,1,1,1),this._lightmapBakedType=e.LightMode.realTime}_parse(e,t){super._parse(e,t);var r=e.color;this.color.r=r[0],this.color.g=r[1],this.color.b=r[2],this.intensity=e.intensity,this.lightmapBakedType=e.lightmapBakedType}_cloneTo(e){super._cloneTo(e);var t=e;t.color=this.color.clone(),t.intensity=this.intensity,t.lightmapBakedType=this.lightmapBakedType}_addToScene(){var e=this.owner.scene,r=t.Config3D.maxLightCount;e._lightCount<r?(e._lightCount++,this._addToLightQueue(),this._isAlternate=!1):(e._alternateLights.add(this),this._isAlternate=!0,console.warn("LightSprite:light count has large than maxLightCount,the latest added light will be ignore."))}_removeFromScene(){var e=this.owner._scene;if(e)if(this._isAlternate)e._alternateLights.remove(this);else if(e._lightCount--,this._removeFromLightQueue(),e._alternateLights._length>0){var t=e._alternateLights.shift();t._addToLightQueue(),t._isAlternate=!1,e._lightCount++}}_addToLightQueue(){}_removeFromLightQueue(){}_onEnable(){this.lightmapBakedType!==e.LightMode.bakeOnly&&this._addToScene()}_onDisable(){this.lightmapBakedType!==e.LightMode.bakeOnly&&this._removeFromScene()}_onDestroy(){}_create(){return new Ke}}!function(e){e[e.Near=0]="Near",e[e.Far=1]="Far",e[e.Left=2]="Left",e[e.Right=3]="Right",e[e.Bottom=4]="Bottom",e[e.Top=5]="Top"}(Ae||(Ae={})),e.ShadowMapFormat=void 0,(xe=e.ShadowMapFormat||(e.ShadowMapFormat={}))[xe.bit16=0]="bit16",xe[xe.bit24_8=1]="bit24_8",xe[xe.bit32=2]="bit32";class qe{static init(){qe._adjustNearPlane=new te(new t.Vector3,0),qe._adjustFarPlane=new te(new t.Vector3,0)}static supportShadow(){return t.LayaGL.renderEngine.getCapable(t.RenderCapable.RenderTextureFormat_Depth)}static getTemporaryShadowTexture(r,a,n){let i=t.RenderTargetFormat.DEPTH_16;switch(n){case e.ShadowMapFormat.bit16:i=t.RenderTargetFormat.DEPTH_16;break;case e.ShadowMapFormat.bit24_8:i=t.RenderTargetFormat.DEPTHSTENCIL_24_8;break;case e.ShadowMapFormat.bit32:i=t.RenderTargetFormat.DEPTH_32}var s=t.RenderTexture.createFromPool(r,a,i,t.RenderTargetFormat.None,!1,1);return s.compareMode=t.TextureCompareMode.LESS,s.filterMode=t.FilterMode.Bilinear,s.wrapModeU=t.WrapMode.Clamp,s.wrapModeV=t.WrapMode.Clamp,s}static getShadowBias(r,a,n,i){var s;r._lightType==e.LightType.Directional?s=2/a.elements[0]:r._lightType==e.LightType.Spot?s=Math.tan(.5*r.spotAngle*t.MathUtils3D.Deg2Rad)*r.range:(console.warn("ShadowUtils:Only spot and directional shadow casters are supported now."),s=0);var o=s/n,l=-r._shadowDepthBias*o,h=-r._shadowNormalBias*o;if(r.shadowMode==e.ShadowMode.SoftHigh){const e=2.5;l*=e,h*=e}i.setValue(l,h,0,0)}static getCameraFrustumPlanes(e,t){ie.getPlanesFromMatrix(e,t[Ae.Near],t[Ae.Far],t[Ae.Left],t[Ae.Right],t[Ae.Top],t[Ae.Bottom])}static getFarWithRadius(e,t){return Math.sqrt(e*e/t)}static getCascadesSplitDistance(t,r,a,n,i,s,o,l){l[0]=a;var h=n-a,c=Math.tan(.5*i),d=1+c*c*(s*s+1);switch(o){case e.ShadowCascadesMode.NoCascades:l[1]=qe.getFarWithRadius(n,d);break;case e.ShadowCascadesMode.TwoCascades:l[1]=qe.getFarWithRadius(a+h*t,d),l[2]=qe.getFarWithRadius(n,d);break;case e.ShadowCascadesMode.FourCascades:l[1]=qe.getFarWithRadius(a+h*r.x,d),l[2]=qe.getFarWithRadius(a+h*r.y,d),l[3]=qe.getFarWithRadius(a+h*r.z,d),l[4]=qe.getFarWithRadius(n,d)}}static applySliceTransform(e,t,r,a,n){var i=qe._tempMatrix0.elements,s=1/t,o=1/r;i[0]=e.resolution*s,i[5]=e.resolution*o,i[12]=e.offsetX*s,i[13]=e.offsetY*o,i[1]=i[2]=i[2]=i[4]=i[6]=i[7]=i[8]=i[9]=i[11]=i[14]=0,i[10]=i[15]=1;var h=16*a;l._mulMatrixArray(i,n,h,n,h)}static getDirectionLightShadowCullPlanes(r,a,n,i,s,o){var l=qe._frustumCorners,h=qe._backPlaneFaces,c=qe._frustumPlaneNeighbors,d=qe._frustumTwoPlaneCorners,_=qe._edgePlanePoint2,u=o.cullPlanes,m=r[Ae.Near],f=r[Ae.Far],g=r[Ae.Left],p=r[Ae.Right],S=r[Ae.Bottom],T=r[Ae.Top],E=n[a]-i,A=qe._adjustNearPlane,x=qe._adjustFarPlane;A.normal=m.normal,x.normal=f.normal,A.distance=m.distance-E,x.distance=Math.min(-m.distance+o.sphereCenterZ+o.splitBoundSphere.radius,f.distance),ie.get3PlaneInterPoint(A,S,p,l[e.FrustumCorner.nearBottomRight]),ie.get3PlaneInterPoint(A,T,p,l[e.FrustumCorner.nearTopRight]),ie.get3PlaneInterPoint(A,T,g,l[e.FrustumCorner.nearTopLeft]),ie.get3PlaneInterPoint(A,S,g,l[e.FrustumCorner.nearBottomLeft]),ie.get3PlaneInterPoint(x,S,p,l[e.FrustumCorner.FarBottomRight]),ie.get3PlaneInterPoint(x,T,p,l[e.FrustumCorner.FarTopRight]),ie.get3PlaneInterPoint(x,T,g,l[e.FrustumCorner.FarTopLeft]),ie.get3PlaneInterPoint(x,S,g,l[e.FrustumCorner.FarBottomLeft]);for(var D=0,R=0;R<6;R++){var C;switch(R){case Ae.Near:C=A;break;case Ae.Far:C=x;break;default:C=r[R]}t.Vector3.dot(C.normal,s)<0&&(C.cloneTo(u[D]),h[D]=R,D++)}var v=D;for(R=0;R<D;R++)for(var y=h[R],I=c[y],M=0;M<4;M++){for(var L=I[M],O=!0,b=0;b<D;b++)if(L==h[b]){O=!1;break}if(O){var w=d[y][L],B=l[w[0]],N=l[w[1]];t.Vector3.add(B,s,_),te.createPlaneBy3P(B,N,_,u[v++])}}o.cullPlaneCount=v}static getBoundSphereByFrustum(e,r,a,n,i,s,o){var l,h,c=Math.sqrt(1+n*n)*Math.tan(a/2),d=c*c,_=r-e,u=r+e;d>_/u?(l=r,h=r*c):(l=.5*u*(1+d),h=.5*Math.sqrt(_*_+2*(r*r+e*e)*d+u*u*d*d));var m=o.center;return o.radius=h,t.Vector3.scale(s,l,m),t.Vector3.add(i,m,m),o.center=m,l}static getMaxTileResolutionInAtlas(e,t,r){for(var a=Math.min(e,t),n=Math.floor(e/a)*Math.floor(t/a);n<r;)a=Math.floor(a>>1),n=Math.floor(e/a)*Math.floor(t/a);return a}static getDirectionalLightMatrices(e,r,a,n,i,s,o,h){var c=o.splitBoundSphere,d=c.center,_=c.radius,u=s/2,m=_*u/(u-qe.atlasBorderSize),f=2*m,g=s/f,p=f/s,S=Math.ceil(t.Vector3.dot(d,e)*g)*p,T=Math.ceil(t.Vector3.dot(d,r)*g)*p,E=t.Vector3.dot(d,a);d.x=e.x*S+r.x*T+a.x*E,d.y=e.y*S+r.y*T+a.y*E,d.z=e.z*S+r.z*T+a.z*E,c.center=d;var A=o.position,x=o.viewMatrix,D=o.projectionMatrix,R=o.viewProjectMatrix;o.resolution=s,o.offsetX=n%2*s,o.offsetY=Math.floor(n/2)*s,t.Vector3.scale(a,_+i,A),t.Vector3.subtract(d,A,A),t.Matrix4x4.createLookAt(A,d,e,x),t.Matrix4x4.createOrthoOffCenter(-m,m,-m,m,0,2*_+i,D),t.Matrix4x4.multiply(D,x,R),l._mulMatrixArray(qe._shadowMapScaleOffsetMatrix.elements,R.elements,0,h,16*n)}static getSpotLightShadowData(e,r,a,n,i,s){var o=e.position=r.owner.transform.position;e.resolution=a,s.setValue(1/a,1/a,a,a),e.offsetX=0,e.offsetY=0;var l=r.lightWorldMatrix,h=e.viewMatrix,c=e.projectionMatrix,d=e.viewProjectMatrix,_=e.cameraCullInfo.boundFrustum;l.invert(h),t.Matrix4x4.createPerspective(3.1416*r.spotAngle/180,1,.1,r.range,c),n.y=r.shadowStrength,t.Matrix4x4.multiply(c,h,d),_.matrix=d,d.cloneTo(i),e.cameraCullInfo.position=o}static prepareShadowReceiverShaderValues(e,t,r,a,n,i,s,o,l){if(i.setValue(1/t,1/r,t,r),s.setValue(e._shadowStrength,0,0,0),n>1){const e=16;for(var h=n*e,c=4*e;h<c;h++)o[h]=0;for(h=0;h<n;h++){var d=a[h].splitBoundSphere,_=d.center,u=d.radius,m=4*h;l[m]=_.x,l[m+1]=_.y,l[m+2]=_.z,l[m+3]=u*u}const t=4;for(h=n*t,c=4*t;h<c;h++)l[h]=0}}}qe._tempMatrix0=new t.Matrix4x4,qe._shadowMapScaleOffsetMatrix=new t.Matrix4x4(.5,0,0,0,0,.5,0,0,0,0,1,0,.5,.5,0,1),qe._frustumCorners=[new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3],qe._backPlaneFaces=new Array(5),qe._edgePlanePoint2=new t.Vector3,qe._frustumPlaneNeighbors=[[Ae.Left,Ae.Right,Ae.Top,Ae.Bottom],[Ae.Left,Ae.Right,Ae.Top,Ae.Bottom],[Ae.Near,Ae.Far,Ae.Top,Ae.Bottom],[Ae.Near,Ae.Far,Ae.Top,Ae.Bottom],[Ae.Near,Ae.Far,Ae.Left,Ae.Right],[Ae.Near,Ae.Far,Ae.Left,Ae.Right]],qe._frustumTwoPlaneCorners=[[[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.nearBottomLeft,e.FrustumCorner.nearTopLeft],[e.FrustumCorner.nearTopRight,e.FrustumCorner.nearBottomRight],[e.FrustumCorner.nearBottomRight,e.FrustumCorner.nearBottomLeft],[e.FrustumCorner.nearTopLeft,e.FrustumCorner.nearTopRight]],[[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.FarTopLeft,e.FrustumCorner.FarBottomLeft],[e.FrustumCorner.FarBottomRight,e.FrustumCorner.FarTopRight],[e.FrustumCorner.FarBottomLeft,e.FrustumCorner.FarBottomRight],[e.FrustumCorner.FarTopRight,e.FrustumCorner.FarTopLeft]],[[e.FrustumCorner.nearTopLeft,e.FrustumCorner.nearBottomLeft],[e.FrustumCorner.FarBottomLeft,e.FrustumCorner.FarTopLeft],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.nearBottomLeft,e.FrustumCorner.FarBottomLeft],[e.FrustumCorner.FarTopLeft,e.FrustumCorner.nearTopLeft]],[[e.FrustumCorner.nearBottomRight,e.FrustumCorner.nearTopRight],[e.FrustumCorner.FarTopRight,e.FrustumCorner.FarBottomRight],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.FarBottomRight,e.FrustumCorner.nearBottomRight],[e.FrustumCorner.nearTopRight,e.FrustumCorner.FarTopRight]],[[e.FrustumCorner.nearBottomLeft,e.FrustumCorner.nearBottomRight],[e.FrustumCorner.FarBottomRight,e.FrustumCorner.FarBottomLeft],[e.FrustumCorner.FarBottomLeft,e.FrustumCorner.nearBottomLeft],[e.FrustumCorner.nearBottomRight,e.FrustumCorner.FarBottomRight],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown]],[[e.FrustumCorner.nearTopRight,e.FrustumCorner.nearTopLeft],[e.FrustumCorner.FarTopLeft,e.FrustumCorner.FarTopRight],[e.FrustumCorner.nearTopLeft,e.FrustumCorner.FarTopLeft],[e.FrustumCorner.FarTopRight,e.FrustumCorner.nearTopRight],[e.FrustumCorner.unknown,e.FrustumCorner.unknown],[e.FrustumCorner.unknown,e.FrustumCorner.unknown]]],qe.atlasBorderSize=4;class Ze{static __init__(){Ze._instance=new Ze}get destTarget(){return this._contextOBJ.destTarget}set destTarget(e){this._contextOBJ.destTarget=e}get viewport(){return this._contextOBJ.viewPort}set viewport(e){e.cloneTo(this._contextOBJ.viewPort)}get scissor(){return this._contextOBJ.scissor}set scissor(e){e.cloneTo(this._contextOBJ.scissor)}get invertY(){return this._contextOBJ.invertY}set invertY(e){this._contextOBJ.invertY=e}get pipelineMode(){return this._contextOBJ.pipelineMode}set pipelineMode(e){this._contextOBJ.pipelineMode=e}get cameraShaderValue(){return this._contextOBJ.cameraShaderData}set cameraShaderValue(e){this._contextOBJ.cameraShaderData=e}set scene(e){e?(this._contextOBJ.sceneID=e._id,this._contextOBJ.sceneShaderData=e._shaderValues,this._scene=e):(this._contextOBJ.sceneID=-1,this._contextOBJ.sceneShaderData=null,this._scene=null)}get scene(){return this._scene}changeViewport(e,t,r,a){se._tempViewport.set(e,t,r,a),this.viewport=se._tempViewport}changeScissor(e,r,a,n){t.Vector4.tempVec4.setValue(e,r,a,n),this.scissor=t.Vector4.tempVec4}drawRenderElement(e){e.material&&e._convertSubShader(this.customShader,this.replaceTag),e.renderSubShader&&(e._renderUpdatePre(this),this._contextOBJ.drawRenderElement(e._renderElementOBJ))}constructor(){this.configPipeLineMode="Forward",this._contextOBJ=t.LayaGL.renderOBJCreate.createRenderContext3D()}}class Je extends ke{static __init__(){Je._vertexDeclaration=new t.VertexDeclaration(16,[new t.VertexElement(0,t.VertexElementFormat.Vector4,Je.SCREENQUAD_POSITION_UV)]),Je.instance=new Je}constructor(){super(t.MeshTopology.TriangleStrip,t.DrawType.DrawArray),this._bufferState=new t.BufferState,this._bufferStateInvertUV=new t.BufferState,this.setDrawArrayParams(0,4),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(64,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=Je._vertexDeclaration,this._vertexBuffer.setData(Je._vertices.buffer),this._bufferState.applyState([this._vertexBuffer],null),this._vertexBufferInvertUV=t.LayaGL.renderOBJCreate.createVertexBuffer3D(64,t.BufferUsage.Static,!1),this._vertexBufferInvertUV.vertexDeclaration=Je._vertexDeclaration,this._vertexBufferInvertUV.setData(Je._verticesInvertUV.buffer),this._bufferStateInvertUV.applyState([this._vertexBufferInvertUV],null)}set invertY(e){this.bufferState=e?this._bufferStateInvertUV:this._bufferState}_updateRenderParams(e){}destroy(){super.destroy(),this._bufferState.destroy(),this._vertexBuffer.destroy(),this._bufferStateInvertUV.destroy(),this._vertexBufferInvertUV.destroy()}}Je.SCREENQUAD_POSITION_UV=0,Je._vertices=new Float32Array([1,1,1,1,1,-1,1,0,-1,1,0,1,-1,-1,0,0]),Je._verticesInvertUV=new Float32Array([1,1,1,0,1,-1,1,1,-1,1,0,0,-1,-1,0,1]);class $e{static __init__(){$e._screenShaderData=t.LayaGL.renderOBJCreate.createShaderData(null),$e._screenShader=t.Shader3D.find("BlitScreen"),$e.SCREENTEXTURE_ID=t.Shader3D.propertyNameToID($e.SCREENTEXTURE_NAME),$e.SCREENTEXTUREOFFSETSCALE_ID=t.Shader3D.propertyNameToID($e.SCREENTEXTUREOFFSETSCALE_NAME),$e.MAINTEXTURE_TEXELSIZE_ID=t.Shader3D.propertyNameToID($e.MAINTEXTURE_TEXELSIZE_NAME)}constructor(){this._commandBuffer=null}run(){}recover(){this._commandBuffer=null}setContext(e){this._context=e}destroy(){this._commandBuffer=null,this._context=null}}$e.SCREENTEXTURE_NAME="u_MainTex",$e.SCREENTEXTUREOFFSETSCALE_NAME="u_OffsetScale",$e.MAINTEXTURE_TEXELSIZE_NAME="u_MainTex_TexelSize";class et extends $e{static create(e,t,r=null,a=null,n=null,i=0,s=et._SCREENTYPE_QUAD,o=null){var l;return(l=et._pool.length>0?et._pool.pop():new et)._source=e,l._dest=t,l._offsetScale=r,l.setshader(a,i,n),l._commandBuffer=o,l}constructor(){super(),this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,this._subShader=0,this._sourceTexelSize=new t.Vector4,this._transform3D=t.LayaGL.renderOBJCreate.createTransform(null),this._renderElement=new ze,this._renderElement.setTransform(this._transform3D),this._renderElement.setGeometry(Je.instance)}set shaderData(e){this._shaderData=e||$e._screenShaderData,this._renderElement._renderElementOBJ._materialShaderData=this._shaderData}setshader(e,t,r){this._shader=e||$e._screenShader,this._subShader=t||0,this.shaderData=r,this._renderElement.renderSubShader=this._shader.getSubShaderAt(this._subShader),this._renderElement._subShaderIndex=t}run(){this._commandBuffer&&this.setContext(this._commandBuffer._context);var e,r=this._context;if(this._source)e=this._source;else{if(!this._commandBuffer._camera._internalRenderTexture)throw"camera internalRenderTexture is null,please set camera enableBuiltInRenderTexture";e=this._commandBuffer._camera._internalRenderTexture}var a=this._shaderData,n=this._dest?this._dest:this._commandBuffer._camera._internalRenderTexture;if(n)r.changeViewport(0,0,n.width,n.height),r.changeScissor(0,0,n.width,n.height);else{let e=this._commandBuffer._camera.viewport,t=e.height,a=Ze.clientHeight-e.y-t;r.changeViewport(e.x,a,e.width,t),r.changeScissor(e.x,a,e.width,t)}a.setTexture($e.SCREENTEXTURE_ID,e),a.setVector($e.SCREENTEXTUREOFFSETSCALE_ID,this._offsetScale||et._defaultOffsetScale),this._sourceTexelSize.setValue(1/e.width,1/e.height,e.width,e.height),a.setVector($e.MAINTEXTURE_TEXELSIZE_ID,this._sourceTexelSize),r.destTarget=n,r._contextOBJ.applyContext(Ft._updateMark),Je.instance.invertY=r.invertY,r.drawRenderElement(this._renderElement),t.Stat.blitDrawCall++}recover(){et._pool.push(this),this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,super.recover()}destroy(){this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,this._renderElement.destroy()}}et._SCREENTYPE_QUAD=0,et._SCREENTYPE_TRIANGLE=1,et._pool=[],et._defaultOffsetScale=new t.Vector4(0,0,1,1);class tt extends $e{constructor(){super(...arguments),this._renderTexture=null}static create(e){var t;return(t=tt._pool.length>0?tt._pool.pop():new tt)._renderTexture=e,t}run(){t.RenderTexture.currentActive&&t.RenderTexture.currentActive._end(),Ze._instance.destTarget=this._renderTexture,Ze._instance.changeScissor(0,0,this._renderTexture.width,this._renderTexture.height),Ze._instance.changeViewport(0,0,this._renderTexture.width,this._renderTexture.height),Ze._instance._contextOBJ.applyContext(Ft._updateMark)}recover(){tt._pool.push(this),this._renderTexture=null}}tt._pool=[];class rt extends $e{constructor(){super(...arguments),this._shaderData=null,this._nameID=0,this._value=null,this._dataType=-1}static create(e,t,r,a,n){var i;return(i=rt._pool.length>0?rt._pool.pop():new rt)._shaderData=e,i._nameID=t,i._value=r.clone?r.clone():r,i._dataType=a,i._commandBuffer=n,i}run(){switch(this._dataType){case t.ShaderDataType.Int:this._shaderData.setInt(this._nameID,this._value);break;case t.ShaderDataType.Float:this._shaderData.setNumber(this._nameID,this._value);break;case t.ShaderDataType.Bool:this._shaderData.setBool(this._nameID,this._value);break;case t.ShaderDataType.Matrix4x4:this._shaderData.setMatrix4x4(this._nameID,this._value);break;case t.ShaderDataType.Color:this._shaderData.setColor(this._nameID,this._value);break;case t.ShaderDataType.Texture2D:this._shaderData.setTexture(this._nameID,this._value);break;case t.ShaderDataType.Vector4:this._shaderData.setVector(this._nameID,this._value);break;case t.ShaderDataType.Vector2:this._shaderData.setVector2(this._nameID,this._value);break;case t.ShaderDataType.Vector3:this._shaderData.setVector3(this._nameID,this._value);break;case t.ShaderDataType.Buffer:this._shaderData.setBuffer(this._nameID,this._value);break;default:if(this._dataType==rt.ShaderDataType_define){let e=t.Shader3D.getDefineByName(this._nameID);this._value?this._shaderData.addDefine(e):this._shaderData.removeDefine(e);break}throw"no type shaderValue on this CommendBuffer"}}recover(){rt._pool.push(this),this._shaderData=null,this._nameID=0,this._value=null,this._dataType=-1}}rt.ShaderDataType_define=-2,rt._pool=[],e.MaterialRenderMode=void 0,(De=e.MaterialRenderMode||(e.MaterialRenderMode={}))[De.RENDERMODE_OPAQUE=0]="RENDERMODE_OPAQUE",De[De.RENDERMODE_CUTOUT=1]="RENDERMODE_CUTOUT",De[De.RENDERMODE_TRANSPARENT=2]="RENDERMODE_TRANSPARENT",De[De.RENDERMODE_ADDTIVE=3]="RENDERMODE_ADDTIVE",De[De.RENDERMODE_ALPHABLENDED=4]="RENDERMODE_ALPHABLENDED",De[De.RENDERMODE_CUSTOME=5]="RENDERMODE_CUSTOME";class at extends t.Resource{static load(e,r){t.ILaya.loader.load(e,r,null,t.Loader.MATERIAL)}static __initDefine__(){at.SHADERDEFINE_ALPHATEST=t.Shader3D.getDefineByName("ALPHATEST"),at.SHADERDEFINE_MAINTEXTURE=t.Shader3D.getDefineByName("MAINTEXTURE"),at.SHADERDEFINE_ADDTIVEFOG=t.Shader3D.getDefineByName("ADDTIVEFOG"),at.ALPHATESTVALUE=t.Shader3D.propertyNameToID("u_AlphaTestValue"),at.CULL=t.Shader3D.propertyNameToID("s_Cull"),at.BLEND=t.Shader3D.propertyNameToID("s_Blend"),at.BLEND_SRC=t.Shader3D.propertyNameToID("s_BlendSrc"),at.BLEND_DST=t.Shader3D.propertyNameToID("s_BlendDst"),at.BLEND_SRC_RGB=t.Shader3D.propertyNameToID("s_BlendSrcRGB"),at.BLEND_DST_RGB=t.Shader3D.propertyNameToID("s_BlendDstRGB"),at.BLEND_SRC_ALPHA=t.Shader3D.propertyNameToID("s_BlendSrcAlpha"),at.BLEND_DST_ALPHA=t.Shader3D.propertyNameToID("s_BlendDstAlpha"),at.BLEND_EQUATION=t.Shader3D.propertyNameToID("s_BlendEquation"),at.BLEND_EQUATION_RGB=t.Shader3D.propertyNameToID("s_BlendEquationRGB"),at.BLEND_EQUATION_ALPHA=t.Shader3D.propertyNameToID("s_BlendEquationAlpha"),at.DEPTH_TEST=t.Shader3D.propertyNameToID("s_DepthTest"),at.DEPTH_WRITE=t.Shader3D.propertyNameToID("s_DepthWrite"),at.STENCIL_Ref=t.Shader3D.propertyNameToID("s_StencilRef"),at.STENCIL_TEST=t.Shader3D.propertyNameToID("s_StencilTest"),at.STENCIL_WRITE=t.Shader3D.propertyNameToID("s_StencilWrite"),at.STENCIL_Op=t.Shader3D.propertyNameToID("s_StencilOp")}get shaderData(){return this._shaderValues}get alphaTestValue(){return this._shaderValues.getNumber(at.ALPHATESTVALUE)}set alphaTestValue(e){this._shaderValues.setNumber(at.ALPHATESTVALUE,e)}get alphaTest(){return this.shaderData.hasDefine(at.SHADERDEFINE_ALPHATEST)}set alphaTest(e){e?this._shaderValues.addDefine(at.SHADERDEFINE_ALPHATEST):this._shaderValues.removeDefine(at.SHADERDEFINE_ALPHATEST)}addDefine(e){this._shaderValues.addDefine(e)}removeDefine(e){this._shaderValues.removeDefine(e)}hasDefine(e){return this._shaderValues.hasDefine(e)}get depthWrite(){return this._shaderValues.getBool(at.DEPTH_WRITE)}set depthWrite(e){this._shaderValues.setBool(at.DEPTH_WRITE,e)}get cull(){return this._shaderValues.getInt(at.CULL)}set cull(e){this._shaderValues.setInt(at.CULL,e)}get blend(){return this._shaderValues.getInt(at.BLEND)}set blend(e){this._shaderValues.setInt(at.BLEND,e)}get blendSrc(){return this._shaderValues.getInt(at.BLEND_SRC)}set blendSrc(e){this._shaderValues.setInt(at.BLEND_SRC,e)}get blendDst(){return this._shaderValues.getInt(at.BLEND_DST)}set blendDst(e){this._shaderValues.setInt(at.BLEND_DST,e)}get blendSrcAlpha(){return this._shaderValues.getInt(at.BLEND_SRC_ALPHA)}set blendSrcAlpha(e){this._shaderValues.setInt(at.BLEND_SRC_ALPHA,e)}get blendSrcRGB(){return this._shaderValues.getInt(at.BLEND_SRC_RGB)}set blendSrcRGB(e){this._shaderValues.setInt(at.BLEND_SRC_RGB,e)}get blendDstRGB(){return this._shaderValues.getInt(at.BLEND_DST_RGB)}set blendDstRGB(e){this._shaderValues.setInt(at.BLEND_DST_RGB,e)}get blendDstAlpha(){return this._shaderValues.getInt(at.BLEND_DST_ALPHA)}set blendDstAlpha(e){this._shaderValues.setInt(at.BLEND_DST_ALPHA,e)}get blendEquation(){return this._shaderValues.getInt(at.BLEND_EQUATION)}set blendEquation(e){this._shaderValues.setInt(at.BLEND_EQUATION,e)}get blendEquationRGB(){return this._shaderValues.getInt(at.BLEND_EQUATION_RGB)}set blendEquationRGB(e){this._shaderValues.setInt(at.BLEND_EQUATION_RGB,e)}get blendEquationAlpha(){return this._shaderValues.getInt(at.BLEND_EQUATION_ALPHA)}set blendEquationAlpha(e){this._shaderValues.setInt(at.BLEND_EQUATION_ALPHA,e)}get depthTest(){return this._shaderValues.getInt(at.DEPTH_TEST)}set depthTest(e){this._shaderValues.setInt(at.DEPTH_TEST,e)}get stencilTest(){return this._shaderValues.getInt(at.STENCIL_TEST)}set stencilTest(e){this._shaderValues.setInt(at.STENCIL_TEST,e)}get stencilWrite(){return this._shaderValues.getBool(at.STENCIL_WRITE)}set stencilWrite(e){this._shaderValues.setBool(at.STENCIL_WRITE,e)}set stencilRef(e){this._shaderValues.setInt(at.STENCIL_Ref,e)}get stencilRef(){return this._shaderValues.getInt(at.STENCIL_Ref)}set stencilOp(e){this._shaderValues.setVector3(at.STENCIL_Op,e)}get stencilOp(){return this._shaderValues.getVector3(at.STENCIL_Op)}get MaterialProperty(){let e={};var r=this._shaderValues.getData();for(let a in r)e[t.LayaGL.renderEngine.propertyIDToName(parseInt(a))]=r[a];return e}get MaterialDefine(){let e=new Array,r=this._shaderValues._defineDatas;return t.Shader3D._getNamesByDefineData(r,e),e}set materialRenderMode(r){switch(this._matRenderNode=r,r){case e.MaterialRenderMode.RENDERMODE_OPAQUE:this.alphaTest=!1,this.renderQueue=at.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case e.MaterialRenderMode.RENDERMODE_CUTOUT:this.renderQueue=at.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case e.MaterialRenderMode.RENDERMODE_TRANSPARENT:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case e.MaterialRenderMode.RENDERMODE_ADDTIVE:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.addDefine(at.SHADERDEFINE_ADDTIVEFOG);break;case e.MaterialRenderMode.RENDERMODE_ALPHABLENDED:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(at.SHADERDEFINE_ADDTIVEFOG);break;case e.MaterialRenderMode.RENDERMODE_CUSTOME:break;default:throw new Error("UnlitMaterial : renderMode value error.")}}get materialRenderMode(){return this._matRenderNode}constructor(){super(),this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(this),this.renderQueue=at.RENDERQUEUE_OPAQUE,this.alphaTest=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.blendSrc=t.RenderState.BLENDPARAM_ONE,this.blendDst=t.RenderState.BLENDPARAM_ZERO,this.blendSrcRGB=t.RenderState.BLENDPARAM_ONE,this.blendDstRGB=t.RenderState.BLENDPARAM_ZERO,this.blendSrcAlpha=t.RenderState.BLENDPARAM_ONE,this.blendDstAlpha=t.RenderState.BLENDPARAM_ZERO,this.blendEquation=t.RenderState.BLENDEQUATION_ADD,this.blendEquationRGB=t.RenderState.BLENDEQUATION_ADD,this.blendEquationAlpha=t.RenderState.BLENDEQUATION_ADD,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL,this.depthWrite=!0,this.stencilRef=1,this.stencilTest=t.RenderState.STENCILTEST_OFF,this.stencilWrite=!1,this.stencilOp=new t.Vector3(t.RenderState.STENCILOP_KEEP,t.RenderState.STENCILOP_KEEP,t.RenderState.STENCILOP_REPLACE),this.destoryedImmediately=!1}_bindShaderInfo(e){let r=e.getSubShaderAt(0)._uniformBufferDataMap;if(r)for(let e of r.keys()){let a=r.get(e).clone(),n=t.UniformBufferObject.create(e,t.BufferUsage.Dynamic,a.getbyteLength(),!1);this._shaderValues.setUniformBuffer(t.Shader3D.propertyNameToID(e),n),this._shaderValues._addCheckUBO(e,n,a)}}_releaseUBOData(){if(this._shaderValues.uniformBufferDatas){for(let e of this._shaderValues.uniformBufferDatas.values())e._updateDataInfo.destroy(),e.destroy(),e._updateDataInfo=null;this._shaderValues.uniformBufferDatas.clear(),this._shaderValues.uniformBuffersMap.clear()}}_disposeResource(){this._releaseUBOData(),this._shaderValues.destroy(),this._shaderValues=null}effectiveProperty(){return this._shader.getSubShaderAt(0)._uniformTypeMap}setShaderName(e){this._shader=t.Shader3D.find(e),this._shader||(console.warn(`Material: unknown shader name '${e}'`),this._shader=t.Shader3D.find("BLINNPHONG")),t.Config3D._uniformBlock&&(this._releaseUBOData(),this._bindShaderInfo(this._shader));let r=this._shader.getSubShaderAt(0),a=r._uniformDefaultValue,n=r._uniformTypeMap;this.applyUniformDefaultValue(n,a)}applyUniformDefaultValue(e,r){e.forEach(((e,a)=>{if(r&&null!=r[a]){let t=r[a];this.setShaderData(a,e,t)}else this.setShaderData(a,e,t.ShaderDataDefaultValue(e))}))}getBoolByIndex(e){return this.shaderData.getBool(e)}setBoolByIndex(e,t){this.shaderData.setBool(e,t)}getBool(e){let r=t.Shader3D.propertyNameToID(e);return this.getBoolByIndex(r)}setBool(e,r){let a=t.Shader3D.propertyNameToID(e);this.setBoolByIndex(a,r)}getFloatByIndex(e){return this.shaderData.getNumber(e)}setFloatByIndex(e,t){this.shaderData.setNumber(e,t)}getFloat(e){let r=t.Shader3D.propertyNameToID(e);return this.getFloatByIndex(r)}setFloat(e,r){let a=t.Shader3D.propertyNameToID(e);this.setFloatByIndex(a,r)}getIntByIndex(e){return this.shaderData.getInt(e)}setIntByIndex(e,t){this.shaderData.setInt(e,t)}getInt(e){let r=t.Shader3D.propertyNameToID(e);return this.getIntByIndex(r)}setInt(e,r){let a=t.Shader3D.propertyNameToID(e);this.setIntByIndex(a,r)}getVector2ByIndex(e){return this.shaderData.getVector2(e)}setVector2ByIndex(e,t){this.shaderData.setVector2(e,t)}getVector2(e){let r=t.Shader3D.propertyNameToID(e);return this.getVector2ByIndex(r)}setVector2(e,r){let a=t.Shader3D.propertyNameToID(e);this.setVector2ByIndex(a,r)}getVector3ByIndex(e){return this.shaderData.getVector3(e)}setVector3ByIndex(e,t){this.shaderData.setVector3(e,t)}getVector3(e){let r=t.Shader3D.propertyNameToID(e);return this.getVector3ByIndex(r)}setVector3(e,r){let a=t.Shader3D.propertyNameToID(e);this.setVector3ByIndex(a,r)}setVector4ByIndex(e,t){this.shaderData.setVector(e,t)}getVector4ByIndex(e){return this.shaderData.getVector(e)}setVector4(e,r){let a=t.Shader3D.propertyNameToID(e);this.setVector4ByIndex(a,r)}getVector4(e){let r=t.Shader3D.propertyNameToID(e);return this.getVector4ByIndex(r)}getColorByIndex(e){return this.shaderData.getColor(e)}setColorByIndex(e,t){this.shaderData.setColor(e,t)}getColor(e){let r=t.Shader3D.propertyNameToID(e);return this.shaderData.getColor(r)}setColor(e,r){let a=t.Shader3D.propertyNameToID(e);this.setColorByIndex(a,r)}getMatrix4x4ByIndex(e){return this.shaderData.getMatrix4x4(e)}setMatrix4x4ByIndex(e,t){this.shaderData.setMatrix4x4(e,t)}getMatrix4x4(e){let r=t.Shader3D.propertyNameToID(e);return this.getMatrix4x4ByIndex(r)}setMatrix4x4(e,r){let a=t.Shader3D.propertyNameToID(e);this.setMatrix4x4ByIndex(a,r)}setTextureByIndex(e,t){this.shaderData.setTexture(e,t)}getTextureByIndex(e){return this.shaderData.getTexture(e)}setTexture(e,r){let a=t.Shader3D.propertyNameToID(e);this.setTextureByIndex(a,r)}getTexture(e){let r=t.Shader3D.propertyNameToID(e);return this.getTextureByIndex(r)}getBufferByIndex(e){return this.shaderData.getBuffer(e)}setBufferByIndex(e,t){this.shaderData.setBuffer(e,t)}getBuffer(e){let r=t.Shader3D.propertyNameToID(e);return this.getBufferByIndex(r)}setBuffer(e,r){let a=t.Shader3D.propertyNameToID(e);this.setBufferByIndex(a,r)}setShaderDataByIndex(e,t,r){this.shaderData.setShaderData(e,t,r)}setShaderData(e,r,a){let n=t.Shader3D.propertyNameToID(e);this.setShaderDataByIndex(n,r,a)}getShaderData(e,r){let a=t.Shader3D.propertyNameToID(e);return this.getShaderDataByIndex(a,r)}getShaderDataByIndex(e,t){return this._shaderValues.getShaderData(e,t)}cloneTo(e){var t=e;t.name=this.name,t.renderQueue=this.renderQueue,t.setShaderName(this._shader._name),this._shaderValues.cloneTo(t._shaderValues)}clone(){var e=new at;return this.cloneTo(e),e}setShaderPropertyValue(e,r){let a=t.Shader3D.propertyNameToID(e);this.shaderData.setValueData(a,r)}getShaderPropertyValue(e){return this.shaderData.getValueData(t.Shader3D.propertyNameToID(e))}get _defineDatas(){return this._shaderValues._defineDatas}oldparseEndEvent(){}}at.RENDERQUEUE_OPAQUE=2e3,at.RENDERQUEUE_ALPHATEST=2450,at.RENDERQUEUE_TRANSPARENT=3e3;class nt extends at{static __initDefine__(){nt.SHADERDEFINE_DIFFUSEMAP=t.Shader3D.getDefineByName("DIFFUSEMAP"),nt.SHADERDEFINE_NORMALMAP=t.Shader3D.getDefineByName("NORMALMAP"),nt.SHADERDEFINE_SPECULARMAP=t.Shader3D.getDefineByName("SPECULARMAP"),nt.SHADERDEFINE_ENABLEVERTEXCOLOR=t.Shader3D.getDefineByName("ENABLEVERTEXCOLOR"),nt.SHADERDEFINE_ENABLETRANSMISSION=t.Shader3D.getDefineByName("ENABLETRANSMISSION"),nt.SHADERDEFINE_THICKNESSMAP=t.Shader3D.getDefineByName("THICKNESSMAP"),nt.ALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_DiffuseTexture"),nt.NORMALTEXTURE=t.Shader3D.propertyNameToID("u_NormalTexture"),nt.SPECULARTEXTURE=t.Shader3D.propertyNameToID("u_SpecularTexture"),nt.ALBEDOCOLOR=t.Shader3D.propertyNameToID("u_DiffuseColor"),nt.MATERIALSPECULAR=t.Shader3D.propertyNameToID("u_MaterialSpecular"),nt.SHININESS=t.Shader3D.propertyNameToID("u_Shininess"),nt.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset"),nt.TRANSMISSIONRATE=t.Shader3D.propertyNameToID("u_TransmissionRate"),nt.IBACKDIFFUSE=t.Shader3D.propertyNameToID("u_BackDiffuse"),nt.IBACKSCALE=t.Shader3D.propertyNameToID("u_BackScale"),nt.THINKNESSTEXTURE=t.Shader3D.propertyNameToID("u_ThinknessTexture"),nt.TRANSMISSIONCOLOR=t.Shader3D.propertyNameToID("u_TransmissionColor"),nt.AlbedoIntensity=t.Shader3D.propertyNameToID("u_AlbedoIntensity")}set renderMode(e){switch(e){case nt.RENDERMODE_OPAQUE:this.alphaTest=!1,this.renderQueue=at.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case nt.RENDERMODE_CUTOUT:this.renderQueue=at.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case nt.RENDERMODE_TRANSPARENT:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;default:throw new Error("Material:renderMode value error.")}}get enableVertexColor(){return this.hasDefine(nt.SHADERDEFINE_ENABLEVERTEXCOLOR)}set enableVertexColor(e){e?this.addDefine(nt.SHADERDEFINE_ENABLEVERTEXCOLOR):this.removeDefine(nt.SHADERDEFINE_ENABLEVERTEXCOLOR)}get tilingOffset(){return this.getVector4ByIndex(nt.TILINGOFFSET)}set tilingOffset(e){e?this.setVector4ByIndex(nt.TILINGOFFSET,e):this.getVector4ByIndex(nt.TILINGOFFSET).setValue(1,1,0,0)}get albedoColor(){return this.getColorByIndex(nt.ALBEDOCOLOR)}set albedoColor(e){this.setColorByIndex(nt.ALBEDOCOLOR,e)}get albedoIntensity(){return this.getFloatByIndex(nt.AlbedoIntensity)}set albedoIntensity(e){this.setFloatByIndex(nt.AlbedoIntensity,e)}get specularColor(){return this.getColorByIndex(nt.MATERIALSPECULAR)}set specularColor(e){this.setColorByIndex(nt.MATERIALSPECULAR,e)}get shininess(){return this.getFloatByIndex(nt.SHININESS)}set shininess(e){e=Math.max(0,Math.min(1,e)),this.setFloatByIndex(nt.SHININESS,e)}get albedoTexture(){return this.getTextureByIndex(nt.ALBEDOTEXTURE)}set albedoTexture(e){e?this.addDefine(nt.SHADERDEFINE_DIFFUSEMAP):this.removeDefine(nt.SHADERDEFINE_DIFFUSEMAP),this.setTextureByIndex(nt.ALBEDOTEXTURE,e)}get normalTexture(){return this.getTextureByIndex(nt.NORMALTEXTURE)}set normalTexture(e){e?(this.addDefine(nt.SHADERDEFINE_NORMALMAP),this.addDefine(t.Shader3D.getDefineByName("NEEDTBN"))):(this.removeDefine(nt.SHADERDEFINE_NORMALMAP),this.removeDefine(t.Shader3D.getDefineByName("NEEDTBN"))),this.setTextureByIndex(nt.NORMALTEXTURE,e)}get specularTexture(){return this.getTextureByIndex(nt.SPECULARTEXTURE)}set specularTexture(e){e?this.addDefine(nt.SHADERDEFINE_SPECULARMAP):this.removeDefine(nt.SHADERDEFINE_SPECULARMAP),this.setTextureByIndex(nt.SPECULARTEXTURE,e)}get enableTransmission(){return this.hasDefine(nt.SHADERDEFINE_ENABLETRANSMISSION)}set enableTransmission(e){e?this.addDefine(nt.SHADERDEFINE_ENABLETRANSMISSION):this.removeDefine(nt.SHADERDEFINE_ENABLETRANSMISSION)}get transmissionRata(){return this.getFloatByIndex(nt.TRANSMISSIONRATE)}set transmissionRata(e){this.setFloatByIndex(nt.TRANSMISSIONRATE,e)}get backDiffuse(){return this.getFloatByIndex(nt.IBACKDIFFUSE)}set backDiffuse(e){this.setFloatByIndex(nt.IBACKDIFFUSE,Math.max(e,1))}get backScale(){return this.getFloatByIndex(nt.IBACKSCALE)}set backScale(e){this.setFloatByIndex(nt.IBACKSCALE,e)}get thinknessTexture(){return this.getTextureByIndex(nt.THINKNESSTEXTURE)}set thinknessTexture(e){e?this.addDefine(nt.SHADERDEFINE_THICKNESSMAP):this.removeDefine(nt.SHADERDEFINE_THICKNESSMAP),this.setTextureByIndex(nt.THINKNESSTEXTURE,e)}get transmissionColor(){return this.getColorByIndex(nt.TRANSMISSIONCOLOR)}set transmissionColor(e){this.setColorByIndex(nt.TRANSMISSIONCOLOR,e)}get transmissionRate(){return this.getFloatByIndex(nt.TRANSMISSIONRATE)}constructor(){super(),this.setShaderName("BLINNPHONG"),this.renderMode=nt.RENDERMODE_OPAQUE}clone(){var e=new nt;return this.cloneTo(e),e}cloneTo(e){super.cloneTo(e);var t=e;t.albedoIntensity=this.albedoIntensity,t.enableVertexColor=this.enableVertexColor,this.albedoColor.cloneTo(t.albedoColor)}}nt.RENDERMODE_OPAQUE=0,nt.RENDERMODE_CUTOUT=1,nt.RENDERMODE_TRANSPARENT=2;class it extends ze{constructor(){super(),this._dynamicWorldPositionNormalNeedUpdate=!0,this._canBatch=!0}_onWorldMatrixChanged(){this._dynamicWorldPositionNormalNeedUpdate=!0}setTransform(e){this.transform!==e&&(this.transform&&this.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatrixChanged),e&&e.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatrixChanged),this._dynamicWorldPositionNormalNeedUpdate=!0,this.transform=e)}setGeometry(e){this._geometry!==e&&(this._geometry=e,this._renderElementOBJ._geometry=e._geometryElementOBj)}destroy(){this._renderElementOBJ&&(this.transform&&this.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatrixChanged),super.destroy(),this.staticBatch=null,this.instanceSubMesh=null,this.staticBatchElementList&&this.staticBatchElementList.destroy(),this.instanceBatchElementList&&this.instanceBatchElementList.destroy(),this.vertexBatchElementList&&this.vertexBatchElementList.destroy(),this.vertexBatchVertexDeclaration=null)}}class st extends t.Component{constructor(){super(),this.runInEditor=!0}_onEnable(){const e=this.owner.getComponent(ot);e&&e._enabled&&e._onMeshChange(this._sharedMesh)}_onDisable(){this.owner.getComponent(ot)}get sharedMesh(){return this._sharedMesh}set sharedMesh(e){if(this._sharedMesh!==e){var t=this._sharedMesh;t&&t._removeReference(),e&&e._addReference(),this._sharedMesh=e;const r=this.owner.getComponent(ot);if(!r)return;r._onMeshChange(e),this._sharedMesh=e}}_onDestroy(){this._sharedMesh&&(this._sharedMesh._removeReference(),this._sharedMesh=null)}_cloneTo(e){e.sharedMesh=this.sharedMesh,super._cloneTo(e)}}st._meshVerticeDefine=[];class ot extends He{static __init__(){he.SHADERDEFINE_UV0=t.Shader3D.getDefineByName("UV"),he.SHADERDEFINE_COLOR=t.Shader3D.getDefineByName("COLOR"),he.SHADERDEFINE_UV1=t.Shader3D.getDefineByName("UV1"),he.SHADERDEFINE_TANGENT=t.Shader3D.getDefineByName("TANGENT"),he.SHADERDEFINE_GPU_INSTANCE=t.Shader3D.getDefineByName("GPU_INSTANCE")}constructor(){super(),this._revertStaticBatchDefineUV1=!1,this._projectionViewWorldMatrix=new t.Matrix4x4}_createRenderElement(){return new it}_onEnable(){super._onEnable();const e=this.owner.getComponent(st);e&&e._enabled&&this._onMeshChange(e.sharedMesh)}_getMeshDefine(e,r){r.length=0;for(var a=0,n=e._subMeshes.length;a<n;a++)for(var i=e.getSubMesh(a)._vertexBuffer._vertexDeclaration._vertexElements,s=0,o=i.length;s<o;s++){switch(i[s]._elementUsage){case t.VertexMesh.MESH_COLOR0:r.push(he.SHADERDEFINE_COLOR);break;case t.VertexMesh.MESH_TEXTURECOORDINATE0:r.push(he.SHADERDEFINE_UV0);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:r.push(he.SHADERDEFINE_UV1);break;case t.VertexMesh.MESH_TANGENT0:r.push(he.SHADERDEFINE_TANGENT)}}}_changeVertexDefine(e){var t=this._shaderValues,r=this._mesh;if(r){this._getMeshDefine(r,st._meshVerticeDefine);for(var a=0,n=st._meshVerticeDefine.length;a<n;a++)t.removeDefine(st._meshVerticeDefine[a])}if(e){this._getMeshDefine(e,st._meshVerticeDefine);for(a=0,n=st._meshVerticeDefine.length;a<n;a++)t.addDefine(st._meshVerticeDefine[a])}}_onMeshChange(e){if(e&&this._mesh!=e){this._changeVertexDefine(e),this._mesh=e,this.geometryBounds=e.bounds;var t=e.subMeshCount;this._renderElements.length=t;for(var r=0;r<t;r++){var a=this._renderElements[r];if(!a){var n=this.sharedMaterials[r];a=this._renderElements[r]=this._renderElements[r]?this._renderElements[r]:this._createRenderElement(),this.owner&&a.setTransform(this.owner._transform),a.render=this,a.material=n||nt.defaultMaterial}a.setGeometry(e.getSubMesh(r))}}else e||(this._renderElements.forEach,this._renderElements.forEach((e=>{e.destroy()})),this._renderElements.length=0,this._mesh=null,this._changeVertexDefine(null));this.boundsChange=!0}updateMulPassRender(){const e=this.owner.getComponent(st);if(!e)return;const t=e.sharedMesh;if(t){var r=t.subMeshCount,a=this._sharedMaterials.length;if(r>a){let e=r;this._renderElements.length=e;for(var n=0;n<e;n++){if(!(s=this._renderElements[n])){var i=this.sharedMaterials[n];(s=this._renderElements[n]=this._renderElements[n]?this._renderElements[n]:this._createRenderElement()).setTransform(this.owner._transform),s.render=this,s.material=i||nt.defaultMaterial}s.setGeometry(t.getSubMesh(n))}}else{let e=a;this._renderElements.length=e;for(n=0;n<e;n++){var s;if(!(s=this._renderElements[n])){i=this.sharedMaterials[n];(s=this._renderElements[n]=this._renderElements[n]?this._renderElements[n]:this._createRenderElement()).setTransform(this.owner._transform),s.render=this,s.material=i||nt.defaultMaterial}}s.setGeometry(t.getSubMesh(e%r))}}else this._renderElements.length=0;this.boundsChange=!0}_calculateBoundingBox(){var e=this._mesh;if(e){var t=this._transform.worldMatrix;e.bounds._tranform(t,this._bounds)}}_renderUpdate(e,r){this._applyLightMapParams(),this._applyReflection(),e.renderElement,this._setShaderValue(J.WORLDMATRIX,t.ShaderDataType.Matrix4x4,r?r.worldMatrix:this._transform.worldMatrix)}_revertBatchRenderUpdate(e){switch(e.renderElement.renderType){case ze.RENDERTYPE_STATICBATCH:this._revertStaticBatchDefineUV1&&this._shaderValues.removeDefine(he.SHADERDEFINE_UV1),this._shaderValues.setVector(le.LIGHTMAPSCALEOFFSET,this.lightmapScaleOffset);break;case ze.RENDERTYPE_INSTANCEBATCH:this._shaderValues.removeDefine(he.SHADERDEFINE_GPU_INSTANCE)}}_onDestroy(){super._onDestroy()}_cloneTo(e){super._cloneTo(e)}}class lt extends $e{static create(e,t,r,a,n,i){var s;return(s=lt._pool.length>0?lt._pool.pop():new lt)._matrix=t,s._transform.worldMatrix=s._matrix,s.material=r,s._subMeshIndex=a,s._subShaderIndex=n,s.mesh=e,s._commandBuffer=i,s}constructor(){super(),this._transform=t.LayaGL.renderOBJCreate.createTransform(null),this._meshRender=new ot}set material(e){this._material&&this._material._removeReference(1),this._material=e,this._material&&this._material._addReference(1)}set mesh(e){this._mesh!=e&&(this._mesh=e,this._meshRender._onMeshChange(this._mesh),this._renderElemnts=this._meshRender._renderElements,this._renderElemnts.forEach((e=>{e.material=this._material,e.setTransform(this._transform),e.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),e._subShaderIndex=this._subShaderIndex})))}run(){var e=Ze._instance;e._contextOBJ.applyContext(Ft._updateMark);let t=this._mesh._subMeshes;if(-1==this._subMeshIndex)for(let r=0,a=t.length;r<a;r++){let t=this._renderElemnts[r];e.drawRenderElement(t)}else{let t=this._renderElemnts[this._subMeshIndex];e.drawRenderElement(t)}}recover(){lt._pool.push(this),super.recover(),this.material&&(this.material=null),this.mesh&&(this.mesh=null)}destroy(){super.destroy(),this._renderElemnts.forEach((e=>{e.destroy()})),this._material&&this._material._removeReference(1),this._material=null,this._renderElemnts=null,this._transform=null,this._material=null,this._matrix=null}}lt._pool=[];class ht extends $e{constructor(){super(...arguments),this._clearColor=!1,this._clearDepth=!1,this._backgroundColor=new t.Color,this._linearbackgroundColor=new t.Color,this._depth=1}static create(e,t,r,a=1,n){var i;return(i=ht._pool.length>0?ht._pool.pop():new ht)._clearColor=e,i._clearDepth=t,r.cloneTo(i._backgroundColor),r.toLinear(i._linearbackgroundColor),i._depth=a,i._commandBuffer=n,i}run(){let e=this._linearbackgroundColor;this._clearDepth&&this._clearColor?t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,e,this._depth):this._clearDepth?t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,e,this._depth):this._clearColor&&t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Color,e,this._depth)}recover(){}}ht._pool=[];class ct extends $e{static create(e,t,r,a){var n;return(n=ct._pool.length>0?ct._pool.pop():new ct)._render=e,n.material=t,n._subShaderIndex=r,n._commandBuffer=a,n}constructor(){super()}_elementRender(e,t){e.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),e.material=this._material,t.drawRenderElement(e)}set material(e){this._material&&this._material._removeReference(1),this._material=e,this._material&&this._material._addReference(1)}run(){if(!this._material)throw"This render command material cannot be empty";this.setContext(this._commandBuffer._context);var e=this._context;e._contextOBJ.applyContext(Ft._updateMark);for(var t=this._render._renderElements,r=0,a=t.length;r<a;r++){var n=t[r];let a=n.material;this._elementRender(n,e),n.material=a}}recover(){ct._pool.push(this),super.recover(),this._material&&this._material._removeReference(1),this._material=null}destroy(){super.destroy(),this._material&&this._material._removeReference(1),this._material=null}}ct._pool=[];class dt extends $e{constructor(){super(...arguments),this._nameID=0,this._value=null,this._dataType=-1}static create(e,t,r,a){var n;return(n=dt._pool.length>0?dt._pool.pop():new dt)._nameID=e,n._value=t,n._dataType=r,n._commandBuffer=a,n}run(){let e=Ze._instance,r=e._contextOBJ.globalShaderData;switch(r||(r=e._contextOBJ.globalShaderData=t.LayaGL.renderOBJCreate.createShaderData(null)),this._dataType){case t.ShaderDataType.Int:r.setInt(this._nameID,this._value);break;case t.ShaderDataType.Float:r.setNumber(this._nameID,this._value);break;case t.ShaderDataType.Bool:r.setBool(this._nameID,this._value);break;case t.ShaderDataType.Matrix4x4:r.setMatrix4x4(this._nameID,this._value);break;case t.ShaderDataType.Texture2D:r.setTexture(this._nameID,this._value);break;case t.ShaderDataType.Vector4:r.setVector(this._nameID,this._value);break;case t.ShaderDataType.Vector2:r.setVector2(this._nameID,this._value);break;case t.ShaderDataType.Vector3:r.setVector3(this._nameID,this._value);break;case t.ShaderDataType.Buffer:r.setBuffer(this._nameID,this._value);break;case t.ShaderDataType.Color:r.setColor(this._nameID,this._value);break;default:throw"no type shaderValue on this CommendBuffer"}}recover(){dt._pool.push(this),this._nameID=0,this._value=null,this._dataType=-1}}dt._pool=[];class _t extends ke{constructor(e){super(e?e._geometryElementOBj.mode:t.MeshTopology.Triangles,t.DrawType.DrawElementInstance),this._subMesh=e,e&&(this.indexFormat=e._mesh.indexFormat)}set subMesh(e){this._subMesh=e,e&&(this.indexFormat=e._mesh.indexFormat),this.mode=e._geometryElementOBj.mode}get subMesh(){return this._subMesh}_updateRenderParams(e){this.clearRenderParams(),this.setDrawElemenParams(this._subMesh.indexCount,2*this._subMesh._indexStart)}}class ut extends $e{static create(e,t,r,a,n,i,s,o){var l;if(r&&r.length>ut.maxInstanceCount||s>ut.maxInstanceCount)throw"the number of renderings exceeds the maximum number of merges";return(l=ut._pool.length>0?ut._pool.pop():new ut)._matrixs=r,l.material=a,l._subMeshIndex=t,l._subShaderIndex=n,l._commandBuffer=o,l._instanceProperty=i,l._drawnums=s,l.mesh=e,r&&l._updateWorldMatrixBuffer(),l._setInstanceBuffer(),l.setContext(Ze._instance),l}constructor(){super(),this._subShaderIndex=0,this._transform=t.LayaGL.renderOBJCreate.createTransform(null),this._instanceRenderElementArray=[],this._instanceGeometryArray=[],this._instanceWorldMatrixData=new Float32Array(16*ut.maxInstanceCount),this._instanceWorldMatrixBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this._instanceWorldMatrixData.length,t.BufferUsage.Dynamic,!1),this._instanceWorldMatrixBuffer.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,this._instanceWorldMatrixBuffer.instanceBuffer=!0,this._render=new He,this._render._shaderValues.addDefine(he.SHADERDEFINE_GPU_INSTANCE)}set material(e){this._material&&this._material._removeReference(1),this._material=e,this._material&&this._material._addReference(1)}get bufferState(){return this._instanceWorldMatrixBuffer}set mesh(e){if(this._mesh==e)return;if(He.changeVertexDefine(this._mesh,e,this._render._shaderValues),this._mesh=e,!this._mesh)return;let t=this._mesh._subMeshes;if(-1==this._subMeshIndex)for(let e=0,r=t.length;e<r;e++){let r=this._instanceRenderElementArray[e]=this._instanceRenderElementArray[e]?this._instanceRenderElementArray[e]:new ze,a=this._instanceGeometryArray[e]=this._instanceGeometryArray[e]?this._instanceGeometryArray[e]:new _t(t[e]);r.setGeometry(a),r.transform=this._transform,r.material=this._material,r.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),r._subShaderIndex=this._subShaderIndex,r.render=this._render,a.bufferState=this._instanceBufferState,a.instanceCount=this._drawnums}else{let e=this._instanceRenderElementArray[0]=this._instanceRenderElementArray[0]?this._instanceRenderElementArray[0]:new ze,r=this._instanceGeometryArray[0]=this._instanceGeometryArray[0]?this._instanceGeometryArray[0]:new _t(t[this._subMeshIndex]);e.setGeometry(r),e.transform=this._transform,e.material=this._material,e.render=this._render,e.renderSubShader=this._material._shader.getSubShaderAt(this._subShaderIndex),r.bufferState=this._instanceBufferState,r.instanceCount=this._drawnums}}get mesh(){return this._mesh}_setInstanceBuffer(){this._instanceBufferState||(this._instanceBufferState=new t.BufferState);let e=this._instanceBufferState,r=[];this._mesh._bufferState._vertexBuffers.forEach((e=>{r.push(e)})),r.push(this._instanceWorldMatrixBuffer);let a=this._instanceProperty._propertyMap;for(let e in a)r.push(a[e]._vertexBuffer);e.applyState(r,this._mesh._indexBuffer),this._instanceGeometryArray.forEach((t=>{t.bufferState=e}))}_updateWorldMatrixBuffer(){let e=this._instanceWorldMatrixData,t=this._drawnums;for(let r=0;r<t;r++)e.set(this._matrixs[r].elements,16*r);let r=this._instanceWorldMatrixBuffer;r.orphanStorage(),r.setData(e.buffer,0,0,64*t)}setWorldMatrix(e){if(e.length<this._drawnums)throw"worldMatrixArray length is less then drawnums";this._matrixs=e,this._matrixs&&this._updateWorldMatrixBuffer()}setDrawNums(e){if(this._matrixs&&this._matrixs.length<e)throw"worldMatrixArray length is less then drawnums";this._drawnums=e;let t=this._mesh._subMeshes;if(-1==this._subMeshIndex)for(let e=0,r=t.length;e<r;e++){(this._instanceGeometryArray[e]?this._instanceGeometryArray[e]:new _t(t[e])).instanceCount=this._drawnums}else{(this._instanceGeometryArray[0]?this._instanceGeometryArray[0]:new _t(t[0])).instanceCount=this._drawnums}this._matrixs&&this._updateWorldMatrixBuffer()}run(){let e=Ze._instance;e._contextOBJ.applyContext(Ft._updateMark);let t=this._instanceProperty._propertyMap;for(let e in t)t[e].updateVertexBufferData(this._drawnums);let r=this.mesh._subMeshes;if(-1==this._subMeshIndex)for(let t=0,a=r.length;t<a;t++){let r=this._instanceRenderElementArray[t];e.drawRenderElement(r)}else{let t=this._instanceRenderElementArray[0];e.drawRenderElement(t)}}recover(){ut._pool.push(this),super.recover(),this._material&&this._material._removeReference(1),this._material=null,this._instanceBufferState.destroy(),this._instanceBufferState=null,delete this._instanceRenderElementArray,this._instanceRenderElementArray=[],delete this._instanceGeometryArray,this._instanceGeometryArray=[],this.mesh=null}destroy(){super.destroy(),this._material&&this._material._removeReference(1),this._material=null,this._instanceBufferState.destroy(),this._instanceBufferState=null,delete this._instanceRenderElementArray,this._instanceRenderElementArray=[],delete this._instanceGeometryArray,this._instanceGeometryArray=[],this.mesh=null}}ut._pool=[],ut.maxInstanceCount=1024;class mt{constructor(e=null,t=!1){this._shadow=!1,this._camera=null,this._commands=[],this._name=e,this._shadow=t}get name(){return this._name}get casterShadow(){return this._shadow}set context(e){this._context=e}get context(){return this._context}_apply(){for(var e=0,r=this._commands.length;e<r;e++)this._commands[e].run();t.Stat.cmdDrawCall+=this._commands.length}_applyOne(){if(this._commands.length){var e=this._commands.shift();e.run(),e.recover()}return this._commands.length>0}getCommandsSize(){return this._commands.length}setShaderDataTexture(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Texture2D,this))}setGlobalTexture(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Texture2D,this))}setShaderDataColor(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Color,this))}setGlobalColor(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Color,this))}setShaderDataVector(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Vector4,this))}setGlobalVector(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Vector4,this))}setShaderDataVector3(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Vector3,this))}setGlobalVector3(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Vector3,this))}setShaderDataVector2(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Vector2,this))}setGlobalVector2(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Vector2,this))}setShaderDataNumber(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Float,this))}setGlobalNumber(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Float,this))}setShaderDataInt(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Int,this))}setGlobalInt(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Int,this))}setShaderDataMatrix(e,r,a){this._commands.push(rt.create(e,r,a,t.ShaderDataType.Matrix4x4,this))}setShaderDefine(e,t,r){this._commands.push(rt.create(e,t,r,rt.ShaderDataType_define,this))}setGlobalMatrix(e,r){this._commands.push(dt.create(e,r,t.ShaderDataType.Matrix4x4,this))}blitScreenQuad(e,t,r=null,a=null,n=null,i=0){this._commands.push(et.create(e,t,r,a,n,i,et._SCREENTYPE_QUAD,this))}blitScreenQuadByMaterial(e,t,r=null,a=null,n=0){var i,s;a&&(i=a._shader,s=a.shaderData),this._commands.push(et.create(e,t,r,i,s,n,et._SCREENTYPE_QUAD,this))}blitScreenTriangle(e,t,r=null,a=null,n=null,i=0){this._commands.push(et.create(e,t,r,a,n,i,et._SCREENTYPE_TRIANGLE,this))}setRenderTarget(e){this._commands.push(tt.create(e))}clearRenderTarget(e,t,r,a=1){this._commands.push(ht.create(e,t,r,a,this))}drawMesh(e,t,r,a,n){this._commands.push(lt.create(e,t,r,a,n,this))}drawRender(e,t,r){this._commands.push(ct.create(e,t,r,this))}drawMeshInstance(e,r=0,a,n,i=0,s,o){if(!t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance))return null;var l=ut.create(e,r,a,n,i,s,o,this);return this._commands.push(l),l}addCustomCMD(e){e._commandBuffer=this,this._commands.push(e)}clear(){for(var e=0,t=this._commands.length;e<t;e++)this._commands[e].recover();this._commands.length=0}}class ft{constructor(){this.flags=0,this.maxSubSteps=1,this.fixedTimeStep=1/60}}class gt{constructor(){this._length=0,this._elements=[]}add(e){let t=this._elements.indexOf(e);-1!=t&&t<this._length||(this._length===this._elements.length?this._elements.push(e):this._elements[this._length]=e,this._length++)}remove(e){var t=this._elements.indexOf(e);if(-1!=t&&(this._length--,t!==this._length)){var r=this._elements[this._length];this._elements[t]=r}}shift(){return this._length--,this._elements.shift()}getBrightestLight(){for(var e,t=-1,r=this._elements,a=0;a<this._length;a++){var n=r[a]._intensity;t<n&&(t=n,e=a)}return e}normalLightOrdering(e){var t=this._elements[0];this._elements[0]=this._elements[e],this._elements[e]=t}}class pt extends gt{remove(e){var t=this._elements.indexOf(e);this._elements.splice(t,1),this._length--}}class St{}class Tt{}class Et{set center(e){e.cloneTo(this._center)}get center(){return this._center}set radius(e){this._radius=e}get radius(){return this._radius}constructor(e=new t.Vector3,r=0){this._center=e,this._radius=r}toDefault(){this._center.toDefault(),this._radius=0}static createFromSubPoints(e,r,a,n){if(null==e)throw new Error("points");if(r<0||r>=e.length)throw new Error("start"+r+"Must be in the range [0, "+(e.length-1)+"]");if(a<0||r+a>e.length)throw new Error("count"+a+"Must be in the range <= "+e.length+"}");var i=r+a,s=Et._tempVector3;s.x=0,s.y=0,s.z=0;for(var o=r;o<i;++o)t.Vector3.add(e[o],s,s);var l=n.center;t.Vector3.scale(s,1/a,l);var h=0;for(o=r;o<i;++o){var c=t.Vector3.distanceSquared(l,e[o]);c>h&&(h=c)}n.radius=Math.sqrt(h)}static createfromPoints(e,t){if(null==e)throw new Error("points");Et.createFromSubPoints(e,0,e.length,t)}intersectsRayDistance(e){return ne.intersectsRayAndSphereRD(e,this)}intersectsRayPoint(e,t){return ne.intersectsRayAndSphereRP(e,this,t)}cloneTo(e){var t=e;this._center.cloneTo(t._center),t._radius=this._radius}clone(){var e=new Et(new t.Vector3,0);return this.cloneTo(e),e}}Et._tempVector3=new t.Vector3;class At{constructor(){this.cameraShaderValue=t.LayaGL.renderOBJCreate.createShaderData(null),this.position=new t.Vector3,this.viewMatrix=new t.Matrix4x4,this.projectionMatrix=new t.Matrix4x4,this.viewProjectMatrix=new t.Matrix4x4,this.cullPlanes=[new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0)],this.splitBoundSphere=new Et(new t.Vector3,0)}}class xt{constructor(){this.cameraShaderValue=t.LayaGL.renderOBJCreate.createShaderData(null),this.position=new t.Vector3,this.viewMatrix=new t.Matrix4x4,this.projectionMatrix=new t.Matrix4x4,this.viewProjectMatrix=new t.Matrix4x4,this.cameraCullInfo=t.LayaGL.renderOBJCreate.createCameraCullInfo()}}class Dt{static __init__(){Dt._cameraCullInfo=t.LayaGL.renderOBJCreate.createCameraCullInfo(),Dt._shadowCullInfo=t.LayaGL.renderOBJCreate.createShadowCullInfo()}static cullingRenderBounds(e,t){for(var r=t.cullPlaneCount,a=t.cullPlanes,n=e.getMin(),i=e.getMax(),s=n.x,o=n.y,l=n.z,h=i.x,c=i.y,d=i.z,_=!0,u=0;u<r;u++){var m=a[u],f=m.normal;if(m.distance+f.x*(f.x<0?s:h)+f.y*(f.y<0?o:c)+f.z*(f.z<0?l:d)<0){_=!1;break}}return _}static cullingRenderBoundsState(e,t){for(var r=Dt._tempV30,a=Dt._tempV31,n=e.min,i=e.max,s=ae.Contains,o=0,l=t.cullPlaneCount;o<l;o++){var h=t.cullPlanes[o],c=h.normal;if(c.x>=0?(r.x=i.x,a.x=n.x):(r.x=n.x,a.x=i.x),c.y>=0?(r.y=i.y,a.y=n.y):(r.y=n.y,a.y=i.y),c.z>=0?(r.z=i.z,a.z=n.z):(r.z=n.z,a.z=i.z),ne.intersectsPlaneAndPoint(h,r)===te.PlaneIntersectionType_Back)return ae.Disjoint;ne.intersectsPlaneAndPoint(h,a)===te.PlaneIntersectionType_Back&&(s=ae.Intersects)}return s}}Dt._tempV30=new t.Vector3,Dt._tempV31=new t.Vector3,e.ShadowLightType=void 0,(Re=e.ShadowLightType||(e.ShadowLightType={}))[Re.DirectionLight=0]="DirectionLight",Re[Re.SpotLight=1]="SpotLight",Re[Re.PointLight=2]="PointLight";class Rt{static __init__(){Rt._frustumPlanes=new Array(new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0),new te(new t.Vector3,0)),Rt.SHADOW_BIAS=t.Shader3D.propertyNameToID("u_ShadowBias"),Rt.SHADOW_LIGHT_DIRECTION=t.Shader3D.propertyNameToID("u_ShadowLightDirection"),Rt.SHADOW_SPLIT_SPHERES=t.Shader3D.propertyNameToID("u_ShadowSplitSpheres"),Rt.SHADOW_MATRICES=t.Shader3D.propertyNameToID("u_ShadowMatrices"),Rt.SHADOW_MAP_SIZE=t.Shader3D.propertyNameToID("u_ShadowMapSize"),Rt.SHADOW_MAP=t.Shader3D.propertyNameToID("u_ShadowMap"),Rt.SHADOW_PARAMS=t.Shader3D.propertyNameToID("u_ShadowParams"),Rt.SHADOW_SPOTMAP_SIZE=t.Shader3D.propertyNameToID("u_SpotShadowMapSize"),Rt.SHADOW_SPOTMAP=t.Shader3D.propertyNameToID("u_SpotShadowMap"),Rt.SHADOW_SPOTMATRICES=t.Shader3D.propertyNameToID("u_SpotViewProjectMatrix");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Scene3D");e.addShaderUniform(Rt.SHADOW_BIAS,"u_ShadowBias"),e.addShaderUniform(Rt.SHADOW_LIGHT_DIRECTION,"u_ShadowLightDirection"),e.addShaderUniform(Rt.SHADOW_SPLIT_SPHERES,"u_ShadowSplitSpheres"),e.addShaderUniform(Rt.SHADOW_MATRICES,"u_ShadowMatrices"),e.addShaderUniform(Rt.SHADOW_MAP_SIZE,"u_ShadowMapSize"),e.addShaderUniform(Rt.SHADOW_MAP,"u_ShadowMap"),e.addShaderUniform(Rt.SHADOW_PARAMS,"u_ShadowParams"),e.addShaderUniform(Rt.SHADOW_SPOTMAP_SIZE,"u_SpotShadowMapSize"),e.addShaderUniform(Rt.SHADOW_SPOTMAP,"u_SpotShadowMap"),e.addShaderUniform(Rt.SHADOW_SPOTMATRICES,"u_SpotViewProjectMatrix"),e.addShaderUniform(t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SHADOW),t.UniformBufferObject.UBONAME_SHADOW)}constructor(){this._shadowBias=new t.Vector4,this._shadowParams=new t.Vector4,this._shadowMapSize=new t.Vector4,this._shadowSpotMapSize=new t.Vector4,this._shadowMatrices=new Float32Array(16*Rt._maxCascades),this._shadowSpotMatrices=new t.Matrix4x4,this._splitBoundSpheres=new Float32Array(4*Rt._maxCascades),this._cascadeCount=0,this._shadowMapWidth=0,this._shadowMapHeight=0,this._shadowSliceDatas=[new At,new At,new At,new At],this._shadowSpotData=new xt,this._lightUp=new t.Vector3,this._lightSide=new t.Vector3,this._lightForward=new t.Vector3,this._shadowSpotData.cameraCullInfo.boundFrustum=new ie(new t.Matrix4x4),t.Config3D._uniformBlock&&(this._castDepthBufferData=r.createDepthCasterUniformBlock(),this._castDepthBufferOBJ=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_SHADOW,0),this._castDepthBufferOBJ||(this._castDepthBufferOBJ=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_SHADOW,t.BufferUsage.Dynamic,this._castDepthBufferData.getbyteLength(),!0)),Qe.createCameraUniformBlock(),this._castDepthCameraBufferData=Qe.CameraUBOData.clone(),this._castDepthCameraBufferOBJ=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_CAMERA,1),this._castDepthCameraBufferOBJ||(this._castDepthCameraBufferOBJ=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_CAMERA,t.BufferUsage.Dynamic,this._castDepthCameraBufferData.getbyteLength(),!1)))}_setupShadowCasterShaderValues(r,a,n,i,s,o,l){switch(a.setVector(Rt.SHADOW_BIAS,o),l){case e.LightType.Directional:a.setVector3(Rt.SHADOW_LIGHT_DIRECTION,i);break;case e.LightType.Spot:a.setVector(Rt.SHADOW_PARAMS,s);case e.LightType.Point:}var h=n.cameraShaderValue;this._castDepthCameraBufferOBJ&&(h._addCheckUBO(t.UniformBufferObject.UBONAME_CAMERA,this._castDepthCameraBufferOBJ,this._castDepthCameraBufferData),h.setUniformBuffer(Qe.CAMERAUNIFORMBLOCK,this._castDepthCameraBufferOBJ)),h.setMatrix4x4(Qe.VIEWMATRIX,n.viewMatrix),h.setMatrix4x4(Qe.PROJECTMATRIX,n.projectionMatrix),h.setMatrix4x4(Qe.VIEWPROJECTMATRIX,n.viewProjectMatrix),a.setMatrix4x4(Qe.VIEWPROJECTMATRIX,n.viewProjectMatrix),r.viewMatrix=n.viewMatrix,r.projectionMatrix=n.projectionMatrix,r.projectionViewMatrix=n.viewProjectMatrix}_setupShadowReceiverShaderValues(t){var r=this._light;switch(r.shadowCascadesMode!==e.ShadowCascadesMode.NoCascades?t.addDefine(Tt.SHADERDEFINE_SHADOW_CASCADE):t.removeDefine(Tt.SHADERDEFINE_SHADOW_CASCADE),r.shadowMode){case e.ShadowMode.Hard:t.removeDefine(Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),t.removeDefine(Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case e.ShadowMode.SoftLow:t.addDefine(Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),t.removeDefine(Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case e.ShadowMode.SoftHigh:t.addDefine(Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH),t.removeDefine(Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW)}t.setTexture(Rt.SHADOW_MAP,this._shadowDirectLightMap),t.setBuffer(Rt.SHADOW_MATRICES,this._shadowMatrices),t.setVector(Rt.SHADOW_MAP_SIZE,this._shadowMapSize),t.setVector(Rt.SHADOW_PARAMS,this._shadowParams),t.setBuffer(Rt.SHADOW_SPLIT_SPHERES,this._splitBoundSpheres)}_setupSpotShadowReceiverShaderValues(t){switch(this._light.shadowMode){case e.ShadowMode.Hard:t.removeDefine(Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),t.removeDefine(Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);break;case e.ShadowMode.SoftLow:t.addDefine(Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW),t.removeDefine(Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);break;case e.ShadowMode.SoftHigh:t.addDefine(Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),t.removeDefine(Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW)}t.setTexture(Rt.SHADOW_SPOTMAP,this._shadowSpotLightMap),t.setMatrix4x4(Rt.SHADOW_SPOTMATRICES,this._shadowSpotMatrices),t.setVector(Rt.SHADOW_SPOTMAP_SIZE,this._shadowSpotMapSize),t.setVector(Rt.SHADOW_PARAMS,this._shadowParams)}update(r,a,n){switch(this.cleanUp(),n){case e.ShadowLightType.DirectionLight:this._light=a;var i=(R=Rt._tempMatrix0).elements,s=this._lightUp,o=this._lightSide,l=this._lightForward;t.Matrix4x4.createFromQuaternion(a.owner._transform.rotation,R),o.setValue(i[0],i[1],i[2]),s.setValue(i[4],i[5],i[6]),l.setValue(-i[8],-i[9],-i[10]);var h,c,d,_,u=a._shadowResolution,m=a._shadowCascadesMode;m==e.ShadowCascadesMode.NoCascades?(h=1,c=u,d=u,_=u):(h=m==e.ShadowCascadesMode.TwoCascades?2:4,d=2*(c=qe.getMaxTileResolutionInAtlas(u,u,h)),_=m==e.ShadowCascadesMode.TwoCascades?c:2*c),this._cascadeCount=h,this._shadowMapWidth=d,this._shadowMapHeight=_;var f=Rt._cascadesSplitDistance,g=Rt._frustumPlanes,p=r.nearPlane,S=Math.min(r.farPlane,a._shadowDistance),T=this._shadowMatrices,E=this._splitBoundSpheres;qe.getCascadesSplitDistance(a._shadowTwoCascadeSplits,a._shadowFourCascadeSplits,p,S,r.fieldOfView*t.MathUtils3D.Deg2Rad,r.aspectRatio,m,f),qe.getCameraFrustumPlanes(r.projectionViewMatrix,g);var A=Rt._tempVector30;r._transform.getForward(A),t.Vector3.normalize(A,A);for(var x=0;x<h;x++){var D=this._shadowSliceDatas[x];D.sphereCenterZ=qe.getBoundSphereByFrustum(f[x],f[x+1],r.fieldOfView*t.MathUtils3D.Deg2Rad,r.aspectRatio,r._transform.position,A,D.splitBoundSphere),qe.getDirectionLightShadowCullPlanes(g,x,f,p,l,D),qe.getDirectionalLightMatrices(s,o,l,x,a._shadowNearPlane,c,D,T),h>1&&qe.applySliceTransform(D,d,_,x,T)}qe.prepareShadowReceiverShaderValues(a,d,_,this._shadowSliceDatas,h,this._shadowMapSize,this._shadowParams,T,E);break;case e.ShadowLightType.SpotLight:this._light=a;var R=Rt._tempMatrix0,C=(l=this._lightForward,this._light._shadowResolution);this._shadowMapWidth=C,this._shadowMapHeight=C;var v=this._shadowSpotData;qe.getSpotLightShadowData(v,this._light,C,this._shadowParams,this._shadowSpotMatrices,this._shadowSpotMapSize);break;case e.ShadowLightType.PointLight:break;default:throw"There is no shadow of this type"}}render(r,a,n,i){switch(n){case e.ShadowLightType.DirectionLight:var s=a._shaderValues;r.pipelineMode="ShadowCaster",(f=this._shadowDirectLightMap=qe.getTemporaryShadowTexture(this._shadowMapWidth,this._shadowMapHeight,e.ShadowMapFormat.bit16))._start(),r.destTarget=f;for(var o=this._light,l=0,h=this._cascadeCount;l<h;l++){var c=this._shadowSliceDatas[l];qe.getShadowBias(o,c.projectionMatrix,c.resolution,this._shadowBias),this._setupShadowCasterShaderValues(r,s,c,this._lightForward,this._shadowParams,this._shadowBias,e.LightType.Directional);var d=Dt._shadowCullInfo;d.position=c.position,d.cullPlanes=c.cullPlanes,d.cullPlaneCount=c.cullPlaneCount,d.cullSphere=c.splitBoundSphere,d.direction=this._lightForward,a._directLightShadowCull(d,r),r.cameraShaderValue=c.cameraShaderValue,Ft._updateMark++;var _=c.resolution,u=c.offsetX,m=c.offsetY;t.LayaGL.renderEngine.viewport(u,m,_,_),t.LayaGL.renderEngine.scissor(u,m,_,_),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,null,1),a._opaqueQueue.elements.length>0&&(se._tempViewport.set(u,m,_,_),Rt._tempVector4.setValue(u+1,m+1,_-2,_-2),r.viewport=se._tempViewport,r.scissor=Rt._tempVector4,t.Stat.depthCastDrawCall+=a._opaqueQueue.renderQueue(r)),i._applyCasterPassCommandBuffer(r)}f._end(),this._setupShadowReceiverShaderValues(s),r.pipelineMode=r.configPipeLineMode;break;case e.ShadowLightType.SpotLight:s=a._shaderValues;r.pipelineMode="ShadowCaster";var f,g=this._light;(f=this._shadowSpotLightMap=qe.getTemporaryShadowTexture(this._shadowMapWidth,this._shadowMapHeight,e.ShadowMapFormat.bit16))._start(),r.destTarget=f;var p=this._shadowSpotData;qe.getShadowBias(g,p.projectionMatrix,p.resolution,this._shadowBias),this._setupShadowCasterShaderValues(r,s,p,this._light.owner.transform.position,this._shadowParams,this._shadowBias,e.LightType.Spot),a._sportLightShadowCull(p.cameraCullInfo,r),r.cameraShaderValue=p.cameraShaderValue,Ft._updateMark++,t.LayaGL.renderEngine.viewport(p.offsetX,p.offsetY,p.resolution,p.resolution),t.LayaGL.renderEngine.scissor(p.offsetX,p.offsetY,p.resolution,p.resolution),t.LayaGL.renderEngine.clearRenderTexture(t.RenderClearFlag.Depth,null,1),a._opaqueQueue.elements.length>0&&(r.changeViewport(p.offsetX,p.offsetY,p.resolution,p.resolution),r.changeScissor(p.offsetX,p.offsetY,p.resolution,p.resolution),t.Stat.depthCastDrawCall+=a._opaqueQueue.renderQueue(r)),i._applyCasterPassCommandBuffer(r),f._end(),this._setupSpotShadowReceiverShaderValues(s),r.pipelineMode=r.configPipeLineMode;break;case e.ShadowLightType.PointLight:break;default:throw"There is no shadow of this type"}}cleanUp(){this._shadowDirectLightMap&&t.RenderTexture.recoverToPool(this._shadowDirectLightMap),this._shadowSpotLightMap&&t.RenderTexture.recoverToPool(this._shadowSpotLightMap),this._shadowDirectLightMap=null,this._shadowSpotLightMap=null,this._light=null}}Rt._tempVector30=new t.Vector3,Rt._tempVector4=new t.Vector4,Rt._tempMatrix0=new t.Matrix4x4,Rt._maxCascades=4,Rt._cascadesSplitDistance=new Array(Rt._maxCascades+1),Rt._frustumPlanes=new Array;class Ct{static __init__(){Ct.shaderdata=t.LayaGL.renderOBJCreate.createShaderData(null),Ct.GAMMAOUT=t.Shader3D.getDefineByName("GAMMAOUT")}static create(e,t,r,a=null,n=null,i=null,s=0){var o;return(o=Ct._pool.length>0?Ct._pool.pop():new Ct)._source=e,o._dest=t,o._offsetScale=a,o.setshader(n,s,i),o._source&&o._texture_size.setValue(e.width,e.height,1/e.width,1/e.height),o._viewPort=r,o}constructor(){this._source=null,this._dest=null,this._offsetScale=null,this._texture_size=null,this._shader=null,this._shaderData=null,this._subShader=0,this._viewPort=null,this._transform3D=t.LayaGL.renderOBJCreate.createTransform(null),this._renderElement=new ze,this._renderElement.setTransform(this._transform3D),this._renderElement.setGeometry(Je.instance),this._texture_size=new t.Vector4}set shaderData(e){this._shaderData=e||Ct.shaderdata,this._renderElement._renderElementOBJ._materialShaderData=this._shaderData}setshader(e,t,r){this._shader=e||$e._screenShader,this._subShader=t||0,this.shaderData=r,this._renderElement.renderSubShader=this._shader.getSubShaderAt(this._subShader)}run(){if(!this._source||!this._viewPort)return;var e=this._source,r=this._dest,a=this._shader,n=this._shaderData,i=this._viewPort;let s=Ze.clientHeight-i.y-i.height,o=Ze._instance;o.changeViewport(i.x,s,i.width,i.height),o.changeScissor(i.x,s,i.width,i.height),n.setTexture($e.SCREENTEXTURE_ID,e),n.setVector($e.SCREENTEXTUREOFFSETSCALE_ID,this._offsetScale||Ct._defaultOffsetScale),e&&n.setVector($e.MAINTEXTURE_TEXELSIZE_ID,this._texture_size),t.RenderTexture.currentActive&&t.RenderTexture.currentActive._end(),r?(r._start(),n.removeDefine(Ct.GAMMAOUT)):n.addDefine(Ct.GAMMAOUT),a.getSubShaderAt(this._subShader)._passes,Je.instance.invertY=!1,o.destTarget=r,o._contextOBJ.applyContext(Ft._updateMark),o.drawRenderElement(this._renderElement)}recover(){Ct._pool.push(this),this._source=null,this._dest=null,this._offsetScale=null,this._shader=null,this._shaderData=null,this._viewPort=null}}Ct._pool=[],Ct._defaultOffsetScale=new t.Vector4(0,0,1,1);class vt{constructor(){this._sceneManagerOBJ=t.LayaGL.renderOBJCreate.createSceneRenderManager()}get list(){return this._sceneManagerOBJ.list}set list(e){this._sceneManagerOBJ.list=e}addRenderObject(e){this._sceneManagerOBJ.addRenderObject(e)}removeRenderObject(e){this._sceneManagerOBJ.removeRenderObject(e)}removeMotionObject(e){this._sceneManagerOBJ.removeMotionObject(e)}updateMotionObjects(){this._sceneManagerOBJ.updateMotionObjects()}addMotionObject(e){this._sceneManagerOBJ.addMotionObject(e)}destroy(){this._sceneManagerOBJ.destroy()}}class yt{constructor(){this._UI3Dlist=new t.SingletonList}add(e){this._UI3Dlist.add(e)}remove(e){this._UI3Dlist.remove(e)}update(){for(var e=0,t=this._UI3Dlist.length;e<t;e++){this._UI3Dlist.elements[e]._submitRT()}}destory(){this._UI3Dlist.destroy()}}class It{constructor(){this.cellCount=0,this.bvhManager=new Map,this.updateBVHBoxList=new t.SingletonList}clear(){this.cellCount=0,this.updateBVHBoxList.clear()}destroy(){this.bvhManager=null,this.updateBVHBoxList.destroy()}}class Mt{constructor(){this.max_SpatialCount=7,this.limit_size=32,this.Min_BVH_Build_Nums=10}}class Lt{static sciContainsBox(e,t){const r=Lt._tempV3,a=Lt._tempV3_2,n=e.min,i=e.max;let s=ae.Contains;for(let e=0,o=t.cullPlaneCount;e<o;e++){const o=t.cullPlanes[e],l=o.normal;if(l.x>=0?(r.x=i.x,a.x=n.x):(r.x=n.x,a.x=i.x),l.y>=0?(r.y=i.y,a.y=n.y):(r.y=n.y,a.y=i.y),l.z>=0?(r.z=i.z,a.z=n.z):(r.z=n.z,a.z=i.z),ne.intersectsPlaneAndPoint(o,r)===te.PlaneIntersectionType_Back)return ae.Disjoint;ne.intersectsPlaneAndPoint(o,a)===te.PlaneIntersectionType_Back&&(s=ae.Intersects)}return s}static sciIntersectsBox(e,t){const r=t.cullPlaneCount,a=t.cullPlanes,n=e.min,i=e.max,s=n.x,o=n.y,l=n.z,h=i.x,c=i.y,d=i.z;let _=!0;for(let e=0;e<r;e++){const t=a[e],r=t.normal;if(t.distance+r.x*(r.x<0?s:h)+r.y*(r.y<0?o:c)+r.z*(r.z<0?l:d)<0){_=!1;break}}return _}constructor(e,r){this._bounds=new _e(new t.Vector3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),new t.Vector3(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)),this._cellList=[],this._cellCount=0,this._bvhmanager=e,this._config=r}set parent(e){this._parent=e}get parent(){return this._parent}_isRepeat(e){return-1!=this._cellList.indexOf(e)}_addOneCell(e){this._cellList.push(e),this._cellCount++,this._bvhmanager.bvhManager.set(e.id,this),this._bvhmanager.cellCount++}_removeOneCell(e){let t=this._cellList.indexOf(e);return-1!=t&&(this._cellCount--,this._cellList.splice(t,1),this._bvhmanager.bvhManager.delete(e.id),this._bvhmanager.cellCount--,!0)}_clearList(){this._bvhmanager.cellCount-=this._cellCount,this._cellCount=0,this._cellList=null}_isFloatMax(e,t){return e-t>1e-4}_isBoundsContainedBySpatialBox(e){let t=e.bounds.getMin(),r=e.bounds.getMax(),a=this._bounds.getMin(),n=this._bounds.getMax();return!(this._isFloatMax(t.x,a.x)&&this._isFloatMax(t.y,a.y)&&this._isFloatMax(t.z,a.z)&&this._isFloatMax(n.x,r.x)&&this._isFloatMax(n.y,r.y)&&this._isFloatMax(n.z,r.z))}_addBounds(e){this._boundchanged=this._isBoundsContainedBySpatialBox(e)}_removeBounds(e){this._boundchanged=this._isBoundsContainedBySpatialBox(e)}fillCell(e){this._isRepeat(e)||(this._addOneCell(e),this._boundchanged=!0,this._bvhmanager.updateBVHBoxList.add(this))}fillRemove(e){this._isRepeat(e)&&(this._removeOneCell(e),this._boundchanged=!0,this._bvhmanager.updateBVHBoxList.add(this))}addCell(e){this._isRepeat(e)||(this._addOneCell(e),this._addBounds(e))}removeCell(e){this._removeOneCell(e)&&this._removeBounds(e)}splitBox(){if(!this.isContentBox())return this._children0&&this._children0.splitBox(),void(this._children1&&this._children1.splitBox());let e=this._bounds.getExtent();if(this._config.max_SpatialCount>this._cellCount&&this._config.limit_size>=2*Math.max(e.x,e.y,e.z)||this._cellCount<=1)return;e.x>e.y&&e.x>e.z?this._cellList.sort(((e,t)=>e&&t?e.bounds.getCenter().x-t.bounds.getCenter().x:0)):e.y>e.x&&e.y>e.z?this._cellList.sort(((e,t)=>e&&t?e.bounds.getCenter().y-t.bounds.getCenter().y:0)):e.z>e.x&&e.z>e.y&&this._cellList.sort(((e,t)=>e&&t?e.bounds.getCenter().z-t.bounds.getCenter().z:0));const t=this._cellCount/2|0;this._children0=this._creatChildNode(),this._children0.parent=this;for(let e=0;e<t;e++){const t=this._cellList[e];this._children0.fillCell(t),_e.merge(this._children0._bounds,t.bounds,this._children0._bounds)}this._children0._boundchanged=!1,this._children0.splitBox(),this._children1=this._creatChildNode(),this._children1.parent=this;for(let e=t;e<this._cellCount;e++){const t=this._cellList[e];this._children1.fillCell(t),_e.merge(this._children1._bounds,t.bounds,this._children1._bounds)}this._children1._boundchanged=!1,this._children1.splitBox(),this._clearList()}getNearlist(e){if(this.isContentBox())return this;{let r=this._children0._bounds.getCenter(),a=this._children1._bounds.getCenter();return t.Vector3.distanceSquared(r,e)<t.Vector3.distanceSquared(a,e)?this._children0.getNearlist(e):this._children1.getNearlist(e)}}traverseBoundsCell(e){if(this.isContentBox())for(var t=0;t<this._cellCount;t++)e.add(this._cellList[t]);else this._children0&&this._children0.traverseBoundsCell(e),this._children1&&this._children1.traverseBoundsCell(e)}_creatChildNode(){return new Lt(this._bvhmanager,this._config)}getItemByCameraCullInfo(e,t){var r=e.boundFrustum;const a=r.containsBoundBox(this._bounds);if(1==a)this.traverseBoundsCell(t);else if(2==a)if(this.isContentBox())for(let e=0;e<this._cellList.length;e++)r.intersects(this._cellList[e].bounds)&&t.add(this._cellList[e]);else this._children0.getItemByCameraCullInfo(e,t),this._children1.getItemByCameraCullInfo(e,t)}getItemByFrustum(e,t){const r=e.containsBoundBox(this._bounds);if(1==r)this.traverseBoundsCell(t);else if(2==r)if(this.isContentBox())for(let r=0;r<this._cellList.length;r++)e.intersects(this._cellList[r].bounds)&&t.add(this._cellList[r]);else this._children0.getItemByFrustum(e,t),this._children1.getItemByFrustum(e,t)}getItemBySCI(e,t){const r=Lt.sciContainsBox(this._bounds,e);if(1==r)this.traverseBoundsCell(t);else if(2==r)if(this.isContentBox())for(let r=0;r<this._cellList.length;r++)Lt.sciIntersectsBox(this._cellList[r].bounds,e)&&t.add(this._cellList[r]);else this._children0.getItemBySCI(e,t),this._children1.getItemBySCI(e,t)}recaculateBox(){if(this._children0&&this._children1)_e.merge(this._children0._bounds,this._children1._bounds,this._bounds);else if(this._cellList&&this._cellList.length>=1){this._cellList[0].bounds.cloneTo(this._bounds);for(var e=0,t=this._cellList.length;e<t;e++)_e.merge(this._cellList[e].bounds,this._bounds,this._bounds)}else console.error("BVHSpatialBox is illegal");this.parent&&this.parent.recaculateBox(),this._boundchanged=!1}isRoot(){return!this._parent}isContentBox(){return 0!=this._cellCount}destroy(){this.isContentBox()?this._cellList=null:(this._children0&&this._children0.destroy(),this._children1&&this._children1.destroy(),this._children0=null,this._children1=null),this._bounds=null,this._config=null,this._bvhmanager=null}}Lt._tempV3=new t.Vector3,Lt._tempV3_2=new t.Vector3;class Ot{_creatChildNode(){return new Lt(this._BVHManager,this._BVHConfig)}constructor(e=null,t=null){this._isBuild=!1,this._BVHConfig=e||new Mt,this._BVHManager=t||new It,this._BVHSpatialBox=this._creatChildNode()}cellLegal(e){let t=e.bounds.getExtent();return this._BVHConfig.limit_size>2*Math.max(t.x,t.y,t.z)}addOne(e){if(!this.cellLegal(e))return!1;if(this._isBuild){let t=this._BVHSpatialBox.getNearlist(e.bounds.getCenter());t.addCell(e),this._BVHManager.updateBVHBoxList.add(t)}else this._BVHSpatialBox.fillCell(e);return!0}removeOne(e){if(!this._BVHManager.bvhManager.has(e.id))return!1;if(this._isBuild){let t=this._BVHManager.bvhManager.get(e.id);t.removeCell(e),this._BVHManager.updateBVHBoxList.add(t)}else this._BVHSpatialBox.fillRemove(e);return!0}motionOne(e){this._BVHSpatialBox.getNearlist(e.bounds.getCenter())!=this._BVHManager.bvhManager.get(e.id)&&(this.removeOne(e),this.addOne(e))}getItemByCameraCullInfo(e,t){this._BVHManager.updateBVHBoxList.length>0&&this.update(),this._isBuild?this._BVHSpatialBox.getItemByCameraCullInfo(e,t):this._BVHSpatialBox.traverseBoundsCell(t)}getItemByFrustum(e,t){this._BVHManager.updateBVHBoxList.length>0&&this.update(),this._isBuild?this._BVHSpatialBox.getItemByFrustum(e,t):this._BVHSpatialBox.traverseBoundsCell(t)}getItemBySCI(e,t){this._BVHManager.updateBVHBoxList.length>0&&this.update(),this._isBuild?this._BVHSpatialBox.getItemBySCI(e,t):this._BVHSpatialBox.traverseBoundsCell(t)}update(){if(this._isBuild){let e=this._BVHManager.updateBVHBoxList;for(let t=0,r=e.length;t<r;t++){let r=e.elements[t];r._boundchanged&&r.recaculateBox(),r.splitBox()}e.length=0}else this._BVHManager.cellCount>this._BVHConfig.Min_BVH_Build_Nums&&(this._BVHSpatialBox.recaculateBox(),this._BVHSpatialBox.splitBox(),this._BVHManager.updateBVHBoxList.remove(this._BVHSpatialBox),this._isBuild=!0),this._BVHManager.updateBVHBoxList.length=0}rebuild(){if(this._isBuild){let e=new t.SingletonList;this._BVHSpatialBox.traverseBoundsCell(e),this._BVHSpatialBox.destroy(),this._BVHManager.clear(),this._isBuild=!1,this._BVHSpatialBox=this._creatChildNode();for(let t=0,r=e.length;t<r;t++)this.addOne(e.elements[t]);this._BVHSpatialBox.recaculateBox(),this._BVHSpatialBox.splitBox()}}destroy(){this._BVHSpatialBox.destroy(),this._BVHManager.destroy()}}class bt extends Lt{_creatChildNode(){return new bt(this._bvhmanager,this._config)}getItemByCameraCullInfo(e,r){var a=e.boundFrustum;const n=a.containsBoundBox(this._bounds);if(1==n)this.traverseBoundsCell(r),t.Stat.frustumCulling++;else if(2==n)if(this.isContentBox()){var i=e.cullingMask;let n=e.staticMask,s=Ze._instance;for(let o=0;o<this._cellList.length;o++){let l=this._cellList[o];0!=(Math.pow(2,l.renderNode.layer)&i)&&l._enabled&&0==l.renderbitFlag&&0!=(l.renderNode.staticMask&n)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!l._needRender(a,s)||r.add(l))}}else this._children0.getItemByCameraCullInfo(e,r),this._children1.getItemByCameraCullInfo(e,r)}getItemBySCI(e,r){const a=Lt.sciContainsBox(this._bounds,e);if(1==a)this.traverseBoundsCell(r);else if(2==a)if(this.isContentBox())for(let a=0;a<this._cellList.length;a++){var n=this._cellList[a];if(n.castShadow&&n._enabled&&0==n.renderbitFlag){t.Stat.frustumCulling++,Dt.cullingRenderBounds(n.bounds,e)&&r.add(n)}}else this._children0.getItemBySCI(e,r),this._children1.getItemBySCI(e,r)}}class wt extends Ot{_creatChildNode(){return new bt(this._BVHManager,this._BVHConfig)}cellLegal(t){return!(t.renderNode.staticMask!=e.StaticFlag.StaticBatch||!super.cellLegal(t))}}class Bt extends vt{constructor(e=null){super(),this._bvhRenderSpatial=new wt(e),this._allRenderList=new t.SingletonList}get list(){return this._allRenderList}set list(e){for(let t=0,r=e.length;t<r;t++){let r=e.elements[t];this.addRenderObject(r)}}get bvhSpatial(){return this._bvhRenderSpatial}get otherList(){return this._sceneManagerOBJ.list}addRenderObject(e){this._bvhRenderSpatial.addOne(e)||this._sceneManagerOBJ.addRenderObject(e),this._allRenderList.add(e)}removeRenderObject(e){this._bvhRenderSpatial.removeOne(e)||this._sceneManagerOBJ.removeRenderObject(e),this._allRenderList.remove(e)}removeMotionObject(e){this._sceneManagerOBJ.removeMotionObject(e)}updateMotionObjects(){this._bvhRenderSpatial.update(),this._sceneManagerOBJ.updateMotionObjects()}addMotionObject(e){this._bvhRenderSpatial.cellLegal(e)?this._bvhRenderSpatial.motionOne(e):this._sceneManagerOBJ.addMotionObject(e)}destroy(){this._sceneManagerOBJ.destroy(),this._bvhRenderSpatial.destroy(),this._allRenderList.destroy()}}class Nt{constructor(){this._cullList=new t.SingletonList}get cullList(){return this._cullList}static cullDistanceVolume(e,r){let a=e.camera;if(!a||!a.transform)return!1;let n=r.bounds,i=n.getCenter(),s=n.getExtent(),o=t.Vector3.distance(a.transform.position,i);return!(Math.max(s.x,s.y,s.z)/o<r._ratioIgnor)}cullByCameraCullInfo(e,r){this._cullList.length=0;var a=r.list.elements,n=e.boundFrustum,i=e.cullingMask;let s=e.staticMask,o=Ze._instance;for(var l=0,h=r.list.length;l<h;l++){var c=a[l];0!=(Math.pow(2,c.renderNode.layer)&i)&&c._enabled&&0==c.renderbitFlag&&0!=(c.renderNode.staticMask&s)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!c._needRender(n,o)||this.cullList.add(c))}}cullByShadowCullInfo(e,r){this._cullList.length=0;for(var a=r.list,n=a.elements,i=0,s=a.length;i<s;i++){var o=n[i];if(o.castShadow&&o._enabled&&0==o.renderbitFlag){t.Stat.frustumCulling++,Dt.cullingRenderBounds(o.bounds,e)&&this._cullList.add(o)}}}cullingSpotShadow(e,r){this._cullList.length=0;let a=r.list.elements,n=e.boundFrustum,i=Ze._instance;for(let e=0,s=r.list.length;e<s;e++){let r=a[e];r.castShadow&&r._enabled&&0==r.renderbitFlag&&(t.Stat.frustumCulling++,r._needRender(n,i)&&this._cullList.add(r))}}}class Vt extends Nt{constructor(){super(...arguments),this._cullList=new t.SingletonList}get cullList(){return this._cullList}cullByCameraCullInfo(e,r){this._cullList.length=0,r.bvhSpatial.getItemByCameraCullInfo(e,this._cullList);var a=r.otherList,n=a.elements,i=e.boundFrustum,s=e.cullingMask;let o=e.staticMask,l=Ze._instance;for(var h=0,c=a.length;h<c;h++){var d=n[h];0!=(Math.pow(2,d.renderNode.layer)&s)&&d._enabled&&0==d.renderbitFlag&&0!=(d.renderNode.staticMask&o)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!d._needRender(i,l)||this.cullList.add(d))}}cullByShadowCullInfo(e,r){this._cullList.length=0,r.bvhSpatial.getItemBySCI(e,this._cullList);for(var a=r.otherList,n=a.elements,i=0,s=a.length;i<s;i++){var o=n[i];if(o.castShadow&&o._enabled&&0==o.renderbitFlag){t.Stat.frustumCulling++,Dt.cullingRenderBounds(o.bounds,e)&&this._cullList.add(o)}}}cullingSpotShadow(e,t){}}class Pt extends t.Sprite{static set _updateMark(e){Pt.__updateMark=e}static get _updateMark(){return Pt.__updateMark}static shaderValueInit(){Tt.SHADERDEFINE_FOG=t.Shader3D.getDefineByName("FOG"),Tt.SHADERDEFINE_DIRECTIONLIGHT=t.Shader3D.getDefineByName("DIRECTIONLIGHT"),Tt.SHADERDEFINE_POINTLIGHT=t.Shader3D.getDefineByName("POINTLIGHT"),Tt.SHADERDEFINE_SPOTLIGHT=t.Shader3D.getDefineByName("SPOTLIGHT"),Tt.SHADERDEFINE_SHADOW=t.Shader3D.getDefineByName("SHADOW"),Tt.SHADERDEFINE_SHADOW_CASCADE=t.Shader3D.getDefineByName("SHADOW_CASCADE"),Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW=t.Shader3D.getDefineByName("SHADOW_SOFT_SHADOW_LOW"),Tt.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH=t.Shader3D.getDefineByName("SHADOW_SOFT_SHADOW_HIGH"),Tt.SHADERDEFINE_SHADOW_SPOT=t.Shader3D.getDefineByName("SHADOW_SPOT"),Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW=t.Shader3D.getDefineByName("SHADOW_SPOT_SOFT_SHADOW_LOW"),Tt.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH=t.Shader3D.getDefineByName("SHADOW_SPOT_SOFT_SHADOW_HIGH"),Pt.FOGCOLOR=t.Shader3D.propertyNameToID("u_FogColor"),Pt.FOGSTART=t.Shader3D.propertyNameToID("u_FogStart"),Pt.FOGRANGE=t.Shader3D.propertyNameToID("u_FogRange"),Pt.DIRECTIONLIGHTCOUNT=t.Shader3D.propertyNameToID("u_DirationLightCount"),Pt.LIGHTBUFFER=t.Shader3D.propertyNameToID("u_LightBuffer"),Pt.CLUSTERBUFFER=t.Shader3D.propertyNameToID("u_LightClusterBuffer"),Pt.TIME=t.Shader3D.propertyNameToID("u_Time"),Pt.GIRotate=t.Shader3D.propertyNameToID("u_GIRotate"),Pt.SCENEUNIFORMBLOCK=t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SCENE);let e=Pt.sceneUniformMap=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Scene3D");e.addShaderUniform(Pt.FOGCOLOR,"u_FogColor"),e.addShaderUniform(Pt.FOGSTART,"u_FogStart"),e.addShaderUniform(Pt.FOGRANGE,"u_FogRange"),e.addShaderUniform(Pt.DIRECTIONLIGHTCOUNT,"u_DirationLightCount"),e.addShaderUniform(Pt.LIGHTBUFFER,"u_LightBuffer"),e.addShaderUniform(Pt.CLUSTERBUFFER,"u_LightClusterBuffer"),e.addShaderUniform(Pt.TIME,"u_Time"),e.addShaderUniform(Pt.GIRotate,"u_GIRotate"),e.addShaderUniform(Pt.SCENEUNIFORMBLOCK,t.UniformBufferObject.UBONAME_SCENE)}static legacyLightingValueInit(){Pt.LIGHTDIRECTION=t.Shader3D.propertyNameToID("u_DirectionLight.direction"),Pt.sceneUniformMap.addShaderUniform(Pt.LIGHTDIRECTION,"u_DirectionLight.direction"),Pt.LIGHTDIRCOLOR=t.Shader3D.propertyNameToID("u_DirectionLight.color"),Pt.sceneUniformMap.addShaderUniform(Pt.LIGHTDIRCOLOR,"u_DirectionLight.color"),Pt.POINTLIGHTPOS=t.Shader3D.propertyNameToID("u_PointLight.position"),Pt.sceneUniformMap.addShaderUniform(Pt.POINTLIGHTPOS,"u_PointLight.position"),Pt.POINTLIGHTRANGE=t.Shader3D.propertyNameToID("u_PointLight.range"),Pt.sceneUniformMap.addShaderUniform(Pt.POINTLIGHTRANGE,"u_PointLight.range"),Pt.POINTLIGHTATTENUATION=t.Shader3D.propertyNameToID("u_PointLight.attenuation"),Pt.sceneUniformMap.addShaderUniform(Pt.POINTLIGHTATTENUATION,"u_PointLight.attenuation"),Pt.POINTLIGHTCOLOR=t.Shader3D.propertyNameToID("u_PointLight.color"),Pt.sceneUniformMap.addShaderUniform(Pt.POINTLIGHTCOLOR,"u_PointLight.color"),Pt.SPOTLIGHTPOS=t.Shader3D.propertyNameToID("u_SpotLight.position"),Pt.sceneUniformMap.addShaderUniform(Pt.SPOTLIGHTPOS,"u_SpotLight.position"),Pt.SPOTLIGHTDIRECTION=t.Shader3D.propertyNameToID("u_SpotLight.direction"),Pt.sceneUniformMap.addShaderUniform(Pt.SPOTLIGHTDIRECTION,"u_DirectionLight.direction"),Pt.SPOTLIGHTSPOTANGLE=t.Shader3D.propertyNameToID("u_SpotLight.spot"),Pt.sceneUniformMap.addShaderUniform(Pt.SPOTLIGHTSPOTANGLE,"u_SpotLight.spot"),Pt.SPOTLIGHTRANGE=t.Shader3D.propertyNameToID("u_SpotLight.range"),Pt.sceneUniformMap.addShaderUniform(Pt.SPOTLIGHTRANGE,"u_SpotLight.range"),Pt.SPOTLIGHTCOLOR=t.Shader3D.propertyNameToID("u_SpotLight.color"),Pt.sceneUniformMap.addShaderUniform(Pt.SPOTLIGHTCOLOR,"u_SpotLight.color")}static createSceneUniformBlock(){if(!Pt.SceneUBOData){let e=new Map;e.set("u_Time",t.UniformBufferParamsType.Number),e.set("u_FogStart",t.UniformBufferParamsType.Number),e.set("u_FogRange",t.UniformBufferParamsType.Number),e.set("u_FogColor",t.UniformBufferParamsType.Vector4);let r=new Map;e.forEach(((e,a)=>{r.set(t.Shader3D.propertyNameToID(a),e)})),Pt.SceneUBOData=new t.UnifromBufferData(r)}return Pt.SceneUBOData}static __init__(){if(t.Config3D._multiLighting){const a=4;var e=t.Config3D.maxLightCount,r=t.Config3D.lightClusterCount;ee.instance=new ee(r.x,r.y,r.z,Math.min(t.Config3D.maxLightCount,t.Config3D._maxAreaLightCountPerClusterAverage)),Pt._lightTexture=l._createFloatTextureBuffer(a,e),Pt._lightTexture.lock=!0,Pt._lightPixles=new Float32Array(e*a*4)}Pt.shaderValueInit();var a=t.Shader3D._configDefineValues;t.Config3D._multiLighting||(a.add(t.Shader3D.SHADERDEFINE_LEGACYSINGALLIGHTING),Pt.legacyLightingValueInit()),Pt._shadowCasterPass=new Rt,t.LayaGL.renderEngine.getCapable(t.RenderCapable.GRAPHICS_API_GLES3)&&t.WebGL._isWebGL2?a.add(t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES3):a.add(t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES2),t.Config3D._uniformBlock&&a.add(t.Shader3D.SHADERDEFINE_ENUNIFORMBLOCK),w._bullet&&(Pt.physicsSettings=new ft)}static load(e,r){t.ILaya.loader.load(e).then((e=>{if(r){let a;if(e){let r=e.create();a=r instanceof t.Scene?r._scene3D:r}r.runWith([a])}}))}set sceneRenderableManager(e){e.list=this._sceneRenderManager.list,this._sceneRenderManager=e}get sceneRenderableManager(){return this._sceneRenderManager}set cullPass(e){this._cullPass=e}get enableFog(){return this._enableFog}set enableFog(e){this._enableFog!==e&&(this._enableFog=e,e?this._shaderValues.addDefine(Tt.SHADERDEFINE_FOG):this._shaderValues.removeDefine(Tt.SHADERDEFINE_FOG))}get fogColor(){return this._shaderValues.getColor(Pt.FOGCOLOR)}set fogColor(e){this._shaderValues.setColor(Pt.FOGCOLOR,e)}get fogStart(){return this._shaderValues.getNumber(Pt.FOGSTART)}set fogStart(e){this._shaderValues.setNumber(Pt.FOGSTART,e)}get fogRange(){return this._shaderValues.getNumber(Pt.FOGRANGE)}set fogRange(e){this._shaderValues.setNumber(Pt.FOGRANGE,e)}set GIRotate(e){this._shaderValues.setNumber(Pt.GIRotate,e)}get GIRotate(){return this._shaderValues.getNumber(Pt.GIRotate)}get ambientMode(){return this._sceneReflectionProb.ambientMode}set ambientMode(e){this._sceneReflectionProb.ambientMode=e}get sceneReflectionProb(){return this._sceneReflectionProb}set sceneReflectionProb(e){this._sceneReflectionProb=e}get ambientColor(){return this._sceneReflectionProb.ambientColor}set ambientColor(e){this._sceneReflectionProb.ambientColor=e}get ambientIntensity(){return this._sceneReflectionProb.ambientIntensity}set ambientIntensity(e){this._sceneReflectionProb.ambientIntensity=e}get reflectionIntensity(){return this._sceneReflectionProb.reflectionIntensity}set reflectionIntensity(e){this._sceneReflectionProb.reflectionIntensity=e}get ambientSH(){return this._sceneReflectionProb.ambientSH}set ambientSH(e){this._sceneReflectionProb.ambientSH=e}get iblTex(){return this._sceneReflectionProb.iblTex}set iblTex(e){this._sceneReflectionProb.iblTex=e}get iblTexRGBD(){return this._sceneReflectionProb.iblTexRGBD}set iblTexRGBD(e){this._sceneReflectionProb.iblTexRGBD=e}get skyRenderer(){return this._skyRenderer}get physicsSimulation(){return this._physicsSimulation}get timer(){return this._timer}set timer(e){this._timer=e}get lightmaps(){return this._lightmaps.slice()}set lightmaps(e){var t=this._lightmaps;if(t)for(var r=0,a=t.length;r<a;r++){(i=t[r]).lightmapColor&&i.lightmapColor._removeReference(),i.lightmapDirection&&i.lightmapDirection._removeReference()}if(e){var n=e.length;for(t.length=n,r=0;r<n;r++){var i;(i=e[r]).lightmapColor&&i.lightmapColor._addReference(),i.lightmapDirection&&i.lightmapDirection._addReference(),t[r]=i}}else t.length=0}get shadowMapFrequency(){return this._ShadowMapupdateFrequency}set shadowMapFrequency(e){this._ShadowMapupdateFrequency=e}constructor(){if(super(),this._reflectionsSource=0,this._reflectionsResolution="256",this._reflectionsIblSamples=128,this._lightCount=0,this._pointLights=new gt,this._spotLights=new gt,this._directionLights=new gt,this._alternateLights=new pt,this._lightmaps=[],this._skyRenderer=new je,this._time=0,this._sunColor=new t.Color(1,1,1),this._sundir=new t.Vector3,this._id=Pt.sceneID++,this._physicsdisableSimulation=!1,this._collsionTestList=[],this._key=new t.SubmitKey,this._opaqueQueue=t.LayaGL.renderOBJCreate.createBaseRenderQueue(!1),this._transparentQueue=t.LayaGL.renderOBJCreate.createBaseRenderQueue(!0),this._cameraPool=[],this._UI3DManager=new yt,this.currentCreationLayer=Math.pow(2,0),this.enableLight=!0,this._ShadowMapupdateFrequency=1,this._is3D=!0,this._componentDriver=new t.ComponentDriver,this._timer=t.ILaya.timer,t.LayaEnv.isConch&&!window.conchConfig.conchWebGL&&(this._nativeObj=new window.conchSubmitScene3D(this.renderSubmit.bind(this))),w._bullet&&(this._physicsSimulation=new M(Pt.physicsSettings)),this._shaderValues=t.LayaGL.renderOBJCreate.createShaderData(null),this._shaderValues._defineDatas.addDefineDatas(t.Shader3D._configDefineValues),t.Config3D._uniformBlock&&(this._sceneUniformObj=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_SCENE,0),this._sceneUniformData=Pt.createSceneUniformBlock(),this._sceneUniformObj||(this._sceneUniformObj=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_SCENE,t.BufferUsage.Dynamic,this._sceneUniformData.getbyteLength(),!0)),this._shaderValues._addCheckUBO(t.UniformBufferObject.UBONAME_SCENE,this._sceneUniformObj,this._sceneUniformData),this._shaderValues.setUniformBuffer(Pt.SCENEUNIFORMBLOCK,this._sceneUniformObj),this._shaderValues._addCheckUBO(t.UniformBufferObject.UBONAME_SHADOW,Pt._shadowCasterPass._castDepthBufferOBJ,Pt._shadowCasterPass._castDepthBufferData),this._shaderValues.setUniformBuffer(t.Shader3D.propertyNameToID(t.UniformBufferObject.UBONAME_SHADOW),Pt._shadowCasterPass._castDepthBufferOBJ)),this.enableFog=!1,this.fogStart=300,this.fogRange=1e3,this.fogColor=new t.Color(.7,.7,.7),this.GIRotate=0,this._scene=this,t.Config3D.useBVHCull){let e=new Mt;e.Min_BVH_Build_Nums=t.Config3D.BVH_Min_Build_nums,e.limit_size=t.Config3D.BVH_limit_size,e.max_SpatialCount=t.Config3D.BVH_max_SpatialCount,this._sceneRenderManager=new Bt(e),this._cullPass=new Vt}else this._sceneRenderManager=new vt,this._cullPass=t.LayaGL.renderOBJCreate.createCullPass();t.Config3D.debugFrustumCulling,this._volumeManager=new Ve,this._UI3DManager=new yt,this.sceneReflectionProb=this._volumeManager.reflectionProbeManager.sceneReflectionProbe,this._sceneReflectionProb.reflectionIntensity=1,this.ambientColor=new t.Color(.212,.227,.259)}_update(){var e=this.timer._delta/1e3;this._time+=e,this._shaderValues.setNumber(Pt.TIME,this._time);let r=this._physicsSimulation;t.LayaEnv.isPlaying&&w._enablePhysics&&!M.disableSimulation&&(r._updatePhysicsTransformFromRender(),T._addUpdateList=!1,r._simulate(e),r._updateCharacters(),T._addUpdateList=!0,r._updateCollisions(),r.dispatchCollideEvent()),this._volumeManager.needreCaculateAllRenderObjects()?this._volumeManager.reCaculateAllRenderObjects(this._sceneRenderManager.list):this._volumeManager.handleMotionlist(),this._componentDriver.callStart(),this._componentDriver.callUpdate(),this._componentDriver.callLateUpdate(),this._componentDriver.callDestroy(),this._sceneRenderManager.updateMotionObjects(),this._UI3DManager.update()}_binarySearchIndexInCameraPool(e){for(var t,r=0,a=this._cameraPool.length-1;r<=a;){t=Math.floor((r+a)/2);var n=this._cameraPool[t]._renderingOrder;if(n==e._renderingOrder)return t;n>e._renderingOrder?a=t-1:r=t+1}return r}_getGroup(){return this._group}_setGroup(e){this._group=e}_onActive(){super._onActive(),t.ILaya.stage._scene3Ds.push(this)}_onInActive(){super._onInActive();var e=t.ILaya.stage._scene3Ds;e.splice(e.indexOf(this),1)}_prepareSceneToRender(){var e=this._shaderValues;if(t.Config3D._multiLighting){var r=Pt._lightTexture,a=Pt._lightPixles;const x=r.width,D=4*x;var n=0,i=this._directionLights._length,s=this._directionLights._elements;if(i>0){var o=this._directionLights.getBrightestLight();this._mainDirectionLight=s[o],this._directionLights.normalLightOrdering(o);for(var l=0;l<i;l++,n++){var h=(E=s[l])._direction,c=D*n;(S=E._intensityColor).x=t.Color.gammaToLinearSpace(E.color.r),S.y=t.Color.gammaToLinearSpace(E.color.g),S.z=t.Color.gammaToLinearSpace(E.color.b),t.Vector3.scale(S,E._intensity,S),E.owner.transform.worldMatrix.getForward(h),t.Vector3.normalize(h,h),a[c]=S.x,a[c+1]=S.y,a[c+2]=S.z,a[c+3]=E._lightmapBakedType,a[c+4]=h.x,a[c+5]=h.y,a[c+6]=h.z,0==l&&(this._sunColor=E.color,this._sundir=h)}e.addDefine(Tt.SHADERDEFINE_DIRECTIONLIGHT)}else e.removeDefine(Tt.SHADERDEFINE_DIRECTIONLIGHT);var d=this._pointLights._length;if(d>0){var _=this._pointLights._elements,u=this._pointLights.getBrightestLight();this._mainPointLight=_[u],this._pointLights.normalLightOrdering(u);for(l=0;l<d;l++,n++){var m=(A=_[l]).owner.transform.position;c=D*n;(S=A._intensityColor).x=t.Color.gammaToLinearSpace(A.color.r),S.y=t.Color.gammaToLinearSpace(A.color.g),S.z=t.Color.gammaToLinearSpace(A.color.b),t.Vector3.scale(S,A._intensity,S),a[c]=S.x,a[c+1]=S.y,a[c+2]=S.z,a[c+3]=A.range,a[c+4]=m.x,a[c+5]=m.y,a[c+6]=m.z,a[c+7]=A._lightmapBakedType}e.addDefine(Tt.SHADERDEFINE_POINTLIGHT)}else e.removeDefine(Tt.SHADERDEFINE_POINTLIGHT);var f=this._spotLights._length;if(f>0){var g=this._spotLights._elements,p=this._spotLights.getBrightestLight();this._mainSpotLight=g[p],this._spotLights.normalLightOrdering(p);for(l=0;l<f;l++,n++){var S,T=g[l];h=T._direction,m=T.owner.transform.position,c=D*n;(S=T._intensityColor).x=t.Color.gammaToLinearSpace(T.color.r),S.y=t.Color.gammaToLinearSpace(T.color.g),S.z=t.Color.gammaToLinearSpace(T.color.b),t.Vector3.scale(S,T._intensity,S),T.owner.transform.worldMatrix.getForward(h),t.Vector3.normalize(h,h),a[c]=S.x,a[c+1]=S.y,a[c+2]=S.z,a[c+3]=T.range,a[c+4]=m.x,a[c+5]=m.y,a[c+6]=m.z,a[c+7]=T.spotAngle*Math.PI/180,a[c+8]=h.x,a[c+9]=h.y,a[c+10]=h.z,a[c+11]=T._lightmapBakedType}e.addDefine(Tt.SHADERDEFINE_SPOTLIGHT)}else e.removeDefine(Tt.SHADERDEFINE_SPOTLIGHT);n>0&&r.setSubPixelsData(0,0,x,n,a,0,!1,!1,!1),e.setTexture(Pt.LIGHTBUFFER,r),e.setInt(Pt.DIRECTIONLIGHTCOUNT,this._directionLights._length),e.setTexture(Pt.CLUSTERBUFFER,ee.instance._clusterTexture)}else{if(this._directionLights._length>0){var E=this._directionLights._elements[0];this._mainDirectionLight=E,E._intensityColor.x=t.Color.gammaToLinearSpace(E.color.r),E._intensityColor.y=t.Color.gammaToLinearSpace(E.color.g),E._intensityColor.z=t.Color.gammaToLinearSpace(E.color.b),t.Vector3.scale(E._intensityColor,E._intensity,E._intensityColor),E.owner.transform.worldMatrix.getForward(E._direction),t.Vector3.normalize(E._direction,E._direction),e.setVector3(Pt.LIGHTDIRCOLOR,E._intensityColor),e.setVector3(Pt.LIGHTDIRECTION,E._direction),0==l&&(this._sunColor=E.color,this._sundir=E._direction),e.addDefine(Tt.SHADERDEFINE_DIRECTIONLIGHT)}else e.removeDefine(Tt.SHADERDEFINE_DIRECTIONLIGHT);if(this._pointLights._length>0){var A=this._pointLights._elements[0];this._mainPointLight=A,A._intensityColor.x=t.Color.gammaToLinearSpace(A.color.r),A._intensityColor.y=t.Color.gammaToLinearSpace(A.color.g),A._intensityColor.z=t.Color.gammaToLinearSpace(A.color.b),t.Vector3.scale(A._intensityColor,A._intensity,A._intensityColor),e.setVector3(Pt.POINTLIGHTCOLOR,A._intensityColor),e.setVector3(Pt.POINTLIGHTPOS,A.owner.transform.position),e.setNumber(Pt.POINTLIGHTRANGE,A.range),e.addDefine(Tt.SHADERDEFINE_POINTLIGHT)}else e.removeDefine(Tt.SHADERDEFINE_POINTLIGHT);if(this._spotLights._length>0){var x=this._spotLights._elements[0];this._mainSpotLight=x,x._intensityColor.x=t.Color.gammaToLinearSpace(x.color.r),x._intensityColor.y=t.Color.gammaToLinearSpace(x.color.g),x._intensityColor.z=t.Color.gammaToLinearSpace(x.color.b),t.Vector3.scale(x._intensityColor,x._intensity,x._intensityColor),e.setVector3(Pt.SPOTLIGHTCOLOR,x._intensityColor),e.setVector3(Pt.SPOTLIGHTPOS,x.owner.transform.position),x.owner.transform.worldMatrix.getForward(x._direction),t.Vector3.normalize(x._direction,x._direction),e.setVector3(Pt.SPOTLIGHTDIRECTION,x._direction),e.setNumber(Pt.SPOTLIGHTRANGE,x.range),e.setNumber(Pt.SPOTLIGHTSPOTANGLE,x.spotAngle*Math.PI/180),e.addDefine(Tt.SHADERDEFINE_SPOTLIGHT)}else e.removeDefine(Tt.SHADERDEFINE_SPOTLIGHT)}}get cullInfoCamera(){return this._cullInfoCamera}_setCullCamera(e){this._cullInfoCamera=e}recaculateCullCamera(){this._cullInfoCamera=this._cameraPool[0],this._cameraPool.forEach((e=>{this.cullInfoCamera.maxlocalYDistance<e.maxlocalYDistance&&(this._cullInfoCamera=e)}))}_addCamera(e){for(var t=this._binarySearchIndexInCameraPool(e),r=e._renderingOrder,a=this._cameraPool.length;t<a&&this._cameraPool[t]._renderingOrder<=r;)t++;this._cameraPool.splice(t,0,e)}_removeCamera(e){this._cameraPool.splice(this._cameraPool.indexOf(e),1)}_preCulling(e,r){this._clearRenderQueue();var a=Dt._cameraCullInfo,n=a.position=r._transform.position;a.cullingMask=r.cullingMask,a.staticMask=r.staticMask,a.boundFrustum=r.boundFrustum,a.useOcclusionCulling=r.useOcclusionCulling,this._cullPass.cullByCameraCullInfo(a,this.sceneRenderableManager);let i=this._cullPass.cullList,s=i.elements;for(let r=0;r<i.length;r++){let a=s[r];a.distanceForSort=t.Vector3.distance(a.bounds.getCenter(),n);for(var o=a._renderElements,l=0,h=o.length;l<h;l++)o[l]._update(this,e,e.customShader,e.replaceTag)}}_directLightShadowCull(e,r){this._clearRenderQueue();const a=e.position;this._cullPass.cullByShadowCullInfo(e,this.sceneRenderableManager);let n=this._cullPass.cullList,i=n.elements;for(let e=0;e<n.length;e++){let n=i[e];n.distanceForSort=t.Vector3.distance(n.bounds.getCenter(),a);for(var s=n._renderElements,o=0,l=s.length;o<l;o++)s[o]._update(this,r,null,null)}}_sportLightShadowCull(e,r){this._clearRenderQueue(),this._cullPass.cullingSpotShadow(e,this.sceneRenderableManager);let a=this._cullPass.cullList,n=a.elements;for(var i=0,s=a.length;i<s;i++){var o=n[i];o.distanceForSort=t.Vector3.distance(o.bounds.getCenter(),e.position);for(var l=o._renderElements,h=0,c=l.length;h<c;h++)l[h]._update(this,r,null,null)}}_clear(r){var a,n,i=r.viewport,s=r.camera,o=s._getRenderTexture(),l=i.width,h=i.height;s._needInternalRenderTexture()?(a=0,n=0):s.renderTarget?(a=i.x,n=i.y):(a=i.x,n=s._getCanvasHeight()-i.y-h),t.LayaGL.renderEngine.viewport(a,n,l,h),t.LayaGL.renderEngine.scissor(a,n,l,h),r.changeViewport(a,n,l,h),r.changeScissor(a,n,l,h),Ft._context3DViewPortCatch.set(a,n,l,h),Ft._contextScissorPortCatch.setValue(a,n,l,h);var c=s.clearFlag;c!==e.CameraClearFlags.Sky||s.skyRenderer._isAvailable()||this._skyRenderer._isAvailable()||(c=e.CameraClearFlags.SolidColor);let d=0,_=o.depthStencilFormat==t.RenderTargetFormat.DEPTHSTENCIL_24_8?t.RenderClearFlag.Stencil:0;switch(c){case e.CameraClearFlags.SolidColor:d=t.RenderClearFlag.Color|t.RenderClearFlag.Depth|_;break;case e.CameraClearFlags.DepthOnly:case e.CameraClearFlags.Sky:d=t.RenderClearFlag.Depth|_;break;case e.CameraClearFlags.Nothing:d=0;break;case e.CameraClearFlags.ColorOnly:d=t.RenderClearFlag.Color}t.LayaGL.renderEngine.clearRenderTexture(d,s._linearClearColor,1)}_renderScene(r,a){var n=r.camera;switch(a){case Pt.SCENERENDERFLAG_RENDERQPAQUE:t.Stat.opaqueDrawCall+=this._opaqueQueue.renderQueue(r);break;case Pt.SCENERENDERFLAG_SKYBOX:n.clearFlag===e.CameraClearFlags.Sky&&(n.skyRenderer._isAvailable()?n.skyRenderer._render(r):this._skyRenderer._isAvailable()&&this._skyRenderer._render(r));break;case Pt.SCENERENDERFLAG_RENDERTRANSPARENT:t.Stat.transDrawCall+=this._transparentQueue.renderQueue(r),t.Config3D.debugFrustumCulling}}_parse(r,a){var n=r.lightmaps;if(n){for(var i=n.length,s=new Array(i),o=0;o<i;o++){var l=new St,h=n[o];h.path?l.lightmapColor=t.Loader.getTexture2D(h.path):(l.lightmapColor=t.Loader.getTexture2D(h.color.path),h.direction&&(l.lightmapDirection=t.Loader.getTexture2D(h.direction.path))),s[o]=l}this.lightmaps=s}var c=r.sky;if(c)switch(this._skyRenderer.material=t.Loader.getRes(c.material.path),c.mesh){case"SkyBox":this._skyRenderer.mesh=We.instance;break;case"SkyDome":this._skyRenderer.mesh=Xe.instance;break;default:this.skyRenderer.mesh=We.instance}this.enableFog=r.enableFog,this.fogStart=r.fogStart,this.fogRange=r.fogRange;var d=r.fogColor;if(d){var _=this.fogColor;_.fromArray(d),this.fogColor=_}var u=r.ambientMode,m=r.ambientColor;if(m){var f=this.ambientColor;f.fromArray(m),this.ambientColor=f}if(u==e.AmbientMode.TripleColor){let e=r.ambientSkyColor,a=new t.Vector3;a.fromArray(e);let n=r.ambientEquatorColor,i=new t.Vector3;i.fromArray(n);let s=r.ambientGroundColor,o=new t.Vector3;o.fromArray(s),this._sceneReflectionProb.setGradientAmbient(a,i,o)}var g=r.ambientSphericalHarmonics;if(g){var p=new Pe;for(o=0;o<3;o++){var S=9*o;p.setCoefficients(o,g[S],g[S+1],g[S+2],g[S+3],g[S+4],g[S+5],g[S+6],g[S+7],g[S+8])}this._sceneReflectionProb.ambientSphericalHarmonics=p}null!=u&&(this.ambientMode=u);var T=r.reflection;null!=T&&(this._sceneReflectionProb.reflectionTexture=t.Loader.getRes(T));var E=r.reflectionDecodingFormat;null!=E&&(this._sceneReflectionProb.reflectionDecodingFormat=E);var A=r.ambientSphericalHarmonicsIntensity;null!=A&&(this._sceneReflectionProb.ambientIntensity=A);var x=r.reflectionIntensity;null!=x&&(this._sceneReflectionProb.reflectionIntensity=x)}_addRenderObject(e){this._sceneRenderManager.addRenderObject(e),e._addReflectionProbeUpdate()}_removeRenderObject(e){this._sceneRenderManager.removeRenderObject(e)}_getRenderQueue(e){return e<=2500?this._opaqueQueue:this._transparentQueue}_clearRenderQueue(){this._opaqueQueue.clear(),this._transparentQueue.clear()}destroy(e=!0){if(!this._destroyed){super.destroy(e),this._nativeObj=null,this._skyRenderer.destroy(),this._skyRenderer=null,this._directionLights=null,this._pointLights=null,this._spotLights=null,this._alternateLights=null,this._shaderValues.destroy(),this._opaqueQueue.destroy(),this._transparentQueue.destroy(),Ze._instance.scene==this&&(Ze._instance.scene=null),this._shaderValues=null,this.sceneRenderableManager.destroy(),this._sceneRenderManager=null,this._cameraPool=null,this._physicsSimulation&&this._physicsSimulation._destroy();var t=this._lightmaps;if(t)for(var r=0,a=t.length;r<a;r++){var n=t[r];n.lightmapColor&&n.lightmapColor._removeReference(),n.lightmapDirection&&n.lightmapDirection._removeReference()}this._lightmaps=null,this._volumeManager.destroy(),this._componentDriver.callDestroy()}}render(e){this._children.length>0&&e.addRenderObject3D(this)}renderSubmit(){var e,r;for(t.BufferState._curBindedBufferState&&t.BufferState._curBindedBufferState.unBind(),this._prepareSceneToRender(),Pt._updateMark++,e=0,r=this._cameraPool.length;e<r;e++){var a=this._cameraPool[e];if(this._setCullCamera(a),a.renderTarget?a.enableBuiltInRenderTexture=!1:a.enableBuiltInRenderTexture=!0,a.enableRender&&a.render(),Pt._blitTransRT=null,a.enableRender&&!a.renderTarget){Pt._blitTransRT=a._internalRenderTexture;var n=a._getCanvasWidth(),i=a._getCanvasHeight();Pt._blitOffset.setValue(a.viewport.x/n,a.viewport.y/i,a.viewport.width/n,a.viewport.height/i),this.blitMainCanvans(Pt._blitTransRT,a.normalizedViewport,a)}a._cacheDepth||a.enableRender&&a._needInternalRenderTexture()&&!a._internalRenderTexture._inPool&&t.RenderTexture.recoverToPool(a._internalRenderTexture)}return t.Context.set2DRenderConfig(),t.RenderTexture.clearPool(),1}blitMainCanvans(e,r,a){if(e){Pt.mainCavansViewPort.x=Ze.clientWidth*r.x|0,Pt.mainCavansViewPort.y=Ze.clientHeight*r.y|0,Pt.mainCavansViewPort.width=Ze.clientWidth*r.width|0,Pt.mainCavansViewPort.height=Ze.clientHeight*r.height|0,e.filterMode=t.FilterMode.Bilinear,a.fxaa&&Ct.shaderdata.addDefine(Qe.SHADERDEFINE_FXAA);var n=Ct.create(e,null,Pt.mainCavansViewPort,null,null,Ct.shaderdata);n.run(),n.recover(),Ct.shaderdata.removeDefine(Qe.SHADERDEFINE_FXAA)}}getRenderType(){return 0}releaseRender(){}reUse(e,t){return 0}setGlobalShaderValue(e,r,a){var n=t.Shader3D.propertyNameToID(e);this._shaderValues.setShaderData(n,r,a)}setlightmaps(e){for(var t=this._lightmaps,r=0,a=t.length;r<a;r++)t[r].lightmapColor._removeReference();if(!e)throw new Error("Scene3D: value value can't be null.");var n=e.length;for(t.length=n,r=0;r<n;r++){var i=e[r];i._addReference(),t[r]||(t[r]=new St),t[r].lightmapColor=i}}getlightmaps(){for(var e=new Array(this._lightmaps.length),t=0;t<this._lightmaps.length;t++)e[t]=this._lightmaps[t].lightmapColor;return e}}Pt.REFLECTIONMODE_SKYBOX=0,Pt.REFLECTIONMODE_CUSTOM=1,Pt.SCENERENDERFLAG_RENDERQPAQUE=0,Pt.SCENERENDERFLAG_SKYBOX=1,Pt.SCENERENDERFLAG_RENDERTRANSPARENT=2,Pt.__updateMark=0,Pt._blitOffset=new t.Vector4,Pt.mainCavansViewPort=new se(0,0,1,1),e.CameraClearFlags=void 0,(Ce=e.CameraClearFlags||(e.CameraClearFlags={}))[Ce.SolidColor=0]="SolidColor",Ce[Ce.Sky=1]="Sky",Ce[Ce.DepthOnly=2]="DepthOnly",Ce[Ce.Nothing=3]="Nothing",Ce[Ce.ColorOnly=4]="ColorOnly",e.CameraEventFlags=void 0,(ve=e.CameraEventFlags||(e.CameraEventFlags={}))[ve.BeforeForwardOpaque=0]="BeforeForwardOpaque",ve[ve.BeforeSkyBox=2]="BeforeSkyBox",ve[ve.BeforeTransparent=4]="BeforeTransparent",ve[ve.BeforeImageEffect=6]="BeforeImageEffect",ve[ve.AfterEveryThing=8]="AfterEveryThing";class Ft extends Qe{static set _updateMark(e){Ft.__updateMark=e}static get _updateMark(){return Ft.__updateMark}static drawRenderTextureByScene(e,r,a,n=null,i=null){if(!a)return null;Pt._updateMark++,r._prepareSceneToRender(),r._setCullCamera(e);let s=e.renderTarget;e.renderTarget=a;var o=e.viewport,l=e._needInternalRenderTexture(),h=Ze._instance;r=h.scene=r;h.pipelineMode=h.configPipeLineMode,h.replaceTag=i,h.customShader=n,l?(e._internalRenderTexture=t.RenderTexture.createFromPool(o.width,o.height,e._getRenderTextureFormat(),e.depthTextureFormat,!1,e.msaa?4:1,!1,e._needRenderGamma(e._getRenderTextureFormat())),e._internalRenderTexture.filterMode=t.FilterMode.Bilinear):e._internalRenderTexture=null,r._componentDriver.callPreRender();var c=e._renderShadowMap(r,h);return e._preRenderMainPass(h,r,l,o),e._renderMainPass(h,o,r,n,i,l),e._aftRenderMainPass(c),e.renderTarget=s,r.recaculateCullCamera(),r._componentDriver.callPostRender(),e._internalRenderTexture&&!e._internalRenderTexture._inPool&&t.RenderTexture.recoverToPool(e._internalRenderTexture),a}static getTexturePixel(e){let r=e.filterMode;e.filterMode=t.FilterMode.Point;let a,n=t.RenderTargetFormat.R8G8B8,i=e.width*e.height;switch(e.format){case t.TextureFormat.R32G32B32A32:case t.TextureFormat.R16G16B16A16:n=t.RenderTargetFormat.R32G32B32A32,a=new Float32Array(4*i);break;case t.TextureFormat.R32G32B32:case t.TextureFormat.R16G16B16:n=t.RenderTargetFormat.R32G32B32,a=new Float32Array(3*i);break;case t.TextureFormat.R5G6B5:case t.TextureFormat.R8G8B8:n=t.RenderTargetFormat.R8G8B8,a=new Uint8Array(3*i);break;default:n=t.RenderTargetFormat.R8G8B8A8,a=new Uint8Array(4*i)}let s=new t.RenderTexture(e.width,e.height,n,t.RenderTargetFormat.None,!1,0,!1);var o=et.create(e,s);return o.setContext(Ze._instance),o.run(),o.recover(),e.filterMode=r,s.getData(0,0,e.width,e.height,a),s.destroy(),a}static drawTextureCubePixelByScene(e,r,a,n,i){let s,o,l=t.RenderTargetFormat.R8G8B8,h=a*a;switch(n){case t.TextureFormat.R32G32B32A32:case t.TextureFormat.R16G16B16A16:l=t.RenderTargetFormat.R32G32B32A32,h*=4,o=4;break;case t.TextureFormat.R32G32B32:case t.TextureFormat.R16G16B16:l=t.RenderTargetFormat.R32G32B32,h*=3,o=4;break;case t.TextureFormat.R5G6B5:case t.TextureFormat.R8G8B8:l=t.RenderTargetFormat.R8G8B8,h*=3,o=1;break;case t.TextureFormat.R8G8B8A8:l=t.RenderTargetFormat.R8G8B8A8,s=new Uint8Array(4*h),h*=4,o=1;break;default:throw"Type is not supported"}let c=new t.RenderTexture(a,a,l,t.RenderTargetFormat.DEPTH_16,!1,0,!1,!1);e.fieldOfView=90,e.cullingMask=i;let d=[],_=[new t.Quaternion(0,1,0,0),new t.Quaternion(0,0,0,1),new t.Quaternion(0,.7071068,0,.7071068),new t.Quaternion(0,.7071068,0,-.7071068),new t.Quaternion(0,.7071068,-.7071068,0),new t.Quaternion(0,-.7071068,-.7071068,0)];for(var u=0;u<6;u++)e.transform.rotation=_[u],this.drawRenderTextureByScene(e,r,c),s=4==o?new Float32Array(h):new Uint8Array(h),d[u]=c.getData(0,0,a,a,s);return c.destroy(),d}static drawTextureCubeByScene(e,r,a,n,i,s=0){e.transform.position=r;let o=this.drawTextureCubePixelByScene(e,a,n,i,s);switch(i){case t.TextureFormat.R32G32B32A32:case t.TextureFormat.R16G16B16A16:t.TextureFormat.R32G32B32A32;break;case t.TextureFormat.R32G32B32:case t.TextureFormat.R16G16B16:t.TextureFormat.R32G32B32;break;case t.TextureFormat.R5G6B5:case t.TextureFormat.R8G8B8:t.TextureFormat.R8G8B8;break;case t.TextureFormat.R8G8B8A8:t.TextureFormat.R8G8B8A8;break;default:throw"Type is not supported"}let l=new de(n,i,!0,!1);return l.setPixelsData(o,!1,!1),l}static __init__(){Ft.depthPass=new n}get aspectRatio(){if(0===this._aspectRatio){var e=this.viewport;return e.width/e.height}return this._aspectRatio}set aspectRatio(e){if(e<0)throw new Error("Camera: the aspect ratio has to be a positive real number.");this._aspectRatio=e,this._calculateProjectionMatrix()}get viewport(){return this._offScreenRenderTexture?this._calculationViewport(this._normalizedViewport,this._offScreenRenderTexture.width,this._offScreenRenderTexture.height):this._calculationViewport(this._normalizedViewport,this.clientWidth,this.clientHeight),this._viewport}set viewport(e){var t,r;this._offScreenRenderTexture?(t=this._offScreenRenderTexture.width,r=this._offScreenRenderTexture.height):(t=this.clientWidth,r=this.clientHeight),this._normalizedViewport.x=e.x/t,this._normalizedViewport.y=e.y/r,this._normalizedViewport.width=e.width/t,this._normalizedViewport.height=e.height/r,this._calculationViewport(this._normalizedViewport,t,r),this._calculateProjectionMatrix()}get clientWidth(){return t.ILaya.stage.needUpdateCanvasSize(),t.Config3D.customResolution?t.Config3D.pixelRatio*t.Config3D._resoluWidth|0:Ze.clientWidth*t.Config3D.pixelRatio|0}get clientHeight(){return t.ILaya.stage.needUpdateCanvasSize(),t.Config3D.customResolution?t.Config3D.pixelRatio*t.Config3D._resoluHeight|0:Ze.clientHeight*t.Config3D.pixelRatio|0}set msaa(e){t.LayaGL.renderEngine.getCapable(t.RenderCapable.MSAA)?this._msaa=e:this._msaa=!1}get msaa(){return this._msaa}set fxaa(e){this._fxaa=e}get fxaa(){return this._fxaa}get normalizedViewport(){return this._normalizedViewport}set normalizedViewport(e){var t,r;this._offScreenRenderTexture?(t=this._offScreenRenderTexture.width,r=this._offScreenRenderTexture.height):(t=this.clientWidth,r=this.clientHeight),this._normalizedViewport!==e&&e.cloneTo(this._normalizedViewport),this._calculationViewport(e,t,r),this._calculateProjectionMatrix()}get viewMatrix(){if(this._updateViewMatrix){var e=this.transform.getWorldLossyScale(),t=e.x,r=e.y,a=e.z,n=this._viewMatrix.elements;this.transform.worldMatrix.cloneTo(this._viewMatrix),n[0]/=t,n[1]/=t,n[2]/=t,n[4]/=r,n[5]/=r,n[6]/=r,n[8]/=a,n[9]/=a,n[10]/=a,this._viewMatrix.invert(this._viewMatrix),this._updateViewMatrix=!1}return this._viewMatrix}get projectionMatrix(){return this._projectionMatrix}set projectionMatrix(e){this._projectionMatrix=e,this._useUserProjectionMatrix=!0}get projectionViewMatrix(){return t.Matrix4x4.multiply(this.projectionMatrix,this.viewMatrix,this._projectionViewMatrix),this._projectionViewMatrix}get boundFrustum(){return this._boundFrustum.matrix=this.projectionViewMatrix,this._boundFrustum}get renderTarget(){return this._offScreenRenderTexture}set renderTarget(e){var t=this._offScreenRenderTexture;t!==e&&(t&&(t._isCameraTarget=!1),e&&(e._isCameraTarget=!0),this._offScreenRenderTexture=e,this._calculateProjectionMatrix())}get postProcess(){return this._postProcess}set postProcess(e){this._postProcess=e}get enableHDR(){return this._enableHDR}set enableHDR(e){!e||t.LayaGL.renderEngine.getCapable(t.RenderCapable.RenderTextureFormat_R16G16B16A16)?this._enableHDR=e:console.warn("Camera:can't enable HDR in this device.")}get enableBuiltInRenderTexture(){return this._needBuiltInRenderTexture}set enableBuiltInRenderTexture(e){this._needBuiltInRenderTexture=e}get depthTextureMode(){return this._depthTextureMode}set depthTextureMode(e){this._depthTextureMode=e}set opaquePass(e){e!=this._opaquePass&&(e||(this._shaderValues.setTexture(Qe.OPAQUETEXTURE,null),this._opaqueTexture&&t.RenderTexture.recoverToPool(this._opaqueTexture)),this._opaquePass=e)}get opaquePass(){return this._opaquePass}get depthTextureFormat(){return this._depthTextureFormat}set depthTextureFormat(e){this._depthTextureFormat=e}set enableBlitDepth(e){e!=this._canBlitDepth&&(this._canBlitDepth=e,this._cacheDepth=e,e?this._internalRenderTexture&&(this._internalRenderTexture.generateDepthTexture=!0):(this._internalRenderTexture&&(this._internalRenderTexture.generateDepthTexture=!1),this._cacheDepthTexture&&this._cacheDepthTexture._inPool&&t.RenderTexture.recoverToPool(this._cacheDepthTexture)))}get enableBlitDepth(){return this._canBlitDepth}get canblitDepth(){return this._canBlitDepth&&this._internalRenderTexture&&null!=this._internalRenderTexture.depthStencilFormat}constructor(r=0,a=.3,n=1e3){super(a,n),this._updateViewMatrix=!0,this._postProcess=null,this._enableHDR=!1,this._viewportParams=new t.Vector4,this._projectionParams=new t.Vector4,this._needBuiltInRenderTexture=!1,this._msaa=!1,this._offScreenRenderTexture=null,this._internalRenderTexture=null,this._canBlitDepth=!1,this._internalCommandBuffer=new mt,this._depthTextureFormat=t.RenderTargetFormat.DEPTH_16,this._cameraEventCommandBuffer={},this._shadowCasterCommanBuffer=[],this._clusterPlaneCacheFlag=new t.Vector2(-1,-1),this._screenOffsetScale=new t.Vector4,this.enableRender=!0,this.clearFlag=e.CameraClearFlags.SolidColor,this._viewMatrix=new t.Matrix4x4,this._projectionMatrix=new t.Matrix4x4,this._projectionViewMatrix=new t.Matrix4x4,this._viewport=new se(0,0,0,0),this._normalizedViewport=new se(0,0,1,1),this._rayViewport=new se(0,0,0,0),this._aspectRatio=r,this._boundFrustum=new ie(new t.Matrix4x4),this._depthTextureMode=0,this._calculateProjectionMatrix(),t.ILaya.stage.on(t.Event.RESIZE,this,this._onScreenSizeChanged),this.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged)}_calculationViewport(e,t,r){var a=e.x*t,n=e.y*r,i=a+Math.max(e.width*t,0),s=n+Math.max(e.height*r,0),o=Math.ceil(a),l=Math.ceil(n),h=Math.floor(i),c=Math.floor(s),d=o-a>=.5?Math.floor(a):o,_=l-n>=.5?Math.floor(n):l,u=i-h>=.5?Math.ceil(i):h,m=s-c>=.5?Math.ceil(s):c;this._viewport.x=d,this._viewport.y=_,this._viewport.width=u-d,this._viewport.height=m-_}_calculateProjectionMatrix(){if(!this._useUserProjectionMatrix)if(this._orthographic){var e=.5*this.orthographicVerticalSize,r=e*this.aspectRatio;t.Matrix4x4.createOrthoOffCenter(-r,r,-e,e,this.nearPlane,this.farPlane,this._projectionMatrix)}else t.Matrix4x4.createPerspective(3.1416*this.fieldOfView/180,this.aspectRatio,this.nearPlane,this.farPlane,this._projectionMatrix)}_isLayerVisible(e){return 0!=(Math.pow(2,e)&this.cullingMask)}_onTransformChanged(e){(e&=c.TRANSFORM_WORLDMATRIX)&&(this._updateViewMatrix=!0)}_parse(e,t){super._parse(e,t);var r=e.clearFlag;void 0!==r&&(this.clearFlag=r);var a=e.viewport;this.normalizedViewport=new se(a[0],a[1],a[2],a[3]);var n=e.enableHDR;void 0!==n&&(this.enableHDR=n)}clone(){let e=super.clone();return e.clearFlag=this.clearFlag,e.viewport=this.viewport,this.normalizedViewport.cloneTo(e.normalizedViewport),e.enableHDR=this.enableHDR,e.farPlane=this.farPlane,e.nearPlane=this.nearPlane,e.fieldOfView=this.fieldOfView,e.orthographic=this.orthographic,e._cameraEventCommandBuffer=this._cameraEventCommandBuffer,e}_getCanvasWidth(){return this._offScreenRenderTexture?this._offScreenRenderTexture.width:this.clientWidth}_getCanvasHeight(){return this._offScreenRenderTexture?this._offScreenRenderTexture.height:this.clientHeight}_getRenderTexture(){return this._internalRenderTexture||this._offScreenRenderTexture}_needRenderGamma(e){switch(e){case t.RenderTargetFormat.R8G8B8:case t.RenderTargetFormat.R8G8B8A8:return!0;default:return!1}}_needInternalRenderTexture(){return!!(this._postProcess&&this._postProcess.enable||this._enableHDR||this._needBuiltInRenderTexture)}_getRenderTextureFormat(){return this._enableHDR?t.RenderTargetFormat.R16G16B16A16:t.RenderTargetFormat.R8G8B8A8}_updateCameraRenderData(e){this._prepareCameraToRender(),this._applyViewProject(e,this.viewMatrix,this._projectionMatrix)}_prepareCameraToRender(){super._prepareCameraToRender();var e=this.viewport;this._viewportParams.setValue(e.x,e.y,e.width,e.height),this._projectionParams.setValue(this._nearPlane,this._farPlane,Ze._instance.invertY?-1:1,1/this.farPlane),this._shaderValues.setVector(Qe.VIEWPORT,this._viewportParams),this._shaderValues.setVector(Qe.PROJECTION_PARAMS,this._projectionParams)}_applyViewProject(e,r,a){var n;e.invertY?(t.Matrix4x4.multiply(Qe._invertYScaleMatrix,a,Qe._invertYProjectionMatrix),t.Matrix4x4.multiply(Qe._invertYProjectionMatrix,r,Qe._invertYProjectionViewMatrix),a=Qe._invertYProjectionMatrix,n=Qe._invertYProjectionViewMatrix):(t.Matrix4x4.multiply(a,r,this._projectionViewMatrix),n=this._projectionViewMatrix),e.viewMatrix=r,e.projectionMatrix=a,e.projectionViewMatrix=n,this._shaderValues.setMatrix4x4(Qe.VIEWMATRIX,r),this._shaderValues.setMatrix4x4(Qe.PROJECTMATRIX,a),this._shaderValues.setMatrix4x4(Qe.VIEWPROJECTMATRIX,n)}_updateClusterPlaneXY(){var e=this.fieldOfView,r=this.aspectRatio;if(this._clusterPlaneCacheFlag.x!==e||this._clusterPlaneCacheFlag.y!==r){var a=t.Config3D.lightClusterCount,n=a.x,i=a.y,s=n+1,o=i+1,l=this._clusterXPlanes,h=this._clusterYPlanes;if(!l){l=this._clusterXPlanes=new Array(s),h=this._clusterYPlanes=new Array(o);for(var c=0;c<s;c++)l[c]=new t.Vector3;for(c=0;c<o;c++)h[c]=new t.Vector3}var d=Math.tan(this.fieldOfView/2*Math.PI/180),_=this.aspectRatio*d,u=2*d/i,m=2*_/n;for(c=0;c<s;c++){var f=m*c-_,g=1/Math.sqrt(1+f*f);l[c].setValue(g,0,-f*g)}for(c=0;c<o;c++){f=d-u*c;var p=-1/Math.sqrt(1+f*f);h[c].setValue(0,p,-f*p)}this._clusterPlaneCacheFlag.x=e,this._clusterPlaneCacheFlag.y=r}}_applyCommandBuffer(e,r){var a=this._cameraEventCommandBuffer[e];a&&0!=a.length&&(a.forEach((function(e){e._context=r,e._apply()})),t.RenderTexture.currentActive&&t.RenderTexture.currentActive._end(),this._internalRenderTexture||this._offScreenRenderTexture?this._getRenderTexture()._start():t.LayaGL.textureContext.bindoutScreenTarget(),t.LayaGL.renderEngine.viewport(0,0,r.viewport.width,r.viewport.height))}_applyCasterPassCommandBuffer(e){this._shadowCasterCommanBuffer&&0!=this._shadowCasterCommanBuffer.length&&this._shadowCasterCommanBuffer.forEach((function(t){t._context=e,t._apply()}))}_addCasterShadowCommandBuffer(e){this._shadowCasterCommanBuffer.indexOf(e)<0&&this._shadowCasterCommanBuffer.push(e)}_removeCasterShadowCommandBuffer(e){var t=this._shadowCasterCommanBuffer.indexOf(e);-1!=t&&this._shadowCasterCommanBuffer.splice(t,1)}_renderShadowMap(t,r){if(Pt._updateMark%t._ShadowMapupdateFrequency!=0)return!1;var a,n=t._mainDirectionLight,i=n&&n.shadowMode!==e.ShadowMode.None&&qe.supportShadow();i?(t._shaderValues.removeDefine(Tt.SHADERDEFINE_SHADOW_SPOT),t._shaderValues.addDefine(Tt.SHADERDEFINE_SHADOW),(a=o.Scene3D._shadowCasterPass).update(this,n,e.ShadowLightType.DirectionLight),a.render(r,t,e.ShadowLightType.DirectionLight,this)):t._shaderValues.removeDefine(Tt.SHADERDEFINE_SHADOW);var s=t._mainSpotLight,l=s&&s.shadowMode!==e.ShadowMode.None&&qe.supportShadow();return l?(t._shaderValues.removeDefine(Tt.SHADERDEFINE_SHADOW),t._shaderValues.addDefine(Tt.SHADERDEFINE_SHADOW_SPOT),(a=o.Scene3D._shadowCasterPass).update(this,s,e.ShadowLightType.SpotLight),a.render(r,t,e.ShadowLightType.SpotLight,this)):t._shaderValues.removeDefine(Tt.SHADERDEFINE_SHADOW_SPOT),i&&t._shaderValues.addDefine(Tt.SHADERDEFINE_SHADOW),l&&t._shaderValues.addDefine(Tt.SHADERDEFINE_SHADOW_SPOT),i||l}_preRenderMainPass(r,a,n,i){if(r.camera=this,r.cameraShaderValue=this._shaderValues,Ft._updateMark++,n&&!this._offScreenRenderTexture&&(this.clearFlag==e.CameraClearFlags.DepthOnly||this.clearFlag==e.CameraClearFlags.Nothing))if(t.RenderTexture.bindCanvasRender)(s=et.create(t.RenderTexture.bindCanvasRender,this._internalRenderTexture)).setContext(r),s.run(),s.recover();else if(this._enableHDR){var s,o=t.RenderTexture.createFromPool(i.width,i.height,t.RenderTargetFormat.R8G8B8,t.RenderTargetFormat.DEPTH_16,!1,1);o.filterMode=t.FilterMode.Bilinear,this._renderEngine.copySubFrameBuffertoTex(o,0,0,0,i.x,Ze.clientHeight-(i.y+i.height),i.width,i.height),(s=et.create(o,this._internalRenderTexture)).setContext(r),s.run(),s.recover(),t.RenderTexture.recoverToPool(o)}else this._renderEngine.copySubFrameBuffertoTex(this._internalRenderTexture,0,0,0,i.x,Ze.clientHeight-(i.y+i.height),i.width,i.height)}_renderMainPass(r,a,n,i,s,l){var h=this._getRenderTexture();if(h&&h._isCameraTarget?r.invertY=!0:r.invertY=!1,r.viewport=a,r.destTarget=h,this._prepareCameraToRender(),t.Config3D._multiLighting&&ee.instance.update(this,n),r.customShader=i,r.replaceTag=s,n._preCulling(r,this),this._applyViewProject(r,this.viewMatrix,this._projectionMatrix),this._cameraUniformData&&this._cameraUniformUBO&&this._cameraUniformUBO.setDataByUniformBufferData(this._cameraUniformData),this._renderDepthMode(r),h&&h._start(),n._clear(r),this._applyCommandBuffer(e.CameraEventFlags.BeforeForwardOpaque,r),this.recoverRenderContext3D(r,h),n._renderScene(r,o.Scene3D.SCENERENDERFLAG_RENDERQPAQUE),this._applyCommandBuffer(e.CameraEventFlags.BeforeSkyBox,r),this._opaquePass&&this._createOpaqueTexture(h,r),this.recoverRenderContext3D(r,h),n._renderScene(r,o.Scene3D.SCENERENDERFLAG_SKYBOX),this._applyCommandBuffer(e.CameraEventFlags.BeforeTransparent,r),this.recoverRenderContext3D(r,h),n._renderScene(r,o.Scene3D.SCENERENDERFLAG_RENDERTRANSPARENT),n._componentDriver.callPostRender(),this._applyCommandBuffer(e.CameraEventFlags.BeforeImageEffect,r),h&&h._end(),l&&Ft.enablePostProcess)if(this._postProcess&&this._postProcess.enable)this._postProcess.commandContext=r,this._postProcess._render(this),this._postProcess._applyPostProcessCommandBuffers();else if(this._enableHDR||this._needBuiltInRenderTexture){var c=this._getCanvasWidth(),d=this._getCanvasHeight();this._offScreenRenderTexture&&(this._screenOffsetScale.setValue(a.x/c,(d-a.y-a.height)/d,a.width/c,a.height/d),this._internalCommandBuffer._camera=this,this._internalCommandBuffer._context=r,this._internalCommandBuffer.blitScreenQuad(this._internalRenderTexture,this._offScreenRenderTexture,this._screenOffsetScale,null,null,0),this._internalCommandBuffer._apply(),this._internalCommandBuffer.clear())}this._offScreenRenderTexture?t.RenderTexture.bindCanvasRender=null:t.RenderTexture.bindCanvasRender=this._internalRenderTexture,this._applyCommandBuffer(e.CameraEventFlags.AfterEveryThing,r)}recoverRenderContext3D(e,t){const r=Ft._context3DViewPortCatch,a=Ft._contextScissorPortCatch;e.changeViewport(r.x,r.y,r.width,r.height),e.changeScissor(a.x,a.y,a.z,a.w),e.destTarget=t}_renderDepthMode(t){var r=this._depthTextureMode;this._postProcess&&this._postProcess.enable&&(r|=this._postProcess.cameraDepthTextureMode),0!=(r&e.DepthTextureMode.Depth)&&(this.canblitDepth&&this._internalRenderTexture.depthStencilTexture?(this.depthTexture=this._cacheDepthTexture.depthStencilTexture,Ft.depthPass._depthTexture=this.depthTexture,Ft.depthPass._setupDepthModeShaderValue(e.DepthTextureMode.Depth,this)):(Ft.depthPass.update(this,e.DepthTextureMode.Depth,this._depthTextureFormat),Ft.depthPass.render(t,e.DepthTextureMode.Depth))),0!=(r&e.DepthTextureMode.DepthNormals)&&(Ft.depthPass.update(this,e.DepthTextureMode.DepthNormals,this._depthTextureFormat),Ft.depthPass.render(t,e.DepthTextureMode.DepthNormals))}get depthTexture(){return this._depthTexture}set depthTexture(e){this._depthTexture=e}get depthNormalTexture(){return this._depthNormalsTexture}set depthNormalTexture(e){this._depthNormalsTexture=e}_aftRenderMainPass(e){this._cacheDepth&&this._internalRenderTexture&&(this._cacheDepthTexture&&this._cacheDepthTexture._inPool&&t.RenderTexture.recoverToPool(this._cacheDepthTexture),this._cacheDepthTexture=this._internalRenderTexture),Ft.depthPass.cleanUp()}_createOpaqueTexture(e,r){if(!this._opaqueTexture){let e=this._getRenderTexture();this._opaqueTexture=t.RenderTexture.createFromPool(e.width,e.height,e.colorFormat,t.RenderTargetFormat.None,!1,1,!1,!0),this._shaderValues.setTexture(Qe.OPAQUETEXTURE,this._opaqueTexture)}var a=et.create(e,this._opaqueTexture);a.setContext(r),a.run(),a.recover()}render(e=null,r=null){if(!this.activeInHierarchy)return;var a=this.viewport,n=this._needInternalRenderTexture(),i=Ze._instance,s=i.scene=this._scene;i.pipelineMode=i.configPipeLineMode,i.replaceTag=r,i.customShader=e;let o=this._getRenderTextureFormat();n?this._msaa?(this._internalRenderTexture=t.RenderTexture.createFromPool(a.width,a.height,o,this._depthTextureFormat,!1,4,this.canblitDepth,this._needRenderGamma(o)),this._internalRenderTexture.filterMode=t.FilterMode.Bilinear):(this._internalRenderTexture=t.RenderTexture.createFromPool(a.width,a.height,o,this._depthTextureFormat,!1,1,this.canblitDepth,this._needRenderGamma(o)),this._internalRenderTexture.filterMode=t.FilterMode.Bilinear):this._internalRenderTexture=null,s._componentDriver.callPreRender();var l=this._renderShadowMap(s,i);this._preRenderMainPass(i,s,n,a),this._renderMainPass(i,a,s,e,r,n),this._aftRenderMainPass(l),s._componentDriver.callPostRender()}viewportPointToRay(e,r){this._rayViewport.x=this.viewport.x,this._rayViewport.y=this.viewport.y,this._rayViewport.width=t.ILaya.stage._width,this._rayViewport.height=t.ILaya.stage._height,oe.calculateCursorRay(e,this._rayViewport,this._projectionMatrix,this.viewMatrix,null,r)}normalizedViewportPointToRay(e,r){var a=Ft._tempVector20,n=this.normalizedViewport;e.x=e.x*t.Config3D.pixelRatio,e.y=e.y*t.Config3D.pixelRatio,a.x=e.x*n.width,a.y=e.y*n.height,oe.calculateCursorRay(a,this.viewport,this._projectionMatrix,this.viewMatrix,null,r)}worldToViewportPoint(e,r){t.Matrix4x4.multiply(this._projectionMatrix,this._viewMatrix,this._projectionViewMatrix),this.viewport.project(e,this._projectionViewMatrix,r);var a=t.Config3D.pixelRatio;let n=(r.x-this.viewport.x)/a,i=(r.y-this.viewport.y)/a;r.x=n+this.viewport.x,r.y=i+this.viewport.y,r.x=r.x/t.ILaya.stage.clientScaleX|0,r.y=r.y/t.ILaya.stage.clientScaleY|0}worldToNormalizedViewportPoint(e,r){this.worldToViewportPoint(e,r),r.x=r.x/t.ILaya.stage.width,r.y=r.y/t.ILaya.stage.height}convertScreenCoordToOrthographicCoord(e,r){if(this._orthographic){var a=this.clientWidth,n=this.clientHeight,i=this.orthographicVerticalSize*this.aspectRatio/a,s=this.orthographicVerticalSize/n;return r.x=(-a/2+e.x*t.ILaya.stage.clientScaleX)*i,r.y=(n/2-e.y*t.ILaya.stage.clientScaleY)*s,r.z=(this.nearPlane-this.farPlane)*(e.z+1)/2-this.nearPlane,t.Vector3.transformCoordinate(r,this.transform.worldMatrix,r),!0}return!1}destroy(e=!0){this._needInternalRenderTexture()&&!this._internalRenderTexture._inPool&&t.RenderTexture.recoverToPool(this._internalRenderTexture),this._offScreenRenderTexture=null,this.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onTransformChanged),t.ILaya.stage.off(t.Event.RESIZE,this,this._onScreenSizeChanged),this._cameraEventCommandBuffer={},this._shaderValues.destroy(),Ze._instance.camera==this&&(Ze._instance.cameraShaderValue=null,Ze._instance.camera=null),super.destroy(e)}addCommandBuffer(e,t){var r=this._cameraEventCommandBuffer[e];r||(r=this._cameraEventCommandBuffer[e]=[]),r.indexOf(t)<0&&r.push(t),t._camera=this,t.casterShadow&&this._addCasterShadowCommandBuffer(t)}removeCommandBuffer(e,t){var r=this._cameraEventCommandBuffer[e];if(!r)throw"Camera:unknown event.";var a=r.indexOf(t);-1!=a&&r.splice(a,1),t.casterShadow&&this._removeCasterShadowCommandBuffer(t)}removeCommandBuffers(e){this._cameraEventCommandBuffer[e]&&(this._cameraEventCommandBuffer[e].length=0)}_create(){return new Ft}}Ft._tempVector20=new t.Vector2,Ft._context3DViewPortCatch=new se(0,0,0,0),Ft._contextScissorPortCatch=new t.Vector4(0,0,0,0),Ft.__updateMark=0,Ft.enablePostProcess=!0;class Ut{}Ut.Blend=0,Ut.Fixed=1;class Gt{get mode(){return this._mode}set mode(e){this._mode=e}get colorRGBKeysCount(){return this._colorRGBKeysCount}get colorAlphaKeysCount(){return this._colorAlphaKeysCount}get maxColorRGBKeysCount(){return this._maxColorRGBKeysCount}get maxColorAlphaKeysCount(){return this._maxColorAlphaKeysCount}constructor(e,r){this._mode=0,this._maxColorRGBKeysCount=0,this._maxColorAlphaKeysCount=0,this._colorRGBKeysCount=0,this._colorAlphaKeysCount=0,this._keyRanges=new t.Vector4(1,0,1,0),this._alphaElements=null,this._rgbElements=null,this._maxColorRGBKeysCount=e,this._maxColorAlphaKeysCount=r,this._rgbElements=new Float32Array(4*e),this._alphaElements=new Float32Array(2*r)}addColorRGB(e,t){if(this._colorRGBKeysCount<this._maxColorRGBKeysCount){var r=4*this._colorRGBKeysCount;this._rgbElements[r]=e,this._rgbElements[r+1]=t.r,this._rgbElements[r+2]=t.g,this._rgbElements[r+3]=t.b,this._colorRGBKeysCount++}else console.warn("Gradient:warning:data count must lessEqual than "+this._maxColorRGBKeysCount)}addColorAlpha(e,t){if(this._colorAlphaKeysCount<this._maxColorAlphaKeysCount){var r=2*this._colorAlphaKeysCount;this._alphaElements[r]=e,this._alphaElements[r+1]=t,this._colorAlphaKeysCount++}else console.warn("Gradient:warning:data count must lessEqual than "+this._maxColorAlphaKeysCount)}updateColorRGB(e,t,r){if(e<this._colorRGBKeysCount){var a=4*e;this._rgbElements[a]=t,this._rgbElements[a+1]=r.r,this._rgbElements[a+2]=r.g,this._rgbElements[a+3]=r.b}else console.warn("Gradient:warning:index must lessEqual than colorRGBKeysCount:"+this._colorRGBKeysCount)}updateColorAlpha(e,t,r){if(e<this._colorAlphaKeysCount){var a=2*e;this._alphaElements[a]=t,this._alphaElements[a+1]=r}else console.warn("Gradient:warning:index must lessEqual than colorAlphaKeysCount:"+this._colorAlphaKeysCount)}evaluateColorRGB(e,t,r=0,a=!1){e=Math.min(Math.max(e,0),1);var n=this._rgbElements,i=r;if(a)for(var s=i;s>=0;s--){var o=4*s;if(e===(u=n[o]))return t.r=n[o+1],t.g=n[o+2],t.b=n[o+3],i;switch(this._mode){case Ut.Blend:if(e>u){if(e>(_=n[o+4]))throw"Gradient:wrong startSearchIndex.";var l=_-u,h=_-e,c=e-u;return t.r=(h*n[o+1]+c*n[o+5])/l,t.g=(h*n[o+2]+c*n[o+6])/l,t.b=(h*n[o+3]+c*n[o+7])/l,i}i--;continue;case Ut.Fixed:if(e>u){if(e>n[o+4])throw"Gradient:wrong startSearchIndex.";return t.r=n[o+5],t.g=n[o+6],t.b=n[o+7],i}i--;continue;default:throw"Gradient:unknown mode."}}else{s=0;for(var d=this._rgbElements.length;s<d;s++){var _;if(e===(_=n[o=4*s]))return t.r=n[o+1],t.g=n[o+2],t.b=n[o+3],i;switch(this._mode){case Ut.Blend:if(e<_){var u;if(e<(u=n[o-4]))throw"Gradient:wrong startSearchIndex.";l=_-u,h=_-e,c=e-u;return t.r=(h*n[o-3]+c*n[o+1])/l,t.g=(h*n[o-2]+c*n[o+2])/l,t.b=(h*n[o-1]+c*n[o+3])/l,i}i++;continue;case Ut.Fixed:if(e<_){if(e<n[o-4])throw"Gradient:wrong startSearchIndex.";return t.r=n[o+1],t.g=n[o+2],t.b=n[o+3],i}i++;continue;default:throw"Gradient:unknown mode."}}}return i}evaluateColorAlpha(e,t,r=0,a=!1){e=Math.min(Math.max(e,0),1);var n=this._alphaElements,i=r;if(a)for(var s=i;s>=0;s--){if(e===(u=n[d=2*s]))return t.a=n[d+1],i;switch(this._mode){case Ut.Blend:if(e>u){if(e>(_=n[d+2]))throw"Gradient:wrong startSearchIndex.";var o=_-u,l=_-e,h=e-u;return t.a=(l*n[d+1]+h*n[d+3])/o,i}i--;continue;case Ut.Fixed:if(e>u){if(e>n[d+2])throw"Gradient:wrong startSearchIndex.";return t.a=n[d+3],i}i--;continue;default:throw"Gradient:unknown mode."}}else{s=i;for(var c=this._alphaElements.length;s<c;s++){var d,_;if(e===(_=n[d=2*s]))return t.a=n[d+1],i;switch(this._mode){case Ut.Blend:if(e<_){var u;if(e<(u=n[d-2]))throw"Gradient:wrong startSearchIndex.";o=_-u,l=_-e,h=e-u;return t.a=(l*n[d-1]+h*n[d+1])/o,i}i++;continue;case Ut.Fixed:if(e<_){if(e<n[d-2])throw"Gradient:wrong startSearchIndex.";return t.a=n[d+1],i}i++;continue;default:throw"Gradient:unknown mode."}}}return i}cloneTo(e){var t,r,a=e;a._colorAlphaKeysCount=this._colorAlphaKeysCount;let n=a._alphaElements=new Float32Array(this._alphaElements.length);for(t=0,r=this._alphaElements.length;t<r;t++)n[t]=this._alphaElements[t];a._colorRGBKeysCount=this._colorRGBKeysCount;var i=a._rgbElements=new Float32Array(this._rgbElements.length);for(t=0,r=this._rgbElements.length;t<r;t++)i[t]=this._rgbElements[t]}clone(){var e=new Gt(this._maxColorRGBKeysCount,this._maxColorAlphaKeysCount);return this.cloneTo(e),e}}class Ht extends Ke{get shadowCascadesMode(){return this._shadowCascadesMode}set shadowCascadesMode(e){this._shadowCascadesMode=e}get shadowTwoCascadeSplits(){return this._shadowTwoCascadeSplits}set shadowTwoCascadeSplits(e){this._shadowTwoCascadeSplits=e}get shadowFourCascadeSplits(){return this._shadowFourCascadeSplits}set shadowFourCascadeSplits(e){if(e.x>e.y||e.y>e.z||e.z>1)throw"DiretionLight:Invalid value.";e.cloneTo(this._shadowFourCascadeSplits)}constructor(){super(),this._direction=new t.Vector3,this._shadowCascadesMode=e.ShadowCascadesMode.NoCascades,this._shadowTwoCascadeSplits=1/3,this._shadowFourCascadeSplits=new t.Vector3(1/15,.2,7/15),this._lightType=e.LightType.Directional}_addToLightQueue(){this.owner.scene._directionLights.add(this)}_removeFromLightQueue(){this.owner.scene._directionLights.remove(this)}_create(){return new Ht}}class zt extends J{get color(){return this._light.color}set color(e){this._light.color=e}get mode(){return this._light.lightmapBakedType}set mode(e){this._light.lightmapBakedType=e}get intensity(){return this._light.intensity}set intensity(e){this._light.intensity=e}get shadowMode(){return this._light.shadowMode}set shadowMode(e){this._light.shadowMode=e}get shadowDistance(){return this._light.shadowDistance}set shadowDistance(e){this._light.shadowDistance=e}get shadowResolution(){return this._light.shadowResolution}set shadowResolution(e){this._light.shadowResolution=e}get shadowDepthBias(){return this._light.shadowDepthBias}set shadowDepthBias(e){this._light.shadowDepthBias=e}get shadowNormalBias(){return this._light.shadowNormalBias}set shadowNormalBias(e){this._light.shadowNormalBias=e}get shadowStrength(){return this._light.shadowStrength}set shadowStrength(e){this._light.shadowStrength=e}get shadowNearPlane(){return this._light.shadowNearPlane}set shadowNearPlane(e){this._light.shadowNearPlane=e}get lightmapBakedType(){return this._light.lightmapBakedType}set lightmapBakedType(e){this._light.lightmapBakedType=e}get lightWorldMatrix(){return this._light.lightWorldMatrix}constructor(){super()}_parse(e,t){super._parse(e,t);var r=e.color;this.color.r=r[0],this.color.g=r[1],this.color.b=r[2],this.intensity=e.intensity,this.lightmapBakedType=e.lightmapBakedType}_cloneTo(e,t,r){super._cloneTo(e,t,r);var a=e;a.color=this.color.clone(),a.intensity=this.intensity,a.lightmapBakedType=this.lightmapBakedType}_addToLightQueue(){}_removeFromLightQueue(){}_create(){return new J}}class kt extends zt{get shadowCascadesMode(){return this._light._shadowCascadesMode}set shadowCascadesMode(e){this._light._shadowCascadesMode=e}get shadowTwoCascadeSplits(){return this._light._shadowTwoCascadeSplits}set shadowTwoCascadeSplits(e){this._light._shadowTwoCascadeSplits=e}get shadowFourCascadeSplits(){return this._light._shadowFourCascadeSplits}set shadowFourCascadeSplits(e){if(e.x>e.y||e.y>e.z||e.z>1)throw"DiretionLight:Invalid value.";e.cloneTo(this._light._shadowFourCascadeSplits)}constructor(){super(),this._light=this.addComponent(Ht)}_create(){return new J}}class Wt extends Ke{get range(){return this._range}set range(e){this._range=e}constructor(){super(),this._range=6,this._lightType=e.LightType.Point}_addToLightQueue(){this.owner.scene._pointLights.add(this)}_removeFromLightQueue(){this.owner.scene._pointLights.remove(this)}_parse(e,t){super._parse(e,t),this.range=e.range}_cloneTo(t){super._cloneTo(t);var r=t;r.range=this.range,r._lightType=e.LightType.Point}_create(){return new Wt}}class Yt extends zt{get range(){return this._light.range}set range(e){this._light.range=e}constructor(){super(),this._light=this.addComponent(Wt),this._light.range=6}_parse(e,t){super._parse(e,t),this.range=e.range}_cloneTo(e,t,r){super._cloneTo(e,t,r)}_create(){return new J}}class Xt extends Ke{get spotAngle(){return this._spotAngle}set spotAngle(e){this._spotAngle=Math.max(Math.min(e,179),0)}get range(){return this._range}set range(e){this._range=e}constructor(){super(),this._spotAngle=30,this._range=10,this._direction=new t.Vector3,this._lightType=e.LightType.Spot}_addToLightQueue(){this.owner.scene._spotLights.add(this)}_removeFromLightQueue(){this.owner.scene._spotLights.remove(this)}_parse(e,t){super._parse(e,t),this.range=e.range,this.spotAngle=e.spotAngle}_cloneTo(e){super._cloneTo(e);var t=e;t.range=this.range,t.spotAngle=this.spotAngle}_create(){return new Xt}}class jt extends zt{get spotAngle(){return this._light.spotAngle}set spotAngle(e){this._light.spotAngle=Math.max(Math.min(e,179),0)}get range(){return this._light.range}set range(e){this._light.range=e}constructor(){super(),this._light=this.addComponent(Xt)}_parse(e,t){super._parse(e,t),this.range=e.range,this.spotAngle=e.spotAngle}_cloneTo(e,t,r){super._cloneTo(e,t,r)}_create(){return new J}}class Qt extends at{static __initDefine__(){Qt.SHADERDEFINE_ALBEDOTEXTURE=t.Shader3D.getDefineByName("ALBEDOTEXTURE"),Qt.SHADERDEFINE_ENABLEVERTEXCOLOR=t.Shader3D.getDefineByName("ENABLEVERTEXCOLOR"),Qt.ALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_AlbedoTexture"),Qt.ALBEDOCOLOR=t.Shader3D.propertyNameToID("u_AlbedoColor"),Qt.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset")}get albedoColor(){return this.getColorByIndex(Qt.ALBEDOCOLOR)}set albedoColor(e){this.setColorByIndex(Qt.ALBEDOCOLOR,e.scale(this._albedoIntensity))}get albedoIntensity(){return this._albedoIntensity}set albedoIntensity(e){this._albedoIntensity=e}get albedoTexture(){return this.getTextureByIndex(Qt.ALBEDOTEXTURE)}set albedoTexture(e){e?this.addDefine(Qt.SHADERDEFINE_ALBEDOTEXTURE):this.removeDefine(Qt.SHADERDEFINE_ALBEDOTEXTURE),this.setTextureByIndex(Qt.ALBEDOTEXTURE,e)}get tilingOffset(){return this.getVector4ByIndex(Qt.TILINGOFFSET)}set tilingOffset(e){e?this.setVector4ByIndex(Qt.TILINGOFFSET,e):this.setVector4ByIndex(Qt.TILINGOFFSET,new t.Vector4(1,1,0,0))}get enableVertexColor(){return this.hasDefine(Qt.SHADERDEFINE_ENABLEVERTEXCOLOR)}set enableVertexColor(e){e?this.addDefine(Qt.SHADERDEFINE_ENABLEVERTEXCOLOR):this.removeDefine(Qt.SHADERDEFINE_ENABLEVERTEXCOLOR)}constructor(){super(),this.setShaderName("Unlit"),this.renderMode=Qt.RENDERMODE_OPAQUE,this.albedoIntensity=1}clone(){var e=new Qt;return this.cloneTo(e),e}set renderMode(e){switch(e){case Qt.RENDERMODE_OPAQUE:this.alphaTest=!1,this.renderQueue=at.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case Qt.RENDERMODE_CUTOUT:this.renderQueue=at.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case Qt.RENDERMODE_TRANSPARENT:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;default:throw new Error("UnlitMaterial : renderMode value error.")}}}Qt.RENDERMODE_OPAQUE=0,Qt.RENDERMODE_CUTOUT=1,Qt.RENDERMODE_TRANSPARENT=2,Qt.RENDERMODE_ADDTIVE=3;class Kt extends at{get color(){return this.getColorByIndex(Qt.ALBEDOCOLOR)}set color(e){this.setColorByIndex(Qt.ALBEDOCOLOR,e)}get texture(){return this.getTextureByIndex(Qt.ALBEDOTEXTURE)}set texture(e){e?this.addDefine(Qt.SHADERDEFINE_ALBEDOTEXTURE):this.removeDefine(Qt.SHADERDEFINE_ALBEDOTEXTURE),this.setTextureByIndex(Qt.ALBEDOTEXTURE,e)}get tilingOffset(){return this.getVector4ByIndex(Qt.TILINGOFFSET)}set tilingOffset(e){e?this.setVector4ByIndex(Qt.TILINGOFFSET,e):this.getVector4ByIndex(Qt.TILINGOFFSET).setValue(1,1,0,0)}constructor(){super(),this.setShaderName("Unlit"),this.setVector4ByIndex(Qt.TILINGOFFSET,new t.Vector4(1,1,0,0)),this.setColorByIndex(Qt.ALBEDOCOLOR,new t.Color(1,1,1,1)),this.renderMode=Kt.RENDERMODE_ADDTIVE}clone(){var e=new Kt;return this.cloneTo(e),e}set renderMode(e){switch(e){case Kt.RENDERMODE_ADDTIVE:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL,this.addDefine(at.SHADERDEFINE_ADDTIVEFOG);break;case Kt.RENDERMODE_ALPHABLENDED:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL,this.removeDefine(at.SHADERDEFINE_ADDTIVEFOG);break;default:throw new Error("MeshEffectMaterial : renderMode value error.")}}}Kt.RENDERMODE_ADDTIVE=0,Kt.RENDERMODE_ALPHABLENDED=1;class qt extends at{static __initDefine__(){qt.SHADERDEFINE_DETAIL_NUM1=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM1"),qt.SHADERDEFINE_DETAIL_NUM2=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM2"),qt.SHADERDEFINE_DETAIL_NUM3=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM3"),qt.SHADERDEFINE_DETAIL_NUM4=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM4"),qt.SHADERDEFINE_DETAIL_NUM5=t.Shader3D.getDefineByName("ExtendTerrain_DETAIL_NUM5"),qt.SPLATALPHATEXTURE=t.Shader3D.propertyNameToID("u_SplatAlphaTexture"),qt.DIFFUSETEXTURE1=t.Shader3D.propertyNameToID("u_DiffuseTexture1"),qt.DIFFUSETEXTURE2=t.Shader3D.propertyNameToID("u_DiffuseTexture2"),qt.DIFFUSETEXTURE3=t.Shader3D.propertyNameToID("u_DiffuseTexture3"),qt.DIFFUSETEXTURE4=t.Shader3D.propertyNameToID("u_DiffuseTexture4"),qt.DIFFUSETEXTURE5=t.Shader3D.propertyNameToID("u_DiffuseTexture5"),qt.DIFFUSESCALEOFFSET1=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset1"),qt.DIFFUSESCALEOFFSET2=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset2"),qt.DIFFUSESCALEOFFSET3=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset3"),qt.DIFFUSESCALEOFFSET4=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset4"),qt.DIFFUSESCALEOFFSET5=t.Shader3D.propertyNameToID("u_DiffuseScaleOffset5")}get splatAlphaTexture(){return this._shaderValues.getTexture(qt.SPLATALPHATEXTURE)}set splatAlphaTexture(e){this._shaderValues.setTexture(qt.SPLATALPHATEXTURE,e)}get diffuseTexture1(){return this._shaderValues.getTexture(qt.DIFFUSETEXTURE1)}set diffuseTexture1(e){this._shaderValues.setTexture(qt.DIFFUSETEXTURE1,e),this._setDetailNum(1)}get diffuseTexture2(){return this._shaderValues.getTexture(qt.DIFFUSETEXTURE2)}set diffuseTexture2(e){this._shaderValues.setTexture(qt.DIFFUSETEXTURE2,e),this._setDetailNum(2)}get diffuseTexture3(){return this._shaderValues.getTexture(qt.DIFFUSETEXTURE3)}set diffuseTexture3(e){this._shaderValues.setTexture(qt.DIFFUSETEXTURE3,e),this._setDetailNum(3)}get diffuseTexture4(){return this._shaderValues.getTexture(qt.DIFFUSETEXTURE4)}set diffuseTexture4(e){this._shaderValues.setTexture(qt.DIFFUSETEXTURE4,e),this._setDetailNum(4)}get diffuseTexture5(){return this._shaderValues.getTexture(qt.DIFFUSETEXTURE5)}set diffuseTexture5(e){this._shaderValues.setTexture(qt.DIFFUSETEXTURE5,e),this._setDetailNum(5)}set diffuseScaleOffset1(e){this._shaderValues.setVector(qt.DIFFUSESCALEOFFSET1,e)}set diffuseScaleOffset2(e){this._shaderValues.setVector(qt.DIFFUSESCALEOFFSET2,e)}set diffuseScaleOffset3(e){this._shaderValues.setVector(qt.DIFFUSESCALEOFFSET3,e)}set diffuseScaleOffset4(e){this._shaderValues.setVector(qt.DIFFUSESCALEOFFSET4,e)}set diffuseScaleOffset5(e){this._shaderValues.setVector(qt.DIFFUSESCALEOFFSET5,e)}set renderMode(e){switch(e){case qt.RENDERMODE_OPAQUE:this.renderQueue=at.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS;break;case qt.RENDERMODE_TRANSPARENT:this.renderQueue=at.RENDERQUEUE_OPAQUE,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LEQUAL;break;default:throw new Error("ExtendTerrainMaterial:renderMode value error.")}}constructor(){super(),this.setShaderName("ExtendTerrain"),this.renderMode=qt.RENDERMODE_OPAQUE}_setDetailNum(e){switch(e){case 1:this._shaderValues.addDefine(qt.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM5);break;case 2:this._shaderValues.addDefine(qt.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM5);break;case 3:this._shaderValues.addDefine(qt.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM5);break;case 4:this._shaderValues.addDefine(qt.SHADERDEFINE_DETAIL_NUM4),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM5);break;case 5:this._shaderValues.addDefine(qt.SHADERDEFINE_DETAIL_NUM5),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM1),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM2),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM3),this._shaderValues.removeDefine(qt.SHADERDEFINE_DETAIL_NUM4)}}clone(){var e=new qt;return this.cloneTo(e),e}}qt.RENDERMODE_OPAQUE=1,qt.RENDERMODE_TRANSPARENT=2,e.PBRRenderQuality=void 0,(ye=e.PBRRenderQuality||(e.PBRRenderQuality={}))[ye.High=0]="High",ye[ye.Low=1]="Low",e.PBRRenderMode=void 0,(Ie=e.PBRRenderMode||(e.PBRRenderMode={}))[Ie.Opaque=0]="Opaque",Ie[Ie.Cutout=1]="Cutout",Ie[Ie.Fade=2]="Fade",Ie[Ie.Transparent=3]="Transparent",e.PBRMaterialType=void 0,(Me=e.PBRMaterialType||(e.PBRMaterialType={}))[Me.Standard=0]="Standard",Me[Me.Anisotropy=1]="Anisotropy";class Zt extends at{static __init__(){Zt.SHADERDEFINE_ALBEDOTEXTURE=t.Shader3D.getDefineByName("ALBEDOTEXTURE"),Zt.SHADERDEFINE_NORMALTEXTURE=t.Shader3D.getDefineByName("NORMALTEXTURE"),Zt.SHADERDEFINE_PARALLAXTEXTURE=t.Shader3D.getDefineByName("PARALLAXTEXTURE"),Zt.SHADERDEFINE_OCCLUSIONTEXTURE=t.Shader3D.getDefineByName("OCCLUSIONTEXTURE"),Zt.SHADERDEFINE_EMISSION=t.Shader3D.getDefineByName("EMISSION"),Zt.SHADERDEFINE_EMISSIONTEXTURE=t.Shader3D.getDefineByName("EMISSIONTEXTURE"),Zt.SHADERDEFINE_ANISOTROPY=t.Shader3D.getDefineByName("ANISOTROPIC"),Zt.SHADERDEFINE_TANGENTTEXTURE=t.Shader3D.getDefineByName("TANGENTTEXTURE"),Zt.SHADERDEFINE_TRANSPARENTBLEND=t.Shader3D.getDefineByName("TRANSPARENTBLEND"),Zt.SHADERDEFINE_LAYA_PBR_BRDF_HIGH=t.Shader3D.getDefineByName("LAYA_PBR_BRDF_HIGH"),Zt.SHADERDEFINE_LAYA_PBR_BRDF_LOW=t.Shader3D.getDefineByName("LAYA_PBR_BRDF_LOW"),Zt.SHADERDEFINE_DETAILALBEDO=t.Shader3D.getDefineByName("DETAILTEXTURE"),Zt.SHADERDEFINE_DETAILNORMAL=t.Shader3D.getDefineByName("DETAILNORMAL"),Zt.SHADERDEFINE_ENABLEVERTEXCOLOR=t.Shader3D.getDefineByName("ENABLEVERTEXCOLOR"),Zt.ALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_AlbedoTexture"),Zt.ALBEDOCOLOR=t.Shader3D.propertyNameToID("u_AlbedoColor"),Zt.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset"),Zt.NORMALTEXTURE=t.Shader3D.propertyNameToID("u_NormalTexture"),Zt.NORMALSCALE=t.Shader3D.propertyNameToID("u_NormalScale"),Zt.SMOOTHNESS=t.Shader3D.propertyNameToID("u_Smoothness"),Zt.SMOOTHNESSSCALE=t.Shader3D.propertyNameToID("u_SmoothnessScale"),Zt.OCCLUSIONTEXTURE=t.Shader3D.propertyNameToID("u_OcclusionTexture"),Zt.OCCLUSIONSTRENGTH=t.Shader3D.propertyNameToID("u_OcclusionStrength"),Zt.PARALLAXTEXTURE=t.Shader3D.propertyNameToID("u_ParallaxTexture"),Zt.PARALLAXSCALE=t.Shader3D.propertyNameToID("u_ParallaxScale"),Zt.EMISSIONTEXTURE=t.Shader3D.propertyNameToID("u_EmissionTexture"),Zt.EMISSIONCOLOR=t.Shader3D.propertyNameToID("u_EmissionColor"),Zt.EMISSIONIntensity=t.Shader3D.propertyNameToID("u_EmissionIntensity"),Zt.ANISOTROPY=t.Shader3D.propertyNameToID("u_Anisotropy"),Zt.TANGENTTEXTURE=t.Shader3D.propertyNameToID("u_TangentTexture"),Zt.DETAILALBEDOTEXTURE=t.Shader3D.propertyNameToID("u_DetailAlbedoTexture"),Zt.DETAILNORMALTEXTURE=t.Shader3D.propertyNameToID("u_DetailNormalTexture"),Zt.DETAILTILLINGOFFSET=t.Shader3D.propertyNameToID("u_DetailTillingOffset"),Zt.DETAILNORMALSCALE=t.Shader3D.propertyNameToID("u_DetailNormalScale")}get albedoColor(){return this._shaderValues.getColor(Zt.ALBEDOCOLOR)}set albedoColor(e){this._shaderValues.setColor(Zt.ALBEDOCOLOR,e)}get albedoTexture(){return this._shaderValues.getTexture(Zt.ALBEDOTEXTURE)}set albedoTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_ALBEDOTEXTURE):this._shaderValues.removeDefine(Zt.SHADERDEFINE_ALBEDOTEXTURE),this._shaderValues.setTexture(Zt.ALBEDOTEXTURE,e)}get normalTexture(){return this._shaderValues.getTexture(Zt.NORMALTEXTURE)}set normalTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_NORMALTEXTURE):this._shaderValues.removeDefine(Zt.SHADERDEFINE_NORMALTEXTURE),this._shaderValues.setTexture(Zt.NORMALTEXTURE,e),this.resetNeedTBN()}get normalTextureScale(){return this._shaderValues.getNumber(Zt.NORMALSCALE)}set normalTextureScale(e){this._shaderValues.setNumber(Zt.NORMALSCALE,e)}get parallaxTexture(){return this._shaderValues.getTexture(Zt.PARALLAXTEXTURE)}set parallaxTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_PARALLAXTEXTURE):this._shaderValues.removeDefine(Zt.SHADERDEFINE_PARALLAXTEXTURE),this._shaderValues.setTexture(Zt.PARALLAXTEXTURE,e)}get parallaxTextureScale(){return this._shaderValues.getNumber(Zt.PARALLAXSCALE)}set parallaxTextureScale(e){this._shaderValues.setNumber(Zt.PARALLAXSCALE,Math.max(.005,Math.min(.08,e)))}get occlusionTexture(){return this._shaderValues.getTexture(Zt.OCCLUSIONTEXTURE)}set occlusionTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_OCCLUSIONTEXTURE):this._shaderValues.removeDefine(Zt.SHADERDEFINE_OCCLUSIONTEXTURE),this._shaderValues.setTexture(Zt.OCCLUSIONTEXTURE,e)}get occlusionTextureStrength(){return this._shaderValues.getNumber(Zt.OCCLUSIONSTRENGTH)}set occlusionTextureStrength(e){this._shaderValues.setNumber(Zt.OCCLUSIONSTRENGTH,Math.max(0,Math.min(1,e)))}get smoothness(){return this._shaderValues.getNumber(Zt.SMOOTHNESS)}set smoothness(e){this._shaderValues.setNumber(Zt.SMOOTHNESS,Math.max(0,Math.min(1,e)))}get smoothnessTextureScale(){return this._shaderValues.getNumber(Zt.SMOOTHNESSSCALE)}set smoothnessTextureScale(e){this._shaderValues.setNumber(Zt.SMOOTHNESSSCALE,Math.max(0,Math.min(1,e)))}get enableVertexColor(){return this.hasDefine(Zt.SHADERDEFINE_ENABLEVERTEXCOLOR)}set enableVertexColor(e){e?this.addDefine(Zt.SHADERDEFINE_ENABLEVERTEXCOLOR):this.removeDefine(Zt.SHADERDEFINE_ENABLEVERTEXCOLOR)}get enableEmission(){return this._shaderValues.hasDefine(Zt.SHADERDEFINE_EMISSION)}set enableEmission(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_EMISSION):this._shaderValues.removeDefine(Zt.SHADERDEFINE_EMISSION)}get emissionColor(){return this._shaderValues.getColor(Zt.EMISSIONCOLOR)}set emissionColor(e){this._shaderValues.setColor(Zt.EMISSIONCOLOR,e)}set emissionIntensity(e){this._shaderValues.setNumber(Zt.EMISSIONIntensity,e)}get emissionIntensity(){return this._shaderValues.getNumber(Zt.EMISSIONIntensity)}get emissionTexture(){return this._shaderValues.getTexture(Zt.EMISSIONTEXTURE)}set emissionTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_EMISSIONTEXTURE):this._shaderValues.removeDefine(Zt.SHADERDEFINE_EMISSIONTEXTURE),this._shaderValues.setTexture(Zt.EMISSIONTEXTURE,e)}get tilingOffset(){return this._shaderValues.getVector(Zt.TILINGOFFSET)}set tilingOffset(e){e?this._shaderValues.setVector(Zt.TILINGOFFSET,e):this._shaderValues.getVector(Zt.TILINGOFFSET).setValue(1,1,0,0)}get detailAlbedoTexture(){return this._shaderValues.getTexture(Zt.DETAILALBEDOTEXTURE)}set detailAlbedoTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_DETAILALBEDO):this._shaderValues.removeDefine(Zt.SHADERDEFINE_DETAILALBEDO),this._shaderValues.setTexture(Zt.DETAILALBEDOTEXTURE,e)}get detailNormalTexture(){return this._shaderValues.getTexture(Zt.DETAILNORMALTEXTURE)}set detailNormalTexture(e){e?this._shaderValues.addDefine(Zt.SHADERDEFINE_DETAILNORMAL):this._shaderValues.removeDefine(Zt.SHADERDEFINE_DETAILNORMAL),this._shaderValues.setTexture(Zt.DETAILNORMALTEXTURE,e),this.resetNeedTBN()}get detailTilingOffset(){return this._shaderValues.getVector(Zt.DETAILTILLINGOFFSET)}set detailTilingOffset(e){e?this._shaderValues.setVector(Zt.DETAILTILLINGOFFSET,e):this._shaderValues.getVector(Zt.DETAILTILLINGOFFSET).setValue(1,1,0,0)}get detailNormalScale(){return this._shaderValues.getNumber(Zt.DETAILNORMALSCALE)}set detailNormalScale(e){this._shaderValues.setNumber(Zt.DETAILNORMALSCALE,e)}set renderMode(r){switch(r){case e.PBRRenderMode.Opaque:this.alphaTest=!1,this.renderQueue=at.RENDERQUEUE_OPAQUE,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(Zt.SHADERDEFINE_TRANSPARENTBLEND);break;case e.PBRRenderMode.Cutout:this.renderQueue=at.RENDERQUEUE_ALPHATEST,this.alphaTest=!0,this.depthWrite=!0,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_DISABLE,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(Zt.SHADERDEFINE_TRANSPARENTBLEND);break;case e.PBRRenderMode.Fade:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.removeDefine(Zt.SHADERDEFINE_TRANSPARENTBLEND);break;case e.PBRRenderMode.Transparent:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.alphaTest=!1,this.depthWrite=!1,this.cull=t.RenderState.CULL_BACK,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_ONE,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.depthTest=t.RenderState.DEPTHTEST_LESS,this._shaderValues.addDefine(Zt.SHADERDEFINE_TRANSPARENTBLEND);break;default:throw new Error("PBRMaterial:unknown renderMode value.")}}resetNeedTBN(){this.normalTexture||this.detailNormalTexture||this.materialType==e.PBRMaterialType.Anisotropy?this._shaderValues.addDefine(t.Shader3D.getDefineByName("NEEDTBN")):this._shaderValues.removeDefine(t.Shader3D.getDefineByName("NEEDTBN"))}get anisotropy(){return this.getFloatByIndex(Zt.ANISOTROPY)}set anisotropy(e){this.setFloatByIndex(Zt.ANISOTROPY,Math.min(1,Math.max(-1,e)))}get tangentTexture(){return this.getTextureByIndex(Zt.TANGENTTEXTURE)}set tangentTexture(e){this.setTextureByIndex(Zt.TANGENTTEXTURE,e),e?this.addDefine(Zt.SHADERDEFINE_TANGENTTEXTURE):this.removeDefine(Zt.SHADERDEFINE_TANGENTTEXTURE)}get materialType(){return this._materialType}set materialType(t){switch(t){case e.PBRMaterialType.Standard:this.removeDefine(Zt.SHADERDEFINE_ANISOTROPY);break;case e.PBRMaterialType.Anisotropy:this.addDefine(Zt.SHADERDEFINE_ANISOTROPY)}this._materialType=t,this.resetNeedTBN()}constructor(){super(),this._shaderValues.setColor(Zt.ALBEDOCOLOR,new t.Color(1,1,1,1)),this._shaderValues.setColor(Zt.EMISSIONCOLOR,new t.Color(1,1,1,1)),this._shaderValues.setVector(Zt.TILINGOFFSET,new t.Vector4(1,1,0,0)),this._shaderValues.setNumber(Zt.SMOOTHNESS,.5),this._shaderValues.setNumber(Zt.SMOOTHNESSSCALE,1),this._shaderValues.setNumber(Zt.OCCLUSIONSTRENGTH,1),this._shaderValues.setNumber(Zt.NORMALSCALE,1),this._shaderValues.setNumber(Zt.PARALLAXSCALE,.001),this._shaderValues.setNumber(at.ALPHATESTVALUE,.5),this.renderMode=e.PBRRenderMode.Opaque,this.materialType=e.PBRMaterialType.Standard}}Zt.renderQuality=e.PBRRenderQuality.High,e.PBRMetallicSmoothnessSource=void 0,(Le=e.PBRMetallicSmoothnessSource||(e.PBRMetallicSmoothnessSource={}))[Le.MetallicGlossTextureAlpha=0]="MetallicGlossTextureAlpha",Le[Le.AlbedoTextureAlpha=1]="AlbedoTextureAlpha";class Jt extends Zt{static __init__(){Jt.SHADERDEFINE_METALLICGLOSSTEXTURE=t.Shader3D.getDefineByName("METALLICGLOSSTEXTURE"),Jt.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA=t.Shader3D.getDefineByName("SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA"),Jt.METALLICGLOSSTEXTURE=t.Shader3D.propertyNameToID("u_MetallicGlossTexture"),Jt.METALLIC=t.Shader3D.propertyNameToID("u_Metallic")}get metallicGlossTexture(){return this._shaderValues.getTexture(Jt.METALLICGLOSSTEXTURE)}set metallicGlossTexture(e){e?this._shaderValues.addDefine(Jt.SHADERDEFINE_METALLICGLOSSTEXTURE):this._shaderValues.removeDefine(Jt.SHADERDEFINE_METALLICGLOSSTEXTURE),this._shaderValues.setTexture(Jt.METALLICGLOSSTEXTURE,e)}get metallic(){return this._shaderValues.getNumber(Jt.METALLIC)}set metallic(e){this._shaderValues.setNumber(Jt.METALLIC,Math.max(0,Math.min(1,e)))}get smoothnessSource(){return this._smoothnessSource}set smoothnessSource(e){e?this._shaderValues.addDefine(Jt.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA):this._shaderValues.removeDefine(Jt.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA),this._smoothnessSource=e}constructor(){super(),this._smoothnessSource=0,this.setShaderName("PBR")}clone(){var e=new Jt;return this.cloneTo(e),e}}class $t extends at{static __initDefine__(){$t.TINTCOLOR=t.Shader3D.propertyNameToID("u_TintColor"),$t.EXPOSURE=t.Shader3D.propertyNameToID("u_Exposure"),$t.ROTATION=t.Shader3D.propertyNameToID("u_Rotation"),$t.TEXTURECUBE=t.Shader3D.propertyNameToID("u_CubeTexture")}get tintColor(){return this._shaderValues.getColor($t.TINTCOLOR)}set tintColor(e){this._shaderValues.setColor($t.TINTCOLOR,e)}get exposure(){return this._shaderValues.getNumber($t.EXPOSURE)}set exposure(e){this._shaderValues.setNumber($t.EXPOSURE,e)}get rotation(){return this._shaderValues.getNumber($t.ROTATION)}set rotation(e){this._shaderValues.setNumber($t.ROTATION,e)}get textureCube(){return this._shaderValues.getTexture($t.TEXTURECUBE)}set textureCube(e){this._shaderValues.setTexture($t.TEXTURECUBE,e)}clone(){var e=new $t;return this.cloneTo(e),e}constructor(){super(),this.setShaderName("SkyBox")}}class er extends at{static __init__(){er.TINTCOLOR=t.Shader3D.propertyNameToID("u_TintColor"),er.EXPOSURE=t.Shader3D.propertyNameToID("u_Exposure"),er.ROTATION=t.Shader3D.propertyNameToID("u_Rotation"),er.TEXTURE=t.Shader3D.propertyNameToID("u_Texture")}get tintColor(){return this.getColorByIndex(er.TINTCOLOR)}set tintColor(e){this.setColorByIndex(er.TINTCOLOR,e)}get exposure(){return this.getFloatByIndex(er.EXPOSURE)}set exposure(e){this.setFloatByIndex(er.EXPOSURE,e)}get rotation(){return this.getFloatByIndex(er.ROTATION)}set rotation(e){this.setFloatByIndex(er.ROTATION,e)}get panoramicTexture(){return this.getTextureByIndex(er.TEXTURE)}set panoramicTexture(e){this.setTextureByIndex(er.TEXTURE,e)}constructor(){super(),this._textureHDRParams=new t.Vector4(1,0,0,1),this.setShaderName("SkyPanoramic"),this.setColorByIndex(er.TINTCOLOR,new t.Color(.5,.5,.5,.5)),this.setFloatByIndex(er.ROTATION,0),this.setVector4ByIndex(er.TEXTURE_HDR_PARAMS,this._textureHDRParams),this.exposure=1.3}}class tr extends at{static __initDefine__(){tr.SHADERDEFINE_SUN_HIGH_QUALITY=t.Shader3D.getDefineByName("SUN_HIGH_QUALITY"),tr.SHADERDEFINE_SUN_SIMPLE=t.Shader3D.getDefineByName("SUN_SIMPLE"),tr.SUNSIZE=t.Shader3D.propertyNameToID("u_SunSize"),tr.SUNSIZECONVERGENCE=t.Shader3D.propertyNameToID("u_SunSizeConvergence"),tr.ATMOSPHERETHICKNESS=t.Shader3D.propertyNameToID("u_AtmosphereThickness"),tr.SKYTINT=t.Shader3D.propertyNameToID("u_SkyTint"),tr.GROUNDTINT=t.Shader3D.propertyNameToID("u_GroundTint"),tr.EXPOSURE=t.Shader3D.propertyNameToID("u_Exposure")}get sunDisk(){return this._sunDisk}set sunDisk(e){switch(e){case tr.SUN_HIGH_QUALITY:this._shaderValues.removeDefine(tr.SHADERDEFINE_SUN_SIMPLE),this._shaderValues.addDefine(tr.SHADERDEFINE_SUN_HIGH_QUALITY);break;case tr.SUN_SIMPLE:this._shaderValues.removeDefine(tr.SHADERDEFINE_SUN_HIGH_QUALITY),this._shaderValues.addDefine(tr.SHADERDEFINE_SUN_SIMPLE);break;case tr.SUN_NODE:this._shaderValues.removeDefine(tr.SHADERDEFINE_SUN_HIGH_QUALITY),this._shaderValues.removeDefine(tr.SHADERDEFINE_SUN_SIMPLE);break;default:throw"SkyBoxProceduralMaterial: unknown sun value."}this._sunDisk=e}get sunSize(){return this._shaderValues.getNumber(tr.SUNSIZE)}set sunSize(e){e=Math.min(Math.max(0,e),1),this._shaderValues.setNumber(tr.SUNSIZE,e)}get sunSizeConvergence(){return this._shaderValues.getNumber(tr.SUNSIZECONVERGENCE)}set sunSizeConvergence(e){e=Math.min(Math.max(0,e),20),this._shaderValues.setNumber(tr.SUNSIZECONVERGENCE,e)}get atmosphereThickness(){return this._shaderValues.getNumber(tr.ATMOSPHERETHICKNESS)}set atmosphereThickness(e){e=Math.min(Math.max(0,e),5),this._shaderValues.setNumber(tr.ATMOSPHERETHICKNESS,e)}get skyTint(){return this._shaderValues.getColor(tr.SKYTINT)}set skyTint(e){this._shaderValues.setColor(tr.SKYTINT,e)}get groundTint(){return this._shaderValues.getColor(tr.GROUNDTINT)}set groundTint(e){this._shaderValues.setColor(tr.GROUNDTINT,e)}get exposure(){return this._shaderValues.getNumber(tr.EXPOSURE)}set exposure(e){e=Math.min(Math.max(0,e),8),this._shaderValues.setNumber(tr.EXPOSURE,e)}constructor(){super(),this.setShaderName("SkyProcedural"),this.sunDisk=tr.SUN_HIGH_QUALITY,this.sunSize=.04,this.sunSizeConvergence=5,this.atmosphereThickness=1,this.skyTint=new t.Color(.5,.5,.5,1),this.groundTint=new t.Color(.369,.349,.341,1),this.exposure=1.3}clone(){var e=new tr;return this.cloneTo(e),e}}tr.SUN_NODE=0,tr.SUN_SIMPLE=1,tr.SUN_HIGH_QUALITY=2;class rr extends at{static __initDefine__(){rr.SHADERDEFINE_MAINTEXTURE=t.Shader3D.getDefineByName("MAINTEXTURE"),rr.SHADERDEFINE_NORMALTEXTURE=t.Shader3D.getDefineByName("NORMALTEXTURE"),rr.HORIZONCOLOR=t.Shader3D.propertyNameToID("u_HorizonColor"),rr.MAINTEXTURE=t.Shader3D.propertyNameToID("u_MainTexture"),rr.NORMALTEXTURE=t.Shader3D.propertyNameToID("u_NormalTexture"),rr.WAVESCALE=t.Shader3D.propertyNameToID("u_WaveScale"),rr.WAVESPEED=t.Shader3D.propertyNameToID("u_WaveSpeed")}get horizonColor(){return this._shaderValues.getVector(rr.HORIZONCOLOR)}set horizonColor(e){this._shaderValues.setVector(rr.HORIZONCOLOR,e)}get mainTexture(){return this._shaderValues.getTexture(rr.MAINTEXTURE)}set mainTexture(e){e?this._shaderValues.addDefine(rr.SHADERDEFINE_MAINTEXTURE):this._shaderValues.removeDefine(rr.SHADERDEFINE_MAINTEXTURE),this._shaderValues.setTexture(rr.MAINTEXTURE,e)}get normalTexture(){return this._shaderValues.getTexture(rr.NORMALTEXTURE)}set normalTexture(e){e?this._shaderValues.addDefine(rr.SHADERDEFINE_NORMALTEXTURE):this._shaderValues.removeDefine(rr.SHADERDEFINE_NORMALTEXTURE),this._shaderValues.setTexture(rr.NORMALTEXTURE,e)}get waveScale(){return this._shaderValues.getNumber(rr.WAVESCALE)}set waveScale(e){this._shaderValues.setNumber(rr.WAVESCALE,e)}get waveSpeed(){return this._shaderValues.getVector(rr.WAVESPEED)}set waveSpeed(e){this._shaderValues.setVector(rr.WAVESPEED,e)}constructor(){super(),this.setShaderName("WaterPrimary"),this._shaderValues.setVector(rr.HORIZONCOLOR,new t.Vector4(.172,.463,.435,0)),this._shaderValues.setNumber(rr.WAVESCALE,.15),this._shaderValues.setVector(rr.WAVESPEED,new t.Vector4(19,9,-16,-7))}clone(){var e=new rr;return this.cloneTo(e),e}}class ar extends le{get meshFilter(){return this._meshFilter}get meshRenderer(){return this._render}constructor(e=null,t=null){super(t),this._meshFilter=this.addComponent(st),this._render=this.addComponent(ot),e&&(this._meshFilter.sharedMesh=e)}_parse(e,r){super._parse(e,r);var a=this.meshRenderer,n=e.lightmapIndex;null!=n&&(a.lightmapIndex=n);var i=e.lightmapScaleOffset;i&&(a.lightmapScaleOffset=new t.Vector4(i[0],i[1],i[2],i[3])),null!=e.meshPath&&(this.meshFilter.sharedMesh=t.Loader.getRes(e.meshPath)),null!=e.enableRender&&(a._enabled=e.enableRender),null!=e.receiveShadows&&(a.receiveShadow=e.receiveShadows),null!=e.castShadow&&(a.castShadow=e.castShadow);var s=e.materials;if(s){var o=a.sharedMaterials,l=s.length;o.length=l;for(var h=0;h<l;h++)o[h]=t.Loader.getRes(s[h].path);a.sharedMaterials=o}}_cloneTo(e,t,r){super._cloneTo(e,t,r)}_create(){return new J}}class nr{get time(){return this._time}get minCount(){return this._minCount}get maxCount(){return this._maxCount}constructor(e=0,t=0,r=0){this._time=e,this._minCount=t,this._maxCount=r}cloneTo(e){var t=e;t._time=this._time,t._minCount=this._minCount,t._maxCount=this._maxCount}clone(){var e=new nr(this._time,this._minCount,this._maxCount);return this.cloneTo(e),e}}class ir{static createByConstant(e){var t=new ir;return t._type=0,t._constant=e,t}static createByGradient(e){var t=new ir;return t._type=1,t._gradient=e,t}static createByRandomTwoConstant(e,t){var r=new ir;return r._type=2,r._constantMin=e,r._constantMax=t,r}static createByRandomTwoGradient(e,t){var r=new ir;return r._type=3,r._gradientMin=e,r._gradientMax=t,r}get type(){return this._type}get constant(){return this._constant}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get gradient(){return this._gradient}get gradientMin(){return this._gradientMin}get gradientMax(){return this._gradientMax}constructor(){this._type=0,this._constant=null,this._constantMin=null,this._constantMax=null,this._gradient=null,this._gradientMin=null,this._gradientMax=null}cloneTo(e){var t=e;t._type=this._type,this._constant.cloneTo(t._constant),this._constantMin.cloneTo(t._constantMin),this._constantMax.cloneTo(t._constantMax),this._gradient.cloneTo(t._gradient),this._gradientMin.cloneTo(t._gradientMin),this._gradientMax.cloneTo(t._gradientMax)}clone(){var e=new ir;return this.cloneTo(e),e}}class sr{get color(){return this._color}constructor(e){this._color=e}cloneTo(e){var t=e;this._color.cloneTo(t._color),t.enable=this.enable}clone(){var e;switch(this._color.type){case 0:e=ir.createByConstant(this._color.constant.clone());break;case 1:e=ir.createByGradient(this._color.gradient.clone());break;case 2:e=ir.createByRandomTwoConstant(this._color.constantMin.clone(),this._color.constantMax.clone());break;case 3:e=ir.createByRandomTwoGradient(this._color.gradientMin.clone(),this._color.gradientMax.clone())}var t=new sr(e);return t.enable=this.enable,t}}class or{set emissionRate(e){if(e<0)throw new Error("ParticleBaseShape:emissionRate value must large or equal than 0.");this._emissionRate=e}get emissionRate(){return this._emissionRate}get emissionRateOverDistance(){return this._emissionRateOverDistance}set emissionRateOverDistance(e){e=Math.max(0,e),this._emissionRateOverDistance=e}get destroyed(){return this._destroyed}constructor(){this._emissionRate=10,this._emissionRateOverDistance=0,this._destroyed=!1,this._bursts=[]}destroy(){this._bursts=null,this._destroyed=!0}getBurstsCount(){return this._bursts.length}getBurstByIndex(e){return this._bursts[e]}addBurst(e){var t=this._bursts.length;if(t>0)for(var r=0;r<t;r++)this._bursts[r].time>e.time&&this._bursts.splice(r,0,e);this._bursts.push(e)}removeBurst(e){var t=this._bursts.indexOf(e);-1!==t&&this._bursts.splice(t,1)}removeBurstByIndex(e){this._bursts.splice(e,1)}clearBurst(){this._bursts.length=0}cloneTo(e){var t=e,r=t._bursts;r.length=this._bursts.length;for(var a=0,n=this._bursts.length;a<n;a++){var i=r[a];i?this._bursts[a].cloneTo(i):r[a]=this._bursts[a].clone()}t._emissionRate=this._emissionRate,t._emissionRateOverDistance=this._emissionRateOverDistance,t.enable=this.enable}clone(){var e=new or;return this.cloneTo(e),e}}class lr{static createByConstant(e=0){var t=new lr;return t._type=0,t._constant=e,t}static createByOverTime(e){var t=new lr;return t._type=1,t._overTime=e,t}static createByRandomTwoConstant(e=0,t=0){var r=new lr;return r._type=2,r._constantMin=e,r._constantMax=t,r}static createByRandomTwoOverTime(e,t){var r=new lr;return r._type=3,r._overTimeMin=e,r._overTimeMax=t,r}get type(){return this._type}get constant(){return this._constant}get frameOverTimeData(){return this._overTime}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get frameOverTimeDataMin(){return this._overTimeMin}get frameOverTimeDataMax(){return this._overTimeMax}constructor(){this._type=0,this._constant=0,this._overTime=null,this._constantMin=0,this._constantMax=0,this._overTimeMin=null,this._overTimeMax=null}cloneTo(e){var t=e;t._type=this._type,t._constant=this._constant,this._overTime&&this._overTime.cloneTo(t._overTime),t._constantMin=this._constantMin,t._constantMax=this._constantMax,this._overTimeMin&&this._overTimeMin.cloneTo(t._overTimeMin),this._overTimeMax&&this._overTimeMax.cloneTo(t._overTimeMax)}clone(){var e=new lr;return this.cloneTo(e),e}}class hr{static createByConstant(e){var t=new hr;return t._type=0,t._separateAxes=!1,t._constant=e,t}static createByConstantSeparate(e){var t=new hr;return t._type=0,t._separateAxes=!0,t._constantSeparate=e,t}static createByGradient(e){var t=new hr;return t._type=1,t._separateAxes=!1,t._gradient=e,t}static createByGradientSeparate(e,t,r){var a=new hr;return a._type=1,a._separateAxes=!0,a._gradientX=e,a._gradientY=t,a._gradientZ=r,a}static createByRandomTwoConstant(e,t){var r=new hr;return r._type=2,r._separateAxes=!1,r._constantMin=e,r._constantMax=t,r}static createByRandomTwoConstantSeparate(e,t){var r=new hr;return r._type=2,r._separateAxes=!0,r._constantMinSeparate=e,r._constantMaxSeparate=t,r}static createByRandomTwoGradient(e,t){var r=new hr;return r._type=3,r._separateAxes=!1,r._gradientMin=e,r._gradientMax=t,r}static createByRandomTwoGradientSeparate(e,t,r,a,n,i,s,o){var l=new hr;return l._type=3,l._separateAxes=!0,l._gradientXMin=e,l._gradientXMax=t,l._gradientYMin=r,l._gradientYMax=a,l._gradientZMin=n,l._gradientZMax=i,l._gradientWMin=s,l._gradientWMax=o,l}get type(){return this._type}get separateAxes(){return this._separateAxes}get constant(){return this._constant}get constantSeparate(){return this._constantSeparate}get gradient(){return this._gradient}get gradientX(){return this._gradientX}get gradientY(){return this._gradientY}get gradientZ(){return this._gradientZ}get gradientW(){return this._gradientW}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get constantMinSeparate(){return this._constantMinSeparate}get constantMaxSeparate(){return this._constantMaxSeparate}get gradientMin(){return this._gradientMin}get gradientMax(){return this._gradientMax}get gradientXMin(){return this._gradientXMin}get gradientXMax(){return this._gradientXMax}get gradientYMin(){return this._gradientYMin}get gradientYMax(){return this._gradientYMax}get gradientZMin(){return this._gradientZMin}get gradientZMax(){return this._gradientZMax}get gradientWMin(){return this._gradientWMin}get gradientWMax(){return this._gradientWMax}constructor(){this._type=0,this._separateAxes=!1,this._constant=0,this._constantSeparate=null,this._gradient=null,this._gradientX=null,this._gradientY=null,this._gradientZ=null,this._gradientW=null,this._constantMin=0,this._constantMax=0,this._constantMinSeparate=null,this._constantMaxSeparate=null,this._gradientMin=null,this._gradientMax=null,this._gradientXMin=null,this._gradientXMax=null,this._gradientYMin=null,this._gradientYMax=null,this._gradientZMin=null,this._gradientZMax=null,this._gradientWMin=null,this._gradientWMax=null}cloneTo(e){var t=e;t._type=this._type,t._separateAxes=this._separateAxes,t._constant=this._constant,this._constantSeparate.cloneTo(t._constantSeparate),this._gradient.cloneTo(t._gradient),this._gradientX.cloneTo(t._gradientX),this._gradientY.cloneTo(t._gradientY),this._gradientZ.cloneTo(t._gradientZ),t._constantMin=this._constantMin,t._constantMax=this._constantMax,this._constantMinSeparate.cloneTo(t._constantMinSeparate),this._constantMaxSeparate.cloneTo(t._constantMaxSeparate),this._gradientMin.cloneTo(t._gradientMin),this._gradientMax.cloneTo(t._gradientMax),this._gradientXMin.cloneTo(t._gradientXMin),this._gradientXMax.cloneTo(t._gradientXMax),this._gradientYMin.cloneTo(t._gradientYMin),this._gradientYMax.cloneTo(t._gradientYMax),this._gradientZMin.cloneTo(t._gradientZMin),this._gradientZMax.cloneTo(t._gradientZMax)}clone(){var e=new hr;return this.cloneTo(e),e}}class cr{get gradientCount(){return this._currentLength/2}constructor(){this._currentLength=0,this._elements=new Float32Array(8)}add(e,t){this._currentLength<8?(6===this._currentLength&&1!==e&&(e=1,console.log("Warning:the forth key is  be force set to 1.")),this._elements[this._currentLength++]=e,this._elements[this._currentLength++]=t):console.log("Warning:data count must lessEqual than 4")}cloneTo(e){var t=e;t._currentLength=this._currentLength;for(var r=t._elements,a=0,n=this._elements.length;a<n;a++)r[a]=this._elements[a]}clone(){var e=new cr;return this.cloneTo(e),e}}class dr{get gradientCount(){return this._currentLength/2}constructor(){this._currentLength=0,this._elements=new Float32Array(8)}add(e,t){this._currentLength<8?(6===this._currentLength&&1!==e&&(e=1,console.log("GradientDataNumber warning:the forth key is  be force set to 1.")),this._elements[this._currentLength++]=e,this._elements[this._currentLength++]=t):console.log("GradientDataNumber warning:data count must lessEqual than 4")}getKeyByIndex(e){return this._elements[2*e]}getValueByIndex(e){return this._elements[2*e+1]}getAverageValue(){for(var e=0,t=0,r=0,a=this._currentLength-2;r<a;r+=2){var n=this._elements[r+1];n+=this._elements[r+3],e+=n*=this._elements[r+2]-this._elements[r],t++}return e/t}cloneTo(e){var t=e;t._currentLength=this._currentLength;for(var r=t._elements,a=0,n=this._elements.length;a<n;a++)r[a]=this._elements[a]}clone(){var e=new dr;return this.cloneTo(e),e}}class _r{static createByGradient(e){var t=new _r;return t._type=0,t._separateAxes=!1,t._gradient=e,t}static createByGradientSeparate(e,t,r){var a=new _r;return a._type=0,a._separateAxes=!0,a._gradientX=e,a._gradientY=t,a._gradientZ=r,a}static createByRandomTwoConstant(e,t){var r=new _r;return r._type=1,r._separateAxes=!1,r._constantMin=e,r._constantMax=t,r}static createByRandomTwoConstantSeparate(e,t){var r=new _r;return r._type=1,r._separateAxes=!0,r._constantMinSeparate=e,r._constantMaxSeparate=t,r}static createByRandomTwoGradient(e,t){var r=new _r;return r._type=2,r._separateAxes=!1,r._gradientMin=e,r._gradientMax=t,r}static createByRandomTwoGradientSeparate(e,t,r,a,n,i){var s=new _r;return s._type=2,s._separateAxes=!0,s._gradientXMin=e,s._gradientXMax=t,s._gradientYMin=r,s._gradientYMax=a,s._gradientZMin=n,s._gradientZMax=i,s}get type(){return this._type}get separateAxes(){return this._separateAxes}get gradient(){return this._gradient}get gradientX(){return this._gradientX}get gradientY(){return this._gradientY}get gradientZ(){return this._gradientZ}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get constantMinSeparate(){return this._constantMinSeparate}get constantMaxSeparate(){return this._constantMaxSeparate}get gradientMin(){return this._gradientMin}get gradientMax(){return this._gradientMax}get gradientXMin(){return this._gradientXMin}get gradientXMax(){return this._gradientXMax}get gradientYMin(){return this._gradientYMin}get gradientYMax(){return this._gradientYMax}get gradientZMin(){return this._gradientZMin}get gradientZMax(){return this._gradientZMax}constructor(){this._type=0,this._separateAxes=!1,this._gradient=null,this._gradientX=null,this._gradientY=null,this._gradientZ=null,this._constantMin=0,this._constantMax=0,this._constantMinSeparate=null,this._constantMaxSeparate=null,this._gradientMin=null,this._gradientMax=null,this._gradientXMin=null,this._gradientXMax=null,this._gradientYMin=null,this._gradientYMax=null,this._gradientZMin=null,this._gradientZMax=null}getMaxSizeInGradient(e=!1){var t,r,a=-Number.MAX_VALUE;switch(this._type){case 0:if(this._separateAxes){for(t=0,r=this._gradientX.gradientCount;t<r;t++)a=Math.max(a,this._gradientX.getValueByIndex(t));for(t=0,r=this._gradientY.gradientCount;t<r;t++)a=Math.max(a,this._gradientY.getValueByIndex(t));if(e)for(t=0,r=this._gradientZ.gradientCount;t<r;t++)a=Math.max(a,this._gradientZ.getValueByIndex(t))}else for(t=0,r=this._gradient.gradientCount;t<r;t++)a=Math.max(a,this._gradient.getValueByIndex(t));break;case 1:this._separateAxes?(a=Math.max(this._constantMinSeparate.x,this._constantMaxSeparate.x),a=Math.max(a,this._constantMinSeparate.y),e&&(a=a=Math.max(a,this._constantMaxSeparate.z))):a=Math.max(this._constantMin,this._constantMax);break;case 2:if(this._separateAxes){for(t=0,r=this._gradientXMin.gradientCount;t<r;t++)a=Math.max(a,this._gradientXMin.getValueByIndex(t));for(t=0,r=this._gradientXMax.gradientCount;t<r;t++)a=Math.max(a,this._gradientXMax.getValueByIndex(t));for(t=0,r=this._gradientYMin.gradientCount;t<r;t++)a=Math.max(a,this._gradientYMin.getValueByIndex(t));for(t=0,r=this._gradientZMax.gradientCount;t<r;t++)a=Math.max(a,this._gradientZMax.getValueByIndex(t));if(e){for(t=0,r=this._gradientZMin.gradientCount;t<r;t++)a=Math.max(a,this._gradientZMin.getValueByIndex(t));for(t=0,r=this._gradientZMax.gradientCount;t<r;t++)a=Math.max(a,this._gradientZMax.getValueByIndex(t))}}else{for(t=0,r=this._gradientMin.gradientCount;t<r;t++)a=Math.max(a,this._gradientMin.getValueByIndex(t));for(t=0,r=this._gradientMax.gradientCount;t<r;t++)a=Math.max(a,this._gradientMax.getValueByIndex(t))}}return a}cloneTo(e){var t=e;t._type=this._type,t._separateAxes=this._separateAxes,this._gradient.cloneTo(t._gradient),this._gradientX.cloneTo(t._gradientX),this._gradientY.cloneTo(t._gradientY),this._gradientZ.cloneTo(t._gradientZ),t._constantMin=this._constantMin,t._constantMax=this._constantMax,this._constantMinSeparate.cloneTo(t._constantMinSeparate),this._constantMaxSeparate.cloneTo(t._constantMaxSeparate),this._gradientMin.cloneTo(t._gradientMin),this._gradientMax.cloneTo(t._gradientMax),this._gradientXMin.cloneTo(t._gradientXMin),this._gradientXMax.cloneTo(t._gradientXMax),this._gradientYMin.cloneTo(t._gradientYMin),this._gradientYMax.cloneTo(t._gradientYMax),this._gradientZMin.cloneTo(t._gradientZMin),this._gradientZMax.cloneTo(t._gradientZMax)}clone(){var e=new _r;return this.cloneTo(e),e}}class ur{static createByConstant(e){var t=new ur;return t._type=0,t._constant=e,t}static createByGradient(e,t,r){var a=new ur;return a._type=1,a._gradientX=e,a._gradientY=t,a._gradientZ=r,a}static createByRandomTwoConstant(e,t){var r=new ur;return r._type=2,r._constantMin=e,r._constantMax=t,r}static createByRandomTwoGradient(e,t,r,a,n,i){var s=new ur;return s._type=3,s._gradientXMin=e,s._gradientXMax=t,s._gradientYMin=r,s._gradientYMax=a,s._gradientZMin=n,s._gradientZMax=i,s}get type(){return this._type}get constant(){return this._constant}get gradientX(){return this._gradientX}get gradientY(){return this._gradientY}get gradientZ(){return this._gradientZ}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}get gradientXMin(){return this._gradientXMin}get gradientXMax(){return this._gradientXMax}get gradientYMin(){return this._gradientYMin}get gradientYMax(){return this._gradientYMax}get gradientZMin(){return this._gradientZMin}get gradientZMax(){return this._gradientZMax}constructor(){this._type=0,this._constant=null,this._gradientX=null,this._gradientY=null,this._gradientZ=null,this._constantMin=null,this._constantMax=null,this._gradientXMin=null,this._gradientXMax=null,this._gradientYMin=null,this._gradientYMax=null,this._gradientZMin=null,this._gradientZMax=null}cloneTo(e){var t=e;t._type=this._type,this._constant.cloneTo(t._constant),this._gradientX.cloneTo(t._gradientX),this._gradientY.cloneTo(t._gradientY),this._gradientZ.cloneTo(t._gradientZ),this._constantMin.cloneTo(t._constantMin),this._constantMax.cloneTo(t._constantMax),this._gradientXMin.cloneTo(t._gradientXMin),this._gradientXMax.cloneTo(t._gradientXMax),this._gradientYMin.cloneTo(t._gradientYMin),this._gradientYMax.cloneTo(t._gradientYMax),this._gradientZMin.cloneTo(t._gradientZMin),this._gradientZMax.cloneTo(t._gradientZMax)}clone(){var e=new ur;return this.cloneTo(e),e}}class mr{get angularVelocity(){return this._angularVelocity}constructor(e){this._angularVelocity=e}cloneTo(e){var t=e;this._angularVelocity.cloneTo(t._angularVelocity),t.enable=this.enable}clone(){var e;switch(this._angularVelocity.type){case 0:e=this._angularVelocity.separateAxes?hr.createByConstantSeparate(this._angularVelocity.constantSeparate.clone()):hr.createByConstant(this._angularVelocity.constant);break;case 1:e=this._angularVelocity.separateAxes?hr.createByGradientSeparate(this._angularVelocity.gradientX.clone(),this._angularVelocity.gradientY.clone(),this._angularVelocity.gradientZ.clone()):hr.createByGradient(this._angularVelocity.gradient.clone());break;case 2:e=this._angularVelocity.separateAxes?hr.createByRandomTwoConstantSeparate(this._angularVelocity.constantMinSeparate.clone(),this._angularVelocity.constantMaxSeparate.clone()):hr.createByRandomTwoConstant(this._angularVelocity.constantMin,this._angularVelocity.constantMax);break;case 3:e=this._angularVelocity.separateAxes?hr.createByRandomTwoGradientSeparate(this._angularVelocity.gradientXMin.clone(),this._angularVelocity.gradientYMin.clone(),this._angularVelocity.gradientZMin.clone(),this._angularVelocity.gradientWMin.clone(),this._angularVelocity.gradientXMax.clone(),this._angularVelocity.gradientYMax.clone(),this._angularVelocity.gradientZMax.clone(),this._angularVelocity.gradientWMax.clone()):hr.createByRandomTwoGradient(this._angularVelocity.gradientMin.clone(),this._angularVelocity.gradientMax.clone())}var t=new mr(e);return t.enable=this.enable,t}}class fr{constructor(e,t){this.min=e,this.max=t}_rotateExtents(e,t,r){var a=e.x,n=e.y,i=e.z,s=t.elements;r.x=Math.abs(s[0]*a)+Math.abs(s[4]*n)+Math.abs(s[8]*i),r.y=Math.abs(s[1]*a)+Math.abs(s[5]*n)+Math.abs(s[9]*i),r.z=Math.abs(s[2]*a)+Math.abs(s[6]*n)+Math.abs(s[10]*i)}getCorners(e){e.length=8;var r=this.min.x,a=this.min.y,n=this.min.z,i=this.max.x,s=this.max.y,o=this.max.z;e[0]=new t.Vector3(r,s,o),e[1]=new t.Vector3(i,s,o),e[2]=new t.Vector3(i,a,o),e[3]=new t.Vector3(r,a,o),e[4]=new t.Vector3(r,s,n),e[5]=new t.Vector3(i,s,n),e[6]=new t.Vector3(i,a,n),e[7]=new t.Vector3(r,a,n)}getCenter(e){t.Vector3.add(this.min,this.max,e),t.Vector3.scale(e,.5,e)}getExtent(e){t.Vector3.subtract(this.max,this.min,e),t.Vector3.scale(e,.5,e)}setCenterAndExtent(e,r){t.Vector3.subtract(e,r,this.min),t.Vector3.add(e,r,this.max)}tranform(e,r){var a=fr._tempVector30,n=fr._tempVector31;this.getCenter(a),this.getExtent(n),t.Vector3.transformCoordinate(a,e,a),this._rotateExtents(n,e,n),r.setCenterAndExtent(a,n)}toDefault(){this.min.toDefault(),this.max.toDefault()}static createfromPoints(e,r){if(null==e)throw new Error("points");var a=r.min,n=r.max;a.x=Number.MAX_VALUE,a.y=Number.MAX_VALUE,a.z=Number.MAX_VALUE,n.x=-Number.MAX_VALUE,n.y=-Number.MAX_VALUE,n.z=-Number.MAX_VALUE;for(var i=0,s=e.length;i<s;++i)t.Vector3.min(a,e[i],a),t.Vector3.max(n,e[i],n)}static merge(e,r,a){t.Vector3.min(e.min,r.min,a.min),t.Vector3.max(e.max,r.max,a.max)}cloneTo(e){var t=e;this.min.cloneTo(t.min),this.max.cloneTo(t.max)}clone(){var e=new fr(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}fr._tempVector30=new t.Vector3,fr._tempVector31=new t.Vector3,e.ParticleSystemShapeType=void 0,(Oe=e.ParticleSystemShapeType||(e.ParticleSystemShapeType={}))[Oe.Box=0]="Box",Oe[Oe.Circle=1]="Circle",Oe[Oe.Cone=2]="Cone",Oe[Oe.Hemisphere=3]="Hemisphere",Oe[Oe.Sphere=4]="Sphere";class gr{constructor(){this.enable=!0,this.randomDirection=0}_getShapeBoundBox(e){throw new Error("BaseShape: must override it.")}_getSpeedBoundBox(e){throw new Error("BaseShape: must override it.")}generatePositionAndDirection(e,t,r=null,a=null){throw new Error("BaseShape: must override it.")}_calculateProceduralBounds(e,r,a){this._getShapeBoundBox(e);var n=e.min,i=e.max;t.Vector3.multiply(n,r,n),t.Vector3.multiply(i,r,i);var s=new fr(new t.Vector3,new t.Vector3);this.randomDirection?(s.min=new t.Vector3(-1,-1,-1),s.max=new t.Vector3(1,1,1)):this._getSpeedBoundBox(s);var o=new fr(new t.Vector3,new t.Vector3),l=o.min,h=o.max;t.Vector3.scale(s.min,a.y,l),t.Vector3.scale(s.max,a.y,h),t.Vector3.add(e.min,l,l),t.Vector3.add(e.max,h,h),t.Vector3.min(e.min,l,e.min),t.Vector3.max(e.max,l,e.max);var c=new fr(new t.Vector3,new t.Vector3),d=c.min,_=c.max;t.Vector3.scale(s.min,a.x,d),t.Vector3.scale(s.max,a.x,_),t.Vector3.min(c.min,_,l),t.Vector3.max(c.min,_,h),t.Vector3.min(e.min,l,e.min),t.Vector3.max(e.max,l,e.max)}cloneTo(e){e.enable=this.enable}clone(){var e=new gr;return this.cloneTo(e),e}}class pr{static _randomPointUnitArcCircle(e,t,r=null){var a;a=r?r.getFloat()*e:Math.random()*e,t.x=Math.cos(a),t.y=Math.sin(a)}static _randomPointInsideUnitArcCircle(e,t,r=null){var a;pr._randomPointUnitArcCircle(e,t,r),a=r?Math.pow(r.getFloat(),.5):Math.pow(Math.random(),.5),t.x=t.x*a,t.y=t.y*a}static _randomPointUnitCircle(e,t=null){var r;r=t?t.getFloat()*Math.PI*2:Math.random()*Math.PI*2,e.x=Math.cos(r),e.y=Math.sin(r)}static _randomPointInsideUnitCircle(e,t=null){var r;pr._randomPointUnitCircle(e),r=t?Math.pow(t.getFloat(),.5):Math.pow(Math.random(),.5),e.x=e.x*r,e.y=e.y*r}static _randomPointUnitSphere(e,t=null){var r,a;t?(r=e.z=2*t.getFloat()-1,a=t.getFloat()*Math.PI*2):(r=e.z=2*Math.random()-1,a=Math.random()*Math.PI*2);var n=Math.sqrt(1-r*r);e.x=n*Math.cos(a),e.y=n*Math.sin(a)}static _randomPointInsideUnitSphere(e,t=null){var r;pr._randomPointUnitSphere(e),r=t?Math.pow(t.getFloat(),1/3):Math.pow(Math.random(),1/3),e.x=e.x*r,e.y=e.y*r,e.z=e.z*r}static _randomPointInsideHalfUnitBox(e,t=null){t?(e.x=t.getFloat()-.5,e.y=t.getFloat()-.5,e.z=t.getFloat()-.5):(e.x=Math.random()-.5,e.y=Math.random()-.5,e.z=Math.random()-.5)}constructor(){}}class Sr extends gr{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Box,this.x=1,this.y=1,this.z=1}_getShapeBoundBox(e){var t=e.min;t.x=.5*-this.x,t.y=.5*-this.y,t.z=.5*-this.z;var r=e.max;r.x=.5*this.x,r.y=.5*this.y,r.z=.5*this.z}_getSpeedBoundBox(e){var t=e.min;t.x=0,t.y=0,t.z=0;var r=e.max;r.x=0,r.y=1,r.z=0}generatePositionAndDirection(e,t,r=null,a=null){r?(r.seed=a[16],pr._randomPointInsideHalfUnitBox(e,r),a[16]=r.seed):pr._randomPointInsideHalfUnitBox(e),e.x=this.x*e.x,e.y=this.y*e.y,e.z=this.z*e.z,this.randomDirection?r?(r.seed=a[17],pr._randomPointUnitSphere(t,r),a[17]=r.seed):pr._randomPointUnitSphere(t):(t.x=0,t.y=0,t.z=1)}cloneTo(e){super.cloneTo(e);var t=e;t.x=this.x,t.y=this.y,t.z=this.z,t.randomDirection=this.randomDirection}clone(){var e=new Sr;return this.cloneTo(e),e}}class Tr extends gr{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Circle,this.radius=1,this.arc=2*Math.PI,this.emitFromEdge=!1}set arcDEG(e){this.arc=e/180*Math.PI}get arcDEG(){return 180*this.arc/Math.PI}_getShapeBoundBox(e){var t=e.min;t.x=t.z=-this.radius,t.y=0;var r=e.max;r.x=r.z=this.radius,r.y=0}_getSpeedBoundBox(e){var t=e.min;t.x=t.y=-1,t.z=0;var r=e.max;r.x=r.y=1,r.z=0}generatePositionAndDirection(e,r,a=null,n=null){var i=Tr._tempPositionPoint;a?(a.seed=n[16],this.emitFromEdge?pr._randomPointUnitArcCircle(this.arc,Tr._tempPositionPoint,a):pr._randomPointInsideUnitArcCircle(this.arc,Tr._tempPositionPoint,a),n[16]=a.seed):this.emitFromEdge?pr._randomPointUnitArcCircle(this.arc,Tr._tempPositionPoint):pr._randomPointInsideUnitArcCircle(this.arc,Tr._tempPositionPoint),e.x=-i.x,e.y=i.y,e.z=0,t.Vector3.scale(e,this.radius,e),this.randomDirection?a?(a.seed=n[17],pr._randomPointUnitSphere(r,a),n[17]=a.seed):pr._randomPointUnitSphere(r):e.cloneTo(r)}cloneTo(e){super.cloneTo(e);var t=e;t.radius=this.radius,t.arc=this.arc,t.emitFromEdge=this.emitFromEdge,t.randomDirection=this.randomDirection}clone(){var e=new Tr;return this.cloneTo(e),e}}Tr._tempPositionPoint=new t.Vector2;class Er extends gr{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Cone,this.angle=25/180*Math.PI,this.radius=1,this.length=5,this.emitType=0}set angleDEG(e){this.angle=e/180*Math.PI}get angleDEG(){return 180*this.angle/Math.PI}_getShapeBoundBox(e){const t=this.radius+this.length*Math.sin(this.angle),r=this.length*Math.cos(this.angle);var a=e.min;a.x=a.y=-t,a.z=0;var n=e.max;n.x=n.y=t,n.z=r}_getSpeedBoundBox(e){const t=Math.sin(this.angle);var r=e.min;r.x=r.y=-t,r.z=0;var a=e.max;a.x=a.y=t,a.z=1}generatePositionAndDirection(e,r,a=null,n=null){var i,s,o,l=Er._tempPositionPoint,h=Math.cos(this.angle),c=Math.sin(this.angle);switch(this.emitType){case 0:a?(a.seed=n[16],pr._randomPointInsideUnitCircle(Er._tempPositionPoint,a),n[16]=a.seed):pr._randomPointInsideUnitCircle(Er._tempPositionPoint),i=l.x,s=l.y,e.x=i*this.radius,e.y=s*this.radius,e.z=0,this.randomDirection?(a?(a.seed=n[17],pr._randomPointInsideUnitCircle(Er._tempDirectionPoint,a),n[17]=a.seed):pr._randomPointInsideUnitCircle(Er._tempDirectionPoint),o=Er._tempDirectionPoint,r.x=o.x*c,r.y=o.y*c):(r.x=i*c,r.y=s*c),r.z=h;break;case 1:a?(a.seed=n[16],pr._randomPointUnitCircle(Er._tempPositionPoint,a),n[16]=a.seed):pr._randomPointUnitCircle(Er._tempPositionPoint),i=l.x,s=l.y,e.x=i*this.radius,e.y=s*this.radius,e.z=0,this.randomDirection?(a?(a.seed=n[17],pr._randomPointInsideUnitCircle(Er._tempDirectionPoint,a),n[17]=a.seed):pr._randomPointInsideUnitCircle(Er._tempDirectionPoint),o=Er._tempDirectionPoint,r.x=o.x*c,r.y=o.y*c):(r.x=i*c,r.y=s*c),r.z=h;break;case 2:a?(a.seed=n[16],pr._randomPointInsideUnitCircle(Er._tempPositionPoint,a)):pr._randomPointInsideUnitCircle(Er._tempPositionPoint),i=l.x,s=l.y,e.x=i*this.radius,e.y=s*this.radius,e.z=0,r.x=i*c,r.y=s*c,r.z=h,t.Vector3.normalize(r,r),a?(t.Vector3.scale(r,this.length*a.getFloat(),r),n[16]=a.seed):t.Vector3.scale(r,this.length*Math.random(),r),t.Vector3.add(e,r,e),this.randomDirection&&(a?(a.seed=n[17],pr._randomPointUnitSphere(r,a),n[17]=a.seed):pr._randomPointUnitSphere(r));break;case 3:a?(a.seed=n[16],pr._randomPointUnitCircle(Er._tempPositionPoint,a)):pr._randomPointUnitCircle(Er._tempPositionPoint),i=l.x,s=l.y,e.x=i*this.radius,e.y=s*this.radius,e.z=0,r.x=i*c,r.y=s*c,r.z=h,t.Vector3.normalize(r,r),a?(t.Vector3.scale(r,this.length*a.getFloat(),r),n[16]=a.seed):t.Vector3.scale(r,this.length*Math.random(),r),t.Vector3.add(e,r,e),this.randomDirection&&(a?(a.seed=n[17],pr._randomPointUnitSphere(r,a),n[17]=a.seed):pr._randomPointUnitSphere(r));break;default:throw new Error("ConeShape:emitType is invalid.")}}cloneTo(e){super.cloneTo(e);var t=e;t.angle=this.angle,t.radius=this.radius,t.length=this.length,t.emitType=this.emitType,t.randomDirection=this.randomDirection}clone(){var e=new Er;return this.cloneTo(e),e}}Er._tempPositionPoint=new t.Vector2,Er._tempDirectionPoint=new t.Vector2;class Ar extends gr{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Hemisphere,this.radius=1,this.emitFromShell=!1}_getShapeBoundBox(e){var t=e.min;t.x=t.y=t.z=-this.radius;var r=e.max;r.x=r.y=this.radius,r.z=0}_getSpeedBoundBox(e){var t=e.min;t.x=t.y=-1,t.z=0;var r=e.max;r.x=r.y=r.z=1}generatePositionAndDirection(e,r,a=null,n=null){a?(a.seed=n[16],this.emitFromShell?pr._randomPointUnitSphere(e,a):pr._randomPointInsideUnitSphere(e,a),n[16]=a.seed):this.emitFromShell?pr._randomPointUnitSphere(e):pr._randomPointInsideUnitSphere(e),t.Vector3.scale(e,this.radius,e);var i=e.z;i<0&&(e.z=-1*i),this.randomDirection?a?(a.seed=n[17],pr._randomPointUnitSphere(r,a),n[17]=a.seed):pr._randomPointUnitSphere(r):e.cloneTo(r)}cloneTo(e){super.cloneTo(e);var t=e;t.radius=this.radius,t.emitFromShell=this.emitFromShell,t.randomDirection=this.randomDirection}clone(){var e=new Ar;return this.cloneTo(e),e}}class xr extends gr{constructor(){super(),this.shapeType=e.ParticleSystemShapeType.Sphere,this.radius=1,this.emitFromShell=!1}_getShapeBoundBox(e){var t=e.min;t.x=t.y=t.z=-this.radius;var r=e.max;r.x=r.y=r.z=this.radius}_getSpeedBoundBox(e){var t=e.min;t.x=t.y=t.z=-1;var r=e.max;r.x=r.y=r.z=1}generatePositionAndDirection(e,r,a=null,n=null){a?(a.seed=n[16],this.emitFromShell?pr._randomPointUnitSphere(e,a):pr._randomPointInsideUnitSphere(e,a),n[16]=a.seed):this.emitFromShell?pr._randomPointUnitSphere(e):pr._randomPointInsideUnitSphere(e),t.Vector3.scale(e,this.radius,e),this.randomDirection?a?(a.seed=n[17],pr._randomPointUnitSphere(r,a),n[17]=a.seed):pr._randomPointUnitSphere(r):e.cloneTo(r)}cloneTo(e){super.cloneTo(e);var t=e;t.radius=this.radius,t.emitFromShell=this.emitFromShell,t.randomDirection=this.randomDirection}clone(){var e=new xr;return this.cloneTo(e),e}}class Dr{get size(){return this._size}constructor(e){this._size=e}cloneTo(e){var t=e;this._size.cloneTo(t._size),t.enable=this.enable}clone(){var e;switch(this._size.type){case 0:e=this._size.separateAxes?_r.createByGradientSeparate(this._size.gradientX.clone(),this._size.gradientY.clone(),this._size.gradientZ.clone()):_r.createByGradient(this._size.gradient.clone());break;case 1:e=this._size.separateAxes?_r.createByRandomTwoConstantSeparate(this._size.constantMinSeparate.clone(),this._size.constantMaxSeparate.clone()):_r.createByRandomTwoConstant(this._size.constantMin,this._size.constantMax);break;case 2:e=this._size.separateAxes?_r.createByRandomTwoGradientSeparate(this._size.gradientXMin.clone(),this._size.gradientYMin.clone(),this._size.gradientZMin.clone(),this._size.gradientXMax.clone(),this._size.gradientYMax.clone(),this._size.gradientZMax.clone()):_r.createByRandomTwoGradient(this._size.gradientMin.clone(),this._size.gradientMax.clone())}var t=new Dr(e);return t.enable=this.enable,t}}class Rr{static createByConstant(e=0){var t=new Rr;return t._type=0,t._constant=e,t}static createByRandomTwoConstant(e=0,t=0){var r=new Rr;return r._type=1,r._constantMin=e,r._constantMax=t,r}get type(){return this._type}get constant(){return this._constant}get constantMin(){return this._constantMin}get constantMax(){return this._constantMax}constructor(){this._type=0,this._constant=0,this._constantMin=0,this._constantMax=0}cloneTo(e){var t=e;t._type=this._type,t._constant=this._constant,t._constantMin=this._constantMin,t._constantMax=this._constantMax}clone(){var e=new Rr;return this.cloneTo(e),e}}class Cr{get frame(){return this._frame}get startFrame(){return this._startFrame}constructor(e,r){this.type=0,this.randomRow=!1,this.rowIndex=0,this.cycles=0,this.enableUVChannels=0,this.enable=!1,this.tiles=new t.Vector2(1,1),this.type=0,this.randomRow=!0,this.rowIndex=0,this.cycles=1,this.enableUVChannels=1,this._frame=e,this._startFrame=r}cloneTo(e){var t=e;this.tiles.cloneTo(t.tiles),t.type=this.type,t.randomRow=this.randomRow,t.rowIndex=this.rowIndex,t.cycles=this.cycles,t.enableUVChannels=this.enableUVChannels,t.enable=this.enable,this._frame.cloneTo(t._frame),this._startFrame.cloneTo(t._startFrame)}clone(){var e,t;switch(this._frame.type){case 0:e=lr.createByConstant(this._frame.constant);break;case 1:e=lr.createByOverTime(this._frame.frameOverTimeData.clone());break;case 2:e=lr.createByRandomTwoConstant(this._frame.constantMin,this._frame.constantMax);break;case 3:e=lr.createByRandomTwoOverTime(this._frame.frameOverTimeDataMin.clone(),this._frame.frameOverTimeDataMax.clone())}switch(this._startFrame.type){case 0:t=Rr.createByConstant(this._startFrame.constant);break;case 1:t=Rr.createByRandomTwoConstant(this._startFrame.constantMin,this._startFrame.constantMax)}var r=new Cr(e,t);return this.cloneTo(r),r}}class vr{get velocity(){return this._velocity}constructor(e){this.enable=!1,this.space=0,this._velocity=e}cloneTo(e){var t=e;this._velocity.cloneTo(t._velocity),t.enable=this.enable,t.space=this.space}clone(){var e;switch(this._velocity.type){case 0:e=ur.createByConstant(this._velocity.constant.clone());break;case 1:e=ur.createByGradient(this._velocity.gradientX.clone(),this._velocity.gradientY.clone(),this._velocity.gradientZ.clone());break;case 2:e=ur.createByRandomTwoConstant(this._velocity.constantMin.clone(),this._velocity.constantMax.clone());break;case 3:e=ur.createByRandomTwoGradient(this._velocity.gradientXMin.clone(),this._velocity.gradientXMax.clone(),this._velocity.gradientYMin.clone(),this._velocity.gradientYMax.clone(),this._velocity.gradientZMin.clone(),this._velocity.gradientZMax.clone())}var t=new vr(e);return t.enable=this.enable,t.space=this.space,t}}class yr{constructor(){}}yr.PARTICLE_DIRECTIONTIME=0,yr.PARTICLE_POSITION0=1,yr.PARTICLE_COLOR0=2,yr.PARTICLE_TEXTURECOORDINATE0=3,yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME=4,yr.PARTICLE_CORNERTEXTURECOORDINATE0=5,yr.PARTICLE_STARTCOLOR0=6,yr.PARTICLE_ENDCOLOR0=7,yr.PARTICLE_STARTSIZE=8,yr.PARTICLE_STARTROTATION=9,yr.PARTICLE_STARTSPEED=10,yr.PARTICLE_RANDOM0=11,yr.PARTICLE_RANDOM1=12,yr.PARTICLE_SIMULATIONWORLDPOSTION=13,yr.PARTICLE_SIMULATIONWORLDROTATION=14,yr.PARTICLE_SIMULATIONUV=15;class Ir extends yr{static get vertexDeclaration(){return Ir._vertexDeclaration}static get vertexInstanceMeshDeclaration(){return Ir._vertexInstanceMeshDeclaration}static get vertexInstanceParticleDeclaration(){return Ir._vertexInstanceParticleDeclaration}static get billboardVertexArray(){return Ir._billboardVertexArray}static get billboardIndexArray(){return Ir._billboardIndexArray}static set billboardIndexArray(e){Ir._billboardIndexArray=e}static __init__(){Ir._vertexDeclaration=new t.VertexDeclaration(168,[new t.VertexElement(0,t.VertexElementFormat.Vector4,yr.PARTICLE_CORNERTEXTURECOORDINATE0),new t.VertexElement(16,t.VertexElementFormat.Vector4,yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(32,t.VertexElementFormat.Vector4,yr.PARTICLE_DIRECTIONTIME),new t.VertexElement(48,t.VertexElementFormat.Vector4,yr.PARTICLE_STARTCOLOR0),new t.VertexElement(64,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTSIZE),new t.VertexElement(76,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTROTATION),new t.VertexElement(88,t.VertexElementFormat.Single,yr.PARTICLE_STARTSPEED),new t.VertexElement(92,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM0),new t.VertexElement(108,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM1),new t.VertexElement(124,t.VertexElementFormat.Vector3,yr.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(136,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(152,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONUV)]),Ir._vertexInstanceMeshDeclaration=new t.VertexDeclaration(16,[new t.VertexElement(0,t.VertexElementFormat.Vector4,yr.PARTICLE_CORNERTEXTURECOORDINATE0)]),Ir._vertexInstanceParticleDeclaration=new t.VertexDeclaration(152,[new t.VertexElement(0,t.VertexElementFormat.Vector4,yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(16,t.VertexElementFormat.Vector4,yr.PARTICLE_DIRECTIONTIME),new t.VertexElement(32,t.VertexElementFormat.Vector4,yr.PARTICLE_STARTCOLOR0),new t.VertexElement(48,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTSIZE),new t.VertexElement(60,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTROTATION),new t.VertexElement(72,t.VertexElementFormat.Single,yr.PARTICLE_STARTSPEED),new t.VertexElement(76,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM0),new t.VertexElement(92,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM1),new t.VertexElement(108,t.VertexElementFormat.Vector3,yr.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(120,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(136,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONUV)]),Ir._billboardIndexArray=new Uint16Array([0,2,1,0,3,2]),Ir._billboardVertexArray=new Float32Array([-.5,-.5,0,1,.5,-.5,1,1,.5,.5,1,0,-.5,.5,0,0])}get cornerTextureCoordinate(){return this._cornerTextureCoordinate}get positionStartLifeTime(){return this._positionStartLifeTime}get velocity(){return this._velocity}get startColor(){return this._startColor}get startSize(){return this._startSize}get startRotation0(){return this._startRotation0}get startRotation1(){return this._startRotation1}get startRotation2(){return this._startRotation2}get startLifeTime(){return this._startLifeTime}get time(){return this._time}get startSpeed(){return this._startSpeed}get random0(){return this._randoms0}get random1(){return this._randoms1}get simulationWorldPostion(){return this._simulationWorldPostion}constructor(e,t,r,a,n,i,s,o,l,h,c,d,_,u){super(),this._cornerTextureCoordinate=e,this._positionStartLifeTime=t,this._velocity=r,this._startColor=a,this._startSize=n,this._startRotation0=i,this._startRotation1=s,this._startRotation2=o,this._startLifeTime=l,this._time=h,this._startSpeed=c,this._randoms0=d,this._randoms1=_,this._simulationWorldPostion=u}}class Mr extends yr{static __init__(){Mr._vertexDeclaration=new t.VertexDeclaration(188,[new t.VertexElement(0,t.VertexElementFormat.Vector3,yr.PARTICLE_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector4,yr.PARTICLE_COLOR0),new t.VertexElement(28,t.VertexElementFormat.Vector2,yr.PARTICLE_TEXTURECOORDINATE0),new t.VertexElement(36,t.VertexElementFormat.Vector4,yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(52,t.VertexElementFormat.Vector4,yr.PARTICLE_DIRECTIONTIME),new t.VertexElement(68,t.VertexElementFormat.Vector4,yr.PARTICLE_STARTCOLOR0),new t.VertexElement(84,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTSIZE),new t.VertexElement(96,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTROTATION),new t.VertexElement(108,t.VertexElementFormat.Single,yr.PARTICLE_STARTSPEED),new t.VertexElement(112,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM0),new t.VertexElement(128,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM1),new t.VertexElement(144,t.VertexElementFormat.Vector3,yr.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(156,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(172,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONUV)]),Mr._vertexInstanceMeshDeclaration=new t.VertexDeclaration(36,[new t.VertexElement(0,t.VertexElementFormat.Vector3,yr.PARTICLE_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector4,yr.PARTICLE_COLOR0),new t.VertexElement(28,t.VertexElementFormat.Vector2,yr.PARTICLE_TEXTURECOORDINATE0)]),Mr._vertexInstanceParticleDeclaration=new t.VertexDeclaration(152,[new t.VertexElement(0,t.VertexElementFormat.Vector4,yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),new t.VertexElement(16,t.VertexElementFormat.Vector4,yr.PARTICLE_DIRECTIONTIME),new t.VertexElement(32,t.VertexElementFormat.Vector4,yr.PARTICLE_STARTCOLOR0),new t.VertexElement(48,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTSIZE),new t.VertexElement(60,t.VertexElementFormat.Vector3,yr.PARTICLE_STARTROTATION),new t.VertexElement(72,t.VertexElementFormat.Single,yr.PARTICLE_STARTSPEED),new t.VertexElement(76,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM0),new t.VertexElement(92,t.VertexElementFormat.Vector4,yr.PARTICLE_RANDOM1),new t.VertexElement(108,t.VertexElementFormat.Vector3,yr.PARTICLE_SIMULATIONWORLDPOSTION),new t.VertexElement(120,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONWORLDROTATION),new t.VertexElement(136,t.VertexElementFormat.Vector4,yr.PARTICLE_SIMULATIONUV)])}static get vertexDeclaration(){return Mr._vertexDeclaration}static get vertexInstanceMeshDeclaration(){return Mr._vertexInstanceMeshDeclaration}static get vertexInstanceParticleDeclaration(){return Mr._vertexInstanceParticleDeclaration}get cornerTextureCoordinate(){return this._cornerTextureCoordinate}get position(){return this._positionStartLifeTime}get velocity(){return this._velocity}get startColor(){return this._startColor}get startSize(){return this._startSize}get startRotation0(){return this._startRotation0}get startRotation1(){return this._startRotation1}get startRotation2(){return this._startRotation2}get startLifeTime(){return this._startLifeTime}get time(){return this._time}get startSpeed(){return this._startSpeed}get random0(){return this._randoms0}get random1(){return this._randoms1}get simulationWorldPostion(){return this._simulationWorldPostion}constructor(e,t,r,a,n,i,s,o,l,h,c,d,_,u){super(),this._cornerTextureCoordinate=e,this._positionStartLifeTime=t,this._velocity=r,this._startColor=a,this._startSize=n,this._startRotation0=i,this._startRotation1=s,this._startRotation2=o,this._startLifeTime=l,this._time=h,this._startSpeed=c,this._randoms0=d,this._randoms1=_,this._simulationWorldPostion=u}}class Lr{static getFloatFromInt(e){return 1/8388607*(8388607&e)}static getByteFromInt(e){return(8388607&e)>>>15}get seed(){return this.seeds[0]}set seed(e){this.seeds[0]=e,this.seeds[1]=1812433253*this.seeds[0]+1,this.seeds[2]=1812433253*this.seeds[1]+1,this.seeds[3]=1812433253*this.seeds[2]+1}constructor(e){this._temp=new Uint32Array(1),this.seeds=new Uint32Array(4),this.seeds[0]=e,this.seeds[1]=1812433253*this.seeds[0]+1,this.seeds[2]=1812433253*this.seeds[1]+1,this.seeds[3]=1812433253*this.seeds[2]+1}getUint(){return this._temp[0]=this.seeds[0]^this.seeds[0]<<11,this.seeds[0]=this.seeds[1],this.seeds[1]=this.seeds[2],this.seeds[2]=this.seeds[3],this.seeds[3]=this.seeds[3]^this.seeds[3]>>>19^this._temp[0]^this._temp[0]>>>8,this.seeds[3]}getFloat(){return this.getUint(),(8388607&this.seeds[3])*(1/8388607)}getSignedFloat(){return 2*this.getFloat()-1}}class Or{static __init__(){Or.SHADERDEFINE_RENDERMODE_BILLBOARD=t.Shader3D.getDefineByName("SPHERHBILLBOARD"),Or.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD=t.Shader3D.getDefineByName("STRETCHEDBILLBOARD"),Or.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD=t.Shader3D.getDefineByName("HORIZONTALBILLBOARD"),Or.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD=t.Shader3D.getDefineByName("VERTICALBILLBOARD"),Or.SHADERDEFINE_COLORKEYCOUNT_8=t.Shader3D.getDefineByName("COLORKEYCOUNT_8"),Or.SHADERDEFINE_COLOROVERLIFETIME=t.Shader3D.getDefineByName("COLOROVERLIFETIME"),Or.SHADERDEFINE_RANDOMCOLOROVERLIFETIME=t.Shader3D.getDefineByName("RANDOMCOLOROVERLIFETIME"),Or.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMECONSTANT"),Or.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMECURVE"),Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMERANDOMCONSTANT"),Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE=t.Shader3D.getDefineByName("VELOCITYOVERLIFETIMERANDOMCURVE"),Or.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE=t.Shader3D.getDefineByName("TEXTURESHEETANIMATIONCURVE"),Or.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE=t.Shader3D.getDefineByName("TEXTURESHEETANIMATIONRANDOMCURVE"),Or.SHADERDEFINE_ROTATIONOVERLIFETIME=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIME"),Or.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMESEPERATE"),Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMECONSTANT"),Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMECURVE"),Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMERANDOMCONSTANTS"),Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES=t.Shader3D.getDefineByName("ROTATIONOVERLIFETIMERANDOMCURVES"),Or.SHADERDEFINE_SIZEOVERLIFETIMECURVE=t.Shader3D.getDefineByName("SIZEOVERLIFETIMECURVE"),Or.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE=t.Shader3D.getDefineByName("SIZEOVERLIFETIMECURVESEPERATE"),Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES=t.Shader3D.getDefineByName("SIZEOVERLIFETIMERANDOMCURVES"),Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE=t.Shader3D.getDefineByName("SIZEOVERLIFETIMERANDOMCURVESSEPERATE"),Or.SHADERDEFINE_RENDERMODE_MESH=t.Shader3D.getDefineByName("RENDERMODE_MESH"),Or.SHADERDEFINE_SHAPE=t.Shader3D.getDefineByName("SHAPE"),Or.WORLDPOSITION=t.Shader3D.propertyNameToID("u_WorldPosition"),Or.WORLDROTATION=t.Shader3D.propertyNameToID("u_WorldRotation"),Or.POSITIONSCALE=t.Shader3D.propertyNameToID("u_PositionScale"),Or.SIZESCALE=t.Shader3D.propertyNameToID("u_SizeScale"),Or.SCALINGMODE=t.Shader3D.propertyNameToID("u_ScalingMode"),Or.GRAVITY=t.Shader3D.propertyNameToID("u_Gravity"),Or.THREEDSTARTROTATION=t.Shader3D.propertyNameToID("u_ThreeDStartRotation"),Or.STRETCHEDBILLBOARDLENGTHSCALE=t.Shader3D.propertyNameToID("u_StretchedBillboardLengthScale"),Or.STRETCHEDBILLBOARDSPEEDSCALE=t.Shader3D.propertyNameToID("u_StretchedBillboardSpeedScale"),Or.SIMULATIONSPACE=t.Shader3D.propertyNameToID("u_SimulationSpace"),Or.CURRENTTIME=t.Shader3D.propertyNameToID("u_CurrentTime"),Or.DRAG=t.Shader3D.propertyNameToID("u_DragConstanct"),Or.VOLVELOCITYCONST=t.Shader3D.propertyNameToID("u_VOLVelocityConst"),Or.VOLVELOCITYGRADIENTX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientX"),Or.VOLVELOCITYGRADIENTY=t.Shader3D.propertyNameToID("u_VOLVelocityGradientY"),Or.VOLVELOCITYGRADIENTZ=t.Shader3D.propertyNameToID("u_VOLVelocityGradientZ"),Or.VOLVELOCITYCONSTMAX=t.Shader3D.propertyNameToID("u_VOLVelocityConstMax"),Or.VOLVELOCITYGRADIENTXMAX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientMaxX"),Or.VOLVELOCITYGRADIENTYMAX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientMaxY"),Or.VOLVELOCITYGRADIENTZMAX=t.Shader3D.propertyNameToID("u_VOLVelocityGradientMaxZ"),Or.VOLSPACETYPE=t.Shader3D.propertyNameToID("u_VOLSpaceType"),Or.COLOROVERLIFEGRADIENTALPHAS=t.Shader3D.propertyNameToID("u_ColorOverLifeGradientAlphas"),Or.COLOROVERLIFEGRADIENTCOLORS=t.Shader3D.propertyNameToID("u_ColorOverLifeGradientColors"),Or.COLOROVERLIFEGRADIENTRANGES=t.Shader3D.propertyNameToID("u_ColorOverLifeGradientRanges"),Or.MAXCOLOROVERLIFEGRADIENTALPHAS=t.Shader3D.propertyNameToID("u_MaxColorOverLifeGradientAlphas"),Or.MAXCOLOROVERLIFEGRADIENTCOLORS=t.Shader3D.propertyNameToID("u_MaxColorOverLifeGradientColors"),Or.MAXCOLOROVERLIFEGRADIENTRANGES=t.Shader3D.propertyNameToID("u_MaxColorOverLifeGradientRanges"),Or.SOLSIZEGRADIENT=t.Shader3D.propertyNameToID("u_SOLSizeGradient"),Or.SOLSIZEGRADIENTX=t.Shader3D.propertyNameToID("u_SOLSizeGradientX"),Or.SOLSIZEGRADIENTY=t.Shader3D.propertyNameToID("u_SOLSizeGradientY"),Or.SOLSizeGradientZ=t.Shader3D.propertyNameToID("u_SOLSizeGradientZ"),Or.SOLSizeGradientMax=t.Shader3D.propertyNameToID("u_SOLSizeGradientMax"),Or.SOLSIZEGRADIENTXMAX=t.Shader3D.propertyNameToID("u_SOLSizeGradientMaxX"),Or.SOLSIZEGRADIENTYMAX=t.Shader3D.propertyNameToID("u_SOLSizeGradientMaxY"),Or.SOLSizeGradientZMAX=t.Shader3D.propertyNameToID("u_SOLSizeGradientMaxZ"),Or.ROLANGULARVELOCITYCONST=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConst"),Or.ROLANGULARVELOCITYCONSTSEPRARATE=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConstSeprarate"),Or.ROLANGULARVELOCITYGRADIENT=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradient"),Or.ROLANGULARVELOCITYGRADIENTX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientX"),Or.ROLANGULARVELOCITYGRADIENTY=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientY"),Or.ROLANGULARVELOCITYGRADIENTZ=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientZ"),Or.ROLANGULARVELOCITYCONSTMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConstMax"),Or.ROLANGULARVELOCITYCONSTMAXSEPRARATE=t.Shader3D.propertyNameToID("u_ROLAngularVelocityConstMaxSeprarate"),Or.ROLANGULARVELOCITYGRADIENTMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMax"),Or.ROLANGULARVELOCITYGRADIENTXMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxX"),Or.ROLANGULARVELOCITYGRADIENTYMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxY"),Or.ROLANGULARVELOCITYGRADIENTZMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxZ"),Or.ROLANGULARVELOCITYGRADIENTWMAX=t.Shader3D.propertyNameToID("u_ROLAngularVelocityGradientMaxW"),Or.TEXTURESHEETANIMATIONCYCLES=t.Shader3D.propertyNameToID("u_TSACycles"),Or.TEXTURESHEETANIMATIONSUBUVLENGTH=t.Shader3D.propertyNameToID("u_TSASubUVLength"),Or.TEXTURESHEETANIMATIONGRADIENTUVS=t.Shader3D.propertyNameToID("u_TSAGradientUVs"),Or.TEXTURESHEETANIMATIONGRADIENTMAXUVS=t.Shader3D.propertyNameToID("u_TSAMaxGradientUVs");let e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(Or.WORLDPOSITION,"u_WorldPosition"),e.addShaderUniform(Or.WORLDROTATION,"u_WorldRotation"),e.addShaderUniform(Or.POSITIONSCALE,"u_PositionScale"),e.addShaderUniform(Or.SIZESCALE,"u_SizeScale"),e.addShaderUniform(Or.SCALINGMODE,"u_ScalingMode"),e.addShaderUniform(Or.GRAVITY,"u_Gravity"),e.addShaderUniform(Or.THREEDSTARTROTATION,"u_ThreeDStartRotation"),e.addShaderUniform(Or.STRETCHEDBILLBOARDLENGTHSCALE,"u_StretchedBillboardLengthScale"),e.addShaderUniform(Or.STRETCHEDBILLBOARDSPEEDSCALE,"u_StretchedBillboardSpeedScale"),e.addShaderUniform(Or.SIMULATIONSPACE,"u_SimulationSpace"),e.addShaderUniform(Or.CURRENTTIME,"u_CurrentTime"),e.addShaderUniform(Or.COLOROVERLIFEGRADIENTALPHAS,"u_ColorOverLifeGradientAlphas"),e.addShaderUniform(Or.COLOROVERLIFEGRADIENTCOLORS,"u_ColorOverLifeGradientColors"),e.addShaderUniform(Or.COLOROVERLIFEGRADIENTRANGES,"u_ColorOverLifeGradientRanges"),e.addShaderUniform(Or.MAXCOLOROVERLIFEGRADIENTALPHAS,"u_MaxColorOverLifeGradientAlphas"),e.addShaderUniform(Or.MAXCOLOROVERLIFEGRADIENTCOLORS,"u_MaxColorOverLifeGradientColors"),e.addShaderUniform(Or.MAXCOLOROVERLIFEGRADIENTRANGES,"u_MaxColorOverLifeGradientRanges"),e.addShaderUniform(Or.VOLVELOCITYCONST,"u_VOLVelocityConst"),e.addShaderUniform(Or.VOLVELOCITYGRADIENTX,"u_VOLVelocityGradientX"),e.addShaderUniform(Or.VOLVELOCITYGRADIENTY,"u_VOLVelocityGradientY"),e.addShaderUniform(Or.VOLVELOCITYGRADIENTZ,"u_VOLVelocityGradientZ"),e.addShaderUniform(Or.VOLVELOCITYCONSTMAX,"u_VOLVelocityConstMax"),e.addShaderUniform(Or.VOLVELOCITYGRADIENTXMAX,"u_VOLVelocityGradientMaxX"),e.addShaderUniform(Or.VOLVELOCITYGRADIENTYMAX,"u_VOLVelocityGradientMaxY"),e.addShaderUniform(Or.VOLVELOCITYGRADIENTZMAX,"u_VOLVelocityGradientMaxZ"),e.addShaderUniform(Or.VOLSPACETYPE,"u_VOLSpaceType"),e.addShaderUniform(Or.SOLSIZEGRADIENT,"u_SOLSizeGradient"),e.addShaderUniform(Or.SOLSIZEGRADIENTX,"u_SOLSizeGradientX"),e.addShaderUniform(Or.SOLSIZEGRADIENTY,"u_SOLSizeGradientY"),e.addShaderUniform(Or.SOLSizeGradientZ,"u_SOLSizeGradientZ"),e.addShaderUniform(Or.SOLSizeGradientMax,"u_SOLSizeGradientMax"),e.addShaderUniform(Or.SOLSIZEGRADIENTXMAX,"u_SOLSizeGradientMaxX"),e.addShaderUniform(Or.SOLSIZEGRADIENTYMAX,"u_SOLSizeGradientMaxY"),e.addShaderUniform(Or.SOLSizeGradientZMAX,"u_SOLSizeGradientMaxZ"),e.addShaderUniform(Or.ROLANGULARVELOCITYCONST,"u_ROLAngularVelocityConst"),e.addShaderUniform(Or.ROLANGULARVELOCITYCONSTSEPRARATE,"u_ROLAngularVelocityConstSeprarate"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENT,"u_ROLAngularVelocityGradient"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTX,"u_ROLAngularVelocityGradientX"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTY,"u_ROLAngularVelocityGradientY"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTZ,"u_ROLAngularVelocityGradientZ"),e.addShaderUniform(Or.ROLANGULARVELOCITYCONSTMAX,"u_ROLAngularVelocityConstMax"),e.addShaderUniform(Or.ROLANGULARVELOCITYCONSTMAXSEPRARATE,"u_ROLAngularVelocityConstMaxSeprarate"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTMAX,"u_ROLAngularVelocityGradientMax"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTXMAX,"u_ROLAngularVelocityGradientMaxX"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTYMAX,"u_ROLAngularVelocityGradientMaxY"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTZMAX,"u_ROLAngularVelocityGradientMaxZ"),e.addShaderUniform(Or.ROLANGULARVELOCITYGRADIENTWMAX,"u_ROLAngularVelocityGradientMaxW"),e.addShaderUniform(Or.TEXTURESHEETANIMATIONCYCLES,"u_TSACycles"),e.addShaderUniform(Or.TEXTURESHEETANIMATIONSUBUVLENGTH,"u_TSASubUVLength"),e.addShaderUniform(Or.TEXTURESHEETANIMATIONGRADIENTUVS,"u_TSAGradientUVs"),e.addShaderUniform(Or.TEXTURESHEETANIMATIONGRADIENTMAXUVS,"u_TSAMaxGradientUVs"),e.addShaderUniform(Or.DRAG,"u_DragConstanct")}}class br{constructor(){}static _getStartLifetimeFromGradient(e,r){for(var a=1,n=e.gradientCount;a<n;a++){var i=e.getKeyByIndex(a);if(i>=r){var s=e.getKeyByIndex(a-1),o=(r-s)/(i-s);return t.MathUtil.lerp(e.getValueByIndex(a-1),e.getValueByIndex(a),o)}}throw new Error("ShurikenParticleData: can't get value foam startLifeTimeGradient.")}static _randomInvertRoationArray(e,t,r,a,n){var i;a?(a.seed=n[6],i=a.getFloat(),n[6]=a.seed):i=Math.random(),i<r?(t.x=-e.x,t.y=-e.y,t.z=-e.z):(t.x=e.x,t.y=e.y,t.z=e.z)}static _randomInvertRoation(e,t,r,a){var n;return r?(r.seed=a[6],n=r.getFloat(),a[6]=r.seed):n=Math.random(),n<t&&(e=-e),e}static create(e,r){var a=e.autoRandomSeed,n=e._rand,i=e._randomSeeds;switch(e.startColorType){case 0:var s=e.startColorConstant;br.startColor.x=s.x,br.startColor.y=s.y,br.startColor.z=s.z,br.startColor.w=s.w;break;case 2:a?t.Vector4.lerp(e.startColorConstantMin,e.startColorConstantMax,Math.random(),br.startColor):(n.seed=i[3],t.Vector4.lerp(e.startColorConstantMin,e.startColorConstantMax,n.getFloat(),br.startColor),i[3]=n.seed)}var o=e.colorOverLifetime;if(o&&o.enable){var l=o.color;switch(l.type){case 0:br.startColor.x=br.startColor.x*l.constant.x,br.startColor.y=br.startColor.y*l.constant.y,br.startColor.z=br.startColor.z*l.constant.z,br.startColor.w=br.startColor.w*l.constant.w;break;case 2:var h;a?h=Math.random():(n.seed=i[10],h=n.getFloat(),i[10]=n.seed);var c=l.constantMin,d=l.constantMax;br.startColor.x=br.startColor.x*t.MathUtil.lerp(c.x,d.x,h),br.startColor.y=br.startColor.y*t.MathUtil.lerp(c.y,d.y,h),br.startColor.z=br.startColor.z*t.MathUtil.lerp(c.z,d.z,h),br.startColor.w=br.startColor.w*t.MathUtil.lerp(c.w,d.w,h)}}var _=br.startSize;switch(e.startSizeType){case 0:if(e.threeDStartSize){var u=e.startSizeConstantSeparate;_[0]=u.x,_[1]=u.y,_[2]=u.z}else _[0]=_[1]=_[2]=e.startSizeConstant;break;case 2:if(e.threeDStartSize){var m=e.startSizeConstantMinSeparate,f=e.startSizeConstantMaxSeparate;a?(_[0]=t.MathUtil.lerp(m.x,f.x,Math.random()),_[1]=t.MathUtil.lerp(m.y,f.y,Math.random()),_[2]=t.MathUtil.lerp(m.z,f.z,Math.random())):(n.seed=i[4],_[0]=t.MathUtil.lerp(m.x,f.x,n.getFloat()),_[1]=t.MathUtil.lerp(m.y,f.y,n.getFloat()),_[2]=t.MathUtil.lerp(m.z,f.z,n.getFloat()),i[4]=n.seed)}else a?_[0]=_[1]=_[2]=t.MathUtil.lerp(e.startSizeConstantMin,e.startSizeConstantMax,Math.random()):(n.seed=i[4],_[0]=_[1]=_[2]=t.MathUtil.lerp(e.startSizeConstantMin,e.startSizeConstantMax,n.getFloat()),i[4]=n.seed)}var g=e.sizeOverLifetime;if(g&&g.enable&&1===g.size.type){var p,S=g.size;if(S.separateAxes)a?(_[0]=_[0]*t.MathUtil.lerp(S.constantMinSeparate.x,S.constantMaxSeparate.x,Math.random()),_[1]=_[1]*t.MathUtil.lerp(S.constantMinSeparate.y,S.constantMaxSeparate.y,Math.random()),_[2]=_[2]*t.MathUtil.lerp(S.constantMinSeparate.z,S.constantMaxSeparate.z,Math.random())):(n.seed=i[11],_[0]=_[0]*t.MathUtil.lerp(S.constantMinSeparate.x,S.constantMaxSeparate.x,n.getFloat()),_[1]=_[1]*t.MathUtil.lerp(S.constantMinSeparate.y,S.constantMaxSeparate.y,n.getFloat()),_[2]=_[2]*t.MathUtil.lerp(S.constantMinSeparate.z,S.constantMaxSeparate.z,n.getFloat()),i[11]=n.seed);else a?p=t.MathUtil.lerp(S.constantMin,S.constantMax,Math.random()):(n.seed=i[11],p=t.MathUtil.lerp(S.constantMin,S.constantMax,n.getFloat()),i[11]=n.seed),_[0]=_[0]*p,_[1]=_[1]*p,_[2]=_[2]*p}var T=r.renderMode;if(1!==T)switch(e.startRotationType){case 0:if(e.threeDStartRotation){var E=e.startRotationConstantSeparate,A=br._tempVector30;br._randomInvertRoationArray(E,A,e.randomizeRotationDirection,a?null:n,i),br.startRotation[0]=A.x,br.startRotation[1]=A.y,br.startRotation[2]=4!==T?-A.z:A.z}else br.startRotation[0]=br._randomInvertRoation(e.startRotationConstant,e.randomizeRotationDirection,a?null:n,i),br.startRotation[1]=0,br.startRotation[2]=0;break;case 2:if(e.threeDStartRotation){var x=e.startRotationConstantMinSeparate,D=e.startRotationConstantMaxSeparate,R=br._tempVector30;a?(R.x=t.MathUtil.lerp(x.x,D.x,Math.random()),R.y=t.MathUtil.lerp(x.y,D.y,Math.random()),R.z=t.MathUtil.lerp(x.z,D.z,Math.random())):(n.seed=i[5],R.x=t.MathUtil.lerp(x.x,D.x,n.getFloat()),R.y=t.MathUtil.lerp(x.y,D.y,n.getFloat()),R.z=t.MathUtil.lerp(x.z,D.z,n.getFloat()),i[5]=n.seed),br._randomInvertRoationArray(R,R,e.randomizeRotationDirection,a?null:n,i),br.startRotation[0]=R.x,br.startRotation[1]=R.y,br.startRotation[2]=4!==T?-R.z:R.z}else a?br.startRotation[0]=br._randomInvertRoation(t.MathUtil.lerp(e.startRotationConstantMin,e.startRotationConstantMax,Math.random()),e.randomizeRotationDirection,a?null:n,i):(n.seed=i[5],br.startRotation[0]=br._randomInvertRoation(t.MathUtil.lerp(e.startRotationConstantMin,e.startRotationConstantMax,n.getFloat()),e.randomizeRotationDirection,a?null:n,i),i[5]=n.seed)}switch(e.startLifetimeType){case 0:br.startLifeTime=e.startLifetimeConstant;break;case 1:br.startLifeTime=br._getStartLifetimeFromGradient(e.startLifeTimeGradient,e.emissionTime);break;case 2:a?br.startLifeTime=t.MathUtil.lerp(e.startLifetimeConstantMin,e.startLifetimeConstantMax,Math.random()):(n.seed=i[7],br.startLifeTime=t.MathUtil.lerp(e.startLifetimeConstantMin,e.startLifetimeConstantMax,n.getFloat()),i[7]=n.seed);break;case 3:var C=e.emissionTime;a?br.startLifeTime=t.MathUtil.lerp(br._getStartLifetimeFromGradient(e.startLifeTimeGradientMin,C),br._getStartLifetimeFromGradient(e.startLifeTimeGradientMax,C),Math.random()):(n.seed=i[7],br.startLifeTime=t.MathUtil.lerp(br._getStartLifetimeFromGradient(e.startLifeTimeGradientMin,C),br._getStartLifetimeFromGradient(e.startLifeTimeGradientMax,C),n.getFloat()),i[7]=n.seed)}var v=e.textureSheetAnimation;if(v&&v.enable){var y,I=v.tiles,M=I.x,L=I.y,O=1/M,b=1/L,w=v.startFrame;switch(w.type){case 0:y=w.constant;break;case 1:a?y=t.MathUtil.lerp(w.constantMin,w.constantMax,Math.random()):(n.seed=i[14],y=t.MathUtil.lerp(w.constantMin,w.constantMax,n.getFloat()),i[14]=n.seed)}var B=v.frame,N=v.cycles;switch(B.type){case 0:y+=B.constant*N;break;case 2:a?y+=t.MathUtil.lerp(B.constantMin,B.constantMax,Math.random())*N:(n.seed=i[15],y+=t.MathUtil.lerp(B.constantMin,B.constantMax,n.getFloat())*N,i[15]=n.seed)}var V=0;switch(v.type){case 0:V=Math.floor(y/M);break;case 1:v.randomRow?a?V=Math.floor(Math.random()*L):(n.seed=i[13],V=Math.floor(n.getFloat()*L),i[13]=n.seed):V=v.rowIndex}var P=Math.floor(y%M);br.startUVInfo=br.startUVInfo,br.startUVInfo[0]=O,br.startUVInfo[1]=b,br.startUVInfo[2]=P*O,br.startUVInfo[3]=V*b}else br.startUVInfo=br.startUVInfo,br.startUVInfo[0]=1,br.startUVInfo[1]=1,br.startUVInfo[2]=0,br.startUVInfo[3]=0}}br._tempVector30=new t.Vector3,br.startColor=new t.Vector4,br.startSize=new Float32Array(3),br.startRotation=new Float32Array(3),br.startUVInfo=new Float32Array(4);class wr extends ke{get maxParticles(){return this._bufferMaxParticles-1}set maxParticles(e){var t=e+1;t!==this._bufferMaxParticles&&(this._bufferMaxParticles=t,this._initBufferDatas()),this._updateParticlesSimulationRestart(0)}get emission(){return this._emission}get aliveParticleCount(){return this._firstNewElement>=this._firstRetiredElement?this._firstNewElement-this._firstRetiredElement:this._bufferMaxParticles-this._firstRetiredElement+this._firstNewElement}get emissionTime(){return this._emissionTime>this.duration?this.duration:this._emissionTime}get shape(){return this._shape}set shape(e){this._shape!==e&&(e&&e.enable?this._ownerRender._shaderValues.addDefine(Or.SHADERDEFINE_SHAPE):this._ownerRender._shaderValues.removeDefine(Or.SHADERDEFINE_SHAPE),this._shape=e)}get isAlive(){return!!(this._isPlaying||this.aliveParticleCount>0)}get isEmitting(){return this._isEmitting}get isPlaying(){return this._isPlaying}get isPaused(){return this._isPaused}get startLifetimeType(){return this._startLifetimeType}set startLifetimeType(e){var t,r;switch(this.startLifetimeType){case 0:this._maxStartLifetime=this.startLifetimeConstant;break;case 1:this._maxStartLifetime=-Number.MAX_VALUE;var a=a;for(t=0,r=a.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,a.getValueByIndex(t));break;case 2:this._maxStartLifetime=Math.max(this.startLifetimeConstantMin,this.startLifetimeConstantMax);break;case 3:this._maxStartLifetime=-Number.MAX_VALUE;var n=n;for(t=0,r=n.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,n.getValueByIndex(t));var i=i;for(t=0,r=i.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,i.getValueByIndex(t))}this._startLifetimeType=e}get startLifetimeConstant(){return this._startLifetimeConstant}set startLifetimeConstant(e){0===this._startLifetimeType&&(this._maxStartLifetime=e),this._startLifetimeConstant=e}get startLifeTimeGradient(){return this._startLifeTimeGradient}set startLifeTimeGradient(e){if(1===this._startLifetimeType){this._maxStartLifetime=-Number.MAX_VALUE;for(var t=0,r=e.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,e.getValueByIndex(t))}this._startLifeTimeGradient=e}get startLifetimeConstantMin(){return this._startLifetimeConstantMin}set startLifetimeConstantMin(e){2===this._startLifetimeType&&(this._maxStartLifetime=Math.max(e,this._startLifetimeConstantMax)),this._startLifetimeConstantMin=e}get startLifetimeConstantMax(){return this._startLifetimeConstantMax}set startLifetimeConstantMax(e){2===this._startLifetimeType&&(this._maxStartLifetime=Math.max(this._startLifetimeConstantMin,e)),this._startLifetimeConstantMax=e}get startLifeTimeGradientMin(){return this._startLifeTimeGradientMin}set startLifeTimeGradientMin(e){if(3===this._startLifetimeType){var t,r;for(this._maxStartLifetime=-Number.MAX_VALUE,t=0,r=e.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,e.getValueByIndex(t));for(t=0,r=this._startLifeTimeGradientMax.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,this._startLifeTimeGradientMax.getValueByIndex(t))}this._startLifeTimeGradientMin=e}get startLifeTimeGradientMax(){return this._startLifeTimeGradientMax}set startLifeTimeGradientMax(e){if(3===this._startLifetimeType){var t,r;for(this._maxStartLifetime=-Number.MAX_VALUE,t=0,r=this._startLifeTimeGradientMin.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,this._startLifeTimeGradientMin.getValueByIndex(t));for(t=0,r=e.gradientCount;t<r;t++)this._maxStartLifetime=Math.max(this._maxStartLifetime,e.getValueByIndex(t))}this._startLifeTimeGradientMax=e}get velocityOverLifetime(){return this._velocityOverLifetime}set velocityOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var r=e.velocity,a=r.type;if(e.enable)switch(a){case 0:t.addDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT);break;case 1:t.addDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE);break;case 2:t.addDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT);break;case 3:t.addDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE)}else t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT),t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);switch(a){case 0:t.setVector3(Or.VOLVELOCITYCONST,r.constant);break;case 1:t.setBuffer(Or.VOLVELOCITYGRADIENTX,r.gradientX._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTY,r.gradientY._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTZ,r.gradientZ._elements);break;case 2:t.setVector3(Or.VOLVELOCITYCONST,r.constantMin),t.setVector3(Or.VOLVELOCITYCONSTMAX,r.constantMax);break;case 3:t.setBuffer(Or.VOLVELOCITYGRADIENTX,r.gradientXMin._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTXMAX,r.gradientXMax._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTY,r.gradientYMin._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTYMAX,r.gradientYMax._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTZ,r.gradientZMin._elements),t.setBuffer(Or.VOLVELOCITYGRADIENTZMAX,r.gradientZMax._elements)}t.setInt(Or.VOLSPACETYPE,e.space)}else t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT),t.removeDefine(Or.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);this._velocityOverLifetime=e}get colorOverLifetime(){return this._colorOverLifetime}set colorOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var r=e.color;if(e.enable)switch(r.type){case 1:t.addDefine(Or.SHADERDEFINE_COLOROVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);break;case 3:t.addDefine(Or.SHADERDEFINE_RANDOMCOLOROVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_COLOROVERLIFETIME)}else t.removeDefine(Or.SHADERDEFINE_COLOROVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);switch(r.type){case 1:var a=r.gradient;t.setBuffer(Or.COLOROVERLIFEGRADIENTALPHAS,a._alphaElements),t.setBuffer(Or.COLOROVERLIFEGRADIENTCOLORS,a._rgbElements);let e=a._keyRanges;e.setValue(1,0,1,0);for(let t=0;t<a.colorRGBKeysCount;t++){let r=a._rgbElements[4*t];e.x=Math.min(e.x,r),e.y=Math.max(e.y,r)}for(let t=0;t<a.colorAlphaKeysCount;t++){let r=a._alphaElements[2*t];e.z=Math.min(e.z,r),e.w=Math.max(e.w,r)}t.setVector(Or.COLOROVERLIFEGRADIENTRANGES,e),8==a.maxColorAlphaKeysCount?t.addDefine(Or.SHADERDEFINE_COLORKEYCOUNT_8):t.removeDefine(Or.SHADERDEFINE_COLORKEYCOUNT_8);break;case 3:var n=r.gradientMin,i=r.gradientMax;t.setBuffer(Or.COLOROVERLIFEGRADIENTALPHAS,n._alphaElements),t.setBuffer(Or.COLOROVERLIFEGRADIENTCOLORS,n._rgbElements),t.setBuffer(Or.MAXCOLOROVERLIFEGRADIENTALPHAS,i._alphaElements),t.setBuffer(Or.MAXCOLOROVERLIFEGRADIENTCOLORS,i._rgbElements);let s=n._keyRanges;s.setValue(1,0,1,0);for(let e=0;e<n.colorRGBKeysCount;e++){let t=n._rgbElements[4*e];s.x=Math.min(s.x,t),s.y=Math.max(s.y,t)}for(let e=0;e<n.colorAlphaKeysCount;e++){let t=n._alphaElements[2*e];s.z=Math.min(s.z,t),s.w=Math.max(s.w,t)}t.setVector(Or.COLOROVERLIFEGRADIENTRANGES,s);let o=i._keyRanges;o.setValue(1,0,1,0);for(let e=0;e<i.colorRGBKeysCount;e++){let t=i._rgbElements[4*e];o.x=Math.min(o.x,t),o.y=Math.max(o.y,t)}for(let e=0;e<i.colorAlphaKeysCount;e++){let t=i._alphaElements[2*e];o.z=Math.min(o.z,t),o.w=Math.max(o.w,t)}t.setVector(Or.MAXCOLOROVERLIFEGRADIENTRANGES,o),8==Math.max(n.maxColorAlphaKeysCount,i.maxColorAlphaKeysCount)?t.addDefine(Or.SHADERDEFINE_COLORKEYCOUNT_8):t.removeDefine(Or.SHADERDEFINE_COLORKEYCOUNT_8)}}else t.removeDefine(Or.SHADERDEFINE_COLOROVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_RANDOMCOLOROVERLIFETIME),t.setBuffer(Or.COLOROVERLIFEGRADIENTALPHAS,a._alphaElements),t.setBuffer(Or.COLOROVERLIFEGRADIENTCOLORS,a._rgbElements),t.setBuffer(Or.COLOROVERLIFEGRADIENTALPHAS,n._alphaElements),t.setBuffer(Or.COLOROVERLIFEGRADIENTCOLORS,n._rgbElements),t.setBuffer(Or.MAXCOLOROVERLIFEGRADIENTALPHAS,i._alphaElements),t.setBuffer(Or.MAXCOLOROVERLIFEGRADIENTCOLORS,i._rgbElements);this._colorOverLifetime=e}get sizeOverLifetime(){return this._sizeOverLifetime}set sizeOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var r=e.size,a=r.separateAxes,n=r.type;if(e.enable)switch(n){case 0:a?t.addDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE):t.addDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMECURVE);break;case 2:a?t.addDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE):t.addDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES)}else t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE),t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES),t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);switch(n){case 0:a?(t.setBuffer(Or.SOLSIZEGRADIENTX,r.gradientX._elements),t.setBuffer(Or.SOLSIZEGRADIENTY,r.gradientY._elements),t.setBuffer(Or.SOLSizeGradientZ,r.gradientZ._elements)):t.setBuffer(Or.SOLSIZEGRADIENT,r.gradient._elements);break;case 2:a?(t.setBuffer(Or.SOLSIZEGRADIENTX,r.gradientXMin._elements),t.setBuffer(Or.SOLSIZEGRADIENTXMAX,r.gradientXMax._elements),t.setBuffer(Or.SOLSIZEGRADIENTY,r.gradientYMin._elements),t.setBuffer(Or.SOLSIZEGRADIENTYMAX,r.gradientYMax._elements),t.setBuffer(Or.SOLSizeGradientZ,r.gradientZMin._elements),t.setBuffer(Or.SOLSizeGradientZMAX,r.gradientZMax._elements)):(t.setBuffer(Or.SOLSIZEGRADIENT,r.gradientMin._elements),t.setBuffer(Or.SOLSizeGradientMax,r.gradientMax._elements))}}else t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE),t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES),t.removeDefine(Or.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);this._sizeOverLifetime=e}get rotationOverLifetime(){return this._rotationOverLifetime}set rotationOverLifetime(e){var t=this._ownerRender._shaderValues;if(e){var r=e.angularVelocity;if(!r)return;var a=r.separateAxes,n=r.type;if(e.enable)switch(a?(t.addDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIME)):(t.addDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE)),n){case 0:t.addDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);break;case 1:t.addDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);break;case 2:t.addDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);break;case 3:t.addDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE)}else t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);switch(n){case 0:a?t.setVector3(Or.ROLANGULARVELOCITYCONSTSEPRARATE,r.constantSeparate):t.setNumber(Or.ROLANGULARVELOCITYCONST,r.constant);break;case 1:a?(t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTX,r.gradientX._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTY,r.gradientY._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTZ,r.gradientZ._elements)):t.setBuffer(Or.ROLANGULARVELOCITYGRADIENT,r.gradient._elements);break;case 2:a?(t.setVector3(Or.ROLANGULARVELOCITYCONSTSEPRARATE,r.constantMinSeparate),t.setVector3(Or.ROLANGULARVELOCITYCONSTMAXSEPRARATE,r.constantMaxSeparate)):(t.setNumber(Or.ROLANGULARVELOCITYCONST,r.constantMin),t.setNumber(Or.ROLANGULARVELOCITYCONSTMAX,r.constantMax));break;case 3:a?(t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTX,r.gradientXMin._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTXMAX,r.gradientXMax._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTY,r.gradientYMin._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTYMAX,r.gradientYMax._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTZ,r.gradientZMin._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTZMAX,r.gradientZMax._elements)):(t.setBuffer(Or.ROLANGULARVELOCITYGRADIENT,r.gradientMin._elements),t.setBuffer(Or.ROLANGULARVELOCITYGRADIENTMAX,r.gradientMax._elements))}}else t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIME),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS),t.removeDefine(Or.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);this._rotationOverLifetime=e}get textureSheetAnimation(){return this._textureSheetAnimation}set textureSheetAnimation(e){var t=this._ownerRender._shaderValues;if(e){var r=e.frame,a=r.type;if(e.enable)switch(a){case 1:t.addDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE),t.removeDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);break;case 3:t.addDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE),t.removeDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE)}else t.removeDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE),t.removeDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);if(1===a||3===a){t.setNumber(Or.TEXTURESHEETANIMATIONCYCLES,e.cycles);var n=e.tiles,i=this._uvLength;i.x=1/n.x,i.y=1/n.y,t.setVector2(Or.TEXTURESHEETANIMATIONSUBUVLENGTH,this._uvLength)}switch(a){case 1:t.setBuffer(Or.TEXTURESHEETANIMATIONGRADIENTUVS,r.frameOverTimeData._elements);break;case 3:t.setBuffer(Or.TEXTURESHEETANIMATIONGRADIENTUVS,r.frameOverTimeDataMin._elements),t.setBuffer(Or.TEXTURESHEETANIMATIONGRADIENTMAXUVS,r.frameOverTimeDataMax._elements)}}else t.removeDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE),t.removeDefine(Or.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);this._textureSheetAnimation=e}constructor(e,r=t.MeshTopology.Triangles,a=t.DrawType.DrawElement){super(r,a),this._bounds=null,this._gravityOffset=new t.Vector2,this._customBounds=null,this._useCustomBounds=!1,this._owner=null,this._ownerRender=null,this._vertices=null,this._floatCountPerVertex=0,this._startLifeTimeIndex=0,this._timeIndex=0,this._simulationUV_Index=0,this._simulateUpdate=!1,this._firstActiveElement=0,this._firstNewElement=0,this._firstFreeElement=0,this._firstRetiredElement=0,this._drawCounter=0,this._bufferMaxParticles=0,this._emission=null,this._shape=null,this._isEmitting=!1,this._isPlaying=!1,this._isPaused=!1,this._playStartDelay=0,this._frameRateTime=0,this._emissionTime=0,this._totalDelayTime=0,this._emissionDistance=0,this._emissionLastPosition=new t.Vector3,this._burstsIndex=0,this._velocityOverLifetime=null,this._colorOverLifetime=null,this._sizeOverLifetime=null,this._rotationOverLifetime=null,this._textureSheetAnimation=null,this._startLifetimeType=0,this._startLifetimeConstant=0,this._startLifeTimeGradient=null,this._startLifetimeConstantMin=0,this._startLifetimeConstantMax=0,this._startLifeTimeGradientMin=null,this._startLifeTimeGradientMax=null,this._maxStartLifetime=0,this._uvLength=new t.Vector2,this._vertexStride=0,this._indexStride=0,this._vertexBuffer=null,this._indexBuffer=null,this._bufferState=new t.BufferState,this._updateMask=0,this._currentTime=0,this._startUpdateLoopCount=0,this._rand=null,this._randomSeeds=null,this.duration=0,this.looping=!1,this.prewarm=!1,this.startDelayType=0,this.startDelay=0,this.startDelayMin=0,this.startDelayMax=0,this.startSpeedType=0,this.startSpeedConstant=0,this.startSpeedConstantMin=0,this.startSpeedConstantMax=0,this.dragType=0,this.dragConstant=0,this.dragSpeedConstantMin=0,this.dragSpeedConstantMax=0,this.threeDStartSize=!1,this.startSizeType=0,this.startSizeConstant=0,this.startSizeConstantSeparate=null,this.startSizeConstantMin=0,this.startSizeConstantMax=0,this.startSizeConstantMinSeparate=null,this.startSizeConstantMaxSeparate=null,this.threeDStartRotation=!1,this.startRotationType=0,this.startRotationConstant=0,this.startRotationConstantSeparate=null,this.startRotationConstantMin=0,this.startRotationConstantMax=0,this.startRotationConstantMinSeparate=null,this.startRotationConstantMaxSeparate=null,this.randomizeRotationDirection=0,this.startColorType=0,this.startColorConstant=new t.Vector4(1,1,1,1),this.startColorConstantMin=new t.Vector4(0,0,0,0),this.startColorConstantMax=new t.Vector4(1,1,1,1),this.gravityModifier=0,this.simulationSpace=0,this.simulationSpeed=1,this.scaleMode=1,this.playOnAwake=!1,this.randomSeed=null,this.autoRandomSeed=!1,this.isPerformanceMode=!1,this.indexFormat=t.IndexFormat.UInt16,this._firstActiveElement=0,this._firstNewElement=0,this._firstFreeElement=0,this._firstRetiredElement=0,this._owner=e.owner,this._ownerRender=e,this._useCustomBounds=!1,this._currentTime=0,this._bounds=new _e(new t.Vector3(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),new t.Vector3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)),this.bufferState=this._bufferState=new t.BufferState,this._isEmitting=!1,this._isPlaying=!1,this._isPaused=!1,this._burstsIndex=0,this._frameRateTime=0,this._emissionTime=0,this._totalDelayTime=0,this._simulateUpdate=!1,this._bufferMaxParticles=1,this.duration=5,this.looping=!0,this.prewarm=!1,this.startDelayType=0,this.startDelay=0,this.startDelayMin=0,this.startDelayMax=0,this._startLifetimeType=0,this._startLifetimeConstant=5,this._startLifeTimeGradient=new dr,this._startLifetimeConstantMin=0,this._startLifetimeConstantMax=5,this._startLifeTimeGradientMin=new dr,this._startLifeTimeGradientMax=new dr,this._maxStartLifetime=5,this.startSpeedType=0,this.startSpeedConstant=5,this.startSpeedConstantMin=0,this.startSpeedConstantMax=5,this.dragType=0,this.dragConstant=0,this.dragSpeedConstantMin=0,this.dragSpeedConstantMax=0,this.threeDStartSize=!1,this.startSizeType=0,this.startSizeConstant=1,this.startSizeConstantSeparate=new t.Vector3(1,1,1),this.startSizeConstantMin=0,this.startSizeConstantMax=1,this.startSizeConstantMinSeparate=new t.Vector3(0,0,0),this.startSizeConstantMaxSeparate=new t.Vector3(1,1,1),this.threeDStartRotation=!1,this.startRotationType=0,this.startRotationConstant=0,this.startRotationConstantSeparate=new t.Vector3(0,0,0),this.startRotationConstantMin=0,this.startRotationConstantMax=0,this.startRotationConstantMinSeparate=new t.Vector3(0,0,0),this.startRotationConstantMaxSeparate=new t.Vector3(0,0,0),this.gravityModifier=0,this.simulationSpace=1,this.scaleMode=1,this.playOnAwake=!0,this._rand=new Lr(0),this.autoRandomSeed=!0,this.randomSeed=new Uint32Array(1),this._randomSeeds=new Uint32Array(wr._RANDOMOFFSET.length),this.isPerformanceMode=!0,this._emission=new or,this._emission.enable=!0}_getVertexBuffer(e=0){return 0===e?this._vertexBuffer:null}_getIndexBuffer(){return this._indexBuffer}_generateBounds(){var r=this._ownerRender,a=this._bounds.getMin(),n=this._bounds.getMax(),i=0;switch(this.startLifetimeType){case 0:i=this._startLifetimeConstant;break;case 2:i=this._startLifetimeConstantMax}var s=0;switch(this.startSpeedType){case 0:s=this.startSpeedConstant;break;case 2:s=this.startSpeedConstantMax}var o=0;if(this.threeDStartSize)switch(this.startSizeType){case 0:o=Math.max(this.startSizeConstantSeparate.x,this.startSizeConstantSeparate.y,this.startSizeConstantSeparate.z);break;case 2:o=Math.max(this.startSizeConstantMaxSeparate.x,this.startSizeConstantMaxSeparate.y,this.startSizeConstantMaxSeparate.z)}else switch(this.startSizeType){case 0:o=this.startSizeConstant;break;case 2:o=this.startSizeConstantMax}var l=wr._tempVector30,h=wr._tempVector31,c=wr._tempVector32,d=wr._tempVector33;if(l.setValue(0,0,1),h.setValue(0,0,0),c.setValue(0,0,0),d.setValue(0,0,0),this.shape&&this.shape.enable)switch(this.shape.shapeType){case e.ParticleSystemShapeType.Sphere:var _=this.shape;l.setValue(1,1,1),h.setValue(1,1,1),c.setValue(_.radius,_.radius,_.radius),d.setValue(_.radius,_.radius,_.radius);break;case e.ParticleSystemShapeType.Hemisphere:var u=this.shape;l.setValue(1,1,1),h.setValue(1,1,1),c.setValue(u.radius,u.radius,u.radius),d.setValue(u.radius,u.radius,0);break;case e.ParticleSystemShapeType.Cone:var m=this.shape;if(0==m.emitType||1==m.emitType){var f=m.angle,g=Math.sin(f);l.setValue(g,g,1),h.setValue(g,g,0),c.setValue(m.radius,m.radius,0),d.setValue(m.radius,m.radius,0);break}if(2==m.emitType||3==m.emitType){f=m.angle,g=Math.sin(f);var p=m.length;l.setValue(g,g,1),h.setValue(g,g,0);var S=Math.tan(f),T=m.radius+p*S;c.setValue(T,T,p),d.setValue(T,T,0)}break;case e.ParticleSystemShapeType.Box:var E=this.shape;0!=this.shape.randomDirection&&(l.setValue(1,1,1),h.setValue(1,1,1)),c.setValue(E.x/2,E.y/2,E.z/2),d.setValue(E.x/2,E.y/2,E.z/2);break;case e.ParticleSystemShapeType.Circle:var A=this.shape;l.setValue(1,1,1),h.setValue(1,1,1),c.setValue(A.radius,A.radius,0),d.setValue(A.radius,A.radius,0)}var x=0,D=4==r.renderMode;switch(r.renderMode){case 0:case 1:case 2:case 3:x=wr.halfKSqrtOf2;break;case 4:var R=r.mesh.bounds;x=Math.sqrt(Math.pow(R.getExtent().x,2)+Math.pow(R.getExtent().y,2)+Math.pow(R.getExtent().z,2))}var C=wr._tempVector36;if(C.setValue(1,1,1),this.sizeOverLifetime&&this.sizeOverLifetime.enable){var v=this.sizeOverLifetime.size.getMaxSizeInGradient(D);C.setValue(v,v,v)}var y=x*o;t.Vector3.scale(C,y,C);var I=wr._tempVector34,M=wr._tempVector35;if(s>0?(t.Vector3.scale(l,s,I),t.Vector3.scale(h,s,M)):(t.Vector3.scale(l,-s,M),t.Vector3.scale(h,-s,I)),this.velocityOverLifetime&&this.velocityOverLifetime.enable){var L=this.velocityOverLifetime.velocity,O=wr._tempVector37;switch(O.setValue(0,0,0),L.type){case 0:L.constant.cloneTo(O);break;case 2:L.constantMax.cloneTo(O);break;case 1:var b=L.gradientX.getAverageValue(),w=L.gradientY.getAverageValue(),B=L.gradientZ.getAverageValue();O.setValue(b,w,B);break;case 3:var N=L.gradientXMax.getAverageValue(),V=L.gradientYMax.getAverageValue(),P=L.gradientZMax.getAverageValue();O.setValue(N,V,P)}1==this.velocityOverLifetime.space&&t.Vector3.transformV3ToV3(O,this._owner.transform.worldMatrix,O),t.Vector3.add(I,O,I),t.Vector3.subtract(M,O,M),t.Vector3.max(I,t.Vector3.ZERO,I),t.Vector3.max(M,t.Vector3.ZERO,M)}t.Vector3.scale(I,i,I),t.Vector3.scale(M,i,M);var F=this.gravityModifier;if(0!=F){var U=.5*wr.g*F*i*i,G=I.y-U,H=M.y+U;G=G>0?G:0,H=H>0?H:0,this._gravityOffset.setValue(I.y-G,H-M.y)}t.Vector3.add(I,C,n),t.Vector3.add(n,c,n),t.Vector3.add(M,C,a),t.Vector3.add(a,d,a),t.Vector3.scale(a,-1,a),this._bounds.setMin(a),this._bounds.setMax(n)}get customBounds(){return this._customBounds}set customBounds(e){e?(this._useCustomBounds=!0,this._customBounds||(this._customBounds=new _e(new t.Vector3,new t.Vector3),this._ownerRender.geometryBounds=this._customBounds),this._customBounds=e):(this._useCustomBounds=!1,this._customBounds=null,this._ownerRender.geometryBounds=null)}_simulationSupported(){return!(0==this.simulationSpace&&this.emission.emissionRateOverDistance>0)}_updateEmission(){if(this.isAlive)if(this._simulateUpdate)this._simulateUpdate=!1;else{var e=this._startUpdateLoopCount!==t.Stat.loopCount&&!this._isPaused&&this._owner._scene?this._owner._scene.timer._delta/1e3:0;e=Math.min(wr._maxElapsedTime,e*this.simulationSpeed),this._updateParticles(e)}}_updateParticles(e){(4!==this._ownerRender.renderMode||this._ownerRender.mesh)&&(this._currentTime+=e,this._retireActiveParticles(),this._freeRetiredParticles(),this._totalDelayTime+=e,this._totalDelayTime<this._playStartDelay||this._emission.enable&&this._isEmitting&&!this._isPaused&&(this._advanceTime(e,this._currentTime),this.emission.emissionRateOverDistance>0&&this._advanceDistance(this._currentTime)))}_updateParticlesSimulationRestart(e){this._firstActiveElement=0,this._firstNewElement=0,this._firstFreeElement=0,this._firstRetiredElement=0,this._burstsIndex=0,this._frameRateTime=e,this._emissionTime=0,this._emissionDistance=0,this._totalDelayTime=0,this._currentTime=e;var t=e;t<this._playStartDelay?this._totalDelayTime=t:this._emission.enable&&(this._advanceTime(e,e),this.emission.emissionRateOverDistance>0&&this._advanceDistance(this._currentTime))}_retireActiveParticles(){for(;this._firstActiveElement!=this._firstNewElement;){var e=this._firstActiveElement*this._floatCountPerVertex*this._vertexStride,t=e+this._timeIndex;if(this._currentTime-this._vertices[t]+1e-4<this._vertices[e+this._startLifeTimeIndex])break;this._vertices[t]=this._drawCounter,this._firstActiveElement++,this._firstActiveElement>=this._bufferMaxParticles&&(this._firstActiveElement=0)}}_freeRetiredParticles(){for(;this._firstRetiredElement!=this._firstActiveElement;)this._drawCounter,this._vertices[this._firstRetiredElement*this._floatCountPerVertex*this._vertexStride+this._timeIndex],this._firstRetiredElement++,this._firstRetiredElement>=this._bufferMaxParticles&&(this._firstRetiredElement=0)}_burst(e,r){for(var a=0,n=this._emission._bursts,i=n.length;this._burstsIndex<i;this._burstsIndex++){var s,o=n[this._burstsIndex],l=o.time;if(!(e<=l&&l<r))break;this.autoRandomSeed?s=t.MathUtil.lerp(o.minCount,o.maxCount,Math.random()):(this._rand.seed=this._randomSeeds[0],s=t.MathUtil.lerp(o.minCount,o.maxCount,this._rand.getFloat()),this._randomSeeds[0]=this._rand.seed),a+=s}return a}_advanceTime(e,t){var r,a=this._emissionTime;this._emissionTime+=e;var n=0;if(this._emissionTime>this.duration){if(!this.looping){for(n=Math.min(this.maxParticles-this.aliveParticleCount,n),r=0;r<n;r++)this.emit(t);return this._isPlaying=!1,void this.stop()}n+=this._burst(a,this._emissionTime),this._emissionTime-=this.duration,this._burstsIndex=0,n+=this._burst(0,this._emissionTime)}else n+=this._burst(a,this._emissionTime);for(n=Math.min(this.maxParticles-this.aliveParticleCount,n),r=0;r<n;r++)this.emit(t);var i=this.emission.emissionRate;if(i>0){var s=1/i;for(this._frameRateTime+=s,this._frameRateTime=this._currentTime-(this._currentTime-this._frameRateTime)%this._maxStartLifetime;this._frameRateTime<=t&&this.emit(this._frameRateTime);)this._frameRateTime+=s;this._frameRateTime=Math.floor(t/s)*s}}_advanceDistance(e){let r=this._owner.transform.position,a=t.Vector3.distance(r,this._emissionLastPosition),n=this.emission.emissionRateOverDistance,i=this._emissionDistance+a;if(i>1/n){let t=i*n;t=Math.floor(t),t=Math.min(this.maxParticles-this.aliveParticleCount,t);for(let r=0;r<t;r++)this.emit(e);this._emissionDistance=0}else this._emissionDistance=i;r.cloneTo(this._emissionLastPosition)}_initBufferDatas(){if(this._vertexBuffer){var e=this._vertexBuffer._byteLength+2*this._indexBuffer.indexCount;this._vertexBuffer.destroy(),this._indexBuffer.destroy(),t.Resource._addMemory(-e,-e)}var r=this._ownerRender,a=r.renderMode;if(-1!==a&&this.maxParticles>0){var n,i,s,o,l,h,c,d=0,_=(e=0,r.mesh);if(4===a){if(_){c=Mr.vertexDeclaration,this._floatCountPerVertex=c.vertexStride/4,this._simulationUV_Index=c.getVertexElementByUsage(yr.PARTICLE_SIMULATIONUV).offset/4,this._startLifeTimeIndex=12,this._timeIndex=16,this._vertexStride=_._vertexCount;var u=this._bufferMaxParticles*this._vertexStride,m=u%65535;if(Math.floor(u/65535)+1>1)throw new Error("ShurikenParticleSystem:the maxParticleCount multiply mesh vertexCount is large than 65535.");d=c.vertexStride*m,this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(d,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=c,this._vertices=new Float32Array(this._floatCountPerVertex*m),this._indexStride=_._indexBuffer.indexCount;var f=_._indexBuffer.getData(),g=this._bufferMaxParticles*this._indexStride;for(this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,g,t.BufferUsage.Static,!1),n=new Uint16Array(g),e=d+2*g,l=0,i=0;i<this._bufferMaxParticles;i++){var p=i*this._vertexStride;for(s=0,o=f.length;s<o;s++)n[l++]=p+f[s]}this._indexBuffer.setData(n),this._bufferState.applyState([this._vertexBuffer],this._indexBuffer),this.bufferState=this._bufferState}}else{for(c=Ir.vertexDeclaration,this._floatCountPerVertex=c.vertexStride/4,this._startLifeTimeIndex=7,this._simulationUV_Index=c.getVertexElementByUsage(yr.PARTICLE_SIMULATIONUV).offset/4,this._timeIndex=11,this._vertexStride=4,d=c.vertexStride*this._bufferMaxParticles*this._vertexStride,this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(d,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=c,this._vertices=new Float32Array(this._floatCountPerVertex*this._bufferMaxParticles*this._vertexStride),i=0;i<this._bufferMaxParticles;i++)h=i*this._floatCountPerVertex*this._vertexStride,this._vertices[h]=-.5,this._vertices[h+1]=-.5,this._vertices[h+2]=0,this._vertices[h+3]=1,h+=this._floatCountPerVertex,this._vertices[h]=.5,this._vertices[h+1]=-.5,this._vertices[h+2]=1,this._vertices[h+3]=1,h+=this._floatCountPerVertex,this._vertices[h]=.5,this._vertices[h+1]=.5,this._vertices[h+2]=1,this._vertices[h+3]=0,h+=this._floatCountPerVertex,this._vertices[h]=-.5,this._vertices[h+1]=.5,this._vertices[h+2]=0,this._vertices[h+3]=0;for(this._indexStride=6,this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,6*this._bufferMaxParticles,t.BufferUsage.Static,!1),n=new Uint16Array(6*this._bufferMaxParticles),i=0;i<this._bufferMaxParticles;i++){l=6*i;var S=i*this._vertexStride,T=S+2;n[l++]=S,n[l++]=T,n[l++]=S+1,n[l++]=S,n[l++]=S+3,n[l++]=T}this._indexBuffer.setData(n),e=d+6*this._bufferMaxParticles*2,this._bufferState.applyState([this._vertexBuffer],this._indexBuffer),this.bufferState=this._bufferState}t.Resource._addMemory(e,e)}}destroy(){if(super.destroy(),this._vertexBuffer){var e=this._vertexBuffer._byteLength;t.Resource._addMemory(-e,-e),this._vertexBuffer.destroy(),this._vertexBuffer=null}if(this._indexBuffer){e=this._indexBuffer._byteLength;t.Resource._addMemory(-e,-e),this._indexBuffer.destroy(),this._indexBuffer=null}this._emission.destroy(),this._bounds=null,this._customBounds=null,this._bufferState=null,this._owner=null,this._vertices=null,this._indexBuffer=null,this._emission=null,this._shape=null,this.startLifeTimeGradient=null,this.startLifeTimeGradientMin=null,this.startLifeTimeGradientMax=null,this.startSizeConstantSeparate=null,this.startSizeConstantMinSeparate=null,this.startSizeConstantMaxSeparate=null,this.startRotationConstantSeparate=null,this.startRotationConstantMinSeparate=null,this.startRotationConstantMaxSeparate=null,this.startColorConstant=null,this.startColorConstantMin=null,this.startColorConstantMax=null,this._velocityOverLifetime=null,this._colorOverLifetime=null,this._sizeOverLifetime=null,this._rotationOverLifetime=null,this._textureSheetAnimation=null}emit(e){var t=wr._tempPosition,r=wr._tempDirection;return this._shape&&this._shape.enable?this.autoRandomSeed?this._shape.generatePositionAndDirection(t,r):this._shape.generatePositionAndDirection(t,r,this._rand,this._randomSeeds):(t.x=t.y=t.z=0,r.x=r.y=0,r.z=1),this.addParticle(t,r,e)}addParticle(e,r,a){t.Vector3.normalize(r,r);var n=this._firstFreeElement+1;if(n>=this._bufferMaxParticles&&(n=0),n===this._firstRetiredElement)return!1;var i,s,o,l,h,c,d,_,u,m,f=this._owner.transform;if(br.create(this,this._ownerRender),this._currentTime-a>=br.startLifeTime)return!0;switch(0==this.simulationSpace&&(i=f.position,s=f.rotation),this.startSpeedType){case 0:o=this.startSpeedConstant;break;case 2:this.autoRandomSeed?o=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,Math.random()):(this._rand.seed=this._randomSeeds[8],o=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,this._rand.getFloat()),this._randomSeeds[8]=this._rand.seed)}var g=this._velocityOverLifetime&&this._velocityOverLifetime.enable;if(g){var p=this._velocityOverLifetime.velocity.type;2===p||3===p?this.autoRandomSeed?(l=Math.random(),h=Math.random(),c=Math.random()):(this._rand.seed=this._randomSeeds[9],l=this._rand.getFloat(),h=this._rand.getFloat(),c=this._rand.getFloat(),this._randomSeeds[9]=this._rand.seed):g=!1}else g=!1;var S=this._colorOverLifetime&&this._colorOverLifetime.enable;S?3===this._colorOverLifetime.color.type?this.autoRandomSeed?d=Math.random():(this._rand.seed=this._randomSeeds[10],d=this._rand.getFloat(),this._randomSeeds[10]=this._rand.seed):S=!1:S=!1;var T=this._sizeOverLifetime&&this._sizeOverLifetime.enable;T?3===this._sizeOverLifetime.size.type?this.autoRandomSeed?_=Math.random():(this._rand.seed=this._randomSeeds[11],_=this._rand.getFloat(),this._randomSeeds[11]=this._rand.seed):T=!1:T=!1;var E=this._rotationOverLifetime&&this._rotationOverLifetime.enable;if(E){var A=this._rotationOverLifetime.angularVelocity.type;2===A||3===A?this.autoRandomSeed?u=Math.random():(this._rand.seed=this._randomSeeds[12],u=this._rand.getFloat(),this._randomSeeds[12]=this._rand.seed):E=!1}else E=!1;var x=this._textureSheetAnimation&&this._textureSheetAnimation.enable;x?3===this._textureSheetAnimation.frame.type?this.autoRandomSeed?m=Math.random():(this._rand.seed=this._randomSeeds[15],m=this._rand.getFloat(),this._randomSeeds[15]=this._rand.seed):x=!1:x=!1;var D,R,C,v,y,I,M=this._firstFreeElement*this._floatCountPerVertex*this._vertexStride,L=br.startUVInfo[0],O=br.startUVInfo[1],b=br.startUVInfo[2],w=br.startUVInfo[3],B=this._ownerRender;if(4===B.renderMode){var N=B.mesh._vertexBuffer;D=N.getFloat32Data();var V=N.vertexDeclaration;C=V.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0)._offset/4;var P=V.getVertexElementByUsage(t.VertexMesh.MESH_COLOR0);v=P?P._offset/4:-1;var F=V.getVertexElementByUsage(t.VertexMesh.MESH_TEXTURECOORDINATE0);y=F?F._offset/4:-1,R=V.vertexStride/4,I=0}for(var U=M,G=M+this._floatCountPerVertex*this._vertexStride;U<G;U+=this._floatCountPerVertex){var H;if(4===B.renderMode){H=U;var z=R*I++,k=z+C;this._vertices[H++]=D[k++],this._vertices[H++]=D[k++],this._vertices[H++]=D[k],-1===v?(this._vertices[H++]=1,this._vertices[H++]=1,this._vertices[H++]=1,this._vertices[H++]=1):(k=z+v,this._vertices[H++]=D[k++],this._vertices[H++]=D[k++],this._vertices[H++]=D[k++],this._vertices[H++]=D[k]),-1===y?(this._vertices[H++]=0,this._vertices[H++]=0):(k=z+y,this._vertices[H++]=D[k++],this._vertices[H++]=D[k])}else H=U+4;switch(this._vertices[H++]=e.x,this._vertices[H++]=e.y,this._vertices[H++]=e.z,this._vertices[H++]=br.startLifeTime,this._vertices[H++]=r.x,this._vertices[H++]=r.y,this._vertices[H++]=r.z,this._vertices[H++]=a,this._vertices[H++]=br.startColor.x,this._vertices[H++]=br.startColor.y,this._vertices[H++]=br.startColor.z,this._vertices[H++]=br.startColor.w,this._vertices[H++]=br.startSize[0],this._vertices[H++]=br.startSize[1],this._vertices[H++]=br.startSize[2],this._vertices[H++]=br.startRotation[0],this._vertices[H++]=br.startRotation[1],this._vertices[H++]=br.startRotation[2],this._vertices[H++]=o,S&&(this._vertices[H+1]=d),T&&(this._vertices[H+2]=_),E&&(this._vertices[H+3]=u),x&&(this._vertices[H+4]=m),g&&(this._vertices[H+5]=l,this._vertices[H+6]=h,this._vertices[H+7]=c),this.simulationSpace){case 0:H+=8,this._vertices[H++]=i.x,this._vertices[H++]=i.y,this._vertices[H++]=i.z,this._vertices[H++]=s.x,this._vertices[H++]=s.y,this._vertices[H++]=s.z,this._vertices[H++]=s.w;break;case 1:break;default:throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")}H=U+this._simulationUV_Index,this._vertices[H++]=b,this._vertices[H++]=w,this._vertices[H++]=L,this._vertices[H]=O}return this._firstFreeElement=n,!0}addNewParticlesToVertexBuffer(){var e,t=this._vertexStride*this._floatCountPerVertex*4;this._firstNewElement<this._firstFreeElement?(e=this._firstNewElement*t,this._vertexBuffer.setData(this._vertices.buffer,e,e,(this._firstFreeElement-this._firstNewElement)*t)):(e=this._firstNewElement*t,this._vertexBuffer.setData(this._vertices.buffer,e,e,(this._bufferMaxParticles-this._firstNewElement)*t),this._firstFreeElement>0&&this._vertexBuffer.setData(this._vertices.buffer,0,0,this._firstFreeElement*t)),this._firstNewElement=this._firstFreeElement}_getType(){return wr._type}_prepareRender(e){return this._updateMask!=t.Stat.loopCount&&(this._updateMask=t.Stat.loopCount,this._updateEmission(),this._firstNewElement!=this._firstFreeElement&&this.addNewParticlesToVertexBuffer(),this._drawCounter++),this._firstActiveElement!=this._firstFreeElement}_updateRenderParams(e){var t;this.clearRenderParams(),this._firstActiveElement<this._firstFreeElement?(t=(this._firstFreeElement-this._firstActiveElement)*this._indexStride,this.setDrawElemenParams(t,2*this._firstActiveElement*this._indexStride)):(t=(this._bufferMaxParticles-this._firstActiveElement)*this._indexStride,this.setDrawElemenParams(t,2*this._firstActiveElement*this._indexStride),this._firstFreeElement>0&&(t=this._firstFreeElement*this._indexStride,this.setDrawElemenParams(t,0)))}play(){if(this._burstsIndex=0,this._isEmitting=!0,this._isPlaying=!0,this._isPaused=!1,this._emissionTime=0,this._emissionDistance=0,this._owner.transform.position.cloneTo(this._emissionLastPosition),this._totalDelayTime=0,!this.autoRandomSeed)for(var e=0,r=this._randomSeeds.length;e<r;e++)this._randomSeeds[e]=this.randomSeed[0]+wr._RANDOMOFFSET[e];switch(this.startDelayType){case 0:this._playStartDelay=this.startDelay;break;case 1:this.autoRandomSeed?this._playStartDelay=t.MathUtil.lerp(this.startDelayMin,this.startDelayMax,Math.random()):(this._rand.seed=this._randomSeeds[2],this._playStartDelay=t.MathUtil.lerp(this.startDelayMin,this.startDelayMax,this._rand.getFloat()),this._randomSeeds[2]=this._rand.seed);break;default:throw new Error("Utils3D: startDelayType is invalid.")}this._frameRateTime=this._currentTime+this._playStartDelay,this._startUpdateLoopCount=t.Stat.loopCount}pause(){this._isPaused=!0}simulate(e,t=!0){this._simulateUpdate=!0,t?this._updateParticlesSimulationRestart(e):(this._isPaused=!1,this._updateParticles(e)),this.pause()}stop(){this._burstsIndex=0,this._isEmitting=!1,this._emissionTime=0}cloneTo(e){var t=e;t._useCustomBounds=this._useCustomBounds,this._customBounds&&this._customBounds.cloneTo(t._customBounds),t.duration=this.duration,t.looping=this.looping,t.prewarm=this.prewarm,t.startDelayType=this.startDelayType,t.startDelay=this.startDelay,t.startDelayMin=this.startDelayMin,t.startDelayMax=this.startDelayMax,t._maxStartLifetime=this._maxStartLifetime,t.startLifetimeType=this.startLifetimeType,t.startLifetimeConstant=this.startLifetimeConstant,this.startLifeTimeGradient.cloneTo(t.startLifeTimeGradient),t.startLifetimeConstantMin=this.startLifetimeConstantMin,t.startLifetimeConstantMax=this.startLifetimeConstantMax,this.startLifeTimeGradientMin.cloneTo(t.startLifeTimeGradientMin),this.startLifeTimeGradientMax.cloneTo(t.startLifeTimeGradientMax),t.startSpeedType=this.startSpeedType,t.startSpeedConstant=this.startSpeedConstant,t.startSpeedConstantMin=this.startSpeedConstantMin,t.startSpeedConstantMax=this.startSpeedConstantMax,t.dragType=this.dragType,t.dragConstant=this.dragConstant,t.dragSpeedConstantMax=this.dragSpeedConstantMax,t.dragSpeedConstantMin=this.dragSpeedConstantMin,t.threeDStartSize=this.threeDStartSize,t.startSizeType=this.startSizeType,t.startSizeConstant=this.startSizeConstant,this.startSizeConstantSeparate.cloneTo(t.startSizeConstantSeparate),t.startSizeConstantMin=this.startSizeConstantMin,t.startSizeConstantMax=this.startSizeConstantMax,this.startSizeConstantMinSeparate.cloneTo(t.startSizeConstantMinSeparate),this.startSizeConstantMaxSeparate.cloneTo(t.startSizeConstantMaxSeparate),t.threeDStartRotation=this.threeDStartRotation,t.startRotationType=this.startRotationType,t.startRotationConstant=this.startRotationConstant,this.startRotationConstantSeparate.cloneTo(t.startRotationConstantSeparate),t.startRotationConstantMin=this.startRotationConstantMin,t.startRotationConstantMax=this.startRotationConstantMax,this.startRotationConstantMinSeparate.cloneTo(t.startRotationConstantMinSeparate),this.startRotationConstantMaxSeparate.cloneTo(t.startRotationConstantMaxSeparate),t.randomizeRotationDirection=this.randomizeRotationDirection,t.startColorType=this.startColorType,this.startColorConstant.cloneTo(t.startColorConstant),this.startColorConstantMin.cloneTo(t.startColorConstantMin),this.startColorConstantMax.cloneTo(t.startColorConstantMax),t.gravityModifier=this.gravityModifier,t.simulationSpace=this.simulationSpace,t.simulationSpeed=this.simulationSpeed,t.scaleMode=this.scaleMode,t.playOnAwake=this.playOnAwake,t.autoRandomSeed=this.autoRandomSeed,t.randomSeed[0]=this.randomSeed[0],t.maxParticles=this.maxParticles,this._emission&&(t._emission=this._emission.clone()),this.shape&&(t.shape=this.shape.clone()),this.velocityOverLifetime&&(t.velocityOverLifetime=this.velocityOverLifetime.clone()),this.colorOverLifetime&&(t.colorOverLifetime=this.colorOverLifetime.clone()),this.sizeOverLifetime&&(t.sizeOverLifetime=this.sizeOverLifetime.clone()),this.rotationOverLifetime&&(t.rotationOverLifetime=this.rotationOverLifetime.clone()),this.textureSheetAnimation&&(t.textureSheetAnimation=this.textureSheetAnimation.clone()),t.isPerformanceMode=this.isPerformanceMode,t._isEmitting=this._isEmitting,t._isPlaying=this._isPlaying,t._isPaused=this._isPaused,t._playStartDelay=this._playStartDelay,t._frameRateTime=this._frameRateTime,t._emissionTime=this._emissionTime,t._totalDelayTime=this._totalDelayTime,t._burstsIndex=this._burstsIndex}clone(){var e=new wr(null);return this.cloneTo(e),e}}wr._RANDOMOFFSET=new Uint32Array([592910910,3276756734,322376503,306581307,1793934638,3737431713,2527743459,2368504881,4085612399,3774601268,326370691,1494990940,1089181156,3159510623,2941263940,2786374529,271901988,4233252447]),wr.halfKSqrtOf2=.71,wr.g=9.8,wr._maxElapsedTime=1/3,wr._tempVector30=new t.Vector3,wr._tempVector31=new t.Vector3,wr._tempVector32=new t.Vector3,wr._tempVector33=new t.Vector3,wr._tempVector34=new t.Vector3,wr._tempVector35=new t.Vector3,wr._tempVector36=new t.Vector3,wr._tempVector37=new t.Vector3,wr._tempPosition=new t.Vector3,wr._tempDirection=new t.Vector3,wr._type=ke._typeCounter++;class Br extends wr{constructor(e){super(e,t.MeshTopology.Triangles,t.DrawType.DrawElementInstance),this._instanceParticleVertexBuffer=null,this._instanceVertex=null}_initMeshVertex(e,r){let a=r._vertexBuffer,n=a.getFloat32Data(),i=a.vertexDeclaration,s=i.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0)._offset/4,o=i.getVertexElementByUsage(t.VertexMesh.MESH_COLOR0),l=o?o._offset/4:-1,h=i.getVertexElementByUsage(t.VertexMesh.MESH_TEXTURECOORDINATE0),c=h?h._offset/4:-1,d=i.vertexStride/4,_=0,u=r.vertexCount,m=this._vertexBuffer.vertexDeclaration.vertexStride/4;for(let t=0;t<u;t++){let r=t*m,a=d*_++,i=a+s;if(e[r++]=n[i++],e[r++]=n[i++],e[r++]=n[i++],-1==l)e[r++]=1,e[r++]=1,e[r++]=1,e[r++]=1;else{let t=a+l;e[r++]=n[t++],e[r++]=n[t++],e[r++]=n[t++],e[r++]=n[t++]}if(-1==c)e[r++]=0,e[r++]=0;else{let t=a+c;e[r++]=n[t++],e[r++]=n[t++]}}}_initBufferDatas(){this._vertexBuffer&&(this._vertexBuffer.destroy(),this._instanceParticleVertexBuffer.destroy(),this._indexBuffer.destroy());let e=this._ownerRender,r=e.renderMode;if(!(-1==r||this.maxParticles<=0))if(4==r){let r=e.mesh;if(r){let e=Mr.vertexInstanceMeshDeclaration,a=Mr.vertexInstanceParticleDeclaration;this._meshIndexCount=r.indexCount,this._simulationUV_Index=a.getVertexElementByUsage(yr.PARTICLE_SIMULATIONUV).offset/4,this._floatCountPerParticleData=a.vertexStride/4,this._startLifeTimeIndex=a.getVertexElementByUsage(yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME)._offset/4+3,this._timeIndex=a.getVertexElementByUsage(yr.PARTICLE_DIRECTIONTIME)._offset/4+3;let n=r.indexCount;this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(r.indexFormat,n,t.BufferUsage.Static,!1),this._indexBuffer.setData(r._indexBuffer.getData());let i=r.vertexCount,s=e.vertexStride*i;this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(s,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=e;let o=new Float32Array(s/4);this._initMeshVertex(o,r),this._vertexBuffer.setData(o.buffer);let l=this._bufferMaxParticles*a.vertexStride;this._instanceVertex=new Float32Array(l/4),this._instanceParticleVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(l,t.BufferUsage.Dynamic,!1),this._instanceParticleVertexBuffer.vertexDeclaration=a,this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer),this._instanceParticleVertexBuffer.instanceBuffer=!0,this._bufferState.applyState([this._vertexBuffer,this._instanceParticleVertexBuffer],this._indexBuffer)}}else{let e=Ir.vertexInstanceMeshDeclaration,r=Ir.vertexInstanceParticleDeclaration;this._meshIndexCount=6,this._simulationUV_Index=r.getVertexElementByUsage(yr.PARTICLE_SIMULATIONUV).offset/4,this._floatCountPerParticleData=r.vertexStride/4,this._startLifeTimeIndex=r.getVertexElementByUsage(yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME)._offset/4+3,this._timeIndex=r.getVertexElementByUsage(yr.PARTICLE_DIRECTIONTIME)._offset/4+3;let a=Ir.billboardIndexArray,n=a.length;this._indexBuffer=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,n,t.BufferUsage.Static,!1),this._indexBuffer.setData(a);let i=this._meshIndexCount*e.vertexStride;this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(i,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=e,this._vertexBuffer.setData(Ir.billboardVertexArray.buffer);let s=this._bufferMaxParticles*r.vertexStride;this._instanceVertex=new Float32Array(s/4),this._instanceParticleVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(s,t.BufferUsage.Dynamic,!1),this._instanceParticleVertexBuffer.vertexDeclaration=r,this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer),this._instanceParticleVertexBuffer.instanceBuffer=!0,this._bufferState.applyState([this._vertexBuffer,this._instanceParticleVertexBuffer],this._indexBuffer)}}_retireActiveParticles(){let e=this._firstActiveElement;for(;this._firstActiveElement!=this._firstNewElement;){let e=this._firstActiveElement*this._floatCountPerParticleData,t=e+this._timeIndex;if(this._currentTime-this._instanceVertex[t]+1e-4<this._instanceVertex[e+this._startLifeTimeIndex])break;this._instanceVertex[t]=this._drawCounter,this._firstActiveElement++,this._firstActiveElement>=this._bufferMaxParticles&&(this._firstActiveElement=0)}if(this._firstActiveElement!=e){let e=4*this._floatCountPerParticleData;if(this._firstActiveElement<this._firstFreeElement){let t=this._firstActiveElement*e;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,(this._firstFreeElement-this._firstActiveElement)*e)}else{let t=this._firstActiveElement*e,r=this._bufferMaxParticles-this._firstActiveElement;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,r*e),this._firstFreeElement>0&&this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,r*e,0,this._firstFreeElement*e)}}}_freeRetiredParticles(){for(;this._firstRetiredElement!=this._firstActiveElement;)this._drawCounter,this._instanceVertex[this._firstRetiredElement*this._floatCountPerParticleData+this._timeIndex],this._firstRetiredElement++,this._firstRetiredElement>=this._bufferMaxParticles&&(this._firstRetiredElement=0)}addParticle(e,r,a){t.Vector3.normalize(r,r);let n=this._firstFreeElement+1;if(n>=this._bufferMaxParticles&&(n=0),n==this._firstRetiredElement)return!1;let i,s,o=this._owner.transform;if(br.create(this,this._ownerRender),this._currentTime-a>=br.startLifeTime)return!0;0==this.simulationSpace&&(i=o.position,s=o.rotation);let l,h,c,d=0;switch(this.startSpeedType){case 0:d=this.startSpeedConstant;break;case 2:this.autoRandomSeed?d=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,Math.random()):(this._rand.seed=this._randomSeeds[8],d=t.MathUtil.lerp(this.startSpeedConstantMin,this.startSpeedConstantMax,this._rand.getFloat()),this._randomSeeds[8]=this._rand.seed)}let _,u=this._velocityOverLifetime&&this._velocityOverLifetime.enable;if(u){let e=this._velocityOverLifetime.velocity.type;2==e||3==e?this.autoRandomSeed?(l=Math.random(),h=Math.random(),c=Math.random()):(this._rand.seed=this._randomSeeds[9],l=this._rand.getFloat(),h=this._rand.getFloat(),c=this._rand.getFloat(),this._randomSeeds[9]=this._rand.seed):u=!1}else u=!1;let m,f=this._colorOverLifetime&&this._colorOverLifetime.enable;if(f){3==this._colorOverLifetime.color.type?this.autoRandomSeed?_=Math.random():(this._rand.seed=this._randomSeeds[10],_=this._rand.getFloat(),this._randomSeeds[10]=this._rand.seed):f=!1}else f=!1;let g,p=this._sizeOverLifetime&&this._sizeOverLifetime.enable;if(p){3==this._sizeOverLifetime.size.type?this.autoRandomSeed?m=Math.random():(this._rand.seed=this._randomSeeds[11],m=this._rand.getFloat(),this.randomSeed[11]=this._rand.seed):p=!1}else p=!1;let S,T=this._rotationOverLifetime&&this._rotationOverLifetime.enable;if(T){let e=this._rotationOverLifetime.angularVelocity.type;2==e||3==e?this.autoRandomSeed?g=Math.random():(this._rand.seed=this._randomSeeds[12],g=this._rand.getFloat(),this._randomSeeds[12]=this._rand.seed):T=!1}else T=!1;let E=this._textureSheetAnimation&&this._textureSheetAnimation.enable;if(E){3==this._textureSheetAnimation.frame.type?this.autoRandomSeed?S=Math.random():(this._rand.seed=this._randomSeeds[15],S=this._rand.getFloat(),this._randomSeeds[15]=this._rand.seed):E=!1}else E=!1;let A=br.startUVInfo[0],x=br.startUVInfo[1],D=br.startUVInfo[2],R=br.startUVInfo[3];this._ownerRender.renderMode;let C=this._firstFreeElement*this._floatCountPerParticleData,v=C;switch(this._instanceVertex[v++]=e.x,this._instanceVertex[v++]=e.y,this._instanceVertex[v++]=e.z,this._instanceVertex[v++]=br.startLifeTime,this._instanceVertex[v++]=r.x,this._instanceVertex[v++]=r.y,this._instanceVertex[v++]=r.z,this._instanceVertex[v++]=a,this._instanceVertex[v++]=br.startColor.x,this._instanceVertex[v++]=br.startColor.y,this._instanceVertex[v++]=br.startColor.z,this._instanceVertex[v++]=br.startColor.w,this._instanceVertex[v++]=br.startSize[0],this._instanceVertex[v++]=br.startSize[1],this._instanceVertex[v++]=br.startSize[2],this._instanceVertex[v++]=br.startRotation[0],this._instanceVertex[v++]=br.startRotation[1],this._instanceVertex[v++]=br.startRotation[2],this._instanceVertex[v++]=d,f&&(this._instanceVertex[v+1]=_),p&&(this._instanceVertex[v+2]=m),T&&(this._instanceVertex[v+3]=g),E&&(this._instanceVertex[v+4]=S),u&&(this._instanceVertex[v+5]=l,this._instanceVertex[v+6]=h,this._instanceVertex[v+7]=c),this.simulationSpace){case 0:v+=8,this._instanceVertex[v++]=i.x,this._instanceVertex[v++]=i.y,this._instanceVertex[v++]=i.z,this._instanceVertex[v++]=s.x,this._instanceVertex[v++]=s.y,this._instanceVertex[v++]=s.z,this._instanceVertex[v++]=s.w;break;case 1:break;default:throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")}return v=C+this._simulationUV_Index,this._instanceVertex[v++]=D,this._instanceVertex[v++]=R,this._instanceVertex[v++]=A,this._instanceVertex[v++]=x,this._firstFreeElement=n,!0}addNewParticlesToVertexBuffer(){let e=4*this._floatCountPerParticleData;if(this._firstActiveElement<this._firstFreeElement){let t=this._firstActiveElement*e;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,(this._firstFreeElement-this._firstActiveElement)*e)}else{let t=this._firstActiveElement*e,r=this._bufferMaxParticles-this._firstActiveElement;this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,0,t,r*e),this._firstFreeElement>0&&this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer,r*e,0,this._firstFreeElement*e)}this._firstNewElement=this._firstFreeElement}_updateRenderParams(e){if(this.clearRenderParams(),this._firstActiveElement<this._firstFreeElement){let e=this._firstFreeElement-this._firstActiveElement;this.setDrawElemenParams(this._meshIndexCount,0),this.instanceCount=e}else{let e=this._bufferMaxParticles-this._firstActiveElement;this._firstFreeElement>0&&(e+=this._firstFreeElement),this.setDrawElemenParams(this._meshIndexCount,0),this.instanceCount=e}}destroy(){super.destroy(),this._indexBuffer&&this._indexBuffer.destroy(),this._vertexBuffer&&this._vertexBuffer.destroy(),this._instanceParticleVertexBuffer&&this._instanceParticleVertexBuffer.destroy(),this._instanceVertex=null,this._meshIndexCount=null,this._meshFloatCountPreVertex=null}}class Nr extends at{static __initDefine__(){Nr.SHADERDEFINE_DIFFUSEMAP=t.Shader3D.getDefineByName("DIFFUSEMAP"),Nr.SHADERDEFINE_TINTCOLOR=t.Shader3D.getDefineByName("TINTCOLOR"),Nr.SHADERDEFINE_ADDTIVEFOG=t.Shader3D.getDefineByName("ADDTIVEFOG"),Nr.DIFFUSETEXTURE=t.Shader3D.propertyNameToID("u_texture"),Nr.TINTCOLOR=t.Shader3D.propertyNameToID("u_Tintcolor"),Nr.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset")}get color(){return this._shaderValues.getColor(Nr.TINTCOLOR)}set color(e){e?this._shaderValues.addDefine(Nr.SHADERDEFINE_TINTCOLOR):this._shaderValues.removeDefine(Nr.SHADERDEFINE_TINTCOLOR),this._shaderValues.setColor(Nr.TINTCOLOR,e)}get tilingOffset(){return this._shaderValues.getVector(Nr.TILINGOFFSET)}set tilingOffset(e){e?this._shaderValues.setVector(Nr.TILINGOFFSET,e):this._shaderValues.getVector(Nr.TILINGOFFSET).setValue(1,1,0,0)}get texture(){return this._shaderValues.getTexture(Nr.DIFFUSETEXTURE)}set texture(e){e?this._shaderValues.addDefine(Nr.SHADERDEFINE_DIFFUSEMAP):this._shaderValues.removeDefine(Nr.SHADERDEFINE_DIFFUSEMAP),this._shaderValues.setTexture(Nr.DIFFUSETEXTURE,e)}constructor(){super(),this.setShaderName("PARTICLESHURIKEN"),this.renderMode=Nr.RENDERMODE_ALPHABLENDED}clone(){var e=new Nr;return this.cloneTo(e),e}set renderMode(e){switch(e){case Nr.RENDERMODE_ADDTIVE:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.alphaTest=!1,this._shaderValues.addDefine(Nr.SHADERDEFINE_ADDTIVEFOG);break;case Nr.RENDERMODE_ALPHABLENDED:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.alphaTest=!1,this._shaderValues.removeDefine(Nr.SHADERDEFINE_ADDTIVEFOG);break;default:throw new Error("ShurikenParticleMaterial : renderMode value error.")}}get tilingOffsetX(){return this._MainTex_STX}set tilingOffsetX(e){this._MainTex_STX=e}get tilingOffsetY(){return this._MainTex_STY}set tilingOffsetY(e){this._MainTex_STY=e}get tilingOffsetZ(){return this._MainTex_STZ}set tilingOffsetZ(e){this._MainTex_STZ=e}get tilingOffsetW(){return this._MainTex_STW}set tilingOffsetW(e){this._MainTex_STW=e}get _TintColor(){return this.color}set _TintColor(e){this.color=e}get _TintColorR(){return this.color.r}set _TintColorR(e){this.color.r=e}get _TintColorG(){return this.color.g}set _TintColorG(e){this.color.g=e}get _TintColorB(){return this.color.b}set _TintColorB(e){this.color.b=e}get _TintColorA(){return this.color.a}set _TintColorA(e){this.color.a=e}get _MainTex_ST(){return this._shaderValues.getVector(Nr.TILINGOFFSET)}set _MainTex_ST(e){var t=this._shaderValues.getVector(Nr.TILINGOFFSET);t.setValue(e.x,e.y,e.z,e.w),this.tilingOffset=t}get _MainTex_STX(){return this._shaderValues.getVector(Nr.TILINGOFFSET).x}set _MainTex_STX(e){var t=this._shaderValues.getVector(Nr.TILINGOFFSET);t.x=e,this.tilingOffset=t}get _MainTex_STY(){return this._shaderValues.getVector(Nr.TILINGOFFSET).y}set _MainTex_STY(e){var t=this._shaderValues.getVector(Nr.TILINGOFFSET);t.y=e,this.tilingOffset=t}get _MainTex_STZ(){return this._shaderValues.getVector(Nr.TILINGOFFSET).z}set _MainTex_STZ(e){var t=this._shaderValues.getVector(Nr.TILINGOFFSET);t.z=e,this.tilingOffset=t}get _MainTex_STW(){return this._shaderValues.getVector(Nr.TILINGOFFSET).w}set _MainTex_STW(e){var t=this._shaderValues.getVector(Nr.TILINGOFFSET);t.w=e,this.tilingOffset=t}get colorR(){return this._TintColorR}set colorR(e){this._TintColorR=e}get colorG(){return this._TintColorG}set colorG(e){this._TintColorG=e}get colorB(){return this._TintColorB}set colorB(e){this._TintColorB=e}get colorA(){return this._TintColorA}set colorA(e){this._TintColorA=e}}Nr.RENDERMODE_ALPHABLENDED=0,Nr.RENDERMODE_ADDTIVE=1;class Vr extends He{get particleSystem(){return this._particleSystem}get renderMode(){return this._renderMode}set renderMode(e){if(this._renderMode!==e){var t=this._shaderValues;switch(this._renderMode){case 0:t.removeDefine(Or.SHADERDEFINE_RENDERMODE_BILLBOARD);break;case 1:t.removeDefine(Or.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);break;case 2:t.removeDefine(Or.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);break;case 3:t.removeDefine(Or.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);break;case 4:t.removeDefine(Or.SHADERDEFINE_RENDERMODE_MESH)}switch(this._renderMode=e,e){case 0:t.addDefine(Or.SHADERDEFINE_RENDERMODE_BILLBOARD);break;case 1:t.addDefine(Or.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);break;case 2:t.addDefine(Or.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);break;case 3:t.addDefine(Or.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);break;case 4:t.addDefine(Or.SHADERDEFINE_RENDERMODE_MESH);break;default:throw new Error("ShurikenParticleRender: unknown renderMode Value.")}var r=this._particleSystem;r&&r._initBufferDatas()}}get mesh(){return this._mesh}set mesh(e){this._mesh!==e&&(this._mesh&&this._mesh._removeReference(),this._mesh=e,e&&e._addReference(),this._particleSystem._initBufferDatas())}constructor(){super(),this._finalGravity=new t.Vector3,this._dragConstant=new t.Vector2,this._mesh=null,this.stretchedBillboardCameraSpeedScale=0,this.stretchedBillboardSpeedScale=0,this.stretchedBillboardLengthScale=2,this.renderMode=0,this._supportOctree=!1}_onAdded(){super._onAdded(),t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance)?this._particleSystem=new Br(this):this._particleSystem=new wr(this);var e=this._renderElements[0]=new ze;e.setTransform(this.owner._transform),e.render=this,e.setGeometry(this._particleSystem),e.material=Nr.defaultMaterial}_onEnable(){super._onEnable(),t.Stat.particleRenderNode++,this._particleSystem.playOnAwake&&t.LayaEnv.isPlaying&&this._particleSystem.play()}_onDisable(){super._onDisable(),t.Stat.particleRenderNode--,this._particleSystem.isAlive&&this._particleSystem.simulate(0,!0)}_calculateBoundingBox(){var e=this._particleSystem;if(e._useCustomBounds)e.customBounds._tranform(this.owner.transform.worldMatrix,this._bounds);else if(e._simulationSupported()){if(e._generateBounds(),e._bounds._tranform(this.owner.transform.worldMatrix,this._bounds),0!=e.gravityModifier){var t=this._bounds.getMax(),r=this._bounds.getMin(),a=e._gravityOffset;t.y-=a.x,r.y-=a.y,this._bounds.setMax(t),this._bounds.setMin(r)}}else{(r=this._bounds.getMin()).setValue(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._bounds.setMin(r),(t=this._bounds.getMax()).setValue(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._bounds.setMax(t)}}_needRender(e,t){return!e||!!e.intersects(this.bounds)&&!!this._particleSystem.isAlive}_renderUpdate(e,r){var a=this._particleSystem,n=this._shaderValues,s=this.owner.transform;switch(a.simulationSpace){case 0:break;case 1:n.setVector3(Or.WORLDPOSITION,s.position),n.setShaderData(Or.WORLDROTATION,t.ShaderDataType.Vector4,s.rotation);break;default:throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")}switch(a.scaleMode){case 0:var o=s.getWorldLossyScale();n.setVector3(Or.POSITIONSCALE,o),n.setVector3(Or.SIZESCALE,o);break;case 1:var l=s.localScale;n.setVector3(Or.POSITIONSCALE,l),n.setVector3(Or.SIZESCALE,l);break;case 2:n.setVector3(Or.POSITIONSCALE,s.getWorldLossyScale()),n.setVector3(Or.SIZESCALE,t.Vector3.ONE)}switch(a.dragType){case 0:this._dragConstant.setValue(a.dragSpeedConstantMin,a.dragSpeedConstantMin),n.setVector2(Or.DRAG,this._dragConstant);break;case 2:this._dragConstant.setValue(a.dragSpeedConstantMin,a.dragSpeedConstantMax),n.setVector2(Or.DRAG,this._dragConstant);break;default:this._dragConstant.setValue(0,0)}t.Vector3.scale(i.gravity,a.gravityModifier,this._finalGravity),n.setVector3(Or.GRAVITY,this._finalGravity),n.setInt(Or.SIMULATIONSPACE,a.simulationSpace),n.setBool(Or.THREEDSTARTROTATION,a.threeDStartRotation),n.setInt(Or.SCALINGMODE,a.scaleMode),n.setNumber(Or.STRETCHEDBILLBOARDLENGTHSCALE,this.stretchedBillboardLengthScale),n.setNumber(Or.STRETCHEDBILLBOARDSPEEDSCALE,this.stretchedBillboardSpeedScale),n.setNumber(Or.CURRENTTIME,a._currentTime)}get bounds(){return this.boundsChange&&(this._calculateBoundingBox(),this.boundsChange=!1),this._bounds}_cloneTo(e){let t=e;this._particleSystem.cloneTo(t._particleSystem),t.sharedMaterial=this.sharedMaterial,t.renderMode=this.renderMode,t.mesh=this.mesh,t.stretchedBillboardCameraSpeedScale=this.stretchedBillboardCameraSpeedScale,t.stretchedBillboardSpeedScale=this.stretchedBillboardSpeedScale,t.stretchedBillboardLengthScale=this.stretchedBillboardLengthScale,t.sortingFudge=this.sortingFudge}_onDestroy(){this._mesh&&(this._mesh._removeReference(),this._mesh=null),this._particleSystem.destroy(),this._particleSystem=null,super._onDestroy()}}class Pr extends le{get particleSystem(){return this._particleSystem}get particleRenderer(){return this._render}constructor(){super(null),this._render=this.addComponent(Vr),this._particleSystem=this._render._particleSystem}_parseModule(e,r){for(var a in r)switch(a){case"bases":var n=r.bases;for(var i in n)e[i]=n[i];break;case"vector2s":var s=r.vector2s;for(var i in s){var o=e[i],l=s[i];o.setValue(l[0],l[1]),e[i]=o}break;case"vector3s":var h=r.vector3s;for(var i in h){var c=e[i],d=h[i];c.setValue(d[0],d[1],d[2]),e[i]=c}break;case"vector4s":var _=r.vector4s;for(var i in _){var u=e[i],m=_[i];u.setValue(m[0],m[1],m[2],m[3]),e[i]=u}break;case"gradientDataNumbers":var f=r.gradientDataNumbers;for(var i in f){for(var g=e[i],p=r[i],S=0,T=p.length;S<T;S++){var E=p[S];g.add(E.key,E.value)}e[i]=g}break;case"resources":var A=r.resources;for(var i in A){let r=t.Loader.getRes(A[i]);r&&r instanceof t.Texture&&(r=r.bitmap),e[i]=r}break;case"bursts":var x=r.bursts;for(S=0,T=x.length;S<T;S++){var D=x[S];e.addBurst(new nr(D.time,D.min,D.max))}break;case"randomSeed":e.randomSeed[0]=r.randomSeed;break;case"shapeType":case"type":case"color":case"size":case"frame":case"startFrame":case"angularVelocity":case"velocity":break;default:throw"ShurikenParticle3D:unknown type."}}_parse(e,r){if(super._parse(e,r),e.main){var a=this.particleSystem,n=this.particleRenderer;this._parseModule(n,e.renderer),this._parseModule(a,e.main),this._parseModule(a.emission,e.emission);var i=e.shape;if(i){var s;switch(i.shapeType){case 0:s=new xr;break;case 1:s=new Ar;break;case 2:s=new Er;break;case 3:s=new Sr;break;case 7:s=new Tr;break;default:throw"ShuriKenParticle3D:unknown shape type."}this._parseModule(s,i),a.shape=s}var o=e.velocityOverLifetime;if(o){var l,h=o.velocity;switch(h.type){case 0:var c=h.constant;l=ur.createByConstant(c?new t.Vector3(c[0],c[1],c[2]):new t.Vector3(0,0,0));break;case 1:l=ur.createByGradient(this._initParticleVelocity(h.gradientX),this._initParticleVelocity(h.gradientY),this._initParticleVelocity(h.gradientZ));break;case 2:var d=h.constantMin,_=h.constantMax;l=ur.createByRandomTwoConstant(d?new t.Vector3(d[0],d[1],d[2]):new t.Vector3(0,0,0),_?new t.Vector3(_[0],_[1],_[2]):new t.Vector3(0,0,0));break;case 3:l=ur.createByRandomTwoGradient(this._initParticleVelocity(h.gradientXMin),this._initParticleVelocity(h.gradientXMax),this._initParticleVelocity(h.gradientYMin),this._initParticleVelocity(h.gradientYMax),this._initParticleVelocity(h.gradientZMin),this._initParticleVelocity(h.gradientZMax))}var u=new vr(l);this._parseModule(u,o),a.velocityOverLifetime=u}var m=e.colorOverLifetime;if(m){var f=m.color;let e=f.maxKeyCount;var g;switch(f.type){case 0:var p=f.constant;g=ir.createByConstant(p?new t.Vector4(p[0],p[1],p[2],p[3]):new t.Vector4(0,0,0,0));break;case 1:g=ir.createByGradient(this._initParticleColor(f.gradient,e));break;case 2:var S=f.constantMin,T=f.constantMax;g=ir.createByRandomTwoConstant(S?new t.Vector4(S[0],S[1],S[2],S[3]):new t.Vector4(0,0,0,0),S?new t.Vector4(T[0],T[1],T[2],T[3]):new t.Vector4(0,0,0,0));break;case 3:g=ir.createByRandomTwoGradient(this._initParticleColor(f.gradientMin,e),this._initParticleColor(f.gradientMax,e))}var E=new sr(g);this._parseModule(E,m),a.colorOverLifetime=E}var A=e.sizeOverLifetime;if(A){var x,D=A.size;switch(D.type){case 0:x=D.separateAxes?_r.createByGradientSeparate(this._initParticleSize(D.gradientX),this._initParticleSize(D.gradientY),this._initParticleSize(D.gradientZ)):_r.createByGradient(this._initParticleSize(D.gradient));break;case 1:if(D.separateAxes){var R=D.constantMinSeparate,C=D.constantMaxSeparate;x=_r.createByRandomTwoConstantSeparate(R?new t.Vector3(R[0],R[1],R[2]):new t.Vector3(0,0,0),C?new t.Vector3(C[0],C[1],C[2]):new t.Vector3(0,0,0))}else x=_r.createByRandomTwoConstant(D.constantMin||0,D.constantMax||0);break;case 2:x=D.separateAxes?_r.createByRandomTwoGradientSeparate(this._initParticleSize(D.gradientXMin),this._initParticleSize(D.gradientYMin),this._initParticleSize(D.gradientZMin),this._initParticleSize(D.gradientXMax),this._initParticleSize(D.gradientYMax),this._initParticleSize(D.gradientZMax)):_r.createByRandomTwoGradient(this._initParticleSize(D.gradientMin),this._initParticleSize(D.gradientMax))}var v=new Dr(x);this._parseModule(v,A),a.sizeOverLifetime=v}var y=e.rotationOverLifetime;if(y){var I,M=y.angularVelocity;switch(M.type){case 0:if(M.separateAxes){var L=M.constantSeparate;I=hr.createByConstantSeparate(L?new t.Vector3(L[0],L[1],L[2]):new t.Vector3(0,0,Math.PI/4))}else I=hr.createByConstant(M.constant||Math.PI/4);break;case 1:I=M.separateAxes?hr.createByGradientSeparate(this._initParticleRotation(M.gradientX),this._initParticleRotation(M.gradientY),this._initParticleRotation(M.gradientZ)):hr.createByGradient(this._initParticleRotation(M.gradient));break;case 2:if(M.separateAxes){var O=M.constantMinSeparate,b=M.constantMaxSeparate;I=hr.createByRandomTwoConstantSeparate(O?new t.Vector3(O[0],O[1],O[2]):new t.Vector3(0,0,0),b?new t.Vector3(b[0],b[1],b[2]):new t.Vector3(0,0,Math.PI/4))}else I=hr.createByRandomTwoConstant(M.constantMin||0,M.constantMax||Math.PI/4);break;case 3:M.separateAxes||(I=hr.createByRandomTwoGradient(this._initParticleRotation(M.gradientMin),this._initParticleRotation(M.gradientMax)))}var w=new mr(I);this._parseModule(w,y),a.rotationOverLifetime=w}var B=e.textureSheetAnimation;if(B){var N,V=B.frame;switch(V.type){case 0:N=lr.createByConstant(V.constant);break;case 1:N=lr.createByOverTime(this._initParticleFrame(V.overTime));break;case 2:N=lr.createByRandomTwoConstant(V.constantMin,V.constantMax);break;case 3:N=lr.createByRandomTwoOverTime(this._initParticleFrame(V.overTimeMin),this._initParticleFrame(V.overTimeMax))}var P,F=B.startFrame;switch(F.type){case 0:P=Rr.createByConstant(F.constant);break;case 1:P=Rr.createByRandomTwoConstant(F.constantMin,F.constantMax)}var U=new Cr(N,P);this._parseModule(U,B),a.textureSheetAnimation=U}}else this._parseOld(e)}destroy(e=!0){this._destroyed||super.destroy(e)}_create(){return new J}_parseOld(e){const r=Math.PI/180;var a,n,i,s=this.particleRenderer,o=e.material;o&&(i=t.Loader.getRes(o.path)),s.sharedMaterial=i;var l=e.meshPath;l&&(s.mesh=t.Loader.getRes(l)),s.renderMode=e.renderMode,s.stretchedBillboardCameraSpeedScale=e.stretchedBillboardCameraSpeedScale,s.stretchedBillboardSpeedScale=e.stretchedBillboardSpeedScale,s.stretchedBillboardLengthScale=e.stretchedBillboardLengthScale,s.sortingFudge=e.sortingFudge?e.sortingFudge:0;var h=this.particleSystem;h.isPerformanceMode=e.isPerformanceMode,h.duration=e.duration,h.looping=e.looping,h.prewarm=e.prewarm,h.startDelayType=e.startDelayType,h.startDelay=e.startDelay,h.startDelayMin=e.startDelayMin,h.startDelayMax=e.startDelayMax,h.startLifetimeType=e.startLifetimeType,h.startLifetimeConstant=e.startLifetimeConstant,h.startLifeTimeGradient=Pr._initStartLife(e.startLifetimeGradient),h.startLifetimeConstantMin=e.startLifetimeConstantMin,h.startLifetimeConstantMax=e.startLifetimeConstantMax,h.startLifeTimeGradientMin=Pr._initStartLife(e.startLifetimeGradientMin),h.startLifeTimeGradientMax=Pr._initStartLife(e.startLifetimeGradientMax),h.startSpeedType=e.startSpeedType,h.startSpeedConstant=e.startSpeedConstant,h.startSpeedConstantMin=e.startSpeedConstantMin,h.startSpeedConstantMax=e.startSpeedConstantMax,h.threeDStartSize=e.threeDStartSize,h.startSizeType=e.startSizeType,h.startSizeConstant=e.startSizeConstant;var c=e.startSizeConstantSeparate,d=h.startSizeConstantSeparate;d.x=c[0],d.y=c[1],d.z=c[2],h.startSizeConstantMin=e.startSizeConstantMin,h.startSizeConstantMax=e.startSizeConstantMax;var _=e.startSizeConstantMinSeparate,u=h.startSizeConstantMinSeparate;u.x=_[0],u.y=_[1],u.z=_[2];var m=e.startSizeConstantMaxSeparate,f=h.startSizeConstantMaxSeparate;f.x=m[0],f.y=m[1],f.z=m[2],h.threeDStartRotation=e.threeDStartRotation,h.startRotationType=e.startRotationType,h.startRotationConstant=e.startRotationConstant*r;var g=e.startRotationConstantSeparate,p=h.startRotationConstantSeparate;p.x=g[0]*r,p.y=g[1]*r,p.z=g[2]*r,h.startRotationConstantMin=e.startRotationConstantMin*r,h.startRotationConstantMax=e.startRotationConstantMax*r;var S=e.startRotationConstantMinSeparate,T=h.startRotationConstantMinSeparate;T.x=S[0]*r,T.y=S[1]*r,T.z=S[2]*r;var E=e.startRotationConstantMaxSeparate,A=h.startRotationConstantMaxSeparate;A.x=E[0]*r,A.y=E[1]*r,A.z=E[2]*r,h.randomizeRotationDirection=e.randomizeRotationDirection,h.startColorType=e.startColorType;var x=e.startColorConstant,D=h.startColorConstant;D.x=x[0],D.y=x[1],D.z=x[2],D.w=x[3];var R=e.startColorConstantMin,C=h.startColorConstantMin;C.x=R[0],C.y=R[1],C.z=R[2],C.w=R[3];var v=e.startColorConstantMax,y=h.startColorConstantMax;y.x=v[0],y.y=v[1],y.z=v[2],y.w=v[3],h.gravityModifier=e.gravityModifier,h.simulationSpace=e.simulationSpace,void 0!==e.simulationSpeed&&(h.simulationSpeed=e.simulationSpeed),h.scaleMode=e.scaleMode,h.playOnAwake=e.playOnAwake,h.maxParticles=e.maxParticles;var I=e.autoRandomSeed;null!=I&&(h.autoRandomSeed=I);var M=e.randomSeed;null!=M&&(h.randomSeed[0]=M);var L=e.emission,O=h.emission;if(L){O.emissionRate=L.emissionRate;var b=L.bursts;if(b)for(a=0,n=b.length;a<n;a++){var w=b[a];O.addBurst(new nr(w.time,w.min,w.max))}O.enable=L.enable}else O.enable=!1;var B=e.shape;if(B){var N;switch(B.shapeType){case 0:var V;N=V=new xr,V.radius=B.sphereRadius,V.emitFromShell=B.sphereEmitFromShell,V.randomDirection=B.sphereRandomDirection;break;case 1:var P;N=P=new Ar,P.radius=B.hemiSphereRadius,P.emitFromShell=B.hemiSphereEmitFromShell,P.randomDirection=B.hemiSphereRandomDirection;break;case 2:var F;N=F=new Er,F.angle=B.coneAngle*r,F.radius=B.coneRadius,F.length=B.coneLength,F.emitType=B.coneEmitType,F.randomDirection=B.coneRandomDirection;break;case 3:var U;N=U=new Sr,U.x=B.boxX,U.y=B.boxY,U.z=B.boxZ,U.randomDirection=B.boxRandomDirection;break;case 7:var G;N=G=new Tr,G.radius=B.circleRadius,G.arc=B.circleArc*r,G.emitFromEdge=B.circleEmitFromEdge,G.randomDirection=B.circleRandomDirection;break;default:var H;N=H=new Tr,H.radius=B.circleRadius,H.arc=B.circleArc*r,H.emitFromEdge=B.circleEmitFromEdge,H.randomDirection=B.circleRandomDirection}N.enable=B.enable,h.shape=N}var z=e.velocityOverLifetime;if(z){var k,W=z.velocity;switch(W.type){case 0:var Y=W.constant;k=ur.createByConstant(new t.Vector3(Y[0],Y[1],Y[2]));break;case 1:k=ur.createByGradient(this._initParticleVelocity(W.gradientX),this._initParticleVelocity(W.gradientY),this._initParticleVelocity(W.gradientZ));break;case 2:var X=W.constantMin,j=W.constantMax;k=ur.createByRandomTwoConstant(new t.Vector3(X[0],X[1],X[2]),new t.Vector3(j[0],j[1],j[2]));break;case 3:k=ur.createByRandomTwoGradient(this._initParticleVelocity(W.gradientXMin),this._initParticleVelocity(W.gradientXMax),this._initParticleVelocity(W.gradientYMin),this._initParticleVelocity(W.gradientYMax),this._initParticleVelocity(W.gradientZMin),this._initParticleVelocity(W.gradientZMax))}var Q=new vr(k);Q.space=z.space,Q.enable=z.enable,h.velocityOverLifetime=Q}var K=e.colorOverLifetime;if(K){var q,Z=K.color;switch(Z.type){case 0:var J=Z.constant;q=ir.createByConstant(new t.Vector4(J[0],J[1],J[2],J[3]));break;case 1:q=ir.createByGradient(this._initParticleColor(Z.gradient));break;case 2:var $=Z.constantMin,ee=Z.constantMax;q=ir.createByRandomTwoConstant(new t.Vector4($[0],$[1],$[2],$[3]),new t.Vector4(ee[0],ee[1],ee[2],ee[3]));break;case 3:q=ir.createByRandomTwoGradient(this._initParticleColor(Z.gradientMin),this._initParticleColor(Z.gradientMax))}var te=new sr(q);te.enable=K.enable,h.colorOverLifetime=te}var re=e.sizeOverLifetime;if(re){var ae,ne=re.size;switch(ne.type){case 0:ae=ne.separateAxes?_r.createByGradientSeparate(this._initParticleSize(ne.gradientX),this._initParticleSize(ne.gradientY),this._initParticleSize(ne.gradientZ)):_r.createByGradient(this._initParticleSize(ne.gradient));break;case 1:if(ne.separateAxes){var ie=ne.constantMinSeparate,se=ne.constantMaxSeparate;ae=_r.createByRandomTwoConstantSeparate(new t.Vector3(ie[0],ie[1],ie[2]),new t.Vector3(se[0],se[1],se[2]))}else ae=_r.createByRandomTwoConstant(ne.constantMin,ne.constantMax);break;case 2:ae=ne.separateAxes?_r.createByRandomTwoGradientSeparate(this._initParticleSize(ne.gradientXMin),this._initParticleSize(ne.gradientYMin),this._initParticleSize(ne.gradientZMin),this._initParticleSize(ne.gradientXMax),this._initParticleSize(ne.gradientYMax),this._initParticleSize(ne.gradientZMax)):_r.createByRandomTwoGradient(this._initParticleSize(ne.gradientMin),this._initParticleSize(ne.gradientMax))}var oe=new Dr(ae);oe.enable=re.enable,h.sizeOverLifetime=oe}var le=e.rotationOverLifetime;if(le){var he,ce=le.angularVelocity;switch(ce.type){case 0:if(ce.separateAxes){var de=ce.constantSeparate;he=hr.createByConstantSeparate(new t.Vector3(de[0]*r,de[1]*r,de[2]*r))}else he=hr.createByConstant(ce.constant*r);break;case 1:he=ce.separateAxes?hr.createByGradientSeparate(this._initParticleRotation(ce.gradientX),this._initParticleRotation(ce.gradientY),this._initParticleRotation(ce.gradientZ)):hr.createByGradient(this._initParticleRotation(ce.gradient));break;case 2:if(ce.separateAxes){var _e=ce.constantMinSeparate,ue=ce.constantMaxSeparate;he=hr.createByRandomTwoConstantSeparate(new t.Vector3(_e[0]*r,_e[1]*r,_e[2]*r),new t.Vector3(ue[0]*r,ue[1]*r,ue[2]*r))}else he=hr.createByRandomTwoConstant(ce.constantMin*r,ce.constantMax*r);break;case 3:ce.separateAxes||(he=hr.createByRandomTwoGradient(this._initParticleRotation(ce.gradientMin),this._initParticleRotation(ce.gradientMax)))}var me=new mr(he);me.enable=le.enable,h.rotationOverLifetime=me}var fe=e.textureSheetAnimation;if(fe){var ge,pe=fe.frame;switch(pe.type){case 0:ge=lr.createByConstant(pe.constant);break;case 1:ge=lr.createByOverTime(this._initParticleFrame(pe.overTime));break;case 2:ge=lr.createByRandomTwoConstant(pe.constantMin,pe.constantMax);break;case 3:ge=lr.createByRandomTwoOverTime(this._initParticleFrame(pe.overTimeMin),this._initParticleFrame(pe.overTimeMax))}var Se,Te=fe.startFrame;switch(Te.type){case 0:Se=Rr.createByConstant(Te.constant);break;case 1:Se=Rr.createByRandomTwoConstant(Te.constantMin,Te.constantMax)}var Ee=new Cr(ge,Se);Ee.enable=fe.enable;var Ae=fe.tiles;Ee.tiles=new t.Vector2(Ae[0],Ae[1]),Ee.type=fe.type,Ee.randomRow=fe.randomRow;var xe=fe.rowIndex;void 0!==xe&&(Ee.rowIndex=xe),Ee.cycles=fe.cycles,h.textureSheetAnimation=Ee}}_initParticleColor(e,r=4){var a=new Gt(r,r);if(e){var n,i,s=e.alphas;if(s)for(n=0,i=s.length;n<i;n++){n==r-1&&i>r&&(n=i-1,console.warn(`GradientDataColor warning:alpha data length is large than ${r}, will ignore the middle data.`));var o=s[n];a.addColorAlpha(o.key,o.value)}else a.addColorAlpha(0,1),a.addColorAlpha(1,1);var l=e.rgbs;if(l)for(n=0,i=l.length;n<i;n++){n==r-1&&i>r&&(n=i-1,console.warn(`GradientDataColor warning:rgb data length is large than ${r}, will ignore the middle data.`));var h=l[n],c=h.value;a.addColorRGB(h.key,new t.Color(c[0],c[1],c[2],1))}else a.addColorRGB(0,new t.Color(1,1,1,1)),a.addColorRGB(1,new t.Color(1,1,1,1))}else a.addColorAlpha(0,1),a.addColorAlpha(1,1),a.addColorRGB(0,new t.Color(1,1,1,1)),a.addColorRGB(1,new t.Color(1,1,1,1));return a}_initParticleFrame(e){var t=new cr;if(e)for(var r=e.frames,a=0,n=r.length;a<n;a++){var i=r[a];t.add(i.key,i.value)}else t.add(0,0),t.add(1,1);return t}static _initStartLife(e){for(var t=new dr,r=e.startLifetimes,a=0,n=r.length;a<n;a++){var i=r[a];t.add(i.key,i.value)}return t}_initParticleVelocity(e){for(var t=new dr,r=e.velocitys,a=0,n=r.length;a<n;a++){var i=r[a];t.add(i.key,i.value)}return t}_initParticleSize(e){var t=new dr;if(e)for(var r=e.sizes,a=0,n=r.length;a<n;a++){var i=r[a];t.add(i.key,i.value)}else t.add(0,0),t.add(1,1);return t}_initParticleRotation(e){for(var t=new dr,r=e.angularVelocitys,a=0,n=r.length;a<n;a++){var i=r[a];t.add(i.key,i.value/180*Math.PI)}return t}}class Fr{}class Ur extends ze{set render(e){this._baseRender=e,this._renderElementOBJ._renderShaderData=e._shaderValues}get render(){return this._baseRender}setSkinData(e){this._renderElementOBJ.skinnedData=e}constructor(){super()}_createRenderElementOBJ(){this._renderElementOBJ=t.LayaGL.renderOBJCreate.createSkinRenderElement()}_render(e){this._renderElementOBJ._render(e)}}class Gr extends ot{get localBounds(){return this._localBounds}set localBounds(e){this._localBounds=e,this.geometryBounds=this._localBounds}get rootBone(){return this._cacheRootBone}set rootBone(e){if(this._cacheRootBone!=e){this._cacheRootBone?this._cacheRootBone.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange):this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),e?e.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange):this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this._cacheRootBone=e,this._onWorldMatNeedChange(c.TRANSFORM_WORLDPOSITION|c.TRANSFORM_WORLDQUATERNION|c.TRANSFORM_WORLDSCALE);let a=this._renderElements.length;for(var r=0;r<a;r++){this._renderElements[r].setTransform(e.transform)}}}get bones(){return this._bones}constructor(){super(),this._bones=[],this._inverseBindPosesBufferForNative=null,this._skinnedMatrixCachesBufferForNative=null,this._bonesTransformForNative=null,this._localBounds=new _e(t.Vector3.ZERO,t.Vector3.ZERO),this._shaderValues.addDefine(Fr.SHADERDEFINE_BONE)}_computeSkinnedData(){if(this._cacheMesh)for(var e=this._cacheMesh._inverseBindPoses,t=this._cacheMesh._skinnedMatrixCaches,r=0,a=this._cacheMesh.subMeshCount;r<a;r++)for(var n=this._cacheMesh.getSubMesh(r)._boneIndicesList,i=this._skinnedData[r],s=0,o=n.length;s<o;s++){var l=n[s];this._computeSubSkinnedData(e,l,i[s],t)}}_computeSubSkinnedData(e,r,a,n){for(let i=0,s=r.length;i<s;i++){let s=r[i];if(this._skinnedDataLoopMarks[s]===t.Stat.loopCount){let e=n[s],t=this._skinnedData[e.subMeshIndex][e.batchIndex],r=16*e.batchBoneIndex,o=16*i;for(let e=0;e<16;e++)a[o+e]=t[r+e]}else{let r=this._bones[s];r&&l._mulMatrixArray(r.transform.worldMatrix.elements,e[s].elements,0,a,16*i),this._skinnedDataLoopMarks[s]=t.Stat.loopCount}}}_computeSkinnedDataForNative(){if(this._cacheMesh){var e=this._cacheMesh._inverseBindPoses,t=this._cacheMesh._skinnedMatrixCaches;if(null==this._inverseBindPosesBufferForNative){this._inverseBindPosesBufferForNative=new Float32Array(16*e.length);for(var r=0,a=0,n=e.length;a<n;a++)this._inverseBindPosesBufferForNative.set(e[a].elements,r),r+=16}if(null==this._skinnedMatrixCachesBufferForNative){this._skinnedMatrixCachesBufferForNative=new Int32Array(3*t.length);var i=0;for(a=0,n=t.length;a<n&&t[a];a++)this._skinnedMatrixCachesBufferForNative[i]=t[a].subMeshIndex,this._skinnedMatrixCachesBufferForNative[i+1]=t[a].batchIndex,this._skinnedMatrixCachesBufferForNative[i+2]=t[a].batchBoneIndex,i+=3}if(null==this._bonesTransformForNative){this._bonesTransformForNative=[];for(a=0,n=this._bones.length;a<n;a++){let e=this._bones[a];this._bonesTransformForNative[a]=e?e.transform._nativeObj:null}}for(a=0,n=this._cacheMesh.subMeshCount;a<n;a++)for(var s=this._cacheMesh.getSubMesh(a)._boneIndicesList,o=this._skinnedData[a],l=(i=0,s.length);i<l;i++){var h=s[i];window.conch.computeSubSkinnedDataForNative(this._inverseBindPosesBufferForNative,h,o[i],this._skinnedMatrixCachesBufferForNative,this._bonesTransformForNative,this._skinnedDataLoopMarks,this._skinnedData)}}}_createRenderElement(){return new Ur}_onSkinMeshChange(e){if(e&&this._mesh!=e){this._changeVertexDefine(e),this._mesh=e;var t=e.subMeshCount;this._renderElements.length=t;for(var r=0;r<t;r++){var a=this._renderElements[r];if(!a){var n=this.sharedMaterials[r];a=this._renderElements[r]=this._renderElements[r]?this._renderElements[r]:this._createRenderElement(),this._cacheRootBone?a.setTransform(this._cacheRootBone._transform):a.setTransform(this.owner._transform),a.render=this,a.material=n||nt.defaultMaterial}a.setGeometry(e.getSubMesh(r))}}else e||(this._renderElements.length=0,this._mesh=null,this._changeVertexDefine(null));this.boundsChange=!0}_onMeshChange(e){if(this._onSkinMeshChange(e),e){this._cacheMesh=e;var t=e.subMeshCount;this._skinnedData=[],this._skinnedDataLoopMarks=new Uint32Array(e._inverseBindPoses.length);for(var r=0;r<t;r++){for(var a=e.getSubMesh(r)._boneIndicesList,n=a.length,i=this._skinnedData[r]=[],s=0;s<n;s++)i[s]=new Float32Array(16*a[s].length);this._renderElements[r].setSkinData(i)}}}_calculateBoundingBox(){this._cacheRootBone?this._localBounds._tranform(this._cacheRootBone.transform.worldMatrix,this._bounds):this._localBounds._tranform(this.owner.transform.worldMatrix,this._bounds)}_setBelongScene(e){super._setBelongScene(e),t.Stat.skinRenderNode++}_setUnBelongScene(){super._setUnBelongScene(),t.Stat.skinRenderNode--}_renderUpdate(e,r){this.bones.length>0?(this._computeSkinnedData(),this._shaderValues.setMatrix4x4(J.WORLDMATRIX,t.Matrix4x4.DEFAULT)):this._shaderValues.setMatrix4x4(J.WORLDMATRIX,r.worldMatrix)}_cloneTo(e){let t=e;t._inverseBindPosesBufferForNative=null,t._skinnedMatrixCachesBufferForNative=null,t._bonesTransformForNative=null;let cloneHierachFun=(e,t,r)=>{let a=((e,t)=>{let r=[],a=e;for(;a;)a instanceof J&&r.push(a),a=a.parent;let n=t;for(;n&&-1==r.indexOf(n);)n=n.parent;return n})(e,t);if(!a)return null;let n=[];l._getHierarchyPath(a,e,n);let i=[];l._getHierarchyPath(a,t,i);let s=l._getParentNodeByHierarchyPath(r,n);return s?l._getNodeByHierarchyPath(s,i):null};var r=this.rootBone;if(r){let e=cloneHierachFun(this.owner,this.rootBone,t.owner);t.rootBone=e||r}var a=this.bones,n=t.bones;let i=n.length=a.length;for(var s=0;s<i;s++){let e=a[s];n[s]=cloneHierachFun(this.owner,e,t.owner)}var o=this.localBounds;o&&o.cloneTo(t.localBounds),t.localBounds&&(t.localBounds=t.localBounds),super._cloneTo(e)}_onDestroy(){this._cacheRootBone?!this._cacheRootBone._destroyed&&this._cacheRootBone.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange):this.owner&&!this.owner._destroyed&&this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),super._onDestroy()}}class Hr extends Gr{get simpleAnimatorTexture(){return this._simpleAnimatorTexture}set simpleAnimatorTexture(e){this._simpleAnimatorTexture=e,this._simpleAnimatorTextureSize=e.width,this._shaderValues.setTexture(Hr.SIMPLE_SIMPLEANIMATORTEXTURE,e),e._addReference(),this._shaderValues.setNumber(Hr.SIMPLE_SIMPLEANIMATORTEXTURESIZE,this._simpleAnimatorTextureSize)}get simpleAnimatorOffset(){return this._simpleAnimatorOffset}set simpleAnimatorOffset(e){e.cloneTo(this._simpleAnimatorOffset)}constructor(){super(),this._simpleAnimatorParams=new t.Vector4,this._simpleAnimatorOffset=new t.Vector2,this._shaderValues.addDefine(Fr.SHADERDEFINE_SIMPLEBONE),this._shaderValues.addDefine(Fr.SHADERDEFINE_BONE)}_createRenderElement(){return new it}_computeAnimatorParamsData(){this._cacheMesh&&(this._simpleAnimatorParams.x=this._simpleAnimatorOffset.x,this._simpleAnimatorParams.y=Math.round(this._simpleAnimatorOffset.y)*this._bonesNums*4)}_onMeshChange(e){this._onSkinMeshChange(e),e&&(this._cacheMesh=e)}_renderUpdate(e,r){if(e.renderElement.renderType===ze.RENDERTYPE_NORMAL){if(this.rootBone){var a=this.rootBone.transform.worldMatrix;if(this._subUniformBufferData){let e=this._shaderValues.getMatrix4x4(J.WORLDMATRIX);this._subUniformBufferData._needUpdate=!e||!e.equalsOtherMatrix(a)}this._setShaderValue(J.WORLDMATRIX,t.ShaderDataType.Matrix4x4,a)}else this._setShaderValue(J.WORLDMATRIX,t.ShaderDataType.Matrix4x4,r.worldMatrix);this._computeAnimatorParamsData(),this._shaderValues.setVector(Hr.SIMPLE_SIMPLEANIMATORPARAMS,this._simpleAnimatorParams)}}_renderUpdateWithCamera(e,t){}_cloneTo(e){let t=e;t.simpleAnimatorOffset=this.simpleAnimatorOffset,t.simpleAnimatorTexture=this.simpleAnimatorTexture,t._bonesNums=this._bonesNums,super._cloneTo(e)}_onDestroy(){this._cacheRootBone&&!this._cacheRootBone._destroyed&&this._cacheRootBone.transform.off(t.Event.TRANSFORM_CHANGED,this,this._onWorldMatNeedChange),this._simpleAnimatorTexture&&this._simpleAnimatorTexture._removeReference(),this._simpleAnimatorTexture=null,super._onDestroy()}}class zr extends le{static __init__(){Hr.SIMPLE_SIMPLEANIMATORPARAMS=zr.SIMPLE_SIMPLEANIMATORPARAMS,Hr.SIMPLE_SIMPLEANIMATORTEXTURE=zr.SIMPLE_SIMPLEANIMATORTEXTURE,Hr.SIMPLE_SIMPLEANIMATORTEXTURESIZE=zr.SIMPLE_SIMPLEANIMATORTEXTURESIZE,zr.SIMPLE_SIMPLEANIMATORTEXTURE=t.Shader3D.propertyNameToID("u_SimpleAnimatorTexture"),zr.SIMPLE_SIMPLEANIMATORPARAMS=t.Shader3D.propertyNameToID("u_SimpleAnimatorParams"),zr.SIMPLE_SIMPLEANIMATORTEXTURESIZE=t.Shader3D.propertyNameToID("u_SimpleAnimatorTextureSize");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(zr.SIMPLE_SIMPLEANIMATORTEXTURE,"u_SimpleAnimatorTexture"),e.addShaderUniform(zr.SIMPLE_SIMPLEANIMATORPARAMS,"u_SimpleAnimatorParams"),e.addShaderUniform(zr.SIMPLE_SIMPLEANIMATORTEXTURESIZE,"u_SimpleAnimatorTextureSize")}get meshFilter(){return this._meshFilter}get simpleSkinnedMeshRenderer(){return this._render}constructor(e=null,t=null){super(t),this._meshFilter=this.addComponent(st),this._render=this.addComponent(Hr),e&&(this._meshFilter.sharedMesh=e)}_parse(e,r){super._parse(e,r);var a=this.simpleSkinnedMeshRenderer,n=e.lightmapIndex;null!=n&&(a.lightmapIndex=n);var i,s=e.lightmapScaleOffset;if(s&&(a.lightmapScaleOffset=new t.Vector4(s[0],s[1],s[2],s[3])),null!=e.enableRender&&(a.enabled=e.enableRender),null!=e.receiveShadows&&(a.receiveShadow=e.receiveShadows),null!=e.castShadow&&(a.castShadow=e.castShadow),i=e.meshPath){var o=t.Loader.getRes(i);o&&(this.meshFilter.sharedMesh=o)}var l=e.materials;if(l){var h=a.sharedMaterials,c=l.length;h.length=c;for(var d=0;d<c;d++)h[d]=t.Loader.getRes(l[d].path);a.sharedMaterials=h}var _=e.boundBox,u=_.min,m=_.max;if(a.localBounds.setMin(new t.Vector3(u[0],u[1],u[2])),a.localBounds.setMax(new t.Vector3(m[0],m[1],m[2])),a.localBounds=a.localBounds,r){var f=e.rootBone;a.rootBone=r[f];var g,p=e.bones;for(d=0,g=p.length;d<g;d++)a.bones.push(r[p[d]]);a._bonesNums=e.bonesNums?e.bonesNums:a.bones.length}var S=e.animatorTexture;if(S){var T=t.Loader.getRes(S);a.simpleAnimatorTexture=T}}_cloneTo(e,t,r){super._cloneTo(e,t,r)}destroy(e=!0){this._destroyed||(super.destroy(e),this._meshFilter.destroy())}_create(){return new J}}zr._tempArray0=[];class kr extends le{static __init__(){Fr.SHADERDEFINE_BONE=t.Shader3D.getDefineByName("BONE"),Fr.SHADERDEFINE_SIMPLEBONE=t.Shader3D.getDefineByName("SIMPLEBONE");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Custom");kr.BONES=t.Shader3D.propertyNameToID("u_Bones"),e.addShaderUniform(kr.BONES,"u_Bones")}get meshFilter(){return this._meshFilter}get skinnedMeshRenderer(){return this._render}constructor(e=null,t=null){super(t),this._meshFilter=this.addComponent(st),this._render=this.addComponent(Gr),e&&(this._meshFilter.sharedMesh=e)}_parse(e,r){super._parse(e,r);var a=this.skinnedMeshRenderer,n=e.lightmapIndex;null!=n&&(a.lightmapIndex=n);var i,s=e.lightmapScaleOffset;if(s&&(a.lightmapScaleOffset=new t.Vector4(s[0],s[1],s[2],s[3])),null!=e.enableRender&&(a.enabled=e.enableRender),null!=e.receiveShadows&&(a.receiveShadow=e.receiveShadows),null!=e.castShadow&&(a.castShadow=e.castShadow),i=e.meshPath){var o=t.Loader.getRes(i);o&&(this.meshFilter.sharedMesh=o)}var l=e.materials;if(l){var h=a.sharedMaterials,c=l.length;h.length=c;for(var d=0;d<c;d++)h[d]=t.Loader.getRes(l[d].path);a.sharedMaterials=h}var _=e.boundBox,u=_.min,m=_.max;if(a.localBounds.setMin(new t.Vector3(u[0],u[1],u[2])),a.localBounds.setMax(new t.Vector3(m[0],m[1],m[2])),a.localBounds=a.localBounds,r){var f=e.rootBone;a.rootBone=r[f];var g,p=e.bones;for(d=0,g=p.length;d<g;d++)a.bones.push(r[p[d]])}}_cloneTo(e,t,r){super._cloneTo(e,t,r)}destroy(e=!0){this._destroyed||(super.destroy(e),this._meshFilter.destroy())}_create(){return new J}}kr._tempArray0=[];class Wr{}Wr.Stretch=0,Wr.Tile=1,e.TrailAlignment=void 0,(be=e.TrailAlignment||(e.TrailAlignment={}))[be.View=0]="View",be[be.TransformZ=1]="TransformZ";class Yr{static get vertexDeclaration1(){return Yr._vertexDeclaration1}static get vertexDeclaration2(){return Yr._vertexDeclaration2}get vertexDeclaration(){return Yr._vertexDeclaration1}static __init__(){Yr._vertexDeclaration1=new t.VertexDeclaration(32,[new t.VertexElement(0,t.VertexElementFormat.Vector3,Yr.TRAIL_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector3,Yr.TRAIL_OFFSETVECTOR),new t.VertexElement(24,t.VertexElementFormat.Single,Yr.TRAIL_TIME0),new t.VertexElement(28,t.VertexElementFormat.Single,Yr.TRAIL_TEXTURECOORDINATE0Y)]),Yr._vertexDeclaration2=new t.VertexDeclaration(20,[new t.VertexElement(0,t.VertexElementFormat.Single,Yr.TRAIL_TEXTURECOORDINATE0X),new t.VertexElement(4,t.VertexElementFormat.Color,Yr.TRAIL_COLOR)])}}Yr.TRAIL_POSITION0=0,Yr.TRAIL_OFFSETVECTOR=1,Yr.TRAIL_TIME0=2,Yr.TRAIL_TEXTURECOORDINATE0Y=3,Yr.TRAIL_TEXTURECOORDINATE0X=4,Yr.TRAIL_COLOR=5;class Xr extends ke{constructor(e){super(t.MeshTopology.TriangleStrip,t.DrawType.DrawArray),this._floatCountPerVertices1=8,this._floatCountPerVertices2=5,this._increaseSegementCount=16,this._activeIndex=0,this._endIndex=0,this._needAddFirstVertex=!1,this._isTempEndVertex=!1,this._vertices1=null,this._vertices2=null,this._lastFixedVertexPosition=new t.Vector3,this.tmpColor=new t.Color,this._disappearBoundsMode=!1,this._owner=e,this.bufferState=new t.BufferState,this._segementCount=this._increaseSegementCount,this._resizeData(this._segementCount,this.bufferState)}_resizeData(e,r){this._subBirthTime=new Float32Array(e),this._subDistance=new Float64Array(e);var a=2*e,n=Yr.vertexDeclaration1,i=Yr.vertexDeclaration2,s=[],o=a*n.vertexStride,l=a*i.vertexStride,h=o+l;this._vertices1=new Float32Array(a*this._floatCountPerVertices1),this._vertices2=new Float32Array(a*this._floatCountPerVertices2),this._vertexBuffer1=t.LayaGL.renderOBJCreate.createVertexBuffer3D(o,t.BufferUsage.Dynamic,!1),this._vertexBuffer1.vertexDeclaration=n,this._vertexBuffer2=t.LayaGL.renderOBJCreate.createVertexBuffer3D(l,t.BufferUsage.Dynamic,!1),this._vertexBuffer2.vertexDeclaration=i,s.push(this._vertexBuffer1),s.push(this._vertexBuffer2),r.applyState(s,null),t.Resource._addMemory(h,h)}_resetData(){var e=this._endIndex-this._activeIndex,r=new Float32Array(this._vertices1.buffer,2*this._floatCountPerVertices1*this._activeIndex*4,2*this._floatCountPerVertices1*e),a=new Float32Array(this._vertices2.buffer,2*this._floatCountPerVertices2*this._activeIndex*4,2*this._floatCountPerVertices2*e),n=new Float64Array(this._subDistance.buffer,8*this._activeIndex,e),i=new Float32Array(this._subBirthTime.buffer,4*this._activeIndex,e);if(e===this._segementCount){var s=this._vertexBuffer1._byteLength+this._vertexBuffer2._byteLength;t.Resource._addMemory(-s,-s),this._vertexBuffer1.destroy(),this._vertexBuffer2.destroy(),this._segementCount+=this._increaseSegementCount,this._resizeData(this._segementCount,this.bufferState)}this._vertices1.set(r,0),this._vertices2.set(a,0),this._subDistance.set(n,0),this._subBirthTime.set(i,0),this._endIndex=e,this._activeIndex=0,this._vertexBuffer1.setData(this._vertices1.buffer,0,2*this._floatCountPerVertices1*this._activeIndex*4,2*this._floatCountPerVertices1*e*4),this._vertexBuffer2.setData(this._vertices2.buffer,0,2*this._floatCountPerVertices2*this._activeIndex*4,2*this._floatCountPerVertices2*e*4)}_updateTrail(e,r,a){t.Vector3.equals(r,a)||(this._endIndex-this._activeIndex==0?this._addTrailByFirstPosition(e,a):this._addTrailByNextPosition(e,a))}_addTrailByFirstPosition(e,t){this._endIndex===this._segementCount&&this._resetData(),this._subDistance[this._endIndex]=0,this._subBirthTime[this._endIndex]=this._owner._curtime,this._endIndex++,t.cloneTo(this._lastFixedVertexPosition),this._needAddFirstVertex=!0}_addTrailByNextPosition(r,a){var n=Xr._tempVector30,i=Xr._tempVector31;switch(this._owner.alignment){case e.TrailAlignment.View:var s=r.viewMatrix;t.Vector3.transformCoordinate(a,s,Xr._tempVector33),t.Vector3.transformCoordinate(this._lastFixedVertexPosition,s,Xr._tempVector34),t.Vector3.subtract(Xr._tempVector33,Xr._tempVector34,n),t.Vector3.cross(Xr._tempVector33,n,i);break;case e.TrailAlignment.TransformZ:t.Vector3.subtract(a,this._lastFixedVertexPosition,n);var o=Xr._tempVector32;this._owner._ownerRender.owner.transform.getForward(o),t.Vector3.cross(n,o,i)}t.Vector3.normalize(i,i),t.Vector3.scale(i,this._owner.widthMultiplier/2,i);var l,h,c=t.Vector3.scalarLength(n);this._needAddFirstVertex&&(this._updateVerticesByPositionData(a,i,this._endIndex-1),this._needAddFirstVertex=!1),c-this._owner.minVertexDistance>=t.MathUtils3D.zeroTolerance?(this._isTempEndVertex?(l=this._endIndex-1,h=c-this._subDistance[l],this._updateVerticesByPosition(a,i,c,l),this._owner._totalLength+=h):(this._endIndex===this._segementCount&&this._resetData(),this._updateVerticesByPosition(a,i,c,this._endIndex),this._owner._totalLength+=c,this._endIndex++),a.cloneTo(this._lastFixedVertexPosition),this._isTempEndVertex=!1):(this._isTempEndVertex?(l=this._endIndex-1,h=c-this._subDistance[l],this._updateVerticesByPosition(a,i,c,l),this._owner._totalLength+=h):(this._endIndex===this._segementCount&&this._resetData(),this._updateVerticesByPosition(a,i,c,this._endIndex),this._owner._totalLength+=c,this._endIndex++),this._isTempEndVertex=!0)}_updateVerticesByPositionData(e,r,a){var n=2*this._floatCountPerVertices1*a,i=this._owner._curtime;this._vertices1[n]=e.x,this._vertices1[n+1]=e.y,this._vertices1[n+2]=e.z,this._vertices1[n+3]=-r.x,this._vertices1[n+4]=-r.y,this._vertices1[n+5]=-r.z,this._vertices1[n+6]=i,this._vertices1[n+7]=1,this._vertices1[n+8]=e.x,this._vertices1[n+9]=e.y,this._vertices1[n+10]=e.z,this._vertices1[n+11]=r.x,this._vertices1[n+12]=r.y,this._vertices1[n+13]=r.z,this._vertices1[n+14]=i,this._vertices1[n+15]=0;var s=this._owner._ownerRender.bounds,o=s.getMin(),l=s.getMax(),h=Xr._tempVector35,c=Xr._tempVector36,d=Xr._tempVector32;t.Vector3.add(e,r,h),t.Vector3.subtract(e,r,c),t.Vector3.min(c,h,d),t.Vector3.min(o,d,o),s.setMin(o),t.Vector3.max(h,c,d),t.Vector3.max(l,d,l),s.setMax(l);var _=2*this._floatCountPerVertices1;this._vertexBuffer1.setData(this._vertices1.buffer,4*n,4*n,4*_)}_updateVerticesByPosition(e,t,r,a){this._updateVerticesByPositionData(e,t,a),this._subDistance[a]=r,this._subBirthTime[a]=this._owner._curtime}_updateVertexBufferUV(){var e,r,a;if(this._disappearBoundsMode){e=this._owner._ownerRender.bounds;var n=this._owner._ownerRender.owner.transform.position;e.setMin(n),e.setMax(n),r=e.getMin(),a=e.getMax()}for(var i=this._endIndex,s=0,o=this._owner.colorGradient,l=o.colorAlphaKeysCount-1,h=o.colorRGBKeysCount-1,c=this._owner._totalLength,d=2*this._floatCountPerVertices2,_=this._activeIndex;_<i;_++){var u,m;_!==this._activeIndex&&(s+=this._subDistance[_]),this._owner.textureMode==Wr.Stretch?m=u=1-s/c:(m=1-s/c,u=1-(c-s)),h=o.evaluateColorRGB(m,this.tmpColor,h,!0),l=o.evaluateColorAlpha(m,this.tmpColor,l,!0);var f=_*d;if(this._vertices2[f+0]=u,this._vertices2[f+1]=this.tmpColor.r,this._vertices2[f+2]=this.tmpColor.g,this._vertices2[f+3]=this.tmpColor.b,this._vertices2[f+4]=this.tmpColor.a,this._vertices2[f+5]=u,this._vertices2[f+6]=this.tmpColor.r,this._vertices2[f+7]=this.tmpColor.g,this._vertices2[f+8]=this.tmpColor.b,this._vertices2[f+9]=this.tmpColor.a,this._disappearBoundsMode){var g=2*this._floatCountPerVertices1*_,p=Xr._tempVector32,S=Xr._tempVector33,T=Xr._tempVector34;p.setValue(this._vertices1[g+0],this._vertices1[g+1],this._vertices1[g+2]),S.setValue(this._vertices1[g+3],this._vertices1[g+4],this._vertices1[g+5]),t.Vector3.add(p,S,T),t.Vector3.min(T,r,r),t.Vector3.max(T,a,a),t.Vector3.subtract(p,S,T),t.Vector3.min(T,r,r),t.Vector3.max(T,a,a)}}this._disappearBoundsMode&&(e.setMin(r),e.setMax(a),this._disappearBoundsMode=!1);var E=this._activeIndex*d;this._vertexBuffer2.setData(this._vertices2.buffer,4*E,4*E,4*(i*d-E))}_updateDisappear(){for(var e=this._endIndex,r=this._activeIndex;r<e&&this._owner._curtime-this._subBirthTime[r]>=this._owner.time+t.MathUtils3D.zeroTolerance;r++){var a=r+1;if(a!==e&&(this._owner._totalLength-=this._subDistance[a]),this._isTempEndVertex&&a===e-1){var n=this._lastFixedVertexPosition;n.x=this._vertices1[0],n.y=this._vertices1[1],n.z=this._vertices1[2],this._isTempEndVertex=!1}this._activeIndex++,this._disappearBoundsMode=!0}}_getType(){return Xr._type}_prepareRender(e){return this._endIndex-this._activeIndex>1}_updateRenderParams(e){this.clearRenderParams();var t=2*this._activeIndex,r=2*this._endIndex-t;this.setDrawArrayParams(t,r)}destroy(){super.destroy();var e=this._vertexBuffer1._byteLength+this._vertexBuffer2._byteLength;t.Resource._addMemory(-e,-e),this.bufferState.destroy(),this._vertexBuffer1.destroy(),this._vertexBuffer2.destroy(),this.bufferState=null,this._vertices1=null,this._vertexBuffer1=null,this._vertices2=null,this._vertexBuffer2=null,this._subBirthTime=null,this._subDistance=null,this._lastFixedVertexPosition=null,this._disappearBoundsMode=!1}clear(){this._activeIndex=0,this._endIndex=0,this._disappearBoundsMode=!1,this._subBirthTime.fill(0),this._subDistance.fill(0),this._segementCount=0,this._isTempEndVertex=!1,this._needAddFirstVertex=!1,this._lastFixedVertexPosition.setValue(0,0,0)}}Xr.ALIGNMENT_VIEW=0,Xr.ALIGNMENT_TRANSFORM_Z=1,Xr._tempVector30=new t.Vector3,Xr._tempVector31=new t.Vector3,Xr._tempVector32=new t.Vector3,Xr._tempVector33=new t.Vector3,Xr._tempVector34=new t.Vector3,Xr._tempVector35=new t.Vector3,Xr._tempVector36=new t.Vector3,Xr._type=ke._typeCounter++;class jr extends at{static __initDefine__(){jr.MAINTEXTURE=t.Shader3D.propertyNameToID("u_MainTexture"),jr.TINTCOLOR=t.Shader3D.propertyNameToID("u_MainColor"),jr.TILINGOFFSET=t.Shader3D.propertyNameToID("u_TilingOffset")}get color(){return this._shaderValues.getColor(jr.TINTCOLOR)}set color(e){this._shaderValues.setColor(jr.TINTCOLOR,e)}get texture(){return this._shaderValues.getTexture(jr.MAINTEXTURE)}set texture(e){e?this._shaderValues.addDefine(jr.SHADERDEFINE_MAINTEXTURE):this._shaderValues.removeDefine(jr.SHADERDEFINE_MAINTEXTURE),this._shaderValues.setTexture(jr.MAINTEXTURE,e)}get tilingOffset(){return this._shaderValues.getVector(jr.TILINGOFFSET)}set tilingOffset(e){e?this._shaderValues.setVector(jr.TILINGOFFSET,e):this._shaderValues.getVector(jr.TILINGOFFSET).setValue(1,1,0,0)}constructor(){super(),this.setShaderName("Trail"),this.materialRenderMode=e.MaterialRenderMode.RENDERMODE_ALPHABLENDED}clone(){var e=new jr;return this.cloneTo(e),e}set renderMode(e){switch(e){case jr.RENDERMODE_ADDTIVE:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE,this.alphaTest=!1,this._shaderValues.addDefine(jr.SHADERDEFINE_ADDTIVEFOG);break;case jr.RENDERMODE_ALPHABLENDED:this.renderQueue=at.RENDERQUEUE_TRANSPARENT,this.depthWrite=!1,this.cull=t.RenderState.CULL_NONE,this.blend=t.RenderState.BLEND_ENABLE_ALL,this.blendSrc=t.RenderState.BLENDPARAM_SRC_ALPHA,this.blendDst=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.alphaTest=!1,this._shaderValues.removeDefine(jr.SHADERDEFINE_ADDTIVEFOG);break;default:throw new Error("ShurikenParticleMaterial : renderMode value error.")}}}jr.RENDERMODE_ALPHABLENDED=0,jr.RENDERMODE_ADDTIVE=1;class Qr{static __init__(){Qr.CURTIME=t.Shader3D.propertyNameToID("u_CurTime"),Qr.LIFETIME=t.Shader3D.propertyNameToID("u_LifeTime"),Qr.WIDTHCURVE=t.Shader3D.propertyNameToID("u_WidthCurve"),Qr.WIDTHCURVEKEYLENGTH=t.Shader3D.propertyNameToID("u_WidthCurveKeyLength");const e=t.LayaGL.renderOBJCreate.createGlobalUniformMap("Sprite3D");e.addShaderUniform(Qr.CURTIME,"u_CurTime"),e.addShaderUniform(Qr.LIFETIME,"u_LifeTime"),e.addShaderUniform(Qr.WIDTHCURVE,"u_WidthCurve"),e.addShaderUniform(Qr.WIDTHCURVEKEYLENGTH,"u_WidthCurveKeyLength")}get time(){return this._time}set time(e){this._time=e,this._ownerRender._shaderValues.setNumber(Qr.LIFETIME,e)}get minVertexDistance(){return this._minVertexDistance}set minVertexDistance(e){this._minVertexDistance=e}get widthMultiplier(){return this._widthMultiplier}set widthMultiplier(e){this._widthMultiplier=e}get widthCurve(){return this._widthCurve}set widthCurve(e){this._widthCurve=e;var t,r,a=new Float32Array(4*e.length),n=0;for(t=0,r=e.length;t<r;t++)a[n++]=e[t].time,a[n++]=e[t].inTangent,a[n++]=e[t].outTangent,a[n++]=e[t].value;this._ownerRender._shaderValues.setBuffer(Qr.WIDTHCURVE,a),this._ownerRender._shaderValues.setInt(Qr.WIDTHCURVEKEYLENGTH,e.length)}get colorGradient(){return this._colorGradient}set colorGradient(e){this._colorGradient=e}get textureMode(){return this._textureMode}set textureMode(e){this._textureMode=e}constructor(r){this._textureMode=Wr.Stretch,this._totalLength=0,this._lastPosition=new t.Vector3,this._curtime=0,this.alignment=e.TrailAlignment.View,this._ownerRender=r,this._initDefaultData(),this.addRenderElement()}addRenderElement(){var e=this._ownerRender,t=e._renderElements,r=e.sharedMaterials[0];r||(r=jr.defaultMaterial);var a=new ze;a.setTransform(this._ownerRender.owner._transform),a.render=e,a.material=r,this._trialGeometry=new Xr(this),a.setGeometry(this._trialGeometry),t.push(a)}_update(e){var t=this._ownerRender;const r=this._ownerRender.owner.scene;if(r){this._curtime+=r.timer._delta/1e3,t._shaderValues.setNumber(Qr.CURTIME,this._curtime);var a=this._ownerRender.owner.transform.position,n=t._renderElements[0]._geometry;n._updateDisappear(),n._updateTrail(e.camera,this._lastPosition,a),n._updateVertexBufferUV(),a.cloneTo(this._lastPosition)}}_initDefaultData(){this.time=5,this.minVertexDistance=.1,this.widthMultiplier=1,this.textureMode=Wr.Stretch;var e=[],r=new z;r.time=0,r.inTangent=0,r.outTangent=0,r.value=1,e.push(r);var a=new z;a.time=1,a.inTangent=0,a.outTangent=0,a.value=1,e.push(a),this.widthCurve=e;var n=new Gt(2,2);n.mode=Ut.Blend,n.addColorRGB(0,t.Color.WHITE),n.addColorRGB(1,t.Color.WHITE),n.addColorAlpha(0,1),n.addColorAlpha(1,1),this.colorGradient=n}destroy(){this._trialGeometry.destroy(),this._trialGeometry=null,this._widthCurve=null,this._colorGradient=null}clear(){this._trialGeometry.clear(),this._lastPosition.setValue(0,0,0),this._curtime=0,this._totalLength=0}}class Kr extends He{constructor(){super(),this._projectionViewWorldMatrix=new t.Matrix4x4,this._supportOctree=!1}_onAdded(){this._trailFilter=new Qr(this)}get time(){return this._trailFilter.time}set time(e){this._trailFilter.time=e}get minVertexDistance(){return this._trailFilter.minVertexDistance}set minVertexDistance(e){this._trailFilter.minVertexDistance=e}get widthMultiplier(){return this._trailFilter.widthMultiplier}set widthMultiplier(e){this._trailFilter.widthMultiplier=e}get widthCurve(){return this._trailFilter.widthCurve}set widthCurve(e){this._trailFilter.widthCurve=e}get colorGradient(){return this._trailFilter.colorGradient}set colorGradient(e){this._trailFilter.colorGradient=e}get textureMode(){return this._trailFilter.textureMode}set textureMode(e){this._trailFilter.textureMode=e}get alignment(){return this._trailFilter.alignment}set alignment(e){this._trailFilter.alignment=e}_onEnable(){super._onEnable(),this.owner._transform.position.cloneTo(this._trailFilter._lastPosition)}onUpdate(){this._calculateBoundingBox()}get bounds(){return this._bounds}_calculateBoundingBox(){let e=Ze._instance;this.boundsChange=!1,this._trailFilter._update(e)}_renderUpdate(e,t){super._renderUpdate(e,t)}clear(){this._trailFilter.clear()}_onDestroy(){this._trailFilter.destroy(),super._onDestroy()}_cloneTo(e){super._cloneTo(e);let t=e;t.time=this.time,t.minVertexDistance=this.minVertexDistance;var r=[],a=this.widthCurve;for(let e=0,t=this.widthCurve.length;e<t;e++)r.push(a[e].clone());t.widthCurve=r,t.colorGradient=this.colorGradient.clone(),t.textureMode=this.textureMode,t.alignment=this.alignment}}class qr extends le{static __init__(){}get trailFilter(){return this._geometryFilter}get trailRenderer(){return this._render}constructor(e=null){super(e),this._render=this.addComponent(Kr),this._geometryFilter=this._render._trailFilter}_parse(e,r){super._parse(e,r);var a,n,i=this._render,s=this._geometryFilter,o=e.materials;if(o){var l=i.sharedMaterials,h=o.length;for(l.length=h,a=0;a<h;a++)l[a]=t.Loader.getRes(o[a].path);i.sharedMaterials=l}s.time=e.time,s.minVertexDistance=e.minVertexDistance,s.widthMultiplier=e.widthMultiplier,s.textureMode=e.textureMode,null!=e.alignment&&(s.alignment=e.alignment);var c=[],d=e.widthCurve;for(a=0,n=d.length;a<n;a++){var _=new z;_.time=d[a].time,_.inTangent=d[a].inTangent,_.outTangent=d[a].outTangent,_.value=d[a].value,c.push(_)}s.widthCurve=c;var u=e.colorGradient,m=u.colorKeys,f=u.alphaKeys,g=new Gt(m.length,f.length);for(g.mode=u.mode,a=0,n=m.length;a<n;a++){var p=m[a];g.addColorRGB(p.time,new t.Color(p.value[0],p.value[1],p.value[2],1))}for(a=0,n=f.length;a<n;a++){var S=f[a];g.addColorAlpha(S.time,S.value)}s.colorGradient=g}_cloneTo(e,t,r){super._cloneTo(e,t,r)}clear(){this._render.clear()}_create(){return new J}}class Zr extends ze{static create(){let e=Zr._pool.length>0?Zr._pool.pop():new Zr;return e._isInPool=!1,e.clear(),e}constructor(){super(),this.setGeometry(new _t(null)),this._instanceBatchElementList=new t.SingletonList,this._isUpdataData=!0}getInvertFront(){return!1}_createRenderElementOBJ(){this._renderElementOBJ=t.LayaGL.renderOBJCreate.createInstanceRenderElement()}compileShader(e){var t=this._subShader._passes;this._renderElementOBJ._clearShaderInstance();for(var r=0,a=t.length;r<a;r++){var n=t[r];if(n._pipelineMode===e.pipelineMode){var i=ze._compileDefine;e.sceneShaderData._defineDatas.cloneTo(i),this.render&&i.addDefineDatas(this.render._shaderValues._defineDatas),i.addDefineDatas(this._renderElementOBJ._materialShaderData._defineDatas),i.add(he.SHADERDEFINE_GPU_INSTANCE);var s=n.withCompile(i);this._renderElementOBJ._addShaderInstance(s)}}}_renderUpdatePre(e){var t=o.Scene3D._updateMark,r=this.transform;e.renderElement=this,!!this.render&&(t!==this.render._sceneUpdateMark||this.renderType!==this.render._updateRenderType)&&(this.render._renderUpdate(e,r),this.render._sceneUpdateMark=t);var a=Ft._updateMark;if(this.render._renderUpdateWithCamera(e,r),this.oriRendertype=this.render._updateRenderType,this.render._updateMark=a,this.render._updateRenderType=this.renderType,this._isUpdataData){let e=this._geometry.subMesh._mesh;this.updateInstanceData(e),this._isUpdataData=!1}const n=!!this.render&&this.render._subUniformBufferData;n&&n._needUpdate&&He._transLargeUbO.updateSubData(n),this._renderElementOBJ._isRender=this._geometry._prepareRender(e),this._geometry._updateRenderParams(e),this.compileShader(e._contextOBJ),this._geometry.instanceCount=this._instanceBatchElementList.length,this._renderElementOBJ._invertFront=this.getInvertFront()}updateInstanceData(e){switch(e._setInstanceBuffer(),this._renderElementOBJ.clear(),this._geometry.bufferState=e._instanceBufferState,e._instanceBufferStateType){case ea.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:var t=this._renderElementOBJ.getUpdateData(0,16*Zr.maxInstanceCount);this._renderElementOBJ.addUpdateBuffer(e._instanceWorldVertexBuffer,16);var r=(c=this._instanceBatchElementList).elements,a=c.length;this._renderElementOBJ.drawCount=a;let d=r[0].render.rootBone;if(d)for(var n=0;n<a;n++){var i=r[n].render.rootBone._transform.worldMatrix;t.set(i.elements,16*n)}else for(n=0;n<a;n++)t.set(r[n].transform.worldMatrix.elements,16*n);var s=this._renderElementOBJ.getUpdateData(1,4*Zr.maxInstanceCount);if(d)for(n=0;n<a;n++){var o=r[n].render;o._computeAnimatorParamsData();var l=o._simpleAnimatorParams,h=4*n;s[h]=l.x,s[h+1]=l.y}else for(n=0;n<a;n++)s[h]=0,s[h+1]=0;this._renderElementOBJ.addUpdateBuffer(e._instanceSimpleAniVertexBuffer,4);break;case ea.MESH_INSTANCEBUFFER_TYPE_NORMAL:t=this._renderElementOBJ.getUpdateData(0,16*Zr.maxInstanceCount);this._renderElementOBJ.addUpdateBuffer(e._instanceWorldVertexBuffer,16);var c;r=(c=this._instanceBatchElementList).elements,a=c.length;this._renderElementOBJ.drawCount=a;for(n=0;n<a;n++)t.set(r[n].transform.worldMatrix.elements,16*n)}}clear(){this._instanceBatchElementList.length=0}recover(){Zr._pool.push(this),this.render._updateRenderType=this.oriRendertype,this._isInPool=!0}}Zr.maxInstanceCount=1024,Zr._pool=[];class Jr extends ke{get indexCount(){return this._indexCount}constructor(e){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this.indexFormat=e.indexFormat,e.indexFormat!==t.IndexFormat.UInt32||t.LayaGL.renderEngine.getCapable(t.RenderCapable.Element_Index_Uint32)?(this._mesh=e,this._boneIndicesList=[],this._subIndexBufferStart=[],this._subIndexBufferCount=[]):console.warn("SubMesh:this device do not support IndexFormat.UInt32.")}_setIndexRange(e,r,a=t.IndexFormat.UInt16){this._indexStart=e,this._indexCount=r,this._indexBuffer.canRead&&(a==t.IndexFormat.UInt16?this._indices=new Uint16Array(this._indexBuffer.getData().buffer,2*e,r):this._indices=new Uint32Array(this._indexBuffer.getData().buffer,4*e,r))}_getType(){return Jr._type}_prepareRender(e){return this._mesh._uploadVerticesData(),!0}_updateRenderParams(e){var r,a=this._mesh,n=e.renderElement&&e.renderElement.render?e.renderElement.render._skinnedData:null;switch(a.indexFormat){case t.IndexFormat.UInt32:r=4;break;case t.IndexFormat.UInt16:r=2;break;case t.IndexFormat.UInt8:r=1}if(this.clearRenderParams(),this.bufferState=a._bufferState,n)for(var i=0,s=this._boneIndicesList.length;i<s;i++)this.setDrawElemenParams(this._subIndexBufferCount[i],this._subIndexBufferStart[i]*r);else this.setDrawElemenParams(this._indexCount,this._indexStart*r)}getIndices(){if(this._mesh._isReadable)return this._indices.slice();throw"SubMesh:can't get indices on subMesh,mesh's isReadable must be true."}setIndices(e){this._indexBuffer.setData(e,this._indexStart,0,this._indexCount)}destroy(){this._destroyed||(super.destroy(),this._indexBuffer.destroy(),this._indexBuffer=null,this._mesh=null,this._boneIndicesList=null,this._subIndexBufferStart=null,this._subIndexBufferCount=null)}}Jr._type=ke._typeCounter++;class $r{constructor(e,t,r){this.subMeshIndex=e,this.batchIndex=t,this.batchBoneIndex=r}}class ea extends t.Resource{static __init__(){var e=w._bullet;e&&(ea._nativeTempVector30=e.btVector3_create(0,0,0),ea._nativeTempVector31=e.btVector3_create(0,0,0),ea._nativeTempVector32=e.btVector3_create(0,0,0))}static load(e,r){t.ILaya.loader.load(e,r,null,t.Loader.MESH)}get inverseAbsoluteBindPoses(){return this._inverseBindPoses}get vertexCount(){return this._vertexCount}get indexCount(){return this._indexBuffer.indexCount}get subMeshCount(){return this._subMeshes.length}get bounds(){return this._bounds}set bounds(e){this._bounds!==e&&e.cloneTo(this._bounds)}get indexFormat(){return this._indexFormat}set indexFormat(e){this._indexFormat=e,this._subMeshes.forEach((t=>{t.indexFormat=e}))}constructor(e=!0){super(),this._tempVector30=new t.Vector3,this._tempVector31=new t.Vector3,this._tempVector32=new t.Vector3,this._minVerticesUpdate=-1,this._maxVerticesUpdate=-1,this._needUpdateBounds=!0,this._bufferState=new t.BufferState,this._instanceBufferStateType=0,this._vertexBuffer=null,this._indexBuffer=null,this._skinnedMatrixCaches=[],this._vertexCount=0,this._indexFormat=t.IndexFormat.UInt16,this._bounds=new _e(new t.Vector3,new t.Vector3),this._isReadable=e,this._subMeshes=[],this.destoryedImmediately=!1}_getPositionElement(e){for(var r=e.vertexDeclaration._vertexElements,a=0,n=r.length;a<n;a++){var i=r[a];if(i._elementFormat===t.VertexElementFormat.Vector3&&i._elementUsage===t.VertexMesh.MESH_POSITION0)return i}return null}_getVerticeElementData(e,r){e.length=this._vertexCount;var a=this._vertexBuffer.vertexDeclaration,n=a.getVertexElementByUsage(r);if(n){var i=this._vertexBuffer.getUint8Data(),s=this._vertexBuffer.getFloat32Data(),o=a.vertexStride,l=o/4,h=n._offset,c=h/4;switch(r){case t.VertexMesh.MESH_TEXTURECOORDINATE0:case t.VertexMesh.MESH_TEXTURECOORDINATE1:for(var d=0;d<this._vertexCount;d++){var _=l*d+c;e[d]=new t.Vector2(s[_],s[_+1])}break;case t.VertexMesh.MESH_POSITION0:case t.VertexMesh.MESH_NORMAL0:for(d=0;d<this._vertexCount;d++){_=l*d+c;e[d]=new t.Vector3(s[_],s[_+1],s[_+2])}break;case t.VertexMesh.MESH_TANGENT0:case t.VertexMesh.MESH_BLENDWEIGHT0:for(d=0;d<this._vertexCount;d++){_=l*d+c;e[d]=new t.Vector4(s[_],s[_+1],s[_+2],s[_+3])}break;case t.VertexMesh.MESH_COLOR0:for(d=0;d<this._vertexCount;d++){_=l*d+c;e[d]=new t.Color(s[_],s[_+1],s[_+2],s[_+3])}break;case t.VertexMesh.MESH_BLENDINDICES0:for(d=0;d<this._vertexCount;d++){_=o*d+h;e[d]=new t.Vector4(i[_],i[_+1],i[_+2],i[_+3])}break;default:throw"Mesh:Unknown elementUsage."}}}_setVerticeElementData(e,r){var a=this._vertexBuffer.vertexDeclaration,n=a.getVertexElementByUsage(r);if(n){var i=this._vertexBuffer.getUint8Data(),s=this._vertexBuffer.getFloat32Data(),o=a.vertexStride,l=o/4,h=n._offset,c=h/4;switch(r){case t.VertexMesh.MESH_TEXTURECOORDINATE0:case t.VertexMesh.MESH_TEXTURECOORDINATE1:for(var d=0,_=e.length;d<_;d++){var u=l*d+c,m=e[d];s[u]=m.x,s[u+1]=m.y}break;case t.VertexMesh.MESH_POSITION0:case t.VertexMesh.MESH_NORMAL0:for(d=0,_=e.length;d<_;d++){u=l*d+c;var f=e[d];s[u]=f.x,s[u+1]=f.y,s[u+2]=f.z}break;case t.VertexMesh.MESH_TANGENT0:case t.VertexMesh.MESH_BLENDWEIGHT0:for(d=0,_=e.length;d<_;d++){u=l*d+c;var g=e[d];s[u]=g.x,s[u+1]=g.y,s[u+2]=g.z,s[u+3]=g.w}break;case t.VertexMesh.MESH_COLOR0:for(d=0,_=e.length;d<_;d++){u=l*d+c;var p=e[d];s[u]=p.r,s[u+1]=p.g,s[u+2]=p.b,s[u+3]=p.a}break;case t.VertexMesh.MESH_BLENDINDICES0:for(d=0,_=e.length;d<_;d++){u=o*d+h,g=e[d];i[u]=g.x,i[u+1]=g.y,i[u+2]=g.z,i[u+3]=g.w}break;default:throw"Mesh:Unknown elementUsage."}this._minVerticesUpdate=0,this._maxVerticesUpdate=Number.MAX_SAFE_INTEGER}else console.warn("Mesh: the mesh don't have  this VertexElement.")}_disposeResource(){for(var e=0,t=this._subMeshes.length;e<t;e++)this._subMeshes[e].destroy();this._btTriangleMesh&&w._bullet.btStridingMeshInterface_destroy(this._btTriangleMesh),this._vertexBuffer&&this._vertexBuffer.destroy(),this._indexBuffer&&this._indexBuffer.destroy(),this._bufferState.destroy(),this._instanceBufferState&&this._instanceBufferState.destroy(),this._instanceWorldVertexBuffer&&this._instanceWorldVertexBuffer.destroy(),this._instanceSimpleAniVertexBuffer&&this._instanceSimpleAniVertexBuffer.destroy(),this.instanceWorldMatrixData&&(this.instanceWorldMatrixData=null),this.instanceSimpleAnimatorData&&(this.instanceSimpleAnimatorData=null),this._setCPUMemory(0),this._setGPUMemory(0),this._bufferState=null,this._instanceBufferState=null,this._vertexBuffer=null,this._indexBuffer=null,this._subMeshes=null,this._btTriangleMesh=null,this._indexBuffer=null,this._boneNames=null,this._inverseBindPoses=null}_setSubMeshes(e){this._subMeshes=e;for(var t=0,r=e.length;t<r;t++)e[t]._indexInMesh=t}_setBuffer(e,t){this._bufferState.applyState([e],t)}_setInstanceBuffer(){if(this._instanceBufferState)return;var e=this._instanceBufferState=new t.BufferState,r=this._instanceBufferStateType;let a=[];a.push(this._vertexBuffer);let n=this._instanceWorldVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(16*Zr.maxInstanceCount*4,t.BufferUsage.Dynamic,!1);if(n.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,n.instanceBuffer=!0,a.push(n),this.instanceWorldMatrixData=new Float32Array(16*Zr.maxInstanceCount),r===ea.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR){let e=this._instanceSimpleAniVertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*Zr.maxInstanceCount*4,t.BufferUsage.Dynamic,!1);e.vertexDeclaration=t.VertexMesh.instanceSimpleAnimatorDeclaration,e.instanceBuffer=!0,this.instanceSimpleAnimatorData=new Float32Array(4*Zr.maxInstanceCount),a.push(e)}e.applyState(a,this._indexBuffer)}_getPhysicMesh(){for(var e=w._bullet,t=e.btTriangleMesh_create(),r=ea._nativeTempVector30,a=ea._nativeTempVector31,n=ea._nativeTempVector32,i=this._tempVector30,s=this._tempVector31,o=this._tempVector32,h=this._vertexBuffer,c=this._getPositionElement(h),d=h.getFloat32Data(),_=h.vertexDeclaration.vertexStride/4,u=c._offset/4,m=this._indexBuffer.getData(),f=0,g=m.length;f<g;f+=3){var p=m[f]*_+u,S=m[f+1]*_+u,T=m[f+2]*_+u;i.setValue(d[p],d[p+1],d[p+2]),s.setValue(d[S],d[S+1],d[S+2]),o.setValue(d[T],d[T+1],d[T+2]),l._convertToBulletVec3(i,r),l._convertToBulletVec3(s,a),l._convertToBulletVec3(o,n),e.btTriangleMesh_addTriangle(t,r,a,n,!1)}return this._btTriangleMesh=t,this._btTriangleMesh}_uploadVerticesData(){var e=this._minVerticesUpdate,t=this._maxVerticesUpdate;if(-1!==e&&-1!==t){var r=e;this._vertexBuffer.setData(this._vertexBuffer.getUint8Data().buffer,r,r,t-e),this._minVerticesUpdate=-1,this._maxVerticesUpdate=-1}}getSubMesh(e){return this._subMeshes[e]}getPositions(e){if(!this._isReadable)throw"Mesh:can't get positions on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_POSITION0)}setPositions(e){if(!this._isReadable)throw"Mesh:setPosition() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_POSITION0),this._needUpdateBounds=!0}getColors(e){if(!this._isReadable)throw"Mesh:can't get colors on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_COLOR0)}setColors(e){if(!this._isReadable)throw"Mesh:setColors() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_COLOR0)}getUVs(e,r=0){if(!this._isReadable)throw"Mesh:can't get uvs on mesh,isReadable must be true.";switch(r){case 0:this._getVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE0);break;case 1:this._getVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE1);break;default:throw"Mesh:Invalid channel."}}setUVs(e,r=0){if(!this._isReadable)throw"Mesh:setUVs() need isReadable must be true or use setVertices().";switch(r){case 0:this._setVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE0);break;case 1:this._setVerticeElementData(e,t.VertexMesh.MESH_TEXTURECOORDINATE1);break;default:throw"Mesh:Invalid channel."}}getNormals(e){if(!this._isReadable)throw"Mesh:can't get colors on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_NORMAL0)}setNormals(e){if(!this._isReadable)throw"Mesh:setNormals() need must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_NORMAL0)}getTangents(e){if(!this._isReadable)throw"Mesh:can't get colors on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_TANGENT0)}setTangents(e){if(!this._isReadable)throw"Mesh:setTangents() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_TANGENT0)}getBoneWeights(e){if(!this._isReadable)throw"Mesh:can't get boneWeights on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_BLENDWEIGHT0)}setBoneWeights(e){if(!this._isReadable)throw"Mesh:setBoneWeights() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_BLENDWEIGHT0)}getBoneIndices(e){if(!this._isReadable)throw"Mesh:can't get boneIndices on mesh,isReadable must be true.";this._getVerticeElementData(e,t.VertexMesh.MESH_BLENDINDICES0)}setBoneIndices(e){if(!this._isReadable)throw"Mesh:setBoneIndices() need isReadable must be true or use setVertices().";this._setVerticeElementData(e,t.VertexMesh.MESH_BLENDINDICES0)}markAsUnreadbale(){this._uploadVerticesData(),this._vertexBuffer.markAsUnreadbale(),this._isReadable=!1}getVertexDeclaration(){return this._vertexBuffer._vertexDeclaration}getVertices(){if(this._isReadable)return this._vertexBuffer.getUint8Data().buffer.slice(0);throw"Mesh:can't get vertices on mesh,isReadable must be true."}setVertices(e){this._vertexBuffer.setData(e),this._needUpdateBounds=!0}getIndices(){if(this._isReadable)return this._indexBuffer.getData().slice();throw"Mesh:can't get indices on subMesh,mesh's isReadable must be true."}setIndices(e){var r;e instanceof Uint32Array?r=t.IndexFormat.UInt32:e instanceof Uint16Array?r=t.IndexFormat.UInt16:e instanceof Uint8Array&&(r=t.IndexFormat.UInt8);var a=this._indexBuffer;this._indexFormat===r&&a.indexCount===e.length||(a.destroy(),this._indexBuffer=a=t.LayaGL.renderOBJCreate.createIndexBuffer3D(r,e.length,t.BufferUsage.Static,this._isReadable)),a.setData(e),this.indexFormat=r}calculateBounds(){if(!this._isReadable)throw"Mesh:can't calculate bounds on subMesh,mesh's isReadable must be true.";if(this._needUpdateBounds){var e=this._tempVector30,t=this._tempVector31;e.x=e.y=e.z=Number.MAX_VALUE,t.x=t.y=t.z=-Number.MAX_VALUE;for(var r=this._vertexBuffer,a=this._getPositionElement(r),n=r.getFloat32Data(),i=r.vertexDeclaration.vertexStride/4,s=a._offset/4,o=0,l=n.length;o<l;o+=i){var h=o+s,c=n[h],d=n[h+1],_=n[h+2];e.x=Math.min(e.x,c),e.y=Math.min(e.y,d),e.z=Math.min(e.z,_),t.x=Math.max(t.x,c),t.y=Math.max(t.y,d),t.z=Math.max(t.z,_)}this._bounds.setMin(e),this._bounds.setMax(t),this._needUpdateBounds=!1}}cloneTo(e){var r=e,a=this._vertexBuffer,n=t.LayaGL.renderOBJCreate.createVertexBuffer3D(a._byteLength,a.bufferUsage,a.canRead);n.vertexDeclaration=a.vertexDeclaration,n.setData(a.getUint8Data().slice().buffer),r._vertexBuffer=n,r._vertexCount=this._vertexCount;var i,s=this._indexBuffer,o=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,s.indexCount,s.bufferUsage,s.canRead);o.setData(s.getData().slice()),r._indexBuffer=o,r._setBuffer(r._vertexBuffer,o),r._instanceBufferStateType=this._instanceBufferStateType,r._setCPUMemory(this.cpuMemory),r._setGPUMemory(this.gpuMemory);var l=this._boneNames;if(l){var h=r._boneNames=[];for(i=0;i<l.length;i++)h[i]=l[i]}var c=this._inverseBindPoses;if(c){var d=r._inverseBindPoses=[];for(i=0;i<c.length;i++)d[i]=c[i]}var _=this._skinnedMatrixCaches.length;for(r._skinnedMatrixCaches.length=_,i=0;i<_;i++){var u=this._skinnedMatrixCaches[i];u&&(r._skinnedMatrixCaches[i]=new $r(u.subMeshIndex,u.batchIndex,u.batchBoneIndex))}for(i=0;i<this.subMeshCount;i++){var m=this._subMeshes[i],f=m._subIndexBufferStart,g=m._subIndexBufferCount,p=m._boneIndicesList,S=new Jr(r);S._subIndexBufferStart.length=f.length,S._subIndexBufferCount.length=g.length,S._boneIndicesList.length=p.length;for(var T=0;T<f.length;T++)S._subIndexBufferStart[T]=f[T];for(T=0;T<g.length;T++)S._subIndexBufferCount[T]=g[T];for(T=0;T<p.length;T++)S._boneIndicesList[T]=new Uint16Array(p[T]);S._indexBuffer=o,S._indexStart=m._indexStart,S._indexCount=m._indexCount,S._indices=new Uint16Array(o.getData().buffer,2*m._indexStart,m._indexCount);var E=r._vertexBuffer;S._vertexBuffer=E,r._subMeshes.push(S)}r._setSubMeshes(r._subMeshes)}clone(){var e=new ea;return this.cloneTo(e),e}}ea.MESH_INSTANCEBUFFER_TYPE_NORMAL=0,ea.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR=1,e.AreaShape=void 0,(we=e.AreaShape||(e.AreaShape={}))[we.rectangle=0]="rectangle",we[we.ellipse=1]="ellipse";class ta extends Ke{constructor(){super(),this._lightType=e.LightType.Area,this._lightmapBakedType=e.LightMode.bakeOnly,this._spread=90,this._maxBounces=1024,this._size=new t.Vector2(1,1),this._areaShape=e.AreaShape.rectangle,this._power=100}get lightmapBakedType(){return e.LightMode.bakeOnly}set lightmapBakedType(t){this._lightmapBakedType=e.LightMode.bakeOnly}get shape(){return this._areaShape}set shape(e){this._areaShape=e}set power(e){this._power=e}get power(){return this._power}set size(e){e&&e.cloneTo(this._size)}get size(){return this._size}set spread(e){this._spread=Math.min(Math.max(0,e),180)}get spread(){return this._spread}set maxBounces(e){this._maxBounces=e}get maxBounces(){return this._maxBounces}_addToLightQueue(){}_removeFromLightQueue(){}_parse(e,t){super._parse(e,t)}_cloneTo(e){super._cloneTo(e)}_create(){return new ta}}const ra=new t.Vector3,aa=new t.Vector3;class na{constructor(e){this._mincullRate=e,this._renders=[],this._cachSprite3D=[]}set mincullRate(e){this._mincullRate=e}get mincullRate(){return this._mincullRate}set group(e){if(e!=this._group){if(this._group)for(let e=0,r=this._renders.length;e<r;e++){let r=this._renders[e];r.owner.transform.off(t.Event.TRANSFORM_CHANGED,this._group._updateRecaculateFlag),r._LOD=-1}this._group=e;for(let e=0,r=this._renders.length;e<r;e++){let r=this._renders[e];r.owner.transform.on(t.Event.TRANSFORM_CHANGED,this._group,this._group._updateRecaculateFlag),r._LOD=this._lodIndex}}}set renders(e){this._cachSprite3D=e;for(var t=0,r=e.length;t<r;t++)this.addNode(e[t])}get renders(){return this._cachSprite3D}addNode(e){if(!e)return;let r=e;if(r._isRenderNode>0){let a=r.components;for(let e of a)e instanceof He&&-1==this._renders.indexOf(e)&&this._renders.push(e);this._group&&e.transform.on(t.Event.TRANSFORM_CHANGED,this._group,this._group._updateRecaculateFlag)}for(var a=0,n=e.numChildren;a<n;a++)this.addNode(e.getChildAt(a))}removeNode(r){let a=r;if(a._isRenderNode>0){let n,i=a.components;for(let a of i)a instanceof He&&-1==(n=this._renders.indexOf(a))&&(this._renders.splice(n,1),a.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!1),this._group&&r.transform.off(t.Event.TRANSFORM_CHANGED,this._group._updateRecaculateFlag))}for(var n=0,i=r.numChildren;n<i;n++)this.removeNode(r.getChildAt(n))}removeAllRender(){this._renders.forEach((t=>{t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!1)}))}}class ia extends t.Component{constructor(){super(),this._needcaculateBounds=!1,this._lods=[],this._visialIndex=-1,this._bounds=new _e,this._lodPosition=new t.Vector3,this.runInEditor=!0}get lods(){return this._lods}set lods(e){this._lods=e;for(var t=0,r=this._lods.length;t<r;t++){let e=this._lods[t];e._lodIndex=t,e.group=this,this._setLODinvisible(t)}this._updateRecaculateFlag(),this._visialIndex=-1,this._lodCount=this._lods.length}get bounds(){return this.recalculateBounds(),this._bounds}_onEnable(){super._onEnable()}_onDisable(){super._onDisable(),this._lods.forEach((e=>{e.removeAllRender()}))}_applyVisibleRate(e){for(var t=0;t<this._lodCount;t++){if(e>this._lods[t].mincullRate)return-1==t?(this._setLODvisible(t),void(this._visialIndex=t)):t==this._visialIndex?void 0:(-1!=this._visialIndex&&this._setLODinvisible(this._visialIndex),this._setLODvisible(t),void(this._visialIndex=t))}-1!=this._visialIndex&&(this._setLODinvisible(this._visialIndex),this._visialIndex=-1)}_setLODvisible(t){let r=this._lods[t];for(var a=0,n=r._renders.length;a<n;a++)r._renders[a].setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!1)}_setLODinvisible(t){let r=this._lods[t];for(var a=0,n=r._renders.length;a<n;a++)r._renders[a].setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_CullFlag,!0)}onDestroy(){this._lods.forEach((e=>{let t=e._renders;for(var r=0;r<t.length;r++)e.removeNode(t[r].owner)}))}_updateRecaculateFlag(){this._needcaculateBounds=!0}_cloneTo(e){super._cloneTo(e);let cloneHierachFun=(e,t,r)=>{let a=((e,t)=>{let r=[],a=e;for(;a;)a instanceof J&&r.push(a),a=a.parent;let n=t;for(;n&&-1==r.indexOf(n);)n=n.parent;return n})(e,t);if(!a)return null;let n=[];l._getHierarchyPath(a,e,n);let i=[];l._getHierarchyPath(a,t,i);let s=l._getParentNodeByHierarchyPath(r,n);return s?l._getNodeByHierarchyPath(s,i):null},t=[];for(let r=0,a=this._lodCount;r<a;r++){let a=this._lods[r],n=new na(a.mincullRate);t.push(n),a._renders.forEach((t=>{let r=cloneHierachFun(this.owner,t.owner,e.owner);r&&n.addNode(r)}))}e.lods=t}recalculateBounds(){if(!this._needcaculateBounds)return;let e=!0;for(let t=0,r=this._lods.length;t<r;t++){this._lods[t]._renders.forEach((t=>{e?(t.bounds.cloneTo(this._bounds),e=!1):_e.merge(this._bounds,t.bounds,this._bounds)}))}this._lodPosition=this._bounds.getCenter();let t=this._bounds.getExtent();this._size=2*Math.max(t.x,t.y,t.z),this._needcaculateBounds=!1}onPreRender(){this.recalculateBounds();let e=this.owner.scene.cullInfoCamera,r=e.maxlocalYDistance,a=e.boundFrustum;t.Vector3.subtract(this._lodPosition,e.transform.position,ra);let n=ra.length();if(n>e.farPlane||0==a.containsPoint(this._lodPosition))return;e.transform.worldMatrix.getForward(aa),t.Vector3.normalize(ra,ra),t.Vector3.normalize(aa,aa);let i=n*Math.abs(t.Vector3.dot(ra,aa))/e.farPlane*r,s=this._size/i;this._nowRate=s,this._applyVisibleRate(s)}}class sa{constructor(){this.startPosition=new t.Vector3,this.endPosition=new t.Vector3,this.startColor=new t.Color,this.endColor=new t.Color}cloneTo(e){this.startPosition.cloneTo(e.startPosition),this.endPosition.cloneTo(e.endPosition),this.startColor.cloneTo(e.startColor),this.endColor.cloneTo(e.endColor)}}class oa{static get vertexDeclaration(){return oa._vertexDeclaration}static __init__(){oa._vertexDeclaration=new t.VertexDeclaration(28,[new t.VertexElement(0,t.VertexElementFormat.Vector3,t.VertexMesh.MESH_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector4,t.VertexMesh.MESH_COLOR0)])}get vertexDeclaration(){return oa._vertexDeclaration}constructor(){}}class la extends ke{constructor(e,r){super(t.MeshTopology.Lines,t.DrawType.DrawArray),this._floatCountPerVertices=7,this._minUpdate=Number.MAX_VALUE,this._maxUpdate=Number.MIN_VALUE,this._floatBound=new Float32Array(6),this._calculateBound=!1,this._maxLineCount=0,this._lineCount=0;var a=2*r;this._ownerRender=e,this._maxLineCount=r,this._vertices=new Float32Array(a*this._floatCountPerVertices),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(oa.vertexDeclaration.vertexStride*a,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=oa.vertexDeclaration;var n=new t.BufferState;this.bufferState=n,this.bufferState.applyState([this._vertexBuffer],null);var i=la._tempVector0,s=la._tempVector1;i.setValue(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),s.setValue(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._bounds=new _e(i,s)}_getType(){return la._type}_resizeLineData(e){var r=2*e,a=this._vertices;this._vertexBuffer.destroy(),this._maxLineCount=e;var n=r*this._floatCountPerVertices;this._vertices=new Float32Array(n),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(oa.vertexDeclaration.vertexStride*r,t.BufferUsage.Static,!1),this._vertexBuffer.vertexDeclaration=oa.vertexDeclaration,n<a.length?(this._vertices.set(new Float32Array(a.buffer,0,n)),this._vertexBuffer.setData(this._vertices.buffer,0,0,4*n)):(this._vertices.set(a),this._vertexBuffer.setData(this._vertices.buffer,0,0,4*a.length)),this.bufferState.applyState([this._vertexBuffer],null),this._minUpdate=Number.MAX_VALUE,this._maxUpdate=Number.MIN_VALUE}_updateLineVertices(e,r,a,n,i){r&&(this._vertices[e+0]=r.x,this._vertices[e+1]=r.y,this._vertices[e+2]=r.z),n&&(this._vertices[e+3]=n.r,this._vertices[e+4]=n.g,this._vertices[e+5]=n.b,this._vertices[e+6]=n.a),a&&(this._vertices[e+7]=a.x,this._vertices[e+8]=a.y,this._vertices[e+9]=a.z),i&&(this._vertices[e+10]=i.r,this._vertices[e+11]=i.g,this._vertices[e+12]=i.b,this._vertices[e+13]=i.a),this._minUpdate=Math.min(this._minUpdate,e),this._maxUpdate=Math.max(this._maxUpdate,e+2*this._floatCountPerVertices);var s=this._bounds,o=this._floatBound,l=s.getMin(),h=s.getMax();t.Vector3.min(l,r,l),t.Vector3.min(l,a,l),t.Vector3.max(h,r,h),t.Vector3.max(h,a,h),s.setMin(l),s.setMax(h),o[0]=l.x,o[1]=l.y,o[2]=l.z,o[3]=h.x,o[4]=h.y,o[5]=h.z,this._ownerRender.boundsChange=!0}_reCalculateBound(){if(this._calculateBound){var e=this._vertices,t=la._tempVector0,r=la._tempVector1;t.setValue(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),r.setValue(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var a=0;a<2*this._lineCount;++a){var n=this._floatCountPerVertices*a,i=e[n+0],s=e[n+1],o=e[n+2];t.x=Math.min(i,t.x),t.y=Math.min(s,t.y),t.z=Math.min(o,t.z),r.x=Math.max(i,r.x),r.y=Math.max(s,r.y),r.z=Math.max(o,r.z)}this._bounds.setMin(t),this._bounds.setMax(r);var l=this._floatBound;l[0]=t.x,l[1]=t.y,l[2]=t.z,l[3]=r.x,l[4]=r.y,l[5]=r.z,this._calculateBound=!1}}_removeLineData(e){var t=2*this._floatCountPerVertices,r=e+1,a=e*t,n=this._vertices,i=new Float32Array(n.buffer,r*t*4,(this._lineCount-r)*t);n.set(i,a),this._minUpdate=Math.min(this._minUpdate,a),this._maxUpdate=Math.max(this._maxUpdate,a+i.length),this._lineCount--;var s=this._floatBound,o=n[a],l=n[a+1],h=n[a+2],c=n[a+7],d=n[a+8],_=n[a+9],u=s[0],m=s[1],f=s[2],g=s[3],p=s[4],S=s[5];o!==u&&o!==g&&l!==m&&l!==p&&h!==f&&h!==S&&c!==u&&c!==g&&d!==m&&d!==p&&_!==f&&_!==S||(this._calculateBound=!0)}_updateLineData(e,t,r,a,n){var i=2*this._floatCountPerVertices;this._updateLineVertices(e*i,t,r,a,n)}_updateLineDatas(e,t){for(var r=2*this._floatCountPerVertices,a=t.length,n=0;n<a;n++){var i=t[n];this._updateLineVertices((e+n)*r,i.startPosition,i.endPosition,i.startColor,i.endColor)}}_getLineData(e,t){var r=t.startPosition,a=t.startColor,n=t.endPosition,i=t.endColor,s=this._vertices,o=e*this._floatCountPerVertices*2;r.x=s[o+0],r.y=s[o+1],r.z=s[o+2],a.r=s[o+3],a.g=s[o+4],a.b=s[o+5],a.a=s[o+6],n.x=s[o+7],n.y=s[o+8],n.z=s[o+9],i.r=s[o+10],i.g=s[o+11],i.b=s[o+12],i.a=s[o+13]}_prepareRender(e){return!0}_updateRenderParams(e){this.clearRenderParams(),this._minUpdate!==Number.MAX_VALUE&&this._maxUpdate!==Number.MIN_VALUE&&(this._vertexBuffer.setData(this._vertices.buffer,4*this._minUpdate,4*this._minUpdate,4*(this._maxUpdate-this._minUpdate)),this._minUpdate=Number.MAX_VALUE,this._maxUpdate=Number.MIN_VALUE),this._lineCount>0&&this.setDrawArrayParams(0,2*this._lineCount)}destroy(){this._destroyed||(super.destroy(),this.bufferState.destroy(),this._vertexBuffer.destroy(),this.bufferState=null,this._vertexBuffer=null,this._vertices=null)}}la._tempVector0=new t.Vector3,la._tempVector1=new t.Vector3,la._type=ke._typeCounter++;class ha extends at{static __initDefine__(){ha.COLOR=t.Shader3D.propertyNameToID("u_Color")}get color(){return this._shaderValues.getVector(ha.COLOR)}set color(e){this._shaderValues.setVector(ha.COLOR,e)}constructor(){super(),this.setShaderName("LineShader"),this._shaderValues.setVector(ha.COLOR,new t.Vector4(1,1,1,1))}clone(){var e=new ha;return this.cloneTo(e),e}}class ca extends He{constructor(){super(),this._isRenderActive=!1,this._isInRenders=!1,this._needUpdatelines=!1,this._lines=[],this._projectionViewWorldMatrix=new t.Matrix4x4,this._pixelLineFilter=new la(this,20),this._shaderValues.addDefine(he.SHADERDEFINE_COLOR)}get pixelLinesDatas(){return this._needUpdatelines&&this._updateLineDatas(),this._lines}set pixelLinesDatas(e){this.clear(),this.addLines(e)}get maxLineCount(){return this._pixelLineFilter._maxLineCount}set maxLineCount(e){this._pixelLineFilter._resizeLineData(e),this._pixelLineFilter._lineCount=Math.min(this._pixelLineFilter._lineCount,e)}get lineCount(){return this._pixelLineFilter._lineCount}_onAdded(){super._onAdded(),this._changeRenderObjects(0,ha.defaultMaterial)}_onEnable(){this._isRenderActive=!0,0!=this._pixelLineFilter._lineCount&&(this.owner.scene._addRenderObject(this),this._isInRenders=!0),this._setBelongScene(this.owner.scene)}_onDisable(){this._pixelLineFilter&&0!=this._pixelLineFilter._lineCount&&this._isRenderActive&&(this.owner.scene._removeRenderObject(this),this._isInRenders=!1),this._isRenderActive=!1,this._setUnBelongScene()}_calculateBoundingBox(){var e=this.owner.transform.worldMatrix,t=this._pixelLineFilter;t._reCalculateBound(),t._bounds._tranform(e,this._bounds)}_renderUpdateWithCamera(e,r){e.projectionViewMatrix;var a=this._shaderValues;if(r){var n=r.worldMatrix;a.setMatrix4x4(J.WORLDMATRIX,n)}else a.setMatrix4x4(J.WORLDMATRIX,t.Matrix4x4.DEFAULT)}_changeRenderObjects(e,t){var r=this._renderElements;t||(t=ha.defaultMaterial);var a=r[e];a||(a=r[e]=new ze),a.setTransform(this.owner._transform),a.setGeometry(this._pixelLineFilter),a.render=this,a.material=t}addLine(e,t,r,a){if(this._pixelLineFilter._lineCount===this._pixelLineFilter._maxLineCount)throw"PixelLineSprite3D: lineCount has equal with maxLineCount.";this._pixelLineFilter._updateLineData(this._pixelLineFilter._lineCount++,e,t,r,a),this._isRenderActive&&!this._isInRenders&&this._pixelLineFilter._lineCount>0&&(this.owner.scene&&this.owner.scene._addRenderObject(this),this._isInRenders=!0),this._needUpdatelines=!0}addLines(e){var t=this._pixelLineFilter._lineCount,r=e.length;if(t+r>this._pixelLineFilter._maxLineCount)throw"PixelLineSprite3D: lineCount plus lines count must less than maxLineCount.";this._pixelLineFilter._updateLineDatas(t,e),this._pixelLineFilter._lineCount+=r,this._isRenderActive&&!this._isInRenders&&this._pixelLineFilter._lineCount>0&&(this.owner.scene&&this.owner.scene._addRenderObject(this),this._isInRenders=!0),this._needUpdatelines=!0}removeLine(e){if(!(e<this._pixelLineFilter._lineCount))throw"PixelLineSprite3D: index must less than lineCount.";this._pixelLineFilter._removeLineData(e),this._isRenderActive&&this._isInRenders&&0==this._pixelLineFilter._lineCount&&(this.owner.scene&&this.owner.scene._removeRenderObject(this),this._isInRenders=!1),this._needUpdatelines=!0}setLine(e,t,r,a,n){if(!(e<this._pixelLineFilter._lineCount))throw"PixelLineSprite3D: index must less than lineCount.";{this._pixelLineFilter._updateLineData(e,t,r,a,n);let i=this._lines[e];i&&(a.cloneTo(i.startColor),n.cloneTo(i.endColor),t.cloneTo(i.startPosition),r.cloneTo(i.endPosition))}}getLine(e,t){if(!(e<this.lineCount))throw"PixelLineSprite3D: index must less than lineCount.";this._pixelLineFilter._getLineData(e,t)}_updateLineDatas(){let e=this.lineCount;this._lines=[];for(let t=0;t<e;t++){let e=new sa;this.getLine(t,e),this._lines.push(e)}this._needUpdatelines=!1}clear(){this._pixelLineFilter._lineCount=0,this._isRenderActive&&this._isInRenders&&(this.owner.scene&&this.owner.scene._removeRenderObject(this),this._isInRenders=!1)}_onDestroy(){this._pixelLineFilter.destroy(),this._pixelLineFilter=null,super._onDestroy()}_cloneTo(e){super._cloneTo(e);let t=e;t.maxLineCount=this.maxLineCount;const r=this.lineCount;let a=new sa;for(let e=0,n=r;e<n;e++)this.getLine(e,a),t.addLine(a.startPosition,a.endPosition,a.startColor,a.endColor)}}class da{get normalizedTime(){return this._normalizedTime}get duration(){return this._duration}get animatorState(){return this._currentState}constructor(){this._currentState=null}_resetPlayState(e,t){this._finish=!1,this._startPlayTime=e,this._elapsedTime=e,this._playEventIndex=0,this._lastIsFront=!0,this._normalizedTime=this._elapsedTime/t;var r=this._normalizedTime%1;this._normalizedPlayTime=r<0?r+1:r}_cloneTo(e){e._finish=this._finish,e._startPlayTime=this._startPlayTime,e._elapsedTime=this._elapsedTime,e._normalizedTime=this._normalizedTime,e._normalizedPlayTime=this._normalizedPlayTime,e._playEventIndex=this._playEventIndex,e._lastIsFront=this._lastIsFront}}class _a{get defaultState(){return this._defaultState}set defaultState(e){this._defaultState=e}get avatarMask(){return this._avatarMask}set avatarMask(e){this._avatarMask=e}get defaultStateName(){return this._defaultState?this._defaultState.name:null}set defaultStateName(e){if(this._defaultState=this.getAnimatorState(e),null==this._defaultState)if(0==this._states.length)this._defaultStateNameCatch=e;else for(var t=this._states.length-1;t>=0;t--)if(this._states[t].name==e){this._defaultState=this._states[t];break}}get states(){return this._states}set states(e){if(this._states!==e){if(this._states.length>0){let t=this._states.filter((t=>-1==e.indexOf(t)));for(let e of t)this.removeState(e)}if(e.length>0){let t=e.filter((e=>-1==this._states.indexOf(e)));for(let e of t)this.addState(e)}this._states.length=0,this._states.push(...e)}}constructor(e){this._referenceCount=0,this._playType=-1,this._crossDuration=-1,this._crossMark=0,this._crossNodesOwnersCount=0,this._crossNodesOwners=[],this._crossNodesOwnersIndicesMap={},this._srcCrossClipNodeIndices=[],this._destCrossClipNodeIndices=[],this._states=[],this._playStateInfo=new da,this._crossPlayStateInfo=new da,this.blendingMode=_a.BLENDINGMODE_OVERRIDE,this.defaultWeight=1,this.playOnWake=!0,this.enable=!0,this.name=e}_removeClip(e,t,r){var a=r._clip,n=e[t];if(e.splice(t,1),this._animator){var i=a._nodes,s=n._nodeOwners;a._removeReference();for(var o=0,l=i.count;o<l;o++)this._animator._removeKeyframeNodeOwner(s,i.getNodeByIndex(o))}}_getReferenceCount(){return this._referenceCount}_addReference(e=1){for(var t=0,r=this._states.length;t<r;t++)this._states[t]._addReference(e);this._referenceCount+=e}_removeReference(e=1){for(var t=0,r=this._states.length;t<r;t++)this._states[t]._removeReference(e);this._referenceCount-=e}_clearReference(){this._removeReference(-this._referenceCount)}getCurrentPlayState(){return this._playStateInfo}getAnimatorState(e){var t;for(let r=0;r<this._states.length;r++)if(this._states[r].name==e){t=this._states[r];break}return t||null}addState(e){var t=e.name;if(this.getAnimatorState(t))throw"AnimatorControllerLayer:this stat's name has exist.";this._states.push(e),t==this._defaultStateNameCatch&&(this._defaultState=e,this._defaultStateNameCatch=null),this._animator&&(e._clip&&e._clip._addReference(),this._animator._getOwnersByClip(e))}removeState(e){for(var t=this._states,r=-1,a=0,n=t.length;a<n;a++)if(t[a]===e){r=a;break}-1!==r&&this._removeClip(t,r,e)}destroy(){this._clearReference(),this._states=[],this._playStateInfo=null,this._crossPlayStateInfo=null,this._defaultState=null}cloneTo(e){var t=e;t.name=this.name,t.blendingMode=this.blendingMode,t.defaultWeight=this.defaultWeight,t.playOnWake=this.playOnWake,this.avatarMask&&(t.avatarMask=this._avatarMask.clone())}clone(){var e=new _a(this.name);return this.cloneTo(e),e}}_a.BLENDINGMODE_OVERRIDE=0,_a.BLENDINGMODE_ADDTIVE=1;class ua{static getAnimatorResource(e,r){return"simpleSkinnedMeshRenderer"===r?e.getComponent(Hr):e.getComponent(t.ClassUtils.getClass(r))}}class ma extends t.EventDispatcher{get clip(){return this._clip}set clip(r){if(this._clip!==r){if(this._clip&&this._referenceCount>0&&this._clip._removeReference(this._referenceCount),r){var a=this._realtimeDatas,n=r._nodes,i=n.count;this._currentFrameIndices=new Int16Array(i),this._resetFrameIndices(),this._referenceCount>0&&r._addReference(this._referenceCount),this._realtimeDatas.length=i;for(var s=0;s<i;s++)switch(n.getNodeByIndex(s).type){case e.KeyFrameValueType.Float:break;case e.KeyFrameValueType.Position:case e.KeyFrameValueType.Scale:case e.KeyFrameValueType.RotationEuler:case e.KeyFrameValueType.Vector3:a[s]=new t.Vector3;break;case e.KeyFrameValueType.Rotation:a[s]=new t.Quaternion;break;case e.KeyFrameValueType.Vector2:a[s]=new t.Vector2;break;case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Color:a[s]=new t.Vector4;break;default:throw"AnimationClipParser04:unknown type."}}this._clip=r}}get transitions(){return this._transitions}set transitions(e){this._transitions=e}get soloTransitions(){return this._soloTransitions}set soloTransitions(e){this._soloTransitions=e}constructor(){super(),this._referenceCount=0,this._clip=null,this._nodeOwners=[],this._currentFrameIndices=null,this._realtimeDatas=[],this._scripts=null,this._transitions=[],this._soloTransitions=[],this.speed=1,this.clipStart=0,this.clipEnd=1}_eventStart(){if(this.event(ma.EVENT_OnStateEnter),this._scripts)for(var e=0,t=this._scripts.length;e<t;e++)this._scripts[e].onStateEnter()}_eventExit(){if(this.event(ma.EVENT_OnStateExit),this._scripts)for(let e=0,t=this._scripts.length;e<t;e++)this._scripts[e].onStateExit()}_eventStateUpdate(e){if(this.event(ma.EVENT_OnStateUpdate,e),this._scripts)for(var t=0,r=this._scripts.length;t<r;t++)this._scripts[t].onStateUpdate(e)}_eventtransition(e,t){let r=this._soloTransitions.length;if(r>0){for(var a=0;a<r;a++)if(this._soloTransitions[a].check(e,t))return this._soloTransitions[a];return null}let n=this._transitions.length;for(a=0;a<n;a++)if(this._transitions[a].check(e,t))return this._transitions[a];return null}_getReferenceCount(){return this._referenceCount}_addReference(e=1){this._clip&&this._clip._addReference(e),this._referenceCount+=e}_removeReference(e=1){this._clip&&this._clip._removeReference(e),this._referenceCount-=e}_clearReference(){this._removeReference(-this._referenceCount)}_resetFrameIndices(){for(var e=0,t=this._currentFrameIndices.length;e<t;e++)this._currentFrameIndices[e]=-1}addScript(e){var t=new e;return this._scripts=this._scripts||[],this._scripts.push(t),t}getScript(e){if(this._scripts)for(var t=0,r=this._scripts.length;t<r;t++){var a=this._scripts[t];if(a instanceof e)return a}return null}getScripts(e){var t=null;if(this._scripts)for(var r=0,a=this._scripts.length;r<a;r++){var n=this._scripts[r];n instanceof e&&(t=t||[]).push(n)}return t}cloneTo(e){var t=e;t.name=this.name,t.speed=this.speed,t.clipStart=this.clipStart,t.clipEnd=this.clipEnd,t.clip=this._clip}clone(){var e=new ma;return this.cloneTo(e),e}}ma.EVENT_OnStateEnter="OnStartEnter",ma.EVENT_OnStateUpdate="OnStateUpdate",ma.EVENT_OnStateExit="OnStateExit";class fa{constructor(e){this._avatarPathMap=e||{}}getTransformActive(e){return this._avatarPathMap[e]}setTransformActive(e,t){this._avatarPathMap[e]=t}getAllTranfromPath(){return this._avatarPathMap}clone(){var e=new fa;return this.cloneTo(e),e}cloneTo(e){var t=e;for(var r in this._avatarPathMap)t.setTransformActive(r,this._avatarPathMap[r])}}class ga extends t.Component{set controller(e){this._controller=e,this._controller&&this._controller.updateTo(this)}get controller(){return this._controller}get speed(){return this._speed}set speed(e){this._speed=e}set updateMode(e){this._updateMode=e}set lowUpdateDelty(e){this._lowUpdateDelty=e}get controllerLayerCount(){return this._controllerLayers.length}set animatorParams(e){this._animatorParams=e}get animatorParams(){return this._animatorParams}constructor(){super(),this._keyframeNodeOwners=[],this._updateMode=t.AnimatorUpdateMode.Normal,this._lowUpdateDelty=20,this._animatorParams={},this._linkAvatarSpritesData={},this._linkAvatarSprites=[],this._renderableSprites=[],this.cullingMode=ga.CULLINGMODE_CULLCOMPLETELY,this._controllerLayers=[],this._speed=1,this._keyframeNodeOwnerMap={},this._updateMark=0}_addKeyframeNodeOwner(e,t,r){var a=t._indexInList,n=t.fullPath,i=this._keyframeNodeOwnerMap[n];let s=!1;if(i)i.referenceCount++,e[a]=i;else{for(var o=r,l=0,h=t.propertyCount;l<h&&((o=o[t.getPropertyByIndex(l)])instanceof at&&(s=!0),o);l++);(i=this._keyframeNodeOwnerMap[n]=new Q).isMaterial=s,i.fullPath=n,i.indexInList=this._keyframeNodeOwners.length,i.referenceCount=1,i.propertyOwner=r,i.nodePath=t.nodePath;var c=t.propertyCount,d=[];for(l=0;l<c;l++)d[l]=t.getPropertyByIndex(l);if(i.property=d,i.type=t.type,o)if(0===t.type)i.defaultValue=o;else{var _=new o.constructor;o.cloneTo(_),i.defaultValue=_,i.value=new o.constructor,i.crossFixedValue=new o.constructor}this._keyframeNodeOwners.push(i),e[a]=i}}_removeKeyframeNodeOwner(e,t){var r=t.fullPath,a=this._keyframeNodeOwnerMap[r];a&&(a.referenceCount--,0===a.referenceCount&&(delete this._keyframeNodeOwnerMap[r],this._keyframeNodeOwners.splice(this._keyframeNodeOwners.indexOf(a),1)),e[t._indexInList]=null)}_getOwnersByClip(e){if(e._clip){var t=e._clip._nodes,r=t.count,a=e._nodeOwners;a.length=r;for(var n=0;n<r;n++){for(var i=t.getNodeByIndex(n),s=this.owner,o=0,l=i.ownerPathCount;o<l;o++){var h=i.getOwnerPathByIndex(o);if(""===h)break;if(!(s=s.getChildByName(h)))break}if(s){var c=i.propertyOwner;const e=s;c&&(s=s[c]),s||(s=ua.getAnimatorResource(e,c)),s&&this._addKeyframeNodeOwner(a,i,s)}}}}_updatePlayer(e,t,r,a,n){var i=e._clip._duration*(e.clipEnd-e.clipStart),s=t._elapsedTime,o=s+r;t._lastElapsedTime=s,t._elapsedTime=o;var l=o/i;t._normalizedTime=l;var h=l%1;if(t._normalizedPlayTime=h<0?h+1:h,t._duration=i,!a&&o>=i)return t._finish=!0,t._elapsedTime=i,void(t._normalizedPlayTime=1);e._eventStateUpdate(t._normalizedPlayTime),this._applyTransition(n,e._eventtransition(t._normalizedPlayTime,this.animatorParams))}_applyTransition(e,t){t&&this.crossFade(t.destState.name,t.transduration,e,t.transstartoffset)}_updateStateFinish(e,t){t._finish&&e._eventExit()}_eventScript(e,t,r,a){let n=this.owner.components;if(a)for(let a=e.length;t<a;t++){let a=e[t];if(!(a.time<=r))break;for(let e=0,t=n.length;e<t;e++){let t=n[e];if(t._isScript()){let e=t[a.eventName];e&&e.apply(t,a.params)}}}else for(;t>=0;t--){let a=e[t];if(!(a.time>=r))break;for(let e=0,t=n.length;e<t;e++){let t=n[e];if(t._isScript()){let e=t[a.eventName];e&&e.apply(t,a.params)}}}return t}_updateEventScript(e,r){if(!this.owner._getBit(t.NodeFlags.HAS_SCRIPT))return;let a=e._clip,n=a._animationEvents,i=a._duration,s=r._elapsedTime,o=s%i,l=Math.abs(Math.floor(s/i)-Math.floor(r._lastElapsedTime/i)),h=r._elapsedTime>=r._lastElapsedTime;r._lastIsFront!==h&&(h?r._playEventIndex++:r._playEventIndex--,r._lastIsFront=h);let c=r._playEventIndex;if(h){let e=this._eventScript(n,r._playEventIndex,l>0?i:o,!0);c===r._playEventIndex&&(r._playEventIndex=e);for(let e=0,t=l-1;e<t;e++)this._eventScript(n,0,i,!0);l>0&&o>0&&(r._playEventIndex=this._eventScript(n,0,o,!0))}else{let e=this._eventScript(n,r._playEventIndex,l>0?0:o,!1);c===r._playEventIndex&&(r._playEventIndex=e);let t=n.length-1;for(let e=0,r=l-1;e<r;e++)this._eventScript(n,t,0,!1);l>0&&o>0&&(r._playEventIndex=this._eventScript(n,t,o,!1))}}_updateClipDatas(e,t,r,a=null){var n=e._clip,i=n._duration,s=e.clipStart*i+r._normalizedPlayTime*r._duration,o=e._currentFrameIndices,l=r._elapsedTime>r._lastElapsedTime;n._evaluateClipDatasRealTime(n._nodes,s,o,t,l,e._realtimeDatas,a)}_applyFloat(e,t,r,a,n,i){if(t.updateMark===this._updateMark)if(r)e+=a*i;else{e=e+a*(i-e)}else if(n)e=r?t.defaultValue+i:i;else if(r)e=t.defaultValue+a*i;else{var s=t.defaultValue;e=s+a*(i-s)}return e}_applyVec2(e,t,r,a,n,i){if(!e)return null;if(t.updateMark===this._updateMark)if(r)e.x+=a*i.x,e.y+=a*i.y;else{var s=e;e.x=s.x+a*(i.x-s.x),e.y=s.y+a*(i.y-s.y)}else if(n)r?(e.x=t.defaultValue.x+i.x,e.y=t.defaultValue.y+i.y):i.cloneTo(e);else if(r)e.x=t.defaultValue.x+a*i.x,e.y=t.defaultValue.y+a*i.y;else{var o=t.defaultValue;e.x=o.x+a*(i.x-o.x),e.y=o.y+a*(i.y-o.y)}return e}_applyVec3(e,t,r,a,n,i){if(!e)return null;if(t.updateMark===this._updateMark)if(r)e.x+=a*i.x,e.y+=a*i.y,e.z+=a*i.z;else{var s=e;e.x=s.x+a*(i.x-s.x),e.y=s.y+a*(i.y-s.y),e.z=s.z+a*(i.z-s.z)}else if(n)r?(e.x=t.defaultValue.x+i.x,e.y=t.defaultValue.y+i.y,e.z=t.defaultValue.z+i.z):i.cloneTo(e);else if(r)e.x=t.defaultValue.x+a*i.x,e.y=t.defaultValue.y+a*i.y,e.z=t.defaultValue.z+a*i.z;else{var o=t.defaultValue;e.x=o.x+a*(i.x-o.x),e.y=o.y+a*(i.y-o.y),e.z=o.z+a*(i.z-o.z)}return e}_applyVec4(e,t,r,a,n,i){if(!e)return null;if(t.updateMark===this._updateMark)if(r)e.x+=a*i.x,e.y+=a*i.y,e.z+=a*i.z,e.w+=a*i.w;else{var s=e;e.x=s.x+a*(i.x-s.x),e.y=s.y+a*(i.y-s.y),e.z=s.z+a*(i.z-s.z),e.w=s.w+a*(i.w-s.w)}else if(n)r?(e.x=t.defaultValue.x+i.x,e.y=t.defaultValue.y+i.y,e.z=t.defaultValue.z+i.z,e.w=t.defaultValue.w+i.w):i.cloneTo(e);else if(r)e.x=t.defaultValue.x+a*i.x,e.y=t.defaultValue.y+a*i.y,e.z=t.defaultValue.z+a*i.z,e.w=t.defaultValue.w+a*i.w;else{var o=t.defaultValue;e.x=o.x+a*(i.x-o.x),e.y=o.y+a*(i.y-o.y),e.z=o.z+a*(i.z-o.z),e.w=o.w+a*(i.w-o.w)}return e}_applyColor(e,t,r,a,n,i){if(!e)return null;if(t.updateMark===this._updateMark)if(r)e.r+=a*i.x,e.g+=a*i.y,e.b+=a*i.z,e.a+=a*i.w;else{var s=e;e.r=s.r+a*(i.x-s.r),e.g=s.g+a*(i.y-s.g),e.b=s.b+a*(i.z-s.b),e.a=s.a+a*(i.w-s.a)}else if(n)r?(e.r=t.defaultValue.r+i.x,e.g=t.defaultValue.g+i.y,e.b=t.defaultValue.b+i.z,e.a=t.defaultValue.a+i.w):e.setValue(i.x,i.y,i.z,i.w);else if(r)e.r=t.defaultValue.r+a*i.x,e.g=t.defaultValue.g+a*i.y,e.b=t.defaultValue.b+a*i.z,e.a=t.defaultValue.a+a*i.w;else{var o=t.defaultValue;e.r=o.r+a*(i.x-o.r),e.g=o.g+a*(i.y-o.g),e.b=o.b+a*(i.z-o.b),e.a=o.a+a*(i.w-o.a)}return e}_applyPositionAndRotationEuler(e,t,r,a,n,i){if(e.updateMark===this._updateMark)if(t)i.x+=r*n.x,i.y+=r*n.y,i.z+=r*n.z;else{var s=i.x,o=i.y,l=i.z;i.x=s+r*(n.x-s),i.y=o+r*(n.y-o),i.z=l+r*(n.z-l)}else if(a)if(t){var h=e.defaultValue;i.x=h.x+n.x,i.y=h.y+n.y,i.z=h.z+n.z}else i.x=n.x,i.y=n.y,i.z=n.z;else if(h=e.defaultValue,t)i.x=h.x+r*n.x,i.y=h.y+r*n.y,i.z=h.z+r*n.z;else{var c=h.x,d=h.y,_=h.z;i.x=c+r*(n.x-c),i.y=d+r*(n.y-d),i.z=_+r*(n.z-_)}}_applyRotation(e,r,a,n,i,s){if(e.updateMark===this._updateMark)if(r){var o=ga._tempQuaternion1;l.quaternionWeight(i,a,o),o.normalize(o),t.Quaternion.multiply(s,o,s)}else t.Quaternion.lerp(s,i,a,s);else if(n)if(r){var h=e.defaultValue;t.Quaternion.multiply(h,i,s)}else s.x=i.x,s.y=i.y,s.z=i.z,s.w=i.w;else h=e.defaultValue,r?(o=ga._tempQuaternion1,l.quaternionWeight(i,a,o),o.normalize(o),t.Quaternion.multiply(h,o,s)):t.Quaternion.lerp(h,i,a,s)}_applyScale(e,t,r,a,n,i){if(e.updateMark===this._updateMark)if(t){var s=ga._tempVector31;l.scaleWeight(n,r,s),i.x=i.x*s.x,i.y=i.y*s.y,i.z=i.z*s.z}else l.scaleBlend(i,n,r,i);else if(a)if(t){var o=e.defaultValue;i.x=o.x*n.x,i.y=o.y*n.y,i.z=o.z*n.z}else i.x=n.x,i.y=n.y,i.z=n.z;else o=e.defaultValue,t?(s=ga._tempVector31,l.scaleWeight(n,r,s),i.x=o.x*s.x,i.y=o.y*s.y,i.z=o.z*s.z):l.scaleBlend(o,n,r,i)}_applyCrossData(r,a,n,i,s,o,h){var c=r.propertyOwner;if(c){switch(r.type){case e.KeyFrameValueType.Float:for(var d=r.property,_=d.length-1,u=0;u<_&&(c=c[d[u]]);u++);var m=s+h*(o-s);r.value=m;const v=d[_];r.isMaterial?c&&c.setFloat(v,this._applyFloat(c.getFloat(v),r,a,n,i,m)):c&&(c[v]=this._applyFloat(c[v],r,a,n,i,m));break;case e.KeyFrameValueType.Position:var f=c.localPosition,g=r.value,p=s.x,S=s.y,T=s.z;g.x=p+h*(o.x-p),g.y=S+h*(o.y-S),g.z=T+h*(o.z-T),this._applyPositionAndRotationEuler(r,a,n,i,g,f),c.localPosition=f;break;case e.KeyFrameValueType.Rotation:var E=c.localRotation,A=r.value;t.Quaternion.lerp(s,o,h,A),this._applyRotation(r,a,n,i,A,E),c.localRotation=E;break;case e.KeyFrameValueType.Scale:var x=c.localScale,D=r.value;l.scaleBlend(s,o,h,D),this._applyScale(r,a,n,i,D,x),c.localScale=x;break;case e.KeyFrameValueType.RotationEuler:var R=c.localRotationEuler,C=r.value;p=s.x,S=s.y,T=s.z,C.x=p+h*(o.x-p),C.y=S+h*(o.y-S),C.z=T+h*(o.z-T),this._applyPositionAndRotationEuler(r,a,n,i,C,R),c.localRotationEuler=R;case e.KeyFrameValueType.Color:case e.KeyFrameValueType.Vector2:case e.KeyFrameValueType.Vector4:case e.KeyFrameValueType.Vector3:}r.updateMark=this._updateMark}}_setClipDatasToNode(t,r,a,n,i=null){for(var s=t._realtimeDatas,o=t._clip._nodes,l=t._nodeOwners,h=0,c=o.count;h<c;h++){var d=l[h];if(d){var _=o.getNodeByIndex(h);if(i.avatarMask&&!i.avatarMask.getTransformActive(_.nodePath))continue;var u=d.propertyOwner;let t;if(u){switch(d.type){case e.KeyFrameValueType.Float:for(var m=(E=d.property).length-1,f=0;f<m&&(u=u[E[f]]);f++);let i=E[m];d.isMaterial?u&&u.setFloat(i,this._applyFloat(0,d,r,a,n,s[h])):u&&(u[i]=this._applyFloat(u[i],d,r,a,n,s[h]));break;case e.KeyFrameValueType.Position:var g=u.localPosition;this._applyPositionAndRotationEuler(d,r,a,n,s[h],g),u.localPosition=g;break;case e.KeyFrameValueType.Rotation:var p=u.localRotation;this._applyRotation(d,r,a,n,s[h],p),u.localRotation=p;break;case e.KeyFrameValueType.Scale:var S=u.localScale;this._applyScale(d,r,a,n,s[h],S),u.localScale=S;break;case e.KeyFrameValueType.RotationEuler:var T=u.localRotationEuler;this._applyPositionAndRotationEuler(d,r,a,n,s[h],T),u.localRotationEuler=T;break;case e.KeyFrameValueType.Vector2:for(m=(E=d.property).length-1,f=0;f<m&&(u=u[E[f]]);f++);t=E[m],d.isMaterial?u&&u.getVector2(t)&&u.setVector2(t,this._applyVec2(u.getVector2(t),d,r,a,n,s[h])):u&&(u[t]=this._applyVec2(u[t],d,r,a,n,s[h]));break;case e.KeyFrameValueType.Vector3:for(m=(E=d.property).length-1,f=0;f<m&&(u=u[E[f]]);f++);t=E[m],d.isMaterial?u&&u.getVector3(t)&&u.setVector3(t,this._applyVec3(u.getVector3(t),d,r,a,n,s[h])):u&&(u[t]=this._applyVec3(u[t],d,r,a,n,s[h]));break;case e.KeyFrameValueType.Vector4:for(m=(E=d.property).length-1,f=0;f<m&&(u=u[E[f]]);f++);t=E[m],d.isMaterial?u&&u.getVector4(t)&&u.setVector4(t,this._applyVec4(u.getVector4(t),d,r,a,n,s[h])):u&&(u[t]=this._applyVec4(u[t],d,r,a,n,s[h]));break;case e.KeyFrameValueType.Color:var E;for(m=(E=d.property).length-1,f=0;f<m&&(u=u[E[f]]);f++);t=E[m],d.isMaterial?u&&u.getColor(t)&&u.setColor(t,this._applyColor(u.getColor(t),d,r,a,n,s[h])):u&&(u[t]=this._applyColor(u[t],d,r,a,n,s[h]))}d.updateMark=this._updateMark}}}}_setCrossClipDatasToNode(e,t,r,a,n){for(var i=e._crossNodesOwners,s=e._crossNodesOwnersCount,o=e.blendingMode!==_a.BLENDINGMODE_OVERRIDE,l=e.defaultWeight,h=r._realtimeDatas,c=e._destCrossClipNodeIndices,d=r._nodeOwners,_=t._realtimeDatas,u=e._srcCrossClipNodeIndices,m=t._nodeOwners,f=0;f<s;f++){var g=i[f];if(g){var p=u[f],S=c[f],T=-1!==p?_[p]:d[S].defaultValue,E=-1!==S?h[S]:m[p].defaultValue;E||(E=m[p].defaultValue),e.avatarMask&&!e.avatarMask.getTransformActive(g.nodePath)||this._applyCrossData(g,o,l,n,T,E,a)}}}_setFixedCrossClipDatasToNode(e,t,r,a){for(var n=e._crossNodesOwners,i=e._crossNodesOwnersCount,s=e.blendingMode!==_a.BLENDINGMODE_OVERRIDE,o=e.defaultWeight,l=t._realtimeDatas,h=e._destCrossClipNodeIndices,c=0;c<i;c++){var d=n[c];if(d){var _,u=h[c],m=d.crossFixedValue;_=-1!=u&&l[u]?l[u]:d.defaultValue,this._applyCrossData(d,s,o,a,m,_,r)}}}_revertDefaultKeyframeNodes(t){for(var r=t._nodeOwners,a=0,n=r.length;a<n;a++){var i=r[a];if(i){var s=i.propertyOwner;let t;if(s)switch(i.type){case e.KeyFrameValueType.Float:for(var o=(f=i.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);let r=f[o];i.isMaterial?s&&s.setFloat(r,i.defaultValue):s&&(s[r]=i.defaultValue);break;case e.KeyFrameValueType.Position:var h=s.localPosition,c=i.defaultValue;h.x=c.x,h.y=c.y,h.z=c.z,s.localPosition=h;break;case e.KeyFrameValueType.Rotation:var d=s.localRotation,_=i.defaultValue;d.x=_.x,d.y=_.y,d.z=_.z,d.w=_.w,s.localRotation=d;break;case e.KeyFrameValueType.Scale:var u=s.localScale;c=i.defaultValue,u.x=c.x,u.y=c.y,u.z=c.z,s.localScale=u;break;case e.KeyFrameValueType.RotationEuler:var m=s.localRotationEuler;c=i.defaultValue,m.x=c.x,m.y=c.y,m.z=c.z,s.localRotationEuler=m;break;case e.KeyFrameValueType.Vector2:for(o=(f=i.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o],i.isMaterial?s&&s.getVector2(t)&&s.setVector2(t,i.defaultValue):s&&(s[t]=i.defaultValue);break;case e.KeyFrameValueType.Vector3:for(o=(f=i.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o],i.isMaterial?s&&s.getVector3(t)&&s.setVector3(t,i.defaultValue):s&&(s[t]=i.defaultValue);break;case e.KeyFrameValueType.Vector4:for(o=(f=i.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o],i.isMaterial?s&&s.getVector3(t)&&s.setVector3(t,i.defaultValue):s&&(s[t]=i.defaultValue);break;case e.KeyFrameValueType.Color:var f;for(o=(f=i.property).length-1,l=0;l<o&&(s=s[f[l]]);l++);t=f[o];let a=ga._tempColor;a.r=i.defaultValue.x,a.g=i.defaultValue.y,a.b=i.defaultValue.z,a.a=i.defaultValue.w,i.isMaterial?s&&s.getColor(t)&&s.setColor(t,a):s&&(s[t]=a);break;default:throw"Animator:unknown type."}}}}onAfterDeserialize(){let e=this.controllerLayers;if(e&&null==this.controller){delete this.controllerLayers,this._controllerLayers.length=0;for(let t of e)this.addControllerLayer(t)}}_onEnable(){for(let e=0,t=this._controllerLayers.length;e<t;e++)if(this._controllerLayers[e].playOnWake){this.getDefaultState(e)&&this.play(null,e,0)}}_onDestroy(){for(let e=0,t=this._controllerLayers.length;e<t;e++)this._controllerLayers[e]._removeReference()}_applyUpdateMode(e){let r;switch(this._updateMode){case t.AnimatorUpdateMode.Normal:r=e;break;case t.AnimatorUpdateMode.LowFrame:r=t.Stat.loopCount%this._lowUpdateDelty==0?e*this._lowUpdateDelty:0;break;case t.AnimatorUpdateMode.UnScaleTime:r=0}return r}_handleSpriteOwnersBySprite(e,t,r){for(var a=0,n=this._controllerLayers.length;a<n;a++)if(this._controllerLayers[a].enable)for(var i=this._controllerLayers[a]._states,s=0,o=i.length;s<o;s++){var l=i[s],h=l._clip,c=t.join("/"),d=h._nodesMap[c];if(d)for(var _=l._nodeOwners,u=0,m=d.length;u<m;u++)e?this._addKeyframeNodeOwner(_,d[u],r):this._removeKeyframeNodeOwner(_,d[u])}}_parse(e){for(var r=e.playOnWake,a=e.layers,n=0;n<a.length;n++){var i=a[n],s=new _a(i.name);s.defaultWeight=0===n?1:i.weight;var o=i.blendingMode;o&&(s.blendingMode=o),this.addControllerLayer(s);for(var l=i.states,h=0,c=l.length;h<c;h++){var d=l[h],_=d.clipPath;if(_){var u,m=d.name;if(u=t.Loader.getRes(_)){var f=new ma;f.name=m,f.clip=u,d.speed&&(f.speed=d.speed),s.addState(f),0===h&&(this.getControllerLayer(n).defaultState=f)}}}void 0!==r&&(s.playOnWake=r);let e=i.avatarMask;if(e){let t=new fa;for(var g in s.avatarMask=t,e)t.setTransformActive(g,e[g])}}var p=e.cullingMode;void 0!==p&&(this.cullingMode=p)}onUpdate(){let e=this.owner._scene.timer._delta/1e3;var t,r;if(e=this._applyUpdateMode(e),0!==this._speed&&0!==e)for(this._updateMark++,t=0,r=this._controllerLayers.length;t<r;t++){var a=this._controllerLayers[t];if(a.enable){var n=a._playStateInfo,i=a._crossPlayStateInfo;switch(c=a.blendingMode!==_a.BLENDINGMODE_OVERRIDE,a._playType){case 0:var s=n._currentState,o=s._clip,l=this._speed*s.speed,h=n._finish;h||this._updatePlayer(s,n,e*l,o.islooping,t);var c=a.blendingMode!==_a.BLENDINGMODE_OVERRIDE;this._updateClipDatas(s,c,n,a.avatarMask),this._setClipDatasToNode(s,c,a.defaultWeight,0===t,a),h||this._updateEventScript(s,n),h||this._updateStateFinish(s,n);break;case 1:o=(s=n._currentState)._clip;var d=a._crossPlayState,_=d._clip,u=a._crossDuration,m=i._startPlayTime,f=_._duration-m,g=u>f?f/u:1,p=this._speed*d.speed;this._updatePlayer(d,i,e*g*p,_.islooping,t);var S=(i._elapsedTime-m)/g/u,T=!1;S>=1?(this._updateClipDatas(d,c,i,a.avatarMask),this._setClipDatasToNode(d,c,a.defaultWeight,0===t,a),a._playType=0,n._currentState=d,i._cloneTo(n)):(n._finish||(l=this._speed*s.speed,T=!0,this._updatePlayer(s,n,e*l,o.islooping,t),this._updateClipDatas(s,c,n,a.avatarMask)),this._updateClipDatas(d,c,i,a.avatarMask),this._setCrossClipDatasToNode(a,s,d,S,0===t)),this._updateEventScript(s,n),this._updateEventScript(d,i),this._updateStateFinish(d,i),T&&this._updateStateFinish(n._currentState,n);break;case 2:_=(d=a._crossPlayState)._clip,u=a._crossDuration,m=i._startPlayTime,g=u>(f=_._duration-m)?f/u:1,p=this._speed*d.speed,this._updatePlayer(d,i,e*g*p,_.islooping,t),(S=(i._elapsedTime-m)/g/u)>=1?(this._updateClipDatas(d,c,i,a.avatarMask),this._setClipDatasToNode(d,c,1,0===t,a),a._playType=0,n._currentState=d,i._cloneTo(n)):(this._updateClipDatas(d,c,i,a.avatarMask),this._setFixedCrossClipDatasToNode(a,d,S,0===t)),this._updateEventScript(d,i),this._updateStateFinish(d,i)}}}}_cloneTo(e){var t=e;t.cullingMode=this.cullingMode;for(var r=0,a=this._controllerLayers.length;r<a;r++){var n=this._controllerLayers[r];t.addControllerLayer(n.clone());for(var i=n._states,s=0,o=i.length;s<o;s++){var l=i[s].clone(),h=t.getControllerLayer(r);h.addState(l),0==s&&(h.defaultState=l)}}}getDefaultState(e=0){return this._controllerLayers[e].defaultState}addState(e,t=0){this._controllerLayers[t].addState(e),console.warn("Animator:this function is discard,please use animatorControllerLayer.addState() instead.")}removeState(e,t=0){this._controllerLayers[t].removeState(e),console.warn("Animator:this function is discard,please use animatorControllerLayer.removeState() instead.")}addControllerLayer(e){this._controllerLayers.push(e),e._animator=this,e._addReference();for(var t=e._states,r=0,a=t.length;r<a;r++)this._getOwnersByClip(t[r])}getControllerLayer(e=0){return this._controllerLayers[e]}play(e=null,t=0,r=Number.NEGATIVE_INFINITY){var a=this._controllerLayers[t];if(a){var n=a.defaultState;if(!e&&!n)throw new Error("Animator:must have default clip value,please set clip property.");var i=a._playStateInfo,s=i._currentState,o=e?a.getAnimatorState(e):n;if(!o._clip)return;var l=o._clip._duration,h=o._clip._duration*(o.clipEnd-o.clipStart);s!==o?(r!==Number.NEGATIVE_INFINITY?i._resetPlayState(l*r,h):i._resetPlayState(0,h),null!==s&&s!==o&&this._revertDefaultKeyframeNodes(s),a._playType=0,i._currentState=o):r!==Number.NEGATIVE_INFINITY&&(i._resetPlayState(l*r,h),a._playType=0),o._scripts,o._eventStart()}else console.warn("Invalid layerIndex "+t+".");this.owner._scene&&this.onUpdate()}crossFade(e,t,r=0,a=Number.NEGATIVE_INFINITY){var n=this._controllerLayers[r];if(n){var i=n.getAnimatorState(e);if(i){var s=n._playType;if(-1===s)return void this.play(e,r,a);var o=n._crossPlayStateInfo,l=n._crossNodesOwners,h=n._crossNodesOwnersIndicesMap,c=n._playStateInfo._currentState,d=i._nodeOwners,_=n._destCrossClipNodeIndices,u=i._clip,m=u._nodes,f=u._nodesDic,g=0;switch(s){case 0:var p=c._nodeOwners,S=n._srcCrossClipNodeIndices,T=c._clip,E=T._nodes,A=T._nodesDic;n._playType=1;var x=++n._crossMark;g=n._crossNodesOwnersCount=0;for(var D=0,R=E.count;D<R;D++){var C=E.getNodeByIndex(D),v=C._indexInList,y=p[v];if(y){var I=C.fullPath;S[g]=v;var M=f[I];_[g]=M?M._indexInList:-1,h[I]=x,l[g]=y,g++}}for(D=0,R=m.count;D<R;D++){var L=(M=m.getNodeByIndex(D))._indexInList,O=d[L];if(O){var b=M.fullPath;A[b]||(S[g]=-1,_[g]=L,h[b]=x,l[g]=O,g++)}}break;case 1:case 2:for(n._playType=2,D=0,R=l.length;D<R;D++){var w=l[D];w.saveCrossFixedValue(),M=f[w.fullPath],_[D]=M?M._indexInList:-1}for(g=n._crossNodesOwnersCount,x=n._crossMark,D=0,R=m.count;D<R;D++)(O=d[L=(M=m.getNodeByIndex(D))._indexInList])&&h[b=M.fullPath]!==x&&(_[g]=L,h[b]=x,w=d[L],l[g]=w,w.saveCrossFixedValue(),g++)}n._crossNodesOwnersCount=g,n._crossPlayState=i,n._crossDuration=c._clip._duration*t,a!==Number.NEGATIVE_INFINITY?o._resetPlayState(u._duration*a,n._crossDuration):o._resetPlayState(0,n._crossDuration),i._eventStart()}else console.warn("Invalid name "+r+".")}else console.warn("Invalid layerIndex "+r+".")}setParamsTrigger(e){let r;r="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[r]=!0}setParamsNumber(e,r){let a;a="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[a]=r}setParamsBool(e,r){let a;a="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[a]=r}getParamsvalue(e){let r;return r="number"==typeof e?e:t.AnimatorStateCondition.conditionNameToID(e),this._animatorParams[r]}getCurrentAnimatorPlayState(e=0){return this._controllerLayers[e]._playStateInfo}}ga._tempVector31=new t.Vector3,ga._tempColor=new t.Color,ga._tempQuaternion1=new t.Quaternion,ga.CULLINGMODE_ALWAYSANIMATE=0,ga.CULLINGMODE_CULLCOMPLETELY=2;class pa{constructor(){this.source=null,this.indirectTarget=null,this.destination=null,this.camera=null,this.compositeShaderData=null,this.command=null,this.deferredReleaseTextures=[]}createRTByContextReleaseTexture(e,t,r,a,n=!1,i=1,s=!1,o=!1){let l=this.deferredReleaseTextures.length;for(let h=0;h<l;h++){let c=this.deferredReleaseTextures[h];if(c.width==e&&c.height==t&&c.colorFormat==r&&c.depthStencilFormat==a&&c._generateMipmap==n&&c.multiSamples==i&&c.generateDepthTexture==s&&c._gammaSpace==o){c._inPool=!1;let e=this.deferredReleaseTextures[l-1];return this.deferredReleaseTextures[h]=e,this.deferredReleaseTextures.length-=1,c}}return null}}class Sa{constructor(){this._active=!0,this._singleton=!0}set singleton(e){this._singleton=e}get singleton(){return this._singleton}get active(){return this._active}set active(e){this._active=e}getCameraDepthTextureModeFlag(){return 0}effectInit(e){}release(e){}render(e){}}var Ta,Ea="#define SHADER_NAME BlitVS\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    gl_Position = vec4(u_OffsetScale.x * 2.0 - 1.0 + (a_PositionTexcoord.x + 1.0) * u_OffsetScale.z, (1.0 - ((u_OffsetScale.y * 2.0 - 1.0 + (-a_PositionTexcoord.y + 1.0) * u_OffsetScale.w) + 1.0) / 2.0) * 2.0 - 1.0, 0.0, 1.0);\n\n    v_Texcoord0 = a_PositionTexcoord.zw;\n}";e.ToneMappingType=void 0,(Ta=e.ToneMappingType||(e.ToneMappingType={}))[Ta.None=0]="None",Ta[Ta.ACES=1]="ACES";class Aa extends Sa{static init(){Aa.__initDefine__();let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4},a=t.Shader3D.add("blitLUTShader"),n=new t.SubShader(e,r);a.addSubShader(n);let i=n.addShaderPass(Ea,'#define SHADER_NAME BlitLUTFS\n\n#include "Color.glsl";\n\n#include "ColorGrading.glsl";\n#include "LUT.glsl";\n\nuniform sampler2D u_Lut;\nuniform vec4 u_LutParams;//w postExposure\n\n    #ifdef CUSTOMLUT\nuniform sampler2D u_CustomLut;\nuniform vec4 u_CustomLutParams;\n    #endif // CUSTOMLUT\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    gl_FragColor = texture2D(u_MainTex, v_Texcoord0);\n    vec3 color = gl_FragColor.rgb;\n    // gl_FragColor.rgb = applyLut(color, 1.0, u_Lut, u_LutParams);\n    color *= u_LutParams.w;\n    color = applyLut(u_Lut, linearToLogC(color), u_LutParams.xyz);\n\n    #ifdef CUSTOMLUT\n\n    float contrib = u_CustomLutParams.w;\n    vec3 gamma = linearToGamma(color);\n    vec3 userLut = applyLut(u_CustomLut, gamma, u_CustomLutParams);\n    gamma = mix(gamma, userLut, contrib);\n    color = gammaToLinear(gamma);\n\n    #endif // CUSTOMLUT\n\n    gl_FragColor.rgb = color;\n\n    #ifdef GAMMAOUT\n        gl_FragColor = linearToGamma(gl_FragColor);\n    #endif\n}\n');i.renderState.depthTest=t.RenderState.DEPTHTEST_ALWAYS,i.renderState.depthWrite=!1,i.renderState.cull=t.RenderState.CULL_NONE,i.renderState.blend=t.RenderState.BLEND_DISABLE}static __initDefine__(){Aa.SHADERDEFINE_ACES=t.Shader3D.getDefineByName("ACES"),Aa.SHADERDEFINE_CUSTOMLUT=t.Shader3D.getDefineByName("CUSTOMLUT"),Aa.SHADERVALUE_LUT=t.Shader3D.propertyNameToID("u_Lut"),Aa.SHADERVALUE_LUTPARAMS=t.Shader3D.propertyNameToID("u_LutParams"),Aa.SHADERVALUE_CUSTOMLUT=t.Shader3D.propertyNameToID("u_CustomLut"),Aa.SHADERVALUE_CUSTOMLUTPARAMS=t.Shader3D.propertyNameToID("u_CustomLutParams")}get toneMapping(){return this._toneMapping}set toneMapping(e){e!=this._toneMapping&&(this._needBuildLUT=!0,this._toneMapping=e)}get enableSplitTone(){return this._enableSplitTone}set enableSplitTone(e){this._enableSplitTone=e,this._needBuildLUT=!0}get splitShadow(){return this._splitShadow}set splitShadow(e){this._needBuildLUT=!0,e.cloneTo(this._splitShadow)}get splithighlights(){return this._splithighlights}set splithighlights(e){this._splithighlights.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._splithighlights))}get splitBalance(){return this._splitBalance}set splitBalance(e){this._needBuildLUT=!0,this._splitBalance=e}get enableSMH(){return this._enableSMH}set enableSMH(e){this._needBuildLUT=!0,this._enableSMH=e}get shadows(){return this._shadows}set shadows(e){this._shadows.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._shadows))}get midtones(){return this._midtones}set midtones(e){this._midtones.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._midtones))}get highlights(){return this._highlights}set highlights(e){this._highlights.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._highlights))}get shadowLimitStart(){return this._limits.x}set shadowLimitStart(e){this._needBuildLUT=!0,this._limits.x=Math.min(e,this.shadowLimitEnd)}get shadowLimitEnd(){return this._limits.y}set shadowLimitEnd(e){this._needBuildLUT=!0,this._limits.y=Math.max(e,this.shadowLimitStart)}get highLightLimitStart(){return this._limits.z}set highLightLimitStart(e){this._needBuildLUT=!0,this._limits.z=Math.min(e,this.highLightLimitEnd)}get highLightLimitEnd(){return this._limits.w}set highLightLimitEnd(e){this._needBuildLUT=!0,this._limits.w=Math.max(this.highLightLimitStart,e)}get enableLiftGammaGain(){return this._enableLiftGammaGain}set enableLiftGammaGain(e){this._needBuildLUT=!0,this._enableLiftGammaGain=e}get lift(){return this._lift}set lift(e){this.lift.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._lift))}get gamma(){return this._gamma}set gamma(e){this._gamma.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._gamma))}get gain(){return this._gain}set gain(e){this._gain.equal(e)||(this._needBuildLUT=!0,e.cloneTo(this._gain))}_StandardIlluminantY(e){return 2.87*e-3*e*e-.27509507}_CIExyToLMS(e,r){let a=1*e/r,n=1*(1-e-r)/r,i=.7328*a+.4296-.1624*n,s=-.7036*a+1.6975+.0061*n,o=.003*a+.0136+.9834*n;return new t.Vector3(i,s,o)}_ColorBalanceToLMSCoeffs(e,r){let a=e/65,n=r/65,i=.31271-a*(a<0?.1:.05),s=this._StandardIlluminantY(i)+.05*n,o=new t.Vector3(.949237,1.03542,1.08728),l=this._CIExyToLMS(i,s);this._balance.set(o.x/l.x,o.y/l.y,o.z/l.z)}get enableBalance(){return this._enableBalance}set enableBalance(e){this._needBuildLUT=!0,this._enableBalance=e}get tint(){return this._tint}set tint(e){this._needBuildLUT=!0,this._tint=e,this._ColorBalanceToLMSCoeffs(this._temperature,this._tint)}get temperature(){return this._temperature}set temperature(e){this._needBuildLUT=!0,this._temperature=e,this._ColorBalanceToLMSCoeffs(this._temperature,this._tint)}get enableColorAdjust(){return this._enableColorAdjust}set enableColorAdjust(e){this._needBuildLUT=!0,this._enableColorAdjust=e}get postExposure(){return this._postExposure}set postExposure(e){this._postExposure=e}get contrast(){return this._contrast}set contrast(e){this._needBuildLUT=!0,this._contrast=e}get colorFilter(){return this._colorFilter}set colorFilter(e){this._needBuildLUT=!0,e.cloneTo(this._colorFilter)}get HueShift(){return this._HueShift}set HueShift(e){this._needBuildLUT=!0,this._HueShift=e}get saturation(){return this._saturation}set saturation(e){this._needBuildLUT=!0,this._saturation=e}constructor(){super(),this._needBuildLUT=!1,this._lutBuilderMat=new at,this._lutSize=32,this._enableSplitTone=!1,this._splitShadow=new t.Vector3(.5,.5,.5),this._splitBalance=0,this._splithighlights=new t.Vector3(.5,.5,.5),this._u_SplitShadow=new t.Vector4(0,0,0),this._enableSMH=!1,this._shadows=new t.Vector3(1,1,1),this._midtones=new t.Vector3(1,1,1),this._highlights=new t.Vector3(1,1,1),this._limits=new t.Vector4(0,.33,.55,1),this._enableLiftGammaGain=!1,this._lift=new t.Vector3(0,0,0),this._gamma=new t.Vector3(1,1,1),this._gain=new t.Vector3(1,1,1),this._enableBalance=!1,this._balance=new t.Vector3,this._tint=0,this._temperature=0,this._enableColorAdjust=!1,this._postExposure=1,this._contrast=1,this._colorFilter=new t.Color(1,1,1),this._HueShift=0,this._saturation=1,this._HueSatCon=new t.Vector4(0,1,1,0),this.default_balance=new t.Vector3(1,1,1),this.default_splitShadow=new t.Vector4(.5,.5,.5,0),this.default_splithighlights=new t.Vector3(.5,.5,.5),this.default_shadow=new t.Vector3(1,1,1),this.default_midtones=new t.Vector3(1,1,1),this.default_highlight=new t.Vector3(1,1,1),this.default_limint=new t.Vector4(0,.3,.55,1),this.default_lift=new t.Vector3(0,0,0),this.default_gamma=new t.Vector3(1,1,1),this.default_gain=new t.Vector3(1,1,1),this.default_ColorFilter=new t.Color(1,1,1,1),this.default_HueSatCon=new t.Vector4(0,1,1,0),this.singleton=!0,this.active=!0,this._needBuildLUT=!0,this._toneMapping=e.ToneMappingType.None,this._blitlutParams=new t.Vector4,this._lutShaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this.lutSize=32,this._lutCommond=new mt,this._lutBuilderMat=new at}get lutSize(){return this._lutSize}set lutSize(e){e>32||(this._lutSize=e,this._lutTex&&this._lutTex.destroy(),this._lutTex=new t.RenderTexture(this._lutSize*this._lutSize,this._lutSize,t.RenderTargetFormat.R16G16B16A16,null,!1,1,!1,!1),this._lutTex.anisoLevel=1,this._lutTex.wrapModeU=t.WrapMode.Clamp,this._lutTex.wrapModeV=t.WrapMode.Clamp,this._lutTex.filterMode=t.FilterMode.Bilinear)}_buildLUT(){if(!this._needBuildLUT)return;let r=this.lutSize,a=this.lutSize*this.lutSize,n=new t.Vector4(r,.5/a,.5/r,r/(r-1));this._lutBuilderMat.setVector4("u_LutParams",n),this.enableBalance?(this._ColorBalanceToLMSCoeffs(this.temperature,this.tint),this._lutBuilderMat.setVector3("u_ColorBalance",this._balance)):this._lutBuilderMat.setVector3("u_ColorBalance",this.default_balance),this.enableSplitTone?(this._u_SplitShadow.setValue(this._splitShadow.x,this._splitShadow.y,this._splitShadow.z,this.splitBalance),this._lutBuilderMat.setVector4("u_SplitShadows",this._u_SplitShadow),this._lutBuilderMat.setVector3("u_Splithighlights",this._splithighlights)):(this._lutBuilderMat.setVector4("u_SplitShadows",this.default_splitShadow),this._lutBuilderMat.setVector3("u_Splithighlights",this.default_splithighlights)),this.enableSMH?(this._lutBuilderMat.setVector3("u_Shadows",this._shadows),this._lutBuilderMat.setVector3("u_Midtones",this._midtones),this._lutBuilderMat.setVector3("u_Highlights",this._highlights),this._lutBuilderMat.setVector4("u_Limits",this._limits)):(this._lutBuilderMat.setVector3("u_Shadows",this.default_shadow),this._lutBuilderMat.setVector3("u_Midtones",this.default_midtones),this._lutBuilderMat.setVector3("u_Highlights",this.default_highlight),this._lutBuilderMat.setVector4("u_Limits",this.default_limint)),this._enableLiftGammaGain?(this._lutBuilderMat.setVector3("u_Lift",this._lift),this._lutBuilderMat.setVector3("u_Gamma",this._gamma),this._lutBuilderMat.setVector3("u_Gain",this._gain)):(this._lutBuilderMat.setVector3("u_Lift",this.default_lift),this._lutBuilderMat.setVector3("u_Gamma",this.default_gamma),this._lutBuilderMat.setVector3("u_Gain",this.default_gain)),this.enableColorAdjust?(this._HueSatCon.setValue(this._HueShift,this.saturation,this._contrast,0),this._lutBuilderMat.setColor("u_ColorFilter",this._colorFilter),this._lutBuilderMat.setVector4("u_HueSatCon",this._HueSatCon)):(this._lutBuilderMat.setColor("u_ColorFilter",this.default_ColorFilter),this._lutBuilderMat.setVector4("u_HueSatCon",this.default_HueSatCon)),this._toneMapping==e.ToneMappingType.ACES?this._lutBuilderMat.addDefine(Aa.SHADERDEFINE_ACES):this._lutBuilderMat.removeDefine(Aa.SHADERDEFINE_ACES),this._lutCommond.blitScreenQuadByMaterial(t.Texture2D.whiteTexture,this._lutTex,null,this._lutBuilderMat),this._lutCommond.context=Ze._instance,this._lutCommond._apply(),this._lutCommond.clear()}effectInit(e){super.effectInit(e),this._lutBuilderMat.setShaderName("LUTBuilder"),this._LUTShader=t.Shader3D.find("blitLUTShader"),e._enableColorGrad=!0,e._ColorGradEffect=this}release(e){super.release(e),e._enableColorGrad=!1,e._ColorGradEffect=null}render(e){let t=e.command,r=e.indirectTarget;this._blitlutParams.setValue(1/this._lutTex.width,1/this._lutTex.height,this._lutTex.height-1,this.enableColorAdjust?this._postExposure:1),this._lutBuilderMat.removeDefine(Aa.SHADERDEFINE_CUSTOMLUT),this._lutShaderData.setTexture(Aa.SHADERVALUE_LUT,this._lutTex),this._lutShaderData.setVector(Aa.SHADERVALUE_LUTPARAMS,this._blitlutParams),t.blitScreenTriangle(r,e.destination,null,this._LUTShader,this._lutShaderData)}}class xa{static __init__(){xa.SHADERDEFINE_BLOOM_LOW=t.Shader3D.getDefineByName("BLOOM_LOW"),xa.SHADERDEFINE_BLOOM=t.Shader3D.getDefineByName("BLOOM"),xa.SHADERDEFINE_FINALPASS=t.Shader3D.getDefineByName("FINALPASS"),xa.SHADERVALUE_MAINTEX=t.Shader3D.propertyNameToID("u_MainTex"),xa.SHADERVALUE_BLOOMTEX=t.Shader3D.propertyNameToID("u_BloomTex"),xa.SHADERVALUE_AUTOEXPOSURETEX=t.Shader3D.propertyNameToID("u_AutoExposureTex"),xa.SHADERVALUE_BLOOM_DIRTTEX=t.Shader3D.propertyNameToID("u_Bloom_DirtTex"),xa.SHADERVALUE_BLOOMTEX_TEXELSIZE=t.Shader3D.propertyNameToID("u_BloomTex_TexelSize"),xa.SHADERVALUE_BLOOM_DIRTTILEOFFSET=t.Shader3D.propertyNameToID("u_Bloom_DirtTileOffset"),xa.SHADERVALUE_BLOOM_SETTINGS=t.Shader3D.propertyNameToID("u_Bloom_Settings"),xa.SHADERVALUE_BLOOM_COLOR=t.Shader3D.propertyNameToID("u_Bloom_Color")}recaculateCameraFlag(){this._depthtextureFlag=e.DepthTextureMode.None;let t=this.effects.length;for(let e=0;e<t;e++)this._depthtextureFlag|=this.effects[e].getCameraDepthTextureModeFlag()}constructor(){this._compositeShader=t.Shader3D.find("PostProcessComposite"),this._compositeShaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._effects=[],this._enable=!0,this._enableColorGrad=!1,this._context=null,this._context=new pa,this._context.compositeShaderData=this._compositeShaderData,this._context.command=new mt,this._depthtextureFlag=0}get enable(){return this._enable}set enable(e){this._enable=e}set commandContext(e){this._context.command._context=e}set effects(e){this.clearEffect();for(var t=0,r=e.length;t<r;t++)e[t]&&this.addEffect(e[t])}get effects(){return this._effects}get cameraDepthTextureMode(){return this._depthtextureFlag}_init(e){this._context.camera=e,this._context.command._camera=e}_render(e){this._init(e);var r=(e=this._context.camera).viewport,a=e._internalRenderTexture,n=t.RenderTexture.createFromPool(a.width,a.height,e._getRenderTextureFormat(),t.RenderTargetFormat.None,!1,1,!1,!0),i=[t.RenderTexture.createFromPool(a.width,a.height,e._getRenderTextureFormat(),t.RenderTargetFormat.None,!1,1,!1,!0),t.RenderTexture.createFromPool(a.width,a.height,e._getRenderTextureFormat(),t.RenderTargetFormat.None,!1,1,!1,!0)];this._context.command.clear(),this._context.source=n,this._context.indirectTarget=n,this._context.destination=2==this._effects.length?i[0]:a,this._context.compositeShaderData.clearDefine(),this._context.command.blitScreenTriangle(a,n),this._context.compositeShaderData.setTexture(xa.SHADERVALUE_AUTOEXPOSURETEX,t.Texture2D.whiteTexture),this._enableColorGrad&&this._ColorGradEffect._buildLUT();for(var s=0,o=this._effects.length;s<o;s++)this._effects[s].active?(this._effects[s].render(this._context),s==o-2?(this._context.indirectTarget=this._context.destination,this._context.destination=a):(this._context.indirectTarget=this._context.destination,this._context.destination=i[(s+1)%2])):s==o-1&&this._context.command.blitScreenTriangle(this._context.indirectTarget,a);this._compositeShaderData.addDefine(xa.SHADERDEFINE_FINALPASS);var l=e._offScreenRenderTexture,h=l||null;this._context.destination=h;var c=e._getCanvasWidth(),d=e._getCanvasHeight();h&&(e._screenOffsetScale.setValue(r.x/c,(d-r.y-r.height)/d,r.width/c,r.height/d),this._context.command.blitScreenTriangle(a,h,e._screenOffsetScale,null,this._compositeShaderData,0)),t.RenderTexture.recoverToPool(n),t.RenderTexture.recoverToPool(i[0]),t.RenderTexture.recoverToPool(i[1]);var _=this._context.deferredReleaseTextures;for(s=0,o=_.length;s<o;s++)t.RenderTexture.recoverToPool(_[s]);_.length=0}addEffect(e){e.singleton&&this.getEffect(e.constructor)?console.error("无法增加已经存在的Effect"):(!this._enableColorGrad||e instanceof Aa?this._effects.push(e):this._effects.splice(this._effects.length-1,0,e),this.recaculateCameraFlag(),e.effectInit(this))}getEffect(e){let t=this._effects.length;for(let r=0;r<t;r++){let t=this._effects[r];if(t instanceof e)return t}return null}removeEffect(e){var t=this._effects.indexOf(e);-1!==t&&(this._effects.splice(t,1),e.release(this),this.recaculateCameraFlag())}clearEffect(){let e=this.effects.length-1;for(;e>=0;e--)this.removeEffect(this.effects[e])}_applyPostProcessCommandBuffers(){this._context.command._apply()}}var Da="#define SHADER_NAME BloomVS\nvarying vec2 v_Texcoord0;\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\nvoid main() {\n\tgl_Position = vec4(a_PositionTexcoord.xy, 0.0, 1.0);\n\tv_Texcoord0 = a_PositionTexcoord.zw;\n\tgl_Position = remapPositionZ(gl_Position);\n}";class Ra extends Sa{static init(){t.Shader3D.addInclude("StdLib.glsl","#define HALF_MAX       65504.0 // (2 - 2^-10) * 2^15\n\n#define FLT_EPSILON    1.192092896e-07 // Smallest positive number, such that 1.0 + FLT_EPSILON != 1.0\n\nmediump vec4 safeHDR(mediump vec4 c)\n{\n    return min(c, HALF_MAX);\n}\n\nfloat max3(float a, float b, float c)\n{\n    return max(max(a, b), c);\n}\n\nvec3 positivePow(vec3 base, vec3 power)\n{\n    return pow(max(abs(base), vec3(FLT_EPSILON, FLT_EPSILON, FLT_EPSILON)), power);\n}"),t.Shader3D.addInclude("Colors.glsl",'#include "StdLib.glsl";\n\n#define EPSILON 1.0e-4\n\n// Quadratic color thresholding\n// curve = (threshold - knee, knee * 2, 0.25 / knee)\nmediump vec4 quadraticThreshold(mediump vec4 color, mediump float threshold, mediump vec3 curve) {\n\t// Pixel brightness\n\tmediump float br = max3(color.r, color.g, color.b);\n\n\t// Under-threshold part: quadratic curve\n\tmediump float rq = clamp(br - curve.x, 0.0, curve.y);\n\trq = curve.z * rq * rq;\n\n\t// Combine and apply the brightness response curve.\n\tcolor *= max(rq, br - threshold) / max(br, EPSILON);\n\n\treturn color;\n}\n\n\n\n//\n// sRGB transfer functions\n// Fast path ref: http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1\n//\n// mediump vec3 sRGBToLinear(mediump vec3 c) {\n// \t#ifdef USE_VERY_FAST_SRGB\n// \t\treturn c * c;\n// \t#elif defined(USE_FAST_SRGB)\n// \t\treturn c * (c * (c * 0.305306011 + 0.682171111) + 0.012522878);\n// \t#else\n// \t\tmediump vec3 linearRGBLo = c / 12.92;\n// \t\tmediump vec3 power=vec3(2.4, 2.4, 2.4);\n// \t\tmediump vec3 linearRGBHi = positivePow((c + 0.055) / 1.055, power);\n// \t\tmediump vec3 linearRGB =vec3((c.r<=0.04045) ? linearRGBLo.r : linearRGBHi.r,(c.g<=0.04045) ? linearRGBLo.g : linearRGBHi.g,(c.b<=0.04045) ? linearRGBLo.b : linearRGBHi.b);\n// \t\treturn linearRGB;\n// \t#endif\n// }\n\n// mediump vec4 sRGBToLinear(mediump vec4 c){\n//     return vec4(sRGBToLinear(c.rgb), c.a);\n// }\n\n\n\n// mediump vec3 linearToSRGB(mediump vec3 c) {\n// \t#ifdef USE_VERY_FAST_SRGB\n// \t\treturn sqrt(c);\n// \t#elif defined(USE_FAST_SRGB)\n// \t\treturn max(1.055 * PositivePow(c, 0.416666667) - 0.055, 0.0);\n// \t#else\n// \t\tmediump vec3 sRGBLo = c * 12.92;\n// \t\tmediump vec3 power=vec3(1.0 / 2.4, 1.0 / 2.4, 1.0 / 2.4);\n// \t\tmediump vec3 sRGBHi = (positivePow(c, power) * 1.055) - 0.055;\n// \t\tmediump vec3 sRGB =vec3((c.r<=0.0031308) ? sRGBLo.r : sRGBHi.r,(c.g<=0.0031308) ? sRGBLo.g : sRGBHi.g,(c.b<=0.0031308) ? sRGBLo.b : sRGBHi.b);\n// \t\treturn sRGB;\n// \t#endif\n// }\n\n// mediump vec4 linearToSRGB(mediump vec4 c){\n//     return vec4(linearToSRGB(c.rgb), c.a);\n// }'),t.Shader3D.addInclude("Sampling.glsl","// Better, temporally stable box filtering\n// [Jimenez14] http://goo.gl/eomGso\n// . . . . . . .\n// . A . B . C .\n// . . D . E . .\n// . F . G . H .\n// . . I . J . .\n// . K . L . M .\n// . . . . . . .\nmediump vec4 downsampleBox13Tap(sampler2D tex, vec2 uv, vec2 texelSize)\n{\n    mediump vec4 A = texture2D(tex, uv + texelSize * vec2(-1.0, -1.0));\n    mediump vec4 B = texture2D(tex, uv + texelSize * vec2( 0.0, -1.0));\n    mediump vec4 C = texture2D(tex, uv + texelSize * vec2( 1.0, -1.0));\n    mediump vec4 D = texture2D(tex, uv + texelSize * vec2(-0.5, -0.5));\n    mediump vec4 E = texture2D(tex, uv + texelSize * vec2( 0.5, -0.5));\n    mediump vec4 F = texture2D(tex, uv + texelSize * vec2(-1.0,  0.0));\n    mediump vec4 G = texture2D(tex, uv);\n    mediump vec4 H = texture2D(tex, uv + texelSize * vec2( 1.0,  0.0));\n    mediump vec4 I = texture2D(tex, uv + texelSize * vec2(-0.5,  0.5));\n    mediump vec4 J = texture2D(tex, uv + texelSize * vec2( 0.5,  0.5));\n    mediump vec4 K = texture2D(tex, uv + texelSize * vec2(-1.0,  1.0));\n    mediump vec4 L = texture2D(tex, uv + texelSize * vec2( 0.0,  1.0));\n    mediump vec4 M = texture2D(tex, uv + texelSize * vec2( 1.0,  1.0));\n\n\tmediump vec2 scale= vec2(0.5, 0.125);\n    mediump vec2 div = (1.0 / 4.0) * scale;\n\n    mediump vec4 o = (D + E + I + J) * div.x;\n    o += (A + B + G + F) * div.y;\n    o += (B + C + H + G) * div.y;\n    o += (F + G + L + K) * div.y;\n    o += (G + H + M + L) * div.y;\n\n    return o;\n}\n\n// Standard box filtering\nmediump vec4 downsampleBox4Tap(sampler2D tex, vec2 uv, vec2 texelSize)\n{\n    vec4 d = texelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);\n\n    mediump vec4 s =  texture2D(tex, uv + d.xy);\n    s += texture2D(tex, uv + d.zy);\n    s += texture2D(tex, uv + d.xw);\n    s += texture2D(tex, uv + d.zw);\n\n    return s * (1.0 / 4.0);\n}\n\n// 9-tap bilinear upsampler (tent filter)\n// . . . . . . .\n// . 1 . 2 . 1 .\n// . . . . . . .\n// . 2 . 4 . 2 .\n// . . . . . . .\n// . 1 . 2 . 1 .\n// . . . . . . .\nmediump vec4 upsampleTent(sampler2D tex, vec2 uv, vec2 texelSize, vec4 sampleScale)\n{\n    vec4 d = texelSize.xyxy * vec4(1.0, 1.0, -1.0, 0.0) * sampleScale;\n\n    mediump vec4 s =  texture2D(tex, uv - d.xy);\n    s += texture2D(tex, uv - d.wy) * 2.0;\n    s += texture2D(tex, uv - d.zy);\n\n    s += texture2D(tex, uv + d.zw) * 2.0;\n    s += texture2D(tex, uv) * 4.0;\n    s += texture2D(tex,\tuv + d.xw) * 2.0;\n\n    s += texture2D(tex, uv + d.zy);\n    s += texture2D(tex, uv + d.wy) * 2.0;\n    s += texture2D(tex, uv + d.xy);\n\n    return s * (1.0 / 16.0);\n}\n\n// Standard box filtering\nmediump vec4 upsampleBox(sampler2D tex, vec2 uv, vec2 texelSize, vec4 sampleScale)\n{\n    vec4 d = texelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0) * 0.5 * sampleScale;\n\n    mediump vec4 s =  texture2D(tex, uv + d.xy);\n    s += texture2D(tex, uv + d.zy);\n    s += texture2D(tex, uv + d.xw);\n    s += texture2D(tex, uv + d.zw);\n\n    return s * (1.0 / 4.0);\n}");var e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_AutoExposureTex:t.ShaderDataType.Texture2D,u_Threshold:t.ShaderDataType.Vector4,u_Params:t.ShaderDataType.Vector4,u_BloomTex:t.ShaderDataType.Texture2D,u_SampleScale:t.ShaderDataType.Float},a=t.Shader3D.add("PostProcessBloom"),n=new t.SubShader(e,r);a.addSubShader(n);var i=n.addShaderPass(Da,'#define SHADER_NAME BloomPreFilter13FS\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 prefilter(mediump vec4 color, vec2 uv) {\n\tmediump float autoExposure = texture2D(u_AutoExposureTex, uv).r;\n\tcolor *= autoExposure;\n\tcolor = min(vec4(u_Params.x), color); // clamp to max\n\tcolor = quadraticThreshold(color, u_Threshold.x, u_Threshold.yzw);\n\treturn color;\n}\n\nvoid fragPrefilter13() {\n\tmediump vec4 color = downsampleBox13Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = prefilter(safeHDR(color), v_Texcoord0);\n}\n\nvoid main() {\n\tfragPrefilter13();\n}'),s=i.renderState;(s=i.renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,n=new t.SubShader(e,r),a.addSubShader(n),(s=(i=n.addShaderPass(Da,'#define SHADER_NAME BloomPreFilter4FS\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 prefilter(mediump vec4 color, vec2 uv) {\n\tmediump float autoExposure = texture2D(u_AutoExposureTex, uv).r;\n\tcolor *= autoExposure;\n\tcolor = min(vec4(u_Params.x), color); // clamp to max\n\tcolor = quadraticThreshold(color, u_Threshold.x, u_Threshold.yzw);\n\treturn color;\n}\n\nvoid fragPrefilter4() {\n\tmediump vec4 color = downsampleBox4Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = prefilter(safeHDR(color), v_Texcoord0);\n}\n\nvoid main() {\n\tfragPrefilter4();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,n=new t.SubShader(e,r),a.addSubShader(n),(s=(i=n.addShaderPass(Da,'#define SHADER_NAME BloomDownSample13FS\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid fragDownsample13() {\n\tmediump vec4 color = downsampleBox13Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = color;\n}\n\nvoid main() {\n\tfragDownsample13();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,n=new t.SubShader(e,r),a.addSubShader(n),(s=(i=n.addShaderPass(Da,'#define SHADER_NAME BloomDownSample4FS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid fragDownsample4() {\n\tmediump vec4 color = downsampleBox4Tap(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy);\n\tgl_FragColor = color;\n}\n\nvoid main() {\n\tfragDownsample4();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,n=new t.SubShader(e,r),a.addSubShader(n),(s=(i=n.addShaderPass(Da,'#define SHADER_NAME BloomUpSampleTentFS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 combine(mediump vec4 bloom, vec2 uv) {\n\tmediump vec4 color = texture2D(u_BloomTex, uv);\n\treturn bloom + color;\n}\n\nvoid fragUpsampleTent() {\n\tmediump vec4 bloom = upsampleTent(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy, vec4(u_SampleScale));\n\tgl_FragColor = combine(bloom, v_Texcoord0);\n}\n\nvoid main() {\n\tfragUpsampleTent();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,n=new t.SubShader(e,r),a.addSubShader(n),(s=(i=n.addShaderPass(Da,'#define SHADER_NAME BloomUpSampleBoxFS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nmediump vec4 combine(mediump vec4 bloom, vec2 uv) {\n\tmediump vec4 color = texture2D(u_BloomTex, uv);\n\treturn bloom + color;\n}\n\nvoid fragUpsampleBox() {\n\tmediump vec4 bloom = upsampleBox(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.xy, vec4(u_SampleScale));\n\tgl_FragColor = combine(bloom, v_Texcoord0);\n}\n\nvoid main() {\n\tfragUpsampleBox();\n}')).renderState).depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE,Ra.CompositeInit(),Ra.__initDefine__()}static CompositeInit(){let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_MainTex:t.ShaderDataType.Texture2D,u_BloomTex:t.ShaderDataType.Texture2D,u_AutoExposureTex:t.ShaderDataType.Texture2D,u_Bloom_DirtTex:t.ShaderDataType.Texture2D,u_BloomTex_TexelSize:t.ShaderDataType.Vector4,u_Bloom_DirtTileOffset:t.ShaderDataType.Vector4,u_Bloom_Settings:t.ShaderDataType.Vector3,u_Bloom_Color:t.ShaderDataType.Vector3},a=t.Shader3D.add("PostProcessComposite"),n=new t.SubShader(e,r);a.addSubShader(n);let i=n.addShaderPass("#define SHADER_NAME CompositeVS\nvarying vec2 v_Texcoord0;\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\nvoid main() {\n\tgl_Position = vec4(a_PositionTexcoord.xy, 0.0, 1.0);\n\tv_Texcoord0 = a_PositionTexcoord.zw;\n\tgl_Position = remapPositionZ(gl_Position);\n}",'#define SHADER_NAME CompositeFS\n\n#include "Colors.glsl";\n#include "Sampling.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid main() {\n\tmediump float autoExposure = texture2D(u_AutoExposureTex, v_Texcoord0).r;\n\tmediump vec4 color=vec4(0.0);\n\tcolor = texture2D(u_MainTex, v_Texcoord0);\n\t\n\t//color = sRGBToLinear(color);\n\tcolor.rgb *= autoExposure;\n\t\n\t#if defined(BLOOM)||defined(BLOOM_LOW)\n\t\t#ifdef BLOOM\n\t\t\tmediump vec4 bloom = upsampleTent(u_BloomTex, v_Texcoord0, u_BloomTex_TexelSize.xy, vec4(u_Bloom_Settings.x));\n\t\t#else\n\t\t\tmediump vec4 bloom = upsampleBox(u_BloomTex, v_Texcoord0, u_BloomTex_TexelSize.xy, vec4(u_Bloom_Settings.x));\n\t\t#endif\n\n\t\t// UVs should be Distort(uv * u_Bloom_DirtTileOffset.xy + u_Bloom_DirtTileOffset.zw)\n\t\t// but considering we use a cover-style scale on the dirt texture the difference\n\t\t// isn\'t massive so we chose to save a few ALUs here instead in case lens distortion\n\t\t// is active\n\t\tmediump vec4 dirt =vec4(texture2D(u_Bloom_DirtTex, v_Texcoord0 * u_Bloom_DirtTileOffset.xy + u_Bloom_DirtTileOffset.zw).rgb, 0.0);\n\n\t\t// Additive bloom (artist friendly)\n\t\tbloom *= u_Bloom_Settings.y;\n\t\tdirt *= u_Bloom_Settings.z;\n\t\tmediump vec4 bloomColor=vec4(u_Bloom_Color, 1.0);\n\t\tcolor += bloom * bloomColor;\n\t\tcolor += dirt * bloom;\n\t#endif\n\t\n\tmediump vec4 finalColor = color;\n\t//finalColor = linearToSRGB(finalColor);\n\t//finalColor.rgb = Dither(finalColor.rgb, v_Texcoord0);//TODO:抖动\n\tgl_FragColor = finalColor;\n}').renderState;i.depthTest=t.RenderState.DEPTHTEST_ALWAYS,i.depthWrite=!1,i.cull=t.RenderState.CULL_NONE,i.blend=t.RenderState.BLEND_DISABLE}static __initDefine__(){Ra.SHADERVALUE_MAINTEX=t.Shader3D.propertyNameToID("u_MainTex"),Ra.SHADERVALUE_AUTOEXPOSURETEX=t.Shader3D.propertyNameToID("u_AutoExposureTex"),Ra.SHADERVALUE_SAMPLESCALE=t.Shader3D.propertyNameToID("u_SampleScale"),Ra.SHADERVALUE_THRESHOLD=t.Shader3D.propertyNameToID("u_Threshold"),Ra.SHADERVALUE_PARAMS=t.Shader3D.propertyNameToID("u_Params"),Ra.SHADERVALUE_BLOOMTEX=t.Shader3D.propertyNameToID("u_BloomTex")}get clamp(){return this._clamp}set clamp(e){this._clamp=e}get color(){return this._color}set color(e){this._color=e}get fastMode(){return this._fastMode}set fastMode(e){this._fastMode=e}get dirtTexture(){return this._dirtTexture}set dirtTexture(e){this._dirtTexture&&this._dirtTexture._removeReference(1),this._dirtTexture=e,this._dirtTexture&&this._dirtTexture._addReference(1)}get intensity(){return this._intensity}set intensity(e){this._intensity=Math.max(e,0)}get threshold(){return this._threshold}set threshold(e){this._threshold=Math.max(e,0)}get softKnee(){return this._softKnee}set softKnee(e){this._softKnee=Math.min(Math.max(e,0),1)}get diffusion(){return this._diffusion}set diffusion(e){this._diffusion=Math.min(Math.max(e,1),10)}get anamorphicRatio(){return this._anamorphicRatio}set anamorphicRatio(e){this._anamorphicRatio=Math.min(Math.max(e,-1),1)}get dirtIntensity(){return this._dirtIntensity}set dirtIntensity(e){this._dirtIntensity=Math.max(e,0)}constructor(){super(),this._shader=null,this._shaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._linearColor=new t.Color,this._bloomTextureTexelSize=new t.Vector4,this._shaderThreshold=new t.Vector4,this._shaderParams=new t.Vector4,this._pyramid=null,this._intensity=0,this._threshold=1,this._softKnee=.5,this._diffusion=7,this._anamorphicRatio=0,this._dirtIntensity=0,this._shaderSetting=new t.Vector4,this._dirtTileOffset=new t.Vector4,this._fastMode=!1,this._dirtTexture=null,this.singleton=!0,this.active=!0,this.intensity=1,this.threshold=1,this.softKnee=.5,this.clamp=65472,this.diffusion=7,this.anamorphicRatio=0,this.color=new t.Color(1,1,1,1)}effectInit(e){super.effectInit(e),this._shader=t.Shader3D.find("PostProcessBloom"),this._pyramid=new Array(2*Ra.MAXPYRAMIDSIZE)}getCameraDepthTextureModeFlag(){return 0}release(e){super.release(e),this._shader=null,this._pyramid=[]}render(e){var r=e.command,a=e.camera.viewport;this._shaderData.setTexture(Ra.SHADERVALUE_AUTOEXPOSURETEX,t.Texture2D.whiteTexture);var n,i=this._anamorphicRatio,s=i<0?-i:0,o=i>0?i:0,l=Math.floor(a.width/(2-s)),h=Math.floor(a.height/(2-o)),c=Math.max(l,h);n=Math.log2(c)+this._diffusion-10;var d=Math.floor(n),_=Math.min(Math.max(d,1),Ra.MAXPYRAMIDSIZE),u=.5+n-d;this._shaderData.setNumber(Ra.SHADERVALUE_SAMPLESCALE,u);var m=t.Color.gammaToLinearSpace(this.threshold),f=m*this._softKnee+1e-5;this._shaderThreshold.setValue(m,m-f,2*f,.25/f),this._shaderData.setVector(Ra.SHADERVALUE_THRESHOLD,this._shaderThreshold);var g=t.Color.gammaToLinearSpace(this.clamp);this._shaderParams.setValue(g,0,0,0),this._shaderData.setVector(Ra.SHADERVALUE_PARAMS,this._shaderParams);for(var p=this.fastMode?1:0,S=e.indirectTarget,T=0;T<_;T++){var E=2*T,A=E+1,x=0==T?Ra.SUBSHADER_PREFILTER13+p:Ra.SUBSHADER_DOWNSAMPLE13+p,D=t.RenderTexture.createFromPool(l,h,t.RenderTargetFormat.R8G8B8,t.RenderTargetFormat.None,!1,1);if(D.filterMode=t.FilterMode.Bilinear,this._pyramid[E]=D,T!==_-1){var R=t.RenderTexture.createFromPool(l,h,t.RenderTargetFormat.R8G8B8,t.RenderTargetFormat.None,!1,1);R.filterMode=t.FilterMode.Bilinear,this._pyramid[A]=R}r.blitScreenTriangle(S,D,null,this._shader,this._shaderData,x),S=D,l=Math.max(Math.floor(l/2),1),h=Math.max(Math.floor(h/2),1)}var C=this._pyramid[2*(_-1)];for(T=_-2;T>=0;T--)A=(E=2*T)+1,D=this._pyramid[E],R=this._pyramid[A],r.setShaderDataTexture(this._shaderData,Ra.SHADERVALUE_BLOOMTEX,D),r.blitScreenTriangle(C,R,null,this._shader,this._shaderData,Ra.SUBSHADER_UPSAMPLETENT+p),C=R;var v=this._linearColor;this.color.toLinear(v);var y=Math.pow(2,this._intensity/10)-1,I=this._shaderSetting;this._shaderSetting.setValue(u,y,this._dirtIntensity,_);var M=this._dirtTexture?this._dirtTexture:t.Texture2D.blackTexture,L=M.width/M.height,O=a.width/a.height,b=this._dirtTileOffset;L>O?b.setValue(O/L,1,.5*(1-b.x),0):L<O&&b.setValue(1,L/O,0,.5*(1-b.y));var w=e.compositeShaderData;this.fastMode?w.addDefine(xa.SHADERDEFINE_BLOOM_LOW):w.addDefine(xa.SHADERDEFINE_BLOOM),this._bloomTextureTexelSize.setValue(1/C.width,1/C.height,C.width,C.height),w.setVector(xa.SHADERVALUE_BLOOM_DIRTTILEOFFSET,b),w.setVector(xa.SHADERVALUE_BLOOM_SETTINGS,I),w.setVector(xa.SHADERVALUE_BLOOM_COLOR,new t.Vector4(v.r,v.g,v.b,v.a)),w.setTexture(xa.SHADERVALUE_BLOOM_DIRTTEX,M),w.setTexture(xa.SHADERVALUE_BLOOMTEX,C),w.setVector(xa.SHADERVALUE_BLOOMTEX_TEXELSIZE,this._bloomTextureTexelSize);let B=t.Shader3D.find("PostProcessComposite");for(r.blitScreenTriangle(e.indirectTarget,e.destination,e.camera._screenOffsetScale,B,w,0),T=0;T<_;T++)A=(E=2*T)+1,t.RenderTexture.recoverToPool(this._pyramid[E]),0!==T&&T!==_-1&&t.RenderTexture.recoverToPool(this._pyramid[A]);e.deferredReleaseTextures.push(C)}}Ra.SUBSHADER_PREFILTER13=0,Ra.SUBSHADER_PREFILTER4=1,Ra.SUBSHADER_DOWNSAMPLE13=2,Ra.SUBSHADER_DOWNSAMPLE4=3,Ra.SUBSHADER_UPSAMPLETENT=4,Ra.SUBSHADER_UPSAMPLEBOX=5,Ra.MAXPYRAMIDSIZE=16;var Ca="#define SHADER_NAME SCREENVS\n\nvarying vec2 v_Texcoord0;\n\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\n\nvoid main() {\t\n\tgl_Position = vec4(u_OffsetScale.x*2.0-1.0+(a_PositionTexcoord.x+1.0)*u_OffsetScale.z,(1.0-((u_OffsetScale.y*2.0-1.0+(-a_PositionTexcoord.y+1.0)*u_OffsetScale.w)+1.0)/2.0)*2.0-1.0, 0.0, 1.0);\t\n\tv_Texcoord0 = a_PositionTexcoord.zw;\n\tgl_Position = remapPositionZ(gl_Position);\n}\n";class va extends Sa{static init(){va.SOURCESIZE=t.Shader3D.propertyNameToID("u_SourceSize"),va.ZBUFFERPARAMS=t.Shader3D.propertyNameToID("u_ZBufferParams"),va.COCPARAMS=t.Shader3D.propertyNameToID("u_CoCParams"),va.DEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthTexture"),va.NORMALDEPTHTEXTURE=t.Shader3D.propertyNameToID("u_CameraDepthNormalTexture"),va.FULLCOCTEXTURE=t.Shader3D.propertyNameToID("u_FullCoCTex"),va.DOWNSAMPLESCALE=t.Shader3D.propertyNameToID("u_DownSampleScale"),va.BLURCOCTEXTURE=t.Shader3D.propertyNameToID("u_BlurCoCTex"),va.SHADERDEFINE_DEPTHNORMALTEXTURE=t.Shader3D.getDefineByName("CAMERA_NORMALDEPTH");let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_OffsetScale:t.ShaderDataType.Vector4,u_ZBufferParams:t.ShaderDataType.Vector4,u_CoCParams:t.ShaderDataType.Vector3,u_FullCoCTex:t.ShaderDataType.Texture2D,u_SourceSize:t.ShaderDataType.Vector4,u_DownSampleScale:t.ShaderDataType.Vector4,u_BlurCoCTex:t.ShaderDataType.Texture2D},a=t.Shader3D.add("GaussianDoF"),n=new t.SubShader(e,r);a.addSubShader(n),n.addShaderPass(Ca,"#define SHADER_NAME COCFS\n\n#ifdef CAMERA_NORMALDEPTH\n    uniform sampler2D u_CameraDepthNormalTexture;\n#else\n    uniform sampler2D u_CameraDepthTexture;\n#endif\n\n\nvarying vec2 v_Texcoord0;\n\n// Z buffer to linear 0..1 depth\nfloat Linear01Depth(float z,vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.x * z + zbufferParams.y);\n}\n\n// Z buffer to linear depth\nfloat LinearEyeDepth(float z,vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.z * z + zbufferParams.w);\n}\n\nfloat DecodeFloatRG(vec2 enc )\n{\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\n    return dot( enc, kDecodeDot );\n}\n\nvoid DecodeDepthNormal(vec4 enc, out float depth)\n{\n    depth = DecodeFloatRG (enc.zw);\n}\n\nvoid main() {\n\n    #ifdef CAMERA_NORMALDEPTH\n        vec4 depthNormal = texture2D(u_CameraDepthNormalTexture, v_Texcoord0);\n        float depth = 0.0;\n        DecodeDepthNormal(depthNormal, depth);\n        depth = ((1.0 / depth) - u_ZBufferParams.y) * (1.0 / u_ZBufferParams.x);\n    #else\n        float depth = texture2D(u_CameraDepthTexture, v_Texcoord0).x;\n    #endif\n\n    depth = LinearEyeDepth(depth, u_ZBufferParams);\n    float farStart = u_CoCParams.x;\n    float farEnd = u_CoCParams.y;\n\n    float coc = (depth - farStart) / (farEnd - farStart);\n    coc = clamp(coc, 0.0, 1.0);\n    gl_FragColor = vec4(coc, coc, coc, 1.0);\n}\n");let i=new t.SubShader(e,r);a.addSubShader(i),i.addShaderPass(Ca,"#define SHADER_NAME PrefilterFS\n\nvarying vec2 v_Texcoord0;\n\nconst int kCount = 5;\nvec2 kTaps[5];\n\nvoid main () {\n\n    kTaps[0] = vec2( 0.0,  0.0);\n    kTaps[1] = vec2( 0.9, -0.4);\n    kTaps[2] = vec2(-0.9,  0.4);\n    kTaps[3] = vec2( 0.4,  0.9);\n    kTaps[4] = vec2(-0.4, -0.9);\n\n    vec3 colorAcc = vec3(0.0);\n    float farCoCAcc = 0.0;\n    for (int i = 0; i < kCount; i++) {\n        vec2 uv = u_MainTex_TexelSize.xy * kTaps[i] + v_Texcoord0;\n        vec3 tapColor = texture2D(u_MainTex, uv).rgb;\n        float coc = texture2D(u_FullCoCTex, uv).r;\n\n        colorAcc += tapColor * coc;\n        farCoCAcc += coc;\n    }\n    vec3 color = colorAcc * (1.0 / float(kCount));\n    float farCoC = farCoCAcc * (1.0 / float(kCount));\n\n    // float farCoC = texture2D(u_FullCoCTex, v_Texcoord0).x;\n    // vec3 color = texture2D(u_MainTex, v_Texcoord0).rgb;\n    // color *= farCoC;\n\n    gl_FragColor = vec4(color, farCoC);\n}");let s=new t.SubShader(e,r);a.addSubShader(s),s.addShaderPass(Ca,"#define SHADER_NAME BlurHFS\n\nvarying vec2 v_Texcoord0;\n\nconst int kTapCount = 3;\nfloat kOffsets[3];\nfloat kCoeffs[3];\n\nvec4 Blur(vec2 dir, float premultiply) {\n\n    kOffsets[0] = -1.33333333;\n    kOffsets[1] = 0.00000000;\n    kOffsets[2] = 1.33333333;\n\n    kCoeffs[0] = 0.35294118;\n    kCoeffs[1] = 0.29411765;\n    kCoeffs[2] = 0.3529411;\n\n    vec2 uv = v_Texcoord0;\n    // ivec2 positionSS = ivec2(u_SourceSize.xy * uv);\n\n    vec4 halfColor = texture2D(u_MainTex, uv);\n    float samp0CoC = halfColor.a;\n\n    float maxRadius = u_CoCParams.z;\n    vec2 offset = u_SourceSize.zw  * dir * samp0CoC * maxRadius;\n\n    vec4 acc = vec4(0.0);\n\n    for (int i = 0; i < kTapCount; i++) {\n        vec2 sampCoord = uv + kOffsets[i] * offset;\n        vec4 samp = texture2D(u_MainTex, sampCoord);\n        float sampCoC = samp.a;\n        vec3 sampColor = samp.rgb;\n\n        float weight = clamp(1.0 - (samp0CoC - sampCoC), 0.0, 1.0);\n        acc += vec4(sampColor, sampCoC) * kCoeffs[i] * weight;\n    }\n\n    acc.xyz /= acc.w + 1e-4;\n    return vec4(acc.xyz, samp0CoC);\n}\n\nvoid main() {\n    gl_FragColor = Blur(vec2(1.0, 0.0), 1.0);\n}");let o=new t.SubShader(e,r);a.addSubShader(o),o.addShaderPass(Ca,"#define SHADER_NAME BlurVFS\n\nvarying vec2 v_Texcoord0;\n\n// todo 3 & 5\nconst int kTapCount = 3;\nfloat kOffsets[3];\nfloat kCoeffs[3];\n\n\nvec4 Blur(vec2 dir, float premultiply) {\n\n    kOffsets[0] = -1.33333333;\n    kOffsets[1] = 0.00000000;\n    kOffsets[2] = 1.33333333;\n\n    kCoeffs[0] = 0.35294118;\n    kCoeffs[1] = 0.29411765;\n    kCoeffs[2] = 0.3529411;\n\n    vec2 uv = v_Texcoord0;\n    // ivec2 positionSS = ivec2(u_SourceSize.xy * uv);\n\n    vec4 halfColor = texture2D(u_MainTex, uv);\n    float samp0CoC = halfColor.a;\n\n    float maxRadius = u_CoCParams.z;\n    vec2 offset = u_SourceSize.zw * dir * samp0CoC * maxRadius;\n\n    vec4 acc = vec4(0.0);\n\n    for (int i = 0; i < kTapCount; i++) {\n        vec2 sampCoord = uv + kOffsets[i] * offset;\n        vec4 samp = texture2D(u_MainTex, sampCoord);\n        float sampCoC = samp.w;\n        vec3 sampColor = samp.xyz;\n\n        float weight = clamp(1.0 - (samp0CoC - sampCoC), 0.0, 1.0);\n        acc += vec4(sampColor, 1.0) * kCoeffs[i] * weight;\n    }\n\n    acc.xyz /= acc.w + 1e-4;\n    return vec4(acc.xyz, 1.0);\n}\n\nvoid main() {\n    gl_FragColor = Blur(vec2(0.0, 1.0), 0.0);\n    // gl_FragColor = texture2D(u_MainTex, v_Texcoord0);\n}\n");let l=new t.SubShader(e,r);a.addSubShader(l),l.addShaderPass(Ca,"#define SHADER_NAME CompositeFS\n\nvarying vec2 v_Texcoord0;\n\nvoid main() {\n\n    vec3 baseColor = texture2D(u_MainTex, v_Texcoord0).rgb;\n    vec4 samplevalue = texture2D(u_BlurCoCTex, v_Texcoord0);\n    vec3 farColor = samplevalue.rgb;\n    float coc = texture2D(u_FullCoCTex, v_Texcoord0).r;\n\n    vec3 dstColor = vec3(0.0);\n    float dstAlpha = 1.0;\n\n    float blend = sqrt(coc * 3.14 * 2.0);\n    dstColor = farColor * clamp(blend, 0.0, 1.0);\n    dstAlpha = clamp(1.0 - blend, 0.0, 1.0);\n\n\n    gl_FragColor = vec4(baseColor * dstAlpha + dstColor, 1.0);\n\n}")}constructor(){super(),this._shader=t.Shader3D.find("GaussianDoF"),this._shaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._shaderData.setVector3(va.COCPARAMS,new t.Vector3(10,30,1)),this._zBufferParams=new t.Vector4,this._sourceSize=new t.Vector4,this._dowmSampleScale=new t.Vector4}set farStart(e){let t=this._shaderData.getVector3(va.COCPARAMS);t.x=e,this._shaderData.setVector3(va.COCPARAMS,t)}get farStart(){return this._shaderData.getVector3(va.COCPARAMS).x}set farEnd(e){let t=this._shaderData.getVector3(va.COCPARAMS);t.y=Math.max(t.x,e),this._shaderData.setVector3(va.COCPARAMS,t)}get farEnd(){return this._shaderData.getVector3(va.COCPARAMS).y}set maxRadius(e){let t=this._shaderData.getVector3(va.COCPARAMS);t.z=Math.min(e,2),this._shaderData.setVector3(va.COCPARAMS,t)}get maxRadius(){return this._shaderData.getVector3(va.COCPARAMS).z}_setupShaderValue(e){let t=e.camera;this._dowmSampleScale.setValue(.5,.5,2,2),this._shaderData.setVector(va.DOWNSAMPLESCALE,this._dowmSampleScale);let r=t.farPlane,a=t.nearPlane;this._zBufferParams.setValue(1-r/a,r/a,(a-r)/(a*r),1/a),this._shaderData.setVector(va.ZBUFFERPARAMS,this._zBufferParams)}getCameraDepthTextureModeFlag(){return e.DepthTextureMode.Depth}render(e){let r=e.command;this._setupShaderValue(e);let a=e.source,n=this._shader,i=this._shaderData,s=t.RenderTargetFormat.R16G16B16A16,o=t.RenderTexture.createFromPool(a.width,a.height,s,t.RenderTargetFormat.None,!1,1);r.blitScreenTriangle(a,o,null,n,i,0),o.filterMode=t.FilterMode.Bilinear,this._shaderData.setTexture(va.FULLCOCTEXTURE,o);let l=t.RenderTexture.createFromPool(a.width/2,a.height/2,s,t.RenderTargetFormat.None,!1,1);r.blitScreenTriangle(a,l,null,n,i,1),l.filterMode=t.FilterMode.Bilinear,this._sourceSize.setValue(l.width,l.height,1/l.width,1/l.height),this._shaderData.setShaderData(va.SOURCESIZE,t.ShaderDataType.Vector4,this._sourceSize);let h=t.RenderTexture.createFromPool(l.width,l.height,s,t.RenderTargetFormat.None,!1,1);r.blitScreenTriangle(l,h,null,this._shader,this._shaderData,2);let c=t.RenderTexture.createFromPool(l.width,l.height,s,t.RenderTargetFormat.None,!1,1);r.blitScreenTriangle(h,c,null,this._shader,this._shaderData,3),c.filterMode=t.FilterMode.Bilinear,c.anisoLevel=1,o.filterMode=t.FilterMode.Point,this._shaderData.setTexture(va.BLURCOCTEXTURE,c);let d=t.RenderTexture.createFromPool(a.width,a.height,a.colorFormat,a.depthStencilFormat,!1,1);r.blitScreenTriangle(a,e.destination,null,this._shader,this._shaderData,4),t.RenderTexture.recoverToPool(o),t.RenderTexture.recoverToPool(l),t.RenderTexture.recoverToPool(h),t.RenderTexture.recoverToPool(c),e.deferredReleaseTextures.push(d)}}var ya;e.AOQUALITY=void 0,(ya=e.AOQUALITY||(e.AOQUALITY={}))[ya.High=0]="High",ya[ya.MEDIUM=1]="MEDIUM",ya[ya.LOWEST=2]="LOWEST";class Ia extends Sa{static init(){Ia.BlurDelty=t.Shader3D.propertyNameToID("u_Delty"),Ia.AOColor=t.Shader3D.propertyNameToID("u_AOColor"),Ia.aoTexture=t.Shader3D.propertyNameToID("u_compositionAoTexture"),Ia.AOParams=t.Shader3D.propertyNameToID("u_AOParams"),Ia.SourceTex=t.Shader3D.propertyNameToID("u_SourceTex"),Ia.SHADERDEFINE_AOHigh=t.Shader3D.getDefineByName("AO_High"),Ia.SHADERDEFINE_AOMEDIUM=t.Shader3D.getDefineByName("AO_MEDIUM"),Ia.SHADERDEFINE_LOWEST=t.Shader3D.getDefineByName("AO_LOWEST"),t.Shader3D.addInclude("AmbientOcclusion.glsl",'#include "Camera.glsl";\n// const \n#define TWO_PI 6.2831852\n\n#define EPSILON         1.0e-4\n#define FLT_EPSILON     1.192092896e-07 // Smallest positive number, such that 1.0 + FLT_EPSILON != 1.0\n\nconst float kContrast = 0.6;\nconst float kGeometryCoeff = 0.8;\nconst float kBeta = 0.002;\n\n\n// varying\nvarying vec2 v_Texcoord0;\n\n#if defined(AO_High)\n\t#define SAMPLE_COUNT 12\n#elif defined(AO_MEDIUM)\n\t#define SAMPLE_COUNT 8\n#else\n\t#define SAMPLE_COUNT 4\n#endif\n\n#ifdef AOLOWEST\n#define SAMPLE_COUNT 8\n#endif\n\n#ifdef AOLOWEST\n#define SAMPLE_COUNT 8\n#endif\n\n\n#define INTENSITY u_AOParams.x\n#define RADIUS u_AOParams.y\n#define DOWNSAMPLE u_AOParams.z\n\nfloat PositivePow(float base, float power)\n{\n    return pow(max(abs(base), float(FLT_EPSILON)), power);\n}\n\n\n// Boundary check for depth sampler\n// (returns a very large value if it lies out of bounds)\nfloat CheckBounds(vec2 uv, float d) \n{\n    float ob = 0.0;\n    // todo\n    if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) \n    {\n        ob = 1.0;\n    }\n    if (d <= 0.00001) {\n        ob += 1.0;\n    }\n\n    return ob * 1e8;\n}\n\nfloat SampleDepth(vec2 uv) \n{\n    float depthTex_Depth = SAMPLE_DEPTH_TEXTURE(u_CameraDepthTexture, uv);\n    float depthTex_Linear01Depth = Linear01Depth(depthTex_Depth, u_ZBufferParams);\n    return  depthTex_Linear01Depth * u_ProjectionParams.y + CheckBounds(uv, depthTex_Linear01Depth);\n}\n\nvec3 SampleNormal(vec2 uv) \n{\n    vec4 col = texture2D(u_CameraDepthNormalsTexture, uv);\n    vec3 depthNormal_Normal = DecodeViewNormalStereo(col);\n    return depthNormal_Normal * vec3(1.0, 1.0, -1.0);\n}\n\nfloat SampleDepthNormal(vec2 uv, out vec3 normal) \n{\n    normal = SampleNormal(uv);\n    return SampleDepth(uv);\n}\n\n// Normal vector comparer (for geometry-aware weighting)\nfloat CompareNormal(vec3 d1, vec3 d2)\n{\n    return smoothstep(kGeometryCoeff, 1.0, dot(d1, d2));\n}\n\n// Accessors for packed AO/normal buffer\nvec4 PackAONormal(float ao, vec3 n) \n{\n    return vec4(ao, n * 0.5 + 0.5);\n}\n\nvec3 GetPackedNormal(vec4 p)\n{\n    return p.gba * 2.0 - 1.0;\n}\n\nfloat GetPackAO(vec4 p)\n{\n    return p.r;\n}\n\n\n');let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_Delty:t.ShaderDataType.Vector2,u_PlugTime:t.ShaderDataType.Vector4,u_AOParams:t.ShaderDataType.Vector4,u_BlurVector:t.ShaderDataType.Vector2,u_AOColor:t.ShaderDataType.Color,u_compositionAoTexture:t.ShaderDataType.Texture2D},a=t.Shader3D.add("ScalableAO"),n=new t.SubShader(e,r);a.addSubShader(n),n.addShaderPass(Ea,'#if defined(GL_FRAGMENT_PRECISION_HIGH)\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#define SHADER_NAME OcclusionEstimation:FS\n\n#include "DepthNormalUtil.glsl";\n\n#include "AmbientOcclusion.glsl";\n\n#define FIX_SAMPLING_PATTERN\n\n// Check if the camera is perspective.\n// (returns 1.0 when orthographic)\nfloat CheckPerspective(float x)\n{   \n    // todo ortho\n    return mix(x, 1.0, 0.0);\n}\n\nvec3 ReconstructViewPos(vec2 uv, float depth, vec2 p11_22, vec2 p13_31)\n{\n    return vec3((uv * 2.0 - 1.0 - p13_31) / p11_22 * CheckPerspective(depth), depth);\n}\n\n// Pseudo random number generator with 2D coordinates\n// https://stackoverflow.com/questions/12964279/whats-the-origin-of-this-glsl-rand-one-liner\nfloat UVRandom(float u, float v) {\n    float f = dot(vec2(12.9898, 78.233), vec2(u, v));\n    return fract(43758.5453 * sin(f));\n}\n\nvec2 CosSin(float theta)\n{\n    // float sn, cs;\n    // sincos(theta, sn, cs);\n    float sn = sin(theta);\n    float cs = cos(theta);\n    return vec2(cs, sn);\n}\n\nfloat GradientNoise(vec2 uv)\n{\n    uv = floor(uv * u_MainTex_TexelSize.zw);\n    float f = dot(vec2(0.06711056, 0.00583715), uv);\n    return fract(52.9829189 * fract(f));\n}\n\n// Sample point picker\nvec3 PickSamplePoint(vec2 uv, float index) \n{\n    #if defined(FIX_SAMPLING_PATTERN)\n        float gn = GradientNoise(uv * DOWNSAMPLE);\n        float u = fract(UVRandom(0.0, index + uv.x * 1e-10) + gn) * 2.0 - 1.0;\n        float theta = (UVRandom(1.0, index + uv.x * 1e-10) + gn) * TWO_PI;\n    #else\n        float u = UVRandom(uv.x + u_PlugTime.x, uv.y + index) * 2.0 - 1.0;\n        float theta = UVRandom(-uv.x - u_PlugTime.x, uv.y + index) * TWO_PI;\n    #endif\n\n    vec3 v = vec3(CosSin(theta) * sqrt(1.0 - u * u), u);\n    float l = sqrt((index + 1.0) / float(SAMPLE_COUNT)) * RADIUS;\n    return v * l;\n}\n\nvoid main()\n{\n    vec2 uv = v_Texcoord0;\n\n    mat3 proj = mat3(u_Projection);\n    vec2 p11_22 = vec2(u_Projection[0][0], u_Projection[1][1]);\n    vec2 p13_31 = vec2(u_Projection[2][0], u_Projection[2][1]);\n\n    vec3 norm_o;\n    float depth_o = SampleDepthNormal(uv, norm_o);\n\n    // Reconstruct the view-space position.\n    vec3 vpos_o = ReconstructViewPos(uv, depth_o, p11_22, p13_31);\n\n    float ao = 0.0;\n\n    for (int s = 0; s < int(SAMPLE_COUNT); s++) {\n        float s_float = float(s);\n        vec3 v_s1 = PickSamplePoint(uv, s_float);\n\n        v_s1 = faceforward(v_s1, -norm_o, v_s1);\n        vec3 vpos_s1 = vpos_o + v_s1;\n\n        // Reproject the sample point\n        vec3 spos_s1 = proj * vpos_s1;\n        vec2 uv_s1_01 = (spos_s1.xy / CheckPerspective(vpos_s1.z) + 1.0) * 0.5;\n\n        float depth_s1 = SampleDepth(uv_s1_01);\n\n        vec3 vpos_s2 = ReconstructViewPos(uv_s1_01, depth_s1, p11_22, p13_31);\n        vec3 v_s2 = vpos_s2 - vpos_o;\n\n        float a1 = max(dot(v_s2, norm_o) - kBeta * depth_o, 0.0);\n        float a2 = dot(v_s2, v_s2) + EPSILON;\n\n        ao += a1 / a2;\n    }\n\n    ao *= RADIUS;\n\n    ao = PositivePow(ao * INTENSITY / float(SAMPLE_COUNT), kContrast);\n\n    gl_FragColor = PackAONormal(ao, norm_o);\n}\n\n/**\n    0.8741,     0,          0,          0, \n    0,          1.7320,     0,          0, \n    0,          0,          -1.0152,    -1, \n    0,          0,          -0.3046,    0\n**/'),a=t.Shader3D.add("AOBlurHorizontal"),n=new t.SubShader(e,r),a.addSubShader(n),n.addShaderPass(Ea,"#if defined(GL_FRAGMENT_PRECISION_HIGH)\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n\n#define SHADER_NAME AOBlurHorizontal\n//质量\n#define BLUR_HIGH_QUALITY 0\n\n\nvarying vec2 v_Texcoord0;\n\n// uniform vec2 u_Delty;\n\nvec3 GetPackedNormal(vec4 p)\n{\n    return p.gba * 2.0 - 1.0;\n}\n\nfloat CompareNormal(vec3 d1, vec3 d2)\n{\n    return smoothstep(0.8, 1.0, dot(d1, d2));\n}\n\nfloat GetPackedAO(vec4 p)\n{\n    return p.r;\n}\n\nvec4 PackAONormal(float ao, vec3 normal) {\n    return vec4(ao, normal * 0.5 + 0.5);\n}\n\nvoid main() {\n\t vec2 delta = vec2(u_MainTex_TexelSize.x * 2.0*u_Delty.x,u_Delty.y*u_MainTex_TexelSize.y*2.0);\n\t vec2 uv = v_Texcoord0;\n\n\n#if defined(BLUR_HIGH_QUALITY)\n\n    // High quality 7-tap Gaussian with adaptive sampling\n\tvec2 uvtran = uv;\n    vec4 p0  = texture2D(u_MainTex,uv);\n\tuvtran = uv-delta;\n    vec4 p1a = texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta;\n    vec4 p1b = texture2D(u_MainTex,uvtran);\n\tuvtran = uv-delta*2.0;\n    vec4 p2a =  texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta*2.0;\n    vec4 p2b =  texture2D(u_MainTex,uvtran);\n\tuvtran = uv-delta * 3.2307692308;\n    vec4 p3a =  texture2D(u_MainTex,uvtran);;\n\tuvtran = uv+delta * 3.2307692308;\n    vec4 p3b =  texture2D(u_MainTex,uvtran);;\n\n    vec3 n0 = GetPackedNormal(p0);\n    \n\n    float w0  = 0.37004405286;\n    float w1a = CompareNormal(n0, GetPackedNormal(p1a)) * 0.31718061674;\n    float w1b = CompareNormal(n0, GetPackedNormal(p1b)) * 0.31718061674;\n    float w2a = CompareNormal(n0, GetPackedNormal(p2a)) * 0.19823788546;\n    float w2b = CompareNormal(n0, GetPackedNormal(p2b)) * 0.19823788546;\n    float w3a = CompareNormal(n0, GetPackedNormal(p3a)) * 0.11453744493;\n    float w3b = CompareNormal(n0, GetPackedNormal(p3b)) * 0.11453744493;\n\n    float s;\n    s  = GetPackedAO(p0)  * w0;\n    s += GetPackedAO(p1a) * w1a;\n    s += GetPackedAO(p1b) * w1b;\n    s += GetPackedAO(p2a) * w2a;\n    s += GetPackedAO(p2b) * w2b;\n    s += GetPackedAO(p3a) * w3a;\n    s += GetPackedAO(p3b) * w3b;\n\n    s /= w0 + w1a + w1b + w2a + w2b + w3a + w3b;\n\n#else\n\n    // Fater 5-tap Gaussian with linear sampling\n    vec4 p0  = texture2D(u_MainTex, sampler_MainTex, i.texcoordStereo);\n    vec4 p1a = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord - delta * 1.3846153846));\n    vec4 p1b = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord + delta * 1.3846153846));\n    vec4 p2a = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord - delta * 3.2307692308));\n    vec4 p2b = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, UnityStereoTransformScreenSpaceTex(i.texcoord + delta * 3.2307692308));\n\n\tvec2 uvtran = uv;\n    vec4 p0  = texture2D(u_MainTex,uv);\n\tuvtran = uv-delta * 1.3846153846;\n    vec4 p1a = texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta * 1.3846153846;\n    vec4 p1b = texture2D(u_MainTex,uvtran);\n\tuvtran = uv-delta*3.2307692308;\n    vec4 p2a =  texture2D(u_MainTex,uvtran);\n\tuvtran = uv+delta*3.2307692308;\n    vec4 p2b =  texture2D(u_MainTex,uvtran);\n\n \tvec3 n0 = GetPackedNormal(p0);\n\n    float w0  = 0.2270270270;\n    float w1a = CompareNormal(n0, GetPackedNormal(p1a)) * 0.3162162162;\n    float w1b = CompareNormal(n0, GetPackedNormal(p1b)) * 0.3162162162;\n    float w2a = CompareNormal(n0, GetPackedNormal(p2a)) * 0.0702702703;\n    float w2b = CompareNormal(n0, GetPackedNormal(p2b)) * 0.0702702703;\n\n    float s;\n    s  = GetPackedAO(p0)  * w0;\n    s += GetPackedAO(p1a) * w1a;\n    s += GetPackedAO(p1b) * w1b;\n    s += GetPackedAO(p2a) * w2a;\n    s += GetPackedAO(p2b) * w2b;\n\n    s /= w0 + w1a + w1b + w2a + w2b;\n\n#endif\n\n    gl_FragColor = PackAONormal(s, n0);;\n}"),a=t.Shader3D.add("AOComposition"),n=new t.SubShader(e,r),a.addSubShader(n),n.addShaderPass(Ea,"#if defined(GL_FRAGMENT_PRECISION_HIGH)\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#define SHADER_NAME AOComposition\n#define BLUR_HIGH_QUALITY 0\n\n\nvarying vec2 v_Texcoord0;\n\nvec3 GetPackedNormal(vec4 p)\n{\n    return p.gba * 2.0 - 1.0;\n}\nfloat CompareNormal(vec3 d1, vec3 d2)\n{\n    return smoothstep(0.8, 1.0, dot(d1, d2));\n}\nfloat GetPackedAO(vec4 p)\n{\n    return p.r;\n}\n\n// Geometry-aware bilateral filter (single pass/small kernel)\nfloat BlurSmall(sampler2D tex, vec2 uv, vec2 delta)\n{\n    vec4 p0 = texture2D(tex,uv);\n    vec2 uvtran =uv+vec2(-delta.x,-delta.y) ;\n    vec4 p1 = texture2D(tex,uvtran);\n    uvtran =uv+vec2(delta.x,-delta.y);\n    vec4 p2 = texture2D(tex, uvtran);\n    uvtran =uv+vec2(-delta.x,delta.y) ;\n    vec4 p3 = texture2D(tex, uvtran);\n    uvtran =uv+delta;\n    vec4 p4 = texture2D(tex, uvtran);\n\n    vec3 n0 = GetPackedNormal(p0);\n\n    float w0 = 1.0;\n    float w1 = CompareNormal(n0, GetPackedNormal(p1));\n    float w2 = CompareNormal(n0, GetPackedNormal(p2));\n    float w3 = CompareNormal(n0, GetPackedNormal(p3));\n    float w4 = CompareNormal(n0, GetPackedNormal(p4));\n\n    float s;\n    s  = GetPackedAO(p0) * w0;\n    s += GetPackedAO(p1) * w1;\n    s += GetPackedAO(p2) * w2;\n    s += GetPackedAO(p3) * w3;\n    s += GetPackedAO(p4) * w4;\n\n    return s / (w0 + w1 + w2 + w3 + w4);\n}\n\nvoid main() {\n    vec2 uv = v_Texcoord0;\n    vec2 delty = u_MainTex_TexelSize.xy;\n    float ao = BlurSmall(u_compositionAoTexture,uv,delty);\n    vec4 albedo = texture2D(u_MainTex,uv);\n    vec4 aocolor = vec4(ao*u_AOColor.rgb,ao);\n    albedo.rgb = albedo.rgb*(1.0-ao)+ao*u_AOColor.rgb*ao;\n    gl_FragColor = albedo;\n\n\n}")}constructor(){super(),this._aoParams=new t.Vector3,this._aoQuality=e.AOQUALITY.MEDIUM,this._shader=t.Shader3D.find("ScalableAO"),this._shaderData=t.LayaGL.renderOBJCreate.createShaderData(null),this._aoParams=new t.Vector3(.12,.15,1),this._shaderData.setVector3(Ia.AOParams,this._aoParams),this._shaderData.setVector(Qe.DEPTHZBUFFERPARAMS,new t.Vector4),this._aoBlurHorizontalShader=t.Shader3D.find("AOBlurHorizontal"),this._aoComposition=t.Shader3D.find("AOComposition"),this.aoQuality=e.AOQUALITY.MEDIUM}set aoColor(e){this._shaderData.setColor(Ia.AOColor,e)}get aoColor(){return this._shaderData.getColor(Ia.AOColor)}set intensity(e){this._aoParams.x=e,this._shaderData.setVector3(Ia.AOParams,this._aoParams)}get intensity(){return this._aoParams.x}set radius(e){this._aoParams.y=e,this._shaderData.setVector3(Ia.AOParams,this._aoParams)}get radius(){return this._aoParams.y}get aoQuality(){return this._aoQuality}set aoQuality(t){switch(this._aoQuality=t,t){case e.AOQUALITY.High:this._shaderData.addDefine(Ia.SHADERDEFINE_AOHigh),this._shaderData.removeDefine(Ia.SHADERDEFINE_AOMEDIUM),this._shaderData.removeDefine(Ia.SHADERDEFINE_LOWEST);break;case e.AOQUALITY.MEDIUM:this._shaderData.addDefine(Ia.SHADERDEFINE_AOMEDIUM),this._shaderData.removeDefine(Ia.SHADERDEFINE_AOHigh),this._shaderData.removeDefine(Ia.SHADERDEFINE_LOWEST);break;case e.AOQUALITY.LOWEST:this._shaderData.addDefine(Ia.SHADERDEFINE_LOWEST),this._shaderData.removeDefine(Ia.SHADERDEFINE_AOHigh),this._shaderData.removeDefine(Ia.SHADERDEFINE_AOMEDIUM)}}getCameraDepthTextureModeFlag(){return e.DepthTextureMode.DepthAndDepthNormals}render(r){let a=r.command;r.camera.viewport;let n=r.camera;n.depthTextureMode|=e.DepthTextureMode.DepthNormals,n.depthTextureMode|=e.DepthTextureMode.Depth;let i=n.depthNormalTexture,s=n.depthTexture;if(!i||!s)return;i.wrapModeU=t.WrapMode.Clamp,i.wrapModeV=t.WrapMode.Clamp;let o=r.source,l=o.width,h=o.height,c=o.colorFormat,d=t.RenderTargetFormat.None,_=t.RenderTexture.createFromPool(l,h,c,d,!1,1),u=this._shader,m=this._shaderData;a.blitScreenTriangle(null,_,null,u,m,0);let f=t.RenderTexture.createFromPool(l,h,c,d,!1,1);a.blitScreenTriangle(_,f,null,this._aoBlurHorizontalShader,m,0),a.setShaderDataVector2(m,Ia.BlurDelty,Ia.deltyVector),a.blitScreenTriangle(f,_,null,this._aoBlurHorizontalShader,this._shaderData,0),a.setShaderDataTexture(m,Ia.aoTexture,_),a.blitScreenTriangle(r.source,r.destination,null,this._aoComposition,this._shaderData,0),r.deferredReleaseTextures.push(_),r.deferredReleaseTextures.push(f)}}Ia.deltyHorizontal=new t.Vector2(1,0),Ia.deltyVector=new t.Vector2(0,1);class Ma{constructor(){this._conditions=[],this._exitByTime=!0,this._exitTime=.85,this._transduration=.15,this._transstartoffset=0,this._mute=!1}get name(){return this._name}set name(e){this._name=e}get mute(){return this._mute}set mute(e){this._mute=e}get destState(){return this._destState}set destState(e){this._destState=e}get conditions(){return this._conditions}set conditions(e){for(var t=this._conditions.length-1;t>=0;t--)this.removeCondition(this._conditions[t]);for(t=0;t<e.length;t++)this.addCondition(e[t])}get exitByTime(){return this._exitByTime}set exitByTime(e){this._exitByTime=e}set transduration(e){this._transduration=Math.max(0,Math.min(e,1))}get transduration(){return this._transduration}set transstartoffset(e){this._transstartoffset=Math.max(0,Math.min(e,1))}get transstartoffset(){return this._transstartoffset}set exitTime(e){this._exitTime=Math.max(0,Math.min(e,1))}get exitTime(){return this._exitTime}addCondition(e){-1==this._conditions.indexOf(e)&&this._conditions.push(e)}removeCondition(e){let t=this._conditions.indexOf(e);-1!=t&&this._conditions.splice(t,0)}check(e,r){if(this._mute)return!1;if(0==this._conditions.length){if(e>this._exitTime)return!0}else{if(this._exitByTime&&e<this._exitTime)return!1;for(var a=0;a<this._conditions.length;a++){let e=this._conditions[a];if(e.checkState(r[e.id]))return e.type==t.AniStateConditionType.Trigger&&(r[e.id]=!1),!0}}return!1}}class La extends t.Resource{constructor(e){super();let r=t.AnimatorControllerParse.parse(e);this.data=r.ret,this.clipsID=r.clipsID}getLayers(){let e=this.data.controllerLayers,t=[];for(let r=e.length-1;r>=0;r--){let a=e[r],n=new _a(a.name);t.unshift(n);for(let e in a)if("name"!=e&&"states"!=e&&null!=a[e])try{n[e]=a[e]}catch(e){}this.getState(a.states,n,this.data)}return t}updateTo(e){let r=e._controllerLayers;for(let e=0,t=r.length;e<t;e++)r[e]._removeReference();r.length=0;let a=this.getLayers();for(let t=0,r=a.length;t<r;t++)e.addControllerLayer(a[t]);let n=this.data.animatorParams;if(n)for(let r=n.length-1;r>=0;r--){let a=n[r];if(t.AniParmType.Bool==a.type)e.setParamsBool(a.name,Boolean(a.val));else if(t.AniParmType.Float==a.type){let t=Number(a.val);isNaN(t)&&(t=0),e.setParamsNumber(a.name,t)}else t.AniParmType.Trigger==a.type&&a.val&&e.setParamsTrigger(a.name)}}createState(e,r,a){if(!e)return null;let n={},i=null;for(let s=e.length-1;s>=0;s--){let o=e[s],l=o.states;if(l){let e=this.createState(l,r,a);e&&(r[o.id]=e.states[e.id]);continue}if(0>Number(o.id)){if("-1"==o.id){let e=o.soloTransitions;e&&0<e.length&&(i=e[0].id)}continue}let h=new ma;r[o.id]=h,n[o.id]=h;for(let e in o)try{if("scripts"==e){let r=o[e];if(r&&Array.isArray(r))for(let e=r.length-1;e>=0;e--){let a=r[e],n=t.ClassUtils.getClass(a);n&&h.addScript(n)}continue}if("soloTransitions"==e)continue;null!=o[e]&&(h[e]=o[e])}catch(e){}a.addState(h)}return{id:i,states:n}}setExitTransition(e,t,r,a,n){for(let i in e){let s=r[i];if(s){let o=s.transitions,l=s.soloTransitions,h=e[i];for(let e=t.length-1;e>=0;e--){let s=t[e];if("-3"!=s.id)for(let e=h.length-1;e>=0;e--){let t=h[e],n=new Ma;n.destState=r[s.id],s.conditions&&this.addConditions(s.conditions,n,a),t.conditions&&this.addConditions(t.conditions,n,a);for(let e in s)"solo"!=e&&"id"!=e&&"conditions"!=e&&(n[e]=s[e]);s.solo?l.unshift(n):o.unshift(n)}else null==n[i]&&(n[i]=[]),n[i].push(s)}}}}setTransitions(e,t,r,a,n){if(!e)return null;let i={};for(let n=e.length-1;n>=0;n--){let s=e[n];if(s.states){let e=this.setTransitions(s.states,t,r,a,s);if(e){let r=s.soloTransitions;r&&this.setExitTransition(e,r,t,a,i)}}}for(let s=e.length-1;s>=0;s--){let o=e[s];if(o.states)continue;if("-1"==o.id){if(o.soloTransitions&&0<o.soloTransitions.length){null==n?r.defaultState=t[o.soloTransitions[0].id]:t[n.id]=t[o.soloTransitions[0].id];continue}}else{if("-2"==o.id){let e=o.soloTransitions;if(e)for(let r=e.length-1;r>=0;r--){let n=e[r],i=t[n.id];if(i)for(let e in t){let r=t[e],s=new Ma;s.destState=i,n.conditions&&this.addConditions(n.conditions,s,a);for(let e in n)"solo"!=e&&"id"!=e&&"conditions"!=e&&(s[e]=n[e]);n.solo?r.soloTransitions.unshift(s):r.transitions.unshift(s)}}continue}if("-3"==o.id)continue}let l=o.soloTransitions;if(l&&t[o.id]){let e=t[o.id].transitions,r=t[o.id].soloTransitions;for(let n=l.length-1;n>=0;n--){let s=l[n];if("-3"==s.id){null==i[o.id]&&(i[o.id]=[]),i[o.id].push(s);continue}let h=new Ma;t[s.id]&&(h.destState=t[s.id]),s.conditions&&this.addConditions(s.conditions,h,a);for(let e in s)"solo"!=e&&"id"!=e&&"conditions"!=e&&(h[e]=s[e]);s.solo?r.unshift(h):e.unshift(h)}}}return i}getState(e,t,r){if(e){let a={};this.createState(e,a,t),this.setTransitions(e,a,t,r)}}addConditions(e,r,a){let n=a.animatorParams;if(null!=n&&0!=n.length)for(let a=0,i=e.length;a<i;a++){let i,s=e[a],o=null;for(let e=n.length-1;e>=0;e--)if(n[e].id==s.id){o=n[e];break}if(null==o)return;if(o.type==t.AniParmType.Bool){let e=new t.AnimatorStateBoolCondition(s.name);e.compareFlag=Boolean(s.checkValue),i=e}else if(o.type==t.AniParmType.Float){let e=new t.AnimatorStateNumberCondition(s.name);e.numberValue=Number(s.checkValue),e.compareFlag=s.type,i=e}else if(o.type==t.AniParmType.Trigger){i=new t.AnimatorStateTriggerCondition(s.name)}r.addCondition(i)}}}class Oa{constructor(){this.updateMark=-1,this.indexInList=-1,this.batched=!1}}class ba{constructor(){this._instanceBatchOpaqueMarks=[],this.updateCountMark=0}_getData(e,t,r){return null==r&&(r=Array),"boolean"==typeof e?t[e?0:1]||(t[e?0:1]=new r):t[e]||(t[e]=new r)}getInstanceBatchOpaquaMark(e,t,r,a,n){var i=this._getData(e,this._instanceBatchOpaqueMarks);return i=this._getData(t,i),i=this._getData(r,i),i=this._getData(a,i),this._getData(n,i,Oa)}}ba.instance=new ba;const wa=new t.Vector3,Ba=new t.Vector3;class Na extends He{constructor(){super(),this._lodInstanceRenderElement={},this._RenderBitFlag=e.RenderBitFlag.RenderBitFlag_Batch,this._renderElements=[],this._lodInstanceRenderElement[-1]=[],this._batchList=new t.SingletonList}get checkLOD(){return this._checkLOD}set checkLOD(e){this._checkLOD=e}set lodCullRateArray(e){this._checkLOD&&(e.sort(((e,t)=>t-e)),this._lodRateArray=e)}get lodCullRateArray(){return this._lodRateArray}_canBatch(e){return e._batchRender,!1}_onEnable(){if(super._onEnable(),this._batchList)for(let e=0,t=this._batchList.length;e<t;e++)this._batchList.elements[e].setRenderbitFlag(this._RenderBitFlag,!0)}_onDisable(){if(super._onDisable(),this._batchList)for(let e=0,t=this._batchList.length;e<t;e++)this._batchList.elements[e].setRenderbitFlag(this._RenderBitFlag,!1)}_changeLOD(e){this._cacheLod!=e&&(this._cacheLod==this.lodCullRateArray.length-1&&(e=-1),this._renderElements=this._lodInstanceRenderElement[e],this._lodInstanceRenderElement[e]&&-1!=e?(this._renderElements||(this._renderElements=[]),this._renderElements=this._renderElements.concat(this._lodInstanceRenderElement[-1])):this._renderElements=this._lodInstanceRenderElement[-1])}onPreRender(){if(!this.checkLOD||!this._lodRateArray||this._lodRateArray.length<1)this._changeLOD(0);else{let e=this.owner.scene.cullInfoCamera,r=e.maxlocalYDistance;e.boundFrustum,t.Vector3.subtract(this._bounds.getCenter(),e.transform.position,wa);let a=wa.length();e.transform.worldMatrix.getForward(Ba),t.Vector3.normalize(wa,wa),t.Vector3.normalize(Ba,Ba);let n=a*Math.abs(t.Vector3.dot(wa,Ba))/e.farPlane*r,i=this._lodsize/n;for(let e=0;e<this._lodRateArray.length;e++)if(!(i<this._lodRateArray[e])){this._changeLOD(e);break}}}_batchOneRender(e){return!1}_removeOneRender(e){}_updateOneRender(e){}addList(e){for(var t=0,r=e.length;t<r;t++){let r=e[t];this._canBatch(r)&&this._batchList.add(r)}}reBatch(){let e=this._batchList.length,t=this._batchList.elements;for(var r=0;r<e;r++){let e=t[r];this._batchOneRender(e)}}_restorRenderNode(){for(let e=0,t=this._batchList.length;e<t;e++)this._removeOneRender(this._batchList.elements[e])}_clear(){this._restorRenderNode(),this._renderElements=[],this._batchList.destroy(),this._batchList=new t.SingletonList,this._lodInstanceRenderElement={},this._lodInstanceRenderElement[-1]=[]}}class Va extends Na{constructor(){super(),this._insBatchMarksNums=[],this._insElementMarksArray=[],this._instanceBatchminNums=10,this._updateChangeElement=[],this.checkLOD=!0,this._batchManager=new ba,this._RenderBitFlag=e.RenderBitFlag.RenderBitFlag_InstanceBatch}_isRenderNodeAllCanInstanceBatch(e){let t=e._renderElements;for(var r=0,a=t.length;r<a;r++){let e=t[r];if(!e.material._shader._enableInstancing||e.render.lightmapIndex>0)return!1}return!0}_sumInstanceBatch(e){let t=e._renderElements;for(var r=0,a=t.length;r<a;r++){let e=t[r];var n=this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1);-1==n.indexInList&&(n.indexInList=this._insBatchMarksNums.length,this._insBatchMarksNums.push(0)),this._insBatchMarksNums[n.indexInList]+=1}}_batchOneElement(e,t){var r=this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1);if(-1==r.indexInList)return;let a=this._insElementMarksArray[r.indexInList];a||(a=this._createInstanceElement(e,t,r));let n=a._instanceBatchElementList;n.length==Zr.maxInstanceCount&&(this._insBatchMarksNums.push(this._insBatchMarksNums[r.indexInList]),r.indexInList=this._insBatchMarksNums.length-1,a=this._createInstanceElement(e,t,r),n=a._instanceBatchElementList),-1==n.indexof(e)&&(n.add(e),a._isUpdataData=!0,-1==this._updateChangeElement.indexOf(a)&&this._updateChangeElement.push(a),e._batchElement=a)}_removeOneElement(e,t){if(-1==this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1).indexInList)return;let r=e._batchElement;if(!r||-1==this._renderElements.indexOf(r))return;let a=r._instanceBatchElementList;-1!=a.indexof(e)&&(a.remove(e),r._isUpdataData=!0,-1==this._updateChangeElement.indexOf(r)&&this._updateChangeElement.push(r),e._batchElement=null)}_updateOneElement(e,t){let r=e._batchElement;r&&-1!=this._renderElements.indexOf(r)&&-1!=r._instanceBatchElementList.indexof(e)&&(r._isUpdataData=!0,-1==this._updateChangeElement.indexOf(r)&&this._updateChangeElement.push(r))}_createInstanceElement(e,t,r){let a=new Zr;a.render=t,a.renderType=ze.RENDERTYPE_INSTANCEBATCH,a._geometry.subMesh=e._geometry,a.material=e.material,a.setTransform(null),a.renderSubShader=e.renderSubShader;let n=a._instanceBatchElementList;return n.length=0,n.add(e),this._insElementMarksArray[r.indexInList]=a,r.batched=!0,this._lodInstanceRenderElement[t._LOD]||(this._lodInstanceRenderElement[t._LOD]=[]),this._lodInstanceRenderElement[t._LOD].push(a),a}_canBatch(e){let t=e._renderElements;for(var r=0,a=t.length;r<a;r++){let e=t[r];var n=this._batchManager.getInstanceBatchOpaquaMark(e.render.receiveShadow,e.material.id,e._geometry._id,!!e.transform&&e.transform._isFrontFaceInvert,e.render._probReflection?e.render._probReflection.id:-1);if(this._insBatchMarksNums[n.indexInList]<this._instanceBatchminNums||e.material.renderQueue>=3e3)return!1}return!0}_calculateBoundingBox(){let e=this._bounds;for(let t=0,r=this._batchList.length;t<r;t++)0==t?this._batchList.elements[t].bounds.cloneTo(e):_e.merge(e,this._batchList.elements[t].bounds,e);let t=this._bounds.getExtent();return this._lodsize=2*Math.max(t.x,t.y,t.z),this._bounds}_onDestroy(){super._onDestroy()}_batchOneRender(t){if(!this._canBatch(t))return!1;this.boundsChange=!0;let r=t._renderElements;for(let e=0,a=r.length;e<a;e++){let a=r[e];this._batchOneElement(a,t)}return t._batchRender=this,t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_InstanceBatch,!0),!0}_removeOneRender(t){if(this._canBatch(t)&&-1!=this._batchList.indexof(t)){this.boundsChange=!0;let r=t._renderElements;for(let e=0,a=r.length;e<a;e++){let a=r[e];this._removeOneElement(a,t)}t._batchRender=null,t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_InstanceBatch,!1)}}_updateOneRender(e){if(this._canBatch(e)&&-1!=this._batchList.indexof(e)){this.boundsChange=!0;let t=e._renderElements;for(let r=0,a=t.length;r<a;r++){let a=t[r];this._updateOneElement(a,e)}}}_clear(){super._clear(),this._insElementMarksArray.forEach((e=>{e&&e.destroy()})),this._insElementMarksArray=[],this._updateChangeElement=[],this._insBatchMarksNums=[]}addList(e){this._batchList||(this._batchList=new t.SingletonList);let r=[];for(var a=0;a<e.length;a++){let t=e[a];t._batchRender||this._isRenderNodeAllCanInstanceBatch(t)&&(r.push(t),this._sumInstanceBatch(t))}a=0;for(var n=r.length;a<n;a++){let e=r[a];this._canBatch(e)&&this._batchList.add(e)}}reBatch(){let e=this._batchList.length,t=this._batchList.elements;for(var r=0;r<e;r++){let e=t[r];this._batchOneRender(e)}}}class Pa extends Na{_addList(e){}}class Fa extends Be{_getStaticInstanceBatchRender(){let e=this.owner.getComponent(Va);return e||(e=this.owner.addComponent(Va)),e}_getStatiVertexMergeBatchRender(){let e=this.owner.getComponent(Pa);return e||(e=this.owner.addComponent(Pa)),e}get checkLOD(){return this._checkLOD}set checkLOD(e){this._checkLOD=e,this._enableStaticInstanceBatch&&(this._instanceBatchRender.checkLOD=e),this._enableStaticVertexMergeBatch&&(this._vertexMergeBatchRender.checkLOD=e),this._enableCustomBatch&&this._customBatchs.forEach((t=>{t.checkLOD=e}))}get enableStaticInstanceBatchRender(){return this._enableStaticInstanceBatch}set enableStaticInstanceBatchRender(e){!this._instanceBatchRender&&e&&(this._instanceBatchRender=this._getStaticInstanceBatchRender()),e!=this._enableStaticInstanceBatch&&(this._instanceBatchRender.enabled=!!e,this._enableStaticInstanceBatch=e)}get enableMergeBatchRender(){return this._enableStaticVertexMergeBatch}set enableMergeBatchRender(e){!this._vertexMergeBatchRender&&e&&(this._vertexMergeBatchRender=this._getStatiVertexMergeBatchRender()),e!=this._enableStaticVertexMergeBatch&&(this._vertexMergeBatchRender.enabled=!!e,this._enableStaticVertexMergeBatch=e)}get enableCustomBatchRender(){return this._enableCustomBatch}set enableCustomBatchRender(e){this._enableCustomBatch=e,this._customBatchs.forEach((t=>{t.enabled=e}))}set customBatchRenders(e){this._customBatchs&&this._customBatchs.forEach((e=>{this.owner._destroyComponent(e)})),this._customBatchs=e,this._customBatchs.forEach((e=>{this.owner.addComponentInstance(e)})),this.enableCustomBatchRender=this._enableCustomBatch}get customBatchRenders(){return this._customBatchs}constructor(){super(),this._customBatchs=[],this.checkLOD=!0,this._enableStaticInstanceBatch=!1,this._enableStaticVertexMergeBatch=!1,this._cacheRender=new t.SingletonList,this._batchRender=new t.SingletonList,this._enableCustomBatch=!1}_restorRenderNode(){this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e._clear()})),this._enableStaticInstanceBatch&&this._instanceBatchRender._clear(),this.enableCustomBatchRender&&this._vertexMergeBatchRender._clear()}__addRenderNodeToBatch(e){this.enableCustomBatchRender&&this._customBatchs.forEach((t=>{t._batchOneRender(e)})),this._enableStaticInstanceBatch&&this._instanceBatchRender._batchOneRender(e)||!this.enableCustomBatchRender||this._vertexMergeBatchRender._batchOneRender(e)}__removeRenderNodeFromBatch(e){e._batchRender._removeOneRender(e)}_onEnable(){super._onEnable(),this._enableStaticInstanceBatch&&this._instanceBatchRender&&(this._instanceBatchRender.enabled=!0),this._enableStaticVertexMergeBatch&&this._vertexMergeBatchRender&&(this._vertexMergeBatchRender.enabled=!0),this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e.enabled=!0}))}_onDisable(){super._onDisable(),this._enableStaticInstanceBatch&&this._instanceBatchRender&&(this._instanceBatchRender.enabled=!1),this._enableStaticVertexMergeBatch&&this._vertexMergeBatchRender&&(this._vertexMergeBatchRender.enabled=!1),this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e.enabled=!1}))}_addRenderNode(t){if(t.renderNode.staticMask==e.StaticFlag.StaticBatch){if(-1!=this._cacheRender.indexof(t))return;this._cacheRender.add(t),this._batchRender.length>0&&this.__addRenderNodeToBatch(t)}}_removeRenderNode(t){t.renderNode.staticMask==e.StaticFlag.StaticBatch&&-1!=this._batchRender.indexof(t)&&(this.__removeRenderNodeFromBatch(t),this._batchRender.remove(t))}_VolumeChange(){super._VolumeChange(),this._cacheRender.clear()}onStart(){this.reBatch()}reBatch(){this._cacheRender.elements.length=this._cacheRender.length,this._batchRender.clear(),this._restorRenderNode(),this.enableCustomBatchRender&&this._customBatchs.forEach((e=>{e.addList(this._cacheRender.elements),e.reBatch()})),this._enableStaticInstanceBatch&&(this._instanceBatchRender.addList(this._cacheRender.elements),this._instanceBatchRender.reBatch()),this.enableCustomBatchRender&&(this._vertexMergeBatchRender.addList(this._cacheRender.elements),this._vertexMergeBatchRender.reBatch());for(var e=0,t=this._cacheRender.length;e<t;e++)this._cacheRender.elements[e]._batchRender&&this._batchRender.add(this._cacheRender.elements[e])}}var Ua;t.Loader.registerLoader(["lani"],class{load(e){return e.loader.fetch(e.url,"arraybuffer",e.progress.createCallback(),e.options).then((e=>e?Z._parse(e):null))}},t.Loader.ANIMATIONCLIP);t.Loader.registerLoader(["ltc","ltcb","ltcb.ls","cubemap"],class{constructor(){Ua||(Ua={"WhiteTextureCube.ltc":de.whiteTexture,"BlackTextureCube.ltc":de.blackTexture,"GrayTextureCube.ltc":de.grayTexture})}load(e){if(-1!=e.url.indexOf("internal/")){let r=Ua[t.Utils.getBaseName(e.url)];if(r)return Promise.resolve(r)}if("ktx"==e.ext||"cubemap"==e.ext){let r=e.url;return"cubemap"==e.ext&&(r=t.AssetDb.inst.getSubAssetURL(r,e.uuid,"0","ktx")),e.loader.fetch(r,"arraybuffer",e.progress.createCallback(),e.options).then((r=>{if(!r)return null;let a=t.KTXTextureInfo.getKTXTextureInfo(r);if(a.dimension!=t.TextureDimension.Cube)return console.warn("ktxInfo.dimension != TextureDimension.Cube! "+e.url),null;let n=new de(a.width,a.format,a.mipmapCount>1,a.sRGB);n.setKTXData(a);let i=e.obsoluteInst;return i&&i instanceof de&&(n=this.move(i,n)),n}))}return"ltcb"==e.ext||"ltcb.ls"==e.ext?e.loader.fetch(e.url,"arraybuffer",e.progress.createCallback(),e.options).then((r=>{if(!r)return null;let a=new t.Byte(r),n=a.readUTFString();if("LAYATEXTURECUBE:0000"!==n)return console.warn(`CubemapBinLoader: unknow version. ${n}`),null;let i=a.readUint8(),s=a.getUint8(),o=a.readUint16(),l=a.getUint8(),h=a.getUint8(),c=a.getUint8(),d=a.getUint8(),_=new de(o,i,s>1);_.setPixelsData(null,!1,!1),_.filterMode=l,_.wrapModeU=h,_.wrapModeV=c,_.anisoLevel=d;let u=a.pos,m=o;for(let e=0;e<s;e++){let t=new Array(6),a=m*m*_._getFormatByteCount();for(let e=0;e<6;e++)t[e]=new Uint8Array(r,u,a),u+=a;_.updateSubPixelsData(t,0,0,m,m,e,!1,!1,!1),m/=2}let f=e.obsoluteInst;return f&&f instanceof de&&(_=this.move(f,_)),_})):e.loader.fetch(e.url,"json",e.progress.createCallback(.2),e.options).then((r=>{if(!r)return null;let a=t.URL.getPath(e.url),n=[t.URL.join(a,r.front),t.URL.join(a,r.back),t.URL.join(a,r.left),t.URL.join(a,r.right),t.URL.join(a,r.up),t.URL.join(a,r.down)];return Promise.all(n.map((t=>t?e.loader.fetch(t,"image",e.progress.createCallback(),e.options):Promise.resolve(null)))).then((r=>{var a,n;let i=e.options.constructParams,s=i?i[0]:null!==(n=null===(a=r[0])||void 0===a?void 0:a.width)&&void 0!==n?n:1,o=i?i[1]:t.TextureFormat.R8G8B8A8,l=!!i&&i[3],h=!i||i[5],c=new de(s,o,l,h);c.setImageData(r,!1,!1);let d=e.obsoluteInst;return d&&d instanceof de&&(c=this.move(d,c)),c}))}))}move(e,r){return e._texture=r._texture,e.width=r.width,e.height=r.height,e.obsolute=!1,delete t.Resource._idResourcesMap[r.id],e}},t.Loader.TEXTURECUBE);class Ga{static parse(e){let r=e.props;switch(e.version){case"LAYAMATERIAL:01":case"LAYAMATERIAL:02":case"LAYAMATERIAL:03":let t=Ga.parseLegacy(e);return t.oldparseEndEvent(),t;case"LAYAMATERIAL:04":break;default:return console.error("Material:unkonwn version."),null}let a=new at;a.setShaderName(r.type);for(let e in r)switch(e){case"type":case"name":break;case"defines":let i=r[e];for(let e=0,r=i.length;e<r;e++){let r=t.Shader3D.getDefineByName(i[e]);a._shaderValues.addDefine(r)}break;case"textures":let s=r[e];for(let e=0,r=s.length;e<r;e++){let r=s[e],n=r.path;n&&a._shaderValues.setTexture(t.Shader3D.propertyNameToID(r.name),t.Loader.getBaseTexture(n))}break;case"renderQueue":a.renderQueue=r[e];break;case"alphaTest":a.alphaTest=r[e];break;case"materialRenderMode":a.materialRenderMode=r[e];break;default:let o=r[e],l=t.Shader3D.propertyNameToID(e);switch(l){case at.CULL:a.cull=o;break;case at.BLEND:a.blend=o;break;case at.BLEND_SRC:a.blendSrc=o;break;case at.BLEND_DST:a.blendDst=o;break;case at.DEPTH_TEST:a.depthTest=o;break;case at.DEPTH_WRITE:a.depthWrite=!!r[e];break;default:if(o.length){var n=o;switch(n.length){case 2:a._shaderValues.setVector2(l,new t.Vector2(n[0],n[1]));break;case 3:a._shaderValues.setVector3(l,new t.Vector3(n[0],n[1],n[2]));break;case 4:a._shaderValues.getColor(l)?a._shaderValues.setColor(l,new t.Color(n[0],n[1],n[2],n[3])):a._shaderValues.setVector(l,new t.Vector4(n[0],n[1],n[2],n[3]));break;default:a._shaderValues.setBuffer(l,n)}}else a._shaderValues.setNumber(l,r[e])}}return a}static collectLinks(e,r){let a=[],n=e.props.textures;if(n)for(let e=0,i=n.length;e<i;e++){let i=n[e],s=i.path;s&&(i.path=t.URL.join(r,s),a.push({url:i.path,type:t.Loader.TEXTURE2D,constructParams:i.constructParams,propertyParams:i.propertyParams}))}return a}static parseLegacy(e){let r,a=e,n=a.props,i=n.type,s=t.ClassUtils.getClass(i);switch(!s&&i&&i.startsWith("Laya.")&&(s=t.ClassUtils.getClass(i.substring(5))),s?r=new s:(r=new at,r.setShaderName(i)),a.version){case"LAYAMATERIAL:01":case"LAYAMATERIAL:02":for(let e in n)switch(e){case"type":break;case"vectors":let a=n[e];for(let e=0,n=a.length;e<n;e++){let n=a[e],i=n.value;switch(i.length){case 2:r[n.name]=new t.Vector2(i[0],i[1]);break;case 3:r[n.name]instanceof t.Color?r[n.name]=new t.Color(i[0],i[1],i[2],1):r[n.name]=new t.Vector3(i[0],i[1],i[2]);break;case 4:r[n.name]instanceof t.Color?r[n.name]=new t.Color(i[0],i[1],i[2],i[3]):r[n.name]=new t.Vector4(i[0],i[1],i[2],i[3]);break;default:throw new Error("Material:unkonwn color length.")}}break;case"colors":let i=n[e];for(let e=0,a=i.length;e<a;e++){let a=i[e],n=a.value;r[a.name]=new t.Color(n[0],n[1],n[2],n[3])}break;case"textures":let s=n[e];for(let e=0,a=s.length;e<a;e++){let a=s[e],n=a.path;n&&(r[a.name]=t.Loader.getBaseTexture(n))}break;case"defines":let o=n[e];for(let e=0,a=o.length;e<a;e++){let a=t.Shader3D.getDefineByName(o[e]);r._shaderValues.addDefine(a)}break;case"renderStates":let l=n[e][0];r.blend=l.blend,r.cull=this._getRenderStateParams(l.cull),r.depthTest=this._getRenderStateParams(l.depthTest),r.depthWrite=l.depthWrite,r.blendSrc=this._getRenderStateParams(l.srcBlend),r.blendDst=this._getRenderStateParams(l.dstBlend);break;case"cull":r.cull=this._getRenderStateParams(n[e]);break;case"blend":r.blend=this._getRenderStateParams(n[e]);break;case"depthWrite":r.depthWrite=!!n[e];break;case"srcBlend":case"blendSrc":r.blendSrc=this._getRenderStateParams(n[e]);break;case"dstBlend":case"blendDst":r.blendDst=this._getRenderStateParams(n[e]);break;case"depthTest":r.depthTest=this._getRenderStateParams(n[e]);break;default:r[e]=n[e]}break;case"LAYAMATERIAL:03":for(let e in n)switch(e){case"type":case"name":break;case"defines":let a=n[e];for(let e=0,n=a.length;e<n;e++){let n=t.Shader3D.getDefineByName(a[e]);r._shaderValues.addDefine(n)}break;case"textures":let i=n[e];for(let e=0,a=i.length;e<a;e++){let a=i[e],n=a.path;n&&r._shaderValues.setTexture(t.Shader3D.propertyNameToID(a.name),t.Loader.getBaseTexture(n))}break;case"renderQueue":r.renderQueue=n[e];break;default:let s=n[e],l=t.Shader3D.propertyNameToID(e);switch(l){case at.CULL:r.cull=this._getRenderStateParams(s);break;case at.BLEND:r.blend=this._getRenderStateParams(s);break;case at.BLEND_SRC:r.blendSrc=this._getRenderStateParams(s);break;case at.BLEND_DST:r.blendDst=this._getRenderStateParams(s);break;case at.DEPTH_TEST:r.depthTest=this._getRenderStateParams(s);break;case at.DEPTH_WRITE:r.depthWrite=!!n[e];break;default:if(s.length){var o=s;switch(o.length){case 2:r._shaderValues.setVector2(l,new t.Vector2(o[0],o[1]));break;case 3:r._shaderValues.setVector3(l,new t.Vector3(o[0],o[1],o[2]));break;case 4:r._shaderValues.getColor(l)?r._shaderValues.setColor(l,new t.Color(o[0],o[1],o[2],o[3])):r._shaderValues.setVector(l,new t.Vector4(o[0],o[1],o[2],o[3]));break;default:throw new Error("Material:unkonwn color length.")}}else r._shaderValues.setNumber(l,n[e])}}break;default:throw new Error("Material:unkonwn version.")}return r}static _getRenderStateParams(e){switch(e){case 768:return t.BlendFactor.SourceColor;case 769:return t.BlendFactor.OneMinusSourceColor;case 774:return t.BlendFactor.DestinationColor;case 775:return t.BlendFactor.OneMinusDestinationColor;case 770:return t.BlendFactor.SourceAlpha;case 771:return t.BlendFactor.OneMinusSourceAlpha;case 772:return t.BlendFactor.DestinationAlpha;case 773:return t.BlendFactor.OneMinusDestinationAlpha;case 776:return t.BlendFactor.SourceAlphaSaturate;case 32774:return t.BlendEquationSeparate.ADD;case 32778:return t.BlendEquationSeparate.SUBTRACT;case 32779:return t.BlendEquationSeparate.REVERSE_SUBTRACT;case 512:return t.CompareFunction.Never;case 513:return t.CompareFunction.Less;case 514:return t.CompareFunction.Equal;case 515:return t.CompareFunction.LessEqual;case 516:return t.CompareFunction.Greater;case 517:return t.CompareFunction.NotEqual;case 518:return t.CompareFunction.GreaterEqual;case 519:return t.CompareFunction.Always;default:return e}}}t.Loader.registerLoader(["lmat"],class{load(e){return e.loader.fetch(e.url,"json",e.progress.createCallback(.3),e.options).then((r=>{if(!r)return null;let a=t.URL.getPath(e.url),n=Ga.collectLinks(r,a);if("LAYAMATERIAL:04"===r.version){let i=r.props.type;if(!t.Shader3D.find(i)){let s=t.AssetDb.inst.shaderName_to_URL(i);if(s)n.push(s);else{let s=t.AssetDb.inst.shaderName_to_URL_async(i);if(s)return s.then((t=>(t&&n.push(t),this.load2(e,r,n))));r.props.shaderPath&&n.push(t.URL.join(a,r.props.shaderPath))}}}return this.load2(e,r,n)}))}load2(e,t,r){if(0==r.length){let r=Ga.parse(t),a=e.obsoluteInst;return a&&(r=this.move(a,r)),Promise.resolve(r)}return e.loader.load(r,e.options,e.progress.createCallback()).then((()=>{let r=Ga.parse(t),a=e.obsoluteInst;return e.obsoluteInst&&(r=this.move(a,r)),r}))}move(e,t){return e._shaderValues.reset(),e.setShaderName(t._shader.name),t._shaderValues.cloneTo(e._shaderValues),e.renderQueue=t.renderQueue,e.obsolute=!1,t.destroy(),e}},t.Loader.MATERIAL);class Ha{static parse(e,t,r,a){Ha._mesh=r,Ha._subMeshes=a,Ha._version=t,Ha._readData=e,Ha.READ_DATA(),Ha.READ_BLOCK(),Ha.READ_STRINGS();for(var n=0,i=Ha._BLOCK.count;n<i;n++){Ha._readData.pos=Ha._BLOCK.blockStarts[n];var s=Ha._readData.getUint16(),o=Ha._strings[s],l=Ha["READ_"+o];if(null==l)throw new Error("model file err,no this function:"+s+" "+o);l.call(null)}Ha._strings.length=0,Ha._readData=null,Ha._version=null,Ha._mesh=null,Ha._subMeshes=null}static _readString(){return Ha._strings[Ha._readData.getUint16()]}static READ_DATA(){Ha._DATA.offset=Ha._readData.getUint32(),Ha._DATA.size=Ha._readData.getUint32()}static READ_BLOCK(){for(var e=Ha._BLOCK.count=Ha._readData.getUint16(),t=Ha._BLOCK.blockStarts=[],r=Ha._BLOCK.blockLengths=[],a=0;a<e;a++)t.push(Ha._readData.getUint32()),r.push(Ha._readData.getUint32())}static READ_STRINGS(){var e=Ha._readData.getUint32(),t=Ha._readData.getUint16(),r=Ha._readData.pos;Ha._readData.pos=e+Ha._DATA.offset;for(var a=0;a<t;a++)Ha._strings[a]=Ha._readData.readUTFString();Ha._readData.pos=r}static READ_MESH(){Ha._readString();var e,r=Ha._readData.__getBuffer(),a=0,n=Ha._readData.getInt16(),i=Ha._DATA.offset;for(e=0;e<n;e++){var s,o=i+Ha._readData.getUint32(),l=Ha._readData.getUint32(),h=r.slice(o,o+l),c=new Float32Array(h),d=Ha._readString();switch(Ha._version){case"LAYAMODEL:0301":case"LAYAMODEL:0400":s=t.VertexMesh.getVertexDeclaration(d);break;case"LAYAMODEL:0401":s=t.VertexMesh.getVertexDeclaration(d,!1);break;default:throw new Error("LoadModelV03: unknown version.")}if(!s)throw new Error("LoadModelV03: unknown vertexDeclaration.");var _=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*c.length,t.BufferUsage.Static,!0);_.vertexDeclaration=s,_.setData(c.buffer),Ha._mesh._vertexBuffer=_,Ha._mesh._vertexCount+=_._byteLength/s.vertexStride,a+=4*c.length}var u=i+Ha._readData.getUint32(),m=Ha._readData.getUint32(),f=new Uint16Array(r.slice(u,u+m)),g=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,m/2,t.BufferUsage.Static,!0);g.setData(f),Ha._mesh._indexBuffer=g,a+=2*g.indexCount,Ha._mesh._setBuffer(Ha._mesh._vertexBuffer,g),Ha._mesh._setCPUMemory(a),Ha._mesh._setGPUMemory(a);var p=Ha._mesh._boneNames=[],S=Ha._readData.getUint16();for(p.length=S,e=0;e<S;e++)p[e]=Ha._strings[Ha._readData.getUint16()];Ha._readData.pos+=8;var T=Ha._readData.getUint32(),E=Ha._readData.getUint32(),A=new Float32Array(r.slice(i+T,i+T+E)),x=A.length,D=Ha._mesh._inverseBindPosesBuffer=new ArrayBuffer(4*x);for(Ha._mesh._inverseBindPoses=[],Ha._mesh._instanceBufferStateType=0!=x?ea.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:ea.MESH_INSTANCEBUFFER_TYPE_NORMAL,e=0;e<x;e+=16){var R=new t.Matrix4x4(A[e+0],A[e+1],A[e+2],A[e+3],A[e+4],A[e+5],A[e+6],A[e+7],A[e+8],A[e+9],A[e+10],A[e+11],A[e+12],A[e+13],A[e+14],A[e+15],new Float32Array(D,4*e,16));Ha._mesh._inverseBindPoses[e/16]=R}return!0}static READ_SUBMESH(){var e=Ha._readData.__getBuffer(),t=new Jr(Ha._mesh);Ha._readData.getInt16(),Ha._readData.getUint32(),Ha._readData.getUint32();var r=Ha._readData.getUint32(),a=Ha._readData.getUint32(),n=Ha._mesh._indexBuffer;t._indexBuffer=n,t._setIndexRange(r,a);var i=Ha._mesh._vertexBuffer;t._vertexBuffer=i;var s=Ha._DATA.offset,o=t._subIndexBufferStart,l=t._subIndexBufferCount,h=t._boneIndicesList,c=Ha._readData.getUint16();o.length=c,l.length=c,h.length=c;var d=Ha._mesh._skinnedMatrixCaches,_=Ha._subMeshes.length;d.length=Ha._mesh._inverseBindPoses.length;for(var u=0;u<c;u++){o[u]=Ha._readData.getUint32(),l[u]=Ha._readData.getUint32();for(var m=Ha._readData.getUint32(),f=Ha._readData.getUint32(),g=h[u]=new Uint16Array(e.slice(s+m,s+m+f)),p=g.length,S=0;S<p;S++){var T=g[S];d[T]||(d[T]=new $r(_,u,S))}}return Ha._subMeshes.push(t),!0}}Ha._BLOCK={count:0},Ha._DATA={offset:0,size:0},Ha._strings=[];class za{static parse(e,t,r,a){za._mesh=r,za._subMeshes=a,za._version=t,za._readData=e,za.READ_DATA(),za.READ_BLOCK(),za.READ_STRINGS();for(var n=0,i=za._BLOCK.count;n<i;n++){za._readData.pos=za._BLOCK.blockStarts[n];var s=za._readData.getUint16(),o=za._strings[s],l=za["READ_"+o];if(null==l)throw new Error("model file err,no this function:"+s+" "+o);l.call(null)}za._strings.length=0,za._readData=null,za._version=null,za._mesh=null,za._subMeshes=null}static _readString(){return za._strings[za._readData.getUint16()]}static READ_DATA(){za._DATA.offset=za._readData.getUint32(),za._DATA.size=za._readData.getUint32()}static READ_BLOCK(){for(var e=za._BLOCK.count=za._readData.getUint16(),t=za._BLOCK.blockStarts=[],r=za._BLOCK.blockLengths=[],a=0;a<e;a++)t.push(za._readData.getUint32()),r.push(za._readData.getUint32())}static READ_STRINGS(){var e=za._readData.getUint32(),t=za._readData.getUint16(),r=za._readData.pos;za._readData.pos=e+za._DATA.offset;for(var a=0;a<t;a++)za._strings[a]=za._readData.readUTFString();za._readData.pos=r}static READ_MESH(){var e,r=0;za._readString();var a=za._readData,n=a.__getBuffer(),i=a.getInt16(),s=za._DATA.offset;for(e=0;e<i;e++){var o,l,h,c=s+a.getUint32(),d=a.getUint32(),_=za._readString(),u=t.VertexMesh.getVertexDeclaration(_,!1),m=u.vertexStride,f=_.split(","),g=f.length,p=za._mesh;switch(za._version){case"LAYAMODEL:05":case"LAYAMODEL:0501":o=n.slice(c,c+d*m),l=new Float32Array(o),h=new Uint8Array(o);break;case"LAYAMODEL:COMPRESSION_05":case"LAYAMODEL:COMPRESSION_0501":o=new ArrayBuffer(m*d),l=new Float32Array(o),h=new Uint8Array(o);var S=a.pos;a.pos=c;for(var T=0;T<d;T++)for(var E,A=T*m,x=0;x<g;x++)switch(f[x]){case"POSITION":l[E=A/4]=t.HalfFloatUtils.convertToNumber(a.getUint16()),l[E+1]=t.HalfFloatUtils.convertToNumber(a.getUint16()),l[E+2]=t.HalfFloatUtils.convertToNumber(a.getUint16()),A+=12;break;case"NORMAL":l[E=A/4]=a.getUint8()/127.5-1,l[E+1]=a.getUint8()/127.5-1,l[E+2]=a.getUint8()/127.5-1,A+=12;break;case"COLOR":case"BLENDWEIGHT":l[E=A/4]=a.getUint8()/255,l[E+1]=a.getUint8()/255,l[E+2]=a.getUint8()/255,l[E+3]=a.getUint8()/255,A+=16;break;case"UV":case"UV1":l[E=A/4]=t.HalfFloatUtils.convertToNumber(a.getUint16()),l[E+1]=t.HalfFloatUtils.convertToNumber(a.getUint16()),A+=8;break;case"BLENDINDICES":h[A]=a.getUint8(),h[A+1]=a.getUint8(),h[A+2]=a.getUint8(),h[A+3]=a.getUint8(),A+=4;break;case"TANGENT":l[E=A/4]=a.getUint8()/127.5-1,l[E+1]=a.getUint8()/127.5-1,l[E+2]=a.getUint8()/127.5-1,l[E+3]=a.getUint8()/127.5-1,A+=16}a.pos=S}var D=t.LayaGL.renderOBJCreate.createVertexBuffer3D(o.byteLength,t.BufferUsage.Static,!0);D.vertexDeclaration=u,D.setData(o);d=D._byteLength/u.vertexStride;p._indexFormat=d>65535?t.IndexFormat.UInt32:t.IndexFormat.UInt16,p._vertexBuffer=D,p._vertexCount+=d,r+=4*l.length}var R,C=s+a.getUint32(),v=a.getUint32();R=p.indexFormat==t.IndexFormat.UInt32?new Uint32Array(n.slice(C,C+v)):new Uint16Array(n.slice(C,C+v));var y=t.LayaGL.renderOBJCreate.createIndexBuffer3D(p.indexFormat,R.length,t.BufferUsage.Static,!0);if(y.setData(R),p._indexBuffer=y,p._setBuffer(p._vertexBuffer,y),r+=2*y.indexCount,p._setCPUMemory(r),p._setGPUMemory(r),"LAYAMODEL:0501"==za._version||"LAYAMODEL:COMPRESSION_0501"==za._version){var I=p.bounds,M=I.getMin(),L=I.getMax();M.setValue(a.getFloat32(),a.getFloat32(),a.getFloat32()),L.setValue(a.getFloat32(),a.getFloat32(),a.getFloat32()),I.setMin(M),I.setMax(L),p.bounds=I}var O=p._boneNames=[],b=a.getUint16();for(O.length=b,e=0;e<b;e++)O[e]=za._strings[a.getUint16()];var w=a.getUint32(),B=a.getUint32(),N=new Float32Array(n.slice(s+w,s+w+B)),V=N.length,P=p._inverseBindPosesBuffer=new ArrayBuffer(4*V);for(p._inverseBindPoses=[],p._instanceBufferStateType=0!=V?ea.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:ea.MESH_INSTANCEBUFFER_TYPE_NORMAL,e=0;e<V;e+=16){var F=new t.Matrix4x4(N[e+0],N[e+1],N[e+2],N[e+3],N[e+4],N[e+5],N[e+6],N[e+7],N[e+8],N[e+9],N[e+10],N[e+11],N[e+12],N[e+13],N[e+14],N[e+15],new Float32Array(P,4*e,16));p._inverseBindPoses[e/16]=F}return!0}static READ_SUBMESH(){var e=za._readData,t=e.__getBuffer(),r=new Jr(za._mesh);e.getInt16();var a=e.getUint32(),n=e.getUint32(),i=za._mesh._indexBuffer;r._indexBuffer=i,r._setIndexRange(a,n);var s=za._mesh._vertexBuffer;r._vertexBuffer=s;var o=za._DATA.offset,l=r._subIndexBufferStart,h=r._subIndexBufferCount,c=r._boneIndicesList,d=e.getUint16();l.length=d,h.length=d,c.length=d;var _=za._mesh._skinnedMatrixCaches,u=za._subMeshes.length;_.length=za._mesh._inverseBindPoses.length;for(var m=0;m<d;m++){l[m]=e.getUint32(),h[m]=e.getUint32();for(var f=e.getUint32(),g=e.getUint32(),p=c[m]=new Uint16Array(t.slice(o+f,o+f+g)),S=0,T=p.length;S<T;S++){var E=p[S];_[E]||(_[E]=new $r(u,m,S))}}return za._subMeshes.push(r),!0}static READ_UVSIZE(){za._mesh._width=za._readData.readUint16(),za._mesh._height=za._readData.readUint16()}}za._BLOCK={count:0},za._DATA={offset:0,size:0},za._strings=[];class ka{static _parse(e){var t=new ea;return ka.read(e,t,t._subMeshes),t}static read(e,r,a){var n=new t.Byte(e);n.pos=0;var i=n.readUTFString();switch(i){case"LAYAMODEL:0301":case"LAYAMODEL:0400":case"LAYAMODEL:0401":Ha.parse(n,i,r,a);break;case"LAYAMODEL:05":case"LAYAMODEL:COMPRESSION_05":case"LAYAMODEL:0501":case"LAYAMODEL:COMPRESSION_0501":za.parse(n,i,r,a);break;default:throw new Error("MeshReader: unknown mesh version.")}r._setSubMeshes(a),"LAYAMODEL:0501"!=i&&"LAYAMODEL:COMPRESSION_0501"!=i&&r.calculateBounds()}}t.Loader.registerLoader(["lm"],class{load(e){return e.loader.fetch(e.url,"arraybuffer",e.progress.createCallback(),e.options).then((e=>e?ka._parse(e):null))}},t.Loader.MESH);class Wa{static _createSprite3DInstance(e,t,r){let a;switch(e.type){case"Scene3D":a=new Pt;break;case"Sprite3D":a=new J;break;case"MeshSprite3D":a=new ar,r&&e.props.isStatic&&r.push(a);break;case"SkinnedMeshSprite3D":a=new kr;break;case"SimpleSkinnedMeshSprite3D":a=new zr;break;case"ShuriKenParticle3D":a=new Pr;break;case"Camera":a=new Ft;break;case"DirectionLight":a=new kt;break;case"PointLight":a=new Yt;break;case"SpotLight":a=new jt;break;case"TrailSprite3D":a=new qr;break;case"ReflectionProbe":a=new J,a.addComponent(Ge);break;default:throw new Error("Utils3D:unidentified class type in (.lh) file.")}let n=e.child;if(n)for(let e=0,i=n.length;e<i;e++){let i=Wa._createSprite3DInstance(n[e],t,r);a.addChild(i)}return t[e.instanceID]=a,a}static _createComponentInstance(e,r,a){let n=r[e.instanceID];n._parse(e.props,r);let i=e.child;if(i)for(let e=0,t=i.length;e<t;e++)Wa._createComponentInstance(i[e],r,a);let s=e.components;if(s)for(let e=0,r=s.length;e<r;e++){let r=s[e],i=t.ClassUtils.getClass(r.type);if(i){n.addComponent(i)._parse(r,a)}else console.warn(`Unidentified component type: ${r.type}.`)}}static _createNodeByJson02(e,t){let r={},a={component:[],data:[]},n=Wa._createSprite3DInstance(e,r,t);return Wa._createComponentInstance(e,r,a),Wa._createInteractInstance(a,r),n}static _createInteractInstance(e,t){let r=e.component,a=e.data;for(let e=0,n=r.length;e<n;e++)r[e]._parseInteractive(a[e],t)}static parse(e){let t,r=e.data,a=[];switch(e.version){case"LAYAHIERARCHY:02":case"LAYASCENE3D:02":t=Wa._createNodeByJson02(r,a);break;default:t=Wa._createNodeByJson(r,a)}return t}static _createNodeByJson(e,r){let a;switch(e.type){case"Scene3D":a=new Pt;break;case"Sprite3D":a=new J;break;case"MeshSprite3D":a=new ar,r&&e.props.isStatic&&r.push(a);break;case"SkinnedMeshSprite3D":a=new kr;break;case"ShuriKenParticle3D":a=new Pr;break;case"Camera":a=new Ft;break;case"DirectionLight":a=new kt;break;case"PointLight":a=new Yt;break;case"SpotLight":a=new jt;break;case"TrailSprite3D":a=new qr;break;default:throw new Error(`Unidentified node type ${e.type}`)}let n=e.child;if(n)for(let e=0,t=n.length;e<t;e++){let t=Wa._createNodeByJson(n[e],r);a.addChild(t)}let i=e.components;if(i)for(let e=0,r=i.length;e<r;e++){let r=i[e],n=t.ClassUtils.getClass(r.type);if(n){a.addComponent(n)._parse(r)}else console.warn(`Unidentified component type: ${r.type}.`)}return a._parse(e.props,null),a}static collectResourceLinks(e,r){let a={},n=[];function addInnerUrl(e,i,s,o){let l=a[e];return void 0===l&&(l=t.URL.join(r,e),n.push({url:l,type:i,constructParams:s,propertyParams:o}),a[e]=l),l}return function check(e){let r=e.props;switch(e.type){case"Scene3D":let a=r.lightmaps;if(a)for(let e=0,r=a.length;e<r;e++){let r=a[e];if(r.path)r.path=addInnerUrl(r.path,t.Loader.TEXTURE2D,r.constructParams,r.propertyParams);else{let e=r.color;e.path=addInnerUrl(e.path,t.Loader.TEXTURE2D,e.constructParams,e.propertyParams);let a=r.direction;a&&(a.path=addInnerUrl(a.path,t.Loader.TEXTURE2D,a.constructParams,a.propertyParams))}}let n=r.reflectionTexture;n&&(r.reflection=addInnerUrl(n,t.Loader.TEXTURECUBE));let i=r.reflection;if(i&&(r.reflection=addInnerUrl(i,t.Loader.TEXTURECUBE)),r.sky){let e=r.sky.material;e&&(e.path=addInnerUrl(e.path,t.Loader.MATERIAL))}break;case"Camera":let s=r.skyboxMaterial;s&&(s.path=addInnerUrl(s.path,t.Loader.MATERIAL));break;case"TrailSprite3D":case"MeshSprite3D":case"SkinnedMeshSprite3D":case"SimpleSkinnedMeshSprite3D":let o=r.meshPath;o&&(r.meshPath=addInnerUrl(o,t.Loader.MESH));let l=r.materials;if(l)for(let e=0,r=l.length;e<r;e++)l[e].path=addInnerUrl(l[e].path,t.Loader.MATERIAL);"SimpleSkinnedMeshSprite3D"==e.type&&r.animatorTexture&&(r.animatorTexture=addInnerUrl(r.animatorTexture,t.Loader.TEXTURE2D));break;case"ShuriKenParticle3D":if(r.main){let e=r.renderer.resources,a=e.mesh,n=e.material;a&&(e.mesh=addInnerUrl(a,t.Loader.MESH)),n&&(e.material=addInnerUrl(n,t.Loader.MATERIAL))}else{let e=r.meshPath;e&&(r.meshPath=addInnerUrl(e,t.Loader.MESH)),r.material.path=addInnerUrl(r.material.path,t.Loader.MATERIAL)}break;case"Terrain":addInnerUrl(r.dataPath,t.Loader.TERRAINRES);break;case"ReflectionProbe":let h=r.reflection;h&&(r.reflection=addInnerUrl(h,t.Loader.TEXTURECUBE))}let a=e.components;if(a)for(let e=0,r=a.length;e<r;e++){let r=a[e];switch(r.type){case"Animator":let e=r.clipPaths;if(e)for(let r=0,a=e.length;r<a;r++)e[r]=addInnerUrl(e[r],t.Loader.ANIMATIONCLIP);else{let e=r.layers;for(let r=0;r<e.length;r++){let a=e[r].states;for(let e=0,r=a.length;e<r;e++){let r=a[e].clipPath;r&&(a[e].clipPath=addInnerUrl(r,t.Loader.ANIMATIONCLIP))}}}break;case"PhysicsCollider":case"Rigidbody3D":case"CharacterController":let a=r.shapes;for(let e=0;e<a.length;e++){let r=a[e];if("MeshColliderShape"===r.type){let e=r.mesh;e&&(r.mesh=addInnerUrl(e,t.Loader.MESH))}}}}let n=e.child;if(n)for(let e=0,t=n.length;e<t;e++)check(n[e])}(e.data),n}}t.HierarchyLoader.v2=Wa;t.Loader.registerLoader(["lavm"],class{load(e){return e.loader.fetch(e.url,"json",e.progress.createCallback(),e.options).then((e=>e?new fa(e):null))}});class Ya{static parse(e){return this.parseStart(e)}static findIndex(e,t,r,a){var n=e.indexOf(r,t+1);return 0>n&&(n=a),{str:e.substring(t+1,n),i:n}}static finCurrObj(){if(this.type=1,null==this.cobj)return null;if(0==this.currArr.length)return this.cobj.k&&(this.ret[this.cobj.k]=this.cobj.val),null;var e=this.currArr.pop();if(this.cobj.k)if(Array.isArray(e.val)){if(null!=this.cobj.k){var t={};t[this.cobj.k]=this.cobj.val,e.val.push(t)}}else e.val[this.cobj.k]=this.cobj.val;else Array.isArray(this.cobj.val)&&(Array.isArray(e.val)?e.val.push(this.cobj.val):e.val=this.cobj.val);return e}static formatVal(e){if(null==e)return null;var t=Number(e);return isNaN(t)?"false"!=e.toLowerCase()&&("true"==e.toLowerCase()||("null"==e?null:e)):t}static finCurrStr(){null!=this.currStr&&(this.currStr=this.currStr.trim(),""!=this.currStr&&(null!=this.cobj&&(Array.isArray(this.cobj.val)?this.cobj.val.push(this.formatVal(this.currStr)):(this.cobj.val=this.formatVal(this.currStr),this.cobj=this.finCurrObj())),this.currStr=""))}static parseStart(e){this.len=e.length;var t=0;for(this.ret={},this.currStr=null,this.currArr=[],this.cobj=null,this.type=0;t<this.len;){var r=e.charAt(t);if("/"==r){if(t+1<this.len){t+=1;var a=e.charAt(t),n=null;if("/"==a?n="\n":"*"==a&&(n="*/"),null!=n){this.finCurrStr();var i=e.indexOf(n,t);0>i?(console.log("没有找到注释结尾，应该是一直注释到最后了"),t=this.len):t=i+n.length-1}}}else if("}"==r)null!=this.cobj&&(this.finCurrStr(),null!=this.cobj&&(this.cobj=this.finCurrObj())),this.currStr="",this.type=1;else if("{"==r)this.currStr="",this.type=1;else if("'"==r||'"'==r||"‘"==r||"“"==r){"‘"==r?r="’":"“"==r&&(r="”");var s=this.findIndex(e,t,r,this.len);2==this.type&&null!=this.cobj&&Array.isArray(this.cobj.val)?(null!=this.currStr&&(this.currStr=this.currStr.trim(),""!=this.currStr&&this.cobj.val.push(this.formatVal(this.currStr))),this.cobj.val.push(s.str),this.currStr=""):null!=this.currStr&&(this.currStr+=s.str),t=s.i}else if(";"==r||","==r||"\n"==r)this.finCurrStr();else if("]"==r)null!=this.currStr&&null!=this.cobj&&Array.isArray(this.cobj.val)&&(this.currStr=this.currStr.trim(),""!=this.currStr&&this.cobj.val.push(this.formatVal(this.currStr))),null!=this.cobj&&(this.cobj=this.finCurrObj(),this.cobj=this.finCurrObj()),this.currStr="";else if("["==r)2!=this.type?console.warn("没有key值，忽略掉一个数组"):(null!=this.cobj&&this.currArr.push(this.cobj),this.cobj={val:[]});else if(":"==r){if(null!=this.currStr&&1==this.type){if(this.type=2,null!=this.cobj&&this.currArr.push(this.cobj),null!=this.cobj&&Array.isArray(this.cobj.val)){var o=this.cobj;this.cobj={val:{}},o.val.push(this.cobj.val),this.currArr.push(this.cobj)}this.cobj={k:this.currStr.trim(),val:{}},this.currStr=""}}else null!=this.currStr&&(this.currStr+=r);t++}return this.ret}}const Xa=["GLSL Start","GLSL End"],ja=["#defineGLSL","#endGLSL"],Qa=["Shader3D Start","Shader3D End"],Ka={Color:t.ShaderDataType.Color,Int:t.ShaderDataType.Int,Bool:t.ShaderDataType.Bool,Float:t.ShaderDataType.Float,Vector2:t.ShaderDataType.Vector2,Vector3:t.ShaderDataType.Vector3,Vector4:t.ShaderDataType.Vector4,Matrix4x4:t.ShaderDataType.Matrix4x4,Texture2D:t.ShaderDataType.Texture2D,TextureCube:t.ShaderDataType.TextureCube};class qa{static parse(e,r){let a=qa.getShaderBlock(e),n=qa.getCGBlock(e);return qa.bindCG(a,n),t.Shader3D.parse(a,r)}static compileToTree(e,t,r){if(r==e.length)return[t];let a=e[r],n=t.split(a);if(1==n.length)return n;let i=[];for(let t=0,s=n.length;t<s;t++)i=i.concat(qa.compileToTree(e,n[t],r+1)),t!=s-1&&i.push(a);return i}static getMapKey(e){let t=e.indexOf("\n");return e=(e=(e=e.slice(0,t).replace("\r","")).slice(0,t).replace(" ","")).trim()}static getShaderBlock(e){let t,r=e.substring(e.indexOf(Qa[0])+Qa[0].length,e.indexOf(Qa[1]));try{t=Ya.parse(r)}catch(e){console.error("Shader describe Data error")}return t}static getCGBlock(e){let t=e.substring(e.indexOf(Xa[0]),e.indexOf(Xa[1])),r=qa.compileToTree(ja,t,0),a={};for(let e=0,t=r.length;e<t;e++){if(r[e]==ja[0]){e+=1;let t=r[e];a[qa.getMapKey(t)]=t.slice(t.indexOf("\n"),t.length-1)}}return a}static bindCG(e,t){let r=e.shaderPass;r&&r.forEach((e=>{e.VS&&(e.VS=t[e.VS]),e.FS&&(e.FS=t[e.FS])}));let a=e.attributeMap;if(a){let e=0;for(let t in a)if(a[t]instanceof Array){let e=a[t];a[t]=[e[1],qa.getShaderDataType(e[0])]}else a[t]=[e,qa.getShaderDataType(a[t])],e++}let n=e.uniformMap;if(n){let t={};e.defaultValue=t;let r={};e.uniformMap=r;for(let e in n){let a=n[e];if(!1===a.serializable)continue;let i=qa.getShaderDataType(a.type);if(null!=a.default&&(t[e]=qa.getDefaultData(i,a.default)),a.block){let t=r[a.block];t||(r[a.block]=t={}),t[e]=i}else r[e]=i}}}static getShaderDataType(e){return Ka[e]}static getDefaultData(e,r){switch(e){case t.ShaderDataType.Int:case t.ShaderDataType.Float:case t.ShaderDataType.Bool:return r;case t.ShaderDataType.Vector2:return new t.Vector2(r[0],r[1]);case t.ShaderDataType.Vector3:return new t.Vector3(r[0],r[1],r[2]);case t.ShaderDataType.Vector4:return new t.Vector4(r[0],r[1],r[2],r[3]);case t.ShaderDataType.Color:return new t.Color(r[0],r[1],r[2],r[3]);case t.ShaderDataType.Matrix4x4:let e=new t.Matrix4x4;return e.cloneByArray(r),e;case t.ShaderDataType.Texture2D:let a=t.Texture2D.whiteTexture;return"write"==r?a=t.Texture2D.whiteTexture:"black"==r?a=t.Texture2D.blackTexture:"gray"==r?a=t.Texture2D.grayTexture:"normal"==r&&(a=t.Texture2D.normalTexture),a;case t.ShaderDataType.TextureCube:let n=de.grayTexture;return"write"==r?n=de.whiteTexture:"black"==r?n=de.blackTexture:"gray"==r&&(n=de.grayTexture),n}}}t.Loader.registerLoader(["shader","bps"],class{load(e){let r=e.url;return"bps"===e.ext&&(r=t.AssetDb.inst.getSubAssetURL(r,e.uuid,"0","shader")),e.loader.fetch(r,"text",e.progress.createCallback(),e.options).then((r=>{if(!r)return null;let a=qa.getShaderBlock(r),n=qa.getCGBlock(r);if(qa.bindCG(a,n),!a.name||!a.uniformMap)return null;let i=t.URL.getPath(e.url),s=a.shaderPass;return Promise.all(s.map((e=>t.ShaderCompile.compileAsync(e.VS,e.FS,i)))).then((e=>{if(-1!=e.findIndex((e=>null==e)))return console.warn("some pass null"),null;let r=t.Shader3D.add(a.name,a.enableInstancing,a.supportReflectionProbe),n=new t.SubShader(a.attributeMap?a.attributeMap:t.SubShader.DefaultAttributeMap,a.uniformMap,a.defaultValue);r.addSubShader(n);for(let t in s)n._addShaderPass(e[t],s[t].pipeline);return r}))}))}});t.Loader.registerLoader(["glsl","vs","fs"],class{load(e){let r=e.url;return e.loader.fetch(r,"text",e.progress.createCallback(),e.options).then((r=>r?t.ShaderCompile.addInclude(e.url,r,!0):null))}});class Za{load(e){return e.loader.fetch(e.url,"json",e.progress.createCallback(.2),e.options).then((r=>{let a="controller"==e.ext?new La(r):new t.AnimatorController2D(r);if(a&&a.data&&a.data.controllerLayers){let t=a.data.controllerLayers,r=[];for(let a=t.length-1;a>=0;a--){let n=t[a].states;this.loadStates(n,r,e)}return Promise.all(r).then((()=>a))}return a}))}loadStates(e,r,a){let n=t.URL.getPath(a.url);for(let i=e.length-1;i>=0;i--){if(e[i].clip&&e[i].clip._$uuid){let s=t.URL.getResURLByUUID(e[i].clip._$uuid);s.startsWith("res://")||(s=t.URL.join(n,s)),r.push(a.loader.load(s).then((t=>{e[i].clip=t})))}e[i].states&&this.loadStates(e[i].states,r,a)}}}t.Loader.registerLoader(["controller"],Za,"AnimationController"),t.Loader.registerLoader(["mcc"],Za,"AnimationController2D");let Ja=t.ClassUtils.regClass;Ja("Sprite3D",J),Ja("Scene3D",Pt),Ja("Camera",Ft),Ja("LightSprite",zt),Ja("DirectionLight",kt),Ja("PointLight",Yt),Ja("SpotLight",jt),Ja("AreaLightCom",ta),Ja("DirectionLightCom",Ht),Ja("PointLightCom",Wt),Ja("SpotLightCom",Xt),Ja("RenderableSprite3D",le),Ja("MeshSprite3D",ar),Ja("MeshFilter",st),Ja("BaseRender",He),Ja("MeshRenderer",ot),Ja("SimpleSkinnedMeshSprite3D",zr),Ja("SkinnedMeshSprite3D",kr),Ja("SkinnedMeshRenderer",Gr),Ja("SimpleSkinnedMeshRenderer",Hr),Ja("SkyRenderer",je),Ja("TrailSprite3D",qr),Ja("TrailFilter",Qr),Ja("TrailRenderer",Kr),Ja("PixelLineRenderer",ca),Ja("PixelLineData",sa),Ja("Gradient",Gt),Ja("Transform3D",c),Ja("Lightmap",St),Ja("ReflectionProbe",Ge),Ja("StaticBatchVolume",Fa),Ja("StaticInstanceBatchRender",Va),Ja("SphericalHarmonicsL2",Pe),Ja("Viewport",se),Ja("Bounds",_e),Ja("BoundBox",fr),Ja("TextureCube",de),Ja("Mesh",ea),Ja("FloatKeyframe",z),Ja("RenderTexture",t.RenderTexture),Ja("Animator",ga),Ja("AnimatorController",La),Ja("AnimatorControllerLayer",_a),Ja("AnimatorState",ma),Ja("AnimationClip",Z),Ja("AvatarMask",fa),Ja("Material",at),Ja("BlinnPhongMaterial",nt),Ja("EffectMaterial",Kt),Ja("ExtendTerrainMaterial",qt),Ja("PBRStandardMaterial",Jt),Ja("SkyBoxMaterial",$t),Ja("SkyPanoramicMaterial",er),Ja("SkyProceduralMaterial",tr),Ja("UnlitMaterial",Qt),Ja("WaterPrimaryMaterial",rr),Ja("ShurikenParticleMaterial",Nr),Ja("TrailMaterial",jr),Ja("ShuriKenParticle3D",Pr),Ja("ShurikenParticleRenderer",Vr),Ja("ShurikenParticleSystem",wr),Ja("Burst",nr),Ja("Emission",or),Ja("BaseShape",gr),Ja("BoxShape",Sr),Ja("CircleShape",Tr),Ja("ConeShape",Er),Ja("HemisphereShape",Ar),Ja("SphereShape",xr),Ja("FrameOverTime",lr),Ja("GradientAngularVelocity",hr),Ja("GradientColor",ir),Ja("GradientDataInt",cr),Ja("GradientDataNumber",dr),Ja("GradientSize",_r),Ja("GradientVelocity",ur),Ja("StartFrame",Rr),Ja("TextureSheetAnimation",Cr),Ja("ColorOverLifetime",sr),Ja("RotationOverLifetime",mr),Ja("SizeOverLifetime",Dr),Ja("VelocityOverLifetime",vr),Ja("LODInfo",na),Ja("LODGroup",ia),Ja("DirectionLight",kt),Ja("DirectionLightCom",Ht),Ja("MeshRenderer",ot),Ja("MeshFilter",st),Ja("MeshRenderer",ot),Ja("SkinnedMeshRenderer",Gr),Ja("SimpleSkinnedMeshRenderer",Hr),Ja("SkyRenderer",je),Ja("BoxColliderShape",_),Ja("CapsuleColliderShape",u),Ja("ConeColliderShape",f),Ja("CylinderColliderShape",g),Ja("SphereColliderShape",S),Ja("MeshColliderShape",p),Ja("CompoundColliderShape",m),Ja("PostProcess",xa),Ja("PostProcessEffect",Sa),Ja("BloomEffect",Ra),Ja("GaussianDoF",va),Ja("ScalableAO",Ia),Ja("ColorGradEffect",Aa);class $a extends ke{static __init__(){$a.instance=new $a}constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElementInstance),this.instanceWorldMatrixData=new Float32Array(16*$a.maxInstanceCount),this.instanceSimpleAnimatorData=new Float32Array(4*$a.maxInstanceCount),this.indexFormat=t.IndexFormat.UInt16,this.instanceWorldMatrixBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this.instanceWorldMatrixData.length,t.BufferUsage.Dynamic,!1),this.instanceWorldMatrixBuffer.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,this.instanceWorldMatrixBuffer.instanceBuffer=!0,this.instanceSimpleAnimatorBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this.instanceSimpleAnimatorData.length,t.BufferUsage.Dynamic,!1),this.instanceSimpleAnimatorBuffer.vertexDeclaration=t.VertexMesh.instanceSimpleAnimatorDeclaration,this.instanceSimpleAnimatorBuffer.instanceBuffer=!0}_updateRenderParams(e){var t=e.renderElement,r=t.instanceSubMesh,a=t.instanceBatchElementList.length,n=r._indexCount;this.clearRenderParams(),this.bufferState=r._mesh._instanceBufferState,this.instanceCount=a,this.setDrawElemenParams(n,2*r._indexStart)}}$a.maxInstanceCount=1024;class en{static __init__(){en._vertexDeclaration=new t.VertexDeclaration(40,[new t.VertexElement(0,t.VertexElementFormat.Vector3,en.TERRAIN_POSITION0),new t.VertexElement(12,t.VertexElementFormat.Vector3,en.TERRAIN_NORMAL0),new t.VertexElement(24,t.VertexElementFormat.Vector2,en.TERRAIN_TEXTURECOORDINATE0),new t.VertexElement(32,t.VertexElementFormat.Vector2,en.TERRAIN_TEXTURECOORDINATE1)])}static get vertexDeclaration(){return en._vertexDeclaration}get position(){return this._position}get normal(){return this._normal}get textureCoord0(){return this._textureCoord0}get textureCoord1(){return this._textureCoord1}get vertexDeclaration(){return en._vertexDeclaration}constructor(e,t,r,a){this._position=e,this._normal=t,this._textureCoord0=r,this._textureCoord1=a}}en.TERRAIN_POSITION0=0,en.TERRAIN_NORMAL0=1,en.TERRAIN_TEXTURECOORDINATE0=2,en.TERRAIN_TEXTURECOORDINATE1=3;class tn{constructor(e,t){this.drawLine=(e,t,r,a,n,i,s)=>{this.dbgLine&&(this.dbgLine.color(s),this.dbgLine.line(e,t,r,a,n,i))},this.clearLine=()=>{this.dbgLine&&this.dbgLine.clear()},this.jslog=(e,t)=>{if(!this.mem)return;let r=new TextDecoder,a=new Uint8Array(this.mem.buffer,e,t),n=r.decode(a);console.log(n)},this.mem=e,this.dbgLine=t}getWorldTransform(e,t){}setWorldTransform(e,t){var r=T._physicObjectsMap[e];r._simulation._updatedRigidbodies++,r._updateTransformComponent(t)}}class rn{static __init__(){}static _createMesh(e,r,a){var n=new ea,i=new Jr(n),s=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*r.length,t.BufferUsage.Static,!0);s.vertexDeclaration=e,s.setData(r.buffer),n._vertexBuffer=s,n._vertexCount=s._byteLength/e.vertexStride;var o=t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,a.length,t.BufferUsage.Static,!0);o.setData(a),n._indexBuffer=o,n._setBuffer(s,o),i._vertexBuffer=s,i._indexBuffer=o,i._setIndexRange(0,o.indexCount);var l=i._subIndexBufferStart,h=i._subIndexBufferCount,c=i._boneIndicesList;l.length=1,h.length=1,c.length=1,l[0]=0,h[0]=o.indexCount;var d=[];d.push(i),n._setSubMeshes(d),n.calculateBounds();var _=s._byteLength+o._byteLength;return n._setCPUMemory(_),n._setGPUMemory(_),n}static createBox(e=1,r=1,a=1){var n=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),i=e/2,s=r/2,o=a/2,l=new Float32Array([-i,s,-o,0,1,0,0,0,i,s,-o,0,1,0,1,0,i,s,o,0,1,0,1,1,-i,s,o,0,1,0,0,1,-i,-s,-o,0,-1,0,0,1,i,-s,-o,0,-1,0,1,1,i,-s,o,0,-1,0,1,0,-i,-s,o,0,-1,0,0,0,-i,s,-o,-1,0,0,0,0,-i,s,o,-1,0,0,1,0,-i,-s,o,-1,0,0,1,1,-i,-s,-o,-1,0,0,0,1,i,s,-o,1,0,0,1,0,i,s,o,1,0,0,0,0,i,-s,o,1,0,0,0,1,i,-s,-o,1,0,0,1,1,-i,s,o,0,0,1,0,0,i,s,o,0,0,1,1,0,i,-s,o,0,0,1,1,1,-i,-s,o,0,0,1,0,1,-i,s,-o,0,0,-1,1,0,i,s,-o,0,0,-1,0,0,i,-s,-o,0,0,-1,0,1,-i,-s,-o,0,0,-1,1,1]),h=new Uint16Array([0,1,2,2,3,0,4,7,6,6,5,4,8,9,10,10,11,8,12,15,14,14,13,12,16,17,18,18,19,16,20,23,22,22,21,20]);return rn._createMesh(n,l,h)}static createCapsule(e=.5,r=2,a=16,n=32){var i,s,o=(a+1)*(n+1)*2+2*(n+1),l=3*a*(n+1)*2*2+2*n*3,h=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),c=h.vertexStride/4,d=new Float32Array(o*c),_=new Uint16Array(l),u=Math.PI/2/a,m=2*Math.PI/n,f=r/2-e,g=0,p=0,S=0,T=0,E=0,A=0;for(i=0;i<=a;i++)for(s=0;s<=n;s++)g=e*Math.cos(i*u)*Math.cos(s*m+Math.PI),p=e*Math.sin(i*u),S=e*Math.cos(i*u)*Math.sin(s*m+Math.PI),d[T++]=g,d[T++]=p+f,d[T++]=S,d[T++]=g,d[T++]=p,d[T++]=S,d[T++]=1-s/n,d[T++]=(1-i/a)*(Math.PI*e/2/(r+Math.PI*e)),i<a&&(_[E++]=i*(n+1)+s+(n+1),_[E++]=i*(n+1)+s,_[E++]=i*(n+1)+s+1,_[E++]=i*(n+1)+s+n,_[E++]=i*(n+1)+s,_[E++]=i*(n+1)+s+(n+1));for(A+=(a+1)*(n+1),i=0;i<=a;i++)for(s=0;s<=n;s++)g=e*Math.cos(i*u)*Math.cos(s*m+Math.PI),p=e*Math.sin(-i*u),S=e*Math.cos(i*u)*Math.sin(s*m+Math.PI),d[T++]=g,d[T++]=p-f,d[T++]=S,d[T++]=g,d[T++]=p,d[T++]=S,d[T++]=1-s/n,d[T++]=(i/a*(Math.PI*e/2)+(r+Math.PI*e/2))/(r+Math.PI*e),i<a&&(_[E++]=A+i*(n+1)+s,_[E++]=A+i*(n+1)+s+(n+1),_[E++]=A+i*(n+1)+s+1,_[E++]=A+i*(n+1)+s,_[E++]=A+i*(n+1)+s+n,_[E++]=A+i*(n+1)+s+(n+1));for(A+=(a+1)*(n+1),s=0;s<=n;s++)g=e*Math.cos(s*m+Math.PI),p=f,S=e*Math.sin(s*m+Math.PI),d[T++]=g,d[T+8*(n+1)-1]=g,d[T++]=p,d[T+8*(n+1)-1]=-p,d[T++]=S,d[T+8*(n+1)-1]=S,d[T++]=g,d[T+8*(n+1)-1]=g,d[T++]=0,d[T+8*(n+1)-1]=0,d[T++]=S,d[T+8*(n+1)-1]=S,d[T++]=1-1*s/n,d[T+8*(n+1)-1]=1-1*s/n,d[T++]=Math.PI*e/2/(r+Math.PI*e),d[T+8*(n+1)-1]=(Math.PI*e/2+r)/(r+Math.PI*e);for(s=0;s<n;s++)_[E++]=s+A+(n+1),_[E++]=s+A+1,_[E++]=s+A,_[E++]=s+A+(n+1),_[E++]=s+A+(n+1)+1,_[E++]=s+A+1;return A+=2*(n+1),rn._createMesh(h,d,_)}static createCone(e=.5,r=1,a=32){for(var n,i=a+1+1+2*(a+1),s=6*a+3*a,o=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),l=o.vertexStride/4,h=new Float32Array(i*l),c=new Uint16Array(s),d=2*Math.PI/a,_=r/2,u=0,m=0,f=0,g=0,p=0,S=new t.Vector3,T=new t.Vector3(0,-1,0),E=new t.Vector3(0,_,0),A=new t.Vector3,x=new t.Vector3,D=new t.Quaternion,R=new t.Vector3,C=0,v=0,y=0;y<=a;y++)u=y*d,f=Math.cos(u+Math.PI)*e,g=_,p=Math.sin(u+Math.PI)*e,h[C++]=0,h[C+8*(a+1)-1]=f,h[C++]=g,h[C+8*(a+1)-1]=-g,h[C++]=0,h[C+8*(a+1)-1]=p,S.x=f,S.y=0,S.z=p,A.x=f,A.y=-g,A.z=p,t.Vector3.subtract(A,E,x),t.Vector3.normalize(x,x),n=Math.acos(t.Vector3.dot(T,x)),t.Vector3.cross(T,x,R),t.Vector3.normalize(R,R),t.Quaternion.createFromAxisAngle(R,n,D),t.Vector3.normalize(S,S),t.Vector3.transformQuat(S,D,S),t.Vector3.normalize(S,S),h[C++]=S.x,h[C+8*(a+1)-1]=S.x,h[C++]=S.y,h[C+8*(a+1)-1]=S.y,h[C++]=S.z,h[C+8*(a+1)-1]=S.z,h[C++]=1-1*y/a,h[C+8*(a+1)-1]=1-1*y/a,h[C++]=0,h[C+8*(a+1)-1]=1;C+=8*(a+1);for(var I=0;I<a;I++)c[v++]=I+m+(a+1),c[v++]=I+m+1,c[v++]=I+m,c[v++]=I+m+(a+1),c[v++]=I+m+(a+1)+1,c[v++]=I+m+1;m+=2*(a+1);for(var M=0;M<=a;M++)0===M&&(h[C++]=0,h[C++]=-_,h[C++]=0,h[C++]=0,h[C++]=-1,h[C++]=0,h[C++]=.5,h[C++]=.5),u=M*d,f=Math.cos(u+Math.PI)*e,g=-_,p=Math.sin(u+Math.PI)*e,h[C++]=f,h[C++]=g,h[C++]=p,h[C++]=0,h[C++]=-1,h[C++]=0,h[C++]=.5+.5*Math.cos(u),h[C++]=.5+.5*Math.sin(u);for(var L=0;L<a;L++)c[v++]=0+m,c[v++]=L+2+m,c[v++]=L+1+m;return m+=a+1+1,rn._createMesh(o,h,c)}static createCylinder(e=.5,r=2,a=32){for(var n=a+1+1+2*(a+1)+(a+1+1),i=3*a+6*a+3*a,s=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),o=s.vertexStride/4,l=new Float32Array(n*o),h=new Uint16Array(i),c=2*Math.PI/a,d=r/2,_=0,u=0,m=0,f=0,g=0,p=0,S=0,T=0;T<=a;T++)0===T&&(l[p++]=0,l[p++]=d,l[p++]=0,l[p++]=0,l[p++]=1,l[p++]=0,l[p++]=.5,l[p++]=.5),_=T*c,m=Math.cos(_)*e,f=d,g=Math.sin(_)*e,l[p++]=m,l[p++]=f,l[p++]=g,l[p++]=0,l[p++]=1,l[p++]=0,l[p++]=.5+.5*Math.cos(_),l[p++]=.5+.5*Math.sin(_);for(var E=0;E<a;E++)h[S++]=0,h[S++]=E+1,h[S++]=E+2;u+=a+1+1;for(var A=0;A<=a;A++)_=A*c,m=Math.cos(_+Math.PI)*e,f=d,g=Math.sin(_+Math.PI)*e,l[p++]=m,l[p+8*(a+1)-1]=m,l[p++]=f,l[p+8*(a+1)-1]=-f,l[p++]=g,l[p+8*(a+1)-1]=g,l[p++]=m,l[p+8*(a+1)-1]=m,l[p++]=0,l[p+8*(a+1)-1]=0,l[p++]=g,l[p+8*(a+1)-1]=g,l[p++]=1-1*A/a,l[p+8*(a+1)-1]=1-1*A/a,l[p++]=0,l[p+8*(a+1)-1]=1;p+=8*(a+1);for(var x=0;x<a;x++)h[S++]=x+u+(a+1),h[S++]=x+u+1,h[S++]=x+u,h[S++]=x+u+(a+1),h[S++]=x+u+(a+1)+1,h[S++]=x+u+1;u+=2*(a+1);for(var D=0;D<=a;D++)0===D&&(l[p++]=0,l[p++]=-d,l[p++]=0,l[p++]=0,l[p++]=-1,l[p++]=0,l[p++]=.5,l[p++]=.5),_=D*c,m=Math.cos(_+Math.PI)*e,f=-d,g=Math.sin(_+Math.PI)*e,l[p++]=m,l[p++]=f,l[p++]=g,l[p++]=0,l[p++]=-1,l[p++]=0,l[p++]=.5+.5*Math.cos(_),l[p++]=.5+.5*Math.sin(_);for(var R=0;R<a;R++)h[S++]=0+u,h[S++]=R+2+u,h[S++]=R+1+u;return u+=a+1+1,rn._createMesh(s,l,h)}static createPlane(e=10,r=10,a=10,n=10){for(var i=(a+1)*(n+1),s=new Uint16Array(a*n*2*3),o=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),l=o.vertexStride/4,h=new Float32Array(i*l),c=e/2,d=r/2,_=e/a,u=r/n,m=0,f=0;f<=n;f++)for(var g=0;g<=a;g++)h[m++]=g*_-c,h[m++]=0,h[m++]=f*u-d,h[m++]=0,h[m++]=1,h[m++]=0,h[m++]=1*g/a,h[m++]=1*f/n;var p=0;for(f=0;f<n;f++)for(g=0;g<a;g++)s[p++]=(f+1)*(a+1)+g,s[p++]=f*(a+1)+g,s[p++]=(f+1)*(a+1)+g+1,s[p++]=f*(a+1)+g,s[p++]=f*(a+1)+g+1,s[p++]=(f+1)*(a+1)+g+1;return rn._createMesh(o,h,s)}static createQuad(e=1,r=1){var a=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),n=e/2,i=r/2,s=new Float32Array([-n,i,0,0,0,1,0,0,n,i,0,0,0,1,1,0,-n,-i,0,0,0,1,0,1,n,-i,0,0,0,1,1,1]),o=new Uint16Array([0,1,2,3,2,1]);return rn._createMesh(a,s,o)}static createSphere(e=.5,r=32,a=32){var n=(r+1)*(a+1),i=3*r*(a+1)*2,s=new Uint16Array(i),o=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),l=o.vertexStride/4,h=new Float32Array(n*l),c=Math.PI/r,d=2*Math.PI/a,_=0;n=0,i=0;for(var u=0;u<r+1;u++)for(var m=Math.sin(u*c),f=Math.cos(u*c),g=0;g<a+1;g++){var p=m*Math.sin(g*d+1*Math.PI/2),S=m*Math.cos(g*d+1*Math.PI/2);h[n+0]=p*e,h[n+1]=f*e,h[n+2]=S*e,h[n+3]=p,h[n+4]=f,h[n+5]=S,h[n+6]=g/a,h[n+7]=u/r,n+=l,u!=r-1&&(s[i++]=_+(a+1),s[i++]=_,s[i++]=_+1,s[i++]=_+a,s[i++]=_,s[i++]=_+(a+1),_++)}return rn._createMesh(o,h,s)}}var an='#define SHADER_NAME BlitFS\n\n#include "Color.glsl";\n#include "FastApproximateAntiAliasing.glsl";\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n#ifdef FXAA\n    gl_FragColor = FXAAMain(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.zw);\n#else\n    gl_FragColor = texture2D(u_MainTex, v_Texcoord0);\n#endif\n\n#ifdef GAMMAOUT\n    gl_FragColor = linearToGamma(gl_FragColor);\n#endif\n    // gl_FragColor.rgb = FXAAMain(u_MainTex,v_Texcoord0,u_MainTex_TexelSize.zw);\n}\n';class nn{static init(){t.Shader3D.addInclude("FastApproximateAntiAliasing.glsl","#if !defined(FXAA_lib)\n    #define FXAA_lib\n#ifdef FXAA\n    #define EDGE_THRESHOLD_MIN 0.0312\n    #define EDGE_THRESHOLD_MAX 0.125\n    #define QUALITY(q)\t       ((q) < 5 ? 1.0 : ((q) > 5 ? ((q) < 10 ? 2.0 : ((q) < 11 ? 4.0 : 8.0)) : 1.5))\n    #define ITERATIONS\t       12\n    #define SUBPIXEL_QUALITY   0.75\n\nfloat rgb2luma(in vec3 rgb)\n{\n    return dot(rgb, vec3(0.299, 0.587, 0.114));\n}\n\nvec3 textureOffsetbyScreenSize(in sampler2D mainTex, in vec2 uv, in vec2 offset, in vec2 inverseScreenSize)\n{\n    vec2 sampleruv = uv + inverseScreenSize * offset; // u_texturesize表示每个像素的偏移量\n    return texture2D(mainTex, sampleruv).rgb;\n}\n\nvec4 FXAAMain(in sampler2D mainTex, in vec2 texuv, in vec2 inverseScreenSize)\n{\n\n    vec4 mainColor = texture2D(mainTex, texuv);\n    vec3 colorCenter = mainColor.rgb;\n    // Luma at the current fragment\n    float lumaCenter = rgb2luma(colorCenter);\n\n    // Luma at the four direct neighbours of the current fragment.\n    float lumaDown = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(0, -1), inverseScreenSize));\n    float lumaUp = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(0, 1), inverseScreenSize));\n    float lumaLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, 0), inverseScreenSize));\n    float lumaRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, 0), inverseScreenSize));\n\n    // Find the maximum and minimum luma around the current fragment.\n    float lumaMin = min(lumaCenter, min(min(lumaDown, lumaUp), min(lumaLeft, lumaRight)));\n    float lumaMax = max(lumaCenter, max(max(lumaDown, lumaUp), max(lumaLeft, lumaRight)));\n\n    // Compute the delta.\n    float lumaRange = lumaMax - lumaMin;\n\n    // If the luma variation is lower that a threshold (or if we are in a really dark area), we are not on an edge, don't perform any AA.\n    if (lumaRange < max(EDGE_THRESHOLD_MIN, lumaMax * EDGE_THRESHOLD_MAX))\n\t{\n\t    return mainColor;\n\t}\n\n    // Query the 4 remaining corners lumas.\n    float lumaDownLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, -1), inverseScreenSize));\n    float lumaUpRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, 1), inverseScreenSize));\n    float lumaUpLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, 1), inverseScreenSize));\n    float lumaDownRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, -1), inverseScreenSize));\n\n    // Combine the four edges lumas (using intermediary variables for future computations with the same values).\n    float lumaDownUp = lumaDown + lumaUp;\n    float lumaLeftRight = lumaLeft + lumaRight;\n\n    // Same for corners\n    float lumaLeftCorners = lumaDownLeft + lumaUpLeft;\n    float lumaDownCorners = lumaDownLeft + lumaDownRight;\n    float lumaRightCorners = lumaDownRight + lumaUpRight;\n    float lumaUpCorners = lumaUpRight + lumaUpLeft;\n\n    // Compute an estimation of the gradient along the horizontal and vertical axis.\n    float edgeHorizontal = abs(-2.0 * lumaLeft + lumaLeftCorners) + abs(-2.0 * lumaCenter + lumaDownUp) * 2.0 + abs(-2.0 * lumaRight + lumaRightCorners);\n    float edgeVertical = abs(-2.0 * lumaUp + lumaUpCorners) + abs(-2.0 * lumaCenter + lumaLeftRight) * 2.0 + abs(-2.0 * lumaDown + lumaDownCorners);\n\n    // Is the local edge horizontal or vertical ?\n    bool isHorizontal = (edgeHorizontal >= edgeVertical);\n\n    // Choose the step size (one pixel) accordingly.\n    float stepLength = isHorizontal ? inverseScreenSize.y : inverseScreenSize.x;\n\n    // Select the two neighboring texels lumas in the opposite direction to the local edge.\n    float luma1 = isHorizontal ? lumaDown : lumaLeft;\n    float luma2 = isHorizontal ? lumaUp : lumaRight;\n    // Compute gradients in this direction.\n    float gradient1 = luma1 - lumaCenter;\n    float gradient2 = luma2 - lumaCenter;\n\n    // Which direction is the steepest ?\n    bool is1Steepest = abs(gradient1) >= abs(gradient2);\n\n    // Gradient in the corresponding direction, normalized.\n    float gradientScaled = 0.25 * max(abs(gradient1), abs(gradient2));\n\n    // Average luma in the correct direction.\n    float lumaLocalAverage = 0.0;\n    if (is1Steepest)\n\t{\n\t    // Switch the direction\n\t    stepLength = -stepLength;\n\t    lumaLocalAverage = 0.5 * (luma1 + lumaCenter);\n\t}\n    else\n\t{\n\t    lumaLocalAverage = 0.5 * (luma2 + lumaCenter);\n\t}\n\n    // Shift UV in the correct direction by half a pixel.\n    vec2 currentUv = texuv;\n    if (isHorizontal)\n\t{\n\t    currentUv.y += stepLength * 0.5;\n\t}\n    else\n\t{\n\t    currentUv.x += stepLength * 0.5;\n\t}\n\n    // Compute offset (for each iteration step) in the right direction.\n    vec2 offset = isHorizontal ? vec2(inverseScreenSize.x, 0.0) : vec2(0.0, inverseScreenSize.y);\n    // Compute UVs to explore on each side of the edge, orthogonally. The QUALITY allows us to step faster.\n    vec2 uv1 = currentUv - offset * QUALITY(0);\n    vec2 uv2 = currentUv + offset * QUALITY(0);\n\n    // Read the lumas at both current extremities of the exploration segment, and compute the delta wrt to the local average luma.\n    float lumaEnd1 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv1, vec2(0.0, 0.0), inverseScreenSize));\n    float lumaEnd2 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv2, vec2(0.0, 0.0), inverseScreenSize));\n    lumaEnd1 -= lumaLocalAverage;\n    lumaEnd2 -= lumaLocalAverage;\n\n    // If the luma deltas at the current extremities is larger than the local gradient, we have reached the side of the edge.\n    bool reached1 = abs(lumaEnd1) >= gradientScaled;\n    bool reached2 = abs(lumaEnd2) >= gradientScaled;\n    bool reachedBoth = reached1 && reached2;\n\n    // If the side is not reached, we continue to explore in this direction.\n    if (!reached1)\n\t{\n\t    uv1 -= offset * QUALITY(1);\n\t}\n    if (!reached2)\n\t{\n\t    uv2 += offset * QUALITY(1);\n\t}\n\n    // If both sides have not been reached, continue to explore.\n    if (!reachedBoth)\n\t{\n\n\t    for (int i = 2; i < ITERATIONS; i++)\n\t\t{\n\t\t    // If needed, read luma in 1st direction, compute delta.\n\t\t    if (!reached1)\n\t\t\t{\n\t\t\t    lumaEnd1 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv1, vec2(0.0, 0.0), inverseScreenSize));\n\t\t\t    lumaEnd1 = lumaEnd1 - lumaLocalAverage;\n\t\t\t}\n\t\t    // If needed, read luma in opposite direction, compute delta.\n\t\t    if (!reached2)\n\t\t\t{\n\t\t\t    lumaEnd2 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv2, vec2(0.0, 0.0), inverseScreenSize));\n\t\t\t    lumaEnd2 = lumaEnd2 - lumaLocalAverage;\n\t\t\t}\n\t\t    // If the luma deltas at the current extremities is larger than the local gradient, we have reached the side of the edge.\n\t\t    reached1 = abs(lumaEnd1) >= gradientScaled;\n\t\t    reached2 = abs(lumaEnd2) >= gradientScaled;\n\t\t    reachedBoth = reached1 && reached2;\n\n\t\t    // If the side is not reached, we continue to explore in this direction, with a variable quality.\n\t\t    if (!reached1)\n\t\t\t{\n\t\t\t    uv1 -= offset * QUALITY(i);\n\t\t\t}\n\t\t    if (!reached2)\n\t\t\t{\n\t\t\t    uv2 += offset * QUALITY(i);\n\t\t\t}\n\n\t\t    // If both sides have been reached, stop the exploration.\n\t\t    if (reachedBoth)\n\t\t\t{\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\t}\n\n    // Compute the distances to each side edge of the edge (!).\n    float distance1 = isHorizontal ? (texuv.x - uv1.x) : (texuv.y - uv1.y);\n    float distance2 = isHorizontal ? (uv2.x - texuv.x) : (uv2.y - texuv.y);\n\n    // In which direction is the side of the edge closer ?\n    bool isDirection1 = distance1 < distance2;\n    float distanceFinal = min(distance1, distance2);\n\n    // Thickness of the edge.\n    float edgeThickness = (distance1 + distance2);\n\n    // Is the luma at center smaller than the local average ?\n    bool isLumaCenterSmaller = lumaCenter < lumaLocalAverage;\n\n    // If the luma at center is smaller than at its neighbour, the delta luma at each end should be positive (same variation).\n    bool correctVariation1 = (lumaEnd1 < 0.0) != isLumaCenterSmaller;\n    bool correctVariation2 = (lumaEnd2 < 0.0) != isLumaCenterSmaller;\n\n    // Only keep the result in the direction of the closer side of the edge.\n    bool correctVariation = isDirection1 ? correctVariation1 : correctVariation2;\n\n    // UV offset: read in the direction of the closest side of the edge.\n    float pixelOffset = -distanceFinal / edgeThickness + 0.5;\n\n    // If the luma variation is incorrect, do not offset.\n    float finalOffset = correctVariation ? pixelOffset : 0.0;\n\n    // Sub-pixel shifting\n    // Full weighted average of the luma over the 3x3 neighborhood.\n    float lumaAverage = (1.0 / 12.0) * (2.0 * (lumaDownUp + lumaLeftRight) + lumaLeftCorners + lumaRightCorners);\n    // Ratio of the delta between the global average and the center luma, over the luma range in the 3x3 neighborhood.\n    float subPixelOffset1 = clamp(abs(lumaAverage - lumaCenter) / lumaRange, 0.0, 1.0);\n    float subPixelOffset2 = (-2.0 * subPixelOffset1 + 3.0) * subPixelOffset1 * subPixelOffset1;\n    // Compute a sub-pixel offset based on this delta.\n    float subPixelOffsetFinal = subPixelOffset2 * subPixelOffset2 * SUBPIXEL_QUALITY;\n\n    // Pick the biggest of the two offsets.\n    finalOffset = max(finalOffset, subPixelOffsetFinal);\n\n    // Compute the final UV coordinates.\n    vec2 finalUv = texuv;\n    if (isHorizontal)\n\t{\n\t    finalUv.y += finalOffset * stepLength;\n\t}\n    else\n\t{\n\t    finalUv.x += finalOffset * stepLength;\n\t}\n\n    // Read the color at the new UV coordinates, and use it.\n    return texture2D(mainTex, finalUv);\n}\n#endif//FXAA\n#endif // Color_lib\n"),t.Shader3D.addInclude("ColorGrading.glsl","#if !defined(ColorGrading_lib)\n    #define ColorGrading_lib\n\nconst float ACEScc_MAX = 1.4679964;\nconst float ACEScc_MIDGRAY = 0.4135884;\n\nconst float LogC_cut = 0.011361;\nconst float LogC_a = 5.555556;\nconst float LogC_b = 0.047996;\nconst float LogC_c = 0.244161;\nconst float LogC_d = 0.386036;\nconst float LogC_e = 5.301883;\nconst float LogC_f = 0.092819;\n\nfloat linearToLogC(float x)\n{\n    float o;\n    if (x > LogC_cut)\n\t{\n\t    o = LogC_c * log10(max(LogC_a * x + LogC_b, 0.0)) + LogC_d;\n\t}\n    else\n\t{\n\t    o = LogC_e * x + LogC_f;\n\t}\n    return o;\n}\n\nvec3 linearToLogC(vec3 x)\n{\n    vec3 logc;\n    logc.x = linearToLogC(x.x);\n    logc.y = linearToLogC(x.y);\n    logc.z = linearToLogC(x.z);\n    return logc;\n}\n\nfloat logCToLinear(float x)\n{\n    float o;\n    if (x > LogC_e * LogC_cut + LogC_f)\n\to = (pow(10.0, (x - LogC_d) / LogC_c) - LogC_b) / LogC_a;\n    else\n\to = (x - LogC_f) / LogC_e;\n    return o;\n}\n\nvec3 logCToLinear(vec3 x)\n{\n    vec3 linear;\n    linear.x = logCToLinear(x.x);\n    linear.y = logCToLinear(x.y);\n    linear.z = logCToLinear(x.z);\n    return linear;\n}\n\n// Hue, Saturation, Value\n// Ranges:\n//  Hue [0.0, 1.0]\n//  Sat [0.0, 1.0]\n//  Lum [0.0, HALF_MAX]\nvec3 RgbToHsv(vec3 c)\n{\n    const vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    const float e = 1.0e-4;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 HsvToRgb(vec3 c)\n{\n    const vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(c.x) + K.xyz) * 6.0 - K.www);\n    return c.z * mix(vec3(K.x) , saturate(p - vec3(K.x)), c.y);\n}\n\nfloat RotateHue(float value, float low, float hi)\n{\n    return (value < low)\n            ? value + hi\n            : (value > hi)\n                ? value - hi\n                : value;\n}\n\n\nconst mat3 Linear_to_LMS_MAT = mat3(\n    vec3(3.90405e-1, 7.08416e-2, 2.31082e-2),\n    vec3(5.49941e-1, 9.63172e-1, 1.28021e-1),\n    vec3(8.92632e-3, 1.35775e-3, 9.36245e-1));\n\nconst mat3 LMS_to_Linear_MAT = mat3(\n    vec3(2.85847e+0, -2.10182e-1, -4.18120e-2),\n    vec3(-1.62879e+0, 1.15820e+0, -1.18169e-1),\n    vec3(-2.48910e-2, 3.24281e-4, 1.06867e+0));\n\n// white balance\nuniform vec3 u_ColorBalance;\n\n// split toning\nuniform vec4 u_SplitShadows;\nuniform vec3 u_Splithighlights;\n\n// shadows, midtones, highlights\nuniform vec3 u_Shadows;\nuniform vec3 u_Midtones;\nuniform vec3 u_Highlights;\nuniform vec4 u_Limits;\n\n// lift, gamma, gain\nuniform vec3 u_Lift;\nuniform vec3 u_Gamma;\nuniform vec3 u_Gain;\n\n//color adjusted\nuniform vec4 u_ColorFilter;\nuniform vec4 u_HueSatCon;\n\nfloat luminance(in vec3 color)\n{\n    #ifdef ACES\n    float luma = dot(color, AP1_RGB2Y);\n    #else\n    float luma = dot(color, vec3(0.2126729, 0.7151522, 0.0721750));\n    #endif // ACES\n    return luma;\n}\n\nvec3 softlight(vec3 base, vec3 blend)\n{\n    vec3 r1 = 2.0 * base * blend + base * base * (1.0 - 2.0 * blend);\n    vec3 r2 = sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend);\n    vec3 t = step(0.5, blend);\n    return r2 * t + (1.0 - t) * r1;\n}\n\n// input linear sRGB\n// if ACES tonemap, calculate in ACEScg, return ACEScg\n// else calculate in logC, return linear sRGB\nvec3 colorGrade(in vec3 color)\n{\n    // White balance in LMS space\n    vec3 colorLMS = Linear_to_LMS_MAT * color;\n    colorLMS *= u_ColorBalance.xyz;\n    color = LMS_to_Linear_MAT * colorLMS;\n\n    // Do contrast in log after white balance\n    #ifdef ACES\n        vec3 colorLog = ACES_to_ACEScc(sRGB_to_AP0_MAT * color);\n    #else\n        vec3 colorLog = linearToLogC(color);\n    #endif\n    \n    colorLog = (colorLog - vec3(ACEScc_MIDGRAY)) * u_HueSatCon.z + vec3(ACEScc_MIDGRAY);\n\n\n    #ifdef ACES\n        //colorLinear = ACES_to_ACEScg(ACEScc_to_ACES(colorLog));\n        color = AP0_to_AP1_MAT * ACEScc_to_ACES(colorLog);\n    #else\n        color = logCToLinear(colorLog);\n    #endif // ACES\n\n    // Color filter is just an unclipped multiplier\n    color = color * u_ColorFilter.rgb;\n\n    color = max(vec3(0.0), color);\n\n    // split toning\n    float balance = u_SplitShadows.w;\n    vec3 gamma = linearToGamma(color);\n    float splitLuma = saturate(luminance(color)) + balance;\n    vec3 splitShadows = mix(vec3(0.5, 0.5, 0.5), u_SplitShadows.xyz, 1.0 - splitLuma);\n    vec3 splitHeighlights = mix(vec3(0.5, 0.5, 0.5), u_Splithighlights.xyz, splitLuma);\n    gamma = softlight(gamma, splitShadows);\n    gamma = softlight(gamma, splitHeighlights);\n    color = gammaToLinear(gamma);\n\n    // shadows, midtones, highlights\n    float luma = luminance(color);\n    float shadowFactor = 1.0 - smoothstep(u_Limits.x, u_Limits.y, luma);\n    float highlightsFactor = smoothstep(u_Limits.z, u_Limits.w, luma);\n    float midtonesFactor = 1.0 - shadowFactor - highlightsFactor;\n    color = color * u_Shadows.xyz * shadowFactor + color * u_Midtones.xyz * midtonesFactor + color * u_Highlights.xyz * highlightsFactor;\n\n    // Lift, gamma, gain\n    color = color * u_Gain.xyz + u_Lift.xyz;\n    color = sign(color) * pow(abs(color), u_Gamma.xyz);\n    \n    // HSV operations\n    vec3 hsv = RgbToHsv(color);\n    // Hue Shift & Hue Vs Hue\n    float hue = hsv.x + u_HueSatCon.x;\n    hsv.x = RotateHue(hsv.x, 0.0, 1.0);\n    color = HsvToRgb(hsv);\n\n    // Global saturation\n    luma = luminance(color);\n    color = vec3(luma) + (vec3(u_HueSatCon.y)) * (color - vec3(luma));\n    \n    return color;\n}\n\n#endif // ColorGrading_lib"),t.Shader3D.addInclude("Tonemapping.glsl","#if !defined(Tonemapping_lib)\n    #define Tonemapping_lib\n\n// ACES Tonemapping color grading in ACEScg space\nvec3 tonemap(in vec3 ap1)\n{\n    vec3 color = ap1;\n\n    #ifdef ACES\n    vec3 aces = AP1_to_AP0_MAT * color;\n    vec3 oces = RRT(aces);\n    color = ODT_sRGB_100nits(oces);\n    #endif // ACES\n\n    // todo other tonemap\n\n    return color;\n}\n\n#endif // Tonemapping_lib"),t.Shader3D.addInclude("LUT.glsl","#if !defined(LUT_lib)\n    #define LUT_lib\n\n// scaleOffset = (1 / lut_width, 1 / lut_height, lut_height - 1)\nvec3 applyLut(sampler2D lut, vec3 uvw, vec3 scaleOffset)\n{\n    uvw.z *= scaleOffset.z;\n\n    float shift = floor(uvw.z);\n    uvw.xy = uvw.xy * scaleOffset.z * scaleOffset.xy + scaleOffset.xy * 0.5;\n    uvw.x += shift * scaleOffset.y;\n\n    uvw.xyz = mix(\n\ttexture2DLodEXT(lut, uvw.xy, 0.0).rgb,\n\ttexture2DLodEXT(lut, uvw.xy + vec2(scaleOffset.y, 0.0), 0.0).rgb,\n\tuvw.z - shift);\n    return uvw;\n}\n\n#endif // LUT_lib");let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4},a=t.Shader3D.add("BlitScreen"),n=new t.SubShader(e,r);a.addSubShader(n);let i=n.addShaderPass(Ea,an);i.statefirst=!0;let s=i.renderState;s.depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_DISABLE;let o=t.Shader3D.add("BlitScreen_Transparnet"),l=new t.SubShader(e,r);o.addSubShader(l);let h=l.addShaderPass(Ea,an);i.statefirst=!0,s=h.renderState,s.depthTest=t.RenderState.DEPTHTEST_ALWAYS,s.depthWrite=!1,s.cull=t.RenderState.CULL_NONE,s.blend=t.RenderState.BLEND_ENABLE_ALL,s.srcBlend=t.RenderState.BLENDPARAM_SRC_ALPHA,s.dstBlend=t.RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA,this.lutBuilderInit()}static lutBuilderInit(){let e={a_PositionTexcoord:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_OffsetScale:t.ShaderDataType.Vector4,u_MainTex:t.ShaderDataType.Texture2D,u_MainTex_TexelSize:t.ShaderDataType.Vector4,u_LutParams:t.ShaderDataType.Vector4},a=t.Shader3D.add("LUTBuilder"),n=new t.SubShader(e,r);a.addSubShader(n);let i=n.addShaderPass(Ea,'#define SHADER_NAME LutBuilder\n\n#include "Color.glsl";\n\n#ifdef ACES\n    #include "ACES.glsl";\n#endif // ACES\n\n#include "ColorGrading.glsl";\n\n#include "Tonemapping.glsl";\n\nvarying vec2 v_Texcoord0;\n\n// lut params: (lutHeight, 0.5 / lutWidth, 0.5 / lutHeight, lutHeidht / (lutHeight - 1))\nvec3 lutValue(vec2 uv, vec4 params)\n{\n    vec3 color;\n    uv -= params.yz;\n    color.r = fract(uv.x * params.x);\n    color.b = uv.x - color.r / params.x;\n    color.g = uv.y;\n    return color * params.w;\n}\n\n// internal lut logC space\nvoid main()\n{\n    vec2 uv = v_Texcoord0;\n    vec3 color = lutValue(uv, u_LutParams);\n    color = logCToLinear(color);\n    vec3 grade = colorGrade(color);\n    vec3 tone = tonemap(grade);\n\n    gl_FragColor = vec4(tone, 1.0);\n}');i.renderState.depthTest=t.RenderState.DEPTHTEST_ALWAYS,i.renderState.depthWrite=!1,i.renderState.cull=t.RenderState.CULL_NONE,i.renderState.blend=t.RenderState.BLEND_DISABLE,i.statefirst=!0}}var sn='#define SHADER_NAME DepthVS\n\n#include "DepthVertex.glsl";\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    mat4 worldMat = getWorldMatrix();\n    vec3 positionWS = (worldMat * vec4(vertex.positionOS, 1.0)).xyz;\n\n    vec3 normalWS = normalize((worldMat * vec4(vertex.normalOS, 0.0)).xyz);\n\n    vec4 positionCS = DepthPositionCS(positionWS, normalWS);\n    gl_Position = remapPositionZ(positionCS);\n}',on='#define SHADER_NAME DepthFS\n\n#include "DepthFrag.glsl";\n\nvoid main()\n{\n    gl_FragColor = getDepthColor();\n}';class ln{static init(){let e={UnlitBlock:{u_AlbedoColor:t.ShaderDataType.Color,u_TilingOffset:t.ShaderDataType.Vector4},u_AlbedoTexture:t.ShaderDataType.Texture2D,u_AlphaTestValue:t.ShaderDataType.Float},r={u_AlbedoColor:t.Color.WHITE,u_TilingOffset:new t.Vector4(1,1,0,0),u_AlphaTestValue:.5},a=t.Shader3D.add("Unlit",!0,!1),n=new t.SubShader(t.SubShader.DefaultAttributeMap,e,r);a.addSubShader(n),n.addShaderPass('\n#define SHADER_NAME UnlitVS\n\n#include "Camera.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n#include "Color.glsl";\n\nvarying vec4 v_Color;\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\t\n#if defined(UV)\n    v_Texcoord0 = transformUV(vertex.texCoord0, u_TilingOffset);\n#else\n\tv_Texcoord0 = vec2(0);\n#endif // UV\n\n#if defined(COLOR) && defined(ENABLEVERTEXCOLOR)\n    v_Color = gammaToLinear(vertex.vertexColor);\n#endif // COLOR && ENABLEVERTEXCOLOR\n\n    mat4 worldMat = getWorldMatrix();\n\n    vec3 positionWS = (worldMat * vec4(vertex.positionOS, 1.0)).xyz;\n\n    gl_Position = getPositionCS(positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n}','\n#define SHADER_NAME UNLITFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n\nvarying vec4 v_Color;\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    vec2 uv = v_Texcoord0;\n\n    vec3 color = u_AlbedoColor.rgb;\n    float alpha = u_AlbedoColor.a;\n#ifdef ALBEDOTEXTURE\n    vec4 albedoSampler = texture2D(u_AlbedoTexture, uv);\n\n    #ifdef Gamma_u_AlbedoTexture\n    albedoSampler = gammaToLinear(albedoSampler);\n    #endif // Gamma_u_AlbedoTexture\n\n    color *= albedoSampler.rgb;\n    alpha *= albedoSampler.a;\n#endif // ALBEDOTEXTURE\n\n#if defined(COLOR) && defined(ENABLEVERTEXCOLOR)\n    vec4 vertexColor = v_Color;\n    color *= vertexColor.rgb;\n    alpha *= vertexColor.a;\n#endif\n\n#ifdef ALPHATEST\n    if (alpha < u_AlphaTestValue)\n\tdiscard;\n#endif // ALPHATEST\n\n#ifdef FOG\n    color = scenUnlitFog(color);\n#endif // FOG\n\n    gl_FragColor = vec4(color, alpha);\n}'),n.addShaderPass(sn,on,"ShadowCaster")}}var hn='#define SHADER_NAME DepthNormalVS\n\n#include "Scene.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n#include "Camera.glsl";\n\n\n\n// uniform mat4 u_View;\n// uniform mat4 u_ViewProjection;\n// uniform vec4 u_ProjectionParams;\n\n//传入法线\nvarying vec4 v_depthNormals;\n\n\nvec4 depthNormalsVertex()\n{\n\t Vertex vertex;\n    getVertexParams(vertex);\n\n    mat4 worldMat = getWorldMatrix();\n    vec3 positionWS = (worldMat * vec4(vertex.positionOS, 1.0)).xyz;\n\n    vec3 normalWS = normalize((worldMat * vec4(vertex.normalOS, 0.0)).xyz);\n\t\n\t//存储View空间法线\n\tvec3 normalVS = mat3(u_View) * normalWS;\n\tv_depthNormals.xyz = normalVS;\n\t\n\tvec4 positionCS = u_ViewProjection * vec4(positionWS,1.0);\n\tv_depthNormals.w = (positionCS.z * 2.0 - positionCS.w)*u_ProjectionParams.w;\n\t\n    return positionCS;\n}\n\nvoid main()\n{\n\tvec4 positionCS =  depthNormalsVertex();\n\tgl_Position=remapPositionZ(positionCS);\n}',cn='#define SHADER_NAME DepthNormalFS\n\n\n#include "DepthNormalUtil.glsl";\n\nvarying vec4 v_depthNormals;\n\nvoid main()\n{\n\tgl_FragColor=depthNormalsFragment(v_depthNormals);\n}';class dn{static init(){t.Shader3D.addInclude("BlinnPhongCommon.glsl","#if !defined(BlinnPhongCommon_lib)\n    #define BlinnPhongCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\nvarying vec3 v_NormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef NEEDTBN\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n    #endif // NEEDTBN\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n    vec3 positionWS;\n    vec3 normalWS;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef NEEDTBN\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    #endif // NEEDTBN\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n\n    vec3 viewDir;\n};\n\n#endif // BlinnPhongCommon_lib"),t.Shader3D.addInclude("BlinnPhongVertex.glsl",'#if !defined(BlinnPhongVertex_lib)\n    #define BlinnPhongVertex_lib\n\n    #include "BlinnPhongCommon.glsl";\n\nvoid initPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    mat4 worldMat = getWorldMatrix();\n    params.positionWS = (worldMat * vec4(vertex.positionOS, 1.0)).xyz;\n    v_PositionWS = params.positionWS;\n\n    params.normalWS = normalize((worldMat * vec4(vertex.normalOS, 0.0)).xyz);\n    v_NormalWS = params.normalWS;\n\n    #ifdef TANGENT\n\t#ifdef NEEDTBN\n    params.tangentWS = normalize((worldMat * vec4(vertex.tangentOS.xyz, 0.0)).xyz);\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS) * sign(vertex.tangentOS.w));\n    v_TangentWS = params.tangentWS;\n    v_BiNormalWS = params.biNormalWS;\n\t#endif // NEEDTBN\n    #endif // TANGENT\n\n    #ifdef UV\n    params.uv0 = transformUV(vertex.texCoord0, u_TilingOffset);\n    v_Texcoord0 = params.uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = tranformLightMapUV(vertex.texCoord1, u_LightmapScaleOffset);\n    v_Texcoord1 = params.uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = a_Color;\n    v_VertexColor = params.vertexColor;\n    #endif // COLOR\n}\n\n#endif // BlinnPhongVertex_lib'),t.Shader3D.addInclude("BlinnPhongFrag.glsl",'#if !defined(BlinnPhongFrag_lib)\n    #define BlinnPhongFrag_lib\n\n    #include "BlinnPhongLighting.glsl";\n\n    #include "BlinnPhongCommon.glsl";\n\nvoid getPixelParams(inout PixelParams params)\n{\n    params.positionWS = v_PositionWS;\n    params.normalWS = normalize(v_NormalWS);\n\n    #ifdef UV\n    params.uv0 = v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = v_VertexColor;\n    #endif // COLOR\n\n    params.viewDir = normalize(u_CameraPos - params.positionWS);\n\n    #ifdef TANGENT\n\t#ifdef NEEDTBN\n    params.tangentWS = normalize(v_TangentWS);\n    params.biNormalWS = normalize(v_BiNormalWS);\n    mat3 TBN = mat3(params.tangentWS, params.biNormalWS, params.normalWS);\n\n\t    #ifdef NORMALMAP\n    vec3 normalSampler = texture2D(u_NormalTexture, params.uv0).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    params.normalWS = normalize(TBN * normalSampler);\n\t    #endif // NORMALMAP\n\n\t#endif // NEEDTBN\n    #endif TANGENT\n}\n\nvoid getPixelInfo(inout PixelInfo info, const in PixelParams pixel)\n{\n    info.positionWS = pixel.positionWS;\n    info.normalWS = pixel.normalWS;\n    info.viewDir = pixel.viewDir;\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    info.lightmapUV = pixel.uv1;\n\t#endif // UV1\n    #endif // LIGHTMAP\n}\n\nvec3 BlinnPhongLighting(const in Surface surface, const in PixelParams pixel)\n{\n    vec3 positionWS = pixel.positionWS;\n    vec3 v = pixel.viewDir;\n    vec3 normalWS = pixel.normalWS;\n\n    PixelInfo info;\n    getPixelInfo(info, pixel);\n\n    vec3 lightColor = vec3(0.0, 0.0, 0.0);\n\n    #ifdef DIRECTIONLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= DirectionCount)\n\t\tbreak;\n\t    DirectionLight directionLight = getDirectionLight(i, positionWS);\n\t    if (directionLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(directionLight);\n\t    lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n\t}\n    #endif // DIRECTIONLIGHT\n\n    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\n    ivec4 clusterInfo = getClusterInfo(u_View, u_Viewport, positionWS, gl_FragCoord, u_ProjectionParams);\n    #endif // POINTLIGHT || SPOTLIGHT\n\n    #ifdef POINTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.x)\n\t\tbreak;\n\t    PointLight pointLight = getPointLight(i, clusterInfo, positionWS);\n\t    if (pointLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(pointLight, normalWS, positionWS);\n\t    lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n\t}\n    #endif // POINTLIGHT\n\n    #ifdef SPOTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.y)\n\t\tbreak;\n\t    SpotLight spotLight = getSpotLight(i, clusterInfo, positionWS);\n\t    if (spotLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(spotLight, normalWS, positionWS);\n\t    lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n\t}\n    #endif // SPOTLIGHT\n\n    vec3 giColor = BlinnPhongGI(surface, info);\n\n    return lightColor + giColor;\n}\n\n#endif // BlinnPhongFrag_lib');let e={u_DiffuseTexture:t.ShaderDataType.Texture2D,u_NormalTexture:t.ShaderDataType.Texture2D,u_SpecularTexture:t.ShaderDataType.Texture2D,u_DiffuseColor:t.ShaderDataType.Color,u_MaterialSpecular:t.ShaderDataType.Color,u_Shininess:t.ShaderDataType.Float,u_TilingOffset:t.ShaderDataType.Vector4,u_AlbedoIntensity:t.ShaderDataType.Float,u_AlphaTestValue:t.ShaderDataType.Float},r={u_AlbedoIntensity:1,u_DiffuseColor:t.Color.WHITE,u_MaterialSpecular:t.Color.WHITE,u_Shininess:.078125,u_AlphaTestValue:.5,u_TilingOffset:new t.Vector4(1,1,0,0)},a=t.Shader3D.add("BLINNPHONG",!0,!0),n=new t.SubShader(t.SubShader.DefaultAttributeMap,e,r);a.addSubShader(n),n.addShaderPass('#define SHADER_NAME BlinnPhongVS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "Camera.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#include "BlinnPhongVertex.glsl";\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    gl_Position = getPositionCS(pixel.positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n}\n','#define SHADER_NAME BlinnPhongFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#include "SceneFog.glsl";\n\n#include "BlinnPhongFrag.glsl";\n\nvoid getBinnPhongSurfaceParams(inout Surface surface, in PixelParams pixel)\n{\n    surface.diffuseColor = u_DiffuseColor.rgb;\n    surface.alpha = u_DiffuseColor.a;\n\n#if defined(COLOR) && defined(ENABLEVERTEXCOLOR)\n    surface.diffuseColor *= pixel.vertexColor.xyz;\n    surface.alpha *= pixel.vertexColor.a;\n#endif // COLOR && ENABLEVERTEXCOLOR\n\n#ifdef UV\n    vec2 uv = pixel.uv0;\n#else // UV\n    vec2 uv = vec2(0.0);\n#endif // UV\n\n#ifdef DIFFUSEMAP\n    vec4 diffuseSampler = texture2D(u_DiffuseTexture, uv);\n    #ifdef Gamma_u_DiffuseTexture\n    diffuseSampler = gammaToLinear(diffuseSampler);\n    #endif // Gamma_u_DiffuseTexture\n    surface.diffuseColor *= u_DiffuseColor.rgb * diffuseSampler.rgb * u_AlbedoIntensity;\n    surface.alpha *= diffuseSampler.a;\n#endif // DIFFUSEMAP\n\n    surface.diffuseColor *= u_AlbedoIntensity;\n\n#ifdef ALPHATEST\n    if (surface.alpha < u_AlphaTestValue)\n\t{\n\t    discard;\n\t}\n#endif // ALPHATEST\n\n#ifdef SPECULARMAP\n    vec4 specularSampler = texture2D(u_SpecularTexture, uv);\n    #ifdef Gamma_u_SpecularTexture\n    specularSampler = gammaToLinear(specularSampler);\n    #endif // Gamma_u_SpecularTexture\n    surface.gloss = specularSampler.rgb;\n#else // SPECULARMAP\n    #ifdef DIFFUSEMAP\n    surface.gloss = vec3(diffuseSampler.a);\n    #else // DIFFUSEMAP\n    surface.gloss = vec3(1.0, 1.0, 1.0);\n    #endif // DIFFUSEMAP\n#endif // SPECULARMAP\n    surface.specularColor = u_MaterialSpecular.rgb;\n    surface.shininess = u_Shininess;\n}\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    Surface surface;\n    getBinnPhongSurfaceParams(surface, pixel);\n\n    vec3 surfaceColor = vec3(0.0);\n\n    surfaceColor = BlinnPhongLighting(surface, pixel);\n\n#ifdef FOG\n    surfaceColor = sceneLitFog(surfaceColor);\n#endif // FOG\n\n    gl_FragColor = vec4(surfaceColor, surface.alpha);\n}\n'),n.addShaderPass(sn,on,"ShadowCaster"),n.addShaderPass(hn,cn,"DepthNormal")}}class _n{static init(){let e={a_Position:[Yr.TRAIL_POSITION0,t.ShaderDataType.Vector4],a_OffsetVector:[Yr.TRAIL_OFFSETVECTOR,t.ShaderDataType.Vector3],a_Texcoord0X:[Yr.TRAIL_TEXTURECOORDINATE0X,t.ShaderDataType.Float],a_Texcoord0Y:[Yr.TRAIL_TEXTURECOORDINATE0Y,t.ShaderDataType.Float],a_BirthTime:[Yr.TRAIL_TIME0,t.ShaderDataType.Float],a_Color:[Yr.TRAIL_COLOR,t.ShaderDataType.Vector4]},r={u_TilingOffset:t.ShaderDataType.Vector4,u_MainTexture:t.ShaderDataType.Texture2D,u_MainColor:t.ShaderDataType.Color},a={u_MainColor:t.Color.WHITE,u_TilingOffset:new t.Vector4(1,1,0,0)},n=t.Shader3D.add("Trail",!1,!1),i=new t.SubShader(e,r,a);n.addSubShader(i),i.addShaderPass('#define SHADER_NAME TrailVS\n\n#include "Camera.glsl";\n\n// Sprite uniform\nuniform float u_CurTime;\nuniform float u_LifeTime;\nuniform vec4 u_WidthCurve[10];\nuniform int u_WidthCurveKeyLength;\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nfloat hermiteInterpolate(float t, float outTangent, float inTangent, float duration, float value1, float value2)\n{\n    float t2 = t * t;\n    float t3 = t2 * t;\n    float a = 2.0 * t3 - 3.0 * t2 + 1.0;\n    float b = t3 - 2.0 * t2 + t;\n    float c = t3 - t2;\n    float d = -2.0 * t3 + 3.0 * t2;\n    return a * value1 + b * outTangent * duration + c * inTangent * duration + d * value2;\n}\n\nfloat getCurWidth(in float normalizeTime)\n{\n    float width;\n    if (normalizeTime == 0.0)\n\t{\n\t    width = u_WidthCurve[0].w;\n\t}\n    else if (normalizeTime >= 1.0)\n\t{\n\t    width = u_WidthCurve[u_WidthCurveKeyLength - 1].w;\n\t}\n    else\n\t{\n\t    for (int i = 0; i < 10; i++)\n\t\t{\n\t\t    if (normalizeTime == u_WidthCurve[i].x)\n\t\t\t{\n\t\t\t    width = u_WidthCurve[i].w;\n\t\t\t    break;\n\t\t\t}\n\n\t\t    vec4 lastFrame = u_WidthCurve[i];\n\t\t    vec4 nextFrame = u_WidthCurve[i + 1];\n\t\t    if (normalizeTime > lastFrame.x && normalizeTime < nextFrame.x)\n\t\t\t{\n\t\t\t    float duration = nextFrame.x - lastFrame.x;\n\t\t\t    float t = (normalizeTime - lastFrame.x) / duration;\n\t\t\t    float outTangent = lastFrame.z;\n\t\t\t    float inTangent = nextFrame.y;\n\t\t\t    float value1 = lastFrame.w;\n\t\t\t    float value2 = nextFrame.w;\n\t\t\t    width = hermiteInterpolate(t, outTangent, inTangent, duration, value1, value2);\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\t}\n    return width;\n}\n\nvoid main()\n{\n    float normalizeTime = (u_CurTime - a_BirthTime) / u_LifeTime;\n\n    v_Texcoord0 = vec2(a_Texcoord0X, 1.0 - a_Texcoord0Y) * u_TilingOffset.xy + u_TilingOffset.zw;\n\n    v_Color = a_Color;\n\n    vec3 cameraPos = (u_View * a_Position).rgb;\n    gl_Position = u_Projection * vec4(cameraPos + a_OffsetVector * getCurWidth(normalizeTime), 1.0);\n\n    gl_Position = remapPositionZ(gl_Position);\n}','#define SHADER_NAME TrailFS\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nvoid main()\n{\n    vec4 color = 2.0 * u_MainColor * v_Color;\n#ifdef MAINTEXTURE\n    vec4 mainTextureColor = texture2D(u_MainTexture, v_Texcoord0);\n    color *= mainTextureColor;\n#endif\n\n#ifdef FOG\n    color.xyz = scenUnlitFog(color.xyz);\n#endif // FOG\n    gl_FragColor = color;\n}\n')}}class un{static get defaultDFG(){return un._defaultDFG}static set defaultDFG(e){un._defaultDFG=e}static DefaultDfgTexture(){let e=t.Base64Tool.decode("Iz9SQURJQU5DRQojIGNtZ2VuCkZPUk1BVD0zMi1iaXRfcmxlX3JnYmUKR0FNTUE9MQpFWFBPU1VSRT0wCgotWSAxMjggK1ggMTI4CgICAICA7enk39rV0MvHxMG+u7m3tLKwrqyqqKakoqCfnZuZmJaVk5KRj46Ni4qJiIaFhIOCgYD+/Pr49vTy8e/t6+nn5eTi4N/d3NrZ19bV09LQz87My8rIx8bFxMPBwL++vby6ubi3trW0s7KxsK+urayrqqqpqKempaSko6KhoKCfnp0JCwoKCQkICAcHAwcGBgMGBQUEBQUEBIQEhwOKAooBiAKQAbYA/wABALKAzn8CAgCAgO3p5N/a1dDLx8TBvry5t7WzsK6sqqimpKOhn52cmpiXlZSTkZCPjYyLiYiHhoWDgoGA//37+fj29PLw7uzr6efl5OLg397c29nY1tXU0tHQzs3MysnIx8XEw8LBwL+9vLu6ubi3trW0s7KxsK+uraysq6qpqKempqWko6KioaCfCQsKCgkJCAgHBwMHBgYDBgUFgwWFBIgDigKJAYgCkAG2AP8AAQCygM5/AgIAgIDt6eTf2tXRzMfFwr+8uri1s7Gvraupp6WkoqCfnZuamJaVlJKRkI+NjIuKiIeGhYSDgoGA/vz7+ff18/Lw7uzq6efl5OLh397d29rY19bU09LQz87Ny8rJyMfGxcPCwcC/vr28u7q5uLe2tbSzsrGwsK+urayrqqqpqKempqWkowcLCgoJCQgIBQgHBwYGBAYGBQUEBQUEBIQEhwOKAosBhwKQAbUA/wABALSAzH8CAgCAgO3p5N/a1tHMyMXCwL27uLa0srCurKqopqWjoaCenJuZmJaVlJKRkI+OjIuKiYeGhYSDgoGA//38+vj39fPx7+7s6unn5uTj4eDf3dzb2djX1dTT0tDPzs3MysnIx8bFxMPCwcC/vr28u7q5uLe2tbS0s7KxsK+vrq2sq6uqqainCgsLCgoJCQgIBwcDBwYGBAYGBQUEBQUEBIMEiAOKAosBhwKQAbQA/wABALWAy38CAgCAgO3o5N/b1tHNyMbDwL67ube1s7Gvraupp6akoqGfnpyamZeWlZSSkZCPjoyLiomIh4aFhIOCgYD//fv6+Pb18/Hv7uzr6ejm5ePi4d/e3dza2djX1dTT0tDPzs3My8rJyMfGxcTDwsHAv769vLu6ubm4t7a1tLOzsrGwsK+uraysCgsLCgoJCQgIBwcDBwYGBAYGBQWDBYUEiAOKAowBhQKQAbQA/wABALeAyX8CAgCAgO3o5N/b1tLNycbDwb68uri1s7KwrqyqqKelo6Kgn52cmpmXlpWUk5GQj46NjIqJiIeGhYSDgoKBgP79+/r49vXz8fDu7evq6Ofm5OPi4N/e3dva2djX1dTT0tHQz87NzMvKycjHxsXEw8LBwL++vr28u7q5uLi3trW1tLOysrGwCAwLCgoJCQgIAwgHBwMHBgYEBgYFBQQFBQQEhASHA4sCjQGEApABswD/AAEAuYDHfwICAICA7ejk4NvX0s7JxsTBv7y6uLa0srCvraupqKako6Ggnp2bmpmXlpWUk5KQj46NjIuKiYiHhoWEg4KBgID+/fv6+Pb18/Lw7+3s6uno5+Xk4+Lg397d3NrZ2NfW1dTT0tHQz87NzMvKycjHxsXEw8PCwcC/vr29vLu6urm4t7e2tbQLDAsLCgoJCQgIBwcDBwYGBAYGBQWDBYYEhwOLAo4BgwKQAbIA/wABALuAxX8CAgCAgO3o5ODb19POysfEwr+9u7m3tbOxr66sqqinpaSioZ+enJuamJeWlZSTkpGPjo2Mi4qJiIeGhYWEg4KBgID+/fv6+Pf19PLx7+7t6+rp6Obl5OPi4d/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMjHxsXEw8PCwcDAv769vby7urq5CQwLCwoKCQkICAMIBwcDBwYGBAYGBQWDBYUEiAOKApABBAICAQGNAbIA/wABAL2Aw38CAgCAgOzo5ODc19PPy8fFwsC+u7q4trSysK+tq6mopqWjoqGfnpybmpiXlpWUk5KRkI+OjYyLiomIh4aFhISDgoGBgP/9/Pr59/b08/Lw7+7s6+rp6Ofl5OPi4eDf3t3b2tnZ2NfW1dTT0tHQz87OzczLysnJyMfGxcXEw8LCwcDAv769BwwMCwoKCQkFCQgIBwcEBwcGBgMGBQWDBYYEiAOKAqEBsQD/AAEAv4DBfwICAICA7Ojk4NzY1M/LyMXDwL68uri2tbOxr66sqqmnpqWjoqCfnpybmpiXlpWUk5KRkI+OjYyLiomIiIeGhYSEg4KBgYD//vz7+fj39fTz8fDv7u3r6uno5+bl5OPi4eDf3d3c29rZ2NfW1dTU09LR0M/Ozs3MzMvKycjIx8bGxcTDw8IKDAwLCwoKCQkICAMIBwcDBwYGBAYGBQWDBYYEhwOLApEBAwABAY0BsAD/AAEAwYC/fwICAICA7Ojk4NzY1NDMyMbDwb+9u7m3tbSysK+tq6qop6ako6Ggn52cm5qZmJeWlZSTkpGQj46NjIuKiYiIh4aFhISDgoKBgID+/fv6+ff29fTz8fDv7u3s6+rp6Ofm5eTj4uHg397d3Nva2tnY19bV1NTT0tHR0M/Pzs3MzMvKysnIyMcIDQwLCwoKCQkFCQgIBwcEBwcGBgQGBgUFgwWGBIcDiwKRAYMAjAGwAP8AAQDEgLx/AgIAgIDs6OTg3NjU0MzIxsTCv727uri2tLOxsK6sq6mop6Wko6Ggn52cm5qZmJeWlZSTkpGQj46NjIuLiomIiIeGhYWEg4OCgYGA//78+/r59/b19PPy8fDv7u3s6+rp6Ofm5eTj4uHg4N/e3dzb29rZ2NfX1tXU1NPS0tHQ0M/Ozs3MzAsNDAwLCwoKCQkICAMIBwcDBwYGBAYGBQWDBYYEiAOLApEBhACLAa8A/wABAMaAun8CAgCAgOzo5ODc2dXRzcnHxMLAvry6uLe1s7Kwr62sqqmopqWkoqGgn52cm5qZmJeWlZSTkpKRkI+OjYyLi4qJiIiHhoaFhISDgoKBgID//vz7+vn49/b19PPx8fDv7u3s6+rp6Ofm5eXk4+Lh4eDf3t3d3Nva2tnY2NfW1tXU1NPS0tHRCQ0MDAsLCgoJCQMJCAgDCAcHAwcGBgQGBgUFgwWGBIgDigKSAYYAiQGuAP8AAQDJgLd/AgIAgIDs6OTg3dnV0c3Kx8XDwL68u7m3trSzsbCurauqqaempaSioaCfnZybmpmZmJeWlZSTkpGQj4+OjYyLi4qJiYiHh4aFhYSEg4KCgYCA//79/Pr5+Pf29fT08/Lx8O/u7ezr6urp6Ofm5uXk4+Pi4eHg397e3dzc29va2dnY19fW1gwNDQwMCwsKCgkJCAgDCAcHBAcHBgYEBgYFBYMFhgSIA4oCkQGJAIYBrgD/AAEAzIC0fwICAICA6+jk4N3Z1dLOysfFw8G/vbu6uLe1tLKxr66sq6qop6alo6KhoJ+enZybmpmYl5aVlJSTkpGQj46OjYyMi4qKiYiIh4aGhYWEg4OCgoGBgP/+/fz7+vn5+Pf29fTz8vHx8O/u7ezs6+rp6ejn5+bl5OTj4uLh4ODf397d3dzc29sKDg0MDAsLCgoJCQMJCAgDCAcHAwcGBoMGhQWGBIcDiwKRAYsAhAGtAP8AAQDPgLF/AgIAgIDr6OTh3dnW0s7LyMbEwsC+vLq5t7a0s7Gwr62sq6mop6alo6KhoJ+enZybmpmZmJeWlZSTkpKRkI+Pjo2NjIuLiomJiIiHhoaFhYSEg4KCgYGAgP/+/f38+/r5+Pf39vX08/Ly8fDv7+7t7Ozr6urp6Ojn5ubl5eTj4+Li4eHg4A0ODQ0MDAsLCgoJCQgIBAgIBwcDBwYGBAYGBQWDBYYEiAOLApEBjgADAQAAqgD/AAEA04CtfwICAIBX6+jk4d3a1tLPy8jGxMLAvr27uri2tbSysbCurauqqainpqWjoqGgn56dnJubmpmYl5eWlZSTkpKRkJCPjo6NjIyLioqJiYiIh4eGhYWEhIODgoKBgYCAKYD//v38/Pv6+fj49/b19PTz8vLx8PDv7u7t7ezr6+rq6ejo5+fm5uXlCw4NDQwMCwsKCgkJAwkICAMIBwcEBwcGBgQGBgUFgwWGBIgDiwKQAbsA/wABANiAqH8CAgCAV+vn5OHd2tbTz8zIxsXDwb+9vLq5t7a0s7Kwr66sq6qpqKempaSioaCfnp2dnJuampmYl5aWlZSTkpKRkJCPj46NjYyLi4qKiYmIiIeHhoaFhYSEg4OCggWCgYGAgByA//7+/fz7+/r5+Pj39vb19PTz8/Ly8fDw7+7uCO7t7ezs6+vqDA4ODQ0MDAsLCgoJCQMJCAgDCAcHBAcHBgYEBgYFBYMFhgSIA4sCkAG6AP8AAQDdgKN/AgIAgFfq5+Th3drX09DMycfFw8G/vry7ubi2tbSzsbCvrayrqqmop6alpKOioaCfnp2cnJuamZmYl5aWlZSTk5KRkZCQj46OjY2MjIuLioqJiYiIh4eGhoWFhIQFhIODgoIDgoGBA4GAgB6A//7+/fz8+/r6+fn49/f29vX19PTz8/Ly8fHw8O8KDw4NDQwMCwsKCgUKCQkICAQICAcHAwcGBoMGhQWGBIgDigKRAbkA/wABAOOAnX8CAgCASurn5OHd2tfU0M3Kx8XEwsC+vbu6ube2tbOysbCurayrqqmop6alpKOioaCfnp6dnJybmpmZmJeWlpWUlJOSkpGRkJCPjo6NjYyMC4yLi4qKiYmIiIeHBYeGhoWFBYWEhIODA4OCggSCgoGBA4GAgBSA///+/f38/Pv7+vr5+fj49/f29gP29fUNDw4ODQ0MDAsLCgoJCQMJCAgDCAcHBAcHBgYEBgYFBYMFhwSIA4oCkQG4AP8AAQDqgJZ/AgIAgEzq5+Th3drX1NHNysjGxMLAv728u7m4t7W0s7Kxr66trKuqqainpqWko6KhoKCfnp2dnJubmpmZmJeXlpWVlJOTkpKRkZCQj4+Ojo2NCY2MjIuLioqJiQWJiIiHhwOHhoYDhoWFA4WEhAOEg4MEg4OCggOCgYEEgYGAgAaAgP///v4H/v39/Pz7+wL7+gsPDw4NDQwMCwsKCgMKCQkDCQgIAwgHBwQHBwYGBAYGBQWDBYcEhwOLApABuAD/AAEA84CNfwICAIBD6ufk4d3a19TRzsvIxsTDwb++vbu6ube2tbSzsbCvrq2sq6qpqKempaSjo6KhoJ+fnp2dnJybmpqZmJiXlpaVlZSTkwaTkpGRkJAFkI+Pjo4Hjo2NjIyLiwOLiooFiomJiIgEiIiHhwOHhoYEhoaFhQOFhIQEhISDgwSDg4KCg4KEgYaADA8PDg4NDQwMCwsKCgUKCQkICAQICAcHBAcHBgYEBgYFBYMFhgSIA4sCkAG3AP8AAQD/gAGAAgIAgEvp5uTh3tvX1NHOy8jGxcPCwL69vLu5uLe2tbOysbCvrq2sq6qpqKenpqWko6KhoaCfn56enZycm5qamZmYl5eWlpWVlJSTk5KSkZEDkZCQB5CPj46OjY0DjYyMA4yLiwOLiooDiomJBImJiIgEiIiHhwSHh4aGBIaGhYUEhYWEhISEhYMCgoIKEA8PDg0NDAwLCwULCgoJCQMJCAgECAgHBwMHBgaDBoUFhgSIA4sCkAG2AP8AAQD/gAGAAgIAgEbp5uPg3tvY1dLPzMnHxcTCwL++vLu6ube2tbSzsrGwr66trKuqqamop6alpKSjoqGhoKCfnp6dnZybm5qamZiYl5eWlpWVB5WUlJOTkpIDkpGRA5GQkAWQj4+OjgOOjY0EjY2MjAOMi4sEi4uKigSKiomJBImJiIiDiIWHh4aDhQ0QEA8ODg0NDAwLCwoKAwoJCQMJCAgDCAcHBAcHBgaDBoUFhgSIA4oCkQG1AP8AAQD/gAGAAgIAgEjp5uPg3tvY1dLPzMnHxsTDwcC+vby7ubi3trW0s7KxsK+urayrq6qpqKempqWko6OioaGgoJ+fnp6dnJybm5qamZmYmJeXlpYFlpWVlJQDlJOTA5OSkgOSkZEDkZCQA5CPjwOPjo4Ejo6NjQSNjYyMg4yFi4WKh4mFiA4QEA8PDg4NDQwMCwsKCgMKCQkDCQgIAwgHBwQHBwYGgwaFBYYEiAOKApABtQD/AAEA/4ABgAICAIBF6ebj4N7b2NXS0M3Kx8bEw8HAv728u7q5uLe2tbSzsrGwr66trKyrqqmoqKempaWko6OioqGhoKCfnp6dnZycm5uampmZBZmYmJeXBZeWlpWVBJWVlJQDlJOTA5OSkgSSkpGRA5GQkASQkI+Pg4+GjoWNh4yHiwwREBAPDg4NDQwMCwsDCwoKAwoJCQMJCAgDCAcHBAcHBgYEBgYFBYQFhgSIA4oCkAG0AP8AAQD/gAGAAgIAgELo5uPg3tvY1dPQzcrIxsXDwsC/vr28u7q4t7a2tbSzsrGwr66trayrqqqpqKenpqWlpKOjoqKhoaCgn5+enp2dnJwFnJubmpoFmpmZmJgDmJeXA5eWlgSWlpWVBJWVlJQDlJOTBJOTkpKDkoWRh5CHj4iOAY0NEREQDw8ODg0NDAwLCwULCgoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYcEiAOKApABswD/AAEA/4ABgAICAIA76OXj4N3b2NbT0M7LyMfFxMLBwL69vLu6ubi3trW0tLOysbCvrq6trKyrqqmpqKenpqWlpKSjo6KioaELoaCgn5+enp2dnJwDnJubA5uamgOamZkDmZiYBJiYl5cEl5eWlgSWlpWVg5WFlIaTiJKKkQKQkBASERAQDw8ODg0NDAwLCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYcEhwOLAo8BswD/AAEA/4ABgAICAIA15+Xi4N3b2NbT0c7LycfGxMPBwL++vby7urm4t7a1tLSzsrGwr6+ura2sq6uqqaiop6empaUHpaSko6OiogeioaGgoJ+fBZ+enp2dA52cnAOcm5sEm5uamgSampmZg5mEmIWXhpaJlYqUhZMMEhEREBAPDg4NDQwMBQwLCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYcEhwOKApABsgD/AAEA/4ABgAICAIA45+Xi4N3b2NbT0c7MycfGxcPCwb++vby7urm5uLe2tbS0s7KxsLCvrq6trKyrqqqpqKinp6ampaUDpaSkB6Sjo6KioaEFoaCgn58En5+engOenZ0EnZ2cnAScnJubg5uFmoeZh5iMl4iWDxISERAQDw8ODg0NDAwLCwMLCgoDCgkJAwkICAQICAcHAwcGBoMGhQWGBIgDigKQAbEA/wABAP+AAYACAgCAOefk4uDd29jW1NHPzMrHxsXEwsHAv769vLu6ubi4t7a1tLSzsrGxsK+vrq2trKyrqqqpqaiop6empgOmpaUDpaSkBaSjo6KiA6KhoQOhoKAEoKCfnwSfn56eBJ6enZ2EnYach5uMmo2ZEBMSEhEQEA8PDg4NDQwMCwsDCwoKAwoJCQMJCAgDCAcHBAcHBgaDBoUFhgSIA4oCjwGxAP8AAQD/gAGAAgIAgDfm5OLf3dvY1tTRz83KyMbFxMPCwL++vby8u7q5uLe3trW0tLOysrGwsK+vrq2trKyrqqqpqaioA6inpwOnpqYDpqWlA6WkpAOko6MDo6KiBKKioaEEoaGgoIOgh5+HnoqdlJwMExMSEREQEA8ODg0NBQ0MDAsLAwsKCgMKCQkDCQgIAwgHBwQHBwYGgwaFBYYEiAOKAo8BsAD/AAEA/4ABgAICAIA45uTh393b2NbU0s/Ny8jHxcTDwsHAv769vLu7urm4t7e2tbW0s7OysbGwsK+vrq2trKyrq6qqqakDqaioBKiop6cDp6amA6alpQSlpaSkA6Sjo4OjhaKIoYqgmp8PFBMSEhEREA8PDg4NDQwMAwwLCwULCgoJCQQJCQgIAwgHBwQHBwYGgwaFBYYEiAOJApABrwD/AAEA/4ABgAICAIA55ePh393b2NbU0tDNy8nHxsXDwsHAv769vby7urq5uLe3trW1tLOzsrKxsbCwr6+urq2trKyrq6qqA6qpqQSpqaioBKiop6cEp6empgSmpqWlg6WGpIqjkKKPoQKiohAUExMSEhEQEA8PDg4NDQwMBQwLCwoKAwoJCQQJCQgIAwgHBwQHBwYGgwaFBYYEhwOKAo8BrwD/AAEA/4ABgAICAIAz5ePh393a2NbU0tDOy8nHxsXEw8LBwL++vby8u7q5ubi4t7a2tbS0s7OysrGxsLCvr66uB66traysq6sEq6uqqgSqqqmpg6mEqIWniKaMpZ6kERUUExMSEREQEA8PDg4NDQwMBQwLCwoKAwoJCQQJCQgIAwgHBwQHBwYGgwaFBYYEhwOKAo8BrgD/AAEA/4ABgAICAIAv5ePg3tza2NbU0tDOzMrIxsXEw8LBwL++vr28u7u6ubm4uLe2trW1tLSzs7KysbEHsbCwr6+urgOura0DraysBKysq6uDq4WqhqmIqKqnEhUUFBMTEhEREBAPDw4ODQ0MDAUMCwsKCgMKCQkECQkICAMIBwcEBwcGBoMGhQWGBIcDigKOAa4A/wABAP+AAYACAgCAL+Ti4N7c2tjW1NLQzszKyMbFxMPCwcDAv769vby7u7q5ubi4t7e2trW1tLSzs7KyA7KxsQWxsLCvrwOvrq4Drq2thK2GrIari6qcqYyqExYVFBQTEhIRERAQDw8ODg0NDAwFDAsLCgoDCgkJBAkJCAgDCAcHBAcHBgaDBoUFhgSHA4oCjgGtAP8AAQD/gAGAAgIAgCTk4uDe3NrY1tTS0M7MysjGxcTEw8LBwL++vr28vLu7urq5uLgGuLe3trW1A7W0tAW0s7OysgOysbEDsbCwA7CvrwSvr66uh66HrY2sh6uarIWtDxYVFRQUExISEREQDw8ODgcODQ0MDAsLAwsKCgMKCQkDCQgIBAgIBwcEBwcGBgQGBgUFhAWGBIcDiQKOAa0A/wABAP+AAYACAgCAKuPh393c2tjW1NLQzs3LycfGxcTDwsHAwL++vb28vLu7urq5ubi4t7e2tgO2tbUDtbS0A7SzswOzsrIDsrGxBLGxsLCDsIyvpK6OrwKwsBAXFhUVFBMTEhIREBAPDw4OBw4NDQwMCwsDCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWEBYUEiAOJAo4BrAD/AAEA/4ABgAICAIAl4uHf3dvZ2NbU0tDPzcvJx8bFxMPCwcHAv76+vb28vLu7urq5uQe5uLi3t7a2A7a1tQS1tbS0BLS0s7MEs7OysgSysrGxi7GhsIuxirITFxcWFRUUExMSEhEQEA8PDg4NDQUNDAwLCwMLCgoDCgkJAwkICAQICAcHBAcHBgYEBgYFBYMFhgSHA4oCjQGsAP8AAQD/gAGAAgIAgCTi4N7d29nX1tTS0M/Ny8nIxsXEw8PCwcC/v76+vb28vLu7uroDurm5Bbm4uLe3A7e2tgS2trW1g7WEtIazo7KNs4m0h7UUGBcWFhUUFBMTEhEREBAPDw4ODQ0FDQwMCwsDCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYYEhwOJAo4BqwD/AAEA/4ABgAICAIAj4eDe3NvZ19bU0tDPzcvKyMbFxMPDwsHAwL+/vr69vby8u7sDu7q6A7q5uQO5uLgDuLe3g7eFtoa1o7SLtYm2iLeEuBUZGBcWFhUUFBMTEhEREBAPDw4ODQ0FDQwMCwsDCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYYEhwOJAo0BqwD/AAEA/4ABgAICAIAd4d/d3NrZ19XU0tDPzczKyMfFxMTDwsHBwL+/vr4Fvr29vLwDvLu7A7u6ugS6urm5A7m4uIO4h7eItoi1k7aLt4m4h7mHugK7uxYZGBgXFhYVFBQTExIRERAQDw8ODg0NBQ0MDAsLAwsKCgMKCQkDCQgIBAgIBwcEBwcGBgQGBgUFgwWGBIcDiQKNAaoA/wABAP+AAYACAgCAHuDe3dva2NfV09LQz83MysjHxcTEw8LCwcDAv7++vgO+vb0Dvby8A7y7uwS7u7q6BLq6ubmDuYq4kbeOuIq5h7qHu4e8hr0XGhkYGBcWFhUUFBMTEhEREBAPDw4ODQ0FDQwMCwsDCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYYEhgOJAo0BqgD/AAEA/4ABgAICAIAf397c29nY1tXT0tDPzczKycfGxMTDwsLBwcDAv7++vgO+vb0Dvby8BLy8u7uDu4a6nbmLuoi7h7yHvYe+hr+DwBgbGhkYGBcWFhUUFBMTEhEREBAPDw4ODQ0FDQwMCwsDCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQWDBYUEhwOJAo0BqQD/AAEA/4ABgAICAIAf393c2tnX1tTT0tDPzczKycfGxMTDw8LBwcDAv7++vgS+vr29BL29vLyEvIe7mbqGu4i8h72Hvoa/h8CFwYbCAcMXGxoaGRgYFxYWFRQUExMSEREQEA8PDg4HDg0NDAwLCwMLCgoDCgkJAwkICAQICAcHBAcHBgYEBgYFBYMFhQSHA4gCjQGpAP8AAQD/gAGAAgIAgCDe3Nva2NfV1NPR0M/NzMrJyMbFxMPDwsLBwcDAv7++voO+hr2KvIW7lbyFvYa+iL+FwIbBhcKHw4XEhMUYHBsaGhkYGBcWFhUUFBMTEhEREBAPDw4OBQ4NDQwMBQwLCwoKAwoJCQMJCAgECAgHBwQHBwYGBAYGBQUEBQUEBIQEhwOIAo0BqAD/AAEA/4ABgAICAIAe3dza2djW1dTS0dDOzczKycjGxcTDw8LCwcHAwL+/BL+/vr6Evo69A7y9vY+9iL6Fv4XAh8GFwobDhcSGxYXGhccByBkdHBsaGhkYGBcWFhUUFBMTEhEREBAPDw4OBQ4NDQwMBQwLCwoKAwoJCQMJCAgECAgHBwMHBgaDBoQFhgSGA4kCjAGoAP8AAQD/gAGAAgIAgBzc29rY19bV09LRz87NzMrJyMfFxMPDwsLBwcDAA8C/v4O/nb6Jv4fAhcGEwobDhsSExYbGhceFyIXJg8oaHh0cGxoaGRgYFxYWFRQUExMSEREQEA8PDg4FDg0NDAwFDAsLCgoDCgkJAwkICAQICAcHAwcGBgQGBgUFgwWFBIcDiAKMAagA/wABAP+AAYACAgCAGtza2djW1dTT0tDPzs3LysnIx8XEw8PCwsHBA8HAwAPAv7+Gv4i+jr+HwIfBhsKEw4XEhMWGxoTHhsiEyYXKhcuFzBkeHh0cGxoaGRgYFxYWFRQUExMSEhEQEA8PBw8ODg0NDAwFDAsLCgoDCgkJAwkICAQICAcHAwcGBgQGBgUFgwWFBIcDiAKMAacA/wABAP+AAYACAgCAF9vZ2NfW1dPS0dDPzszLysnIx8bEw8LCA8LBwQPBwMAEwMC/v5C/icCGwYXCh8OFxITFhMaEx4XIhcmFyoTLhMyFzYbOAc8YHx4eHRwbGhoZGBgXFhYVFBQTExISERAQCRAPDw4ODQ0MDAUMCwsKCgMKCQkDCQgIBAgIBwcDBwYGBAYGBQWDBYUEhgOIAowBpwD/AAEA/4ABgAICAIAX2tnX1tXU09LRz87NzMvKycjHxsTDwsIDwsHBBMHBwMAEwMC/v4e/icCHwYXChMOFxIbFhcaEx4PIhMmEyoXLhMyFzYTOhc+F0IPRIiAfHh4dHBsbGhkYGBcWFhUVFBMTEhIRERAQDw8ODg0NDAwFDAsLCgoDCgkJAwkICAQICAcHAwcGBgQGBgUFBAUFBASEBIYDiAKLAacA/wABAP+AAYACAgCAGtnY19XU09LR0M/OzczLysnIx8bFxMPCwsHBBMHBwMCPwIbBhcKFw4TEhMWExoXHhMiEyYPKhMuEzIXNhM6Ez4XQhNGF0oTTIyEgHx8eHRwbGxoZGBgXFhYVFRQTExISEREQEA8PDg4NDQwMBQwLCwoKAwoJCQMJCAgDCAcHBAcHBgYEBgYFBQQFBQQEgwSGA4gCjAGmAP8AAQD/gAGAAgIAgBnY19bV1NLR0M/OzczLysnIx8bGxcTDwsHBg8GNwIbBhMKEw4XEg8WExoPHhMiEyYTKhMuEzIPNg86Fz4TQhNGF0oTThdSF1SQiISAfHx4dHBsbGhkZGBcXFhUVFBMTEhIRERAQDw8ODg0NDAwFDAsLCgoDCgkJAwkICAMIBwcEBwcGBgQGBgUFBAUFBASDBIYDhwKMAaYA/wABAP+AAYACAgCAGdfW1dTT0tHQz87NzMvKycjHxsXFxMPCwcGEwYrAhMGFwoPDhMSDxYTGg8eDyITJg8qEy4TMg82EzoPPg9CE0YTShNOF1IXVhNaF1wHYJSMiISAgHx4dHBwbGhkZGBcXFhUVFBMTEhIRERAQDw8ODg0NDAwFDAsLCgoDCgkJAwkICAMIBwcEBwcGBgMGBQWDBYUEhQOIAosBpgD/AAEA/4ABgAICAIAZ1tXU09LR0M/OzczLysnJyMfGxcTEw8LBwYXBhsCFwYTChMODxIPFg8aDx4PIg8mDyoPLg8yEzYPOhM+D0IPRhNKD04TUhNWE1obXhNiF2QHaJiQjIiEgIB8eHRwcGxoZGRgXFxYVFRQUExISEREQEA8PDg4NDQwMBQwLCwoKAwoJCQMJCAgDCAcHAwcGBgQGBgUFBAUFBASDBIYDhwKLAaYA/wABAP+AAYACAgCAGdXU09LR0M/OzczLy8rJyMfHxsXExMPCwcEGwcHAwMHBicGDwoPDg8SDxYPGBMfHyMgDyMnJA8nKygPKy8sFy8zMzc0Dzc7OA87PzwPP0NAE0NDR0QPR0tID0tPTBNPT1NQD1NXVA9XW1gTW1tfXg9eE2ITZhdqF2wHcJyUkIyIhISAfHh0dHBsaGhkYFxcWFRUUFBMSEhEREBAPDw4ODQ0MDAUMCwsKCgMKCQkDCQgIAwgHBwMHBgYEBgYFBQQFBQQEgwSFA4gCigGmAP8AAQD/gAGAAgIAgBvU09LR0M/OzczMy8rJyMjHxsXFxMPDwsHBwMCDwIjBhMIEw8PExAPExcUFxcbGx8cFx8jIyckFycrKy8sDy8zMB8zNzc7Oz88Dz9DQA9DR0QPR0tID0tPTBNPT1NQD1NXVA9XW1gPW19cE19fY2APY2dmD2YTahNuF3IXdAd4oJiUkIyIiISAfHh0dHBsaGhkYGBcWFhUUFBMTEhEREBAPDw4ODQ0MDAUMCwsKCgMKCQkDCQgIAwgHBwMHBgYEBgYFBQQFBQQEBAQEAwOEA4cCiwGlAP8AAQD/gAGAAgIAgBvT0tHQz87NzMvLysnIyMfGxsXExMPDwsLBwMCDwIbBhMKDwwTExMXFBcXGxsfHC8fIyMnJysrLy8zMBczNzc7OBc7Pz9DQBdDR0dLSA9LT0wPT1NQD1NXVA9XW1gTW1tfXA9fY2APY2dkE2dna2gPa29sE29vc3IPchN2F3oXfKScmJSQkIyIhIB8eHh0cGxsaGRgYFxYWFRQUExMSEREQEA8PDg4NDQwMBQwLCwoKAwoJCQUJCAgHBwQHBwYGAwYFBQQFBQQEgwSFA4cCiwGlAP8AAQD/gAGAAgIAgBnS0dDPzs3My8vKycjIx8bGxcXEw8PCwsHBA8HAwATAwMHBg8GEwoPDCMTExcXGxsfHEcfIyMnJysrLy8zMzc3Ozs/PB8/Q0NHR0tIF0tPT1NQF1NXV1tYD1tfXBNfX2NgD2NnZA9na2gTa2tvbBNvb3NwD3N3dBN3d3t6D3oPfheCF4SooKCcmJSQjIiEgHx8eHRwbGxoZGRgXFhYVFRQTExISERAQDw8ODg0NDAwFDAsLCgoFCgkJCAgDCAcHAwcGBgQGBgUFBAUFBAQEBAQDA4QDhwKKAaUA/wABAP+AAYACAgCAGdDPzs7NzMvKysnIx8fGxsXFxMTDw8LCwcEDwcDAg8CDwYPCg8ODxBfFxcbGx8fIyMnJysrLy8zMzc3Ozs/Q0AnQ0dHS0tPT1NQF1NXV1tYF1tfX2NgD2NnZBNnZ2toD2tvbA9vc3ATc3N3dBN3d3t4D3t/fBN/f4OAE4ODh4YPhheKD4ysqKSgnJiUkIyIhICAfHh0cHBsaGRkYFxcWFRUUExMSEhEQEA8PDg4NDQwMBwwLCwoKCQkDCQgIAwgHBwMHBgYEBgYFBQMFBASDBIUDhwKKAaUA/wABAP+AAYACAgCAE8/OzczMy8rJyMjHx8bFxcTEw8MDw8LCA8LBwQPBwMCDwIPBBMLCw8MDw8TEIcTFxcbGx8fIycnKysvLzMzNzc7Pz9DQ0dHS0tPT1NTV1QfV1tbX19jYBdjZ2draA9rb2wPb3NwE3Nzd3QPd3t4E3t7f3wPf4OAE4ODh4QTh4eLig+KE44bkAeUsKyopKCcmJSQjIiEhIB8eHR0cGxoaGRgXFxYVFRQTExISERAQDw8ODg0NDAwHDAsLCgoJCQMJCAgDCAcHAwcGBgMGBQUEBQUEBAQEBAMDhAOGAooBpQD/AAEA/4ABgAICAIAUzs3My8rKycjHx8bGxcXExMPDwsIEwsLBwQTBwcDAg8CDwQrCwsPDxMTFxcbGH8bHx8jJycrKy8zMzc3Oz8/Q0NHS0tPT1NTV1dbW19cH19jY2dna2gXa29vc3APc3d0D3d7eBN7e398D3+DgBODg4eED4eLiBOLi4+OD44XkheWE5i8sKyopKCcmJSQjIyIhIB8eHR0cGxoaGRgXFxYVFRQTExISEREQDw8ODg0NDAwLCwULCgoJCQUJCAgHBwMHBgYEBgYFBQMFBASDBIUDhgKKAaUA/wABAP+AAYACAgCAEszLy8rJyMjHxsbFxcTEw8PCwgTCwsHBg8GGwATBwcLCKcLDw8TFxcbGx8fIyMnJysvLzM3Nzs/P0NDR0tLT09TV1dbW19fY2NnZCdna2tvb3Nzd3QXd3t7f3wTf3+DgA+Dh4QTh4eLiBOLi4+ME4+Pk5ATk5OXlg+WF5oXnAujoMi4tLCopKCgnJiUkIyIhIB8eHh0cGxsaGRgYFxYVFRQUExISEREQDw8ODg0NDAwLCwoKBQoJCQgIAwgHBwMHBgYDBgUFBAUFBAQEBAQDA4MDhwKJAaUA/wABAP+AAYACAgCADcvKycjIx8bGxcTEw8MDw8LCA8LBwYPBisAtwcLCw8PExMXGxsfHyMjJysrLy8zNzs7P0NDR0dLT09TV1dbW19fY2dna2tvbCdvc3N3d3t7f3wPf4OAD4OHhA+Hi4gPi4+ME4+Pk5ATk5OXlg+WE5oXnheiF6TUvLi0sKyopKCcmJSQjIiEgIB8eHRwbGxoZGBgXFhYVFBQTEhIRERAPDw4ODQ0MDAsLCgoJCQMJCAgDCAcHAwcGBgMGBQUDBQQEgwSFA4YCigGkAP8AAQD/gAGAAgIAgA/JycjHxsbFxMTDw8LCwcEEwcHAwIzAg8EqwsPDxMXFxsfHyMnJysrLzMzNzs7P0NHR0tPT1NXV1tbX2NjZ2dra29zcCdzd3d7e39/g4AXg4eHi4gPi4+MD4+TkA+Tl5QTl5ebmg+aE54XohemG6gLr6zYxLy4tLCsqKSgnJiUkIyIhISAfHh0cHBsaGRkYFxYWFRQUExISEREQDw8ODg0NDAwLCwoKCQkFCQgIBwcDBwYGAwYFBQQFBQQEBAQEAwODA4YCigGkAP8AAQD/gAGAAgIAgAzIx8bFxcTDw8LCwcEDwcDAg8CFv4fAhMEywsPExMXGxsfIycnKy8vMzc3Oz8/Q0dLS09TU1dbW19jY2dna29vc3N3d3t7f3+Dg4eEH4eLi4+Pk5APk5eUD5ebmBObm5+cE5+fo6IPohemE6ofrhOw5MjEwLy4tKyopKCcmJSQkIyIhIB8eHR0cGxoZGRgXFhYVFBQTEhIREBAPDw4ODQ0MDAsLCgoJCQgIAwgHBwMHBgYDBgUFAwUEBAQEBAMDgwOGAooBpAD/AAEA/4ABgAICAIALxsbFxMPDwsHBwMADwL+/hL8Dvr+/hb+EwIPBNMLCw8TFxcbHyMjJysvLzM3Ozs/Q0NHS09PU1dbW19jY2dra29vc3d3e3t/f4ODh4eLi4+MF4+Tk5eUD5ebmA+bn5wPn6OgE6Ojp6YPphOqG64TsiO01NDIxMC8uLSwrKikoJyYlJCMiISAfHh4dHBsaGhkYFxYWFRQUExISERAQDw8ODQ0MDAsLCgoHCgkJCAgHBwMHBgYDBgUFBAUFBAQEBAQDAwQDAwIChAKKAaQA/wABAP+AAYACAgCADMXEw8LCwcDAv7++voO+hL2FvoO/g8AEwcHCwjLCw8TFxsbHyMnKy8vMzc7Pz9DR0tLT1NXV1tfY2Nna2tvc3N3d3t7f4ODh4eLi4+Pk5AXk5eXm5gPm5+cD5+joA+jp6QTp6erqA+rr64PrhuyF7YjuAe84NTQzMjEvLi0sKyopKCcmJSQjIiEgHx8eHRwbGhoZGBcXFhUUFBMSEhEQEA8PDg0NDAwLCwoKCQkFCQgIBwcDBwYGAwYFBQMFBAQEBAQDA4MDhgKJAaQA/wABAP+AAYACAgCAC8PCwcHAv7++vr29A728vIW8hL0Evr6/vzi/wMDBwcLCw8PExcbHyMnJysvMzc7P0NHR0tPU1NXW1tfY2dna29zc3d7e39/g4OHi4uPj5OTl5QXl5ubn5wPn6OgD6OnpA+nq6gPq6+sE6+vs7ATs7O3thO2H7ofvAvDwPTc2NDMyMTAvLiwrKikoJyYlJCMiISEgHx4dHBsaGhkYFxcWFRQUExISERAQDw4ODQ0MDAsLCgoJCQgIBwcDBwYGAwYFBQMFBAQEBAQDA4MDhgKJAaQA/wABAP+AAYACAgCACcHAwL++vb28vAO8u7uHu4O8PL29vr6/v8DAwcLCw8PExMXGx8jJysvMzc7P0NHS0tPU1dbW19jZ2drb29zd3t7f4ODh4eLi4+Pk5OXm5gXm5+fo6APo6ekD6erqA+rr6wPr7OwE7Ozt7QTt7e7uhO6H74bwhPE5OTc2NTQzMTAvLi0sKyopKCcmJSQjIiEgHx4dHBsbGhkYFxcWFRQTExIRERAQDw4ODQ0MCwsKCgkJBQkICAcHBQcGBgUFBAUFBAQDBAMDgwOGAokBpAD/AAEA/4ABgAICAIAKwL++vby8u7u6ugO6ubmDuYS6Qru7vLy9vr6/v8DBwsLDxMTFxsbHyMrLzM3Oz9DR0tPT1NXW19jY2drb29zd3d7f4ODh4eLj4+Tk5eXm5ufn6Ojp6QPp6uoD6uvrA+vs7ATs7O3tA+3u7gTu7u/vhO+I8IbxhPI+Ojk4NzU0MzIxLy4tLCsqKSgnJiUkIyIhIB8eHRwbGxoZGBcWFhUUExMSEREQDw8ODQ0MDAsLCgoJCQgIBwcDBwYGAwYFBQMFBAQEBAQDAwQDAwIChAKJAaQA/wABAP+AAYACAgCACr69vLu6urm5uLiIuD+5ubq6u7y8vb6+v8DBwsLDxMXGxsfIycrLzM3Oz9DR0tPU1dbX2Nna29vc3d3e3+Dg4eHi4+Pk5eXm5ufn6OgH6Onp6urr6wPr7OwD7O3tBO3t7u4E7u7v7wTv7/Dwg/CJ8Yfyg/M6PDs6ODc2NTMyMTAvLi0rKikoJyYlJCMiISAfHh0cHBsaGRgXFhYVFBMTEhEREA8PDg0NDAwLCgoJCQcJCAgHBwYGAwYFBQMFBAQEBAQDAwQDAwIChAKJAaQA/wABAP+AAYACAgCACry7urm4uLe3traGtkO3t7i4ubm6u7u8vb6/wMHCwsPExcbHyMnKyszNzs/Q0dLT1NXW19jZ2tvc3d3e3+Dg4eLi4+Pk5eXm5ufn6Ojp6erqBerr6+zsA+zt7QPt7u4D7u/vBO/v8PCD8IXxiPKI84P0Pz49Ozo5ODY1NDMxMC8uLSwrKignJiUkIyIhIB8eHRwcGxoZGBcWFhUUExISERAQDw4ODQwMCwsKCgkJCAgHBwMHBgYDBgUFAwUEBAMEAwMEAwMCAoQCiQGkAP8AAQD/gAGAAgIAgAq6ubi3tra1tbS0hbRBtbW2tre3uLm6u7y8vb6/wMHCw8XGx8jJysvLzM3P0NHS09TV1tfY2drb3N3e3+Dg4eLi4+Tk5eXm5+fo6Onp6uoF6uvr7OwD7O3tBe3u7u/vBO/v8PAE8PDx8YPxhfKG84v0AvX1PUA/PTw7OTg3NjQzMjEwLi0sKyopKCcmJCMiISAfHh0cGxsaGRgXFhUVFBMSEhEQDw8ODQ0MDAsKCgkJCAgFCAcHBgYDBgUFAwUEBAMEAwODA4UCiQGkAP8AAQD/gAGAAgIAgAq4t7a1tLSzs7KyhLJEs7O0tLW1tre4ubq7vL2+v8DBwsTFxsfIycrLzM3Oz9DS09TV1tfY2drb3N3e3+Dh4uLj5OTl5ubn5+jo6enq6uvr7OwF7O3t7u4D7u/vA+/w8ATw8PHxBPHx8vKE8oTzhvSM9QH2QkJBPz49Ozo5NzY1NDIxMC8uLCsqKSgnJiUkIiEgHx4dHBsbGhkYFxYVFBQTEhEREA8ODg0NDAsLCgoJCQgIBwcGBgMGBQUDBQQEAwQDA4MDhQKIAaUA/wABAP+AAYACAgCACba0tLOysbGwsIWwQbGxsrOztLW2t7i5uru8vr/AwcLExcbHycrLzM3Oz9DR0tTV1tfY2drb3N3e3+Dh4uPk5OXm5ufo6Onp6urr6+zsBezt7e7uA+7v7wPv8PAD8PHxBPHx8vIE8vLz84TzhfSG9Yz2QERDQUA/PTw7OTg3NTQzMjAvLi0sKikoJyYlJCMhIB8eHRwbGxoZGBcWFRQTExIREBAPDg0NDAwLCgoJCQgIBwcFBwYGBQUDBQQEBAQEAwMEAwMCAoMCiAGlAP8AAQD/gAGAAgIAgAmzsrGwsK+vrq6FrkWvsLCxsrO0tba3uLm6vL2+wMHCxMXGyMnKzM3Oz9DR0tPU1dfY2drb3N3e3+Dh4uPk5eXm5+jo6enq6uvr7Ozt7e7u7+8D7/DwA/Dx8QTx8fLyBPLy8/OD84X0hvWH9or3RUZFREJBPz48Ozo4NzY0MzIxLy4tLCspKCcmJSQjIiAfHh0cGxoZGBcXFhUUExIRERAPDg4NDAwLCwoKCQkICAcHBgYFBQMFBAQEBAQDAwQDAwICgwKIAaUA/wABAP+AAYACAgCACLGwr66trayshqxCra6ur7CxsrO1tre4uru9vr/BwsTFx8jJy8zNz9DR0tPV1tfY2drb3N3e3+Dh4uPk5ebn5+jp6erq6+zs7e3u7u/vBe/w8PHxA/Hy8gTy8vPzg/OF9Ib1iPaI94b4Q0lHRkRDQUA+PTw6OTg2NTQyMTAvLSwrKignJiUkIyIgHx4dHBsaGRgXFhUUFBMSERAQDw4NDQwLCwoKCQkICAcHBgYFBgUFBAQEBAQDAwQDAwICgwKIAaUA/wABAP+AAYACAgCACa+urKyrqqqpqYOpRqqqq6ytrq+wsbKztba4ubu8vr/BwsTFx8jKy83Oz9HS09XW19jZ2tvc3d7f4OHi4+Tl5ufo6Onq6uvs7O3t7u7v7/Dw8fED8fLyA/Lz8wTz8/T0BPT09fWF9Yb2ifeM+ENLSUhGRUNCQD8+PDs5ODc1NDMxMC8uLCsqKScmJSQjIiAfHh0cGxoZGBcWFRQTEhIREA8ODg0MDAsKCgkJCAgHBwYGAwYFBQMFBAQDBAMDBAMDAgKDAogBpQD/AAEA/4ABgAICAIAIrKuqqaiop6eEp0GoqKmqq6ytrq+xsrS1t7i6vL2/wcLExcfJyszNz9DS09TV19jZ2tvc3d7f4OHi4+Tl5ufo6Onq6+vs7e3u7u/w8AXw8fHy8gPy8/ME8/P09AP09fWD9YX2iveJ+In5Q01MSklHRkRDQUA+PTs6OTc2NDMyMC8uLSsqKScmJSQjISAfHh0cGxoZGBcWFRQTEhEQEA8ODQ0MCwsKCQkICAcHBgYDBgUFAwUEBAMEAwMEAwMCAoMCiAGlAP8AAQD/gAGAAgIAgAmqqKempqWlpKRJpKSlpaanqKmqq62usLGztLa4ubu9v8DCxMXHycrMzs/R0tTV1tjZ2tvc3d7f4OHi4+Tl5ufo6enq6+zs7e7u7+/w8PHx8vLz8wPz9PQE9PT19QT19fb2BPb29/eE9434i/mD+kFQTk1LSUhGRUNCQD89PDo5ODY1MzIxLy4tKyopJyYlJCIhIB8eHRsaGRgXFhUUExISERAPDg4NDAsLCgoJCQgHBwUHBgYFBQMFBAQDBAMDBAMDAgKDAogBpQD/AAEA/4ABgAICAIAHp6alpKOiogSioaKiRaKjpKWmp6iqq62usLKztbe5u72+wMLExsfJy8zO0NHT1NbX2drb3N7f4OHi4uPk5ebn6Onp6uvs7e3u7+/w8PHx8vLz8wPz9PQD9PX1A/X29oP2hPeI+JL5hvpGUlFPTUxKSUdFREJBPz48Ozk4NzU0MjEwLi0rKiknJiUjIiEgHh0cGxoZGBcWFRQTEhEQDw8ODQwMCwoKCQkICAcHBgYFBQMFBAQDBAMDBAMDAgKDAogBpQD/AAEA/4ABgAICAIAHpKOioaCfn4SfQ6ChoqOkpaaoqqutr7GztLa4ury+wMLExsfJy83P0NLT1dfY2dvc3d/g4eLj5OXl5ufo6erq6+zt7u7v7/Dx8fLy8/MF8/T09fUD9fb2BPb29/cE9/f4+IX4ivmQ+oP7RlVTUlBOTUtJSEZFQ0FAPj07Ojg3NjQzMTAuLSsqKScmJSMiIR8eHRwbGRgXFhUUExIRERAPDg0NDAsLCgkJCAgHBwYGBQUDBQQEAwQDAwQDAwICgwKHAaYA/wABAP+AAYACAgCAB6Kgn56dnJyDnEednZ6foKKjpaaoqqyusLK0tri6vL7AwsTGyMrLzc/R0tTW19na293e3+Hi4+Tl5ufo6Onq6+vs7e7u7/Dw8fHy8vPz9PT19QP19vYD9vf3BPf3+PiD+In5ivqP+0ZYVlRSUU9NTEpIR0VEQkA/PTw6OTc2NDMxMC4tKyooJyYkIyIgHx4cGxoZGBcWFRQTEhEQDw4NDQwLCwoJCQgIBwcGBgUFAwUEBAMEAwMEAwMCAoMChwGmAP8AAQD/gAGAAgIAgAefnZybmpmZg5lDmpucnZ6goaOlp6iqra+xs7W3ubu+wMLExsjKzM7P0dPV1tjZ29ze3+Dh4+Tl5ufo6err6+zs7e7u7/Dw8fHy8/P09AX09fX29gP29/cE9/f4+AT4+Pn5hfmK+pT7RlpZV1VTUVBOTEtJR0ZEQ0E/Pjw7OTg2NDMxMC4tKyooJyUkIiEgHh0cGxkYFxYVFBMSERAPDg4NDAwLCgoJCAgHBwYGBQUDBQQEAwQDAwQDAwICgwKHAaYA/wABAP+AAYACAgCAB5yamZiXlpZHlpaXl5iZmpyen6Gjpaepq66wsrS3ubu9wMLExsjKzM7Q0tPV19ja293e4OHi4+Xm5+jp6uvs7O3u7u/v8PDx8vLz8/T09fUF9fb29/cE9/f4+AT4+Pn5g/mI+o37jfxGXVtaWFZUUlFPTUtKSEZFQ0JAPj07OTg2NDMxMC4sKykoJiUjIiEfHh0bGhkYFxUUExIREBAPDg0MDAsKCgkICAcHBgYFBQMFBAQDBAMDBAMDAgKDAocBpgD/AAEA/4ABgAICAIAHmZeWlZSTk0iTk5SUlZeYmpudn6Gkpqiqra+ytLa5u73AwsTGyMrMztDS1NbX2dvc3t/g4uPk5ufo6err7Ozt7u/v8PDx8fLy8/P09PX19vYD9vf3A/f4+AP4+fmD+Yf6jfuR/ERgXlxaWVdVU1FQTkxKSUdFREJAPz07Ojg2NDMxLy4sKiknJiQjISAfHRwbGRgXFhUUExIREA8ODQ0MCwoKCQkIBwcGBgUGBQUEBAMEAwMEAwMCAgQCAgEBhgGmAP8AAQD/gAGAAgIAgAaWlJKRkJCDkD2RkpOUlpeZm56goqWnqayusbO2uLu9v8LExsjLzc/R0tTW2Nrb3d7g4eLk5ebn6Orr6+zt7u/v8PHx8vPzBfP09PX1BfX29vf3A/f4+AT4+Pn5BPn5+vqE+oj7kvyH/URjYV9dW1lYVlRSUE9NS0lIRkRCQT89Ozo4NjQyMS8tLCooJyUkIiEfHhwbGhkXFhUUExIREA8ODQ0MCwoKCQkIBwcGBgUGBQUEBAMEAwMEAwMCAgQCAgEBhgGmAP8AAQD/gAGAAgIAgAeTkY+OjYyMRIyNjo+QkpOVl5qcnqGjpqirrrCztri7vb/CxMbJy83P0dPV19ja3N3f4OLj5Obn6Onq6+zt7u/v8PHy8vPz9PT19fb2BPb29/cD9/j4A/j5+QT5+fr6g/qI+4z8kP1EZmRiYF5cWlhXVVNRT05MSkhGRUNBPz07OTg2NDIwLi0rKSgmJCMhIB4dHBoZGBcVFBMSERAPDg4NDAsLCgkJCAcHBgYFBgUFBAQDBAMDBAMDAgIEAgIBAYUBpwD/AAEA/4ABgAICAIAGj42MiomJRYmJiouMjY+Rk5WYmp2foqWoqq2ws7W4ur2/wsTHycvNz9HT1dfZ29ze4OHi5OXm5+nq6+zt7u/v8PHy8vP09PX19vb39wT39/j4g/iE+YT6h/uL/JT9RGpnZWNhX11bWVdWVFJQTkxKSUdFQ0E/PTs5NzUzMjAuLCopJyUkIiEfHhwbGRgXFhUUEhEQDw8ODQwLCwoJCQgIBwYGBQYFBQQEAwQDAwMDAgKDAocBpwD/AAEA/4ABgAICAIBKjIqIh4aFhYaGiImLjY+Rk5aZm56hpKeqrK+ytbi6vcDCxMfJy87Q0tTW2Nnb3d/g4uPk5ufo6err7O3u7/Dx8vLz9PT19fb29/cD9/j4A/j5+YT5hPqH+4n8l/0B/kRta2hmZGJgXlxaWFZVU1FPTUtJR0VDQT89Ozk3NTMxLy0rKSgmJCMhIB4dGxoZFxYVFBMSERAPDg0MCwsKCQkICAcGBgUGBQUEBAMEAwMDAwICgwKHAacA/wABAP+AAYACAgCABoiGhIOCgkOCgoOEhoiKjI+RlJeanaCjpqmsr7K1t7q9wMLFx8nMztDS1NbY2tzd3+Hi4+Xm5+nq6+zt7u/w8fHy8/P09fX29vf3Bff4+Pn5BPn5+vqE+of7h/yS/Yr+RHBua2lnZWNhX11bWVdVU1FPTUtJR0VDQT88Ojg2NDIwLiwqKSclIyIgHx0cGhkYFhUUExIREA8ODQwMCwoJCQgIBwYGBQYFBQQEAwQDAwMDAgKDAocBpwD/AAEA/4ABgAICAIAGhYOB//39RP3+gIGDhYiKjZCTlpmcn6KlqKuusbS3ur3AwsXHyszO0dPV19na3N7f4ePk5efo6err7O3u7/Dx8vLz9PT19vb39/j4A/j5+QP5+voD+vv7iPuH/JD9jv5EdHFv2dXQzMhiYF5cWlhWVFJQTktJR0VCQD48Ojc1MzEvLSspJyYkIiEfHhwbGRgXFRQTEhEQDw4NDAwLCgkJCAgHBgYFBgUFBAQDBAMDAwMCAoMChwGnAP8AAQCDgIV/+IACAgCAToH++vf29fb3+v2Ag4WIi46RlJebnqGkqKuusbS3ur3AwsXIyszP0dPV19nb3d7g4ePk5ufo6uvs7e7v8PHx8vP09PX19vb39/j4+fn6+gT6+vv7BPv7/PyJ/JD9kf5Gd+rl4NvX0s7KxmFfXVtZV1RSUE5LSUdEQkA9Ozk3NDIwLiwqKCYlIyEgHhwbGhgXFhQTEhEQDw4NDAwLCgkJCAgHBgYFBQMFBAQDBAMDAwMCAoMChgGoAP8AAQADgH9/h3/2gAICAIAG/Pby7+7uR+7w8/f7gIOGiYyPk5aanaCkp6uusbS3ur3Aw8XIys3P0dPW2Nnb3d/g4uTl5ujp6uvs7e7v8PHy8vP09fX29vf3+Pj5+fr6A/r7+4P7hfyU/ZT+Rvbx6+bi3dnU0MzIYmBeXFlXVVJQTUtIRkRBPzw6ODUzMS8tKyknJSMiIB4dGxoYFxYVExIREA8ODQwMCwoJCQgIBwYGBQUDBQQEAwQDAwMDAgIEAgIBAYUBqAD/AAEAi3/1gAICAIBK9O7q5+bm5+nt8fb7gISHio6RlZmcoKOnqq6xtLe6vcDDxcjLzc/S1NbY2tzd3+Hi5OXn6Onq7O3u7/Dw8fLz9PT19vb39/j4+fkD+fr6A/r7+wP7/PyD/In9g/6G/Zj+Rv348u3o49/b19PPymNhXlxZV1VST01KSEVDQD47OTc0MjAuLCooJiQiIB8dHBoZFxYVFBIREA8ODQwMCwoJCQgIBwYGBQUDBQQEAwQDAwMDAgIEAgIBAYUBqAD/AAEAjH/0gAICAIBJdubi397e4OLm6/D2/YKFiY2QlJibn6Omqq2xtLe6vcDDxsjLzdDS1NbY2tze4OHj5Obn6Orr7O3u7/Dx8vPz9PX29vf3+Pj5+QX5+vr7+wT7+/z8BPz8/f2F/aD+hf9Ggv/59O/q5uHd2dXRzGRhX1xaV1RST0xKR0RCPzw6ODUzMS4sKigmJCIhHx0cGhkXFhUUEhEQDw4NDQwLCgkJCAgHBgYFBQUFBAQDAwQDAwICBAICAQGFAagA/wABAAOAf3+Kf/OAAgIAgEhyb2zX1tbY2+Dl6/L5gIOHi4+Tl5ufoqaqrbG0t7q9wMPGycvO0NLV19nb3N7g4uPl5ujp6uvs7e/w8PHy8/T19fb39/j4+fkF+fr6+/sD+/z8BPz8/f2G/Zz+iv9GhoOA+/Xx7Ojk4NvX0mdkYV9cWVZUUU5LSEZDQD47OTY0MS8tKyknJSMhHx4cGxkYFhUUExEQDw4NDQwLCgoJCAgHBgYFBQUFBAQDAwQDAwICBAICAQGFAagA/wABAIOAin/zgAICAIBMbmpoZ83O0dXa3+bt9PyChoqOkpaanqKmqa2xtLe6vsDDxsnLztDT1dfZ293f4OLk5ebo6ers7e7v8PHy8/T09fb29/f4+Pn5+vr7+wP7/PyD/Ib9jf6L/wP+//+N/0aKhoOA/Pjz7+vn4t7Z1GdkYV9cWVZTUE1KR0RCPzw6NzQyMC0rKSclIyEgHhwbGRgWFRQTEhAPDg4NDAsKCgkICAcGBgUFBQUEBAMDBAMDAgIEAgIBAYUBqAD/AAEAhICKf/KAAgIAgEtqZmRiYsbJztPa4enx+YCFiY2RlpqeoqaprbG0t7u+wcTGyczO0dPV19nb3d/h4uTl5+jq6+zt7vDx8fLz9PX19vf3+Pj5+fr6+/sD+/z8g/yF/Yr+oP9GjoqHhIH/+vby7unk39pqZ2RhXltYVVJOS0lGQ0A9Ojg1MzAuLCooJSQiIB4dGxkYFxUUExIREA8ODQwLCgkJCAgHBgYFBQUFBAQDAwQDAwICBAICAQGEAakA/wABAIWAiX/ygAICAIBIZWJfXl5fYcfO1dzk7fb/g4iMkZWZnaGlqa2wtLe7vsHEx8nMztHT1dja3N3f4ePk5ufp6uvt7u/w8fLz8/T19vb3+Pj5+fr6A/r7+wP7/PwE/Pz9/YP9iv6h/0aSjoqIhYOB/fn18Ovm4NpqZ2NgXVpWU1BNSkdEQT47OTYzMS8sKigmJCIgHh0bGhgXFRQTEhEQDw4NDAsKCQkICAcGBgUFBQUEBAMDAwMCAoMChgGpAP8AAQCHgIh/8YACAgCASGFdW1paW11gZNDY4erz/IKHjJCUmZ2hpamtsLS3u77BxMfJzM/R09bY2tze4OHj5ebo6ers7e7v8PHy8/T09fb39/j4+fn6+gP6+/sD+/z8A/z9/YP9iP6k/0iWko6LiYaEgoD89/Ls5uBsaWZiX1xYVVJOS0hFQj88OTc0MS8tKigmJCIgHx0bGhgXFhQTEhEQDw4NDAsKCQkICAcGBgUFBAQDBAMDAwMCAoMChgGpAP8AAQCJgIZ/8YACAgCASl1ZVlVWV1pdYWXU3ebw+oGGi4+UmJ2hpamtsLS3u77BxMfKzM/R1NbY2tze4OLj5efo6evs7e7v8PHy8/T19fb39/j4+fn6+vv7A/v8/AT8/P39g/2G/qb/SJqVko+MioiGhIH++fLs5m9saGRhXVpWU09MSUZDQD06NzQyLy0rKSYkIiEfHRsaGBcWFBMSERAPDg0MCwoJCQgHBwYGBQUEBAMEAwMDAwICBAICAQGFAakA/wABAIqAhX/xgAICAIBHWFRSUVJUV1peY2ja5O74gYWKj5SYnKGlqa2wtLe7vsHEx8rMz9HU1tja3N7g4uTl5+jp6+zt7u/w8fLz9PX19vf3+Pj5+voD+vv7A/v8/AP8/f0E/f3+/oX+p/9InpmVkpCOjIqIhYL/+fLrcm5qZmNfW1hUUE1KRkNAPTo4NTIwLSspJyUjIR8dHBoYFxYUExIREA8ODQwLCgkJCAcHBgYFBQQEAwQDAwMDAgIEAgIBAYUBqQD/AAEAi4CEf/GAAgIAgEdUT01NTlBUWFxhZmvh6/aAhYqOk5icoKSprLC0t7u+wcTHys3P0tTW2dvd3uDi5OXn6Orr7O3v8PHy8vP09fb29/j4+fn6+gX6+/v8/AP8/f0E/f3+/oX+qP9Iop2ZlpSSkI6MiYaD//jwdHBsaGRgXVlVUk5KR0RBPjs4NTMwLispJyUjIR8dHBoYFxYUExIREA8ODQwLCgkJCAcHBgYFBQQEAwQDAwMDAgIEAgIBAYUBqQD/AAEAjICDf/GAAgIAgElPS0hISk1RVVpfZGpv6fT+hImOk5ecoKSorLC0t7u+wcTHys3P0tTW2dvd3+Hi5Obn6Orr7O3v8PHy8/P09fb29/j4+fn6+vv7A/v8/AP8/f0E/f3+/oX+o/+EgAH/SKahnZqYlpSSkI2JhoL99e1ybmpmYl5aVlJPS0hFQT47ODYzMC4sKSclIyEfHRwaGRcWFBMSERAPDg0MCwoJCQgHBwYGBQUEBAMEAwMDAwICBAICAQGFAakA/wABAI2Ag3/rgISBAYACAgCARkpGRERGSk5TWF1jaG5z8v2DiY2Sl5ugpKissLS3u77BxMfKzc/S1NfZ293f4eLk5ufp6uvs7u/w8fLz9PT19vf3+Pj5+voF+vv7/PwD/P39g/2H/p//iYBIqqSgnpyamJaTkI2JhYH68nRwa2djX1tXU1BMSEVCPzw5NjMxLiwpJyUjIR8dHBoZFxYUExIREA8ODQwLCgkJCAcHBgYFBQQEAwQDAwMDAgIEAgIBAYUBqQD/AAEAjoAEf3+AgOWAiYECAgCASEZBP0BDRktQVlxhZ21z8fyDiI2Sl5ugpKissLS3u77BxMfKzc/S1NfZ293f4eLk5ufp6uvt7u/w8fLz9PX19vf3+Pn5+vr7+wP7/PwD/P39g/2H/pz/jIBIrqikoqCfnZqXlJCMiIT/9XZxbWhkYFxYVFBNSUZCPzw5NjQxLiwqJyUjIR8dHBoZFxYUExIREA8ODQwLCgkJCAcHBgYFBQQEAwQDAwMDAgIEAgIBAYQBqgD/AAEAjoAEf3+AgOKAjIECAgCASEE8Ozw/RElOVFpgZmxyd/qCiI2SlpufpKissLS3u77BxMfKzdDS1NfZ293f4ePk5ufp6uvt7u/w8fLz9PX19vf4+Pn5+vr7+wP7/PwD/P39g/2G/pr/j4BIsquopqWjoZ6bl5OPioaB+XdzbmplYV1ZVVFNSkZDPzw5NzQxLywqJyUjIR8eHBoZFxYUExIREA8ODQwLCgkJCAcHBgYFBQQEAwQDAwMDAgIEAgIBAYQBqgD/AAEAj4ADf4CA34CPgQICAIBIPDc3ODxBR0xTWV9la3F3+YKHjJGWm5+kqKywtLe7vsHEx8rN0NLU19nb3d/h4+Tm5+nq7O3u7/Dx8vP09fb29/j4+fn6+vv7A/v8/AP8/f0E/f3+/oX+mf+QgEi2r6uqqailop+blpKNiIP8eXRva2ZiXllVUU5KRkNAPTo3NDEvLCooJSMhHx4cGhkXFhQTEhEQDw4NDAsKCQkIBwcGBgUFBAQDBAMDAwMCAgQCAgEBhAGqAP8AAQCPgAN/gIDegJCBAgIAgEg4MzI1OT9FS1FYXmRqcHb4gYeMkZabn6SorLC0t7u+wcTHys3Q0tTX2dvd3+Hj5ebo6ers7e7v8PHy8/T19vb3+Pj5+fr6+/sD+/z8A/z9/QT9/f7+hf6Z/5CASLqyr66urKqmop6ZlI+KhP96dXBsZ2NeWlZSTkpHQ0A9Ojc0MS8sKiglIyEfHhwaGRcWFBMSERAPDg0MCwoJCQgHBwYGBQUEBAMEAwMDAwICBAICAQGEAaoA/wABAI+AA3+AgN6AkIECAgCASDMuLjI3PUNJUFddZGpwdnyBh4yRlpqfo6issLO3u77BxMfKzdDS1dfZ293f4ePl5ujp6uzt7u/w8fLz9PX29vf4+Pn5+vr7+wP7/PwD/P39BP39/v6E/pn/kYBKvbazs7KxrqqmoZuWkYuGgHt2cWxoY19aVlJOS0dEQD06NzQxLywqKCYjISAeHBoZFxYUExIREA4ODQwLCgkJCAcHBgYFBQQEAwMEAwMCAgQCAgEBhAGqAP8AAQDvgJGBAgIAgEguKisvNDtBSE9WXGNpb3V7gYaMkZaan6OorLCzt7u+wcTHys3Q0tXX2dvd3+Hj5ebo6evs7e7v8PHy8/T19vb3+Pj5+fr6+/sD+/z8A/z9/QT9/f7+hP6Z/5GASsG5uLi3tbKtqKOdmJKNh4J8d3JtaGRfW1dTT0tHREA9Ojc0Mi8tKigmIyEgHhwaGRcWFBMSERAODQ0MCwoJCQgHBwYGBQUEBAMDBAMDAgIEAgIBAYQBqgD/AAEA74CRgQICAIBKKSUnLDI5QEdOVVxiaW91e4CGi5CVmp+jp6yws7e7vsHEx8rN0NLV19nb3d/h4+Xm6Onr7O3u7/Dx8vP09fb29/j4+fn6+vv7/PwE/Pz9/QT9/f7+hP6Z/5GAA8S9vUe9vLq1sKuln5mUjoiDfXhzbmlkX1tXU09LR0RBPTo3NDIvLSooJiQhIB4cGhkXFhQTEhEQDg0NDAsKCQkIBwcGBgUFBAQDAwQDAwICBAICAQGEAaoA/wABAO+AkYECAgCASiUhJCowOD9GTVRbYmhvdXqAhouQlZqfo6ersLO3u77BxMfKzdDS1dfZ293f4ePl5ujp6+zt7u/w8fLz9PX29vf4+Pn5+vr7+/z8A/z9/YP9hv6Z/5GASsfAwsLBvbmzraehm5WPiYN+eHNuaWRgW1dTT0tIREE+Ojc1Mi8tKigmJCEgHhwaGRcWFBMSEQ8ODQwMCwoJCQgHBwYGBQUEBAMDBAMDAgIEAgIBAYQBqgD/AAEA74CRgQICAIBKIB4hKC82PkVNVFthaG50eoCFi5CVmp+jp6yws7e7vsHEx8rN0NLV19nb3d/h4+Xm6Onr7O3u7/Hy8vP09fb29/j4+fn6+vv7/PwD/P39g/2G/pn/kYBKysTHyMXBu7WvqaKclpCKhH55c25pZWBcV1NPTEhEQT46NzUyLy0qKCYkISAeHBoZFxYUExIREA4NDQwLCgkJCAcHBgYFBQQEAwMDAwICgwKGAaoA/wABAO+AkYECAgCAShsaHyYuNT1FTFNaYWdudHqAhYuQlZqeo6err7O3u77BxMfKzdDS1dfZ293f4ePl5ujp6+zt7u/x8vLz9PX29vf4+Pn5+vr7+/z8A/z9/YP9hv6a/5CASs3Jzc3JxL63saqjnZeQioR/eXRvamVgXFhTT0xIREE+Ozc1Mi8tKigmJCEgHhwaGRcWFBMSERAODQ0MCwoJCQgHBwYGBQUEBAMDAwMCAoMChgGqAP8AAQDwgJCBAgIAgEoXFx0lLTQ8REtTWmFnbnR6gIWLkJWanqOnq6+zt7q+wcTHys3Q0tXX2dvd3+Hj5ebo6evs7e7w8fLz8/T19vf3+Pj5+fr6+/v8/AP8/f0E/f3+/oX+mv+QgErPz9PRzcbAubKrpJ6XkYuFf3p0b2plYFxYVFBMSERBPjs4NTIvLSooJiQiIB4cGhkXFhQTEhEQDg0MDAsKCQkIBwcGBgUFBAQDAwMDAgKDAoYBqgD/AAEA8ICQgQICAIBKExUcJCw0PENLUllgZ210ev+Fi5CVmp6jp6uvs7e6vsHEx8rN0NLV19nb3d/h4+Xm6Onr7O3u8PHy8/P09fb39/j4+fn6+vv7/PwD/P39BP39/v6F/pv/j4BK0dXY1c/JwrqzrKWemJGLhf96dG9qZWFcWFRQTEhEQT47ODUyLy0qKCYkIiAeHBoZFxYUExIRDw4NDAwLCgkICAcHBgYFBQQEAwMDAwICgwKGAaoA/wABAJCAA3+AgN6Aj4ECAgCASg8TGiMrMztDS1JZYGdtdHp/hYqQlZqeo6err7O3ur7BxMfKzdDS1dfZ293f4ePl5ujp6+zt7vDx8vPz9PX29/f4+Pn5+vr7+/z8A/z9/QT9/f7+hf6b/4+AStPb3djSysO7tKyln5iSi4WAenRvamVhXFhUUExIRUE+Ozg1Mi8tKigmJCIgHhwaGRcWFBMSEQ8ODQwMCwoJCAgHBwYGBQUEBAMDAwMCAoMChgGqAP8AAQDxgI+BAgIAgEoMERkiKjM7Q0pSWWBnbXN5f4WKkJWanqOnq6+zt7q+wcTHys3Q0tXX2dvd3+Hj5ebo6evs7e7w8fLz8/T19vf3+Pj5+fr6+/v8/AP8/f0E/f3+/oX+nP+OgErW4uHb08vDvLStpp+YkoyFgHp1b2plYVxYVFBMSEVBPjs4NTIvLSooJiQiIB4cGhkXFhQTEhEPDg0MDAsKCQgIBwcGBgUFBAQDAwMDAgKDAoYBqgD/AAEA8oCOgQICAIBKCRAZISoyO0NKUllgZ21zeX+FipCVmZ6jp6uvs7e6vsHEx8rN0NLV19nb3d/h4+Xm6Onr7O3u8PHy8/P09fb39/j4+fn6+vv7/PwD/P39BP39/v6F/p3/jYBK2+jk3NTMxLy1raafmJKMhoB6dW9qZmFcWFRQTEhFQT47ODUyLy0qKCYkIiAeHBoZFxYUExIRDw4NDAwLCgkICAcHBgYFBQQEAwMDAwICgwKGAaoA/wABAPOAjYECAgCASgcPGCEqMjpCSlJZYGZtc3l/hYqQlZmeo6err7O3ur7BxMfKzdDS1dfZ293f4ePl5ujp6+zt7vDx8vPz9PX29/f4+Pn5+vr7+/z8A/z9/QT9/f7+hf6e/4yASuLs5d3VzcS8ta2mn5mSjIaAenVvamZhXFhUUExIRUE+Ozg1Mi8tKigmJCIgHhwaGRcWFBMSEQ8ODQwMCwoJCAgHBwYGBQUEBAMDAwMCAgQCAgEBhQGqAP8AAQD0gIyBAgIAgEoGDxghKjI6QkpRWWBmbXN5f4WKkJWZnqOnq6+zt7q+wcTHys3Q0tXX2dvd3+Hj5ebo6evs7e7w8fLz8/T19vf3+Pj5+fr6+/v8/AP8/f0E/f3+/oX+nv+MgErs7+fe1c3FvbWupp+ZkoyGgHp1cGpmYVxYVFBMSEVBPjs4NTIvLSooJiQiIB4cGhkXFhQTEhEPDg0MDAsKCQgIBwcGBgUFBAQDAwMDAgIEAgIBAYUBqgD/AAEA9ICMgQICAIBKBQ4YISoyOkJKUVlgZm1zeX+Fio+VmZ6jp6uvs7e6vsHEx8rN0NLV19nb3d/h4+Xm6Onr7O3u8PHy8/P09fb39/j4+fn6+vv7/PwD/P39BP39/v6F/p7/jIBK9PDn3tXNxb21rqafmZKMhoB6dXBqZmFcWFRQTEhFQT47ODUyLy0qKCYkIiAeHBoZFxYUExIRDw4NDAwLCgkICAcHBgYFBQQEAwMDAwICBAICAQGFAaoA/wABAPSAjIECAgCASgUOGCEqMjpCSlFZYGZtc3l/hYqPlZmeo6err7O3ur7BxMfKzdDS1dfZ293f4ePl5ujp6+zt7vDx8vPz9PX29/f4+Pn5+vr7+/z8A/z9/QT9/f7+hf6d/42ASvrx6N7WzcW9ta6mn5mSjIaAenVwamZhXFhUUExIRUE+Ozg1Mi8tKigmJCIgHhwaGRcWFBMSEQ8ODQwMCwoJCAgHBwYGBQUEBAMDAwMCAgQCAgEBhQGqAP8AAQDzgI2BAgIAgEoFDhghKTI6QkpRWWBmbXN5f4WKj5WZnqOnq6+zt7q+wcTHys3Q0tXX2dvd3+Hj5ebo6evs7e7w8fLz8/T19vf3+Pj5+fr6+/v8/AP8/f0E/f3+/oX+ov8IgP+AgP+A//9K+vHn3tbNxb21rqafmZKMhoB6dXBqZmFcWFRQTEhFQT47ODUyLy0qKCYkIiAeHBoZFxYUExIRDw4NDAwLCgkICAcHBgYFBQQEAwMDAwICBAICAQGFAaoA/wABAPiACIGAgYGAgYCA"),r=t.HDRTextureInfo.getHDRInfo(e),a=new t.Texture2D(r.width,r.height,r.format,!1,!1,!1);a.setHDRData(r),a.lock=!0,a.wrapModeU=t.WrapMode.Clamp,a.wrapModeV=t.WrapMode.Clamp,a.anisoLevel=1,this._defaultDFG=a}}class mn{static init(){t.Shader3D.addInclude("BRDF.glsl","#if !defined(BRDF)\n    #define BRDF\n\n// Specular implementations\nfloat D_GGX(float roughness, float NoH, vec3 h, vec3 n)\n{\n    // todo 精度\n    #if !defined(GL_FRAGMENT_PRECISION_HIGH)\n    vec3 NxH = cross(n, h);\n    float oneMinusNoHSquared = dot(NxH, NxH);\n    #else\n    float oneMinusNoHSquared = 1.0 - NoH * NoH;\n    #endif\n\n    float a = NoH * roughness;\n    float k = roughness / (oneMinusNoHSquared + a * a);\n    float d = k * k * INVERT_PI;\n\n    return saturateMediump(d);\n}\n\nfloat D_GGX_Anisotropic(float NoH, const vec3 h, const vec3 t, const vec3 b, float at, float ab)\n{\n    float ToH = dot(t, h);\n    float BoH = dot(b, h);\n    float a2 = at * ab;\n    highp vec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\n    highp float v2 = dot(v, v);\n    float w2 = a2 / v2;\n    return a2 * w2 * w2 * INVERT_PI;\n}\n\nfloat V_SmithGGXCorrelated(float roughness, float NoV, float NoL)\n{\n    float a2 = roughness * roughness;\n    float lambdaV = NoL * sqrt((NoV - a2 * NoV) * NoV + a2);\n    float lambdaL = NoV * sqrt((NoL - a2 * NoL) * NoL + a2);\n    float v = 0.5 / (lambdaV + lambdaL);\n\n    return saturateMediump(v);\n}\n\nfloat V_SmithGGXCorrelated_Anisotropic(float at, float ab, float ToV, float BoV, float ToL, float BoL, float NoV, float NoL)\n{\n    float lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\n    float lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\n    float v = 0.5 / (lambdaV + lambdaL);\n    return saturateMediump(v);\n}\n\nvec3 F_Schlick(vec3 f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\nvec3 F_Schlick(vec3 f0, float VoH)\n{\n    return f0 + (1.0 - f0) * pow5(1.0 - VoH);\n}\n\nfloat F_Schlick(float f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\n// Specular dispatch\n\n// D\nfloat distribution(float roughness, float NoH, vec3 h, vec3 n)\n{\n    return D_GGX(roughness, NoH, h, n);\n}\n\n// V\nfloat visibility(float roughness, float NoV, float NoL)\n{\n    return V_SmithGGXCorrelated(roughness, NoV, NoL);\n}\n\n// F\nvec3 fresnel(vec3 f0, float LoH)\n{\n    float f90 = saturate(dot(f0, vec3(50.0 * 0.33)));\n    return F_Schlick(f0, f90, LoH);\n\n    // return F_Schlick(f0, LoH);\n}\n\n// diffuse BRDF implementations\n\nfloat Fd_Lambert()\n{\n    // return 1.0 / PI;\n    return 1.0;\n}\n\nfloat Fd_Burley(float roughness, float NoV, float NoL, float LoH)\n{\n    float f90 = 0.5 + 2.0 * roughness * LoH * LoH;\n    float lightScatter = F_Schlick(1.0, f90, NoL);\n    float veiwScatter = F_Schlick(1.0, f90, NoV);\n    return lightScatter * veiwScatter;\n}\n\n// diffuse dispatch \nfloat diffuse()\n{\n    return Fd_Lambert();\n}\n\n#endif // BRDF"),t.Shader3D.addInclude("PBRGI.glsl",'#if !defined(pbrGI_lib)\n    #define pbrGI_lib\n\n    #include "globalIllumination.glsl";\n\n    // todo cpu 拼接？\n    #define IBL_ROUGHNESS_LEVEL 4.0\n\nvec2 prefilteredDFG_LUT(float coord, float NoV)\n{\n    return texture2DLodEXT(u_IBLDGF, vec2(NoV, 1.0 - coord), 0.0).rg;\n}\n\nvec2 EnvBRDFApproxLazarov(float roughness, float NoV)\n{\n    vec4 c0 = vec4(-1, -0.0275, -0.572, 0.022);\n    vec4 c1 = vec4(1, 0.0425, 1.04, -0.04);\n    vec4 r = roughness * c0 + c1;\n    float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n    vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n    return AB;\n}\n\nvec3 PBRGI(const in Surface surface, const in PixelInfo info)\n{\n    vec3 indirect = vec3(0.0);\n\n    #ifdef LIGHTMAP\n\n\t#ifdef UV1\n    vec2 lightmapUV = info.lightmapUV;\n    vec3 bakedColor = getBakedLightmapColor(lightmapUV);\n    // todo  surface.diffuseColor ？\n    vec3 Fd = bakedColor;\n\t#endif // UV1\n\n    #else // LIGHTMAP\n\n    vec3 n = info.normalWS;\n    vec3 Fd = diffuseIrradiance(n) * surface.diffuseColor * surface.occlusion * u_AmbientIntensity;\n\n    #endif // LIGHTMAP\n\n    // specular\n    float perceptualRoughness = surface.perceptualRoughness;\n    float NoV = info.NoV;\n    vec2 env = EnvBRDFApproxLazarov(perceptualRoughness, NoV);\n    vec3 f0 = surface.f0;\n    // todo f90 用 1.0 近似 f90\n    float f90 = 1.0;\n    vec3 specularColor = f0 * env.x + f90 * env.y;\n\n    vec3 r = getReflectedVector(surface, info);\n\n    #ifdef SPECCUBE_BOX_PROJECTION\n    r = getBoxProjectionReflectedVector(r, info.positionWS, u_SpecCubeProbePosition, u_SpecCubeBoxMin, u_SpecCubeBoxMax);\n    #endif // SPECCUBE_BOX_PROJECTION\n\n    vec3 indirectSpecular = specularIrradiance(r, perceptualRoughness) * u_ReflectionIntensity;\n\n    vec3 Fr = indirectSpecular * specularColor * surface.occlusion;\n\n    indirect = Fd + Fr;\n\n    return indirect;\n}\n\n#endif // pbrGI_lib'),t.Shader3D.addInclude("PBRCommon.glsl","#if !defined(pbrCommon_lib)\n    #define pbrCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\nvarying vec3 v_NormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef NEEDTBN\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n    #endif // NEEDTBN\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n    vec3 positionWS;\n    vec3 normalWS;\n    vec3 normalTS;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef NEEDTBN\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\t#ifdef ANISOTROPIC\n    float ToV;\n    float BoV;\n\t#endif // ANISOTROPIC\n\n    #endif // NEEDTBN\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n\n    vec3 viewDir;\n    float NoV;\n};\n\n#endif // pbrCommon_lib"),t.Shader3D.addInclude("PBRVertex.glsl",'#if !defined(pbrVertex_lib)\n    #define pbrVertex_lib\n\n    #include "PBRCommon.glsl";\n\nvoid initPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    mat4 worldMat = getWorldMatrix();\n    params.positionWS = (worldMat * vec4(vertex.positionOS, 1.0)).xyz;\n    v_PositionWS = params.positionWS;\n\n    params.normalWS = normalize((worldMat * vec4(vertex.normalOS, 0.0)).xyz);\n    v_NormalWS = params.normalWS;\n\n    #ifdef NEEDTBN\n\t#ifdef TANGENT\n    params.tangentWS = normalize((worldMat * vec4(a_Tangent0.xyz, 0.0)).xyz);\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS) * sign(a_Tangent0.w));\n\t#else // TANGENT\n    params.tangentWS = normalize((worldMat * vec4(1.0, 0.0, 0.0, 0.0)).xyz);\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS));\n\t#endif // TANGENT\n    v_TangentWS = params.tangentWS;\n    v_BiNormalWS = params.biNormalWS;\n    #endif // NEEDTBN\n\n    #ifdef UV\n    params.uv0 = transformUV(vertex.texCoord0, u_TilingOffset);\n    v_Texcoord0 = params.uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = tranformLightMapUV(vertex.texCoord1, u_LightmapScaleOffset);\n    v_Texcoord1 = params.uv1;\n\t#endif LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = a_Color;\n    v_VertexColor = params.vertexColor;\n    #endif // COLOR\n}\n\n#endif // pbrVertex_lib'),t.Shader3D.addInclude("PBRFrag.glsl",'#if !defined(pbrFrag_lib)\n    #define pbrFrag_lib\n\n    #include "PBRLighting.glsl";\n\n    #include "PBRCommon.glsl";\n\nvoid getPixelParams(inout PixelParams params)\n{\n    params.positionWS = v_PositionWS;\n    params.normalWS = normalize(v_NormalWS);\n    params.normalTS = vec3(0.0,0.0,1.0);\n    #ifdef UV\n    params.uv0 = v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = v_VertexColor;\n    #endif // COLOR\n\n    params.viewDir = normalize(u_CameraPos - params.positionWS);\n    // todo NoV varying ?\n    params.NoV = max(abs(dot(params.normalWS, params.viewDir)), MIN_N_DOT_V);\n\n    #ifdef NEEDTBN\n    params.tangentWS = normalize(v_TangentWS);\n    params.biNormalWS = normalize(v_BiNormalWS);\n    mat3 TBN = mat3(params.tangentWS, params.biNormalWS, params.normalWS);\n    params.TBN = TBN;\n    \n\t#ifdef NORMALTEXTURE\n    vec3 normalSampler = texture2D(u_NormalTexture, params.uv0).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    params.normalTS = normalSampler;\n    params.normalWS = normalize(TBN * normalSampler);\n\t// params.normalWS = normalize(TBN * normalSampler);\n\t#endif // NORMALTEXTURE\n\n\t#ifdef TANGENTTEXTURE\n    vec3 tangentSampler = texture2D(u_TangentTexture, params.uv0).rgb;\n    tangentSampler = normalize(tangentSampler * 2.0 - 1.0);\n    params.tangentWS = normalize(TBN * tangentSampler);\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS));\n\t#endif // TANGENTTEXTURE\n\n\t#ifdef ANISOTROPIC\n    params.ToV = dot(params.tangentWS, params.viewDir);\n    params.BoV = dot(params.biNormalWS, params.viewDir);\n\t#endif // ANISOTROPIC\n\n    #endif // NEEDTBN\n}\n\nvoid getPixelInfo(inout PixelInfo info, const in PixelParams pixel)\n{\n    info.positionWS = pixel.positionWS;\n    info.normalWS = pixel.normalWS;\n    info.viewDir = pixel.viewDir;\n    info.NoV = pixel.NoV;\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    info.lightmapUV = pixel.uv1;\n\t#endif // UV1\n    #endif // LIGHTMAP\n\n    #ifdef NEEDTBN\n    info.tangentWS = pixel.tangentWS;\n    info.biNormalWS = pixel.biNormalWS;\n\n\t#ifdef ANISOTROPIC\n    info.ToV = pixel.ToV;\n    info.BoV = pixel.BoV;\n\t#endif // ANISOTROPIC\n\n    #endif // NEEDTBN\n}\n\nvec3 PBRLighting(const in Surface surface, const in PixelParams pixel)\n{\n\n    PixelInfo info;\n    getPixelInfo(info, pixel);\n\n    vec3 lightColor = vec3(0.0);\n    #ifdef DIRECTIONLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= DirectionCount)\n\t\tbreak;\n\t    DirectionLight directionLight = getDirectionLight(i, pixel.positionWS);\n        if (directionLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(directionLight);\n\t    lightColor += PBRLighting(surface, info, light) * light.attenuation;\n\t}\n    #endif // DIRECTIONLIGHT\n\n    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\n    ivec4 clusterInfo = getClusterInfo(u_View, u_Viewport, pixel.positionWS, gl_FragCoord, u_ProjectionParams);\n    #endif // POINTLIGHT || SPOTLIGHT\n\n    #ifdef POINTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.x)\n\t\tbreak;\n\t    PointLight pointLight = getPointLight(i, clusterInfo, pixel.positionWS);\n        if (pointLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(pointLight, pixel.normalWS, pixel.positionWS);\n\t    lightColor += PBRLighting(surface, info, light) * light.attenuation;\n\t}\n    #endif // POINTLIGHT\n\n    #ifdef SPOTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= clusterInfo.y)\n\t\tbreak;\n\t    SpotLight spotLight = getSpotLight(i, clusterInfo, pixel.positionWS);\n        if (spotLight.lightMode == LightMode_Mix)\n\t\t{\n\t\t    continue;\n\t\t}\n\t    Light light = getLight(spotLight, pixel.normalWS, pixel.positionWS);\n\t    lightColor += PBRLighting(surface, info, light) * light.attenuation;\n\t}\n    #endif // SPOTLIGHT\n\n    vec3 giColor = PBRGI(surface, info);\n\n\n    return lightColor + giColor;\n}\n\n#endif // pbrFrag_lib'),t.Shader3D.addInclude("PBRMetallicFrag.glsl",'#include "PBRFrag.glsl";\n\nstruct SurfaceInputs {\n    vec3 diffuseColor;\n    float alpha;\n    float alphaTest;\n    float metallic;\n    float smoothness;\n    float occlusion;\n    vec3 emissionColor;\n    float anisotropy;\n};\n\nvoid initSurface(inout Surface surface, const in SurfaceInputs inputs)\n{\n    surface.alpha = inputs.alpha;\n\n    vec3 baseColor = inputs.diffuseColor;\n    float metallic = inputs.metallic;\n    float perceptualRoughness = 1.0 - inputs.smoothness;\n    float reflectance = 0.5;\n\n    surface.diffuseColor = (1.0 - metallic) * baseColor;\n    surface.perceptualRoughness = clamp(perceptualRoughness, MIN_PERCEPTUAL_ROUGHNESS, 1.0);\n    surface.roughness = surface.perceptualRoughness * surface.perceptualRoughness;\n    surface.f0 = baseColor * metallic + (0.16 * reflectance * reflectance * (1.0 - metallic));\n\n    surface.occlusion = inputs.occlusion;\n#ifdef ANISOTROPIC\n    surface.anisotropy = inputs.anisotropy;\n#endif // ANISOTROPIC\n}\n\nvec4 PBR_Metallic_Flow(const in SurfaceInputs inputs, in PixelParams pixel)\n{\n#ifdef ALPHATEST\n    if (inputs.alpha < inputs.alphaTest)\n\t{\n\t    discard;\n\t}\n#endif // ALPHATEST\n\n    Surface surface;\n    initSurface(surface, inputs);\n\n    vec3 surfaceColor = vec3(0.0);\n\n    surfaceColor += PBRLighting(surface, pixel);\n\n// todo emission calculate\n#ifdef EMISSION\n    surfaceColor += inputs.emissionColor;\n#endif // EMISSION\n\n    return vec4(surfaceColor, surface.alpha);\n}\n'),un.DefaultDfgTexture(),t.SubShader.regIncludeBindUnifrom("PBRGI.glsl",{u_IBLDGF:t.ShaderDataType.Texture2D},{u_IBLDGF:un.defaultDFG})}}class gn{static init(){let e={u_AlbedoColor:t.ShaderDataType.Color,u_TilingOffset:t.ShaderDataType.Vector4,u_NormalScale:t.ShaderDataType.Float,u_Metallic:t.ShaderDataType.Float,u_Smoothness:t.ShaderDataType.Float,u_SmoothnessScale:t.ShaderDataType.Float,u_OcclusionStrength:t.ShaderDataType.Float,u_AlphaTestValue:t.ShaderDataType.Float,u_EmissionColor:t.ShaderDataType.Color,u_EmissionIntensity:t.ShaderDataType.Float,u_AlbedoTexture:t.ShaderDataType.Texture2D,u_NormalTexture:t.ShaderDataType.Texture2D,u_OcclusionTexture:t.ShaderDataType.Texture2D,u_EmissionTexture:t.ShaderDataType.Texture2D,u_MetallicGlossTexture:t.ShaderDataType.Texture2D,u_Anisotropy:t.ShaderDataType.Float,u_TangentTexture:t.ShaderDataType.Texture2D,u_DetailAlbedoTexture:t.ShaderDataType.Texture2D,u_DetailNormalTexture:t.ShaderDataType.Texture2D,u_DetailNormalScale:t.ShaderDataType.Float,u_DetailTillingOffset:t.ShaderDataType.Vector4},r={u_AlbedoColor:t.Color.WHITE,u_TilingOffset:new t.Vector4(1,1,0,0),u_DetailTillingOffset:new t.Vector4(1,1,0,0),u_NormalScale:1,u_DetailNormalScale:1,u_Metallic:0,u_Smoothness:.5,u_SmoothnessScale:1,u_OcclusionStrength:1,u_EmissionColor:t.Color.WHITE,u_EmissionIntensity:1,u_Anisotropy:0},a=t.Shader3D.add("PBR",!0,!0),n=new t.SubShader(t.SubShader.DefaultAttributeMap,e,r);a.addSubShader(n),n.addShaderPass('#define SHADER_NAME PBRStandardVS\n\n#include "Scene.glsl";\n#include "Camera.glsl";\n#include "Sprite3DVertex.glsl";\n\n#include "VertexCommon.glsl";\n\n#include "PBRVertex.glsl";\n\n#if defined(DETAILTEXTURE)||defined(DETAILNORMAL)\n    varying vec2 v_DetailUV;\n#endif\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    #if defined(DETAILTEXTURE)||defined(DETAILNORMAL)\n        #ifdef UV\n            v_DetailUV = transformUV(vertex.texCoord0, u_DetailTillingOffset);\n        #else // UV\n            v_DetailUV = vec2(0.0);\n        #endif\n    #endif\n\n\n    gl_Position = getPositionCS(pixel.positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n}','#define SHADER_NAME PBRStandardFS\n\n#include "Color.glsl";\n\n#include "Scene.glsl";\n#include "Camera.glsl";\n#include "Sprite3DFrag.glsl";\n\n#include "PBRMetallicFrag.glsl"\n\n#if defined(DETAILTEXTURE)|| defined(DETAILNORMAL)\n    varying vec2 v_DetailUV;\n    #define ColorSpaceDouble vec3(4.59479380, 4.59479380, 4.59479380);\n    vec3 BlendNormals(vec3 n1, vec3 n2)\n    {\n        return normalize(vec3(n1.xy + n2.xy, n1.z*n2.z));\n    }\n    \n#endif\n\n#if defined(DETAILNORMAL)||defined(NORMALTEXTURE)\n    vec3 normalScale(vec3 normal,float scale){\n        normal.xy *= scale;    \n        normal.z = sqrt(1.0 - clamp(dot(normal.xy, normal.xy),0.0,1.0));\n        return normal;\n    }\n#endif\n\nvoid initSurfaceInputs(inout SurfaceInputs inputs,inout PixelParams pixel)\n{\n\n#ifdef UV\n    vec2 uv = pixel.uv0;\n#else // UV\n    vec2 uv = vec2(0.0);\n#endif // UV\n    inputs.diffuseColor = u_AlbedoColor.rgb;\n    inputs.alpha = u_AlbedoColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    inputs.diffuseColor *= pixel.vertexColor.xyz;\n    inputs.alpha *= pixel.vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n    inputs.alphaTest = u_AlphaTestValue;\n\n#ifdef ALBEDOTEXTURE\n    vec4 albedoSampler = texture2D(u_AlbedoTexture, uv);\n    #ifdef Gamma_u_AlbedoTexture\n    albedoSampler = gammaToLinear(albedoSampler);\n    #endif // Gamma_u_AlbedoTexture\n    inputs.diffuseColor *= albedoSampler.rgb;\n    inputs.alpha *= albedoSampler.a;\n#endif // ALBEDOTEXTURE\n\n//Detail Albedo\n#ifdef DETAILTEXTURE\n    vec3 detailSampler = texture2D(u_DetailAlbedoTexture,v_DetailUV).rgb;\n    #ifdef Gamma_u_DetailAlbedoTexture\n        detailSampler = gammaToLinear(detailSampler);\n    #endif // Gamma_u_DetailAlbedoTexture\n        detailSampler *= ColorSpaceDouble;\n        inputs.diffuseColor *=detailSampler;\n#endif\n\n#ifdef NORMALTEXTURE\n    vec3 normalTS = pixel.normalTS;\n    pixel.normalTS =normalScale(normalTS,u_NormalScale) ;\n    pixel.normalWS = normalize(pixel.TBN * pixel.normalTS);\n#endif\n\n#ifdef DETAILNORMAL\n    vec3 detailnormalSampler = texture2D(u_DetailNormalTexture, v_DetailUV).rgb;\n    detailnormalSampler = normalize(detailnormalSampler * 2.0 - 1.0);\n    detailnormalSampler.y *= -1.0;\n    detailnormalSampler = normalScale(detailnormalSampler,u_DetailNormalScale);\n    pixel.normalTS = BlendNormals(pixel.normalTS,detailnormalSampler);\n    pixel.normalWS = normalize(pixel.TBN * pixel.normalTS);\n#endif\n\n    inputs.metallic = u_Metallic;\n    inputs.smoothness = u_Smoothness;\n\n#ifdef SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n    inputs.smoothness = u_SmoothnessScale;\n    #ifdef ALBEDOTEXTURE\n    inputs.smoothness *= albedoSampler.a;\n    #endif // ALBEDOTEXTURE\n#endif // SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n\n#ifdef METALLICGLOSSTEXTURE\n\n    vec4 metallicSampler = texture2D(u_MetallicGlossTexture, uv);\n    #ifdef Gamma_u_MetallicGlossTexture\n    metallicSampler = gammaToLinear(metallicSampler);\n    #endif // Gamma_u_MetallicGlossTexture\n\n    inputs.metallic = metallicSampler.x;\n    inputs.smoothness = metallicSampler.w * u_SmoothnessScale;\n\n    #ifdef SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n    inputs.smoothness = u_SmoothnessScale;\n\t#ifdef ALBEDOTEXTURE\n    inputs.smoothness *= albedoSampler.a;\n\t#endif // ALBEDOTEXTURE\n    #endif // SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n\n#endif // METALLICGLOSSTEXTURE\n\n    inputs.occlusion = 1.0;\n#ifdef OCCLUSIONTEXTURE\n    vec4 occlusionSampler = texture2D(u_OcclusionTexture, uv);\n    #ifdef Gamma_u_OcclusionTexture\n    occlusionSampler = gammaToLinear(occlusionSampler);\n    #endif // Gamma_u_OcclusionTexture\n\n    float occlusion = occlusionSampler.g;\n    inputs.occlusion = (1.0 - u_OcclusionStrength) + occlusion * u_OcclusionStrength;\n#endif // OCCLUSIONTEXTURE\n\n#ifdef EMISSION\n    inputs.emissionColor = u_EmissionColor.rgb * u_EmissionIntensity;\n    #ifdef EMISSIONTEXTURE\n    vec4 emissionSampler = texture2D(u_EmissionTexture, uv);\n\t#ifdef Gamma_u_EmissionTexture\n    emissionSampler = gammaToLinear(emissionSampler);\n\t#endif // Gamma_u_EmissionTexture\n    inputs.emissionColor *= emissionSampler.rgb;\n    #endif // EMISSIONTEXTURE\n#endif // EMISSION\n\n#ifdef ANISOTROPIC\n    inputs.anisotropy = u_Anisotropy;\n#endif // ANISOTROPIC\n}\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    SurfaceInputs inputs;\n    initSurfaceInputs(inputs, pixel);\n\n    vec4 surfaceColor = PBR_Metallic_Flow(inputs, pixel);\n    gl_FragColor = surfaceColor;\n}'),n.addShaderPass(sn,on,"ShadowCaster"),n.addShaderPass(hn,cn,"DepthNormal")}}class pn{static init(){let e={a_Position:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_TintColor:t.ShaderDataType.Color,u_Exposure:t.ShaderDataType.Float,u_Rotation:t.ShaderDataType.Float,u_CubeTexture:t.ShaderDataType.TextureCube},a={u_TintColor:new t.Color(.5,.5,.5,.5),u_Exposure:1,u_Rotation:0},n=t.Shader3D.add("SkyBox"),i=new t.SubShader(e,r,a);n.addSubShader(i);let s=i.addShaderPass('#define SHADER_NAME SkyBoxVS\n\n#include "Camera.glsl";\n\nconst float c_deg2ang = 3.141593 / 180.0;\n\nvec4 rotateAroundYInDegrees(vec4 vertex, float deg)\n{\n    float angle = deg * c_deg2ang;\n    float sina = sin(angle);\n    float cosa = cos(angle);\n    mat2 m = mat2(cosa, -sina, sina, cosa);\n    return vec4(m * vertex.xz, vertex.yw).xzyw;\n}\n\nvec4 remapSkyPositionZ(in vec4 position)\n{\n    position.z = position.w;\n    return position;\n}\n\nvarying vec3 v_Texcoord;\n\nvoid main()\n{\n    // todo 这个转换 ？\n    v_Texcoord = vec3(-a_Position.x, a_Position.yz); //转换坐标系\n\n    vec4 position = rotateAroundYInDegrees(a_Position, u_Rotation);\n    // gl_Position = getPositionCS(position.xyz);\n\n    gl_Position = u_ViewProjection * position;\n\n    gl_Position = remapSkyPositionZ(gl_Position);\n}','#define SHADER_NAME SkyBoxFS\n\n#include "Color.glsl";\n\nvarying vec3 v_Texcoord;\n\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvoid main()\n{\n    vec3 uv = v_Texcoord;\n    vec4 cubeSampler = textureCube(u_CubeTexture, uv);\n#ifdef Gamma_u_CubeTexture\n    cubeSampler = gammaToLinear(cubeSampler);\n#endif // Gamma_u_CubeTexture\n\n    vec3 color = cubeSampler.rgb * u_TintColor.rgb * u_Exposure * c_ColorSpace.rgb;\n\n    gl_FragColor = vec4(color, 1.0);\n}');s.renderState.depthTest=t.RenderState.DEPTHTEST_LEQUAL,s.statefirst=!0}}class Sn{static init(){t.Shader3D.addInclude("MathGradient.glsl","float getCurValueFromGradientFloat(in vec2 gradientNumbers[4], in float normalizedAge)\n{\n    float curValue;\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientNumber = gradientNumbers[i];\n\t    float key = gradientNumber.x;\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    vec2 lastGradientNumber = gradientNumbers[i - 1];\n\t\t    float lastKey = lastGradientNumber.x;\n\t\t    float age = (normalizedAge - lastKey) / (key - lastKey);\n\t\t    curValue = mix(lastGradientNumber.y, gradientNumber.y, age);\n\t\t    break;\n\t\t}\n\t}\n    return curValue;\n}\n\nfloat getTotalValueFromGradientFloat(in vec2 gradientNumbers[4],\n    in float normalizedAge)\n{\n    float totalValue = 0.0;\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientNumber = gradientNumbers[i];\n\t    float key = gradientNumber.x;\n\t    vec2 lastGradientNumber = gradientNumbers[i - 1];\n\t    float lastValue = lastGradientNumber.y;\n\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    float lastKey = lastGradientNumber.x;\n\t\t    float age = (normalizedAge - lastKey) / (key - lastKey);\n\t\t    totalValue += (lastValue + mix(lastValue, gradientNumber.y, age)) / 2.0 * a_ShapePositionStartLifeTime.w * (normalizedAge - lastKey);\n\t\t    break;\n\t\t}\n\t    else\n\t\t{\n\t\t    totalValue += (lastValue + gradientNumber.y) / 2.0 * a_ShapePositionStartLifeTime.w * (key - lastGradientNumber.x);\n\t\t}\n\t}\n    return totalValue;\n}\n\nvec4 getColorFromGradient(in vec2 gradientAlphas[COLORCOUNT],\n    in vec4 gradientColors[COLORCOUNT],\n    in float normalizedAge, in vec4 keyRanges)\n{\n    float alphaAge = clamp(normalizedAge, keyRanges.z, keyRanges.w);\n    vec4 overTimeColor;\n    for (int i = 1; i < COLORCOUNT; i++)\n\t{\n\t    vec2 gradientAlpha = gradientAlphas[i];\n\t    float alphaKey = gradientAlpha.x;\n\t    if (alphaKey >= alphaAge)\n\t\t{\n\t\t    vec2 lastGradientAlpha = gradientAlphas[i - 1];\n\t\t    float lastAlphaKey = lastGradientAlpha.x;\n\t\t    float age = (alphaAge - lastAlphaKey) / (alphaKey - lastAlphaKey);\n\t\t    overTimeColor.a = mix(lastGradientAlpha.y, gradientAlpha.y, age);\n\t\t    break;\n\t\t}\n\t}\n\n    float colorAge = clamp(normalizedAge, keyRanges.x, keyRanges.y);\n    for (int i = 1; i < COLORCOUNT; i++)\n\t{\n\t    vec4 gradientColor = gradientColors[i];\n\t    float colorKey = gradientColor.x;\n\t    if (colorKey >= colorAge)\n\t\t{\n\t\t    vec4 lastGradientColor = gradientColors[i - 1];\n\t\t    float lastColorKey = lastGradientColor.x;\n\t\t    float age = (colorAge - lastColorKey) / (colorKey - lastColorKey);\n\t\t    overTimeColor.rgb = mix(gradientColors[i - 1].yzw, gradientColor.yzw, age);\n\t\t    break;\n\t\t}\n\t}\n    return overTimeColor;\n}\n\nfloat getFrameFromGradient(in vec2 gradientFrames[4], in float normalizedAge)\n{\n    float overTimeFrame;\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientFrame = gradientFrames[i];\n\t    float key = gradientFrame.x;\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    vec2 lastGradientFrame = gradientFrames[i - 1];\n\t\t    float lastKey = lastGradientFrame.x;\n\t\t    float age = (normalizedAge - lastKey) / (key - lastKey);\n\t\t    overTimeFrame = mix(lastGradientFrame.y, gradientFrame.y, age);\n\t\t    break;\n\t\t}\n\t}\n    return floor(overTimeFrame);\n}\n"),t.Shader3D.addInclude("particleShuriKenSpriteVS.glsl","// sprite Uniform\nuniform float u_CurrentTime;\nuniform vec3 u_Gravity;\nuniform vec2 u_DragConstanct;\nuniform vec3 u_WorldPosition;\nuniform vec4 u_WorldRotation;\nuniform bool u_ThreeDStartRotation;\nuniform int u_ScalingMode;\nuniform vec3 u_PositionScale;\nuniform vec3 u_SizeScale;\n\nuniform float u_StretchedBillboardLengthScale;\nuniform float u_StretchedBillboardSpeedScale;\nuniform int u_SimulationSpace;\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nuniform int u_VOLSpaceType;\n#endif\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\nuniform vec3 u_VOLVelocityConst;\n#endif\n#if defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nuniform vec2 u_VOLVelocityGradientX[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientY[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientZ[4]; // x为key,y为速度\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\nuniform vec3 u_VOLVelocityConstMax;\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\nuniform vec2 u_VOLVelocityGradientMaxX[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientMaxY[4]; // x为key,y为速度\nuniform vec2 u_VOLVelocityGradientMaxZ[4]; // x为key,y为速度\n#endif\n\n#ifdef COLORKEYCOUNT_8\n    #define COLORCOUNT 8\n#else\n    #define COLORCOUNT 4\n#endif\n\n#ifdef COLOROVERLIFETIME\nuniform vec4 u_ColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\nuniform vec2 u_ColorOverLifeGradientAlphas[COLORCOUNT]; // x为key,y为Alpha\nuniform vec4 u_ColorOverLifeGradientRanges;\n#endif\n#ifdef RANDOMCOLOROVERLIFETIME\nuniform vec4 u_ColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\nuniform vec2 u_ColorOverLifeGradientAlphas[COLORCOUNT]; // x为key,y为Alpha\nuniform vec4 u_ColorOverLifeGradientRanges;\nuniform vec4 u_MaxColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\nuniform vec2 u_MaxColorOverLifeGradientAlphas[COLORCOUNT]; // x为key,y为Alpha\nuniform vec4 u_MaxColorOverLifeGradientRanges;\n#endif\n\n#if defined(SIZEOVERLIFETIMECURVE) || defined(SIZEOVERLIFETIMERANDOMCURVES)\nuniform vec2 u_SOLSizeGradient[4]; // x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\nuniform vec2 u_SOLSizeGradientMax[4]; // x为key,y为尺寸\n#endif\n#if defined(SIZEOVERLIFETIMECURVESEPERATE) || defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\nuniform vec2 u_SOLSizeGradientX[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientY[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientZ[4]; // x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\nuniform vec2 u_SOLSizeGradientMaxX[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientMaxY[4]; // x为key,y为尺寸\nuniform vec2 u_SOLSizeGradientMaxZ[4]; // x为key,y为尺寸\n#endif\n\n#ifdef ROTATIONOVERLIFETIME\n    #if defined(ROTATIONOVERLIFETIMECONSTANT) || defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\nuniform float u_ROLAngularVelocityConst;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\nuniform float u_ROLAngularVelocityConstMax;\n    #endif\n    #if defined(ROTATIONOVERLIFETIMECURVE) || defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nuniform vec2 u_ROLAngularVelocityGradient[4]; // x为key,y为旋转\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\nuniform vec2 u_ROLAngularVelocityGradientMax[4]; // x为key,y为旋转\n    #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n    #if defined(ROTATIONOVERLIFETIMECONSTANT) || defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\nuniform vec3 u_ROLAngularVelocityConstSeprarate;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\nuniform vec3 u_ROLAngularVelocityConstMaxSeprarate;\n    #endif\n    #if defined(ROTATIONOVERLIFETIMECURVE) || defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nuniform vec2 u_ROLAngularVelocityGradientX[4];\nuniform vec2 u_ROLAngularVelocityGradientY[4];\nuniform vec2 u_ROLAngularVelocityGradientZ[4];\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\nuniform vec2 u_ROLAngularVelocityGradientMaxX[4];\nuniform vec2 u_ROLAngularVelocityGradientMaxY[4];\nuniform vec2 u_ROLAngularVelocityGradientMaxZ[4];\nuniform vec2 u_ROLAngularVelocityGradientMaxW[4];\n    #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE) || defined(TEXTURESHEETANIMATIONRANDOMCURVE)\nuniform float u_TSACycles;\nuniform vec2 u_TSASubUVLength;\nuniform vec2 u_TSAGradientUVs[4]; // x为key,y为frame\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\nuniform vec2 u_TSAMaxGradientUVs[4]; // x为key,y为frame\n#endif");let e={a_CornerTextureCoordinate:[yr.PARTICLE_CORNERTEXTURECOORDINATE0,t.ShaderDataType.Vector4],a_MeshPosition:[yr.PARTICLE_POSITION0,t.ShaderDataType.Vector3],a_MeshColor:[yr.PARTICLE_COLOR0,t.ShaderDataType.Vector4],a_MeshTextureCoordinate:[yr.PARTICLE_TEXTURECOORDINATE0,t.ShaderDataType.Vector2],a_ShapePositionStartLifeTime:[yr.PARTICLE_SHAPEPOSITIONSTARTLIFETIME,t.ShaderDataType.Vector4],a_DirectionTime:[yr.PARTICLE_DIRECTIONTIME,t.ShaderDataType.Vector4],a_StartColor:[yr.PARTICLE_STARTCOLOR0,t.ShaderDataType.Vector4],a_StartSize:[yr.PARTICLE_STARTSIZE,t.ShaderDataType.Vector3],a_StartRotation0:[yr.PARTICLE_STARTROTATION,t.ShaderDataType.Vector3],a_StartSpeed:[yr.PARTICLE_STARTSPEED,t.ShaderDataType.Float],a_Random0:[yr.PARTICLE_RANDOM0,t.ShaderDataType.Vector4],a_Random1:[yr.PARTICLE_RANDOM1,t.ShaderDataType.Vector4],a_SimulationWorldPostion:[yr.PARTICLE_SIMULATIONWORLDPOSTION,t.ShaderDataType.Vector3],a_SimulationWorldRotation:[yr.PARTICLE_SIMULATIONWORLDROTATION,t.ShaderDataType.Vector4],a_SimulationUV:[yr.PARTICLE_SIMULATIONUV,t.ShaderDataType.Vector4]},r={u_Tintcolor:t.ShaderDataType.Color,u_texture:t.ShaderDataType.Texture2D,u_TilingOffset:t.ShaderDataType.Vector4},a={u_Tintcolor:new t.Color(.5,.5,.5,.5),u_TilingOffset:new t.Vector4(1,1,0,0)},n=t.Shader3D.add("PARTICLESHURIKEN",!1,!1),i=new t.SubShader(e,r,a);n.addSubShader(i),i.addShaderPass('#define SHADER_NAME ParticleVS\n\n#include "Camera.glsl";\n#include "particleShuriKenSpriteVS.glsl";\n#include "Math.glsl";\n#include "MathGradient.glsl";\n#include "Color.glsl";\n\n#ifdef RENDERMODE_MESH\nvarying vec4 v_MeshColor;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\n//修改这里剔除没有用到的光照函数，增加粒子的编译速度\nvec2 TransformUV(vec2 texcoord, vec4 tilingOffset)\n{\n    vec2 transTexcoord = vec2(texcoord.x, texcoord.y - 1.0) * tilingOffset.xy + vec2(tilingOffset.z, -tilingOffset.w);\n    transTexcoord.y += 1.0;\n    return transTexcoord;\n}\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nvec3 computeParticleLifeVelocity(in float normalizedAge)\n{\n    vec3 outLifeVelocity;\n    #ifdef VELOCITYOVERLIFETIMECONSTANT\n    outLifeVelocity = u_VOLVelocityConst;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMECURVE\n    outLifeVelocity = vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\tgetCurValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    outLifeVelocity = mix(u_VOLVelocityConst,\n\tu_VOLVelocityConstMax,\n\tvec3(a_Random1.y, a_Random1.z, a_Random1.w));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n    outLifeVelocity = vec3(\n\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t    getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX, normalizedAge),\n\t    a_Random1.y),\n\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY, normalizedAge),\n\t    a_Random1.z),\n\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge),\n\t    getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ, normalizedAge),\n\t    a_Random1.w));\n    #endif\n\n    return outLifeVelocity;\n}\n#endif\n\n// drag\nvec3 getStartPosition(vec3 startVelocity, float age, vec3 dragData)\n{\n    vec3 startPosition;\n    float lasttime = min(startVelocity.x / dragData.x, age);\n    startPosition = lasttime * (startVelocity - 0.5 * dragData * lasttime);\n    return startPosition;\n}\n\nvec3 computeParticlePosition(in vec3 startVelocity, in vec3 lifeVelocity, in float age, in float normalizedAge, vec3 gravityVelocity, vec4 worldRotation, vec3 dragData)\n{\n    vec3 startPosition = getStartPosition(startVelocity, age, dragData);\n    vec3 lifePosition;\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n    #ifdef VELOCITYOVERLIFETIMECONSTANT\n    // startPosition = startVelocity * age;\n    lifePosition = lifeVelocity * age;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMECURVE\n    // startPosition = startVelocity * age;\n    lifePosition = vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    // startPosition = startVelocity * age;\n    lifePosition = lifeVelocity * age;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n    // startPosition = startVelocity * age;\n    lifePosition = vec3(\n\tmix(\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX, normalizedAge),\n\t    a_Random1.y),\n\tmix(\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY, normalizedAge),\n\t    a_Random1.z),\n\tmix(\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge),\n\t    getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ, normalizedAge),\n\t    a_Random1.w));\n    #endif\n\n    vec3 finalPosition;\n    if (u_VOLSpaceType == 0)\n\t{\n\t    if (u_ScalingMode != 2)\n\t\tfinalPosition = rotationByQuaternions(\n\t\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition + lifePosition),\n\t\t    worldRotation);\n\t    else\n\t\tfinalPosition = rotationByQuaternions(\n\t\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition + lifePosition,\n\t\t    worldRotation);\n\t}\n    else\n\t{\n\t    if (u_ScalingMode != 2)\n\t\tfinalPosition = rotationByQuaternions(\n\t\t\t\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition),\n\t\t\t\t    worldRotation)\n\t\t    + lifePosition;\n\t    else\n\t\tfinalPosition = rotationByQuaternions(\n\t\t\t\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition,\n\t\t\t\t    worldRotation)\n\t\t    + lifePosition;\n\t}\n#else\n    // startPosition = startVelocity * age;\n    vec3 finalPosition;\n    if (u_ScalingMode != 2)\n\tfinalPosition = rotationByQuaternions(\n\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition),\n\t    worldRotation);\n    else\n\tfinalPosition = rotationByQuaternions(\n\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition,\n\t    worldRotation);\n#endif\n\n    if (u_SimulationSpace == 0)\n\tfinalPosition = finalPosition + a_SimulationWorldPostion;\n    else if (u_SimulationSpace == 1)\n\tfinalPosition = finalPosition + u_WorldPosition;\n\n    finalPosition += 0.5 * gravityVelocity * age;\n\n    return finalPosition;\n}\n\nvec4 computeParticleColor(in vec4 color, in float normalizedAge)\n{\n#ifdef COLOROVERLIFETIME\n    color *= getColorFromGradient(u_ColorOverLifeGradientAlphas,\n\tu_ColorOverLifeGradientColors,\n\tnormalizedAge, u_ColorOverLifeGradientRanges);\n#endif\n\n#ifdef RANDOMCOLOROVERLIFETIME\n    color *= mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,\n\t\t     u_ColorOverLifeGradientColors,\n\t\t     normalizedAge, u_ColorOverLifeGradientRanges),\n\tgetColorFromGradient(u_MaxColorOverLifeGradientAlphas,\n\t    u_MaxColorOverLifeGradientColors,\n\t    normalizedAge, u_MaxColorOverLifeGradientRanges),\n\ta_Random0.y);\n#endif\n\n    return color;\n}\n\nvec2 computeParticleSizeBillbard(in vec2 size, in float normalizedAge)\n{\n#ifdef SIZEOVERLIFETIMECURVE\n    size *= getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge);\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n    size *= mix(getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientMax, normalizedAge),\n\ta_Random0.z);\n#endif\n#ifdef SIZEOVERLIFETIMECURVESEPERATE\n    size *= vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge));\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    size *= vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\t     getCurValueFromGradientFloat(u_SOLSizeGradientMaxX, normalizedAge),\n\t\t     a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxY, normalizedAge),\n\t    a_Random0.z));\n#endif\n    return size;\n}\n\n#ifdef RENDERMODE_MESH\nvec3 computeParticleSizeMesh(in vec3 size, in float normalizedAge)\n{\n    #ifdef SIZEOVERLIFETIMECURVE\n    size *= getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge);\n    #endif\n    #ifdef SIZEOVERLIFETIMERANDOMCURVES\n    size *= mix(getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientMax, normalizedAge),\n\ta_Random0.z);\n    #endif\n    #ifdef SIZEOVERLIFETIMECURVESEPERATE\n    size *= vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientZ, normalizedAge));\n    #endif\n    #ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    size *= vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\t     getCurValueFromGradientFloat(u_SOLSizeGradientMaxX, normalizedAge),\n\t\t     a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxY, normalizedAge),\n\t    a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientZ, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ, normalizedAge),\n\t    a_Random0.z));\n    #endif\n    return size;\n}\n#endif\n\nfloat computeParticleRotationFloat(in float rotation,\n    in float age,\n    in float normalizedAge)\n{\n#ifdef ROTATIONOVERLIFETIME\n    #ifdef ROTATIONOVERLIFETIMECONSTANT\n    float ageRot = u_ROLAngularVelocityConst * age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge);\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    float ageRot = mix(u_ROLAngularVelocityConst, u_ROLAngularVelocityConstMax, a_Random0.w) * age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += mix(\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,\n\t    normalizedAge),\n\ta_Random0.w);\n    #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n    #ifdef ROTATIONOVERLIFETIMECONSTANT\n    float ageRot = u_ROLAngularVelocityConstSeprarate.z * age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\tnormalizedAge);\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    float ageRot = mix(u_ROLAngularVelocityConstSeprarate.z,\n\t\t       u_ROLAngularVelocityConstMaxSeprarate.z,\n\t\t       a_Random0.w)\n\t* age;\n    rotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\t\tnormalizedAge),\n\tgetTotalValueFromGradientFloat(\n\t    u_ROLAngularVelocityGradientMaxZ, normalizedAge),\n\ta_Random0.w);\n    #endif\n#endif\n    return rotation;\n}\n\n#if defined(RENDERMODE_MESH) && (defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE))\nvec3 computeParticleRotationVec3(in vec3 rotation,\n    in float age,\n    in float normalizedAge)\n{\n    #ifdef ROTATIONOVERLIFETIME\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n    float ageRot = u_ROLAngularVelocityConst * age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge);\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    float ageRot = mix(u_ROLAngularVelocityConst, u_ROLAngularVelocityConstMax, a_Random0.w) * age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += mix(\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,\n\t    normalizedAge),\n\ta_Random0.w);\n\t#endif\n    #endif\n    #ifdef ROTATIONOVERLIFETIMESEPERATE\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n    vec3 ageRot = u_ROLAngularVelocityConstSeprarate * age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMECURVE\n    rotation += vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,\n\t\t\t normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,\n\t    normalizedAge),\n\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t    normalizedAge));\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    vec3 ageRot = mix(u_ROLAngularVelocityConstSeprarate,\n\t\t      u_ROLAngularVelocityConstMaxSeprarate,\n\t\t      a_Random0.w)\n\t* age;\n    rotation += ageRot;\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    rotation += vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,\n\t\t\t     normalizedAge),\n\t\t\t getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,\n\t\t\t     normalizedAge),\n\t\t\t a_Random0.w),\n\tmix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,\n\t\tnormalizedAge),\n\t    getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,\n\t\tnormalizedAge),\n\t    a_Random0.w),\n\tmix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\tnormalizedAge),\n\t    getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,\n\t\tnormalizedAge),\n\t    a_Random0.w));\n\t#endif\n    #endif\n    return rotation;\n}\n#endif\n\nvec2 computeParticleUV(in vec2 uv, in float normalizedAge)\n{\n#ifdef TEXTURESHEETANIMATIONCURVE\n    float cycleNormalizedAge = normalizedAge * u_TSACycles;\n    float frame = getFrameFromGradient(\n\tu_TSAGradientUVs, cycleNormalizedAge - floor(cycleNormalizedAge));\n    float totalULength = frame * u_TSASubUVLength.x;\n    float floorTotalULength = floor(totalULength);\n    uv.x += totalULength - floorTotalULength;\n    uv.y += floorTotalULength * u_TSASubUVLength.y;\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n    float cycleNormalizedAge = normalizedAge * u_TSACycles;\n    float uvNormalizedAge = cycleNormalizedAge - floor(cycleNormalizedAge);\n    float frame = floor(mix(getFrameFromGradient(u_TSAGradientUVs, uvNormalizedAge),\n\tgetFrameFromGradient(u_TSAMaxGradientUVs, uvNormalizedAge),\n\ta_Random1.x));\n    float totalULength = frame * u_TSASubUVLength.x;\n    float floorTotalULength = floor(totalULength);\n    uv.x += totalULength - floorTotalULength;\n    uv.y += floorTotalULength * u_TSASubUVLength.y;\n#endif\n    return uv;\n}\n\nvoid main()\n{\n    float age = u_CurrentTime - a_DirectionTime.w;\n    float normalizedAge = age / a_ShapePositionStartLifeTime.w;\n    vec3 lifeVelocity;\n    if (normalizedAge < 1.0)\n\t{\n\t    vec3 startVelocity = a_DirectionTime.xyz * a_StartSpeed;\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    lifeVelocity = computeParticleLifeVelocity(normalizedAge); //计算粒子生命周期速度\n#endif\n\t    vec3 gravityVelocity = u_Gravity * age;\n\n\t    vec4 worldRotation;\n\t    if (u_SimulationSpace == 0)\n\t\tworldRotation = a_SimulationWorldRotation;\n\t    else\n\t\tworldRotation = u_WorldRotation;\n\n\t    // drag\n\t    vec3 dragData = a_DirectionTime.xyz * mix(u_DragConstanct.x, u_DragConstanct.y, a_Random0.x);\n\t    vec3 center = computeParticlePosition(startVelocity, lifeVelocity, age, normalizedAge, gravityVelocity, worldRotation, dragData); //计算粒子位置\n\n#ifdef SPHERHBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    vec3 cameraUpVector = normalize(u_CameraUp); // TODO:是否外面归一化\n\t    vec3 sideVector = normalize(cross(u_CameraDirection, cameraUpVector));\n\t    vec3 upVector = normalize(cross(sideVector, u_CameraDirection));\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n    #if defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE)\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    vec3 rotation = vec3(\n\t\t\ta_StartRotation0.xy,\n\t\t\tcomputeParticleRotationFloat(a_StartRotation0.z, age, normalizedAge));\n\t\t    center += u_SizeScale.xzy * rotationByEuler(corner.x * sideVector + corner.y * upVector, rotation);\n\t\t}\n\t    else\n\t\t{\n\t\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t\t    float c = cos(rot);\n\t\t    float s = sin(rot);\n\t\t    mat2 rotation = mat2(c, -s, s, c);\n\t\t    corner = rotation * corner;\n\t\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * upVector);\n\t\t}\n    #else\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    center += u_SizeScale.xzy * rotationByEuler(corner.x * sideVector + corner.y * upVector, a_StartRotation0);\n\t\t}\n\t    else\n\t\t{\n\t\t    float c = cos(a_StartRotation0.x);\n\t\t    float s = sin(a_StartRotation0.x);\n\t\t    mat2 rotation = mat2(c, -s, s, c);\n\t\t    corner = rotation * corner;\n\t\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * upVector);\n\t\t}\n    #endif\n#endif\n\n#ifdef STRETCHEDBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    vec3 velocity;\n    #if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    if (u_VOLSpaceType == 0)\n\t\tvelocity = rotationByQuaternions(u_SizeScale * (startVelocity + lifeVelocity),\n\t\t\t       worldRotation)\n\t\t    + gravityVelocity;\n\t    else\n\t\tvelocity = rotationByQuaternions(u_SizeScale * startVelocity, worldRotation) + lifeVelocity + gravityVelocity;\n    #else\n\t    velocity = rotationByQuaternions(u_SizeScale * startVelocity, worldRotation) + gravityVelocity;\n    #endif\n\t    vec3 cameraUpVector = normalize(velocity);\n\t    vec3 direction = normalize(center - u_CameraPos);\n\t    vec3 sideVector = normalize(cross(direction, normalize(velocity)));\n\n\t    sideVector = u_SizeScale.xzy * sideVector;\n\t    cameraUpVector = length(vec3(u_SizeScale.x, 0.0, 0.0)) * cameraUpVector;\n\n\t    vec2 size = computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\n\t    const mat2 rotaionZHalfPI = mat2(0.0, -1.0, 1.0, 0.0);\n\t    corner = rotaionZHalfPI * corner;\n\t    corner.y = corner.y - abs(corner.y);\n\n\t    float speed = length(velocity); // TODO:\n\t    center += sign(u_SizeScale.x) * (sign(u_StretchedBillboardLengthScale) * size.x * corner.x * sideVector + (speed * u_StretchedBillboardSpeedScale + size.y * u_StretchedBillboardLengthScale) * corner.y * cameraUpVector);\n#endif\n\n#ifdef HORIZONTALBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    const vec3 cameraUpVector = vec3(0.0, 0.0, 1.0);\n\t    const vec3 sideVector = vec3(-1.0, 0.0, 0.0);\n\n\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t    float c = cos(rot);\n\t    float s = sin(rot);\n\t    mat2 rotation = mat2(c, -s, s, c);\n\t    corner = rotation * corner * cos(0.78539816339744830961566084581988); // TODO:临时缩小cos45,不确定U3D原因\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * cameraUpVector);\n#endif\n\n#ifdef VERTICALBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    const vec3 cameraUpVector = vec3(0.0, 1.0, 0.0);\n\t    vec3 sideVector = normalize(cross(u_CameraDirection, cameraUpVector));\n\n\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t    float c = cos(rot);\n\t    float s = sin(rot);\n\t    mat2 rotation = mat2(c, -s, s, c);\n\t    corner = rotation * corner * cos(0.78539816339744830961566084581988); // TODO:临时缩小cos45,不确定U3D原因\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * cameraUpVector);\n#endif\n\n#ifdef RENDERMODE_MESH\n\t    vec3 size = computeParticleSizeMesh(a_StartSize, normalizedAge);\n    #if defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE)\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    vec3 rotation = vec3(\n\t\t\ta_StartRotation0.xy,\n\t\t\tcomputeParticleRotationFloat(a_StartRotation0.z, age, normalizedAge));\n\t\t    center += rotationByQuaternions(\n\t\t\tu_SizeScale * rotationByEuler(a_MeshPosition * size, rotation),\n\t\t\tworldRotation);\n\t\t}\n\t    else\n\t\t{\n\t#ifdef ROTATIONOVERLIFETIME\n\t\t    float angle = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t\t    if (a_ShapePositionStartLifeTime.x != 0.0 || a_ShapePositionStartLifeTime.y != 0.0)\n\t\t\t{\n\t\t\t    center += (rotationByQuaternions(\n\t\t\t\trotationByAxis(\n\t\t\t\t    u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    normalize(cross(vec3(0.0, 0.0, 1.0),\n\t\t\t\t\tvec3(a_ShapePositionStartLifeTime.xy, 0.0))),\n\t\t\t\t    angle),\n\t\t\t\tworldRotation)); //已验证\n\t\t\t}\n\t\t    else\n\t\t\t{\n\t    #ifdef SHAPE\n\t\t\t    center += u_SizeScale.xzy * (rotationByQuaternions(rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), angle), worldRotation));\n\t    #else\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += rotationByAxis(u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    vec3(0.0, 0.0, -1.0),\n\t\t\t\t    angle); //已验证\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, 0.0, -1.0), angle),\n\t\t\t\t    worldRotation); //已验证\n\t    #endif\n\t\t\t}\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t    // TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\n\t\t    vec3 angle = computeParticleRotationVec3(\n\t\t\tvec3(0.0, 0.0, -a_StartRotation0.x), age, normalizedAge);\n\t\t    center += (rotationByQuaternions(\n\t\t\trotationByEuler(u_SizeScale * a_MeshPosition * size,\n\t\t\t    vec3(angle.x, angle.y, angle.z)),\n\t\t\tworldRotation)); //已验证\n\t#endif\n\t\t}\n    #else\n\t    if (u_ThreeDStartRotation)\n\t\t{\n\t\t    center += rotationByQuaternions(\n\t\t\tu_SizeScale * rotationByEuler(a_MeshPosition * size, a_StartRotation0),\n\t\t\tworldRotation); //已验证\n\t\t}\n\t    else\n\t\t{\n\t\t    if (a_ShapePositionStartLifeTime.x != 0.0 || a_ShapePositionStartLifeTime.y != 0.0)\n\t\t\t{\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += rotationByAxis(\n\t\t\t\t    u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    normalize(cross(vec3(0.0, 0.0, 1.0),\n\t\t\t\t\tvec3(a_ShapePositionStartLifeTime.xy, 0.0))),\n\t\t\t\t    a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += (rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, normalize(cross(vec3(0.0, 0.0, 1.0), vec3(a_ShapePositionStartLifeTime.xy, 0.0))), a_StartRotation0.x),\n\t\t\t\t    worldRotation)); //已验证\n\t\t\t}\n\t\t    else\n\t\t\t{\n\t#ifdef SHAPE\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), a_StartRotation0.x),\n\t\t\t\t    worldRotation);\n\t#else\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += rotationByAxis(u_SizeScale * a_MeshPosition * size,\n\t\t\t\t    vec3(0.0, 0.0, -1.0),\n\t\t\t\t    a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, 0.0, -1.0), a_StartRotation0.x),\n\t\t\t\t    worldRotation); //已验证\n\t#endif\n\t\t\t}\n\t\t}\n    #endif\n\t    v_MeshColor = a_MeshColor;\n#endif\n\t    gl_Position = u_Projection * u_View * vec4(center, 1.0);\n\t\tvec4 startcolor = gammaToLinear(a_StartColor);\n\t    v_Color = computeParticleColor(startcolor, normalizedAge);\n#ifdef DIFFUSEMAP\n\t    vec2 simulateUV;\n    #if defined(SPHERHBILLBOARD) || defined(STRETCHEDBILLBOARD) || defined(HORIZONTALBILLBOARD) || defined(VERTICALBILLBOARD)\n\t    simulateUV = a_SimulationUV.xy + a_CornerTextureCoordinate.zw * a_SimulationUV.zw;\n\t    v_TextureCoordinate = computeParticleUV(simulateUV, normalizedAge);\n    #endif\n    #ifdef RENDERMODE_MESH\n\t    simulateUV = a_SimulationUV.xy + a_MeshTextureCoordinate * a_SimulationUV.zw;\n\t    v_TextureCoordinate = computeParticleUV(simulateUV, normalizedAge);\n    #endif\n\t    v_TextureCoordinate = TransformUV(v_TextureCoordinate, u_TilingOffset);\n#endif\n\t}\n    else\n\t{\n\t    gl_Position = vec4(2.0, 2.0, 2.0, 1.0); // Discard use out of X(-1,1),Y(-1,1),Z(0,1)\n\t}\n    gl_Position = remapPositionZ(gl_Position);\n}\n','#define SHADER_NAME ParticleFS\n\n#include "Scene.glsl";\n#include "SceneFog.glsl";\n#include "Color.glsl";\n\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n// uniform sampler2D u_texture;\n// uniform vec4 u_Tintcolor;\n\n#ifdef RENDERMODE_MESH\nvarying vec4 v_MeshColor;\n#endif\n\nvoid main()\n{\n    vec4 color;\n#ifdef RENDERMODE_MESH\n    color = v_MeshColor;\n#else\n    color = vec4(1.0);\n#endif\n\n#ifdef DIFFUSEMAP\n    vec4 colorT = texture2D(u_texture, v_TextureCoordinate);\n    #ifdef Gamma_u_texture\n        colorT = gammaToLinear(colorT);\n    #endif // Gamma_u_SpecularTexture\n    #ifdef TINTCOLOR\n    color *= colorT * u_Tintcolor * c_ColorSpace * v_Color;\n    #else\n    color *= colorT * v_Color;\n    #endif // TINTCOLORd\n#else\n    #ifdef TINTCOLOR\n    color *= u_Tintcolor * c_ColorSpace * v_Color;\n    #else\n    color *= v_Color;\n    #endif // TINTCOLOR\n#endif\n\n#ifdef FOG\n    color.rgb = scenUnlitFog(color.rgb);\n#endif // FOG\n    gl_FragColor = color;\n\n}')}}class Tn{static init(){let e={a_Position:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_SunSize:t.ShaderDataType.Float,u_SunSizeConvergence:t.ShaderDataType.Float,u_AtmosphereThickness:t.ShaderDataType.Float,u_SkyTint:t.ShaderDataType.Color,u_GroundTint:t.ShaderDataType.Color,u_Exposure:t.ShaderDataType.Float},a={u_SunSize:.04,u_SunSizeConvergence:5,u_AtmosphereThickness:1,u_SkyTint:new t.Color(.5,.5,.5,1),u_GroundTint:new t.Color(.369,.349,.341,1),u_Exposure:1.3},n=t.Shader3D.add("SkyProcedural"),i=new t.SubShader(e,r,a);n.addSubShader(i);let s=i.addShaderPass("#define SHADER_NAME SkyProceduralVS\n\n#include \"Camera.glsl\";\n\nconst float c_deg2ang = 3.141593 / 180.0;\n\n#define OUTER_RADIUS 1.025\n#define RAYLEIGH (mix(0.0, 0.0025, pow(u_AtmosphereThickness,2.5)))// Rayleigh constant Rayleigh为夜空光和极光亮度单位\n#define MIE 0.0010             // Mie constant 米氏散射\n#define SUN_BRIGHTNESS 20.0    // Sun brightness\n#define MAX_SCATTER 50.0 // Maximum scattering value, to prevent math overflows on Adrenos\n\nconst float SKY_GROUND_THRESHOLD = 0.02;\nconst float outerRadius = OUTER_RADIUS;\nconst float outerRadius2 = OUTER_RADIUS*OUTER_RADIUS;\nconst float innerRadius = 1.0;\nconst float innerRadius2 = 1.0;\nconst float cameraHeight = 0.0001;\n\nconst float HDSundiskIntensityFactor = 15.0;\nconst float simpleSundiskIntensityFactor = 27.0;\n\nconst float sunScale = 400.0 * SUN_BRIGHTNESS;\nconst float kmESun = MIE * SUN_BRIGHTNESS;\nconst float km4PI = MIE * 4.0 * 3.14159265;\nconst float scale = 1.0 / (OUTER_RADIUS - 1.0);\nconst float scaleDepth = 0.25;\nconst float scaleOverScaleDepth = (1.0 / (OUTER_RADIUS - 1.0)) / 0.25;\nconst float samples = 2.0; // THIS IS UNROLLED MANUALLY, DON'T TOUCH\n\n// RGB wavelengths        .35 (.62=158), .43 (.68=174), .525 (.75=190)\nconst vec3 c_DefaultScatteringWavelength = vec3(0.65, 0.57, 0.475);//默认散射波长\nconst vec3 c_VariableRangeForScatteringWavelength = vec3(0.15, 0.15, 0.15);//散射播放的可变范围\n\n// uniform vec4 u_SkyTint;\n// uniform vec4 u_GroundTint;\n// uniform float u_Exposure;\n// uniform float u_AtmosphereThickness;\nvec4 skyRemapGLPositionZ(vec4 position){\n\tposition.z = position.w;\n\treturn position;\n}\n//sprite\nuniform vec3 u_SunLight_direction;\nuniform vec4 u_SunLight_color;\n\nvarying vec3 v_GroundColor;\nvarying vec3 v_SkyColor;\n\n#ifdef SUN_HIGH_QUALITY\n\tvarying vec3 v_Vertex;\n#elif defined(SUN_SIMPLE)\n\tvarying vec3 v_RayDir;\n#else\n\tvarying float v_SkyGroundFactor;\n#endif\n\n#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\tvarying vec3 v_SunColor;\n#endif\n\n// Calculates the Rayleigh phase function\nfloat getRayleighPhase(vec3 light, vec3 ray) \n{\n\tfloat eyeCos = dot(light, ray);\n\treturn 0.75 + 0.75*eyeCos*eyeCos;\n}\n\nfloat scaleAngle(float inCos)\n{\n\tfloat x = 1.0 - inCos;\n\treturn 0.25 * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\n\n\nvoid main(){\n    gl_Position = u_ViewProjection*a_Position;\n\n    vec3 skyTintInGammaSpace = pow(u_SkyTint.xyz,vec3(0.45));//u_SkyTint.xyz;//支持非GAMMA空间后要调整\n\tvec3 scatteringWavelength = mix(c_DefaultScatteringWavelength-c_VariableRangeForScatteringWavelength,c_DefaultScatteringWavelength+c_VariableRangeForScatteringWavelength,vec3(1.0) - skyTintInGammaSpace); // using Tint in sRGB+ gamma allows for more visually linear interpolation and to keep (0.5) at (128, gray in sRGB) point\n\tvec3 invWavelength = 1.0 / pow(scatteringWavelength, vec3(4.0));\n\n\tfloat krESun = RAYLEIGH * SUN_BRIGHTNESS;\n\tfloat kr4PI = RAYLEIGH * 4.0 * 3.14159265;\n\n\tvec3 cameraPos = vec3(0.0,innerRadius + cameraHeight,0.0); // The camera's current position\n\n\t// Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n\tvec3 eyeRay = normalize(a_Position.xyz);\n\n\tfloat far = 0.0;\n\tvec3 cIn, cOut;\n\tif (eyeRay.y >= 0.0) {// Sky\n\t\t// Calculate the length of the \"atmosphere\"\n\t\tfar = sqrt(outerRadius2 + innerRadius2 * eyeRay.y * eyeRay.y - innerRadius2) - innerRadius * eyeRay.y;\n\n\t\t// Calculate the ray's starting position, then calculate its scattering offset\n\t\tfloat height = innerRadius + cameraHeight;\n\t\tfloat depth = exp(scaleOverScaleDepth * -cameraHeight);\n\t\tfloat startAngle = dot(eyeRay, cameraPos) / height;\n\t\tfloat startOffset = depth*scaleAngle(startAngle);\n\n\t\t// Initialize the scattering loop variables\n\t\tfloat sampleLength = far / samples;\n\t\tfloat scaledLength = sampleLength * scale;\n\t\tvec3 sampleRay = eyeRay * sampleLength;\n\t\tvec3 samplePoint = cameraPos + sampleRay * 0.5;\n\n\t\tvec3 frontColor = vec3(0.0);\n\t\t//unrolling this manually to avoid some platform for loop slow\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat lightAngle = dot(-u_SunLight_direction, samplePoint) / height;\n\t\t\tfloat cameraAngle = dot(eyeRay, samplePoint) / height;\n\t\t\tfloat scatter = (startOffset + depth*(scaleAngle(lightAngle) - scaleAngle(cameraAngle)));\n\t\t\tvec3 attenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat lightAngle = dot(-u_SunLight_direction, samplePoint) / height;\n\t\t\tfloat cameraAngle = dot(eyeRay, samplePoint) / height;\n\t\t\tfloat scatter = (startOffset + depth*(scaleAngle(lightAngle) - scaleAngle(cameraAngle)));\n\t\t\tvec3 attenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\n\t\t// Finally, scale the Mie and Rayleigh colors and set up the varying variables for the pixel shader\n\t\tcIn = frontColor * (invWavelength * krESun);\n\t\tcOut = frontColor * kmESun;\n\t} else {// Ground\n\t\tfar = (-cameraHeight) / (min(-0.001, eyeRay.y));\n\t\tvec3 pos = cameraPos + far * eyeRay;\n\n\t\t// Calculate the ray's starting position, then calculate its scattering offset\n\t\tfloat depth = exp((-cameraHeight) * (1.0/scaleDepth));\n\t\tfloat cameraAngle = dot(-eyeRay, pos);\n\t\tfloat lightAngle = dot(-u_SunLight_direction, pos);\n\t\tfloat cameraScale = scaleAngle(cameraAngle);\n\t\tfloat lightScale = scaleAngle(lightAngle);\n\t\tfloat cameraOffset = depth*cameraScale;\n\t\tfloat temp = lightScale + cameraScale;\n\n\t\t// Initialize the scattering loop variables\n\t\tfloat sampleLength = far / samples;\n\t\tfloat scaledLength = sampleLength * scale;\n\t\tvec3 sampleRay = eyeRay * sampleLength;\n\t\tvec3 samplePoint = cameraPos + sampleRay * 0.5;\n\n\t\t// Now loop through the sample rays\n\t\tvec3 frontColor = vec3(0.0, 0.0, 0.0);\n\t\tvec3 attenuate;\n\n\t\t// Loop removed because we kept hitting SM2.0 temp variable limits. Doesn't affect the image too much.\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat scatter = depth*temp - cameraOffset;\n\t\t\tattenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\n\t\tcIn = frontColor * (invWavelength * krESun + kmESun);\n\t\tcOut = clamp(attenuate, 0.0, 1.0);\n\t}\n\n\t#ifdef SUN_HIGH_QUALITY\n\t\tv_Vertex = -a_Position.xyz;\n\t#elif defined(SUN_SIMPLE) \n\t\tv_RayDir = -eyeRay;\n\t#else\n\t\tv_SkyGroundFactor = -eyeRay.y / SKY_GROUND_THRESHOLD;\n\t#endif\n\n\t// if we want to calculate color in vprog:\n\t// in case of linear: multiply by _Exposure in here (even in case of lerp it will be common multiplier, so we can skip mul in fshader)\n\tv_GroundColor = u_Exposure * (cIn + u_GroundTint.xyz * cOut);//u_GroundColor*u_GroundColor is gamma space convert to linear space\n\tv_SkyColor    = u_Exposure * (cIn * getRayleighPhase(-u_SunLight_direction, -eyeRay));\n\n\t\n\t// The sun should have a stable intensity in its course in the sky. Moreover it should match the highlight of a purely specular material.\n\t// This matching was done using the Unity3D standard shader BRDF1 on the 5/31/2017\n\t// Finally we want the sun to be always bright even in LDR thus the normalization of the lightColor for low intensity.\n\tfloat lightColorIntensity = clamp(length(u_SunLight_color.xyz), 0.25, 1.0);\n\n\t#ifdef SUN_HIGH_QUALITY \n\t\tv_SunColor = HDSundiskIntensityFactor * clamp(cOut,0.0,1.0) * u_SunLight_color.xyz / lightColorIntensity;\n\t#elif defined(SUN_SIMPLE) \n\t\tv_SunColor = simpleSundiskIntensityFactor * clamp(cOut * sunScale,0.0,1.0) * u_SunLight_color.xyz / lightColorIntensity;\n\t#endif\n\tgl_Position=skyRemapGLPositionZ(gl_Position);\n}","#define SHADER_NAME SkyProceduralFS\n\nconst float MIE_G = -0.990;\nconst float MIE_G2 = 0.9801;\nconst float SKY_GROUND_THRESHOLD = 0.02;\n\n// uniform float u_SunSize;\n// uniform float u_SunSizeConvergence;\n\nuniform vec3 u_SunLight_direction;\n\nvarying vec3 v_GroundColor;\nvarying vec3 v_SkyColor;\n\n\n#ifdef SUN_HIGH_QUALITY\n\tvarying vec3 v_Vertex;\n#elif defined(SUN_SIMPLE)\n\tvarying vec3 v_RayDir;\n#else\n\tvarying float v_SkyGroundFactor;\n#endif\n\n#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\tvarying vec3 v_SunColor;\n#endif\n\n// Calculates the Mie phase function\nfloat getMiePhase(float eyeCos, float eyeCos2) {\n\tfloat temp = 1.0 + MIE_G2 - 2.0 * MIE_G * eyeCos;\n\ttemp = pow(temp, pow(u_SunSize,0.65) * 10.0);\n\ttemp = max(temp,1.0e-4); // prevent division by zero, esp. in half precision\n\ttemp = 1.5 * ((1.0 - MIE_G2) / (2.0 + MIE_G2)) * (1.0 + eyeCos2) / temp;\n\treturn temp;\n}\n\n// Calculates the sun shape\nfloat calcSunAttenuation(vec3 lightPos, vec3 ray) {\n\t#ifdef SUN_HIGH_QUALITY\n\t\tfloat focusedEyeCos = pow(clamp(dot(lightPos, ray),0.0,1.0), u_SunSizeConvergence);\n\t\treturn getMiePhase(-focusedEyeCos, focusedEyeCos * focusedEyeCos);\n\t#else //SUN_SIMPLE\n\t\tvec3 delta = lightPos - ray;\n\t\tfloat dist = length(delta);\n\t\tfloat spot = 1.0 - smoothstep(0.0, u_SunSize, dist);\n\t\treturn spot * spot;\n\t#endif\n}\n\nvoid main() {\n\t// if y > 1 [eyeRay.y < -SKY_GROUND_THRESHOLD] - ground\n\t// if y >= 0 and < 1 [eyeRay.y <= 0 and > -SKY_GROUND_THRESHOLD] - horizon\n\t// if y < 0 [eyeRay.y > 0] - sky\n\tvec3 col = vec3(0.0, 0.0, 0.0);\n\n\t#ifdef SUN_HIGH_QUALITY\n\t\tvec3 ray = normalize(v_Vertex);\n\t\tfloat y = ray.y / SKY_GROUND_THRESHOLD;\n\t#elif defined(SUN_SIMPLE) \n\t\tvec3 ray = v_RayDir;\n\t\tfloat y = ray.y / SKY_GROUND_THRESHOLD;\t\n\t#else\n\t\tfloat y = v_SkyGroundFactor;\n\t#endif\n\n\t// if we did precalculate color in vprog: just do lerp between them\n\tcol = mix(v_SkyColor, v_GroundColor, clamp(y,0.0,1.0));\n\n\t#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\t\tif (y < 0.0)\n\t\t\tcol += v_SunColor * calcSunAttenuation(-u_SunLight_direction, -ray);\n\t#endif\n\n\t//col = sqrt(col);//linear space convert to gamma space\n\tgl_FragColor=vec4(col,1.0);\n}\n");s.renderState.depthTest=t.RenderState.DEPTHTEST_LEQUAL,s.statefirst=!0}}class En{static init(){let e={a_Position:[t.VertexMesh.MESH_POSITION0,t.ShaderDataType.Vector4]},r={u_TintColor:t.ShaderDataType.Color,u_Rotation:t.ShaderDataType.Float,u_Texture:t.ShaderDataType.Texture2D,u_Exposure:t.ShaderDataType.Float},a={u_TintColor:new t.Color(.5,.5,.5,1),u_Exposure:1.3,u_Rotation:0,u_Texture:t.Texture2D.grayTexture},n=t.Shader3D.add("SkyPanoramic"),i=new t.SubShader(e,r,a);n.addSubShader(i);let s=i.addShaderPass('#define SHADER_NAME SkyPanoramicVS\n\n#include "Camera.glsl";\n#define PI 3.14159265359\n\n//attribute vec4 a_Position;\n\n//uniform float u_Rotation;\n\nvarying vec3 v_Texcoord;\nvarying vec2 v_Image180ScaleAndCutoff;\nvarying vec4 v_Layout3DScaleAndOffset;\n\nvec4 skyRemapGLPositionZ(vec4 position){\n\tposition.z = position.w;\n\treturn position;\n}\n\nvec4 rotateAroundYInDegrees (vec4 vertex, float degrees)\n{\n\tfloat angle = degrees * PI / 180.0;\n\tfloat sina=sin(angle);\n\tfloat cosa=cos(angle);\n\tmat2 m = mat2(cosa, -sina, sina, cosa);\n\treturn vec4(m*vertex.xz, vertex.yw).xzyw;\n}\n\t\nvoid main()\n{\n\tvec4 position = rotateAroundYInDegrees(a_Position, u_Rotation);\n\t\n\n\tv_Texcoord=vec3(-a_Position.x,-a_Position.y,a_Position.z);// NOTE: -a_Position.x convert coords system\n\n\t// Calculate constant horizontal scale and cutoff for 180 (vs 360) image type\n\tv_Image180ScaleAndCutoff = vec2(1.0, 1.0);// 360 degree mode\n\n\t// Calculate constant scale and offset for 3D layouts\n\tv_Layout3DScaleAndOffset = vec4(0,0,1,1);\n\tgl_Position = u_ViewProjection*position;\n\tgl_Position=skyRemapGLPositionZ(gl_Position);\n\n}\n',"#define SHADER_NAME SkyPanoramicVS\n\n#define PI 3.14159265359\n\nvarying vec3 v_Texcoord;\nvarying vec2 v_Image180ScaleAndCutoff;\nvarying vec4 v_Layout3DScaleAndOffset;\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvec2 ToRadialCoords(vec3 coords)\n{\n    vec3 normalizedCoords = normalize(coords);\n    float latitude = acos(normalizedCoords.y);\n    float longitude = atan(normalizedCoords.z, normalizedCoords.x);\n    vec2 sphereCoords = vec2(longitude, latitude) * vec2(0.5 / PI, 1.0 / PI);\n    return vec2(0.5, 1.0) - sphereCoords;\n}\n\nvoid main()\n{\n    vec2 tc = ToRadialCoords(v_Texcoord);\n    if (tc.x > v_Image180ScaleAndCutoff.y)\n\tgl_FragColor = vec4(0, 0, 0, 1);\n    tc.x = mod(tc.x * v_Image180ScaleAndCutoff.x, 1.0);\n    tc = (tc + v_Layout3DScaleAndOffset.xy) * v_Layout3DScaleAndOffset.zw;\n\n    mediump vec4 tex = texture2D(u_Texture, tc);\n    mediump vec3 c = tex.xyz;\n    c = c * u_TintColor.rgb * c_ColorSpace.rgb;\n    c *= u_Exposure;\n    gl_FragColor = vec4(c, 1.0);\n}\n");s.renderState.depthTest=t.RenderState.DEPTHTEST_LEQUAL,s.statefirst=!0}}class An{static init(){t.Shader3D.addInclude("ACES_UtillitiesColor.glsl","#if !defined(UtillitiesColor_lib)\n#define UtillitiesColor_lib\n\n// Transformations between CIE XYZ tristimulus values and CIE x,y\n// chromaticity coordinates\nvec3 XYZ_2_xyY(vec3 XYZ)\n{\n    vec3 xyY;\n    float divisor = max(XYZ.x + XYZ.y + XYZ.z, 1e-10);\n    xyY.x = XYZ.x / divisor;\n    xyY.y = XYZ.y / divisor;\n    xyY.z = XYZ.y;\n    return xyY;\n}\n\nvec3 xyY_2_XYZ(vec3 xyY)\n{\n    vec3 XYZ;\n    XYZ.x = xyY.x * xyY.z / max(xyY.y, 1e-10);\n    XYZ.y = xyY.z;\n    XYZ.z = (1.0 - xyY.x - xyY.y) * xyY.z / max(xyY.y, 1e-10);\n    return XYZ;\n}\n\nfloat rgb_2_yc(vec3 rgb, float ycRadiusWeight)\n{\n    float r = rgb.r;\n    float g = rgb.g;\n    float b = rgb.b;\n    float k = b * (b - g) + g * (g - r) + r * (r - b);\n    k = max(MEDIUMP_FLT_MIN, k);\n    float chroma = sqrt(k);\n    return (b + g + r + ycRadiusWeight * chroma) / 3.0;\n}\n\nfloat rgb_2_yc(vec3 rgb)\n{\n    return rgb_2_yc(rgb, 1.75);\n}\n\n// Transformations from RGB to other color representations\n\n// Returns a geometric hue angle in degrees (0-360) based on RGB values.\nfloat rgb_2_hue(vec3 rgb)\n{\n    float hue;\n    // For neutral colors, hue is undefined and the function will return a quiet NaN value.\n    // if (rgb.r == rgb.g && rgb.g == rgb.b) {\n    //     // hue = FLT_NAN;\n    //     // todo FLT_NAN\n    //     hue = 0.0;\n    // } else {\n    //     hue = (180.0 * INVERT_PI) * atan2(sqrt(3.0) * (rgb.g - rgb.b), 2.0 * rgb.r - rgb.g - rgb.b);\n    // }\n    if (rgb.x == rgb.y && rgb.y == rgb.z)\n        hue = 0.0; // RGB triplets where RGB are equal have an undefined hue\n    else\n        hue = (180.0 * INVERT_PI) * atan(sqrt(3.0) * (rgb.y - rgb.z), 2.0 * rgb.x - rgb.y - rgb.z);\n\n    if (hue < 0.0) {\n        hue = hue + 360.0;\n    }\n\n    return hue;\n}\n\n#endif // UtillitiesColor_lib"),t.Shader3D.addInclude("ACES_TransformCommon.glsl","#if !defined(TransformCommon_lib)\n    #define TransformCommon_lib\n\nconst float TINY = 1e-10;\n\n// sRGB D65 to AP0 D60\n// https://www.colour-science.org:8010/apps/rgb_colourspace_transformation_matrix CAT 02\nconst mat3 sRGB_to_AP0_MAT = mat3(\n    vec3(0.4395856442, 0.0895395735, 0.0173871832),\n    vec3(0.3839294030, 0.8147498351, 0.1087391143),\n    vec3(0.1765327364, 0.0956836061, 0.8738205876));\n\n// sRGB D65 to AP1 D60\n// https://www.colour-science.org:8010/apps/rgb_colourspace_transformation_matrix CAT 02\nconst mat3 sRGB_to_AP1_MAT = mat3(\n    vec3(0.6131178129, 0.0699340823, 0.0204629926),\n    vec3(0.3411819959, 0.9181030375, 0.1067686634),\n    vec3(0.0457873443, 0.0119327755, 0.8727159106));\n\nconst mat3 AP1_to_XYZ_MAT = mat3(\n    vec3(0.6624541811, 0.2722287168, -0.0055746495),\n    vec3(0.1340042065, 0.6740817658, 0.0040607335),\n    vec3(0.1561876870, 0.0536895174, 1.0103391003));\n\nconst mat3 AP0_to_AP1_MAT = mat3(\n    vec3(1.4514393161, -0.0765537734, 0.0083161484),\n    vec3(-0.2365107469, 1.1762296998, -0.0060324498),\n    vec3(-0.2149285693, -0.0996759264, 0.9977163014));\n\nconst mat3 AP1_to_AP0_MAT = mat3(\n    vec3(0.6954522414, 0.0447945634, -0.0055258826),\n    vec3(0.1406786965, 0.8596711185, 0.0040252103),\n    vec3(0.1638690622, 0.0955343182, 1.0015006723));\n\nconst mat3 XYZ_to_AP1_MAT = mat3(\n    vec3(1.6410233797, -0.6636628587, 0.0117218943),\n    vec3(-0.3248032942, 1.6153315917, -0.0082844420),\n    vec3(-0.2364246952, 0.0167563477, 0.9883948585));\n\nconst vec3 AP1_RGB2Y = vec3(0.2722287168, 0.6740817658, 0.0536895174);\n\nfloat ACES_to_ACEScc(float x)\n{\n    // if (x <= 0.0)\n    // return -0.35828683;\n    // else if (x < pow(2.0, -15.0))\n    // return (log2(pow(2.0, -16.0) + x * 0.5) + 9.72) / 17.52;\n    // else\n    // return (log2(x) + 9.72) / 17.52;\n\n    return (x < 0.00003051757) ? (log2(0.00001525878 + x * 0.5) + 9.72) / 17.52 : (log2(x) + 9.72) / 17.52;\n}\n\nvec3 ACES_to_ACEScc(vec3 x)\n{\n    x = clamp(x, vec3(0.0), vec3(MEDIUMP_FLT_MAX));\n    x.x = ACES_to_ACEScc(x.x);\n    x.y = ACES_to_ACEScc(x.y);\n    x.z = ACES_to_ACEScc(x.z);\n\n    return x;\n}\n\nfloat ACEScc_to_ACES(float x)\n{\n    if (x < -0.3013698630)\n\treturn (pow(2.0, x * 17.52 - 9.72) - pow(2.0, -16.0)) * 2.0;\n    else if (x < (log2(MEDIUMP_FLT_MAX) + 9.72) / 17.52)\n\treturn pow(2.0, x * 17.52 - 9.72);\n    else\n\treturn MEDIUMP_FLT_MAX;\n}\n\nvec3 ACEScc_to_ACES(vec3 x)\n{\n    x.x = ACEScc_to_ACES(x.x);\n    x.y = ACEScc_to_ACES(x.y);\n    x.z = ACEScc_to_ACES(x.z);\n    return x;\n}\n\nfloat rgb_2_saturation(vec3 rgb)\n{\n    float rgbmax = vecmax(rgb);\n    float rgbmin = vecmin(rgb);\n    return (max(rgbmax, TINY) - max(rgbmin, TINY)) / max(rgbmax, 1e-2);\n}\n\n#endif // TransformCommon_lib"),t.Shader3D.addInclude("ACES_Tonescales.glsl","#if !defined(Tonescales_lib)\n#define Tonescales_lib\n\nconst mat3 M = mat3(\n    vec3(0.5, -1.0, 0.5),\n    vec3(-1.0, 1.0, 0.5),\n    vec3(0.5, 0.0, 0.0));\n\nfloat segmented_spline_c5_fwd(float x)\n{\n#ifdef GRAPHICS_API_GLES3\n    const float coefsLow[6] = float[6](-4.0000000000, -4.0000000000, -3.1573765773, -0.4852499958, 1.8477324706, 1.8477324706);\n    const float coefsHigh[6] = float[6](-0.7185482425, 2.0810307172, 3.6681241237, 4.0000000000, 4.0000000000, 4.0000000000);\n#else\n    const float coefsLow_0 = -4.0000000000;\n    const float coefsLow_1 = -4.0000000000;\n    const float coefsLow_2 = -3.1573765773;\n    const float coefsLow_3 = -0.4852499958;\n    const float coefsLow_4 = 1.8477324706;\n    const float coefsLow_5 = 1.8477324706;\n\n    const float coefsHigh_0 = -0.7185482425;\n    const float coefsHigh_1 = 2.0810307172;\n    const float coefsHigh_2 = 3.6681241237;\n    const float coefsHigh_3 = 4.0000000000;\n    const float coefsHigh_4 = 4.0000000000;\n    const float coefsHigh_5 = 4.0000000000;\n#endif // GRAPHICS_API_GLES3\n\n    const vec2 minPoint = vec2(0.0000054931640625, 0.0001);\n    const vec2 midPoint = vec2(0.18, 4.8);\n    const vec2 maxPoint = vec2(47185.92, 10000.);\n    const float slopeLow = 0.0;\n    const float slopeHigh = 0.0;\n\n    const int N_KNOTS_LOW = 4;\n    const int N_KNOTS_HIGH = 4;\n\n    float logx = log10(max(x, MEDIUMP_FLT_MIN));\n    float logy;\n\n    if (logx <= log10(minPoint.x)) {\n        logy = logx * slopeLow + (log10(minPoint.y) - slopeLow * log10(minPoint.x));\n    } else if ((logx > log10(minPoint.x)) && (logx < log10(midPoint.x))) {\n        float knot_coord = float(N_KNOTS_LOW - 1) * (logx - log10(minPoint.x)) / (log10(midPoint.x) - log10(minPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsLow[j], coefsLow[j + 1], coefsLow[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsLow_0, coefsLow_1, coefsLow_2);\n        } else if (j == 1) {\n            cf = vec3(coefsLow_1, coefsLow_2, coefsLow_3);\n        } else if (j == 2) {\n            cf = vec3(coefsLow_2, coefsLow_3, coefsLow_4);\n        } else { // if (j == 3)\n            cf = vec3(coefsLow_3, coefsLow_4, coefsLow_5);\n        }\n#endif // GRAPHICS_API_GLES3\n\n        vec3 monomials = vec3(t * t, t, 1.);\n        logy = dot(monomials, M * cf);\n    } else if ((logx >= log10(midPoint.x)) && (logx < log10(maxPoint.x))) {\n        float knot_coord = float(N_KNOTS_HIGH - 1) * (logx - log10(midPoint.x)) / (log10(maxPoint.x) - log10(midPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsHigh[j], coefsHigh[j + 1], coefsHigh[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsHigh_0, coefsHigh_1, coefsHigh_2);\n        } else if (j == 1) {\n            cf = vec3(coefsHigh_1, coefsHigh_2, coefsHigh_3);\n        } else if (j == 2) {\n            cf = vec3(coefsHigh_2, coefsHigh_3, coefsHigh_4);\n        } else { // if (j == 3)\n            cf = vec3(coefsHigh_3, coefsHigh_4, coefsHigh_5);\n        }\n#endif // #ifdef GRAPHICS_API_GLES3\n        vec3 monomials = vec3(t * t, t, 1.);\n        logy = dot(monomials, M * cf);\n    } else {\n        logy = logx * slopeHigh + (log10(maxPoint.y) - slopeHigh * log10(maxPoint.x));\n    }\n    return pow(10.0, logy);\n}\n\nfloat segmented_spline_c9_fwd(float x)\n{\n// ODT_48nits\n#ifdef GRAPHICS_API_GLES3\n    const float coefsLow[10] = float[10](-1.6989700043, -1.6989700043, -1.4779000000, -1.2291000000, -0.8648000000, -0.4480000000, 0.0051800000, 0.4511080334, 0.9113744414, 0.9113744414);\n    const float coefsHigh[10] = float[10](0.5154386965, 0.8470437783, 1.1358000000, 1.3802000000, 1.5197000000, 1.5985000000, 1.6467000000, 1.6746091357, 1.6878733390, 1.6878733390);\n#else\n    const float coefsLow_0 = -1.6989700043;\n    const float coefsLow_1 = -1.6989700043;\n    const float coefsLow_2 = -1.4779000000;\n    const float coefsLow_3 = -1.2291000000;\n    const float coefsLow_4 = -0.8648000000;\n    const float coefsLow_5 = -0.4480000000;\n    const float coefsLow_6 = 0.0051800000;\n    const float coefsLow_7 = 0.4511080334;\n    const float coefsLow_8 = 0.9113744414;\n    const float coefsLow_9 = 0.9113744414;\n\n    const float coefsHigh_0 = 0.5154386965;\n    const float coefsHigh_1 = 0.8470437783;\n    const float coefsHigh_2 = 1.1358000000;\n    const float coefsHigh_3 = 1.3802000000;\n    const float coefsHigh_4 = 1.5197000000;\n    const float coefsHigh_5 = 1.5985000000;\n    const float coefsHigh_6 = 1.6467000000;\n    const float coefsHigh_7 = 1.6746091357;\n    const float coefsHigh_8 = 1.6878733390;\n    const float coefsHigh_9 = 1.6878733390;\n#endif // GRAPHICS_API_GLES3\n\n    // todo const\n    vec2 minPoint = vec2(segmented_spline_c5_fwd(0.18 * pow(2.0, -6.5)), 0.02);\n    vec2 midPoint = vec2(segmented_spline_c5_fwd(0.18), 4.8);\n    vec2 maxPoint = vec2(segmented_spline_c5_fwd(0.18 * pow(2., 6.5)), 48.0);\n\n    const float slopeLow = 0.0;\n    const float slopeHigh = 0.04;\n\n    const int N_KNOTS_LOW = 8;\n    const int N_KNOTS_HIGH = 8;\n\n    float logx = log10(max(x, MEDIUMP_FLT_MIN));\n    float logy;\n\n    if (logx <= log10(minPoint.x)) {\n        logy = logx * slopeLow + (log10(minPoint.y) - slopeLow * log10(minPoint.x));\n    } else if ((logx > log10(minPoint.x)) && (logx < log10(midPoint.x))) {\n        float knot_coord = float(N_KNOTS_LOW - 1) * (logx - log10(minPoint.x)) / (log10(midPoint.x) - log10(minPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsLow[j], coefsLow[j + 1], coefsLow[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsLow_0, coefsLow_1, coefsLow_2);\n        } else if (j == 1) {\n            cf = vec3(coefsLow_1, coefsLow_2, coefsLow_3);\n        } else if (j == 2) {\n            cf = vec3(coefsLow_2, coefsLow_3, coefsLow_4);\n        } else if (j == 3) {\n            cf = vec3(coefsLow_3, coefsLow_4, coefsLow_5);\n        } else if (j == 4) {\n            cf = vec3(coefsLow_4, coefsLow_5, coefsLow_6);\n        } else if (j == 5) {\n            cf = vec3(coefsLow_5, coefsLow_6, coefsLow_7);\n        } else if (j == 6) {\n            cf = vec3(coefsLow_6, coefsLow_7, coefsLow_8);\n        } else { // if (j == 7)\n            cf = vec3(coefsLow_7, coefsLow_8, coefsLow_9);\n        }\n#endif // GRAPHICS_API_GLES3\n        vec3 monomials = vec3(t * t, t, 1.0);\n        logy = dot(monomials, M * cf);\n    } else if ((logx >= log10(midPoint.x)) && (logx < log10(maxPoint.x))) {\n        float knot_coord = float(N_KNOTS_HIGH - 1) * (logx - log10(midPoint.x)) / (log10(maxPoint.x) - log10(midPoint.x));\n        int j = int(knot_coord);\n        float t = knot_coord - float(j);\n        vec3 cf;\n#ifdef GRAPHICS_API_GLES3\n        cf = vec3(coefsHigh[j], coefsHigh[j + 1], coefsHigh[j + 2]);\n#else\n        if (j <= 0) {\n            cf = vec3(coefsHigh_0, coefsHigh_1, coefsHigh_2);\n        } else if (j == 1) {\n            cf = vec3(coefsHigh_1, coefsHigh_2, coefsHigh_3);\n        } else if (j == 2) {\n            cf = vec3(coefsHigh_2, coefsHigh_3, coefsHigh_4);\n        } else if (j == 3) {\n            cf = vec3(coefsHigh_3, coefsHigh_4, coefsHigh_5);\n        } else if (j == 4) {\n            cf = vec3(coefsHigh_4, coefsHigh_5, coefsHigh_6);\n        } else if (j == 5) {\n            cf = vec3(coefsHigh_5, coefsHigh_6, coefsHigh_7);\n        } else if (j == 6) {\n            cf = vec3(coefsHigh_6, coefsHigh_7, coefsHigh_8);\n        } else { // if (j == 7)\n            cf = vec3(coefsHigh_7, coefsHigh_8, coefsHigh_9);\n        }\n#endif // GRAPHICS_API_GLES3\n        vec3 monomials = vec3(t * t, t, 1.0);\n        logy = dot(monomials, M * cf);\n    } else {\n        logy = logx * slopeHigh + (log10(maxPoint.y) - slopeHigh * log10(maxPoint.x));\n    }\n\n    return pow(10.0, logy);\n}\n\n#endif // Tonescales_lib"),t.Shader3D.addInclude("ACES_RRTCommon.glsl",'#if !defined(RRTCommon_lib)\n#define RRTCommon_lib\n\n// "Glow" module constants\nconst float RRT_GLOW_GAIN = 0.05;\nconst float RRT_GLOW_MID = 0.08;\n\n// Red modifier constants\nconst float RRT_RED_SCALE = 0.82;\nconst float RRT_RED_PIVOT = 0.03;\nconst float RRT_RED_HUE = 0.;\nconst float RRT_RED_WIDTH = 135.;\n\n// Desaturation contants\nconst float RRT_SAT_FACTOR = 0.96;\n\n// ------- Glow module functions\n\nfloat glow_fwd(float ycIn, float glowGainIn, float glowMid)\n{\n    float glowGainOut;\n    if (ycIn <= 2.0 / 3.0 * glowMid) {\n        glowGainOut = glowGainIn;\n    } else if (ycIn >= 2.0 * glowMid) {\n        glowGainOut = 0.0;\n    } else {\n        glowGainOut = glowGainIn * (glowMid / ycIn - 0.5);\n    }\n    return glowGainOut;\n}\n\n// Sigmoid function in the range 0 to 1 spanning -2 to +2.\nfloat sigmoid_shaper(float x)\n{\n    float t = max(1.0 - abs(x * 0.5), 0.0);\n    float y = 1.0 + sign(x) * (1.0 - t * t);\n\n    return y * 0.5;\n}\n\n// ------- Red modifier functions\nfloat center_hue(float hue, float centerH)\n{\n    float hueCentered = hue - centerH;\n    if (hueCentered < -180.0) {\n        hueCentered = hueCentered + 360.0;\n    } else if (hueCentered > 180.0) {\n        hueCentered -= 360.0;\n    }\n    return hueCentered;\n}\n\n#endif // RRTCommon_lib'),t.Shader3D.addInclude("ACES_ODTCommon.glsl","#if !defined(ODTCommon_lib)\n#define ODTCommon_lib\n\nconst float CINEMA_WHITE = 48.0;\nconst float CINEMA_BLACK = 0.02; // CINEMA_WHITE / 2400.\n\n// Gamma compensation factor\nconst float DIM_SURROUND_GAMMA = 0.9811;\n\n// Saturation compensation factor\nconst float ODT_SAT_FACTOR = 0.93;\n\n// white point D60 to D65\n// ACES white point D60\nconst mat3 D60_to_D65_MAT = mat3(\n    vec3(0.987224, -0.00759836, 0.00307257),\n    vec3(-0.00611327, 1.00186, -0.00509595),\n    vec3(0.0159533, 0.00533002, 1.08168));\n\nfloat Y_2_linCV(float Y, float Ymax, float Ymin)\n{\n    return (Y - Ymin) / (Ymax - Ymin);\n}\n\nvec3 darkSurround_to_dimSurround(vec3 linearCV)\n{\n    vec3 XYZ = linearCV * AP1_to_XYZ_MAT;\n    vec3 xyY = XYZ_2_xyY(XYZ);\n    xyY.z = clamp(xyY.z, 0.0, MEDIUMP_FLT_MAX);\n    xyY.z = pow(xyY.z, DIM_SURROUND_GAMMA);\n    XYZ = xyY_2_XYZ(xyY);\n\n    return XYZ * XYZ_to_AP1_MAT;\n}\n\n#endif // ODTCommon_lib"),t.Shader3D.addInclude("ACES_RRT.glsl",'#if !defined(RRT_lib)\n#define RRT_lib\n\n#include "ACES_RRTCommon.glsl";\n\n/**\n * @param ACES AP0\n * @returns OCES\n */\nvec3 RRT(vec3 aces)\n{\n    // --- Glow module --- //\n    float saturation = rgb_2_saturation(aces);\n    float ycIn = rgb_2_yc(aces);\n    float s = sigmoid_shaper((saturation - 0.4) / 0.2);\n    float addedGlow = 1.0 + glow_fwd(ycIn, RRT_GLOW_GAIN * s, RRT_GLOW_MID);\n\n    aces *= addedGlow;\n\n    // --- Red modifier --- //\n    float hue = rgb_2_hue(aces);\n    float centeredHue = center_hue(hue, RRT_RED_HUE);\n\n    float hueWeight = smoothstep(0.0, 1.0, 1.0 - abs(2.0 * centeredHue / RRT_RED_WIDTH));\n    hueWeight *= hueWeight;\n\n    aces.r += hueWeight * saturation * (RRT_RED_PIVOT - aces.r) * (1. - RRT_RED_SCALE);\n\n    // --- ACES to RGB rendering space --- //\n    vec3 rgbPre = AP0_to_AP1_MAT * aces;\n    rgbPre = clamp(rgbPre, 0.0, MEDIUMP_FLT_MAX);\n\n    // --- Global desaturation --- //\n    rgbPre = mix(vec3(dot(rgbPre, AP1_RGB2Y)), rgbPre, RRT_SAT_FACTOR);\n\n    // --- Apply the tonescale independently in rendering-space RGB --- //\n    vec3 rgbPost;\n    rgbPost.x = segmented_spline_c5_fwd(rgbPre.x);\n    rgbPost.y = segmented_spline_c5_fwd(rgbPre.y);\n    rgbPost.z = segmented_spline_c5_fwd(rgbPre.z);\n\n    // --- RGB rendering space to OCES --- //\n    vec3 rgbOces = AP1_to_AP0_MAT * rgbPost;\n\n    return rgbOces;\n}\n\n#endif // RRT_lib'),t.Shader3D.addInclude("ACES_ODT_sRGB_100nits.glsl",'#if !defined(ODT_sRGB_100nits_lib)\n#define ODT_sRGB_100nits_lib\n\n#include "ACES_ODTCommon.glsl";\n\n// CIE XYZ to REC.709\nconst mat3 XYZ_to_REC709_MAT = mat3(\n    vec3(3.2409699419, -0.9692436363, 0.0556300797),\n    vec3(-1.5373831776, 1.8759675015, -0.2039769589),\n    vec3(-0.498610760, 0.0415550574, 1.0569715142));\n\nconst float DISPGAMMA = 2.4;\nconst float OFFSET = 0.055;\n\nvec3 ODT_sRGB_100nits(vec3 oces)\n{\n    // OCES to RGB rendering space\n    vec3 rgbPre = AP0_to_AP1_MAT * oces;\n\n    // Apply the tonescale independently in rendering-space RGB\n    vec3 rgbPost;\n    rgbPost.r = segmented_spline_c9_fwd(rgbPre.r);\n    rgbPost.g = segmented_spline_c9_fwd(rgbPre.g);\n    rgbPost.b = segmented_spline_c9_fwd(rgbPre.b);\n\n    // Scale luminance to linear code value\n    vec3 linearCV;\n    linearCV.r = Y_2_linCV(rgbPost.r, CINEMA_WHITE, CINEMA_BLACK);\n    linearCV.g = Y_2_linCV(rgbPost.g, CINEMA_WHITE, CINEMA_BLACK);\n    linearCV.b = Y_2_linCV(rgbPost.b, CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround(linearCV);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    vec3 XYZ = AP1_to_XYZ_MAT * linearCV;\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = D60_to_D65_MAT * XYZ;\n\n    // CIE XYZ to display primaries\n    linearCV = XYZ_to_REC709_MAT * XYZ;\n\n    linearCV = clamp(linearCV, vec3(0.0), vec3(1.0));\n    return linearCV;\n}\n\n#endif // ODT_sRGB_100nits_lib'),t.Shader3D.addInclude("ACES.glsl",'// Academy Color Encoding System (ACES) software and tools are provided by the\n// Academy under the following terms and conditions: A worldwide, royalty-free,\n// non-exclusive right to copy, modify, create derivatives, and use, in source\n// and binary forms, is hereby granted, subject to acceptance of this license.\n\n// Copyright 2019 Academy of Motion Picture Arts and Sciences (A.M.P.A.S.).\n// Portions contributed by others as indicated. All rights reserved.\n\n// Performance of any of the aforementioned acts indicates acceptance to be\n// bound by the following terms and conditions:\n\n// Copies of source code, in whole or in part, must retain the above copyright\n// notice, this list of conditions and the Disclaimer of Warranty.\n\n// Use in binary form must retain the above copyright notice, this list of\n// conditions and the Disclaimer of Warranty in the documentation and/or other\n// materials provided with the distribution.\n\n// Nothing in this license shall be deemed to grant any rights to trademarks,\n// copyrights, patents, trade secrets or any other intellectual property of\n// A.M.P.A.S. or any contributors, except as expressly stated herein.\n\n// Neither the name "A.M.P.A.S." nor the name of any other contributors to this\n// software may be used to endorse or promote products derivative of or based on\n// this software without express prior written permission of A.M.P.A.S. or the\n// contributors, as appropriate.\n\n// This license shall be construed pursuant to the laws of the State of\n// California, and any disputes related thereto shall be subject to the\n// jurisdiction of the courts therein.\n\n// Disclaimer of Warranty: THIS SOFTWARE IS PROVIDED BY A.M.P.A.S. AND\n// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT\n// NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE, AND NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL\n// A.M.P.A.S., OR ANY CONTRIBUTORS OR DISTRIBUTORS, BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, RESITUTIONARY, OR CONSEQUENTIAL\n// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// WITHOUT LIMITING THE GENERALITY OF THE FOREGOING, THE ACADEMY SPECIFICALLY\n// DISCLAIMS ANY REPRESENTATIONS OR WARRANTIES WHATSOEVER RELATED TO PATENT OR\n// OTHER INTELLECTUAL PROPERTY RIGHTS IN THE ACADEMY COLOR ENCODING SYSTEM, OR\n// APPLICATIONS THEREOF, HELD BY PARTIES OTHER THAN A.M.P.A.S.,WHETHER DISCLOSED\n// OR UNDISCLOSED.\n\n#if !defined(ACES_lib)\n#define ACES_lib\n\n#include "ACES_TransformCommon.glsl";\n#include "ACES_UtillitiesColor.glsl";\n#include "ACES_Tonescales.glsl";\n\n#include "ACES_RRT.glsl";\n#include "ACES_ODT_sRGB_100nits.glsl";\n\n// idt\n\n// linear D65 sRGB to D60 ACES AP0\nvec3 sRGB_to_AP0(vec3 sRGB)\n{\n    return sRGB_to_AP0_MAT * sRGB;\n}\n\n// linear D65 sRGB to D60 ACES AP1\nvec3 sRGB_to_AP1(vec3 sRGB)\n{\n    return sRGB_to_AP1_MAT * sRGB;\n}\n\n// lmt\n// todo\n\n#endif // ACES_lib')}}class xn{static __init__(){t.Shader3D.addInclude("Utils.glsl","#if !defined(Utils_lib)\n    #define Utils_lib\n\n#endif // Utils_lib"),t.Shader3D.addInclude("Color.glsl",'#if !defined(Color_lib)\n    #define Color_lib\n\n    #include "Math.glsl";\n\nvec3 linearToGamma(in vec3 value)\n{\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\n}\n\nvec4 linearToGamma(in vec4 value)\n{\n    return vec4(linearToGamma(value.rgb), value.a);\n}\n\nvec3 gammaToLinear(in vec3 value)\n{\n    return pow((value + 0.055) / 1.055, vec3(2.4));\n}\n\nvec4 gammaToLinear(in vec4 value)\n{\n    return vec4(gammaToLinear(value.rgb), value.a);\n}\n\nconst float c_RGBDMaxRange = 255.0;\n\n// float color to rgbd\nvec4 encodeRGBD(in vec3 color)\n{\n    float maxRGB = max(vecmax(color), FLT_EPS);\n    float d = max(1.0, c_RGBDMaxRange / maxRGB);\n    d = saturate(d / 255.0);\n\n    vec3 rgb = color.rgb * d;\n    rgb = saturate(rgb);\n    return vec4(rgb, d);\n}\n\n// rgbd to float color\nvec3 decodeRGBD(in vec4 rgbd)\n{\n    vec3 color = rgbd.rgb * (1.0 / rgbd.a);\n    return color;\n}\n\n// float color to rgbm\nvec4 encodeRGBM(in vec3 color, float range)\n{\n    color *= 1.0 / range;\n    float maxRGB = max(vecmax(color), FLT_EPS);\n    float m = ceil(maxRGB * 255.0) / 255.0;\n    vec3 rgb = color.rgb * 1.0 / m;\n\n    vec4 rgbm = vec4(rgb, m);\n    return rgbm;\n}\n\n// rgbm to float color\nvec3 decodeRGBM(in vec4 rgbm, float range)\n{\n    return range * rgbm.rgb * rgbm.a;\n}\n\n#endif // Color_lib'),t.Shader3D.addInclude("Math.glsl",'#if !defined(Math_lib)\n    #define Math_lib\n\n    #ifndef GRAPHICS_API_GLES3\nmat2 inverse(mat2 m)\n{\n    return mat2(m[1][1], -m[0][1], -m[1][0], m[0][0]) / (m[0][0] * m[1][1] - m[0][1] * m[1][0]);\n}\nmat3 inverse(mat3 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n    float b01 = a22 * a11 - a12 * a21;\n    float b11 = -a22 * a10 + a12 * a20;\n    float b21 = a21 * a10 - a11 * a20;\n\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11), b11, (a22 * a00 - a02 * a20),\n\t       (-a12 * a00 + a02 * a10), b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10))\n\t/ det;\n}\n\nmat4 inverse(mat4 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3], a10 = m[1][0], a11 = m[1][1], a12 = m[1][2],\n\t  a13 = m[1][3], a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3], a30 = m[3][0], a31 = m[3][1],\n\t  a32 = m[3][2], a33 = m[3][3],\n\n\t  b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10,\n\t  b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12,\n\t  b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30,\n\t  b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32,\n\n\t  det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    return mat4(a11 * b11 - a12 * b10 + a13 * b09, a02 * b10 - a01 * b11 - a03 * b09, a31 * b05 - a32 * b04 + a33 * b03,\n\t       a22 * b04 - a21 * b05 - a23 * b03, a12 * b08 - a10 * b11 - a13 * b07, a00 * b11 - a02 * b08 + a03 * b07,\n\t       a32 * b02 - a30 * b05 - a33 * b01, a20 * b05 - a22 * b02 + a23 * b01, a10 * b10 - a11 * b08 + a13 * b06,\n\t       a01 * b08 - a00 * b10 - a03 * b06, a30 * b04 - a31 * b02 + a33 * b00, a21 * b02 - a20 * b04 - a23 * b00,\n\t       a11 * b07 - a10 * b09 - a12 * b06, a00 * b09 - a01 * b07 + a02 * b06, a31 * b01 - a30 * b03 - a32 * b00,\n\t       a20 * b03 - a21 * b01 + a22 * b00)\n\t/ det;\n}\n\nmat4 transpose(mat4 m){\n    return mat4(m[0][0],m[1][0],m[2][0],m[3][0],\n                m[0][1],m[1][1],m[2][1],m[3][1],\n                m[0][2],m[1][2],m[2][2],m[3][2],\n                m[0][3],m[1][3],m[2][3],m[3][3]);\n}\nmat3 transpose(mat3 m){\n    return mat3(m[0][0],m[1][0],m[2][0],\n                m[0][1],m[1][1],m[2][1],\n                m[0][2],m[1][2],m[2][2]);\n}\n    #endif // GRAPHICS_API_GLES3\n\n    #define PI 3.14159265359\n\n    #define INVERT_PI 0.31830988618\n\n    #define HALF_PI 1.570796327\n\n    #define MEDIUMP_FLT_MAX 65504.0\n    #define MEDIUMP_FLT_MIN 0.00006103515625\n\n    #if defined(GL_FRAGMENT_PRECISION_HIGH)\n\t#define FLT_EPS\t\t   1e-5\n\t#define saturateMediump(x) x\n    #else\n\t#define FLT_EPS\t\t   MEDIUMP_FLT_MIN\n\t#define saturateMediump(x) min(x, MEDIUMP_FLT_MAX)\n    #endif // GL_FRAGMENT_PRECISION_HIGH\n\n    #define saturate(x) clamp(x, 0.0, 1.0)\n\nfloat pow2(float x)\n{\n    return x * x;\n}\n\nfloat pow5(float x)\n{\n    float x2 = x * x;\n    return x2 * x2 * x;\n}\n\nconst float INVERT_LOG10 = 0.43429448190325176;\n\nfloat log10(float x)\n{\n    return log(x) * INVERT_LOG10;\n}\n\nfloat vecmax(const vec2 v)\n{\n    return max(v.x, v.y);\n}\n\nfloat vecmax(const vec3 v)\n{\n    return max(v.x, max(v.y, v.z));\n}\n\nfloat vecmax(const vec4 v)\n{\n    return max(max(v.x, v.y), max(v.z, v.w));\n}\n\nfloat vecmin(const vec2 v)\n{\n    return min(v.x, v.y);\n}\n\nfloat vecmin(const vec3 v)\n{\n    return min(v.x, min(v.y, v.z));\n}\n\nfloat vecmin(const vec4 v)\n{\n    return min(min(v.x, v.y), min(v.z, v.w));\n}\n\nvec3 SafeNormalize(in vec3 inVec)\n{\n    float dp3 = max(0.001, dot(inVec, inVec));\n    return inVec * inversesqrt(dp3);\n}\n\n/**\n * Approximates acos(x) with a max absolute error of 9.0x10^-3.\n * Valid in the range -1..1.\n */\nfloat acosFast(float x)\n{\n    // Lagarde 2014, "Inverse trigonometric functions GPU optimization for AMD GCN architecture"\n    // This is the approximation of degree 1, with a max absolute error of 9.0x10^-3\n    float y = abs(x);\n    float p = -0.1565827 * y + 1.570796;\n    p *= sqrt(1.0 - y);\n    return x >= 0.0 ? p : PI - p;\n}\n\n/**\n * Approximates acos(x) with a max absolute error of 9.0x10^-3.\n * Valid only in the range 0..1.\n */\nfloat acosFastPositive(float x)\n{\n    float p = -0.1565827 * x + 1.570796;\n    return p * sqrt(1.0 - x);\n}\n\n/*\n * Random number between 0 and 1, using interleaved gradient noise.\n * w must not be normalized (e.g. window coordinates)\n */\nfloat interleavedGradientNoise(const highp vec2 w)\n{\n    const vec3 m = vec3(0.06711056, 0.00583715, 52.9829189);\n    return fract(m.z * fract(dot(w, m.xy)));\n}\n\n/*\n * vertex rotate by Euler\n */\nvec3 rotationByEuler(in vec3 vector, in vec3 rot)\n{\n    float halfRoll = rot.z * 0.5;\n    float halfPitch = rot.x * 0.5;\n    float halfYaw = rot.y * 0.5;\n\n    float sinRoll = sin(halfRoll);\n    float cosRoll = cos(halfRoll);\n    float sinPitch = sin(halfPitch);\n    float cosPitch = cos(halfPitch);\n    float sinYaw = sin(halfYaw);\n    float cosYaw = cos(halfYaw);\n\n    float quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n    float quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n    float quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n    float quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n\n    // vec4 q=vec4(quaX,quaY,quaZ,quaW);\n    // vec3 temp = cross(q.xyz, vector) + q.w * vector;\n    // return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\n    float x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n    float xx = quaX * x;\n    float xy = quaX * y;\n    float xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n\t((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n\t((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n}\n\n/*\n * Assume that axis has been normalized\n * point rotate by one axis\n */\nvec3 rotationByAxis(in vec3 vector, in vec3 axis, in float angle)\n{\n    float halfAngle = angle * 0.5;\n    float sin = sin(halfAngle);\n\n    float quaX = axis.x * sin;\n    float quaY = axis.y * sin;\n    float quaZ = axis.z * sin;\n    float quaW = cos(halfAngle);\n\n    // vec4 q=vec4(quaX,quaY,quaZ,quaW);\n    // vec3 temp = cross(q.xyz, vector) + q.w * vector;\n    // return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\n    float x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n    float xx = quaX * x;\n    float xy = quaX * y;\n    float xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n\t((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n\t((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n}\n\n/*\n *rotate by quaternions\n */\nvec3 rotationByQuaternions(in vec3 v, in vec4 q)\n{\n    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n#endif // Math_lib'),t.Shader3D.addInclude("TBNNormal.glsl","#if !defined(TBNNormal_lib)\n    #define TBNNormal_lib\n\n    #ifdef NEEDTBN\n\nmat3 generateTBNMat(in VertexParams params)\n{\n    vec3 normalWS = params.normalWS;\n    vec3 tangentWS = params.tangentWS.xyz;\n    vec3 biNormalWS = params.biNormalWS;\n\n    mat3 TBNMat = mat3(tangentWS, biNormalWS, normalWS);\n    return TBNMat;\n}\n\nvec3 sampleTBNNormalMap(in VertexParams params, in mat3 TBN, sampler2D normalMap, in vec2 uv)\n{\n    // vec2 uv = params.texCoord0;\n    vec3 samplerNormal = texture2D(normalMap, uv).rgb;\n    samplerNormal = normalize(samplerNormal * 2.0 - 1.0);;\n    vec3 normalWS = normalize(TBN * samplerNormal);\n    return normalWS;\n}\n\n    #endif // NEEDTBN\n\n#endif // TBNNormal_lib"),t.Shader3D.addInclude("BakedBoneMatrixSampler.glsl","#if !defined(BakeBoneAnimSampler_lib)\n    #define BakeBoneAnimSampler_lib\n\nmat4 loadBakedMatMatrix(float FramePos, float boneIndices, float offset)\n{\n    vec2 uv;\n    float PixelPos = FramePos + boneIndices * 4.0;\n    float halfOffset = offset * 0.5;\n    float uvoffset = PixelPos / u_SimpleAnimatorTextureSize;\n    uv.y = floor(uvoffset) * offset + halfOffset;\n    uv.x = mod(float(PixelPos), u_SimpleAnimatorTextureSize) * offset + halfOffset;\n    vec4 mat0row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat1row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat2row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat3row = texture2D(u_SimpleAnimatorTexture, uv);\n    mat4 m = mat4(mat0row.x, mat0row.y, mat0row.z, mat0row.w,\n\tmat1row.x, mat1row.y, mat1row.z, mat1row.w,\n\tmat2row.x, mat2row.y, mat2row.z, mat2row.w,\n\tmat3row.x, mat3row.y, mat3row.z, mat3row.w);\n    return m;\n}\n\n#endif // BakeBoneAnimSampler_lib"),t.Shader3D.addInclude("VertexCommon.glsl","#if !defined(VertexCommon_lib)\n    #define VertexCommon_lib\n\nstruct Vertex {\n\n    vec3 positionOS;\n\n    vec3 normalOS;\n\n    #ifdef TANGENT\n    vec4 tangentOS;\n    #endif // TANGENT\n\n    // todo  uv define ?\n    #ifdef UV\n    vec2 texCoord0;\n    #endif // UV\n\n    #ifdef UV1\n    vec2 texCoord1;\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n\n/**\n * vertex position\n */\nvec4 getVertexPosition()\n{\n    vec4 position = a_Position;\n    return position;\n}\n\nvec2 transformUV(in vec2 texcoord, in vec4 tilingOffset)\n{\n    vec2 uv = texcoord * tilingOffset.xy + tilingOffset.zw * vec2(1.0, -1.0) + vec2(0.0, 1.0 - tilingOffset.y);\n    return uv;\n}\n\nvoid getVertexParams(inout Vertex vertex)\n{\n    vertex.positionOS = getVertexPosition().xyz;\n\n    vertex.normalOS = a_Normal.xyz;\n\n    #ifdef TANGENT\n    vertex.tangentOS = a_Tangent0;\n    #endif // TANGENT\n\n    #ifdef UV\n    vertex.texCoord0 = a_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n    vertex.texCoord1 = a_Texcoord1;\n    #endif // UV1\n\n    #ifdef COLOR\n    vertex.vertexColor = a_Color;\n    #endif // COLOR\n}\n\n#endif // VertexCommon_lib"),t.Shader3D.addInclude("Scene.glsl","#if !defined(SceneCommon_lib)\n    #define SceneCommon_lib\n\n    #ifdef ENUNIFORMBLOCK\nuniform SceneUniformBlock\n{\n    // time\n   \n    float u_Time;\n    float u_FogStart;\n    float u_FogRange;\n    \n    vec4 u_FogColor;\n\n};\n    #else // ENUNIFORMBLOCK\n// time\nuniform float u_Time;\nuniform float u_FogStart;\nuniform float u_FogRange;\nuniform vec4 u_FogColor;\n    #endif // ENUNIFORMBLOCK\n    //rotate SH IBL\nuniform float u_GIRotate;\n\n#endif // SceneCommon_lib"),t.Shader3D.addInclude("Camera.glsl","#if !defined(CameraCommon_lib)\n    #define CameraCommon_lib\n\n    #ifdef ENUNIFORMBLOCK\n\nuniform CameraUniformBlock\n{\n    mat4 u_View;\n    mat4 u_Projection;\n    mat4 u_ViewProjection;\n    vec4 u_ProjectionParams; // x: near, y: far, z: invert, w: 1/far\n    vec4 u_Viewport; // x,y,width,height\n    vec3 u_CameraDirection;\n    vec3 u_CameraUp;\n    vec3 u_CameraPos;\n};\n    #else\nuniform mat4 u_View;\nuniform mat4 u_Projection;\nuniform mat4 u_ViewProjection;\nuniform vec4 u_ProjectionParams; // x: near, y: far, z: invert, w: 1/far\nuniform vec4 u_Viewport; // x, y, width, height\nuniform vec3 u_CameraDirection;\nuniform vec3 u_CameraUp;\nuniform vec3 u_CameraPos;\n    #endif // ENUNIFORMBLOCK\n\n/*Depth or DepthNormal Uniform*/\nuniform highp sampler2D u_CameraDepthTexture;\nuniform vec4 u_ZBufferParams; //(1.0 - far / near, far / near, (near - far) / (near * far), 1 / near)\nuniform mediump sampler2D u_CameraDepthNormalsTexture;\nuniform mediump sampler2D u_CameraOpaqueTexture;\n\nvec4 getPositionCS(in vec3 positionWS)\n{\n    return u_ViewProjection * vec4(positionWS, 1.0);\n}\n\nvec3 getViewDirection(in vec3 positionWS)\n{\n    return normalize(u_CameraPos - positionWS);\n}\n\n// 根据投影剧专重映射深度\nvec4 remapPositionZ(vec4 position)\n{\n    position.z = position.z * 2.0 - position.w;\n    return position;\n}\n\n#endif // CameraCommon_lib"),t.Shader3D.addInclude("Sprite3DCommon.glsl","#if !defined(Sprite3DCommon_lib)\n    #define Sprite3DCommon_lib\n\nuniform mat4 u_WorldMat;\n\n    #ifdef LIGHTMAP\nuniform vec4 u_LightmapScaleOffset;\n    #endif // LIGHTMAP\n\nvec2 tranformLightMapUV(in vec2 texcoord, in vec4 tilingOffset)\n{\n    vec2 lightMapUV = vec2(texcoord.x, 1.0 - texcoord.y) * tilingOffset.xy + tilingOffset.zw;\n    lightMapUV.y = 1.0 - lightMapUV.y;\n    return lightMapUV;\n}\n\n#endif // Sprite3DCommon_lib"),t.Shader3D.addInclude("Sprite3DVertex.glsl",'#if !defined(Sprite3DVertex_lib)\n    #define Sprite3DVertex_lib\n\n    #include "Sprite3DCommon.glsl";\n\n    #ifdef BONE\n// todo const int c_MaxBoneCount = 24\nuniform mat4 u_Bones[24];\n\n\t#ifdef SIMPLEBONE\nuniform vec4 u_SimpleAnimatorParams;\nuniform sampler2D u_SimpleAnimatorTexture;\nuniform float u_SimpleAnimatorTextureSize;\n\t    #include "BakedBoneMatrixSampler.glsl";\n\n\t#endif // SIMPLEBONE\n\n    #endif // BONE\n\n/**\n * world matrix\n */\nmat4 getWorldMatrix()\n{\n    #ifdef GPU_INSTANCE\n    mat4 worldMat = a_WorldMat;\n    #else\n    mat4 worldMat = u_WorldMat;\n    #endif // GPU_INSTANCE\n\n    #ifdef BONE\n\n\t#ifdef SIMPLEBONE\n\n\t    #ifdef GPU_INSTANCE\n    float currentPixelPos = a_SimpleTextureParams.x + a_SimpleTextureParams.y;\n\t    #else // GPU_INSTANCE\n    float currentPixelPos = u_SimpleAnimatorParams.x + u_SimpleAnimatorParams.y;\n\t    #endif // GPU_INSTANCE\n\n    float offset = 1.0 / u_SimpleAnimatorTextureSize;\n    mat4 skinTrans = loadBakedMatMatrix(currentPixelPos, a_BoneIndices.x, offset) * a_BoneWeights.x;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.y, offset) * a_BoneWeights.y;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.z, offset) * a_BoneWeights.z;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.w, offset) * a_BoneWeights.w;\n    worldMat = worldMat * skinTrans;\n\n\t#else // SIMPLEBONE\n\n    ivec4 boneIndex = ivec4(a_BoneIndices);\n    mat4 skinTrans = u_Bones[boneIndex.x] * a_BoneWeights.x;\n    skinTrans += u_Bones[boneIndex.y] * a_BoneWeights.y;\n    skinTrans += u_Bones[boneIndex.z] * a_BoneWeights.z;\n    skinTrans += u_Bones[boneIndex.w] * a_BoneWeights.w;\n    worldMat = worldMat * skinTrans;\n\n\t#endif // SIMPLEBONE\n\n    #endif // BONE\n\n    return worldMat;\n}\n\n#endif // Sprite3DVertex_lib'),t.Shader3D.addInclude("Sprite3DFrag.glsl",'#if !defined(Sprite3DFrag_lib)\n    #define Sprite3DFrag_lib\n\n    #include "Sprite3DCommon.glsl";\n\n#endif // Sprite3DFrag_lib'),t.Shader3D.addInclude("DepthVertex.glsl",'#if !defined(DepthVertex_lib)\n    #define DepthVertex_lib\n\n    #include "Scene.glsl";\n    #include "Camera.glsl";\n    #include "Sprite3DVertex.glsl";\n\n    #include "VertexCommon.glsl";\n\n    #if defined(SHADOW) || defined(SHADOW_SPOT)\n\n\t#ifndef DEPTHPASS\n\t    #ifdef ENUNIFORMBLOCK\nuniform ShadowUniformBlock\n{\n    vec4 u_ShadowBias; // x: depth bias, y: normal bias\n    vec3 u_ShadowLightDirection;\n};\n\t    #else // ENUNIFORMBLOCK\nuniform vec4 u_ShadowBias; // x: depth bias, y: normal bias\n\t\t#ifdef SHADOW\nuniform vec3 u_ShadowLightDirection;\n\t\t#endif // SHADOW\n\t    #endif // ENUNIFORMBLOCK\n\n// 根据投影剧专重映射深度\n//vec4 remapPositionZ(vec4 position)\n//{\n//    position.z = position.z * 2.0 - position.w;\n//    return position;\n//}\n\nvec3 applyShadowBias(vec3 positionWS, vec3 normalWS, vec3 lightDirection)\n{\n    float invNdotL = 1.0 - clamp(dot(-lightDirection, normalWS), 0.0, 1.0);\n    float scale = invNdotL * u_ShadowBias.y;\n\n    // normal bias is negative since we want to apply an inset normal offset\n    positionWS += -lightDirection * u_ShadowBias.xxx;\n    positionWS += normalWS * vec3(scale);\n    return positionWS;\n}\n\t#endif // DEPTHPASS\n    #endif // SHADOW || SHADOW_SPOT\n\n    #ifdef DEPTHPASS\n\t#include "Camera.glsl";\n    #endif // DEPTHPASS\n\nvec4 DepthPositionCS(in vec3 positionWS, in vec3 normalWS)\n{\n    #ifdef DEPTHPASS\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    #endif // DEPTHPASS\n\n    #ifdef SHADOW\n\t#ifndef DEPTHPASS\n    positionWS = applyShadowBias(positionWS, normalWS, u_ShadowLightDirection);\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    positionCS.z = max(positionCS.z, 0.0); // min ndc z is 0.0\n\t#endif // DEPTHPASS\n    #endif // SHADOW\n\n    #ifdef SHADOW_SPOT\n\t#ifndef DEPTHPASS\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    positionCS.z = positionCS.z - u_ShadowBias.x / positionCS.w;\n    positionCS.z = max(positionCS.z, 0.0); // min ndc z is 0.0\n\t#endif // DEPTHPASS\n    #endif // SHADOW_SPOT\n\n    return positionCS;\n}\n\n\n#endif // DepthVertex_lib'),t.Shader3D.addInclude("DepthFrag.glsl","#if !defined(DepthFrag_lib)\n    #define DepthFrag_lib\n\nvec4 getDepthColor()\n{\n    return vec4(0.0);\n}\n\n#endif // DepthFrag_lib"),t.Shader3D.addInclude("DepthNormalUtil.glsl","#define SAMPLE_DEPTH_TEXTURE(textureName,coord2) (texture2D(textureName,coord2).r)\n//此方法库用来压缩解析深度贴图，法线深度贴图\n\n// Encoding/decoding view space normals into 2D 0..1 vector\nvec2 EncodeViewNormalStereo( vec3 n )\n{\n    n.z = abs(n.z);\n    float kScale = 1.7777;\n    vec2 enc;\n    enc = n.xy / (n.z+1.0);\n    enc /= kScale;\n    enc = enc*0.5+0.5;\n    return enc;\n}\n\nvec3 DecodeViewNormalStereo( vec4 enc4 )\n{\n    float kScale = 1.7777;\n    vec3 nn = enc4.xyz*vec3(2.0*kScale,2.0*kScale,0.0) + vec3(-kScale,-kScale,1.0);\n    float g = 2.0 / dot(nn.xyz,nn.xyz);\n    vec3 n;\n    n.xy = g*nn.xy;\n    n.z = g-1.0;\n    return n;\n}\n\n\n// Encoding/decoding [0..1) floats into 8 bit/channel RG. Note that 1.0 will not be encoded properly.\nvec2 EncodeFloatRG( float v )\n{\n    vec2 kEncodeMul = vec2(1.0, 255.0);\n    float kEncodeBit = 1.0/255.0;\n    vec2 enc = kEncodeMul * v;\n    enc = fract(enc);\n    enc.x -= enc.y * kEncodeBit;\n    return enc;\n}\n\n\n\nfloat DecodeFloatRG( vec2 enc )\n{\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\n    return dot( enc, kDecodeDot );\n}\n\nvec4 EncodeDepthNormal(float depth,vec3 normals){\n\tvec4 encode;\n\tencode.xy = EncodeViewNormalStereo(normals);\n\tencode.zw = EncodeFloatRG(depth);\n    return encode;\n}\n\nvoid DecodeDepthNormal( vec4 enc, out float depth, out vec3 normal )\n{\n    depth = DecodeFloatRG (enc.zw);\n    normal = DecodeViewNormalStereo (enc);\n}\n\n\n\nvec4 depthNormalsFragment(vec4 depthNormal)\n{\n    return EncodeDepthNormal(depthNormal.w,depthNormal.xyz);\n}\n\n\n// Z buffer to linear 0..1 depth\nfloat Linear01Depth(float z,vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.x * z + zbufferParams.y);\n}\n// Z buffer to linear depth\nfloat LinearEyeDepth(float z,vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.z * z + zbufferParams.w);\n}\n"),t.Shader3D.addInclude("SceneFog.glsl","#if !defined(SceneFog_lib)\n    #define SceneFog_lib\n\nvec3 scenUnlitFog(in vec3 color)\n{\n    float lerpFact = clamp((1.0 / gl_FragCoord.w - u_FogStart) / u_FogRange, 0.0, 1.0);\n\n    #ifdef ADDTIVEFOG\n    return mix(color, vec3(0.0), lerpFact);\n    #else\n    return mix(color, u_FogColor.rgb, lerpFact);\n    #endif // ADDTIVEFOG\n}\n\nvec3 sceneLitFog(in vec3 color)\n{\n    float lerpFact = clamp((1.0 / gl_FragCoord.w - u_FogStart) / u_FogRange, 0.0, 1.0);\n\n    return mix(color, u_FogColor.rgb, lerpFact);\n}\n\n#endif // SceneFog_lib"),t.Shader3D.addInclude("ShadowSampleTent.glsl",'// ------------------------------------------------------------------\n//  PCF Filtering Tent Functions\n// ------------------------------------------------------------------\n\n// Assuming a isoceles right angled triangle of height "triangleHeight" (as drawn below).\n// This function return the area of the triangle above the first texel(in Y the first texel).\n//\n// |\\      <-- 45 degree slop isosceles right angled triangle\n// | \\\n// ----    <-- length of this side is "triangleHeight"\n// _ _ _ _ <-- texels\nfloat sampleShadowGetIRTriangleTexelArea(float triangleHeight)\n{\n    return triangleHeight - 0.5;\n}\n\n// Assuming a isoceles triangle of 1.5 texels height and 3 texels wide lying on 4 texels.\n// This function return the area of the triangle above each of those texels.\n//    |    <-- offset from -0.5 to 0.5, 0 meaning triangle is exactly in the center\n//   / \\   <-- 45 degree slop isosceles triangle (ie tent projected in 2D)\n//  /   \\\n// _ _ _ _ <-- texels\n// X Y Z W <-- result indices (in computedArea.xyzw and computedAreaUncut.xyzw)\n// Top point at (right,top) in a texel,left bottom point at (middle,middle) in a texel,right bottom point at (middle,middle) in a texel.\nvoid sampleShadowGetTexelAreasTent3x3(float offset, out vec4 computedArea, out vec4 computedAreaUncut)\n{\n    // Compute the exterior areas,a and h is same.\n    float a = offset + 0.5;\n    float offsetSquaredHalved = a * a * 0.5;\n    computedAreaUncut.x = computedArea.x = offsetSquaredHalved - offset;\n    computedAreaUncut.w = computedArea.w = offsetSquaredHalved;\n\n    // Compute the middle areas\n    // For Y : We find the area in Y of as if the left section of the isoceles triangle would\n    // intersect the axis between Y and Z (ie where offset = 0).\n    computedAreaUncut.y = sampleShadowGetIRTriangleTexelArea(1.5 - offset);\n    // This area is superior to the one we are looking for if (offset < 0) thus we need to\n    // subtract the area of the triangle defined by (0,1.5-offset), (0,1.5+offset), (-offset,1.5).\n    float clampedOffsetLeft = min(offset,0.0);\n    float areaOfSmallLeftTriangle = clampedOffsetLeft * clampedOffsetLeft;\n    computedArea.y = computedAreaUncut.y - areaOfSmallLeftTriangle;\n\n    // We do the same for the Z but with the right part of the isoceles triangle\n    computedAreaUncut.z = sampleShadowGetIRTriangleTexelArea(1.5 + offset);\n    float clampedOffsetRight = max(offset,0.0);\n    float areaOfSmallRightTriangle = clampedOffsetRight * clampedOffsetRight;\n    computedArea.z = computedAreaUncut.z - areaOfSmallRightTriangle;\n}\n\n// Assuming a isoceles triangle of 2.5 texel height and 5 texels wide lying on 6 texels.\n// This function return the weight of each texels area relative to the full triangle area.\n//  /       \\\n// _ _ _ _ _ _ <-- texels\n// 0 1 2 3 4 5 <-- computed area indices (in texelsWeights[])\n// Top point at (right,top) in a texel,left bottom point at (middle,middle) in a texel,right bottom point at (middle,middle) in a texel.\nvoid sampleShadowGetTexelWeightsTent5x5(float offset, out vec3 texelsWeightsA, out vec3 texelsWeightsB)\n{\n    vec4 areaFrom3texelTriangle;\n    vec4 areaUncutFrom3texelTriangle;\n    sampleShadowGetTexelAreasTent3x3(offset, areaFrom3texelTriangle, areaUncutFrom3texelTriangle);\n\n    // Triangle slope is 45 degree thus we can almost reuse the result of the 3 texel wide computation.\n    // the 5 texel wide triangle can be seen as the 3 texel wide one but shifted up by one unit/texel.\n    // 0.16 is 1/(the triangle area)\n    texelsWeightsA.x = 0.16 * (areaFrom3texelTriangle.x);\n    texelsWeightsA.y = 0.16 * (areaUncutFrom3texelTriangle.y);\n    texelsWeightsA.z = 0.16 * (areaFrom3texelTriangle.y + 1.0);\n    texelsWeightsB.x = 0.16 * (areaFrom3texelTriangle.z + 1.0);\n    texelsWeightsB.y = 0.16 * (areaUncutFrom3texelTriangle.z);\n    texelsWeightsB.z = 0.16 * (areaFrom3texelTriangle.w);\n}\n\n// 5x5 Tent filter (45 degree sloped triangles in U and V)\nvoid sampleShadowComputeSamplesTent5x5(vec4 shadowMapTextureTexelSize, vec2 coord, out float fetchesWeights[9], out vec2 fetchesUV[9])\n{\n    // tent base is 5x5 base thus covering from 25 to 36 texels, thus we need 9 bilinear PCF fetches\n    vec2 tentCenterInTexelSpace = coord.xy * shadowMapTextureTexelSize.zw;\n    vec2 centerOfFetchesInTexelSpace = floor(tentCenterInTexelSpace + 0.5);\n    vec2 offsetFromTentCenterToCenterOfFetches = tentCenterInTexelSpace - centerOfFetchesInTexelSpace;\n\n    // find the weight of each texel based on the area of a 45 degree slop tent above each of them.\n    vec3 texelsWeightsUA, texelsWeightsUB;\n    vec3 texelsWeightsVA, texelsWeightsVB;\n    sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.x, texelsWeightsUA, texelsWeightsUB);\n    sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.y, texelsWeightsVA, texelsWeightsVB);\n\n    // each fetch will cover a group of 2x2 texels, the weight of each group is the sum of the weights of the texels\n    vec3 fetchesWeightsU = vec3(texelsWeightsUA.xz, texelsWeightsUB.y) + vec3(texelsWeightsUA.y, texelsWeightsUB.xz);\n    vec3 fetchesWeightsV = vec3(texelsWeightsVA.xz, texelsWeightsVB.y) + vec3(texelsWeightsVA.y, texelsWeightsVB.xz);\n\n    // move the PCF bilinear fetches to respect texels weights\n    vec3 fetchesOffsetsU = vec3(texelsWeightsUA.y, texelsWeightsUB.xz) / fetchesWeightsU.xyz + vec3(-2.5,-0.5,1.5);\n    vec3 fetchesOffsetsV = vec3(texelsWeightsVA.y, texelsWeightsVB.xz) / fetchesWeightsV.xyz + vec3(-2.5,-0.5,1.5);\n    fetchesOffsetsU *= shadowMapTextureTexelSize.xxx;\n    fetchesOffsetsV *= shadowMapTextureTexelSize.yyy;\n\n    vec2 bilinearFetchOrigin = centerOfFetchesInTexelSpace * shadowMapTextureTexelSize.xy;\n    fetchesUV[0] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.x);\n    fetchesUV[1] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.x);\n    fetchesUV[2] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.x);\n    fetchesUV[3] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.y);\n    fetchesUV[4] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.y);\n    fetchesUV[5] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.y);\n    fetchesUV[6] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.z);\n    fetchesUV[7] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.z);\n    fetchesUV[8] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.z);\n\n    fetchesWeights[0] = fetchesWeightsU.x * fetchesWeightsV.x;\n    fetchesWeights[1] = fetchesWeightsU.y * fetchesWeightsV.x;\n    fetchesWeights[2] = fetchesWeightsU.z * fetchesWeightsV.x;\n    fetchesWeights[3] = fetchesWeightsU.x * fetchesWeightsV.y;\n    fetchesWeights[4] = fetchesWeightsU.y * fetchesWeightsV.y;\n    fetchesWeights[5] = fetchesWeightsU.z * fetchesWeightsV.y;\n    fetchesWeights[6] = fetchesWeightsU.x * fetchesWeightsV.z;\n    fetchesWeights[7] = fetchesWeightsU.y * fetchesWeightsV.z;\n    fetchesWeights[8] = fetchesWeightsU.z * fetchesWeightsV.z;\n}'),t.Shader3D.addInclude("ShadowSampler.glsl",'#if !defined(ShadowSampler_lib)\n    #define ShadowSampler_lib\n\n    #ifndef GRAPHICS_API_GLES3\n\t#define NO_NATIVE_SHADOWMAP\n    #endif // GRAPHICS_API_GLES3\n\n    #if defined(NO_NATIVE_SHADOWMAP)\n\t#define TEXTURE2D_SHADOW(textureName)\t\t     uniform mediump sampler2D textureName\n\t#define SAMPLE_TEXTURE2D_SHADOW(textureName, coord3) (texture2D(textureName, coord3.xy).r < coord3.z ? 0.0 : 1.0)\n\t#define TEXTURE2D_SHADOW_PARAM(shadowMap)\t     mediump sampler2D shadowMap\n    #else // NO_NATIVE_SHADOWMAP\n\t#define TEXTURE2D_SHADOW(textureName)\t\t     uniform mediump sampler2DShadow textureName\n\t#define SAMPLE_TEXTURE2D_SHADOW(textureName, coord3) textureLod(textureName, coord3, 0.0)\n\t#define TEXTURE2D_SHADOW_PARAM(shadowMap)\t     mediump sampler2DShadow shadowMap\n    #endif // NO_NATIVE_SHADOWMAP\n\n    // 计算阴影\n    #ifdef RECEIVESHADOW\n\n\t#include "ShadowSampleTent.glsl";\n\nuniform vec4 u_ShadowParams;\n\n\t#define ShadowStrength\t   u_ShadowParams.x\n\t#define SpotShadowStrength u_ShadowParams.y\n\n    // 平行光阴影\n\t#ifdef SHADOW\n\t    #define CALCULATE_SHADOWS\nvarying vec4 v_ShadowCoord;\nTEXTURE2D_SHADOW(u_ShadowMap);\nuniform vec4 u_ShadowMapSize;\n\n#ifdef SHADOW_CASCADE\nconst int c_MaxCascadeCount = 4;\n#else //SHADOW_CASCADE\nconst int c_MaxCascadeCount = 1;\n#endif//SHADOW_CASCADE\n\nuniform mat4 u_ShadowMatrices[c_MaxCascadeCount];\nuniform vec4 u_ShadowSplitSpheres[c_MaxCascadeCount];\n\t#endif // SHADOW\n\n\t// 聚光灯阴影\n\t#ifdef SHADOW_SPOT\n\t    #define CALCULATE_SPOTSHADOWS\nvarying vec4 v_SpotShadowCoord;\nTEXTURE2D_SHADOW(u_SpotShadowMap);\nuniform vec4 u_SpotShadowMapSize;\nuniform mat4 u_SpotViewProjectMatrix;\n\t#endif // SHADOW_SPOT\n\nfloat sampleShdowMapFiltered4(TEXTURE2D_SHADOW_PARAM(shadowMap), vec3 shadowCoord, vec4 shadowMapSize)\n{\n    float attenuation;\n    vec4 attenuation4;\n    vec2 offset = shadowMapSize.xy / 2.0;\n    vec3 shadowCoord0 = shadowCoord + vec3(-offset, 0.0);\n    vec3 shadowCoord1 = shadowCoord + vec3(offset.x, -offset.y, 0.0);\n    vec3 shadowCoord2 = shadowCoord + vec3(-offset.x, offset.y, 0.0);\n    vec3 shadowCoord3 = shadowCoord + vec3(offset, 0.0);\n    attenuation4.x = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord0);\n    attenuation4.y = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord1);\n    attenuation4.z = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord2);\n    attenuation4.w = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord3);\n    attenuation = dot(attenuation4, vec4(0.25));\n    return attenuation;\n}\n\nfloat sampleShdowMapFiltered9(TEXTURE2D_SHADOW_PARAM(shadowMap), vec3 shadowCoord, vec4 shadowmapSize)\n{\n    float attenuation;\n    float fetchesWeights[9];\n    vec2 fetchesUV[9];\n    sampleShadowComputeSamplesTent5x5(shadowmapSize, shadowCoord.xy, fetchesWeights, fetchesUV);\n    attenuation = fetchesWeights[0] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[0].xy, shadowCoord.z));\n    attenuation += fetchesWeights[1] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[1].xy, shadowCoord.z));\n    attenuation += fetchesWeights[2] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[2].xy, shadowCoord.z));\n    attenuation += fetchesWeights[3] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[3].xy, shadowCoord.z));\n    attenuation += fetchesWeights[4] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[4].xy, shadowCoord.z));\n    attenuation += fetchesWeights[5] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[5].xy, shadowCoord.z));\n    attenuation += fetchesWeights[6] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[6].xy, shadowCoord.z));\n    attenuation += fetchesWeights[7] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[7].xy, shadowCoord.z));\n    attenuation += fetchesWeights[8] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[8].xy, shadowCoord.z));\n    return attenuation;\n}\n    #endif // RECEIVESHADOW\n\n    // 计算平行光阴影\n    #if defined(CALCULATE_SHADOWS)\n\n#ifdef SHADOW_CASCADE\n// 平行光阴影级联索引\nmediump int computeCascadeIndex(in vec3 positionWS)\n{\n    vec3 fromCenter0 = positionWS - u_ShadowSplitSpheres[0].xyz;\n    vec3 fromCenter1 = positionWS - u_ShadowSplitSpheres[1].xyz;\n    vec3 fromCenter2 = positionWS - u_ShadowSplitSpheres[2].xyz;\n    vec3 fromCenter3 = positionWS - u_ShadowSplitSpheres[3].xyz;\n\n    mediump vec4 comparison = vec4(dot(fromCenter0, fromCenter0) < u_ShadowSplitSpheres[0].w,\n\tdot(fromCenter1, fromCenter1) < u_ShadowSplitSpheres[1].w,\n\tdot(fromCenter2, fromCenter2) < u_ShadowSplitSpheres[2].w,\n\tdot(fromCenter3, fromCenter3) < u_ShadowSplitSpheres[3].w);\n\n    comparison.yzw = clamp(comparison.yzw - comparison.xyz, 0.0, 1.0); // keep the nearest\n    mediump vec4 indexCoefficient = vec4(4.0, 3.0, 2.0, 1.0);\n    mediump int index = 4 - int(dot(comparison, indexCoefficient));\n    return index;\n}\n#endif\n\n// 平行光阴影坐标\nvec4 getShadowCoord(in vec3 positionWS)\n{\n\t#ifdef SHADOW_CASCADE\n    mediump int cascadeIndex = computeCascadeIndex(positionWS);\n\t    #ifdef GRAPHICS_API_GLES3\n    mat4 shadowMat = u_ShadowMatrices[cascadeIndex];\n\t    #else // GRAPHICS_API_GLES3\n    mat4 shadowMat;\n    if (cascadeIndex == 0)\n\t{\n\t    shadowMat = u_ShadowMatrices[0];\n\t}\n    else if (cascadeIndex == 1)\n\t{\n\t    shadowMat = u_ShadowMatrices[1];\n\t}\n    else if (cascadeIndex == 2)\n\t{\n\t    shadowMat = u_ShadowMatrices[2];\n\t}\n    else\n\t{\n\t    shadowMat = u_ShadowMatrices[3];\n\t}\n\t    #endif // GRAPHICS_API_GLES3\n\n    return shadowMat * vec4(positionWS, 1.0);\n\n\t#else // SHADOW_CASCADE\n\n    return u_ShadowMatrices[0] * vec4(positionWS, 1.0);\n\n\t#endif // SHADOW_CASCADE\n}\n\n// 采样平行光阴影\nfloat sampleShadowmap(in vec4 shadowCoord)\n{\n    float attenuation = 1.0;\n\n    vec3 coord = shadowCoord.xyz / shadowCoord.w;\n\n    vec4 shadowmapSize = u_ShadowMapSize;\n\n    if (coord.z > 0.0 && coord.z < 1.0)\n\t{\n\t#if defined(SHADOW_SOFT_SHADOW_HIGH)\n\t    attenuation = sampleShdowMapFiltered9(u_ShadowMap, coord, shadowmapSize);\n\t#elif defined(SHADOW_SOFT_SHADOW_LOW)\n\t    attenuation = sampleShdowMapFiltered4(u_ShadowMap, coord, shadowmapSize);\n\t#else // hard\n\t    attenuation = SAMPLE_TEXTURE2D_SHADOW(u_ShadowMap, coord);\n\t#endif // SHADOW_SOFT_SHADOW_HIGH\n\t    attenuation = mix(1.0, attenuation, ShadowStrength);\n\t}\n\n    return attenuation;\n}\n\n    #endif // CALCULATE_SHADOWS\n\n    // 计算 聚光灯 阴影\n    #if defined(CALCULATE_SPOTSHADOWS)\n\n// 聚光灯阴影坐标\nvec4 getSpotShadowCoord(in vec3 positionWS)\n{\n    vec4 coordinate = u_SpotViewProjectMatrix * vec4(positionWS, 1.0);\n\n    return coordinate;\n}\n\n// 采样聚光灯阴影\nfloat sampleSpotShadowmap(vec4 shadowCoord)\n{\n    float attenuation = 1.0;\n\n    vec3 coord = shadowCoord.xyz / shadowCoord.w;\n    coord.xy = coord.xy * 0.5 + 0.5;\n\n    vec4 shadowmapSize = u_SpotShadowMapSize;\n    // todo\n    if (coord.z > 0.0 && coord.z < 1.0)\n\t{\n\t#if defined(SHADOW_SPOT_SOFT_SHADOW_HIGH)\n\t    attenuation = sampleShdowMapFiltered9(u_SpotShadowMap, coord, shadowmapSize);\n\t#elif defined(SHADOW_SPOT_SOFT_SHADOW_LOW)\n\t    attenuation = sampleShdowMapFiltered4(u_SpotShadowMap, coord, shadowmapSize);\n\t#else // hard\n\t    attenuation = SAMPLE_TEXTURE2D_SHADOW(u_SpotShadowMap, coord);\n\t#endif\n\t    attenuation = mix(1.0, attenuation, SpotShadowStrength);\n\t}\n\n    return attenuation;\n}\n\n    #endif // CALCULATE_SPOTSHADOWS\n\n#endif // ShadowSampler_lib'),t.Shader3D.addInclude("Lighting.glsl",'#if !defined(Lighting_lib)\n    #define Lighting_lib\n\n    #include "ShadowSampler.glsl";\n\nstruct Light {\n    vec3 color;\n    vec3 dir;\n    float attenuation;\n};\n\nstruct DirectionLight {\n    vec3 color;\n    vec3 direction;\n    float attenuation;\n    int lightMode;\n};\n\nstruct PointLight {\n    vec3 color;\n    vec3 position;\n    float range;\n    float attenuation;\n    int lightMode;\n};\n\nstruct SpotLight {\n    vec3 color;\n    vec3 position;\n    float range;\n    vec3 direction;\n    float spot;\n    float attenuation;\n    int lightMode;\n};\n\n    #define LightMode_Mix      0\n    #define LightMode_RealTime 1\n\nint getAttenuationByMode(float lightMapMode)\n{\n    #ifdef LIGHTMAP // mix 0 realtime 1\n    return int(lightMapMode);\n    #endif\n    return LightMode_RealTime;\n}\n\n    #if defined(DIRECTIONLIGHT) || defined(POINTLIGHT) || defined(SPOTLIGHT)\n\n\t#define LIGHTING\n\n// 灯光衰减函数\nfloat attenuation(in vec3 L, in float invLightRadius)\n{\n    float fRatio = clamp(length(L) * invLightRadius, 0.0, 1.0);\n    fRatio *= fRatio;\n    return 1.0 / (1.0 + 25.0 * fRatio) * clamp(4.0 * (1.0 - fRatio), 0.0, 1.0);\n}\n\n// 平行光\nLight getLight(in DirectionLight directionLight)\n{\n    Light light;\n    light.color = directionLight.color;\n    light.dir = directionLight.direction;\n    light.attenuation = directionLight.attenuation;\n    return light;\n}\n\n// 点光\nLight getLight(in PointLight pointLight, in vec3 normalWS, in vec3 positionWS)\n{\n    vec3 lightDirection = positionWS - pointLight.position;\n    float rangeAttenuate = attenuation(lightDirection, 1.0 / pointLight.range);\n\n    Light light;\n    light.color = pointLight.color * rangeAttenuate;\n    light.dir = normalize(lightDirection);\n    light.attenuation = pointLight.attenuation;\n    return light;\n}\n\n// 聚光灯\nLight getLight(in SpotLight spotLight, in vec3 normalWS, in vec3 positionWS)\n{\n    vec3 lightDirection = positionWS - spotLight.position;\n    vec3 normalizeLightDir = normalize(lightDirection);\n\n    vec2 cosAngles = cos(vec2(spotLight.spot, spotLight.spot * 0.5) * 0.5);\n    float dirAttenuate = dot(spotLight.direction, normalizeLightDir);\n    dirAttenuate *= smoothstep(cosAngles.x, cosAngles.y, dirAttenuate);\n\n    float rangeAttenuate = attenuation(lightDirection, 1.0 / spotLight.range);\n\n    Light light;\n    light.color = spotLight.color * rangeAttenuate * dirAttenuate;\n    light.dir = normalizeLightDir;\n    light.attenuation = spotLight.attenuation;\n    return light;\n}\n\n\t#ifdef LEGACYSINGLELIGHTING\n\t    #define CalculateLightCount 1\n\t    #define DirectionCount\t1\n\n\t    #ifdef DIRECTIONLIGHT\nuniform DirectionLight u_DirectionLight;\n\t    #endif // DIRECTIONLIGHT\n\n\t    #ifdef POINTLIGHT\nuniform PointLight u_PointLight;\n\t    #endif // POINTLIGHT\n\n\t    #ifdef SPOTLIGHT\nuniform SpotLight u_SpotLight;\n\t    #endif // SPOTLIGHT\n\n\t#else // LEGACYSINGLELIGHTING\n\t    #define CalculateLightCount MAX_LIGHT_COUNT\n\t    #define DirectionCount\tu_DirationLightCount\n\nuniform sampler2D u_LightBuffer;\n\n\t    #ifdef DIRECTIONLIGHT\nuniform mediump int u_DirationLightCount;\n\t    #endif\n\n\t    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\nconst int c_ClusterBufferWidth = CLUSTER_X_COUNT * CLUSTER_Y_COUNT;\nconst int c_ClusterBufferHeight = CLUSTER_Z_COUNT * (1 + int(ceil(float(MAX_LIGHT_COUNT_PER_CLUSTER) / 4.0)));\nconst int c_ClusterBufferFloatWidth = c_ClusterBufferWidth * 4;\nuniform sampler2D u_LightClusterBuffer;\n\nint getLightIndex(in int offset, in int index)\n{\n    int totalOffset = offset + index;\n    int row = totalOffset / c_ClusterBufferFloatWidth;\n    int lastRowFloat = totalOffset - row * c_ClusterBufferFloatWidth;\n    int col = lastRowFloat / 4;\n    vec2 uv = vec2((float(col) + 0.5) / float(c_ClusterBufferWidth), (float(row) + 0.5) / float(c_ClusterBufferHeight));\n    vec4 texPixel = texture2D(u_LightClusterBuffer, uv);\n    int pixelComponent = lastRowFloat - col * 4;\n\n\t\t#ifdef GRAPHICS_API_GLES3\n    return int(texPixel[pixelComponent]);\n\t\t#else\n    if (pixelComponent == 0)\n\treturn int(texPixel.x);\n    else if (pixelComponent == 1)\n\treturn int(texPixel.y);\n    else if (pixelComponent == 2)\n\treturn int(texPixel.z);\n    else\n\treturn int(texPixel.w);\n\t\t#endif\n}\n\t    #endif // POINTLIGHT || SPOTLIGHT\n\n\t#endif // LEGACYSINGLELIGHTING\n\n\t#ifdef DIRECTIONLIGHT\nDirectionLight getDirectionLight(in int index, in vec3 positionWS)\n{\n    DirectionLight light;\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_DirectionLight.color;\n    light.direction = u_DirectionLight.direction;\n    light.attenuation = 1.0;\n    light.lightMode = LightMode_RealTime;\n\t    #else // LEGACYSINGLELIGHTING\n    float v = (float(index) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    light.color = p1.rgb;\n    light.direction = p2.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p1.a);\n\t    #endif // LEGACYSINGLELIGHTING\n\n\t    #if defined(CALCULATE_SHADOWS)\n    if (index == 0)\n\t{\n\t    vec4 shadowCoord = getShadowCoord(positionWS);\n\t    float shadowAttenuation = sampleShadowmap(shadowCoord);\n\t    light.attenuation = shadowAttenuation;\n\t}\n\t    #endif // CALCULATE_SHADOWS\n\n    return light;\n}\n\t#endif // DIRECTIONLIGHT\n\n\t#if defined(POINTLIGHT) || defined(SPOTLIGHT)\nivec4 getClusterInfo(mat4 viewMatrix, vec4 viewport, vec3 positionWS, vec4 fragCoord, vec4 projectParams)\n{\n\t    #ifdef LEGACYSINGLELIGHTING\n    return ivec4(1, 1, 0, 0);\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  这个地方 用 positionVS 替换?\n    vec3 viewPos = vec3(viewMatrix * vec4(positionWS, 1.0));\n    int clusterXIndex = int(floor(fragCoord.x / (float(viewport.z) / float(CLUSTER_X_COUNT))));\n    int clusterYIndex = int(floor((viewport.w * (projectParams.z < 0.0 ? 0.0 : 1.0) - fragCoord.y * projectParams.z) / (float(viewport.w) / float(CLUSTER_Y_COUNT))));\n    float zSliceParam = float(CLUSTER_Z_COUNT) / log2(projectParams.y / projectParams.x);\n    int clusterZIndex = int(floor(log2(-viewPos.z) * zSliceParam - log2(projectParams.x) * zSliceParam));\n    // todo 化简\n    vec2 uv = vec2((float(clusterXIndex + clusterYIndex * CLUSTER_X_COUNT) + 0.5) / float(c_ClusterBufferWidth), (float(clusterZIndex) + 0.5) / float(c_ClusterBufferHeight));\n    vec4 clusterPixel = texture2D(u_LightClusterBuffer, uv);\n    return ivec4(clusterPixel); // X:Point Count Y:Spot Count Z、W:Light Offset\n\t    #endif // LEGACYSINGLELIGHTING\n}\n\t#endif // POINTLIGHT || SPOTLIGHT\n\n\t#ifdef POINTLIGHT\nPointLight getPointLight(in int index, in ivec4 clusterInfo, in vec3 positionWS)\n{\n\n    PointLight light;\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_PointLight.color;\n    light.position = u_PointLight.position;\n    light.range = u_PointLight.range;\n    light.attenuation = 1.0;\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  重复计算\n    int indexOffset = clusterInfo.z * c_ClusterBufferFloatWidth + clusterInfo.w;\n    int pointIndex = getLightIndex(indexOffset, index);\n    float v = (float(pointIndex) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    light.color = p1.rgb;\n    light.range = p1.a;\n    light.position = p2.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p2.a);\n\t    #endif // LEGACYSINGLELIGHTING\n    return light;\n}\n\t#endif // POINTLIGHT\n\n\t#ifdef SPOTLIGHT\nSpotLight getSpotLight(in int index, in ivec4 clusterInfo, in vec3 positionWS)\n{\n    SpotLight light;\n\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_SpotLight.color;\n    light.position = u_SpotLight.position;\n    light.range = u_SpotLight.range;\n    light.direction = u_SpotLight.direction;\n    light.spot = u_SpotLight.spot;\n    light.attenuation = 1.0;\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  重复计算\n    int indexOffset = clusterInfo.z * c_ClusterBufferFloatWidth + clusterInfo.w;\n    int spotIndex = getLightIndex(indexOffset, index + clusterInfo.x);\n    float v = (float(spotIndex) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    vec4 p3 = texture2D(u_LightBuffer, vec2(0.625, v));\n    light.color = p1.rgb;\n    light.range = p1.a;\n    light.position = p2.rgb;\n    light.spot = p2.a;\n    light.direction = p3.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p3.a);\n\t    #endif // LEGACYSINGLELIGHTING\n\n\t    #if defined(CALCULATE_SPOTSHADOWS)\n    if (index == 0)\n\t{\n\t    vec4 shadowCoord = getSpotShadowCoord(positionWS);\n\t    float shadowAttenuation = sampleSpotShadowmap(shadowCoord);\n\t    light.attenuation = shadowAttenuation;\n\t}\n\t    #endif // CALCULATE_SPOTSHADOWS\n\n    return light;\n}\n\t#endif // SPOTLIGHT\n\n    #endif // DIRECTIONLIGHT || POINTLIGHT || SPOTLIGHT\n\n#endif // Lighting_lib'),t.Shader3D.addInclude("globalIllumination.glsl","#if !defined(globalIllumination_lib)\n    #define globalIllumination_lib\n\nvec3 rotateByYAixs(in vec3 normal)\n{\n    float co = cos(u_GIRotate);\n    float si = sin(u_GIRotate);\n    float x = normal.x * co - normal.z * si;\n    float z = normal.x * si + normal.z * co;\n    return vec3(x, normal.y, z);\n}\n\nvec4 rotateByYAixs(in vec4 normal)\n{\n    float co = cos(u_GIRotate);\n    float si = sin(u_GIRotate);\n    float x = normal.x * co - normal.z * si;\n    float z = normal.x * si + normal.z * co;\n    return vec4(x, normal.y, z, normal.w);\n}\nuniform float u_AmbientIntensity;\nuniform float u_ReflectionIntensity;\n\n    #ifdef GI_IBL\n\nuniform vec3 u_IblSH[9];\n\n\t#define IBL_ROUGHNESS_LEVEL 4.0\nuniform samplerCube u_IBLTex;\n\n// todo 格式\nvec3 diffuseIrradiance(in vec3 normal)\n{\n    // todo cmeng 生成的数据问题， 临时转换下\n    vec3 n = normal * vec3(-1.0, 1.0, 1.0);\n    n = rotateByYAixs(n);\n    return max(\n\tu_IblSH[0]\n\t    + u_IblSH[1] * n.y\n\t    + u_IblSH[2] * n.z\n\t    + u_IblSH[3] * n.x\n\t    + u_IblSH[4] * (n.y * n.x)\n\t    + u_IblSH[5] * (n.y * n.z)\n\t    + u_IblSH[6] * (3.0 * n.z * n.z - 1.0)\n\t    + u_IblSH[7] * (n.z * n.x)\n\t    + u_IblSH[8] * (n.x * n.x - n.y * n.y),\n\t0.0);\n}\n\nvec3 specularIrradiance(in vec3 r, in float perceptualRoughness)\n{\n    float lod = IBL_ROUGHNESS_LEVEL * perceptualRoughness;\n\n    // todo 临时转换\n    vec3 reflectDir = r * vec3(-1.0, 1.0, 1.0);\n\n    // todo rotateY SceneConfig\n    reflectDir = rotateByYAixs(reflectDir);\n\n    // todo float 编码 ?\n    vec4 reflectSampler = textureCubeLodEXT(u_IBLTex, reflectDir, lod);\n\n\t#ifdef IBL_RGBD\n    return decodeRGBD(reflectSampler);\n\t#else // IBL_RGBD\n    return reflectSampler.rgb;\n\t#endif // IBL_RGBD\n}\n\n    #endif // GI_IBL\n\n    #ifdef GI_LEGACYIBL\n\nuniform vec4 u_AmbientSHAr;\nuniform vec4 u_AmbientSHAg;\nuniform vec4 u_AmbientSHAb;\nuniform vec4 u_AmbientSHBr;\nuniform vec4 u_AmbientSHBg;\nuniform vec4 u_AmbientSHBb;\nuniform vec4 u_AmbientSHC;\n\n\t#define LAYA_SPECCUBE_LOD_STEPS 6.0\nuniform samplerCube u_ReflectTexture;\nuniform vec4 u_ReflectCubeHDRParams;\n\nvec3 shEvalLinearL0L1(in vec4 normal)\n{\n    vec3 x;\n    x.r = dot(u_AmbientSHAr, normal);\n    x.g = dot(u_AmbientSHAg, normal);\n    x.b = dot(u_AmbientSHAb, normal);\n    return x;\n}\n\nvec3 shEvalLinearL2(in vec4 normal)\n{\n    vec3 x1, x2;\n    // 4 of the quadratic (L2) polynomials\n    vec4 vB = normal.xyzz * normal.yzzx;\n    x1.r = dot(u_AmbientSHBr, vB);\n    x1.g = dot(u_AmbientSHBg, vB);\n    x1.b = dot(u_AmbientSHBb, vB);\n\n    // Final (5th) quadratic (L2) polynomial\n    float vC = normal.x * normal.x - normal.y * normal.y;\n    x2 = u_AmbientSHC.rgb * vC;\n\n    return x1 + x2;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    // todo -x 坐标转换\n    vec4 normal = vec4(-normalWS.x, normalWS.yz, 1.0);\n\n    // TODO rotate y SceneConfig\n\n    normal = rotateByYAixs(normal);\n\n    vec3 ambientContrib = shEvalLinearL0L1(normal);\n    ambientContrib += shEvalLinearL2(normal);\n    vec3 ambient = max(vec3(0.0), ambientContrib);\n\n    return ambient;\n}\n\nvec3 specularIrradiance(in vec3 r, in float perceptualRoughness)\n{\n    float roughness = perceptualRoughness * (1.7 - 0.7 * perceptualRoughness);\n    // todo 临时转换\n    r *= vec3(-1.0, 1.0, 1.0);\n    r = rotateByYAixs(r);\n\n    float lod = roughness * LAYA_SPECCUBE_LOD_STEPS;\n    vec4 rgbm = textureCubeLodEXT(u_ReflectTexture, r, lod);\n    float range = u_ReflectCubeHDRParams.x;\n    vec3 color = decodeRGBM(rgbm, range);\n    color = gammaToLinear(color);\n    return color;\n}\n\n    #endif // GI_LEGACYIBL\n\n    #ifndef GI_IBL\n\t#ifndef GI_LEGACYIBL\n\nuniform vec4 u_AmbientColor;\n\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    return u_AmbientColor.rgb;\n}\n\nvec3 specularIrradiance(in vec3 r, in float perceptualRoughness)\n{\n    // todo\n    return u_AmbientColor.rgb;\n}\n\n\t#endif // GI_LEGACYIBL\n    #endif // GI_IBL\n\n    #ifdef LIGHTMAP\nuniform sampler2D u_LightMap;\nvec3 getBakedLightmapColor(in vec2 lightmapUV)\n{\n    vec4 lightmapSampler = texture2D(u_LightMap, lightmapUV);\n\t// todo lightmap rgbm encode color space\n\t#ifdef Gamma_u_LightMap\n    lightmapSampler = gammaToLinear(lightmapSampler);\n\t#endif // Gamma_u_LightMap\n    return lightmapSampler.rgb;\n}\n    #endif // LIGHTMAP\n\n#ifdef SPECCUBE_BOX_PROJECTION\n\nuniform vec3 u_SpecCubeProbePosition;\nuniform vec3 u_SpecCubeBoxMax;\nuniform vec3 u_SpecCubeBoxMin;\n\nvec3 getBoxProjectionReflectedVector(vec3 r, vec3 positionWS, vec3 boxCenter, vec3 boxMin, vec3 boxMax)\n{\n    vec3 nr = normalize(r);\n    vec3 rbmax = boxMax - positionWS;\n    vec3 rbmin = boxMin - positionWS;\n    vec3 select = step(vec3(0.0), r);\n    vec3 rbminmax = mix(rbmin, rbmax, select) / nr;\n    float scalar = vecmin(rbminmax);\n    vec3 boxr = nr * scalar + positionWS - boxCenter;\n    return boxr;\n}\n\n#endif // SPECCUBE_BOX_PROJECTION\n\n#endif // globalIllumination_lib"),t.Shader3D.addInclude("BlinnPhongLighting.glsl",'#if !defined(BlinnPhongLighting_lib)\n    #define BlinnPhongLighting_lib\n\n    #include "Lighting.glsl";\n    #include "globalIllumination.glsl";\n\nstruct PixelInfo {\n    vec3 positionWS;\n    vec3 normalWS;\n    vec3 viewDir;\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    vec2 lightmapUV;\n\t#endif // UV1\n    #endif // LIGHTMAP\n};\n\nstruct Surface {\n    vec3 diffuseColor;\n    vec3 specularColor;\n    float shininess;\n    vec3 gloss;\n    float alpha;\n    float alphaClip;\n};\n\nvec3 BlinnPhongLighting(in Surface surface, in Light light, in PixelInfo pixel)\n{\n    vec3 l = normalize(-light.dir);\n    vec3 v = pixel.viewDir;\n\n    vec3 normalWS = pixel.normalWS;\n\n    vec3 diffuseColor = surface.diffuseColor;\n    float shininess = surface.shininess;\n    vec3 specularColor = surface.specularColor;\n    vec3 gloss = surface.gloss;\n\n    // difffuse\n    float ndl = max(0.0, dot(normalWS, l));\n    vec3 lightDiffuse = light.color * diffuseColor * ndl;\n\n    // specular\n    mediump vec3 h = normalize(v + l);\n    lowp float ndh = max(0.0, dot(h, normalWS));\n    float specularIntensity = pow(ndh, shininess * 128.0);\n    vec3 lightSpecular = light.color * specularColor * specularIntensity * gloss;\n\n    return lightDiffuse + lightSpecular;\n}\n\nvec3 BlinnPhongGI(const in Surface surface, const in PixelInfo info)\n{\n    vec3 indirect = vec3(0.0);\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n\n    vec2 lightmapUV = info.lightmapUV;\n    vec3 bakedColor = getBakedLightmapColor(lightmapUV);\n    // todo  surface.diffuseColor ？\n    indirect = bakedColor;\n\n\t#endif // UV1\n\n    #else // LIGHTMAP\n\n    vec3 n = info.normalWS;\n    indirect = diffuseIrradiance(n) * surface.diffuseColor * u_AmbientIntensity;\n\n    #endif // LIGHTMAP\n\n    return indirect;\n}\n\n#endif // BlinnPhongLighting_lib'),t.Shader3D.addInclude("PBRLighting.glsl",'#if !defined(PBRLighting_lib)\n    #define PBRLighting_lib\n\n    #include "Lighting.glsl";\n\n    // 精度\n    #if !defined(GL_FRAGMENT_PRECISION_HIGH)\n\t#define MIN_PERCEPTUAL_ROUGHNESS 0.089\n\t#define MIN_ROUGHNESS\t\t 0.007921\n    #else\n\t#define MIN_PERCEPTUAL_ROUGHNESS 0.045\n\t#define MIN_ROUGHNESS\t\t 0.002025\n    #endif\n\n    #define MIN_N_DOT_V 1e-4\n\n    #include "BRDF.glsl";\n\nstruct PixelInfo {\n    vec3 positionWS;\n    vec3 normalWS;\n\n    #ifdef NEEDTBN\n    vec3 tangentWS;\n    vec3 biNormalWS;\n\n\t#ifdef ANISOTROPIC\n    float ToV;\n    float BoV;\n\t#endif // ANISOTROPIC\n\n    #endif // NEEDTBN\n\n    vec3 viewDir;\n    float NoV;\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    vec2 lightmapUV;\n\t#endif // UV1\n    #endif // LIGHTMAP\n};\n\nstruct Surface {\n    vec3 diffuseColor;\n    float alpha;\n    vec3 f0;\n    float roughness;\n    float perceptualRoughness;\n    float occlusion;\n\n    #ifdef ANISOTROPIC\n    float anisotropy;\n    #endif // ANISOTROPIC\n};\n\nstruct LightParams {\n    vec3 h;\n    float NoL;\n    float NoH;\n    float LoH;\n\n    #ifdef ANISOTROPIC\n    float ToL;\n    float BoL;\n    #endif // ANISOTROPIC\n};\n\n// 获取反射向量\nvec3 getReflectedVector(const in Surface surface, const in PixelInfo info)\n{\n    vec3 v = info.viewDir;\n    vec3 n = info.normalWS;\n\n    #ifdef ANISOTROPIC\n\n    vec3 direction = surface.anisotropy >= 0.0 ? info.biNormalWS : info.tangentWS;\n    vec3 at = cross(direction, v);\n    vec3 an = cross(at, direction);\n    float bendFactor = abs(surface.anisotropy) * saturate(5.0 * surface.perceptualRoughness);\n    vec3 bentNormal = normalize(mix(n, an, bendFactor));\n    return reflect(-v, bentNormal);\n\n    #else // ANISOTROPIC\n    return reflect(-v, n);\n    #endif // ANISOTROPIC\n}\n\nvoid initLightParams(inout LightParams params, const in PixelInfo pixel, const in Light light)\n{\n    vec3 l = normalize(-light.dir);\n    vec3 v = pixel.viewDir;\n    vec3 n = pixel.normalWS;\n\n    vec3 h = SafeNormalize(v + l);\n    params.h = h;\n    params.NoL = saturate(dot(n, l));\n    params.NoH = saturate(dot(n, h));\n    params.LoH = saturate(dot(l, h));\n\n    #ifdef ANISOTROPIC\n    params.ToL = dot(pixel.tangentWS, l);\n    params.BoL = dot(pixel.biNormalWS, l);\n    #endif // ANISOTROPIC\n}\n\nvec3 diffuseLobe(in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    return surface.diffuseColor * diffuse();\n    // return surface.diffuseColor * Fd_Burley(surface.roughness, pixel.NoV, lightParams.NoL, lightParams.LoH);\n}\n\nvec3 specularLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.roughness;\n    #ifdef ANISOTROPIC\n\n\t#ifdef NEEDTBN\n\n    float at = max(roughness * (1.0 + surface.anisotropy), 0.001);\n    float ab = max(roughness * (1.0 - surface.anisotropy), 0.001);\n\n    float D = D_GGX_Anisotropic(lightParams.NoH, lightParams.h, pixel.tangentWS, pixel.biNormalWS, at, ab);\n    float V = V_SmithGGXCorrelated_Anisotropic(at, ab, pixel.ToV, pixel.BoV, lightParams.ToL, lightParams.BoL, pixel.NoV, lightParams.NoL);\n\n\t#endif // NEEDTBN\n\n    #else // ANISOTROPIC\n\n    float D = distribution(roughness, lightParams.NoH, lightParams.h, pixel.normalWS);\n    float V = visibility(roughness, pixel.NoV, lightParams.NoL);\n\n    #endif // ANISOTROPIC\n\n    vec3 F = fresnel(surface.f0, lightParams.LoH);\n\n    return (D * V) * F;\n}\n\nvec3 PBRLighting(const in Surface surface, const in PixelInfo pixel, const in Light light)\n{\n    LightParams lightParams;\n    initLightParams(lightParams, pixel, light);\n\n    vec3 Fd = diffuseLobe(surface, pixel, lightParams);\n\n    vec3 Fr = specularLobe(surface, pixel, lightParams);\n\n    return (Fd + Fr) * light.color * lightParams.NoL;\n}\n\n    // gi\n    #include "PBRGI.glsl";\n\n#endif // PBRLighting_lib'),mn.init(),An.init(),nn.init(),ln.init(),gn.init(),dn.init(),_n.init(),Sn.init(),pn.init(),Tn.init(),En.init(),t.Shader3D.SHADERDEFINE_LEGACYSINGALLIGHTING=t.Shader3D.getDefineByName("LEGACYSINGLELIGHTING"),t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES2=t.Shader3D.getDefineByName("GRAPHICS_API_GLES2"),t.Shader3D.SHADERDEFINE_GRAPHICS_API_GLES3=t.Shader3D.getDefineByName("GRAPHICS_API_GLES3"),t.Shader3D.SHADERDEFINE_ENUNIFORMBLOCK=t.Shader3D.getDefineByName("ENUNIFORMBLOCK")}}class Dn extends t.IndexBuffer{get indexType(){return this._indexType}get indexTypeByteCount(){return this._indexTypeByteCount}get indexCount(){return this._indexCount}get canRead(){return this._canRead}constructor(e,r,a=t.BufferUsage.Static,n=!1){switch(super(t.BufferTargetType.ELEMENT_ARRAY_BUFFER,a),this._indexType=e,this._indexCount=r,this._canRead=n,e){case t.IndexFormat.UInt32:this._indexTypeByteCount=4;break;case t.IndexFormat.UInt16:this._indexTypeByteCount=2;break;case t.IndexFormat.UInt8:this._indexTypeByteCount=1;break;default:throw new Error("unidentification index type.")}var i=this._indexTypeByteCount*r;if(this._byteLength=i,this._setIndexData(i),n)switch(e){case t.IndexFormat.UInt32:this._buffer=new Uint32Array(r);break;case t.IndexFormat.UInt16:this._buffer=new Uint16Array(r);break;case t.IndexFormat.UInt8:this._buffer=new Uint8Array(r)}}setData(e,r=0,a=0,n=4294967295){var i=this._indexTypeByteCount;if(0!==a||4294967295!==n)switch(this._indexType){case t.IndexFormat.UInt32:e=new Uint32Array(e.buffer,a*i,n);break;case t.IndexFormat.UInt16:e=new Uint16Array(e.buffer,a*i,n);break;case t.IndexFormat.UInt8:e=new Uint8Array(e.buffer,a*i,n)}if(this._setIndexData(e,r*i),this._canRead)if(0!==r||0!==a||4294967295!==n){var s=this._buffer.length-r;if(n>s&&(n=s),typeof e==typeof this._buffer&&e.length==n)this._buffer.set(e,r);else for(var o=0;o<n;o++)this._buffer[r+o]=e[o]}else this._buffer=e}getData(){if(this._canRead)return this._buffer;throw new Error("Can't read data from VertexBuffer with only write flag!")}destroy(){super.destroy(),this._buffer=null,this._byteLength=0,this._indexCount=0}}class Rn extends t.VertexBuffer{get vertexDeclaration(){return this._vertexDeclaration}set vertexDeclaration(e){this._vertexDeclaration=e}get canRead(){return this._canRead}constructor(e,r,a=!1){super(t.BufferTargetType.ARRAY_BUFFER,r),this._float32Reader=null,this._canRead=a,this._byteLength=e,this.bind(),this._glBuffer.setDataLength(e),this._canRead&&(this._buffer=new Uint8Array(e),this._float32Reader=new Float32Array(this._buffer.buffer))}orphanStorage(){this.bind(),this._glBuffer.setDataLength(this._byteLength)}setData(e,t=0,r=0,a=Number.MAX_SAFE_INTEGER){if(this.bind(),0!==r||a!==Number.MAX_SAFE_INTEGER){var n=new Uint8Array(e,r,a);this._glBuffer.setData(n,t),this._canRead&&this._buffer.set(n,t)}else this._glBuffer.setData(e,t),this._canRead&&this._buffer.set(new Uint8Array(e),t)}getUint8Data(){if(this._canRead)return this._buffer;throw new Error("Can't read data from VertexBuffer with only write flag!")}getFloat32Data(){if(this._canRead)return this._float32Reader;throw new Error("Can't read data from VertexBuffer with only write flag!")}markAsUnreadbale(){this._canRead=!1,this._buffer=null,this._float32Reader=null}destroy(){super.destroy(),this._buffer=null,this._float32Reader=null,this._vertexDeclaration=null,this._byteLength=0}}class Cn{get min(){return this.getMin()}set min(e){this.setMin(e)}get max(){return this.getMax()}set max(e){this.setMax(e)}setMin(e){var t=this._boundBox.min;e!==t&&e.cloneTo(t),this._setUpdateFlag(Cn._UPDATE_CENTER|Cn._UPDATE_EXTENT,!0),this._setUpdateFlag(Cn._UPDATE_MIN,!1)}getMin(){var e=this._boundBox.min;return this._getUpdateFlag(Cn._UPDATE_MIN)&&(this._getMin(this.getCenter(),this.getExtent(),e),this._setUpdateFlag(Cn._UPDATE_MIN,!1)),e}setMax(e){var t=this._boundBox.max;e!==t&&e.cloneTo(t),this._setUpdateFlag(Cn._UPDATE_CENTER|Cn._UPDATE_EXTENT,!0),this._setUpdateFlag(Cn._UPDATE_MAX,!1)}getMax(){var e=this._boundBox.max;return this._getUpdateFlag(Cn._UPDATE_MAX)&&(this._getMax(this.getCenter(),this.getExtent(),e),this._setUpdateFlag(Cn._UPDATE_MAX,!1)),e}setCenter(e){e!==this._center&&e.cloneTo(this._center),this._setUpdateFlag(Cn._UPDATE_MIN|Cn._UPDATE_MAX,!0),this._setUpdateFlag(Cn._UPDATE_CENTER,!1)}getCenter(){return this._getUpdateFlag(Cn._UPDATE_CENTER)&&(this._getCenter(this.getMin(),this.getMax(),this._center),this._setUpdateFlag(Cn._UPDATE_CENTER,!1)),this._center}setExtent(e){e!==this._extent&&e.cloneTo(this._extent),this._setUpdateFlag(Cn._UPDATE_MIN|Cn._UPDATE_MAX,!0),this._setUpdateFlag(Cn._UPDATE_EXTENT,!1)}getExtent(){return this._getUpdateFlag(Cn._UPDATE_EXTENT)&&(this._getExtent(this.getMin(),this.getMax(),this._extent),this._setUpdateFlag(Cn._UPDATE_EXTENT,!1)),this._extent}constructor(e,r){this._updateFlag=0,this._center=new t.Vector3,this._extent=new t.Vector3,this._boundBox=new fr(new t.Vector3,new t.Vector3),e&&e.cloneTo(this._boundBox.min),r&&r.cloneTo(this._boundBox.max),this._setUpdateFlag(Cn._UPDATE_CENTER|Cn._UPDATE_EXTENT,!0)}_getUpdateFlag(e){return 0!=(this._updateFlag&e)}_setUpdateFlag(e,t){t?this._updateFlag|=e:this._updateFlag&=~e}_getCenter(e,r,a){t.Vector3.add(e,r,a),t.Vector3.scale(a,.5,a)}_getExtent(e,r,a){t.Vector3.subtract(r,e,a),t.Vector3.scale(a,.5,a)}_getMin(e,r,a){t.Vector3.subtract(e,r,a)}_getMax(e,r,a){t.Vector3.add(e,r,a)}_rotateExtents(e,t,r){var a=e.x,n=e.y,i=e.z,s=t.elements;r.x=Math.abs(s[0]*a)+Math.abs(s[4]*n)+Math.abs(s[8]*i),r.y=Math.abs(s[1]*a)+Math.abs(s[5]*n)+Math.abs(s[9]*i),r.z=Math.abs(s[2]*a)+Math.abs(s[6]*n)+Math.abs(s[10]*i)}_tranform(e,r){var a=r._center,n=r._extent;t.Vector3.transformCoordinate(this.getCenter(),e,a),this._rotateExtents(this.getExtent(),e,n),r._boundBox.setCenterAndExtent(a,n),r._updateFlag=0}_getBoundBox(){if(this._updateFlag&Cn._UPDATE_MIN){var e=this._boundBox.min;this._getMin(this.getCenter(),this.getExtent(),e),this._setUpdateFlag(Cn._UPDATE_MIN,!1)}if(this._updateFlag&Cn._UPDATE_MAX){var t=this._boundBox.max;this._getMax(this.getCenter(),this.getExtent(),t),this._setUpdateFlag(Cn._UPDATE_MAX,!1)}return this._boundBox}calculateBoundsintersection(e){var t=this.getMax(),r=this.getMin(),a=e.getMax(),n=e.getMin(),i=vn,s=yn,o=this.getExtent(),l=e.getExtent();return i.setValue(Math.max(t.x,a.x)-Math.min(r.x,n.x),Math.max(t.y,a.y)-Math.min(r.y,n.y),Math.max(t.z,a.z)-Math.min(r.z,n.z)),s.setValue(2*(o.x+l.x),2*(o.y+l.y),2*(o.z+l.z)),i.x>s.x||i.y>s.y||i.z>s.z?-1:(s.x-i.x)*(s.y-i.y)*(s.z-i.z)}cloneTo(e){var t=e;this.getMin().cloneTo(t._boundBox.min),this.getMax().cloneTo(t._boundBox.max),this.getCenter().cloneTo(t._center),this.getExtent().cloneTo(t._extent),t._updateFlag=0}clone(){var e=new Cn(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}Cn._UPDATE_MIN=1,Cn._UPDATE_MAX=2,Cn._UPDATE_CENTER=4,Cn._UPDATE_EXTENT=8;const vn=new t.Vector3,yn=new t.Vector3;class In{}class Mn{constructor(){Mn.instance=this,this._instanceBatchManager=ba.instance,this._recoverList=new t.SingletonList}recoverData(){let e=this._recoverList.elements;for(let t=0,r=this._recoverList.length;t<r;t++){e[t].recover()}this._recoverList.length=0}batch(e){let r=e.length;e.length=0,this._instanceBatchManager.updateCountMark++;let a=e.elements;for(var n=0;n<r;n++){let r=e.elements[n];if(r._canBatch)if(r.staticBatch&&(!r.render._probReflection||r.render._probReflection._isScene)&&t.Config3D.enableStaticBatch)e.add(r);else if(t.Config3D.enableDynamicBatch&&t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance))if(r.renderSubShader._owner._enableInstancing&&r.render.lightmapIndex<0){var i=this._instanceBatchManager,s=i.getInstanceBatchOpaquaMark(r.render.receiveShadow,r.material.id,r._geometry._id,!!r.transform&&r.transform._isFrontFaceInvert,r.render._probReflection?r.render._probReflection.id:-1);if(i.updateCountMark===s.updateMark){var o=s.indexInList,l=a[o];if(s.batched){var h=l._instanceBatchElementList;h.length===$a.maxInstanceCount?(s.updateMark=i.updateCountMark,s.indexInList=e.length,s.batched=!1,e.add(r)):h.add(r)}else{let e=Zr.create();this._recoverList.add(e),e.render=l.render,e.renderType=ze.RENDERTYPE_INSTANCEBATCH,e._geometry.subMesh=l._geometry,e.material=l.material,e.setTransform(null),e.renderSubShader=l.renderSubShader;let t=e._instanceBatchElementList;t.length=0,t.add(l),t.add(r),a[o]=e,s.batched=!0,e._isUpdataData=!0}}else s.updateMark=i.updateCountMark,s.indexInList=e.length,s.batched=!1,e.add(r)}else e.add(r);else e.add(r);else e.add(r)}}}class Ln{set sortPass(e){this._sortPass=e}constructor(e){this._isTransparent=!1,this.elements=new t.SingletonList,this._isTransparent=e,this._batch=Mn.instance?Mn.instance:new Mn}set context(e){this._context=e._contextOBJ}addRenderElement(e){this.elements.add(e)}clear(){this.elements.length=0}renderQueue(e){this.context=e,this._context.applyContext(Ft._updateMark);var r=this.elements.elements;this._batchQueue();for(var a=0,n=this.elements.length;a<n;a++)r[a]._renderUpdatePre(e);this._sort();for(a=0,n=this.elements.length;a<n;a++)r[a]._render(this._context);return t.BufferState._curBindedBufferState&&t.BufferState._curBindedBufferState.unBind(),this._batch.recoverData(),n}_batchQueue(){this._isTransparent||this._batch.batch(this.elements)}_sort(){var e=this.elements.length;this._sortPass.sort(this.elements,this._isTransparent,0,e-1)}destroy(){this.elements.destroy()}}class On{}class bn{constructor(){this._shaderInstances=new t.SingletonList}_addShaderInstance(e){this._shaderInstances.add(e)}_clearShaderInstance(){this._shaderInstances.length=0}_render(e){var t=e.invertY,r=e.cameraUpdateMark,a=e.sceneID,n=e.sceneShaderData,i=e.cameraShaderData;if(this._isRender)for(var s=this._shaderInstances.elements,o=0,l=this._shaderInstances.length;o<l;o++){const l=s[o];if(l.complete){var h=l.bind(),c=r!==l._uploadMark,d=l._uploadScene!==a||c;if((d||h)&&(n&&l.uploadUniforms(l._sceneUniformParamsMap,n,d),l._uploadScene=a),this._renderShaderData){var _=l._uploadRender!==this._renderShaderData||c;(_||h)&&(l.uploadUniforms(l._spriteUniformParamsMap,this._renderShaderData,_),l._uploadRender=this._renderShaderData)}var u=l._uploadCameraShaderValue!==i||c;(u||h)&&(i&&l.uploadUniforms(l._cameraUniformParamsMap,i,u),l._uploadCameraShaderValue=i);var m=l._uploadMaterial!==this._materialShaderData||c;(m||h)&&(l.uploadUniforms(l._materialUniformParamsMap,this._materialShaderData,m),l._uploadMaterial=this._materialShaderData,e.globalShaderData&&l.uploadUniforms(l._materialUniformParamsMap,e.globalShaderData,m)),l.uploadRenderStateBlendDepth(this._materialShaderData),l.uploadRenderStateFrontFace(this._materialShaderData,t,this._invertFront),this.drawGeometry(l)}}}drawGeometry(e){t.LayaGL.renderDrawContext.drawGeometryElement(this._geometry)}_destroy(){this._geometry=null,this._shaderInstances=null,this._materialShaderData=null,this._renderShaderData=null,this._transform=null,this._isRender=null}}class wn extends bn{addUpdateBuffer(e,t){this._vertexBuffer3D[this.updateNums]=e,this._updateDataNum[this.updateNums++]=t}getUpdateData(e,t){let r=this._updateData[e];return(!r||r.length<t)&&(r=this._updateData[e]=new Float32Array(t)),r}constructor(){super(),this._vertexBuffer3D=[],this._updateData=[],this._updateDataNum=[]}drawGeometry(e){let r,a;for(let e=0;e<this.updateNums&&(a=this._vertexBuffer3D[e],a);e++)r=this._updateData[e],a.orphanStorage(),a.setData(r.buffer,0,0,this.drawCount*this._updateDataNum[e]*4);t.LayaGL.renderDrawContext.drawGeometryElement(this._geometry)}clear(){this.updateNums=0}}class Bn{sort(e,t,r,a){this.elementArray=e,this.isTransparent=t,this._quickSort(r,a)}_quickSort(e,t){if(this.elementArray.length>1){var r=this._partitionRenderObject(e,t),a=r-1;e<a&&this._quickSort(e,a),r<t&&this._quickSort(r,t)}}_partitionRenderObject(e,t){for(var r=this.elementArray.elements,a=r[Math.floor((t+e)/2)];e<=t;){for(;this._compare(r[e],a)<0;)e++;for(;this._compare(r[t],a)>0;)t--;if(e<t){var n=r[e];r[e]=r[t],r[t]=n,e++,t--}else if(e===t){e++;break}}return e}_compare(e,t){var r=e.material.renderQueue-t.material.renderQueue;return 0===r?(this.isTransparent?t.render.distanceForSort-e.render.distanceForSort:e.render.distanceForSort-t.render.distanceForSort)+t.render.sortingFudge-e.render.sortingFudge:r}}class Nn{constructor(){this.invertY=!1,this.viewPort=new se(0,0,0,0),this.scissor=new t.Vector4,this.pipelineMode="Forward"}applyContext(e){this.destTarget&&this.destTarget._start(),this.cameraUpdateMark=e,t.LayaGL.renderEngine.viewport(this.viewPort.x,this.viewPort.y,this.viewPort.width,this.viewPort.height),t.LayaGL.renderEngine.scissor(this.scissor.x,this.scissor.y,this.scissor.z,this.scissor.w)}drawRenderElement(e){e._render(this)}}class Vn{constructor(e,r){this.mode=e,this.drawParams=new t.SingletonList,this.drawType=r}setDrawArrayParams(e,t){this.drawParams.add(e),this.drawParams.add(t)}setDrawElemenParams(e,t){this.drawParams.add(t),this.drawParams.add(e)}destroy(){}clearRenderParams(){this.drawParams.length=0}}class Pn{constructor(){this._renders=new t.SingletonList,this._motionRenders=new t.SingletonList}get list(){return this._renders}set list(e){this._renders=e}addRenderObject(e){this._renders.add(e)}removeRenderObject(e){this._renders.remove(e),this.removeMotionObject(e)}removeMotionObject(e){let t=e._motionIndexList;if(-1!=t){let e=this._motionRenders.elements;this._motionRenders.length-=1,e[length]._motionIndexList=t,e[t]=e[length]}}updateMotionObjects(){for(let e=0;e<this._motionRenders.length;e++)this._motionRenders.elements[e].bounds,this._motionRenders.elements[e]._motionIndexList=-1;this._motionRenders.length=0}addMotionObject(e){-1==e._motionIndexList&&(e._motionIndexList=this._motionRenders.length,this._motionRenders.add(e))}destroy(){this._renders.destroy()}}class Fn{}class Un extends bn{constructor(){super()}drawGeometry(e){let r=this._shaderInstances.length,a=this._geometry.drawParams.elements;if(this.skinnedData){this._geometry.bufferState.bind();for(var n=0,i=r;n<i;n++)for(var s=0,o=this._geometry.drawParams.length/2;s<o;s++){var l=this.skinnedData[s];e.uploadCustomUniform(kr.BONES,l);var h=2*s;t.LayaGL.renderDrawContext.drawElements(this._geometry.mode,a[h+1],this._geometry.indexFormat,a[h])}}}}class Gn{constructor(){this.globalBlockMap={}}createTransform(e){return new c(e)}createBounds(e,t){return new Cn(e,t)}createShaderData(){return new t.ShaderData}createRenderElement(){return new bn}createSkinRenderElement(){return new Un}createInstanceRenderElement(){return new wn}createBaseRenderQueue(e){var t=new Ln(e);return t.sortPass=this.createSortPass(),t}createRenderGeometry(e,t){return new Vn(e,t)}createVertexBuffer3D(e,t,r=!1){return new Rn(e,t,r)}createIndexBuffer3D(e,r,a=t.BufferUsage.Static,n=!1){return new Dn(e,r,a,n)}createShaderInstance(e,r,a,n){return new t.ShaderInstance(e,r,a,n)}createBaseRenderNode(){return new In}createRenderContext3D(){return new Nn}createSceneRenderManager(){return new Pn}createCullPass(){return new Nt}createSortPass(){return new Bn}createShadowCullInfo(){return new Fn}createCameraCullInfo(){return new On}createRenderStateComand(){return new t.RenderStateCommand}createRenderState(){return new t.RenderState}createUniformBufferObject(e,r,a,n,i){return new t.UniformBufferObject(e,r,a,n,i)}createGlobalUniformMap(e){let r=this.globalBlockMap[e];return r||(r=this.globalBlockMap[e]=new t.CommandUniformMap(e)),r}}class Hn{constructor(){this._bounds=null,this._geometryBounds=null,this._transform=null,this._nativeObj=new window.conchRenderNode}set boundsChange(e){this._nativeObj.boundsChange=e}get boundsChange(){return this._nativeObj.boundsChange}set layer(e){this._nativeObj.layer=e}get layer(){return this._nativeObj.layer}get renderId(){return this._nativeObj.renderId}set renderId(e){this._nativeObj.renderId=e}get receiveShadow(){return this._nativeObj.receiveShadow}set receiveShadow(e){this._nativeObj.receiveShadow=e}get castShadow(){return this._nativeObj.castShadow}set castShadow(e){this._nativeObj.castShadow=e}get bounds(){return this._bounds}set bounds(e){this._bounds=e,this._nativeObj.bounds=e._imp._nativeObj}get distanceForSort(){return this._nativeObj.distanceForSort}set distanceForSort(e){this._nativeObj.distanceForSort=e}get transform(){return this._transform}set transform(e){this._transform=e,this._nativeObj.transform=e?e._nativeObj:null}get owner(){return this._nativeObj.owner}set owner(e){this._nativeObj.owner=e}get geometryBounds(){return this._geometryBounds}set geometryBounds(e){this._geometryBounds=e,this._nativeObj.geometryBounds=e._imp._nativeObj}get renderbitFlag(){return this._nativeObj.renderbitFlag}set renderbitFlag(e){this._nativeObj.renderbitFlag=e}get staticMask(){return this._nativeObj.staticMask}set staticMask(e){this._nativeObj.staticMask=e}}class zn{set sortPass(e){this._nativeObj.sortPass=e}constructor(e){this._isTransparent=!1,this.elements=new t.SingletonList,this._isTransparent=e,this._nativeObj=new window.conchRenderQueue(e),this._batch=Mn.instance?Mn.instance:new Mn}destroy(){this._nativeObj.destroy()}set context(e){this._context=e._contextOBJ}addRenderElement(e){this.elements.add(e)}clear(){this._nativeObj.clear(),this.elements.length=0}renderQueue(e){this.context=e,this._context.applyContext(Ft._updateMark);var r=this.elements.elements;this._batchQueue(),this._nativeObj.clear();for(var a=0,n=this.elements.length;a<n;a++){var i=r[a];this._nativeObj.addRenderElement(i._renderElementOBJ._nativeObj,i.render.renderNode._nativeObj,i.material.renderQueue,i.render.sortingFudge),i._renderUpdatePre(e)}return t.UploadMemoryManager.syncRenderMemory(),t.BufferState._curBindedBufferState&&t.BufferState._curBindedBufferState.unBind(),this._nativeObj.renderQueue(this._context._nativeObj),this._batch.recoverData(),n}_batchQueue(){this._isTransparent||this._batch.batch(this.elements)}}class kn{get min(){return this.getMin()}set min(e){this.setMin(e)}get max(){return this.getMax()}set max(e){this.setMax(e)}setMin(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setMin()}getMin(){var e=this._boundBox.min;return this._nativeObj.getMin(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}setMax(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setMax()}getMax(){var e=this._boundBox.max;return this._nativeObj.getMax(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}setCenter(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setCenter()}getCenter(){var e=this._center;return this._nativeObj.getCenter(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}setExtent(e){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setExtent()}getExtent(){var e=this._extent;return this._nativeObj.getExtent(),e.x=this.float64Array[0],e.y=this.float64Array[1],e.z=this.float64Array[2],e}constructor(e,r){this._center=new t.Vector3,this._extent=new t.Vector3,this._boundBox=new fr(new t.Vector3,new t.Vector3),this.nativeMemory=new t.NativeMemory(kn.MemoryBlock_size,!0),this.float32Array=this.nativeMemory.float32Array,this.float64Array=this.nativeMemory.float64Array,this._nativeObj=new window.conchBounds(this.nativeMemory._buffer),e&&this.setMin(e),r&&this.setMax(r)}_tranform(e,t){this.float32Array.set(e.elements),this._nativeObj._tranform(t._nativeObj)}_getBoundBox(){return this._nativeObj._getBoundBox(),this._boundBox.min.x=this.float64Array[0],this._boundBox.min.y=this.float64Array[1],this._boundBox.min.z=this.float64Array[2],this._boundBox.max.x=this.float64Array[3],this._boundBox.max.y=this.float64Array[4],this._boundBox.max.z=this.float64Array[5],this._boundBox}calculateBoundsintersection(e){var t=this.getMax(),r=this.getMin(),a=e.getMax(),n=e.getMin(),i=Wn,s=Yn,o=this.getExtent(),l=e.getExtent();return i.setValue(Math.max(t.x,a.x)-Math.min(r.x,n.x),Math.max(t.y,a.y)-Math.min(r.y,n.y),Math.max(t.z,a.z)-Math.min(r.z,n.z)),s.setValue(2*(o.x+l.x),2*(o.y+l.y),2*(o.z+l.z)),i.x>s.x||i.y>s.y||i.z>s.z?-1:(s.x-i.x)*(s.y-i.y)*(s.z-i.z)}cloneTo(e){var t=e;this._nativeObj.cloneTo(t._nativeObj)}clone(){var e=new kn(new t.Vector3,new t.Vector3);return this.cloneTo(e),e}}kn.MemoryBlock_size=Math.max(48,64);const Wn=new t.Vector3,Yn=new t.Vector3;class Xn{constructor(){this.nativeMemory=new t.NativeMemory(Xn.MemoryBlock_size,!0),this.float64Array=this.nativeMemory.float64Array,this._nativeObj=new window.conchCameraCullInfo(this.nativeMemory._buffer)}set position(e){this._position=e,this._nativeObj.setPosition(e.x,e.y,e.z)}get position(){return this._position}set useOcclusionCulling(e){this._useOcclusionCulling=e,this._nativeObj.useOcclusionCulling=e}get useOcclusionCulling(){return this._useOcclusionCulling}set cullingMask(e){this._cullingMask=e,this._nativeObj.cullingMask=e}get cullingMask(){return this._cullingMask}set staticMask(e){this._staticMask=e,this._nativeObj.staticMask=e}get staticMask(){return this._staticMask}serialize(){this.boundFrustum&&(this.setPlane(0,this.boundFrustum.near),this.setPlane(4,this.boundFrustum.far),this.setPlane(8,this.boundFrustum.left),this.setPlane(12,this.boundFrustum.right),this.setPlane(16,this.boundFrustum.top),this.setPlane(20,this.boundFrustum.bottom),this._nativeObj.setBoundFrustum())}setPlane(e,t){this.float64Array[e]=t.normal.x,this.float64Array[e+1]=t.normal.y,this.float64Array[e+2]=t.normal.z,this.float64Array[e+3]=t.distance}}Xn.MemoryBlock_size=192;class jn extends t.CommandUniformMap{constructor(e,t){super(t),this._nativeObj=e}hasPtrID(e){return this._nativeObj.hasPtrID(e)}getMap(){return this._idata}addShaderUniform(e,t){this._idata[e]=t,this._nativeObj.addShaderUniform(e,t)}}class Qn{get cullList(){return this._tempRenderList.elements=this._nativeObj.cullList,this._tempRenderList.length=this._nativeObj.cullList.length,this._tempRenderList}constructor(){this._nativeObj=new window.conchCullPass,this._tempRenderList=new t.SingletonList}cullByCameraCullInfo(e,r){e.serialize(),t.Stat.frustumCulling+=this._nativeObj.cullByCameraCullInfo(e._nativeObj,r._sceneManagerOBJ._nativeObj);var a=r._sceneManagerOBJ._customCullList,n=e.boundFrustum,i=e.cullingMask;let s=e.staticMask;var o=a.elements;let l=Ze._instance;for(var h=0,c=a.length;h<c;h++){var d=o[h];0!=Math.pow(2,d.renderNode.layer&i)&&d._enabled&&0==d.renderbitFlag&&0!=(d.renderNode.staticMask&s)&&(t.Stat.frustumCulling++,e.useOcclusionCulling&&!d._needRender(n,l)||this._nativeObj.cullList.push(d))}}cullByShadowCullInfo(e,r){t.Stat.frustumCulling+=this._nativeObj.cullByShadowCullInfo(e._nativeObj,r._sceneManagerOBJ._nativeObj);for(var a=r._sceneManagerOBJ._customCullList,n=a.elements,i=0,s=a.length;i<s;i++){var o=n[i];if(o.castShadow&&o._enabled&&0==o.renderbitFlag){t.Stat.frustumCulling++,Dt.cullingRenderBounds(o.bounds,e)&&this._nativeObj.cullList.push(o)}}}cullingSpotShadow(e,r){e.serialize(),t.Stat.frustumCulling+=this._nativeObj.cullingSpotShadow(e._nativeObj,r._sceneManagerOBJ._nativeObj);var a=r._sceneManagerOBJ._customCullList,n=a.elements;let i=Ze._instance;for(var s=0,o=a.length;s<o;s++){var l;if((l=n[s]).castShadow&&l._enabled&&0==l.renderbitFlag)t.Stat.frustumCulling++,(l=n[s])._needRender(e.boundFrustum,i)&&this._nativeObj.cullList.push(l)}}}class Kn extends Dn{constructor(e,r,a=t.BufferUsage.Static,n=!1){super(e,r,a,n),this._conchIndexBuffer3D=null,this._conchIndexBuffer3D=new window.conchIndexBuffer3D(t.LayaGL.renderEngine._nativeObj,e,r,a,!1),this._conchIndexBuffer3D.setGLBuffer(this._glBuffer)}}var qn,Zn,Jn;e.RenderElementType=void 0,(qn=e.RenderElementType||(e.RenderElementType={}))[qn.Base=0]="Base",qn[qn.Skin=1]="Skin",qn[qn.Instance=2]="Instance";class $n{set _geometry(e){this.geometry=e,this._nativeObj._geometry=e._nativeObj}get _geometry(){return this.geometry}set _materialShaderData(e){this.materialShaderData=e,this._nativeObj._materialShaderData=e?e._nativeObj:null}get _materialShaderData(){return this.materialShaderData}set _renderShaderData(e){this.renderShaderData=e,this._nativeObj._renderShaderData=e?e._nativeObj:null}get _renderShaderData(){return this.renderShaderData}set _transform(e){this.transform=e,this._nativeObj._transform=e?e._nativeObj:null}get _transform(){return this.transform}get _isRender(){return this._nativeObj._isRender}set _isRender(e){this._nativeObj._isRender=e}get _invertFront(){return this._nativeObj._invertFront}set _invertFront(e){this._nativeObj._invertFront=e}constructor(){this._shaderInstances=new t.SingletonList,this.init()}init(){this._nativeObj=new window.conchRenderElement(e.RenderElementType.Base,t.LayaGL.renderEngine._nativeObj)}_addShaderInstance(e){this._shaderInstances.add(e),this._nativeObj._addShaderInstance(e._nativeObj)}_clearShaderInstance(){this._shaderInstances.length=0,this._nativeObj._clearShaderInstance()}_render(e){this._nativeObj._render(e._nativeObj)}_destroy(){this._nativeObj._destroy(),this._shaderInstances=null,this.transform=null}}class ei extends $n{addUpdateBuffer(e,t){this._vertexBuffer3D[this._updateNums++]=e,this._nativeObj.addUpdateBuffer(e._conchVertexBuffer3D,t)}getUpdateData(e,t){let r=this._updateData[e];return(!r||r.length<t)&&(r=this._updateData[e]=new Float32Array(t),this._nativeObj.getUpdateData(e,r)),r}constructor(){super(),this._vertexBuffer3D=[],this._updateData=[]}clear(){this._updateNums=0,this._nativeObj.clear()}init(){this._nativeObj=new window.conchRenderElement(e.RenderElementType.Instance,t.LayaGL.renderEngine._nativeObj)}set drawCount(e){this._nativeObj.drawCount=e}get drawCount(){return this._nativeObj.drawCount}}class ti{constructor(){this._viewPort=new se(0,0,0,0),this._scissor=new t.Vector4,this._nativeObj=new window.conchRenderContext3D(t.LayaGL.renderEngine._nativeObj)}drawRenderElement(e){t.UploadMemoryManager.syncRenderMemory(),e._render(this)}applyContext(e){this._nativeObj.changeViewport(this._viewPort.x,this._viewPort.y,this._viewPort.width,this._viewPort.height),this._nativeObj.changeScissor(this._scissor.x,this._scissor.y,this._scissor.z,this._scissor.w),this.destTarget&&this.destTarget._start(),this._nativeObj.applyContext(e)}set destTarget(e){this._destTarget=e,this._nativeObj.destTarget=e?e._renderTarget:null}get destTarget(){return this._destTarget}set viewPort(e){this._viewPort=e,this._nativeObj.changeViewport(e.x,e.y,e.width,e.height)}get viewPort(){return this._viewPort}set scissor(e){this._scissor=e,this._nativeObj.changeScissor(e.x,e.y,e.z,e.w)}get scissor(){return this._scissor}set invertY(e){this._nativeObj.invertY=e}get invertY(){return this._nativeObj.invertY}set pipelineMode(e){this._nativeObj.pipelineMode=e}get pipelineMode(){return this._nativeObj.pipelineMode}set globalShaderData(e){this._globalShaderData=e,this._nativeObj.globalShaderData=e?e._nativeObj:null}get globalShaderData(){return this._globalShaderData}set sceneShaderData(e){this._sceneShaderData=e,this._nativeObj.sceneShaderData=e?e._nativeObj:null}get sceneShaderData(){return this._sceneShaderData}set cameraShaderData(e){this._cameraShaderData=e,this._nativeObj.cameraShaderData=e?e._nativeObj:null}get cameraShaderData(){return this._cameraShaderData}set sceneID(e){this._nativeObj.sceneID=e}get sceneID(){return this._nativeObj.sceneID}set cameraUpdateMark(e){this._nativeObj.cameraUpdateMark=e}get cameraUpdateMark(){return this._nativeObj.cameraUpdateMark}}class ri{constructor(e,r){this._nativeObj=new window.conchRenderGeometryElement(e,r),this.drawParams=new t.SingletonList}setDrawArrayParams(e,t){this.drawParams.add(e),this.drawParams.add(t),this._nativeObj.setDrawArrayParams(e,t)}setDrawElemenParams(e,t){this.drawParams.add(t),this.drawParams.add(e),this._nativeObj.setDrawElemenParams(e,t)}destroy(){this._nativeObj.destroy()}clearRenderParams(){this.drawParams.length=0,this._nativeObj.clearRenderParams()}set bufferState(e){this._bufferState=e,this._nativeObj.bufferState=e?e._nativeVertexArrayObject._nativeObj:null}get bufferState(){return this._bufferState}set mode(e){this._nativeObj.mode=e}get mode(){return this._nativeObj.mode}set drawType(e){this._nativeObj.drawType=e}get drawType(){return this._nativeObj.drawType}set instanceCount(e){this._nativeObj.instanceCount=e}get instanceCount(){return this._nativeObj.instanceCount}set indexFormat(e){this._nativeObj.indexFormat=e}get indexFormat(){return this._nativeObj.indexFormat}}class ai{set cull(e){this._nativeObj.cull=e}get cull(){return this._nativeObj.cull}set blend(e){this._nativeObj.blend=e}get blend(){return this._nativeObj.blend}set srcBlend(e){this._nativeObj.srcBlend=e}get srcBlend(){return this._nativeObj.srcBlend}set dstBlend(e){this._nativeObj.dstBlend=e}get dstBlend(){return this._nativeObj.dstBlend}set srcBlendRGB(e){this._nativeObj.srcBlendRGB=e}get srcBlendRGB(){return this._nativeObj.srcBlendRGB}set dstBlendRGB(e){this._nativeObj.dstBlendRGB=e}get dstBlendRGB(){return this._nativeObj.dstBlendRGB}set srcBlendAlpha(e){this._nativeObj.srcBlendAlpha=e}get srcBlendAlpha(){return this._nativeObj.srcBlendAlpha}set dstBlendAlpha(e){this._nativeObj.dstBlendAlpha=e}get dstBlendAlpha(){return this._nativeObj.dstBlendAlpha}set blendEquation(e){this._nativeObj.blendEquation=e}get blendEquation(){return this._nativeObj.blendEquation}set blendEquationRGB(e){this._nativeObj.blendEquationRGB=e}get blendEquationRGB(){return this._nativeObj.blendEquationRGB}set blendEquationAlpha(e){this._nativeObj.blendEquationAlpha=e}get blendEquationAlpha(){return this._nativeObj.blendEquationAlpha}set depthTest(e){this._nativeObj.depthTest=e}get depthTest(){return this._nativeObj.depthTest}set depthWrite(e){this._nativeObj.depthWrite=e}get depthWrite(){return this._nativeObj.depthWrite}set stencilWrite(e){this._nativeObj.stencilWrite=e}get stencilWrite(){return this._nativeObj.stencilWrite}set stencilTest(e){this._nativeObj.stencilTest=e}get stencilTest(){return this._nativeObj.stencilTest}set stencilRef(e){this._nativeObj.stencilRef=e}get stencilRef(){return this._nativeObj.stencilRef}set stencilOp(e){this._nativeObj.setStencilOp(e.x,e.y,e.z)}setNull(){}constructor(){this._nativeObj=new window.conchRenderState}}class ni{constructor(){this._renders=new t.SingletonList,this._customUpdateList=new t.SingletonList,this._customCullList=new t.SingletonList,this._nativeObj=new window.conchSceneCullManger}get list(){return this._renders}set list(e){this._customCullList.elements=[],this._customCullList.length=0,this._nativeObj.clear(),this._renders.clear();for(let t=0,r=e.length;t<r;t++)this.addRenderObject(e.elements[t])}addRenderObject(e){this._renders.add(e),!e._customCull&&e.renderNode.geometryBounds?this._nativeObj.addRenderObject(e.renderNode._nativeObj):this._customCullList.add(e)}removeRenderObject(e){if(!e._customCull&&e.renderNode.geometryBounds)this._nativeObj.removeRenderObject(e.renderNode._nativeObj);else{let t=this._customCullList.elements,r=t.indexOf(e);r<this._customCullList.length&&(this._customCullList.length-=1,t[r]=t[this._customCullList.length])}this._renders.remove(e),this.removeMotionObject(e)}removeMotionObject(e){if(e.renderNode.geometryBounds)this._nativeObj.removeMotionObject(e.renderNode._nativeObj);else{let t=e._motionIndexList;if(-1!=t){let e=this._customUpdateList.elements;this._customUpdateList.length-=1,e[length]._motionIndexList=t,e[t]=e[length]}}}updateMotionObjects(){this._nativeObj.updateMotionObjects();for(let e=0;e<this._customUpdateList.length;e++)this._customUpdateList.elements[e].bounds,this._customUpdateList.elements[e]._motionIndexList=-1;this._customUpdateList.length=0}addMotionObject(e){e.renderNode.geometryBounds?this._nativeObj.addMotionObject(e.renderNode._nativeObj):-1==e._motionIndexList&&(e._motionIndexList=this._customUpdateList.length,this._customUpdateList.add(e))}destroy(){this._nativeObj.destroy(),this._renders.destroy(),this._customUpdateList.destroy(),this._customCullList.destroy()}}e.NativeShaderDataType=void 0,(Zn=e.NativeShaderDataType||(e.NativeShaderDataType={}))[Zn.Number32=0]="Number32",Zn[Zn.Vector2=1]="Vector2",Zn[Zn.Vector3=2]="Vector3",Zn[Zn.Vector4=3]="Vector4",Zn[Zn.Matrix4x4=4]="Matrix4x4",Zn[Zn.Number32Array=5]="Number32Array",Zn[Zn.Texture=6]="Texture",Zn[Zn.ShaderDefine=7]="ShaderDefine",Zn[Zn.UBO=8]="UBO";class ii extends t.ShaderData{constructor(e=null){super(e),this.inUploadList=!1,this.payload32bitNum=0,this._initData(),this._nativeObj=new window.conchShaderData,this.nativeObjID=this._nativeObj.nativeID,this._dataType=t.MemoryDataType.ShaderData,this.updateMap=new Map,this.updataSizeMap=new Map}getUploadMemoryLength(){return this.updataSizeMap.forEach((e=>{this.payload32bitNum+=e})),4*(this.payload32bitNum+4)}uploadDataTOShareMemory(e,r){if(!this._data)return!1;let a=e.int32Array,n=r/4;return a[n++]=t.MemoryDataType.ShaderData,a[n++]=this.nativeObjID,a[n++]=this.payload32bitNum,a[n++]=this.updateMap.size,this.updateMap.forEach(((t,r)=>{n+=t.call(this,r,e,n)})),this.clearUpload(),this.inUploadList=!1,!0}clearUpload(){this.payload32bitNum=0,this.updataSizeMap.clear(),this.updateMap.clear()}compressNumber(t,r,a){return r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.Number32,r.float32Array[a+2]=this._data[t],3}compressVector2(t,r,a){r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.Vector2;var n=this._data[t];return r.float32Array[a+2]=n.x,r.float32Array[a+3]=n.y,4}compressVector3(t,r,a){r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.Vector3;var n=this._data[t];return r.float32Array[a+2]=n.x,r.float32Array[a+3]=n.y,r.float32Array[a+4]=n.z,5}compressVector4(t,r,a){r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.Vector4;var n=this._data[t];return r.float32Array[a+2]=n.x,r.float32Array[a+3]=n.y,r.float32Array[a+4]=n.z,r.float32Array[a+5]=n.w,6}compressMatrix4x4(t,r,a){r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.Matrix4x4;var n=this._data[t];return r.float32Array.set(n.elements,a+2),18}compressNumberArray(t,r,a){r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.Number32Array;var n=this._data[t];return r.int32Array[a+2]=n.length,r.float32Array.set(n,a+3),n.length+3}compressTexture(r,a,n){var i=this._data[r];return a.int32Array[n]=r,a.int32Array[n+1]=e.NativeShaderDataType.Texture,i&&i instanceof t.Texture?a.int32Array[n+2]=i.bitmap._texture.id:i&&i._texture?a.int32Array[n+2]=i._texture.id:a.int32Array[n+2]=t.Texture2D.erroTextur._texture.id,3}compressUBO(t,r,a){var n=this._data[t];return r.int32Array[a]=t,r.int32Array[a+1]=e.NativeShaderDataType.UBO,r.int32Array[a+2]=n._conchUniformBufferObject.nativeID,3}configMotionProperty(e,r,a){this.updateMap.set(e,a),this.updataSizeMap.set(e,r),this.inUploadList||(this.inUploadList=!0,t.UploadMemoryManager.getInstance()._dataNodeList.add(this))}setBool(e,t){super.setBool(e,t),this.configMotionProperty(e,3,this.compressNumber)}setInt(e,t){super.setInt(e,t),this.configMotionProperty(e,3,this.compressNumber)}setNumber(e,t){super.setNumber(e,t),this.configMotionProperty(e,3,this.compressNumber)}setVector2(e,t){super.setVector2(e,t),this.configMotionProperty(e,4,this.compressVector2)}setVector3(e,t){super.setVector3(e,t),this.configMotionProperty(e,5,this.compressVector3)}setVector(e,t){super.setVector(e,t),this.configMotionProperty(e,6,this.compressVector4)}setColor(e,t){super.setColor(e,t),this.configMotionProperty(e,6,this.compressVector4)}setMatrix4x4(e,t){super.setMatrix4x4(e,t),this.configMotionProperty(e,18,this.compressMatrix4x4)}setBuffer(e,t){super.setBuffer(e,t),this.configMotionProperty(e,3+t.length,this.compressNumberArray)}setTexture(e,t){super.setTexture(e,t),this.configMotionProperty(e,3,this.compressTexture)}setUniformBuffer(e,t){this._data[e]=t,this.configMotionProperty(e,3,this.compressUBO)}setValueData(e,r){"boolean"==typeof r?this.setBool(e,r):"number"==typeof r?this.setNumber(e,r):r instanceof t.Color?this.setColor(e,r):r instanceof t.Vector2?this.setVector2(e,r):r instanceof t.Vector3?this.setVector3(e,r):r instanceof t.Vector4||r instanceof t.Quaternion?this.setVector(e,r):r instanceof t.Matrix4x4?this.setMatrix4x4(e,r):null!=r.ArrayBuffer?this.setBuffer(e,r):null!=r._texture&&this.setTexture(e,r)}cloneTo(e){var r=e;for(var a in this._data){var n=this._data[a];null!=n&&("boolean"==typeof n?e.setBool(a,n):"number"==typeof n?e.setNumber(a,n):n instanceof t.Vector2?e.setVector2(a,n):n instanceof t.Vector3?e.setVector3(a,n):n instanceof t.Vector4?e.setVector(a,n):n instanceof t.Matrix4x4?e.setMatrix4x4(a,n):n instanceof t.BaseTexture&&e.setTexture(a,n))}this._defineDatas.cloneTo(r._defineDatas),this._gammaColorMap.forEach(((t,r)=>{e._gammaColorMap.set(r,t.clone())}))}clone(){var e=new ii;return this.cloneTo(e),e}}!function(e){e[e.Scene=0]="Scene",e[e.Camera=1]="Camera",e[e.Sprite=2]="Sprite",e[e.Material=3]="Material"}(Jn||(Jn={}));class si{constructor(e,r,a,n){this._shaderPass=n;var i=new window.conchAttributeMap;for(var s in a)i.setAttributeValue(s,a[s][0]);var o=t.SubShader.StateParamsMap;for(var l in o)i.setStateValue(parseInt(l),o[l]);i.statefirst=this._shaderPass.statefirst;var h=n.renderState;this._nativeObj=new window.conchShaderInstance(t.LayaGL.renderEngine._nativeObj,e,r,i,h._nativeObj)}_disposeResource(){this._nativeObj.destroy()}bind(){return this._nativeObj.bind()}uploadUniforms(e,t,r){this._nativeObj.uploadUniforms(e,t._nativeObj,r)}uploadCustomUniform(e,t){this._nativeObj.uploadCustomUniforms(e,t)}get _sceneUniformParamsMap(){return Jn.Scene}get _cameraUniformParamsMap(){return Jn.Camera}get _spriteUniformParamsMap(){return Jn.Sprite}get _materialUniformParamsMap(){return Jn.Material}uploadRenderStateBlendDepth(e){this._nativeObj.uploadRenderStateBlendDepth(e._nativeObj)}uploadRenderStateFrontFace(e,t,r){this._nativeObj.uploadRenderStateFrontFace(e._nativeObj,t,r)}}class oi{constructor(){this.nativeMemory=new t.NativeMemory(oi.MemoryBlock_size,!0),this.float64Array=this.nativeMemory.float64Array,this._nativeObj=new window.conchShadowCullInfo(this.nativeMemory._buffer)}set cullPlanes(e){this._cullPlanes=e,this._nativeObj.clearCullPlanes(),e.forEach((e=>{this.float64Array[0]=e.normal.x,this.float64Array[1]=e.normal.y,this.float64Array[2]=e.normal.z,this.float64Array[3]=e.distance,this._nativeObj.addCullPlane()}))}get cullPlanes(){return this._cullPlanes}set cullSphere(e){this._cullSphere=e,this.float64Array[0]=e.center.x,this.float64Array[1]=e.center.y,this.float64Array[2]=e.center.z,this.float64Array[3]=e.radius,this._nativeObj.setCullSphere()}get cullSphere(){return this._cullSphere}set position(e){this._position=e,this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setPosition()}get position(){return this._position}set direction(e){this._direction=e,this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this._nativeObj.setDirection()}get direction(){return this._direction}set cullPlaneCount(e){this._cullPlaneCount=e,this._nativeObj.cullPlaneCount=e}get cullPlaneCount(){return this._cullPlaneCount}}oi.MemoryBlock_size=32;class li extends $n{constructor(){super()}get skinnedData(){return this._skinnedData}set skinnedData(e){this._skinnedData=e,this._nativeObj._skinnedData=e}init(){this._nativeObj=new window.conchRenderElement(e.RenderElementType.Skin,t.LayaGL.renderEngine._nativeObj)}}class hi extends c{get _isFrontFaceInvert(){return this._nativeObj._isFrontFaceInvert}get owner(){return this._owner}get localPositionX(){return this.localPosition.x}set localPositionX(e){this._localPosition.x=e,this.localPosition=this._localPosition}get localPositionY(){return this.localPosition.y}set localPositionY(e){this._localPosition.y=e,this.localPosition=this._localPosition}get localPositionZ(){return this.localPosition.z}set localPositionZ(e){this._localPosition.z=e,this.localPosition=this._localPosition}get localPosition(){return this._nativeObj.getLocalPosition()&&(this._localPosition.x=this.float64Array[0],this._localPosition.y=this.float64Array[1],this._localPosition.z=this.float64Array[2]),this._localPosition}set localPosition(e){this._localPosition.x=this.float64Array[0]=e.x,this._localPosition.y=this.float64Array[1]=e.y,this._localPosition.z=this.float64Array[2]=e.z,this._nativeObj.setLocalPosition()}get localRotationX(){return this.localRotation.x}set localRotationX(e){let t=this.localRotation;t.x=e,this.localRotation=t}get localRotationY(){return this.localRotation.y}set localRotationY(e){let t=this.localRotation;t.y=e,this.localRotation=t}get localRotationZ(){return this.localRotation.z}set localRotationZ(e){let t=this.localRotation;t.z=e,this.localRotation=t}get localRotationW(){return this.localRotation.w}set localRotationW(e){let t=this.localRotation;t.w=e,this.localRotation=t}get localRotation(){return this._nativeObj.getLocalRotation()&&(this._localRotation.x=this.float64Array[0],this._localRotation.y=this.float64Array[1],this._localRotation.z=this.float64Array[2],this._localRotation.w=this.float64Array[3]),this._localRotation}set localRotation(e){this._localRotation.x=this.float64Array[0]=e.x,this._localRotation.y=this.float64Array[1]=e.y,this._localRotation.z=this.float64Array[2]=e.z,this._localRotation.w=this.float64Array[3]=e.w,this._nativeObj.setLocalRotation()}get localScaleX(){return this.localScale.x}set localScaleX(e){this._localScale.x=e,this.localScale=this._localScale}get localScaleY(){return this.localScale.y}set localScaleY(e){this._localScale.y=e,this.localScale=this._localScale}get localScaleZ(){return this.localScale.z}set localScaleZ(e){this._localScale.z=e,this.localScale=this._localScale}get localScale(){return this._nativeObj.getLocalScale()&&(this._localScale.x=this.float64Array[0],this._localScale.y=this.float64Array[1],this._localScale.z=this.float64Array[2]),this._localScale}set localScale(e){this._localScale.x=this.float64Array[0]=e.x,this._localScale.y=this.float64Array[1]=e.y,this._localScale.z=this.float64Array[2]=e.z,this._nativeObj.setLocalScale()}get localRotationEulerX(){return this.localRotationEuler.x}set localRotationEulerX(e){let t=this.localRotationEuler;t.x=e,this.localRotationEuler=t}get localRotationEulerY(){return this.localRotationEuler.y}set localRotationEulerY(e){let t=this.localRotationEuler;t.y=e,this.localRotationEuler=t}get localRotationEulerZ(){return this.localRotationEuler.z}set localRotationEulerZ(e){let t=this.localRotationEuler;t.z=e,this.localRotationEuler=t}get localRotationEuler(){return this._nativeObj.getLocalRotationEuler()&&(this._localRotationEuler.x=this.float64Array[0],this._localRotationEuler.y=this.float64Array[1],this._localRotationEuler.z=this.float64Array[2]),this._localRotationEuler}set localRotationEuler(e){this._localRotationEuler.x=this.float64Array[0]=e.x,this._localRotationEuler.y=this.float64Array[1]=e.y,this._localRotationEuler.z=this.float64Array[2]=e.z,this._nativeObj.setLocalRotationEuler()}get localMatrix(){if(this._nativeObj.getLocalMatrix())for(var e=0;e<16;++e)this._localMatrix.elements[e]=this.float32Array[e];return this._localMatrix}set localMatrix(e){this._localMatrix!==e&&e.cloneTo(this._localMatrix),this.float32Array.set(e.elements),this._nativeObj.setLocalMatrix()}get position(){return this._nativeObj.getPosition()&&(this._position.x=this.float64Array[0],this._position.y=this.float64Array[1],this._position.z=this.float64Array[2]),this._position}set position(e){this._position.x=this.float64Array[0]=e.x,this._position.y=this.float64Array[1]=e.y,this._position.z=this.float64Array[2]=e.z,this._nativeObj.setPosition()}get rotation(){return this._nativeObj.getRotation()&&(this._rotation.x=this.float64Array[0],this._rotation.y=this.float64Array[1],this._rotation.z=this.float64Array[2],this._rotation.w=this.float64Array[3]),this._rotation}set rotation(e){this._rotation.x=this.float64Array[0]=e.x,this._rotation.y=this.float64Array[1]=e.y,this._rotation.z=this.float64Array[2]=e.z,this._rotation.w=this.float64Array[3]=e.w,this._nativeObj.setRotation()}get rotationEuler(){return this._nativeObj.getRotationEuler()&&(this._rotationEuler.x=this.float64Array[0],this._rotationEuler.y=this.float64Array[1],this._rotationEuler.z=this.float64Array[2]),this._rotationEuler}set rotationEuler(e){this._rotationEuler.x=this.float64Array[0]=e.x,this._rotationEuler.y=this.float64Array[1]=e.y,this._rotationEuler.z=this.float64Array[2]=e.z,this._nativeObj.setRotationEuler()}get worldMatrix(){if(this._nativeObj.getWorldMatrix())for(var e=0;e<16;e++)this._worldMatrix.elements[e]=this.float32Array[e];return this._worldMatrix}set worldMatrix(e){this._worldMatrix!==e&&e.cloneTo(this._worldMatrix),this.float32Array.set(e.elements),this._nativeObj.setWorldMatrix()}constructor(e){super(e),this.nativeMemory=new t.NativeMemory(hi.MemoryBlock_size,!0),this.float32Array=this.nativeMemory.float32Array,this.float64Array=this.nativeMemory.float64Array,this.int32Array=this.nativeMemory.int32Array,this.eventDispatcher=new t.EventDispatcher,this._nativeObj=new window.conchTransform(this.nativeMemory._buffer,this.eventDispatcher.event.bind(this.eventDispatcher))}_setTransformFlag(e,t){this._nativeObj&&this._nativeObj._setTransformFlag(e,t)}_getTransformFlag(e){return this._nativeObj._getTransformFlag(e)}_setParent(e){this._nativeObj.setParent(e?e._nativeObj:null)}translate(e,t=!0){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this.int32Array[6]=t?1:0,this._nativeObj.translate()}rotate(e,t=!0,r=!0){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this.int32Array[6]=t?1:0,this.int32Array[7]=r?1:0,this._nativeObj.rotate()}getForward(e){var t=this.worldMatrix.elements;e.x=-t[8],e.y=-t[9],e.z=-t[10]}getUp(e){var t=this.worldMatrix.elements;e.x=t[4],e.y=t[5],e.z=t[6]}getRight(e){var t=this.worldMatrix.elements;e.x=t[0],e.y=t[1],e.z=t[2]}lookAt(e,t,r=!1,a=!0){this.float64Array[0]=e.x,this.float64Array[1]=e.y,this.float64Array[2]=e.z,this.float64Array[3]=t.x,this.float64Array[4]=t.y,this.float64Array[5]=t.z,this.int32Array[12]=r?1:0,this.int32Array[13]=a?1:0,this._nativeObj.lookAt()}objLookat(e,t,r=!1){}getWorldLossyScale(){return this._nativeObj.getWorldLossyScale()&&(this._scale.x=this.float64Array[0],this._scale.y=this.float64Array[1],this._scale.z=this.float64Array[2]),this._scale}setWorldLossyScale(e){this._scale.x=this.float64Array[0]=e.x,this._scale.y=this.float64Array[1]=e.y,this._scale.z=this.float64Array[2]=e.z,this._nativeObj.setWorldLossyScale()}hasListener(e){return this.eventDispatcher.hasListener(e)}event(e,t){return this.eventDispatcher.event(e,t)}on(e,t,r,a){return 2==arguments.length&&(r=t,t=null),this.eventDispatcher.on(e,t,r,a)}once(e,t,r,a){return 2==arguments.length&&(r=t,t=null),this.eventDispatcher.once(e,t,r,a)}off(e,t,r){return 2==arguments.length&&(r=t,t=null),this.eventDispatcher.off(e,t,r)}offAll(e){return this.eventDispatcher.offAll(e)}offAllCaller(e){return this.eventDispatcher.offAllCaller(e)}}hi.MemoryBlock_size=64;class ci extends t.UniformBufferObject{constructor(e,r,a,n,i){super(e,r,a,n,i),this._conchUniformBufferObject=null,this._conchUniformBufferObject=new window.conchUniformBufferObject(t.LayaGL.renderEngine._nativeObj,e),this._conchUniformBufferObject.setGLBuffer(this._glBuffer)}}class di extends Rn{get vertexDeclaration(){return this._vertexDeclaration}set vertexDeclaration(e){this._vertexDeclaration=e,this._conchVertexBuffer3D.setVertexDeclaration(this.serilizeVertexDeclaration(e))}serilizeVertexDeclaration(e){let t=new Int32Array(6*e._vertexElements.length),r=0;var a=e._shaderValues;for(var n in a){var i=parseInt(n),s=a[n];t[r++]=i,t.set(s,r),r+=5}return t}get instanceBuffer(){return this._conchVertexBuffer3D._instanceBuffer}set instanceBuffer(e){this._conchVertexBuffer3D._instanceBuffer=e}constructor(e,r,a=!1){super(e,r,a),this._conchVertexBuffer3D=null,this._conchVertexBuffer3D=new window.conchVertexBuffer3D(t.LayaGL.renderEngine._nativeObj,e,r,!1),this._conchVertexBuffer3D.setGLBuffer(this._glBuffer)}}class _i{createTransform(e){return new hi(e)}createBounds(e,t){return new kn(e,t)}createShaderData(){return new ii}createRenderElement(){return new $n}createSkinRenderElement(){return new li}createInstanceRenderElement(){return new ei}createBaseRenderQueue(e){var t=new zn(e);return t.sortPass=this.createSortPass(),t}createRenderGeometry(e,t){return new ri(e,t)}createVertexBuffer3D(e,t,r=!1){return new di(e,t,r)}createIndexBuffer3D(e,r,a=t.BufferUsage.Static,n=!1){return new Kn(e,r,a,n)}createShaderInstance(e,t,r,a){return new si(e,t,r,a)}createBaseRenderNode(){return new Hn}createRenderContext3D(){return new ti}createSceneRenderManager(){return new ni}createCullPass(){return new Qn}createSortPass(){return new window.conchQuickSort}createShadowCullInfo(){return new oi}createCameraCullInfo(){return new Xn}createRenderStateComand(){return new t.NativeRenderStateCommand}createRenderState(){return new ai}createUniformBufferObject(e,t,r,a,n){return new ci(e,t,r,a,n)}createGlobalUniformMap(e){return new jn(window.conchCommandUniformMap.createGlobalUniformMap(e),e)}}class ui{static get enablePhysics(){return w._enablePhysics}static _changeWebGLSize(e,r){t.WebGL.onStageResize(e,r),Ze.clientWidth=e,Ze.clientHeight=r}static __init__(e){if(!1!==e){let e=window.Physics3D;if(null!=e)return w._enablePhysics=!0,new Promise((r=>{e(16*Math.max(16,t.Config3D.defaultPhysicsMemory),new tn(null,null)).then((()=>{ui.__init__(!1).then(r)}))}));w._enablePhysics=!1}if(ui.createRenderObjInit(),t.LayaEnv.isConch&&!window.conchConfig.conchWebGL){var r=Gr;r.prototype._computeSkinnedData=r.prototype._computeSkinnedDataForNative}t.Config3D._multiLighting=t.Config3D.enableMultiLight&&t.LayaGL.renderEngine.getCapable(t.RenderCapable.TextureFormat_R32G32B32A32),t.Config3D._uniformBlock=t.Config3D.enableUniformBufferObject&&t.LayaGL.renderEngine.getCapable(t.RenderCapable.UnifromBufferObject),t.Config3D.maxLightCount>2048&&(t.Config3D.maxLightCount=2048,console.warn("Config3D: maxLightCount must less equal 2048."));let a=t.Config3D.lightClusterCount;(a.x>128||a.y>128||a.z>128)&&(a.setValue(Math.min(a.x,128),Math.min(a.y,128),Math.min(a.z,128)),console.warn("Config3D: lightClusterCount X and Y、Z must less equal 128."));let i=4*Math.floor(2048/t.Config3D.lightClusterCount.z-1);return i<t.Config3D.maxLightCount&&console.warn("Config3D: if the area light(PointLight、SpotLight) count is large than "+i+",maybe the far away culster will ingonre some light."),t.Config3D._maxAreaLightCountPerClusterAverage=Math.min(i,t.Config3D.maxLightCount),o.Scene3D=Pt,o.Laya3D=ui,o.Physics3D=w,w.__bulletinit__(),t.SubShader.__init__(),t.VertexMesh.__init__(),Ir.__init__(),Mr.__init__(),Ye.__init__(),Yr.__init__(),en.__init__(),oa.__init__(),$a.__init__(),xn.__init__(),Or.__init__(),zr.__init__(),Zt.__init__(),Jt.__init__(),er.__init__(),Ra.init(),Ia.init(),va.init(),Aa.init(),ea.__init__(),rn.__init__(),J.__init__(),le.__init__(),ar.__init__(),n.__init__(),kr.__init__(),zr.__init__(),Qr.__init__(),Pr.__init__(),qr.__init__(),xa.__init__(),Pt.__init__(),Rt.__init__(),Qe.__init__(),He.__init__(),ot.__init__(),je.__init__(),Ft.__init__(),qe.init(),Ze.__init__(),t.RenderTexture.configRenderContextInstance(Ze._instance),at.__initDefine__(),nt.__initDefine__(),tr.__initDefine__(),Qt.__initDefine__(),jr.__initDefine__(),Nr.__initDefine__(),$t.__initDefine__(),$e.__init__(),Ct.__init__(),nt.defaultMaterial=new nt,nt.defaultMaterial.lock=!0,t.Texture2D.__init__(),de.__init__(),We.__init__(),Xe.__init__(),Je.__init__(),Dt.__init__(),t.HalfFloatUtils.__init__(),Promise.resolve()}static init(e,r,a=null,n=null){t.Laya.init(e,r).then((()=>{n&&n.run()}))}static createRenderObjInit(){t.LayaEnv.isConch&&!window.conchConfig.conchWebGL?(t.LayaGL.renderEngine._renderOBJCreateContext=new _i,t.LayaGL.renderOBJCreate=t.LayaGL.renderEngine.getCreateRenderOBJContext()):(t.LayaGL.renderEngine._renderOBJCreateContext=new Gn,t.LayaGL.renderOBJCreate=t.LayaGL.renderEngine.getCreateRenderOBJContext())}}window.Laya3D=ui;class mi{constructor(e){if(!(e instanceof Array)||4!==e.length)throw new Error("Rand:Seed must be an array with 4 numbers");this._state0U=0|e[0],this._state0L=0|e[1],this._state1U=0|e[2],this._state1L=0|e[3]}randomint(){var e=this._state0U,t=this._state0L,r=this._state1U,a=this._state1L,n=(a>>>0)+(t>>>0),i=r+e+(n/2>>>31)>>>0,s=n>>>0;this._state0U=r,this._state0L=a;var o=0,l=0;o=(e^=o=e<<23|(-512&t)>>>9)^r,l=(t^=l=t<<23)^a;o^=e>>>18,l^=t>>>18|(262143&e)<<14;return o^=r>>>5,l^=a>>>5|(31&r)<<27,this._state1U=o,this._state1L=l,[i,s]}random(){var e=this.randomint(),t=e[0],r=1023<<20|t>>>12,a=0|(e[1]>>>12|(4095&t)<<20);return mi._CONVERTION_BUFFER.setUint32(0,r,!1),mi._CONVERTION_BUFFER.setUint32(4,a,!1),mi._CONVERTION_BUFFER.getFloat64(0,!1)-1}}mi._CONVERTION_BUFFER=new DataView(new ArrayBuffer(8)),mi.defaultRand=new mi([0,Date.now()/65536,0,Date.now()%65536]);class fi{static get fullScreen(){return new fi(-1,-1)}get width(){return-1===this._width?Ze.clientWidth:this._width}get height(){return-1===this._height?Ze.clientHeight:this._height}constructor(e,t){this._width=0,this._height=0,this._width=e,this._height=t}}class gi extends t.RenderTexture{constructor(e,t,r,a,n){super(e,e,t,r,a,n),this.faceIndex=0}_createRenderTarget(){this._dimension=t.TextureDimension.Cube,this._renderTarget=t.LayaGL.textureContext.createRenderTargetCubeInternal(this.width,this._format,this._depthStencilFormat,this._generateMipmap,this._gammaSpace,this._multiSamples),this._texture=this._renderTarget._textures[0]}_start(){t.RenderTexture._configInstance.invertY=this._isCameraTarget,t.RenderTexture._currentActive!=this&&(t.RenderTexture._currentActive&&t.RenderTexture._currentActive._end(),t.RenderTexture._currentActive=this,t.LayaGL.textureContext.bindRenderTarget(this._renderTarget,this.faceIndex))}}class pi extends t.RenderTexture{constructor(){super(1,1,1,t.RenderTargetFormat.STENCIL_8,!1,1),this.frameLoop=-1}set frameBuffer(e){this._frameBuffer=e}_create(e,t){}_start(){var e=Ri.glInstance;e.bindFramebuffer(e.FRAMEBUFFER,this._frameBuffer),t.RenderTexture._currentActive=this}_end(){var e=Ri.glInstance;e.bindFramebuffer(e.FRAMEBUFFER,null),t.RenderTexture._currentActive=null}}class Si extends t.EventDispatcher{constructor(){super(),this.currentTimestamp=-1,this.defaultHeightCompensation=1.7,this._sessionEnded=!1}get referenceSpace(){return this._referenceSpace}set referenceSpace(e){this._referenceSpace=e}get sessionMode(){return this._sessionMode}exitXR(){this.endXRRenderLoop(),this.event(Si.EVENT_MANAGER_END)}initializeXRGL(e,t){return t.makeXRCompatible().then((()=>!0))}initializeAsync(){return this._xrNavigator=navigator,this._xrNavigator.xr?Promise.resolve():Promise.reject("WebXR not available")}isSessionSupportedAsync(e){if(!navigator.xr)return Promise.resolve(!1);this._xrNavigator=navigator;return navigator.xr.isSessionSupported||navigator.xr.supportsSession?navigator.xr.isSessionSupported(e):Promise.resolve(!1)}initializeSessionAsync(e="immersive-vr",t={}){return this._xrNavigator.xr.requestSession("immersive-vr").then((t=>(this.session=t,this._sessionMode=e,this._sessionEnded=!1,this.session.addEventListener("end",(()=>{this._sessionEnded=!0,this.exitXR()}),{once:!0}),this.session)))}resetReferenceSpace(){this.referenceSpace=this.baseReferenceSpace}runXRRenderLoop(){this.session.requestAnimationFrame.bind(this.session);let fn=(e,r)=>{this._updateByXrFrame(r,e),this.event(Si.EVENT_FRAME_LOOP,[r]),t.ILaya.stage._loop(),this.session.requestAnimationFrame(fn)};this.session.requestAnimationFrame(fn)}endXRRenderLoop(){}_updateByXrFrame(e,t){this.currentFrame=e,this.currentTimestamp=t}setReferenceSpaceTypeAsync(e="local-floor"){return this.session.requestReferenceSpace(e).then((e=>e),(e=>this.session.requestReferenceSpace("viewer").then((e=>{const t=new XRRigidTransform({x:0,y:-this.defaultHeightCompensation,z:0});return e.getOffsetReferenceSpace(t)}),(e=>{throw'XR initialization failed: required "viewer" reference space type not supported.'})))).then((e=>(this.referenceSpace=this.baseReferenceSpace=e,this.referenceSpace)))}updateRenderStateAsync(e){return e.baseLayer&&(this._baseLayer=e.baseLayer),this.session.updateRenderState(e)}get currentFrameRate(){var e;return null===(e=this.session)||void 0===e?void 0:e.frameRate}get supportedFrameRates(){var e;return null===(e=this.session)||void 0===e?void 0:e.supportedFrameRates}updateTargetFrameRate(e){return this.session.updateTargetFrameRate(e)}destroy(){this._sessionEnded||this.exitXR()}}Si.EVENT_MANAGER_END="xrManagerDestory",Si.EVENT_FRAME_LOOP="xrFrameLoop";class Ti{get position(){return this._position}set position(e){e.cloneTo(this._position)}set rotationQuaternion(e){e.cloneTo(this._referenceQuaternion)}get rotationQuaternion(){return this._referenceQuaternion}get rigCameras(){return this._rigCameras}constructor(e,r=null){this._referenceQuaternion=new t.Quaternion,this._referencedPosition=new t.Vector3,this._firstFrame=!0,this._XRRenderTexture=new pi,this._rigCameras=new Array,this._position=new t.Vector3,this.owner=e,this.owner.enableRender=!1,this.owner.aspectRatio||console.warn("owner is not Camera"),this._webXRSessionManager=r,this._webXRSessionManager.on(Si.EVENT_FRAME_LOOP,this,this._updateFromXRSession),this._webXRSessionManager.on(Si.EVENT_FRAME_LOOP,this,this._updateReferenceSpace),this._webXRSessionManager.on(Si.EVENT_MANAGER_END,this,this.destroy)}_updateFromXRSession(){let e=this._webXRSessionManager.currentFrame&&this._webXRSessionManager.currentFrame.getViewerPose(this._webXRSessionManager.referenceSpace);const t=e.transform.position,r=e.transform.orientation;this._referenceQuaternion.setValue(r.x,r.y,r.z,r.w),this._referencedPosition.setValue(t.x,t.y,t.z),this._firstFrame?(this._firstFrame=!1,this.position.y+=this._referencedPosition.y,this._referenceQuaternion.setValue(0,0,0,1)):(this.rotationQuaternion=this._referenceQuaternion,this.position=this._referencedPosition),this.rigCameras.length!==e.views.length&&this._updateNumberOfRigCameras(e.views.length),e.views.forEach(((e,t)=>{const r=this.rigCameras[t];"right"===e.eye?r.name="right":"left"===e.eye&&(r.name="left");const a=e.transform.position,n=e.transform.orientation;if(r.transform.position.setValue(a.x,a.y,a.z),r.transform.rotation.setValue(n.x,n.y,n.z,n.w),r.transform.position=r.transform.position,r.transform.rotation=r.transform.rotation,this._webXRSessionManager.session.renderState.baseLayer){var i=this._webXRSessionManager.session.renderState.baseLayer.getViewport(e),s=this._webXRSessionManager.session.renderState.baseLayer.framebufferWidth,o=this._webXRSessionManager.session.renderState.baseLayer.framebufferHeight;this._XRRenderTexture.frameBuffer=this._webXRSessionManager.session.renderState.baseLayer.framebuffer,r.renderTarget=this._XRRenderTexture,r.clientWidth=s,r.clientHeight=o;var l=r.viewport;l.x=i.x,l.y=i.y,l.width=i.width,l.height=i.height,r.viewport=l,r.projectionMatrix.cloneByArray(e.projectionMatrix)}}))}_updateNumberOfRigCameras(e=1){for(;this.rigCameras.length<e;){var t=new Ci(this.owner.aspectRatio,this.owner.nearPlane,this.owner.farPlane);t.clearFlag=this.owner.clearFlag,t.clearColor=this.owner.clearColor,this.owner.addChild(t),this.rigCameras.push(t)}for(;this.rigCameras.length>e;){let e=this.rigCameras.pop();this.owner.removeChild(e)}}_updateReferenceSpace(){}destroy(){this.owner.enableRender=!0,this._webXRSessionManager.off(Si.EVENT_FRAME_LOOP,this,this._updateFromXRSession),this._webXRSessionManager.off(Si.EVENT_FRAME_LOOP,this,this._updateReferenceSpace),this._webXRSessionManager.off(Si.EVENT_MANAGER_END,this,this.destroy),this._rigCameras.forEach((e=>{e.destroy()})),this._rigCameras=null,this._XRRenderTexture.destroy()}}class Ei extends t.EventDispatcher{constructor(e,t){super(),this.axisData=new Array,this.handness=e,this.axisData.length=t,this.axisLength=t}update(e){for(let r=0,a=0;r<e.axes.length;r+=2,++a)this.axisData[a]||(this.axisData[a]=new t.Vector2),this.axisData[a].setValue(e.axes[r],e.axes[r+1]),this.outPutStickValue(this.axisData[a],a)}outPutStickValue(e,t){const r=Ei.EVENT_OUTPUT+t.toString();this.event(r,[e])}destroy(){for(let e=0;e<this.axisLength;e++){let t=Ei.EVENT_OUTPUT+e.toString();this.offAll(t)}}}Ei.EVENT_OUTPUT="outputAxi_id";class Ai extends t.EventDispatcher{constructor(e,t){super(),this.lastTouch=!1,this.lastPress=!1,this.lastPressValue=0,this.touch=!1,this.press=!1,this.pressValue=0,this.handness=e,this.index=t}update(e){this.lastTouch=this.touch,this.lastPress=this.press,this.lastPressValue=this.pressValue,this.touch=e.touched,this.press=e.pressed,this.pressValue=e.value,(this.lastTouch||this.touch)&&(this.lastTouch!=this.touch&&this.touch?this.touchEnter():this.lastTouch==this.touch&&this.touch?this.touchStay():this.lastTouch==this.touch||this.touch||this.touchOut(),this.lastPress!=this.press&&this.press?this.pressEnter():this.lastPress==this.press&&this.press?this.pressStay():this.lastPress==this.press||this.press||this.pressOut(),this.touch&&this.outpressed())}touchEnter(){this.event(Ai.EVENT_TOUCH_ENTER)}touchStay(){this.event(Ai.EVENT_TOUCH_STAY)}touchOut(){this.event(Ai.EVENT_TOUCH_OUT)}pressEnter(){this.event(Ai.EVENT_PRESS_ENTER)}pressStay(){this.event(Ai.EVENT_PRESS_STAY)}pressOut(){this.event(Ai.EVENT_PRESS_OUT)}outpressed(){this.event(Ai.EVENT_PRESS_VALUE,[this.pressValue])}destroy(){this.offAll(Ai.EVENT_PRESS_ENTER),this.offAll(Ai.EVENT_PRESS_STAY),this.offAll(Ai.EVENT_PRESS_OUT),this.offAll(Ai.EVENT_PRESS_ENTER),this.offAll(Ai.EVENT_PRESS_STAY),this.offAll(Ai.EVENT_PRESS_OUT),this.offAll(Ai.EVENT_PRESS_VALUE)}}Ai.EVENT_TOUCH_ENTER="touchEnter",Ai.EVENT_TOUCH_STAY="touchStay",Ai.EVENT_TOUCH_OUT="touchOut",Ai.EVENT_PRESS_ENTER="pressEnter",Ai.EVENT_PRESS_STAY="pressStay",Ai.EVENT_PRESS_OUT="pressOut",Ai.EVENT_PRESS_VALUE="outpressed";class xi extends t.EventDispatcher{constructor(e){super(),this.preButtonEventList=[],this.preAxisEventList=[],this.handness=e,this.position=new t.Vector3,this.rotation=new t.Quaternion,this.ray=new re(new t.Vector3,new t.Vector3)}_updateByXRPose(e,r){const a=e.getPose(this._inputSource.targetRaySpace,r);if(this._lastXRPose=a,a){const e=a.transform.position,r=a.transform.orientation;xi.tempQua.setValue(r.x,r.y,r.z,r.w),this.ray.origin.setValue(e.x,e.y,e.z),t.Vector3.transformQuat(t.Vector3.UnitZ,xi.tempQua,this.ray.direction),t.Vector3.scale(this.ray.direction,-1,this.ray.direction)}if(this._inputSource.gripSpace){let t=e.getPose(this._inputSource.gripSpace,r);if(t){const e=t.transform.position,r=t.transform.orientation;this.position.setValue(e.x,e.y,e.z),this.rotation.setValue(r.x,r.y,r.z,r.w)}}this.event(xi.EVENT_FRAMEUPDATA_WEBXRINPUT,[this]),this._handleProcessGamepad()}_handleProcessGamepad(){const e=this._inputSource.gamepad;if(this.gamepadAxis||(this.gamepadAxis=new Ei(this.handness,e.axes.length),this.preAxisEventList.forEach((e=>{this.gamepadAxis.on(e.eventnam,e.caller,e.listener)}))),!this.gamepadButton){this.gamepadButton=[];for(let t=0;t<e.buttons.length;++t)this.gamepadButton.push(new Ai(this.handness,t));this.preButtonEventList.forEach((e=>{this.addButtonEvent(e.index,e.type,e.caller,e.listener)}))}this.gamepadAxis.update(e);for(let t=0;t<e.buttons.length;++t){this.gamepadButton[t].update(e.buttons[t])}}addButtonEvent(e,t,r,a){if(this.gamepadButton){this.gamepadButton[e].on(t,r,a)}else this.preButtonEventList.push({index:e,type:t,caller:r,listener:a})}addAxisEvent(e,t,r,a){if(this.gamepadAxis){const n=t+e.toString();this.gamepadAxis.on(n,r,a)}else this.preAxisEventList.push({eventnam:t+e.toString(),caller:r,listener:a})}offAxisEvent(e,t,r,a){if(this.gamepadAxis){const n=t+e.toString();this.gamepadAxis.off(n,r,a)}}offButtonEvent(e,t,r,a){if(this.gamepadButton){this.gamepadButton[e].off(t,r,a)}}destroy(){this.preButtonEventList=null,this.ray=null,this.position=null,this.rotation=null,this.gamepadAxis.destroy(),this.gamepadButton.forEach((e=>{e.destroy()}))}}xi.HANDNESS_LEFT="left",xi.HANDNESS_RIGHT="right",xi.EVENT_FRAMEUPDATA_WEBXRINPUT="frameXRInputUpdate",xi.tempQua=new t.Quaternion;class Di{constructor(e,r){this.controllers=new Map,this.controllerHandMesh=new Map,this.controllerLineRender=new Map,this.lineColor=t.Color.RED,this.rayLength=2,this.webXRSessionManager=e,this.webXRCameraManager=r,this.webXRSessionManager.on(Si.EVENT_MANAGER_END,this,this.destory),this.webXRSessionManager.on(Si.EVENT_FRAME_LOOP,this,this._updateFromXRFrame)}_updataMeshRender(e){const r=e.handness;if(this.controllerHandMesh.has(r)){let t=this.controllerHandMesh.get(r);t.transform.position=e.position,t.transform.rotation=e.rotation}if(this.controllerLineRender.has(r)){let a=this.controllerLineRender.get(r);a.clear();let n=e.ray;Di.tempVec.setValue(n.origin.x,n.origin.y,n.origin.z),t.Vector3.scale(n.direction,this.rayLength,Di.tempVec1),t.Vector3.add(Di.tempVec,Di.tempVec1,Di.tempVec1),a.addLine(Di.tempVec,Di.tempVec1,this.lineColor,this.lineColor)}}_updateFromXRFrame(e){const t=this.webXRSessionManager.session,r=this.webXRSessionManager.referenceSpace;for(let a of t.inputSources){const t=a.handedness;let n;n=this.controllers.has(t)?this.controllers.get(t):this.getController(t),n&&(n=this.controllers.get(t),n._inputSource=a,n._updateByXRPose(e,r))}}bindMeshNode(e,t){this.controllerHandMesh.set(t,e)}bindRayNode(e,t){this.controllerLineRender.set(t,e)}getController(e){if("left"!=e&&"right"!=e)return null;if(!this.controllers.has(e)){let t=new xi(e);this.controllers.set(e,t),t.on(xi.EVENT_FRAMEUPDATA_WEBXRINPUT,this,this._updataMeshRender)}return this.controllers.get(e)}destory(){this.webXRSessionManager.off(Si.EVENT_FRAME_LOOP,this,this._updateFromXRFrame);for(let e in this.controllers)this.controllers.get(e).off("frameXRInputUpdate",this,this._updataMeshRender),this.controllers.get(e).destroy();this.controllers=null,this.controllerHandMesh=null,this.controllerLineRender=null}}Di.tempVec=new t.Vector3,Di.tempVec1=new t.Vector3;class Ri{static supportXR(e){return Ri.xr_Manager.isSessionSupportedAsync(e).then((e=>(Ri.supported=e,e)))}static enterXRAsync(e,r,a){return"immersive-ar"===e&&"unbounded"!==r&&console.warn("We recommend using 'unbounded' reference space type when using 'immersive-ar' session mode"),Ri.xr_Manager.initializeSessionAsync(e).then((()=>Ri.xr_Manager.setReferenceSpaceTypeAsync(r))).then((()=>Ri.xr_Manager.initializeXRGL(e,t.LayaGL.renderEngine._gl))).then((()=>(Ri.glInstance=t.LayaGL.renderEngine._gl,Ri.xr_Manager.updateRenderStateAsync({depthFar:a.depthFar,depthNear:a.depthNear,baseLayer:new XRWebGLLayer(Ri.xr_Manager.session,t.LayaGL.instance)})))).then((()=>(Ri.xr_Manager.runXRRenderLoop(),Ri.xr_Manager)))}static setWebXRCamera(e,t){return new Ti(e,t)}static setWebXRInput(e,t){return new Di(e,t)}}Ri.xr_Manager=new Si,Ri.supported=!1,Ri.canvasOptions={antialias:!0,depth:!0,stencil:!1,alpha:!0,multiview:!1,framebufferScaleFactor:1};class Ci extends Ft{constructor(){super(...arguments),this.isWebXR=!0}get renderTarget(){return this._internalRenderTexture}set renderTarget(e){this._internalRenderTexture=e}set clientWidth(e){this._clientWidth=e}set clientHeight(e){this._clientHeight=e}get clientWidth(){return this._clientWidth}get clientHeight(){return this._clientHeight}_restoreView(e){var t,r,a=this.viewport,n=a.width,i=a.height;this._needInternalRenderTexture()?(t=0,r=0):(t=a.x,r=this._getCanvasHeight()-a.y-i),e.viewport(t,r,n,i)}render(e=null,t=null){if(this.activeInHierarchy){var r=this.viewport,a=Ze._instance,n=a.scene=this._scene;a.pipelineMode=a.configPipeLineMode,a.replaceTag=t,a.customShader=e;var i=this._renderShadowMap(n,a);this._preRenderMainPass(a,n,true,r),this._renderMainPass(a,r,n,e,t,true),this._aftRenderMainPass(i)}}_renderMainPass(r,a,n,i,s,l){var h=Ri.glInstance,c=this._internalRenderTexture;r.viewport=a,this._prepareCameraToRender(),t.Config3D._multiLighting&&ee.instance.update(this,n),n._preCulling(r,this),c&&c._isCameraTarget&&(r.invertY=!0),this._applyViewProject(r,this.viewMatrix,this._projectionMatrix),0!=this.depthTextureMode&&this._renderDepthMode(r),c&&c._start(),c.frameLoop!=Pt._updateMark&&(c.frameLoop=Pt._updateMark,this.clear(h)),this._restoreView(h),this._prepareCameraToRender(),this._applyCommandBuffer(e.CameraEventFlags.BeforeForwardOpaque,r),n._renderScene(r,o.Scene3D.SCENERENDERFLAG_RENDERQPAQUE),this._applyCommandBuffer(e.CameraEventFlags.BeforeSkyBox,r),n._renderScene(r,o.Scene3D.SCENERENDERFLAG_SKYBOX),this._applyCommandBuffer(e.CameraEventFlags.BeforeTransparent,r),n._renderScene(r,o.Scene3D.SCENERENDERFLAG_RENDERTRANSPARENT),n._componentDriver.callPostRender(),this._applyCommandBuffer(e.CameraEventFlags.BeforeImageEffect,r),c&&c._end(),this._applyCommandBuffer(e.CameraEventFlags.AfterEveryThing,r)}_calculateProjectionMatrix(){}clear(e){e.viewport(0,0,this._clientWidth,this._clientHeight),e.scissor(0,0,this._clientWidth,this._clientHeight),e.clearColor(this.clearColor.r,this.clearColor.g,this.clearColor.b,this.clearColor.a),t.RenderStateContext.setDepthMask(!0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)}destroy(){super.destroy(!0)}}class vi extends t.Component{get appliedImpulse(){return this._feedbackEnabled||(this._btConstraint.EnableFeedback(!0),this._feedbackEnabled=!0),this._btConstraint.AppliedImpulse}set connectedBody(e){this._connectedBody=e}get connectedBody(){return this._connectedBody}get ownBody(){return this._ownBody}set ownBody(e){this._ownBody=e}get currentForce(){return this._getJointFeedBack||this._getFeedBackInfo(),this._currentForce}get currentTorque(){return this._getJointFeedBack||this._getFeedBackInfo(),this._currentTorque}get breakForce(){return this._breakForce}set breakForce(e){this._breakForce=e}get breakTorque(){return this._breakTorque}set breakTorque(e){this._breakTorque=e}set anchor(e){e.cloneTo(this._anchor),this.setFrames()}get anchor(){return this._anchor}set connectAnchor(e){e.cloneTo(this._connectAnchor),this.setFrames()}get connectAnchor(){return this._connectAnchor}constructor(e){super(),this._anchor=new t.Vector3,this._connectAnchor=new t.Vector3,this._feedbackEnabled=!1,this._getJointFeedBack=!1,this._currentForce=new t.Vector3,this._currentTorque=new t.Vector3,this.disableCollisionsBetweenLinkedBodies=!0,this._constraintType=e;var r=w._bullet;this._btframATrans=r.btTransform_create(),this._btframBTrans=r.btTransform_create(),r.btTransform_setIdentity(this._btframATrans),r.btTransform_setIdentity(this._btframBTrans),this._btframAPos=r.btVector3_create(0,0,0),this._btframBPos=r.btVector3_create(0,0,0),r.btTransform_setOrigin(this._btframATrans,this._btframAPos),r.btTransform_setOrigin(this._btframBTrans,this._btframBPos),this._breakForce=-1,this._breakTorque=-1}setOverrideNumSolverIterations(e){w._bullet.btTypedConstraint_setOverrideNumSolverIterations(this._btConstraint,e)}setConstraintEnabled(e){w._bullet.btTypedConstraint_setEnabled(this._btConstraint,e)}setFrames(){var e=w._bullet;e.btVector3_setValue(this._btframAPos,this._anchor.x,this.anchor.y,this.anchor.z),e.btVector3_setValue(this._btframBPos,this._connectAnchor.x,this._connectAnchor.y,this._connectAnchor.z),e.btTransform_setOrigin(this._btframATrans,this._btframAPos),e.btTransform_setOrigin(this._btframBTrans,this._btframBPos)}_addToSimulation(){}_removeFromSimulation(){}_createConstraint(){}setConnectRigidBody(e,t){var r=e&&!!(e._simulation&&e._enabled&&e.colliderShape),a=t&&!!(t._simulation&&t._enabled&&t.colliderShape);if(!r||!a)throw"ownerRigid or connectRigidBody is not in Simulation";e==this._ownBody&&t==this._connectedBody||(!(!this.enabled||!this._simulation)&&this._removeFromSimulation(),this._ownBody=e,this._connectedBody=t,this._createConstraint())}_setConnectRigidBody(e,t){this.ownBody=e,this.connectedBody=t,this._createConstraint()}getcurrentForce(e){if(!this._btJointFeedBackObj)throw"this Constraint is not simulation";var t=w._bullet,r=t.btJointFeedback_getAppliedForceBodyA(this._btJointFeedBackObj);e.setValue(t.btVector3_x(r),t.btVector3_y(r),t.btVector3_z(r))}getPhysicsSimulation(){return this.owner._scene.physicsSimulation}getcurrentTorque(e){if(!this._btJointFeedBackObj)throw"this Constraint is not simulation";var t=w._bullet,r=t.btJointFeedback_getAppliedTorqueBodyA(this._btJointFeedBackObj);e.setValue(t.btVector3_x(r),t.btVector3_y(r),t.btVector3_z(r))}_onDestroy(){var e=w._bullet;this._simulation&&this._removeFromSimulation(),this._btConstraint&&this._btJointFeedBackObj&&this._simulation&&(e.btTypedConstraint_destroy(this._btConstraint),e.btJointFeedback_destroy(this._btJointFeedBackObj),this._btJointFeedBackObj=null,this._btConstraint=null)}_isBreakConstrained(){if(this._getJointFeedBack=!1,-1==this.breakForce&&-1==this.breakTorque)return!1;this._getFeedBackInfo();var e=-1!=this._breakForce&&t.Vector3.scalarLength(this._currentForce)>this._breakForce,r=-1!=this._breakTorque&&t.Vector3.scalarLength(this._currentTorque)>this._breakTorque;return!(!e&&!r)&&(this._breakConstrained(),!0)}_parse(e){this._anchor.fromArray(e.anchor),this._connectAnchor.fromArray(e.connectAnchor),this.setFrames()}_getFeedBackInfo(){var e=w._bullet,t=e.btJointFeedback_getAppliedForceBodyA(this._btJointFeedBackObj),r=e.btJointFeedback_getAppliedTorqueBodyA(this._btJointFeedBackObj);this._currentTorque.setValue(e.btVector3_x(r),e.btVector3_y(r),e.btVector3_z(r)),this._currentForce.setValue(e.btVector3_x(t),e.btVector3_y(t),e.btVector3_z(t)),this._getJointFeedBack=!0}_breakConstrained(){this.destroy()}}vi.CONSTRAINT_POINT2POINT_CONSTRAINT_TYPE=3,vi.CONSTRAINT_HINGE_CONSTRAINT_TYPE=4,vi.CONSTRAINT_CONETWIST_CONSTRAINT_TYPE=5,vi.CONSTRAINT_D6_CONSTRAINT_TYPE=6,vi.CONSTRAINT_SLIDER_CONSTRAINT_TYPE=7,vi.CONSTRAINT_CONTACT_CONSTRAINT_TYPE=8,vi.CONSTRAINT_D6_SPRING_CONSTRAINT_TYPE=9,vi.CONSTRAINT_GEAR_CONSTRAINT_TYPE=10,vi.CONSTRAINT_FIXED_CONSTRAINT_TYPE=11,vi.CONSTRAINT_MAX_CONSTRAINT_TYPE=12,vi.CONSTRAINT_CONSTRAINT_ERP=1,vi.CONSTRAINT_CONSTRAINT_STOP_ERP=2,vi.CONSTRAINT_CONSTRAINT_CFM=3,vi.CONSTRAINT_CONSTRAINT_STOP_CFM=4,vi.tempForceV3=new t.Vector3;class yi extends vi{constructor(){super(vi.CONSTRAINT_D6_SPRING_CONSTRAINT_TYPE),this._axis=new t.Vector3,this._secondaryAxis=new t.Vector3,this._minLinearLimit=new t.Vector3,this._maxLinearLimit=new t.Vector3,this._minAngularLimit=new t.Vector3,this._maxAngularLimit=new t.Vector3,this._linearLimitSpring=new t.Vector3,this._angularLimitSpring=new t.Vector3,this._linearBounce=new t.Vector3,this._angularBounce=new t.Vector3,this._linearDamp=new t.Vector3,this._angularDamp=new t.Vector3,this._xMotion=0,this._yMotion=0,this._zMotion=0,this._angularXMotion=0,this._angularYMotion=0,this._angularZMotion=0;var e=w._bullet;this._btAxis=e.btVector3_create(0,0,1),this._btSecondaryAxis=e.btVector3_create(0,1,0)}get axis(){return this._axis}get secondaryAxis(){return this._secondaryAxis}set maxAngularLimit(e){e.cloneTo(this._maxAngularLimit)}set minAngularLimit(e){e.cloneTo(this._minAngularLimit)}get maxAngularLimit(){return this._maxAngularLimit}get minAngularLimit(){return this._minAngularLimit}set maxLinearLimit(e){e.cloneTo(this._maxLinearLimit)}set minLinearLimit(e){e.cloneTo(this._minLinearLimit)}get maxLinearLimit(){return this._maxLinearLimit}get minLinearLimit(){return this._minLinearLimit}set XMotion(e){this._xMotion!=e&&(this._xMotion=e,this.setLimit(yi.MOTION_LINEAR_INDEX_X,e,this._minLinearLimit.x,this._maxLinearLimit.x))}get XMotion(){return this._xMotion}set YMotion(e){this._yMotion!=e&&(this._yMotion=e,this.setLimit(yi.MOTION_LINEAR_INDEX_Y,e,this._minLinearLimit.y,this._maxLinearLimit.y))}get YMotion(){return this._yMotion}set ZMotion(e){this._zMotion!=e&&(this._zMotion=e,this.setLimit(yi.MOTION_LINEAR_INDEX_Z,e,this._minLinearLimit.z,this._maxLinearLimit.z))}get ZMotion(){return this._zMotion}set angularXMotion(e){this._angularXMotion!=e&&(this._angularXMotion=e,this.setLimit(yi.MOTION_ANGULAR_INDEX_X,e,this._minAngularLimit.x,this._maxAngularLimit.x))}get angularXMotion(){return this._angularXMotion}set angularYMotion(e){this._angularYMotion!=e&&(this._angularYMotion=e,this.setLimit(yi.MOTION_ANGULAR_INDEX_Y,e,this._minAngularLimit.y,this._maxAngularLimit.y))}get angularYMotion(){return this._angularYMotion}set angularZMotion(e){this._angularZMotion!=e&&(this._angularZMotion=e,this.setLimit(yi.MOTION_ANGULAR_INDEX_Z,e,this._minAngularLimit.z,this._maxAngularLimit.z))}get angularZMotion(){return this._angularZMotion}set linearLimitSpring(e){t.Vector3.equals(this._linearLimitSpring,e)||(e.cloneTo(this._linearLimitSpring),this.setSpring(yi.MOTION_LINEAR_INDEX_X,e.x),this.setSpring(yi.MOTION_LINEAR_INDEX_Y,e.y),this.setSpring(yi.MOTION_LINEAR_INDEX_Z,e.z))}get linearLimitSpring(){return this._linearLimitSpring}set angularLimitSpring(e){t.Vector3.equals(this._angularLimitSpring,e)||(e.cloneTo(this._angularLimitSpring),this.setSpring(yi.MOTION_ANGULAR_INDEX_X,e.x),this.setSpring(yi.MOTION_ANGULAR_INDEX_Y,e.y),this.setSpring(yi.MOTION_ANGULAR_INDEX_Z,e.z))}get angularLimitSpring(){return this._angularLimitSpring}set linearBounce(e){t.Vector3.equals(this._linearBounce,e)||(e.cloneTo(this._linearBounce),this.setBounce(yi.MOTION_LINEAR_INDEX_X,e.x),this.setBounce(yi.MOTION_LINEAR_INDEX_Y,e.y),this.setBounce(yi.MOTION_LINEAR_INDEX_Z,e.z))}get linearBounce(){return this._linearBounce}set angularBounce(e){t.Vector3.equals(this._angularBounce,e)||(e.cloneTo(this._angularBounce),this.setBounce(yi.MOTION_ANGULAR_INDEX_X,e.x),this.setBounce(yi.MOTION_ANGULAR_INDEX_Y,e.y),this.setBounce(yi.MOTION_ANGULAR_INDEX_Z,e.z))}get angularBounce(){return this._angularBounce}set linearDamp(e){t.Vector3.equals(this._linearDamp,e)||(e.cloneTo(this._linearDamp),this.setDamping(yi.MOTION_LINEAR_INDEX_X,e.x),this.setDamping(yi.MOTION_LINEAR_INDEX_Y,e.y),this.setDamping(yi.MOTION_LINEAR_INDEX_Z,e.z))}get linearDamp(){return this._linearDamp}set angularDamp(e){t.Vector3.equals(this._angularDamp,e)||(e.cloneTo(this._angularDamp),this.setDamping(yi.MOTION_ANGULAR_INDEX_X,e.x),this.setDamping(yi.MOTION_ANGULAR_INDEX_Y,e.y),this.setDamping(yi.MOTION_ANGULAR_INDEX_Z,e.z))}get angularDamp(){return this._angularDamp}set anchor(e){e.cloneTo(this._anchor),this.setFrames()}get anchor(){return this._anchor}set connectAnchor(e){e.cloneTo(this._connectAnchor),this.setFrames()}get connectAnchor(){return this._connectAnchor}setAxis(e,t){if(this._btConstraint){var r=w._bullet;this._axis.setValue(e.x,e.y,e.y),this._secondaryAxis.setValue(t.x,t.y,t.z),r.btVector3_setValue(this._btAxis,e.x,e.y,e.z),r.btVector3_setValue(this._btSecondaryAxis,t.x,t.y,t.z),r.btGeneric6DofSpring2Constraint_setAxis(this._btConstraint,this._btAxis,this._btSecondaryAxis)}}setLimit(e,t,r,a){if(this._btConstraint){var n=w._bullet;switch(t){case yi.CONFIG_MOTION_TYPE_LOCKED:n.btGeneric6DofSpring2Constraint_setLimit(this._btConstraint,e,0,0);break;case yi.CONFIG_MOTION_TYPE_LIMITED:r<a&&n.btGeneric6DofSpring2Constraint_setLimit(this._btConstraint,e,r,a);break;case yi.CONFIG_MOTION_TYPE_FREE:n.btGeneric6DofSpring2Constraint_setLimit(this._btConstraint,e,1,0);break;default:throw"No Type of Axis Motion"}}}setSpring(e,t,r=!0){if(this._btConstraint){var a=w._bullet,n=t>0;a.btGeneric6DofSpring2Constraint_enableSpring(this._btConstraint,e,n),n&&a.btGeneric6DofSpring2Constraint_setStiffness(this._btConstraint,e,t,r)}}setBounce(e,t){this._btConstraint&&(t=t<=0?0:t,w._bullet.btGeneric6DofSpring2Constraint_setBounce(this._btConstraint,e,t))}setDamping(e,t,r=!0){this._btConstraint&&(t=t<=0?0:t,w._bullet.btGeneric6DofSpring2Constraint_setDamping(this._btConstraint,e,t,r))}setEquilibriumPoint(e,t){w._bullet.btGeneric6DofSpring2Constraint_setEquilibriumPoint(this._btConstraint,e,t)}enableMotor(e,t){w._bullet.btGeneric6DofSpring2Constraint_enableMotor(this._btConstraint,e,t)}setServo(e,t){w._bullet.btGeneric6DofSpring2Constraint_setServo(this._btConstraint,e,t)}setTargetVelocity(e,t){w._bullet.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btConstraint,e,t)}setTargetPosition(e,t){w._bullet.btGeneric6DofSpring2Constraint_setServoTarget(this._btConstraint,e,t)}setMaxMotorForce(e,t){w._bullet.btGeneric6DofSpring2Constraint_setMaxMotorForce(this._btConstraint,e,t)}setParam(e,t,r){w._bullet.btTypedConstraint_setParam(this._btConstraint,e,t,r)}setFrames(){super.setFrames();var e=w._bullet;this._btConstraint&&e.btGeneric6DofSpring2Constraint_setFrames(this._btConstraint,this._btframATrans,this._btframBTrans)}_addToSimulation(){this._simulation&&this._simulation.addConstraint(this,this.disableCollisionsBetweenLinkedBodies)}_removeFromSimulation(){this._simulation.removeConstraint(this),this._simulation=null}_createConstraint(){var e=w._bullet;this._btConstraint=e.btGeneric6DofSpring2Constraint_create(this.ownBody.btColliderObject,this._btframATrans,this.connectedBody.btColliderObject,this._btframBTrans,yi.RO_XYZ),this._btJointFeedBackObj=e.btJointFeedback_create(this._btConstraint),e.btTypedConstraint_setJointFeedback(this._btConstraint,this._btJointFeedBackObj),this._initAllConstraintInfo(),e.btTypedConstraint_setEnabled(this._btConstraint,!0),this._simulation=this.getPhysicsSimulation(),this._addToSimulation()}_initAllConstraintInfo(){this.setLimit(yi.MOTION_LINEAR_INDEX_X,this._xMotion,this._minLinearLimit.x,this._maxLinearLimit.x),this.setLimit(yi.MOTION_LINEAR_INDEX_Y,this._yMotion,this._minLinearLimit.y,this._maxLinearLimit.y),this.setLimit(yi.MOTION_LINEAR_INDEX_Z,this._zMotion,this._minLinearLimit.z,this._maxLinearLimit.z),this.setLimit(yi.MOTION_ANGULAR_INDEX_X,this._angularXMotion,this._minAngularLimit.x,this._maxAngularLimit.x),this.setLimit(yi.MOTION_ANGULAR_INDEX_Y,this._angularYMotion,this._minAngularLimit.y,this._maxAngularLimit.y),this.setLimit(yi.MOTION_ANGULAR_INDEX_Z,this._angularZMotion,this._minAngularLimit.z,this._maxAngularLimit.z),this.setSpring(yi.MOTION_LINEAR_INDEX_X,this._linearLimitSpring.x),this.setSpring(yi.MOTION_LINEAR_INDEX_Y,this._linearLimitSpring.y),this.setSpring(yi.MOTION_LINEAR_INDEX_Z,this._linearLimitSpring.z),this.setSpring(yi.MOTION_ANGULAR_INDEX_X,this._angularLimitSpring.x),this.setSpring(yi.MOTION_ANGULAR_INDEX_Y,this._angularLimitSpring.y),this.setSpring(yi.MOTION_ANGULAR_INDEX_Z,this._angularLimitSpring.z),this.setBounce(yi.MOTION_LINEAR_INDEX_X,this._linearBounce.x),this.setBounce(yi.MOTION_LINEAR_INDEX_Y,this._linearBounce.y),this.setBounce(yi.MOTION_LINEAR_INDEX_Z,this._linearBounce.z),this.setBounce(yi.MOTION_ANGULAR_INDEX_X,this._angularBounce.x),this.setBounce(yi.MOTION_ANGULAR_INDEX_Y,this._angularBounce.y),this.setBounce(yi.MOTION_ANGULAR_INDEX_Z,this._angularBounce.z),this.setDamping(yi.MOTION_LINEAR_INDEX_X,this._linearDamp.x),this.setDamping(yi.MOTION_LINEAR_INDEX_Y,this._linearDamp.y),this.setDamping(yi.MOTION_LINEAR_INDEX_Z,this._linearDamp.z),this.setDamping(yi.MOTION_ANGULAR_INDEX_X,this._angularDamp.x),this.setDamping(yi.MOTION_ANGULAR_INDEX_Y,this._angularDamp.y),this.setDamping(yi.MOTION_ANGULAR_INDEX_Z,this._angularDamp.z),this.setFrames(),this.setEquilibriumPoint(0,0)}_onEnable(){this._btConstraint&&w._bullet.btTypedConstraint_setEnabled(this._btConstraint,!0)}_onDisable(){!this.connectedBody&&this._simulation&&this._removeFromSimulation(),this._btConstraint&&w._bullet.btTypedConstraint_setEnabled(this._btConstraint,!1)}_parse(e,t=null){super._parse(e),this._axis.fromArray(e.axis),this._secondaryAxis.fromArray(e.secondaryAxis);var r=e.linearLimit;this._minLinearLimit.setValue(-r,-r,-r),this._maxLinearLimit.setValue(r,r,r);var a=e.linearLimitSpring;this._linearLimitSpring.setValue(a,a,a);var n=e.linearLimitDamper;this._linearDamp.setValue(n,n,n);var i=e.linearLimitBounciness;this._linearBounce.setValue(i,i,i);var s=e.lowAngularXLimit,o=e.highAngularXLimit,l=e.angularYLimit,h=e.angularZLimit;this._minAngularLimit.setValue(s,-l,-h),this._maxAngularLimit.setValue(o,l,h);var c=e.highAngularXLimitBounciness,d=e.angularYLimitBounciness,_=e.angularZLimitBounciness;this._angularBounce.setValue(c,d,_);var u=e.angularXLimitSpring,m=e.angularYZLimitSpring;this._angularLimitSpring.setValue(u,m,m);var f=e.angularXLimitDamper,g=e.angularYZLimitDamper;this._angularDamp.setValue(f,g,g),this.XMotion=e.xMotion,this.YMotion=e.yMotion,this.ZMotion=e.zMotion,this.angularXMotion=e.angularXMotion,this.angularYMotion=e.angularYMotion,this.angularZMotion=e.angularZMotion,-1!=e.rigidbodyID&&-1!=e.connectRigidbodyID&&(t.component.push(this),t.data.push(e)),null!=e.breakForce&&(this.breakForce=e.breakForce),null!=e.breakTorque&&(this.breakTorque=e.breakTorque)}_parseInteractive(e=null,t=null){var r=t[e.rigidbodyID].getComponent(O),a=t[e.connectRigidbodyID].getComponent(O);this.ownBody=r,this.connectedBody=a}}yi.CONFIG_MOTION_TYPE_LOCKED=0,yi.CONFIG_MOTION_TYPE_LIMITED=1,yi.CONFIG_MOTION_TYPE_FREE=2,yi.MOTION_LINEAR_INDEX_X=0,yi.MOTION_LINEAR_INDEX_Y=1,yi.MOTION_LINEAR_INDEX_Z=2,yi.MOTION_ANGULAR_INDEX_X=3,yi.MOTION_ANGULAR_INDEX_Y=4,yi.MOTION_ANGULAR_INDEX_Z=5,yi.RO_XYZ=0,yi.RO_XZY=1,yi.RO_YXZ=2,yi.RO_YZX=3,yi.RO_ZXY=4,yi.RO_ZYX=5;class Ii extends vi{constructor(){super(vi.CONSTRAINT_FIXED_CONSTRAINT_TYPE),this.breakForce=-1,this.breakTorque=-1}_addToSimulation(){this._simulation&&this._simulation.addConstraint(this,this.disableCollisionsBetweenLinkedBodies)}_removeFromSimulation(){this._simulation.removeConstraint(this),this._simulation=null}_createConstraint(){if(this.ownBody&&this.ownBody._simulation&&this.connectedBody&&this.connectedBody._simulation){var e=w._bullet;this._btConstraint=e.btFixedConstraint_create(this.ownBody.btColliderObject,this._btframATrans,this.connectedBody.btColliderObject,this._btframBTrans),this._btJointFeedBackObj=e.btJointFeedback_create(this._btConstraint),e.btTypedConstraint_setJointFeedback(this._btConstraint,this._btJointFeedBackObj),e.btTypedConstraint_setEnabled(this._btConstraint,!0),this._simulation=this.getPhysicsSimulation(),this._addToSimulation()}}_onEnable(){this._btConstraint&&w._bullet.btTypedConstraint_setEnabled(this._btConstraint,!0)}_onDisable(){this.connectedBody||this._removeFromSimulation(),this._btConstraint&&w._bullet.btTypedConstraint_setEnabled(this._btConstraint,!1)}_parse(e,t=null){super._parse(e),-1!=e.rigidbodyID&&-1!=e.connectRigidbodyID&&(t.component.push(this),t.data.push(e)),null!=e.breakForce&&(this.breakForce=e.breakForce),null!=e.breakTorque&&(this.breakTorque=e.breakTorque)}_parseInteractive(e=null,t=null){var r=t[e.rigidbodyID].getComponent(O),a=t[e.connectRigidbodyID].getComponent(O);this.ownBody=r,this.connectedBody=a}}class Mi extends L{constructor(e=i.COLLISIONFILTERGROUP_DEFAULTFILTER,t=i.COLLISIONFILTERGROUP_ALLFILTER){super(e,t),this._enableProcessCollisions=!1}_addToSimulation(){this._simulation._addPhysicsCollider(this,this._collisionGroup,this._canCollideWith)}_removeFromSimulation(){this._simulation._removePhysicsCollider(this)}_parse(e){null!=e.friction&&(this.friction=e.friction),null!=e.rollingFriction&&(this.rollingFriction=e.rollingFriction),null!=e.restitution&&(this.restitution=e.restitution),null!=e.isTrigger&&(this.isTrigger=e.isTrigger),super._parse(e),this._parseShape(e.shapes)}_onAdded(){var e=w._bullet,t=e.btCollisionObject_create();e.btCollisionObject_setUserIndex(t,this.id),e.btCollisionObject_forceActivationState(t,T.ACTIVATIONSTATE_DISABLE_SIMULATION);var r=e.btCollisionObject_getCollisionFlags(t);this.owner.isStatic?((r&T.COLLISIONFLAGS_KINEMATIC_OBJECT)>0&&(r^=T.COLLISIONFLAGS_KINEMATIC_OBJECT),r|=T.COLLISIONFLAGS_STATIC_OBJECT):((r&T.COLLISIONFLAGS_STATIC_OBJECT)>0&&(r^=T.COLLISIONFLAGS_STATIC_OBJECT),r|=T.COLLISIONFLAGS_KINEMATIC_OBJECT),e.btCollisionObject_setCollisionFlags(t,r),this._btColliderObject=t,super._onAdded()}}let Li=t.ClassUtils.regClass;Li("CharacterController",E),Li("Rigidbody3D",O),Li("PhysicsCollider",Mi),Li("ConfigurableConstraint",yi),Li("FixedConstraint",Ii);var Oi=t.Script;class bi{constructor(){this.indexStart=0,this.indexCount=0,this.meshBounds=new _e(new t.Vector3,new t.Vector3),this.needRender=!1}}class wi extends ke{constructor(){super(t.MeshTopology.Triangles,t.DrawType.DrawElement),this.subInfos=[]}addSubMesh(e,t,r){let a=new bi;a.indexCount=e,a.indexStart=t,r.cloneTo(a.meshBounds),this.subInfos.push(a)}_getType(){return wi._type}_updateRenderParams(e){this.clearRenderParams();let r=e.camera.transform.position;this.subInfos.sort(((e,a)=>{let n=e.meshBounds.getCenter(),i=t.Vector3.distanceSquared(n,r),s=a.meshBounds.getCenter();return i-t.Vector3.distanceSquared(s,r)}));for(const e of this.subInfos)e.needRender&&this.setDrawElemenParams(e.indexCount,e.indexStart*this.indexByteCount)}_prepareRender(e){return!!this.subInfos.find((e=>e.needRender))}_render(e){super._render(e)}destroy(){for(const e of this.subInfos);this.subInfos=null}}wi._type=ke._typeCounter++;const Bi=new t.Matrix4x4,Ni=[0,1,2],Vi=[0,2,1];class Pi{static create(e){let r,a=new Pi,n=e.vertexCount,i=e.indexCount,s=e.vertexDec,o=s.vertexStride/4,h=new ArrayBuffer(s.vertexStride*n),c=new Float32Array(h),d=t.IndexFormat.UInt16,_=2;n>65535?(d=t.IndexFormat.UInt32,_=4,r=new Uint32Array(i)):r=new Uint16Array(i),s.getVertexElementByUsage(t.VertexMesh.MESH_POSITION0),s.getVertexElementByUsage(t.VertexMesh.MESH_NORMAL0),s.getVertexElementByUsage(t.VertexMesh.MESH_TEXTURECOORDINATE1),s.getVertexElementByUsage(t.VertexMesh.MESH_TANGENT0);let u,m=0,f=0,g=0;for(const n of e.renders){let e=n.lightmapScaleOffset;u||(u=a.bounds,n.bounds.cloneTo(u)),_e.merge(u,n.bounds,u);let i=n.owner,h=i.transform._isFrontFaceInvert,p=i.transform.worldMatrix,S=Bi;p.invert(S),S.transpose();let T=n.getMesh(),E=T.vertexCount,A=T.indexCount,x=T._vertexBuffer.getFloat32Data();c.set(x,m);for(let r=0;r<E;r++){let a=r*o;for(const r of s._vertexElements)switch(a+=r.offset/4,r.elementUsage){case t.VertexMesh.MESH_POSITION0:l.transformVector3ArrayToVector3ArrayCoordinate(x,a,p,c,m+a);break;case t.VertexMesh.MESH_NORMAL0:case t.VertexMesh.MESH_TANGENT0:l.transformVector3ArrayToVector3ArrayNormal(x,a,S,c,m+a);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:l.transformLightingMapTexcoordArray(x,a,e,c,m+a)}}let D=T._indexBuffer.getData(),R=h?Vi:Ni;for(let e=0;e<A;e+=3)r[g+e]=D[e+R[0]]+f,r[g+e+1]=D[e+R[1]]+f,r[g+e+2]=D[e+R[2]]+f;let C=T.subMeshCount;for(let e=0;e<C;e++){let t=n.sharedMaterials[e]||nt.defaultMaterial,r=a._staticSubMeshes.get(t);r||(r=new wi,r.indexByteCount=_,a._staticSubMeshes.set(t,r),r.bufferState=a._bufferState,r.indexFormat=d);let i=T.getSubMesh(e);r.addSubMesh(i.indexCount,i._indexStart+g,n.bounds)}m+=x.length,f+=E,g+=D.length}let p=t.LayaGL.renderOBJCreate.createVertexBuffer3D(h.byteLength,t.BufferUsage.Static,!1);p.vertexDeclaration=s,p.setData(h);let S=t.LayaGL.renderOBJCreate.createIndexBuffer3D(d,i,t.BufferUsage.Static,!1);return S.setData(r),a.setBuffer(p,S),a}constructor(){this._bufferState=new t.BufferState,this._staticSubMeshes=new Map,this.bounds=new _e}setBuffer(e,t){let r=this._bufferState;this._vertexBuffer=e,this._indexBuffer=t,r.applyState([e],t)}destroy(){this._staticSubMeshes.forEach((e=>{e.destroy()})),this._staticSubMeshes.clear(),this._staticSubMeshes=null,this._bufferState.destroy()}}class Fi extends ze{constructor(){super()}getInvertFront(){return!1}}class Ui extends He{static create(e){let t=new Ui;return t.mergeInfo=e,t}get staticMesh(){return this._staticMesh}get mergeInfo(){return this._mergeInfo}set mergeInfo(e){this._mergeInfo=e;let t=Pi.create(e);this._staticMesh=t,this.lightmapIndex=e.lightmapIndex,this._staticMesh=t,this.geometryBounds=t.bounds;let r=st._meshVerticeDefine,a=this._shaderValues;this._getMeshDefine(t,r);for(const e of r)a.addDefine(e);this._renderElements.forEach((e=>{e.material._removeReference(),e.destroy()})),this._renderElements=[],t._staticSubMeshes.forEach(((e,t)=>{let r=new Fi;this._renderElements.push(r),r.render=this,r.material=t,r.setGeometry(e),t._addReference()})),t.bounds.cloneTo(this.bounds)}constructor(){super(),this._singleton=!1}_calculateBoundingBox(){}_renderUpdate(e,r){this._applyLightMapParams(),this._setShaderValue(J.WORLDMATRIX,t.ShaderDataType.Matrix4x4,t.Matrix4x4.DEFAULT)}_getMeshDefine(e,r){let a=e._vertexBuffer.vertexDeclaration._vertexElements;for(const e of a)switch(e.elementUsage){case t.VertexMesh.MESH_COLOR0:r.push(he.SHADERDEFINE_COLOR);break;case t.VertexMesh.MESH_TEXTURECOORDINATE0:r.push(he.SHADERDEFINE_UV0);break;case t.VertexMesh.MESH_TEXTURECOORDINATE1:r.push(he.SHADERDEFINE_UV1);break;case t.VertexMesh.MESH_TANGENT0:r.push(he.SHADERDEFINE_TANGENT)}}_needRender(e,t){if(e){if(e.intersects(this.bounds)){let t=!1;return this.staticMesh._staticSubMeshes.forEach((r=>{for(const a of r.subInfos)a.needRender=e.intersects(a.meshBounds),t=t||a.needRender})),t}return!1}return!0}onEnable(){super.onEnable(),this.mergeInfo.renders.forEach((t=>{t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_Batch,!0)}))}onDisable(){super.onDisable(),this.mergeInfo.renders.forEach((t=>{t.setRenderbitFlag(e.RenderBitFlag.RenderBitFlag_Batch,!1)}))}onDestroy(){super.onDestroy(),this._renderElements.forEach((e=>{e.material._removeReference(),e.destroy()})),this._renderElements=null,this._staticMesh.destroy(),this._staticMesh=null}_cloneTo(e){e.mergeInfo=this.mergeInfo}}ot.prototype.getMesh=function(){return this._mesh};class Gi{static create(e){let t=e.getMesh();e.owner;let r=new Gi;return r.lightmapIndex=e.lightmapIndex,r.receiveShadow=e.receiveShadow,r.vertexDec=t?t.getVertexDeclaration():null,r}get renders(){return this._renders}constructor(){this._renders=[],this.vertexCount=0,this.indexCount=0}match(e){let t=e.getMesh();e.owner;let r=!0;return r=r&&this.lightmapIndex==e.lightmapIndex,r=r&&this.receiveShadow==e.receiveShadow,r=r&&this.vertexDec==t.getVertexDeclaration(),r}addElement(e){this.renders.push(e);let t=e.getMesh();this.vertexCount+=t.vertexCount,this.indexCount+=t.indexCount}destroy(){this._renders=null}}class Hi{constructor(e,t,r){this.currentlength=0,this.bindUBO=e,this.defaultSubData=r,e._reset(Hi.configStartLength*this.defaultSubData.getbyteLength()),this.subDataParamMap=t,this.maxlength=Hi.configStartLength,this.subDataMap=[],this.pool=[],this.subDataMap.push(r),this.currentlength++}create(){if(this.pool.length>0){const e=this.pool.pop();return e._isInPool=!1,e}this.maxlength==this.currentlength&&this.reset();let e=new Map;this.subDataParamMap.forEach(((r,a)=>{e.set(t.Shader3D.propertyNameToID(a),r)}));let r=new t.SubUniformBufferData(e,this.currentlength++);return this.subDataMap.push(r),r}recover(e){e._isInPool||(this.pool.push(e),e._isInPool=!0)}reset(){this.maxlength+=Hi.addStep,this.bindUBO._reset(this.maxlength*this.defaultSubData.getbyteLength()),this.subDataMap.forEach((e=>{this.bindUBO.setDataByByUniformBufferDataOffset(e,e._offset)}))}updateSubData(e){this.bindUBO.setDataByByUniformBufferDataOffset(e,e._offset),e._needUpdate=!1}updateBindRange(e){let t=e.getbyteLength();this.bindUBO._bindBufferRange(e._offset*t,t)}destroy(){this.subDataMap.forEach((e=>{e.destroy()})),delete this.subDataMap,delete this.pool,this.subDataMap=null,this.pool=null}}Hi.configStartLength=1024,Hi.addStep=512;class zi extends ke{constructor(e){super(t.MeshTopology.TriangleStrip,t.DrawType.DrawArray),this._owner=e,this.bufferState=new t.BufferState,this._createBuffer(),this._scale=new t.Vector2(1,1),this._offset=new t.Vector2(0,0),this._bound=new _e}set scale(e){e&&e.cloneTo(this._scale),this._resizeVertexData()}get scale(){return this._scale}set offset(e){e&&e.cloneTo(this._offset),this._resizeVertexData()}get offset(){return this._offset}get bounds(){return this._bound}_createBuffer(){var e=t.VertexMesh.getVertexDeclaration("POSITION,NORMAL,UV"),r=.5,a=.5;this._vertex=new Float32Array([-.5,a,0,0,0,1,0,0,r,a,0,0,0,1,1,0,-.5,-.5,0,0,0,1,0,1,r,-.5,0,0,0,1,1,1]),this._index=new Uint16Array([0,1,2,3,2,1]),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this._vertex.length,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=e,this._vertexBuffer.setData(this._vertex.buffer),t.LayaGL.renderOBJCreate.createIndexBuffer3D(t.IndexFormat.UInt16,this._index.length,t.BufferUsage.Static,!1).setData(this._index),this.bufferState=new t.BufferState,this.bufferState.applyState([this._vertexBuffer],this._indexBuffer),this._bound.setExtent(new t.Vector3(.5,.5,.05)),this._bound.setCenter(new t.Vector3(0,0,0))}_resizeVertexData(){var e=this._scale.x/2+this._offset.x,r=this._scale.y/2+this._offset.y;this._vertex[0]=-e,this._vertex[1]=r,this._vertex[8]=e,this._vertex[9]=r,this._vertex[16]=-e,this._vertex[17]=-r,this._vertex[24]=e,this._vertex[25]=-r,this._vertexBuffer.setData(this._vertex.buffer,0,0,4*this._vertex.length),this._bound.setExtent(new t.Vector3(this._scale.x/2,this._scale.y/2,.05)),this._bound.setCenter(new t.Vector3(this._offset.x,this._offset.y,0))}_updateRenderParams(e){this.clearRenderParams();this.setDrawArrayParams(0,6)}destroy(){super.destroy(),this.bufferState.destroy(),this._vertexBuffer.destroy(),this._indexBuffer.destroy(),this.bufferState=null,this._vertexBuffer=null,this._indexBuffer=null,delete this._vertex,delete this._index}}zi._type=ke._typeCounter++;class ki extends He{set sprite(e){this._uisprite=e,this._resizeRT(e.width,e.height)}get sprite(){return this._uisprite}set scale(e){this._geometry.scale=e}get scale(){return this._geometry.scale}set offset(e){this._geometry.offset=e}get offset(){return this._geometry.offset}get UIRender(){return this._rendertexure2D}constructor(){super(),this._uiPlane=new te(new t.Vector3,0)}_addRenderElement(){var e=this._renderElements,t=this.sharedMaterials[0];t||(t=nt.defaultMaterial);var r=new ze;r.setTransform(this.owner._transform),r.render=this,r.material=t,this._geometry=new zi(this),r.setGeometry(this._geometry),e.push(r)}_resizeRT(e,r){this._rendertexure2D?this._rendertexure2D.width==e&&this._rendertexure2D.height==r&&(this._rendertexure2D.destroy(),this._rendertexure2D=new t.RenderTexture2D(e,r,t.RenderTargetFormat.R8G8B8A8,t.RenderTargetFormat.None)):this._rendertexure2D=new t.RenderTexture2D(e,r,t.RenderTargetFormat.R8G8B8A8,t.RenderTargetFormat.None)}_calculateBoundingBox(){var e=this._transform.worldMatrix;this._geometry.bounds._tranform(e,this._bounds)}_submitRT(){this._uisprite&&this._uisprite.drawToTexture(0,0,0,0,this._rendertexure2D,!0)}_checkUIPos(e){return oe.rayPlaneIntersection(e,this._uiPlane)}_changePlane(){t.Vector3.Up,t.Vector3.ForwardLH,this.owner.transform.worldMatrix}_onAdded(){super._onAdded(),this._addRenderElement()}_onDisable(){super._onDisable(),this.owner.scene._UI3DManager.remove(this),this.owner.transform.off(t.Event.TRANSFORM_CHANGED,this,this._changePlane)}_onEnable(){super._onEnable(),this.owner.scene._UI3DManager.add(this),this.owner.transform.on(t.Event.TRANSFORM_CHANGED,this,this._changePlane)}_onDestroy(){super._onDestroy()}}ki.temp0=new t.Vector3,ki.temp1=new t.Vector3,ki.temp2=new t.Vector3;const Wi=new t.Vector2,Yi=new re(new t.Vector3,new t.Vector3),Xi=new D;t.InputManager.prototype.getSprite3DUnderPoint=function(r,a){Xi.succeeded=!1,Wi.setValue(r,a);for(let n of this._stage._scene3Ds){let i=n._physicsSimulation;if(!i)continue;let s=n._cameraPool;for(let n=s.length-1;n>=0;n--){let o=s[n],l=o.viewport,h=t.Config3D.pixelRatio;if(r>=l.x&&a>=l.y&&r<=l.width/h&&a<=l.height/h)if(o.viewportPointToRay(Wi,Yi),i.rayCast(Yi,Xi)||o.clearFlag===e.CameraClearFlags.SolidColor||o.clearFlag===e.CameraClearFlags.Sky)break}if(Xi.succeeded)return Xi.collider.owner}return null};class ji{get gradientCount(){return this._currentLength/3}constructor(){this._currentLength=0,this._elements=new Float32Array(12)}add(e,t){this._currentLength<8?(6===this._currentLength&&1!==e&&(e=1,console.log("GradientDataVector2 warning:the forth key is  be force set to 1.")),this._elements[this._currentLength++]=e,this._elements[this._currentLength++]=t.x,this._elements[this._currentLength++]=t.y):console.log("GradientDataVector2 warning:data count must lessEqual than 4")}cloneTo(e){var t=e;t._currentLength=this._currentLength;for(var r=t._elements,a=0,n=this._elements.length;a<n;a++)r[a]=this._elements[a]}clone(){var e=new ji;return this.cloneTo(e),e}}class Qi{constructor(){this._isNeedUpdate=!1}createInstanceVertexBuffer3D(){this._instanceData=new Float32Array(ut.maxInstanceCount*this._vertexStride),this._vertexBuffer=t.LayaGL.renderOBJCreate.createVertexBuffer3D(4*this._instanceData.length,t.BufferUsage.Dynamic,!1),this._vertexBuffer.vertexDeclaration=this._vertexDeclaration,this._vertexBuffer.instanceBuffer=!0}updateVertexBufferData(e){if(!this._isNeedUpdate)return;let t,r=this._instanceData,a=this._value,n=this._value.length,i=this._vertexStride,s=0;switch(this._value instanceof Float32Array||(s=1),s){case 0:r.set(a,0);break;case 1:for(let e=0;e<n;e++)t=a[e],t.writeTo(r,e*i)}this._vertexBuffer.orphanStorage(),this._vertexBuffer.setData(r.buffer,0,0,4*e*i)}destroy(){delete this._value,delete this._instanceData,this._vertexDeclaration=null,this._vertexBuffer.destroy()}}var Ki;e.InstanceLocation=void 0,(Ki=e.InstanceLocation||(e.InstanceLocation={}))[Ki.CUSTOME0=12]="CUSTOME0",Ki[Ki.CUSTOME1=13]="CUSTOME1",Ki[Ki.CUSTOME2=14]="CUSTOME2",Ki[Ki.CUSTOME3=15]="CUSTOME3";class qi{constructor(){this._type=0,this._propertyMap={}}_checkPropertyLegal(e,t,r,a){if(a._vertexDeclaration._vertexElements[0]._elementFormat!==e)throw"Data exists and format does not match";if(a._name!==t)throw"You cannot add a new property to an existing attributeLocation,Please use another attributeLocation"}_creatProperty(e,r,a,n,i){var s=this._propertyMap[i]=new Qi;s._name=e,s._value=r,s._vertexDeclaration=new t.VertexDeclaration(a,[new t.VertexElement(0,n,i)]),s._isNeedUpdate=!0,s._vertexStride=a/4,s.createInstanceVertexBuffer3D()}setVectorArray(e,r,a){var n=this._propertyMap[a];n?(this._checkPropertyLegal(t.VertexElementFormat.Vector4,e,a,n),n._value=r,n._isNeedUpdate=!0):this._creatProperty(e,r,16,t.VertexElementFormat.Vector4,a)}setVector3Array(e,r,a){var n=this._propertyMap[a];n?(this._checkPropertyLegal(t.VertexElementFormat.Vector3,e,a,n),n._value=r,n._isNeedUpdate=!0):this._creatProperty(e,r,12,t.VertexElementFormat.Vector3,a)}setVector2Array(e,r,a){var n=this._propertyMap[a];n?(this._checkPropertyLegal(t.VertexElementFormat.Vector2,e,a,n),n._value=r,n._isNeedUpdate=!0):this._creatProperty(e,r,8,t.VertexElementFormat.Vector2,a)}setNumberArray(e,r,a){var n=this._propertyMap[a];n?(this._checkPropertyLegal(t.VertexElementFormat.Single,e,a,n),n._value=r,n._isNeedUpdate=!0):this._creatProperty(e,r,4,t.VertexElementFormat.Single,a)}getPropertyArray(e){var t=this._propertyMap[e];return t?t._value:null}clear(){for(var e in this._propertyMap)this._propertyMap[e].destroy();this._propertyMap={}}}qi.INSTANCETYPE_ATTRIBUTE=0,qi.INSTANCETYPE_UNIFORMBUFFER=1,e.ACESShaderLib=An,e.AlternateLightQueue=pt,e.AnimationClip=Z,e.AnimationClipParser03=Y,e.AnimationClipParser04=K,e.AnimationEvent=N,e.Animator=ga,e.AnimatorController=La,e.AnimatorControllerLayer=_a,e.AnimatorPlayState=da,e.AnimatorResource=ua,e.AnimatorState=ma,e.AnimatorStateScript=class{constructor(){}onStateEnter(){}onStateUpdate(e){}onStateExit(){}},e.AnimatorTransition=Ma,e.AreaLightCom=ta,e.AvatarMask=fa,e.AxiGamepad=Ei,e.BVHCullPass=Vt,e.BVHRenderBox=bt,e.BVHRenderSpatial=wt,e.BVHSceneRenderManager=Bt,e.BVHSpatial=Ot,e.BVHSpatialBox=Lt,e.BVHSpatialConfig=Mt,e.BVHSpatialManager=It,e.BaseCamera=Qe,e.BaseRender=He,e.BaseRenderNode=In,e.BaseRenderQueue=Ln,e.BaseShape=gr,e.BatchMark=Oa,e.BatchRender=Na,e.BlinnPhongMaterial=nt,e.BlinnPhongShaderInit=dn,e.BlitFrameBufferCMD=Ct,e.BlitScreenQuadCMD=et,e.BlitScreenShaderInit=nn,e.BloomEffect=Ra,e.BoundBox=fr,e.BoundFrustum=ie,e.BoundSphere=Et,e.Bounds=_e,e.BoundsImpl=Cn,e.BoxColliderShape=_,e.BoxShape=Sr,e.BulletInteractive=tn,e.Burst=nr,e.ButtonGamepad=Ai,e.Camera=Ft,e.CameraCullInfo=On,e.CapsuleColliderShape=u,e.CharacterController=E,e.CircleShape=Tr,e.ClearRenderTextureCMD=ht,e.Cluster=ee,e.ColliderShape=d,e.Collision=R,e.CollisionTool=C,e.CollisionUtils=ne,e.ColorGradEffect=Aa,e.ColorOverLifetime=sr,e.Command=$e,e.CommandBuffer=mt,e.CompoundColliderShape=m,e.ConeColliderShape=f,e.ConeShape=Er,e.ConfigurableConstraint=yi,e.Constraint3D=class{constructor(){}},e.ConstraintComponent=vi,e.ContactPoint=x,e.ContainmentType=ae,e.CullPassBase=Nt,e.CylinderColliderShape=g,e.DepthCasterData=r,e.DepthPass=n,e.DirectionLight=kt,e.DirectionLightCom=Ht,e.DrawMeshCMD=lt,e.DrawMeshInstancedCMD=ut,e.DrawRenderCMD=ct,e.EffectMaterial=Kt,e.Emission=or,e.ExtendTerrainMaterial=qt,e.FixedConstraint=Ii,e.FloatKeyframe=z,e.FrameOverTime=lr,e.FrustumCulling=Dt,e.GaussianDoF=va,e.GeometryElement=ke,e.Gradient=Gt,e.GradientAngularVelocity=hr,e.GradientColor=ir,e.GradientDataInt=cr,e.GradientDataNumber=dr,e.GradientDataVector2=ji,e.GradientMode=Ut,e.GradientSize=_r,e.GradientVelocity=ur,e.HeightfieldTerrainShape=class extends d{constructor(e,r,a,n,i,s){super(),this.dataPtr=0,this.initSize=new t.Vector3,this._type=d.SHAPETYPES_HEIGHTFIELDTERRAIN;var l=o.Physics3D._bullet;this.needsCustomCollisionCallback=!0;let h=5;if(e instanceof Uint16Array)h=3;else if(e instanceof Uint8Array)h=5;else{if(!(e instanceof Float32Array))throw"bad heightfield data";h=0}if(this.dataPtr=l._malloc(e.byteLength),window.conch)l.copyJSArray(this.dataPtr,e.buffer);else{let r=t.ILaya.Laya.WasmModules.bullet.memory.buffer;new Uint8Array(r,this.dataPtr,e.byteLength).set(new Uint8Array(e.buffer))}this._btShape=l.btHeightfieldTerrainShape_create(r,a,this.dataPtr,s,n,i,h)}setMargin(e){o.Physics3D._bullet.btConcaveShape_setMargin(this._btShape,e)}_setScale(e){super._setScale(e)}destroy(){(super.destroy(),this.dataPtr)&&o.Physics3D._bullet._free(this.dataPtr)}clone(){throw"not imp"}},e.HemisphereShape=Ar,e.HitResult=D,e.ILaya3D=o,e.IndexBuffer3D=Dn,e.InstanceBatchManager=ba,e.InstanceRenderElement=Zr,e.InstanceRenderElementOBJ=wn,e.Keyframe=H,e.KeyframeNode=B,e.KeyframeNodeList=q,e.KeyframeNodeOwner=Q,e.LODGroup=ia,e.LODInfo=na,e.Laya3D=ui,e.Light=Ke,e.LightQueue=gt,e.LightSprite=zt,e.Lightmap=St,e.LoadModelV04=Ha,e.LoadModelV05=za,e.Material=at,e.MaterialInstanceProperty=Qi,e.MaterialInstancePropertyBlock=qi,e.MaterialParser=Ga,e.Mesh=ea,e.MeshColliderShape=p,e.MeshFilter=st,e.MeshInstanceGeometry=_t,e.MeshReader=ka,e.MeshRenderer=ot,e.MeshSprite3D=ar,e.MeshSprite3DShaderDeclaration=he,e.NativeBaseRenderNode=Hn,e.NativeBaseRenderQueue=zn,e.NativeBounds=kn,e.NativeCameraCullInfo=Xn,e.NativeCommandUniformMap=jn,e.NativeCullPassBase=Qn,e.NativeIndexBuffer3D=Kn,e.NativeInstanceRenderElementOBJ=ei,e.NativeRenderContext3DOBJ=ti,e.NativeRenderElementOBJ=$n,e.NativeRenderGeometryElementOBJ=ri,e.NativeRenderOBJCreateUtil=_i,e.NativeRenderState=ai,e.NativeSceneRenderManager=ni,e.NativeShaderData=ii,e.NativeShaderInstance=si,e.NativeShadowCullInfo=oi,e.NativeSkinRenderElementOBJ=li,e.NativeTransform3D=hi,e.NativeUniformBufferObject=ci,e.NativeVertexBuffer3D=di,e.PBRDefaultDFG=un,e.PBRMaterial=Zt,e.PBRShaderLib=mn,e.PBRStandardMaterial=Jt,e.PBRStandardShaderInit=gn,e.ParseJSON=Ya,e.ParticleShuriKenShaderInit=Sn,e.Physics3D=w,e.Physics3DUtils=i,e.PhysicsCollider=Mi,e.PhysicsComponent=T,e.PhysicsSettings=ft,e.PhysicsSimulation=M,e.PhysicsTriggerComponent=L,e.PhysicsUpdateList=A,e.Picker=oe,e.PixelLineData=sa,e.PixelLineFilter=la,e.PixelLineMaterial=ha,e.PixelLineRenderer=ca,e.PixelLineSprite3D=class extends le{get maxLineCount(){return this._render.maxLineCount}set maxLineCount(e){this._render.maxLineCount=e}get lineCount(){return this._render.lineCount}get pixelLineRenderer(){return this._render}constructor(e=2,t=null){super(t),this._isRenderActive=!1,this._isInRenders=!1,this._render=this.addComponent(ca),this._geometryFilter=this._render._pixelLineFilter,this._render.maxLineCount=e,(this._render.material=new Qt).enableVertexColor=!0}addLine(e,t,r,a){this._render.addLine(e,t,r,a)}addLines(e){this._render.addLines(e)}removeLine(e){this._render.removeLine(e)}setLine(e,t,r,a,n){this._render.setLine(e,t,r,a,n)}getLine(e,t){this._render.getLine(e,t)}clear(){this._render.clear()}_create(){return new J}},e.PixelLineVertex=oa,e.Plane=te,e.PointLight=Yt,e.PointLightCom=Wt,e.PostProcess=xa,e.PostProcessEffect=Sa,e.PostProcessRenderContext=pa,e.PrimitiveMesh=rn,e.QuaternionKeyframe=k,e.QuickSort=Bn,e.Rand=Lr,e.RandX=mi,e.Ray=re,e.RaycastVehicle=I,e.RaycastWheel=v,e.ReflectionProbe=Ge,e.ReflectionProbeManager=Ne,e.RenderContext3D=Ze,e.RenderContext3DOBJ=Nn,e.RenderElement=ze,e.RenderElementBatch=Mn,e.RenderElementOBJ=bn,e.RenderGeometryElementOBJ=Vn,e.RenderOBJCreateUtil=Gn,e.RenderTextureCube=gi,e.RenderableSprite3D=le,e.Rigidbody3D=O,e.RotationOverLifetime=mr,e.ScalableAO=Ia,e.Scene3D=Pt,e.Scene3DShaderDeclaration=Tt,e.SceneRenderManager=vt,e.SceneRenderManagerOBJ=Pn,e.ScreenQuad=Je,e.Script3D=Oi,e.SetGlobalShaderDataCMD=dt,e.SetRenderTargetCMD=tt,e.SetShaderDataCMD=rt,e.ShaderInit3D=xn,e.ShaderParser=qa,e.ShadowCasterPass=Rt,e.ShadowCullInfo=Fn,e.ShadowSliceData=At,e.ShadowSpotData=xt,e.ShadowUtils=qe,e.ShapeUtils=pr,e.ShuriKenParticle3D=Pr,e.ShuriKenParticle3DShaderDeclaration=Or,e.ShurikenParticleData=br,e.ShurikenParticleInstanceSystem=Br,e.ShurikenParticleMaterial=Nr,e.ShurikenParticleRenderer=Vr,e.ShurikenParticleSystem=wr,e.SimpleSkinnedMeshRenderer=Hr,e.SimpleSkinnedMeshSprite3D=zr,e.Size=fi,e.SizeOverLifetime=Dr,e.SkinRenderElement=Ur,e.SkinRenderElementOBJ=Un,e.SkinnedMeshRenderer=Gr,e.SkinnedMeshSprite3D=kr,e.SkinnedMeshSprite3DShaderDeclaration=Fr,e.SkyBox=We,e.SkyBoxMaterial=$t,e.SkyBoxShaderInit=pn,e.SkyDome=Xe,e.SkyPanoramicMaterial=er,e.SkyPanoramicShaderInit=En,e.SkyProceduralMaterial=tr,e.SkyProceduralShaderInit=Tn,e.SkyRenderer=je,e.SphereColliderShape=S,e.SphereShape=xr,e.SphericalHarmonicsL2=Pe,e.SphericalHarmonicsL2Generater=Fe,e.SpotLight=jt,e.SpotLightCom=Xt,e.Sprite3D=J,e.Sprite3DRenderDeclaration=Ue,e.StartFrame=Rr,e.StatiVertexMergeBatchRender=Pa,e.StaticBatchMesh=Pi,e.StaticBatchMeshRender=Ui,e.StaticBatchMeshRenderElement=Fi,e.StaticBatchSubInfo=bi,e.StaticBatchSubMesh=wi,e.StaticBatchVolume=Fa,e.StaticInstanceBatchRender=Va,e.StaticMeshBatchManager=class{constructor(){this.meshVertexDecSet=new Set}combine(e){for(const t of e){let e=!1;for(const r of this.meshVertexDecSet)r.match(t)&&(e=!0,r.addElement(t));if(!e){let e=Gi.create(t);e.addElement(t),this.meshVertexDecSet.add(e)}}let t=[];for(const e of this.meshVertexDecSet)t.push(Ui.create(e));return this.meshVertexDecSet.clear(),t}merge(e){return Ui.create(e)}},e.StaticMeshMergeInfo=Gi,e.StaticPlaneColliderShape=b,e.SubMesh=Jr,e.SubMeshInstanceBatch=$a,e.SubMeshRenderElement=it,e.TextMesh=class{get text(){return this._text}set text(e){this._text=e}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize=e}get color(){return this._color}set color(e){this._color=e}constructor(){}},e.TextureCube=de,e.TextureGenerator=s,e.TextureSheetAnimation=Cr,e.TrailFilter=Qr,e.TrailGeometry=Xr,e.TrailMaterial=jr,e.TrailRenderer=Kr,e.TrailShaderInit=_n,e.TrailSprite3D=qr,e.TrailTextureMode=Wr,e.TransLargeUBOUtils=Hi,e.Transform3D=c,e.UI3D=ki,e.UI3DGeometry=zi,e.UI3DManager=yt,e.UnlitMaterial=Qt,e.UnlitShaderInit=ln,e.Utils3D=l,e.Vector2Keyframe=X,e.Vector3Keyframe=W,e.Vector4Keyframe=j,e.VelocityOverLifetime=vr,e.VertexBuffer3D=Rn,e.VertexPositionTerrain=en,e.VertexPositionTexture0=Ye,e.VertexShuriKenParticle=yr,e.VertexShurikenParticleBillboard=Ir,e.VertexShurikenParticleMesh=Mr,e.VertexTrail=Yr,e.Viewport=se,e.Volume=Be,e.VolumeManager=Ve,e.WaterPrimaryMaterial=rr,e.WebXRCamera=Ci,e.WebXRCameraInfo=class{},e.WebXRCameraManager=Ti,e.WebXRExperienceHelper=Ri,e.WebXRInput=xi,e.WebXRInputManager=Di,e.WebXRRenderTexture=pi,e.WebXRSessionManager=Si,e.btVehicleTuning=y,e.btWheelInfo=class{},e.skinnedMatrixCache=$r,e.volumeIntersectInfo=class{}}(window.Laya=window.Laya||{},Laya);