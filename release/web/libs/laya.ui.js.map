{"version":3,"file":"laya.ui.js","sources":["../../src/layaAir/UIConfig.ts","../../src/layaAir/laya/ui/AutoBitmap.ts","../../src/layaAir/laya/ui/UIEvent.ts","../../src/layaAir/laya/ui/UIUtils.ts","../../src/layaAir/laya/ui/UIComponent.ts","../../src/layaAir/laya/ui/Box.ts","../../src/layaAir/laya/ui/Styles.ts","../../src/layaAir/laya/ui/Button.ts","../../src/layaAir/laya/ui/CheckBox.ts","../../src/layaAir/laya/ui/Clip.ts","../../src/layaAir/laya/ui/ColorPicker.ts","../../src/layaAir/laya/ui/Label.ts","../../src/layaAir/laya/ui/Image.ts","../../src/layaAir/laya/ui/Slider.ts","../../src/layaAir/laya/ui/ScrollBar.ts","../../src/layaAir/laya/ui/VScrollBar.ts","../../src/layaAir/laya/ui/HScrollBar.ts","../../src/layaAir/laya/ui/List.ts","../../src/layaAir/laya/ui/ComboBox.ts","../../src/layaAir/laya/ui/View.ts","../../src/layaAir/laya/ui/DialogManager.ts","../../src/layaAir/laya/ui/Dialog.ts","../../src/layaAir/laya/ui/FontClip.ts","../../src/layaAir/laya/ui/LayoutBox.ts","../../src/layaAir/laya/ui/HBox.ts","../../src/layaAir/laya/ui/HSlider.ts","../../src/layaAir/laya/ui/Panel.ts","../../src/layaAir/laya/ui/ProgressBar.ts","../../src/layaAir/laya/ui/Radio.ts","../../src/layaAir/laya/ui/UIGroup.ts","../../src/layaAir/laya/ui/RadioGroup.ts","../../src/layaAir/laya/ui/ScaleBox.ts","../../src/layaAir/laya/ui/Tab.ts","../../src/layaAir/laya/ui/TextInput.ts","../../src/layaAir/laya/ui/TextArea.ts","../../src/layaAir/laya/ui/TipManager.ts","../../src/layaAir/laya/ui/Tree.ts","../../src/layaAir/laya/ui/VBox.ts","../../src/layaAir/laya/ui/ViewStack.ts","../../src/layaAir/laya/ui/VSlider.ts","../../src/layaAir/laya/ui/OpenDataContextView.ts","../../src/layaAir/laya/ui/ModuleDef.ts"],"sourcesContent":["/**全局配置*/\nexport class UIConfig {\n    /**是否开启触摸滚动（针对滚动条）*/\n    static touchScrollEnable: boolean = true;\n    /**是否开启滑轮滚动（针对滚动条）*/\n    static mouseWheelEnable: boolean = true;\n    /**是否显示滚动条按钮*/\n    static showButtons: boolean = true;\n    /**弹出框背景颜色*/\n    static popupBgColor: string = \"#000000\";\n    /**弹出框背景透明度*/\n    static popupBgAlpha: number = 0.5;\n    /**模式窗口点击边缘，是否关闭窗口，默认是关闭的*/\n    static closeDialogOnSide: boolean = true;\n}\n\n","import { Graphics } from \"../display/Graphics\"\nimport { Texture } from \"../resource/Texture\"\nimport { ILaya } from \"../../ILaya\";\nimport { Draw9GridTextureCmd } from \"../display/cmd/Draw9GridTextureCmd\";\nimport { DrawTextureCmd } from \"../display/cmd/DrawTextureCmd\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * <code>AutoBitmap</code> 类是用于表示位图图像或绘制图形的显示对象。\n * <p>封装了位置，宽高及九宫格的处理，供UI组件使用。</p>\n */\nexport class AutoBitmap extends Graphics {\n    /**@private 宽度*/\n    private _width: number = null;\n    /**@private 高度*/\n    private _height: number = null;\n    /**@private 源数据*/\n    private _source: Texture;\n    /**@private 网格数据*/\n    private _sizeGrid: number[];\n    /**@private */\n    protected _isChanged: boolean;\n\n    protected _stateIndex: number;\n    protected _stateNum: number;\n\n    /**@internal */\n    _offset: any[];\n    uv: number[] = null;\n\n    _color: string = \"#ffffff\";\n\n    /**@private */\n    private _drawGridCmd: Draw9GridTextureCmd | DrawTextureCmd;\n\n    /**@inheritDoc \n     * @override\n    */\n    destroy(): void {\n        super.destroy();\n        if (this._source && !LayaEnv.isPlaying)\n            this._source.off(\"reload\", this, this._setChanged);\n        this._source = null;\n        this._sizeGrid = null;\n        this._offset = null;\n    }\n\n    get sizeGrid(): number[] {\n        return this._sizeGrid;\n    }\n\n    set sizeGrid(value: number[]) {\n        this._sizeGrid = value ? value.map((v) => { return +v; }) : null;\n        this._setChanged();\n    }\n\n    /**\n     * 表示显示对象的宽度，以像素为单位。\n     */\n    get width(): number {\n        if (this._width != null) return this._width;\n        if (this._source) return this._source.sourceWidth;\n        return 0;\n    }\n\n    set width(value: number) {\n        if (this._width != value) {\n            this._width = value;\n            this._setChanged();\n        }\n    }\n\n    /**\n     * 表示显示对象的高度，以像素为单位。\n     */\n    get height(): number {\n        if (this._height != null) return this._height;\n        if (this._source) return this._source.sourceHeight / (this._source._stateNum || this._stateNum || 1);\n        return 0;\n    }\n\n    set height(value: number) {\n        if (this._height != value) {\n            this._height = value;\n            this._setChanged();\n        }\n    }\n\n    /**\n     * 对象的纹理资源。\n     */\n    get source(): Texture {\n        return this._source;\n    }\n\n    set source(value: Texture) {\n        if (this._source && !LayaEnv.isPlaying)\n            this._source.off(\"reload\", this, this._setChanged);\n        if (value) {\n            this._source = value;\n            this._setChanged();\n            if (!LayaEnv.isPlaying)\n                value.on(\"reload\", this, this._setChanged);\n        } else {\n            this._source = null;\n            this._setDrawGridCmd(null);\n        }\n    }\n\n    setState(index: number, numStates: number) {\n        this._stateIndex = index;\n        this._stateNum = numStates;\n        this._setChanged();\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(value: string) {\n        if (this._color != value) {\n            this._color = value;\n            this._setChanged();\n        }\n    }\n\n    /** @private */\n    protected _setChanged(): void {\n        if (!this._isChanged) {\n            this._isChanged = true;\n            ILaya.timer.callLater(this, this.changeSource);\n        }\n    }\n\n    /**\n     * @private\n     * 修改纹理资源。\n     */\n    protected changeSource(): void {\n        this._isChanged = false;\n        let source = this._source;\n        if (!source || !source.bitmap || !this._sp)\n            return;\n\n        let width = this.width;\n        let height = this.height;\n        let sizeGrid = this._sizeGrid || source._sizeGrid;\n        let stateIndex = this._stateIndex;\n        if (stateIndex != null) {\n            let stateNum = source._stateNum || this._stateNum || 1;\n            if (stateNum == 1)\n                stateIndex = 0;\n            else if (stateNum == 2) {\n                if (stateIndex == 2)\n                    stateIndex = 1;\n                else\n                    stateIndex = 0;\n            }\n            else if (stateNum == 3) {\n                if (stateIndex == 3)\n                    stateIndex = 0;\n            }\n\n            let h = source.height / stateNum;\n            source = source.getCachedClip(0, h * stateIndex, source.width, h)\n            if (!source)\n                return;\n        }\n\n        let sw = source.sourceWidth;\n        let sh = source.sourceHeight;\n\n        //如果没有设置9宫格，或大小未改变，则直接用原图绘制\n        let cmd: any;\n        if (!sizeGrid || (sw === width && sh === height))\n            cmd = DrawTextureCmd.create(source, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, width, height, null, 1, this._color, null, this.uv)\n        else\n            cmd = Draw9GridTextureCmd.create(source, 0, 0, width, height, sizeGrid, false, this._color);\n        this._setDrawGridCmd(cmd);\n    }\n\n    /**\n     *  由于可能有其他的graphic命令，因此不能用原来的直接clear()的方法\n     */\n    private _setDrawGridCmd(newcmd: any) {\n        if (this._drawGridCmd) {\n            this.removeCmd(this._drawGridCmd);\n            this._drawGridCmd.recover();\n        }\n        this._drawGridCmd = newcmd;\n        if (newcmd)\n            this.addCmd(newcmd);\n    }\n}\n","/**\n * <code>UIEvent</code> 类用来定义UI组件类的事件类型。\n */\nexport class UIEvent {\n    /**\n     * 显示提示信息。\n     */\n    static SHOW_TIP: string = \"showtip\";\n    /**\n     * 隐藏提示信息。\n     */\n    static HIDE_TIP: string = \"hidetip\";\n}","import { Sprite } from \"../display/Sprite\"\nimport { ColorFilter } from \"../filters/ColorFilter\"\nimport { Utils } from \"../utils/Utils\"\nimport { WeakObject } from \"../utils/WeakObject\"\n\n/**\n * <code>UIUtils</code> 是文本工具集。\n */\nexport class UIUtils {\n    private static grayFilter: ColorFilter = new ColorFilter([0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0]);\n\n    /**\n     * 用字符串填充数组，并返回数组副本。\n     * @param\tarr 源数组对象。\n     * @param\tstr 用逗号连接的字符串。如\"p1,p2,p3,p4\"。\n     * @param\ttype 如果值不为null，则填充的是新增值得类型。\n     * @return 填充后的数组。\n     */\n    static fillArray(arr: any[], str: string, type: typeof Number | typeof String = null): any[] {\n        let temp = arr.concat();\n        if (str) {\n            let a = str.split(\",\");\n            for (let i = 0, n = Math.min(temp.length, a.length); i < n; i++) {\n                let value = a[i];\n                temp[i] = (value == \"true\" ? true : (value == \"false\" ? false : value));\n                if (type != null) temp[i] = type(value);\n            }\n        }\n        return temp;\n    }\n\n    /**\n     * 转换uint类型颜色值为字符型颜色值。\n     * @param color uint颜色值。\n     * @return 字符型颜色值。\n     */\n    static toColor(color: number): string {\n        return Utils.toHexColor(color);\n    }\n\n    /**\n     * 给指定的目标显示对象添加或移除灰度滤镜。\n     * @param\ttarget 目标显示对象。\n     * @param\tisGray 如果值true，则添加灰度滤镜，否则移除灰度滤镜。\n     */\n    //TODO:coverage\n    static gray(target: Sprite, isGray: boolean = true): void {\n        let filters: any[] = target.filters || [];\n        let i = filters.indexOf(UIUtils.grayFilter);\n        if (isGray) {\n            if (i == -1) {\n                filters.push(UIUtils.grayFilter);\n                target.filters = filters;\n            }\n        }\n        else if (i != -1) {\n            filters.splice(i, 1);\n            target.filters = filters;\n        }\n    }\n\n    /**@private */\n    private static _funMap: WeakObject = null;//new WeakObject();\n\n    /**\n     * @private 根据字符串，返回函数表达式\n     */\n    //TODO:coverage\n    static getBindFun(value: string): Function {\n        if (!UIUtils._funMap) {\n            UIUtils._funMap = new WeakObject();\n        }\n        var fun: Function = UIUtils._funMap.get(value);\n        if (fun == null) {\n            var temp: string = \"\\\"\" + value + \"\\\"\";\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\n            fun = (window as any).Laya._runScript(str);\n            UIUtils._funMap.set(value, fun);\n        }\n        return fun;\n    }\n}","import { Widget } from \"../components/Widget\";\nimport { UIEvent } from \"./UIEvent\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Node } from \"../display/Node\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * <code>Component</code> 是ui控件类的基类。\n * <p>生命周期：preinitialize > createChildren > initialize > 组件构造函数</p>\n */\nexport class UIComponent extends Sprite {\n    /**@private 控件的数据源。 */\n    protected _dataSource: any;\n    /**@private 鼠标悬停提示 */\n    protected _toolTip: any;\n    /**@private 禁用 */\n    protected _disabled: boolean;\n    /**@private 变灰*/\n    protected _gray: boolean;\n    /**@private 相对布局组件*/\n    protected _widget: Widget = Widget.EMPTY;\n\n    /**\n     * <p>创建一个新的 <code>Component</code> 实例。</p>\n     */\n    constructor(createChildren = true) {\n        super();\n        if (createChildren) {\n            this.preinitialize();\n            this.createChildren();\n            this.initialize();\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._dataSource = null;\n        this._toolTip = null;\n    }\n\n    /**\n     * <p>预初始化。</p>\n     * 子类可在此函数内设置、修改属性默认值\n     */\n    protected preinitialize(): void {\n    }\n\n    /**\n     * <p>创建并添加控件子节点。</p>\n     * 子类可在此函数内创建并添加子节点。\n     */\n    protected createChildren(): void {\n    }\n\n    /**\n     * <p>控件初始化。</p>\n     * 在此子对象已被创建，可以对子对象进行修改。\n     */\n    protected initialize(): void {\n    }\n\n    /**\n     * @override\n     */\n    get_width(): number {\n        if (this._isWidthSet) return this._width;\n        return this.measureWidth();\n    }\n\n    /**\n     * <p>显示对象的实际显示区域宽度（以像素为单位）。</p>\n     */\n    protected measureWidth(): number {\n        var max: number = 0;\n        this.commitMeasure();\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * <p>立即执行影响宽高度量的延迟调用函数。</p>\n     * <p>使用 <code>runCallLater</code> 函数，立即执行影响宽高度量的延迟运行函数(使用 <code>callLater</code> 设置延迟执行函数)。</p>\n     * @see #callLater()\n     * @see #runCallLater()\n     */\n    protected commitMeasure(): void {\n    }\n\n    /**\n     * @override\n     */\n    get_height(): number {\n        if (this._isHeightSet) return this._height;\n        return this.measureHeight();\n    }\n\n    /**\n     * <p>显示对象的实际显示区域高度（以像素为单位）。</p>\n     */\n    protected measureHeight(): number {\n        var max: number = 0;\n        this.commitMeasure();\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * @implements\n     * <p>数据赋值，通过对UI赋值来控制UI显示逻辑。</p>\n     * <p>简单赋值会更改组件的默认属性，使用大括号可以指定组件的任意属性进行赋值。</p>\n     * @example\n       //默认属性赋值\n       dataSource = {label1: \"改变了label\", checkbox1: true};//(更改了label1的text属性值，更改checkbox1的selected属性)。\n       //任意属性赋值\n       dataSource = {label2: {text:\"改变了label\",size:14}, checkbox2: {selected:true,x:10}};\n     */\n    get dataSource(): any {\n        return this.get_dataSource();\n    }\n\n    get_dataSource(): any {\n        return this._dataSource;\n    }\n\n    set dataSource(value: any) {\n        this.set_dataSource(value);\n    }\n\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        for (var prop in this._dataSource) {\n            if (prop in this && !(typeof ((this as any)[prop]) == 'function')) {\n                (this as any)[prop] = this._dataSource[prop];\n            }\n        }\n    }\n\n    /**\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\n     */\n    get top(): number {\n        return this.get_top();\n    }\n\n    get_top(): number {\n        return this._widget.top;\n    }\n\n    set top(value: number) {\n        this.set_top(value);\n    }\n\n    set_top(value: number) {\n        if (value != this._widget.top) {\n            this._getWidget().top = value;\n        }\n    }\n\n    /**\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\n     */\n    get bottom(): number {\n        return this.get_bottom();\n    }\n\n    get_bottom(): number {\n        return this._widget.bottom;\n    }\n\n    set bottom(value: number) {\n        this.set_bottom(value);\n    }\n\n    set_bottom(value: number) {\n        if (value != this._widget.bottom) {\n            this._getWidget().bottom = value;\n        }\n    }\n\n    /**\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\n     */\n    get left(): number {\n        return this._widget.left;\n    }\n\n    set left(value: number) {\n        if (value != this._widget.left) {\n            this._getWidget().left = value;\n        }\n    }\n\n    /**\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\n     */\n    get right(): number {\n        return this._widget.right;\n    }\n\n    set right(value: number) {\n        if (value != this._widget.right) {\n            this._getWidget().right = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerX(): number {\n        return this._widget.centerX;\n    }\n\n    set centerX(value: number) {\n        if (value != this._widget.centerX) {\n            this._getWidget().centerX = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerY(): number {\n        return this._widget.centerY;\n    }\n\n    set centerY(value: number) {\n        if (value != this._widget.centerY) {\n            this._getWidget().centerY = value;\n        }\n    }\n\n    protected _shouldRefreshLayout(): void {\n        super._shouldRefreshLayout();\n        this.callLater(this._sizeChanged);\n    }\n\n    protected _sizeChanged(): void {\n        this.event(Event.RESIZE);\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\n    }\n\n    /**\n     * <p>鼠标悬停提示。</p>\n     * <p>可以赋值为文本 <code>String</code> 或函数 <code>Handler</code> ，用来实现自定义样式的鼠标提示和参数携带等。</p>\n     * @example\n     * private var _testTips:TestTipsUI = new TestTipsUI();\n     * private function testTips():void {\n       //简单鼠标提示\n     * btn2.toolTip = \"这里是鼠标提示&lt;b&gt;粗体&lt;/b&gt;&lt;br&gt;换行\";\n       //自定义的鼠标提示\n     * btn1.toolTip = showTips1;\n       //带参数的自定义鼠标提示\n     * clip.toolTip = new Handler(this,showTips2, [\"clip\"]);\n     * }\n     * private function showTips1():void {\n     * _testTips.label.text = \"这里是按钮[\" + btn1.label + \"]\";\n     * tip.addChild(_testTips);\n     * }\n     * private function showTips2(name:String):void {\n     * _testTips.label.text = \"这里是\" + name;\n     * tip.addChild(_testTips);\n     * }\n     */\n    get toolTip(): any {\n        return this._toolTip;\n    }\n\n    set toolTip(value: any) {\n        if (this._toolTip != value) {\n            this._toolTip = value;\n            if (value != null) {\n                this.on(Event.MOUSE_OVER, this, this.onMouseOver);\n                this.on(Event.MOUSE_OUT, this, this.onMouseOut);\n            } else {\n                this.off(Event.MOUSE_OVER, this, this.onMouseOver);\n                this.off(Event.MOUSE_OUT, this, this.onMouseOut);\n            }\n        }\n    }\n\n    /**\n     * 对象的 <code>Event.MOUSE_OVER</code> 事件侦听处理函数。\n     */\n    private onMouseOver(e: Event): void {\n        ILaya.stage.event(UIEvent.SHOW_TIP, this._toolTip);\n    }\n\n    /**\n     * 对象的 <code>Event.MOUSE_OUT</code> 事件侦听处理函数。\n     */\n    private onMouseOut(e: Event): void {\n        ILaya.stage.event(UIEvent.HIDE_TIP, this._toolTip);\n    }\n\n    /** 是否变灰。*/\n    get gray(): boolean {\n        return this._gray;\n    }\n\n    set gray(value: boolean) {\n        if (value !== this._gray) {\n            this._gray = value;\n            UIUtils.gray(this, value);\n        }\n    }\n\n    /** 是否禁用页面，设置为true后，会变灰并且禁用鼠标。*/\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        if (value !== this._disabled) {\n            this.gray = this._disabled = value;\n            this.mouseEnabled = !value;\n        }\n    }\n\n    /**\n     * @private\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\n     */\n    private _getWidget(): Widget {\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\n        return this._widget;\n    }\n\n    /**@private */\n    protected onCompResize(): void {\n        this._sizeChanged();\n\n    }\n\n    /**\n     * \n     * @param child \n     * @override\n     */\n    protected _childChanged(child: Node = null): void {\n        this.callLater(this._sizeChanged);\n        super._childChanged(child);\n    }\n\n    /**\n     * 重新排版\n     */\n    freshLayout() {\n        if (this._widget != Widget.EMPTY) {\n            this._widget.resetLayout();\n        }\n    }\n}\n","import { UIComponent } from \"./UIComponent\";\n\n/**\n * <code>Box</code> 类是一个控件容器类。\n */\nexport class Box extends UIComponent {\n    private _bgColor: string;\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        for (let name in value) {\n            let comp = (<UIComponent>this.getChildByName(name));\n            if (comp)\n                comp.dataSource = value[name];\n            else if (name in this && !((this as any)[name] instanceof Function))\n                (this as any)[name] = value[name];\n        }\n    }\n\n    /**背景颜色*/\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        this.graphics.clear();\n        this.graphics.drawRect(0, 0, 1, 1, this._bgColor, null, null, true);\n    }\n}","\n/**\n * <code>Styles</code> 定义了组件常用的样式属性。\n */\nexport class Styles {\n\n    /**\n     * 默认九宫格信息。\n     * @see laya.ui.AutoBitmap#sizeGrid\n     */\n    static defaultSizeGrid: any[] = [4, 4, 4, 4, 0];\n\n    //-----------------Label-----------------\n    /**\n     * 标签颜色。\n     */\n    static labelColor: string = \"#000000\";\n    /**\n     * 标签的边距。\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\n     */\n    static labelPadding: any[] = [2, 2, 2, 2];\n\n    /**\n     * 标签的边距。\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\n     */\n    static inputLabelPadding: any[] = [1, 1, 1, 3];\n\n    //-----------------Button-----------------\n    /**\n     * 按钮皮肤的状态数，支持1,2,3三种状态值。\n     */\n    static buttonStateNum: number = 3;\n    /**\n     * 按钮标签颜色。\n     * <p><b>格式：</b>[upColor,overColor,downColor]。</p>\n     */\n    static buttonLabelColors: any[] = [\"#32556b\", \"#32cc6b\", \"#ff0000\"];\n\n    //-----------------ComboBox-----------------\n    /**\n     * 下拉框项颜色。\n     * <p><b>格式：</b>[overBgColor,overLabelColor,outLabelColor,borderColor,bgColor]。</p>\n     */\n    static comboBoxItemColors: any[] = [\"#5e95b6\", \"#ffffff\", \"#000000\", \"#8fa4b1\", \"#ffffff\"];\n\n    //-----------------ScrollBar-----------------\n    /**\n     * 滚动条的最小值。\n     */\n    static scrollBarMinNum: number = 15;\n    /**\n     * 长按按钮，等待时间，使其可激活连续滚动。\n     */\n    static scrollBarDelayTime: number = 500;\n}\n\nexport enum ScrollType {\n    None,\n    Horizontal,\n    Vertical,\n    Both\n}","import { UIComponent } from \"./UIComponent\";\nimport { ISelect } from \"./ISelect\";\nimport { Styles } from \"./Styles\";\nimport { NodeFlags, HideFlags } from \"../Const\"\nimport { Text } from \"../display/Text\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\nimport { AutoBitmap } from \"./AutoBitmap\"\nimport { UIUtils } from \"./UIUtils\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Button</code> 组件用来表示常用的多态按钮。 <code>Button</code> 组件可显示文本标签、图标或同时显示两者。\t *\n * <p>可以是单态，两态和三态，默认三态(up,over,down)。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>Button</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Button;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class Button_Example\n *\t\t{\n *\t\t\tpublic function Button_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\n *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\n *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onClickButton(button:Button):void\n *\t\t\t{\n *\t\t\t\ttrace(\"按钮button被点击了！\");\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete()\n * {\n *     console.log(\"资源加载完成！\");\n *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\n *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理函数。\n *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n * }\n * function onClickButton(button)\n * {\n *     console.log(\"按钮被点击了。\",button);\n * }\n * @example\n * import Button=laya.ui.Button;\n * import Handler=laya.utils.Handler;\n * class Button_Example{\n *     constructor()\n *     {\n *         Laya.init(640, 800);\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/button.png\", laya.utils.Handler.create(this,this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete()\n *     {\n *         var button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\n *         button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *         button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *         button.clickHandler = new Handler(this, this.onClickButton,[button]);//设置 button 的点击事件处理器。\n *         Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n *     }\n *     private onClickButton(button:Button):void\n *     {\n *         console.log(\"按钮button被点击了！\")\n *     }\n * }\n */\nexport class Button extends UIComponent implements ISelect {\n    /**\n     * 指定按钮按下时是否是切换按钮的显示状态。\n     *\n     * @example 以下示例代码，创建了一个 <code>Button</code> 实例，并设置为切换按钮。\n     * @example\n     * package\n     *\t{\n     *\t\timport laya.ui.Button;\n     *\t\timport laya.utils.Handler;\n     *\t\tpublic class Button_toggle\n     *\t\t{\n     *\t\t\tpublic function Button_toggle()\n     *\t\t\t{\n     *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n     *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n     *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));\n     *\t\t\t}\n     *\t\t\tprivate function onLoadComplete():void\n     *\t\t\t{\n     *\t\t\t\ttrace(\"资源加载完成！\");\n     *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 实例对象 button ,传入它的皮肤skin和标签label。\n     *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n     *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n     *\t\t\t\tbutton.toggle = true;//设置 button 对象为切换按钮。\n     *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\n     *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\n     *\t \t\t}\n     *\t\t\tprivate function onClickButton(button:Button):void\n     *\t\t\t{\n     *\t\t\t\ttrace(\"button.selected = \"+ button.selected);\n     *\t\t\t}\n     *\t\t}\n     *\t}\n     * @example\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n     * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n     * function loadComplete()\n     * {\n     *     console.log(\"资源加载完成！\");\n     *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\n     *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n     *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n     *     button.toggle = true;//设置 button 对象为切换按钮。\n     *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理器。\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n     * }\n     * function onClickButton(button)\n     * {\n     *     console.log(\"button.selected = \",button.selected);\n     * }\n     * @example\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n     * Laya.loader.load(\"button.png\", null,null, null, null, null);//加载资源\n     * function loadComplete() {\n     *     console.log(\"资源加载完成！\");\n     *     var button:laya.ui.Button = new laya.ui.Button(\"button.png\", \"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\n     *     button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n     *     button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n     *     button.toggle = true;//设置 button 对象为切换按钮。\n     *     button.clickHandler = laya.utils.Handler.create(this, onClickButton, [button], false);//设置 button 的点击事件处理器。\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n     * }\n     * function onClickButton(button) {\n     *     console.log(\"button.selected = \", button.selected);\n     * }\n     */\n    toggle: boolean;\n    /**\n     * @private\n     * 按钮上的文本。\n     */\n    protected _text: Text;\n    /**\n     * @private\n     * 按钮文本标签的颜色值。\n     */\n    protected _labelColors: string[];\n    /**\n     * @private\n     * 按钮文本标签描边的颜色值。\n     */\n    protected _strokeColors: string[];\n    /**\n     * @private\n     * 按钮的状态值。\n     */\n    protected _state: number = 0;\n    /**\n     * @private\n     * 表示按钮的选中状态。\n     */\n    protected _selected: boolean;\n\n    protected _skin: string;\n\n    /**\n     * @private\n     * 指定此显示对象是否自动计算并改变大小等属性。\n     */\n    protected _autoSize: boolean = true;\n    /**\n     * @private\n     * 按钮的状态数。\n     */\n    protected _stateNum: number;\n    /**\n     * @private\n     * 按钮的点击事件函数。\n     */\n    protected _clickHandler: Handler;\n    /**\n     * @private\n     */\n    protected _stateChanged: boolean = false;\n\n    declare _graphics: AutoBitmap;\n\n    /**\n     * 创建一个新的 <code>Button</code> 类实例。\n     * @param skin 皮肤资源地址。\n     * @param label 按钮的文本内容。\n     */\n    constructor(skin: string = null, label: string = \"\") {\n        super();\n        this._labelColors = Styles.buttonLabelColors;\n        this._stateNum = Styles.buttonStateNum;\n\n        if (skin)\n            this.skin = skin;\n        this.label = label;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._text && this._text.destroy(destroyChild);\n        this._text = null;\n        this._clickHandler = null;\n        this._labelColors = this._strokeColors = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this.graphics = new AutoBitmap();\n    }\n\n    /**@private */\n    protected createText(): void {\n        if (!this._text) {\n            this._text = new Text();\n            this._text.overflow = Text.HIDDEN;\n            this._text.align = \"center\";\n            this._text.valign = \"middle\";\n            this._text.width = this._width;\n            this._text.height = this._height;\n            this._text.hideFlags = HideFlags.HideAndDontSave;\n        }\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    protected initialize(): void {\n        if (this._mouseState !== 1) {\n            this.mouseEnabled = true;\n            this._setBit(NodeFlags.HAS_MOUSE, true);\n        }\n        this.on(Event.MOUSE_OVER, this, this.onMouse);\n        this.on(Event.MOUSE_OUT, this, this.onMouse);\n        this.on(Event.MOUSE_DOWN, this, this.onMouse);\n        this.on(Event.MOUSE_UP, this, this.onMouse);\n        this.on(Event.CLICK, this, this.onMouse);\n    }\n\n    /**\n     * 对象的 <code>Event.MOUSE_OVER、Event.MOUSE_OUT、Event.MOUSE_DOWN、Event.MOUSE_UP、Event.CLICK</code> 事件侦听处理函数。\n     * @param e Event 对象。\n     */\n    protected onMouse(e: Event): void {\n        if (this.toggle === false && this._selected) return;\n        let type = e ? e.type : Event.CLICK;\n        if (type === Event.CLICK) {\n            this.toggle && (this.selected = !this._selected);\n            this._clickHandler && this._clickHandler.run();\n            return;\n        }\n        !this._selected && (this.state = stateMap[type]);\n    }\n\n    /**\n     * <p>对象的皮肤资源地址。</p>\n     * 支持单态，两态和三态，用 <code>stateNum</code> 属性设置\n     * <p>对象的皮肤地址，以字符串表示。</p>\n     * @see #stateNum\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            let tex = Loader.getRes(url);\n            if (!tex)\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\n            else {\n                this._skinLoaded(tex);\n                return Promise.resolve();\n            }\n        }\n        else {\n            this._skinLoaded(null);\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(tex: any): void {\n        this._graphics.source = tex;\n        this.callLater(this.changeClips);\n        this._setStateChanged();\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * <p>指定对象的状态值，以数字表示。</p>\n     * <p>默认值为3。此值决定皮肤资源图片的切割方式。</p>\n     * <p><b>取值：</b>\n     * <li>1：单态。图片不做切割，按钮的皮肤状态只有一种。</li>\n     * <li>2：两态。图片将以竖直方向被等比切割为2部分，从上向下，依次为\n     * 弹起状态皮肤、\n     * 按下和经过及选中状态皮肤。</li>\n     * <li>3：三态。图片将以竖直方向被等比切割为3部分，从上向下，依次为\n     * 弹起状态皮肤、\n     * 经过状态皮肤、\n     * 按下和选中状态皮肤</li>\n     * </p>\n     */\n    get stateNum(): number {\n        return this._stateNum;\n    }\n\n    set stateNum(value: number) {\n        if (typeof (value as any) == 'string') {\n            value = parseInt(value as any);\n        }\n        if (this._stateNum != value) {\n            this._stateNum = value < 1 ? 1 : value > 3 ? 3 : value;\n            this._graphics.setState(this._state, this._stateNum);\n            if (this._skin) {\n                this.callLater(this.changeClips);\n                this._setStateChanged();\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 对象的资源切片发生改变。\n     */\n    protected changeClips(): void {\n        let width: number = 0, height: number = 0;\n\n        let img: Texture = Loader.getRes(this._skin);\n        if (!img) {\n            console.log(`lose skin ${this._skin}`);\n            return;\n        }\n\n        width = img.sourceWidth;\n        height = img.sourceHeight / (img._stateNum || this._stateNum);\n\n        if (this._autoSize) {\n            this._graphics.width = this._isWidthSet ? this._width : width;\n            this._graphics.height = this._isHeightSet ? this._height : height;\n            if (this._text) {\n                this._text.width = this._graphics.width;\n                this._text.height = this._graphics.height;\n            }\n        } else {\n            if (this._text) {\n                this._text.x = width;\n                this._text.height = height;\n            }\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureWidth(): number {\n        if (this._skin)\n            this.runCallLater(this.changeClips);\n        if (this._autoSize) return this._graphics.width;\n        this.runCallLater(this.changeState);\n        return this._graphics.width + (this._text ? this._text.width : 0);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureHeight(): number {\n        if (this._skin)\n            this.runCallLater(this.changeClips);\n        return this._text ? Math.max(this._graphics.height, this._text.height) : this._graphics.height;\n    }\n\n    /**\n     * 按钮的文本内容。\n     */\n    get label(): string {\n        return this._text ? this._text.text : null;\n    }\n\n    set label(value: string) {\n        if (!this._text && !value) return;\n        this.createText();\n        if (this._text.text != value) {\n            value && !this._text.parent && this.addChild(this._text);\n            this._text.text = (value + \"\").replace(/\\\\n/g, \"\\n\");\n            this._setStateChanged();\n        }\n    }\n\n    /**\n     * 表示按钮的选中状态。\n     * <p>如果值为true，表示该对象处于选中状态。否则该对象处于未选中状态。</p>\n     * @implements\n     */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        if (this._selected != value) {\n            this._selected = value;\n            this.state = this._selected ? 2 : 0;\n            this.event(Event.CHANGE);\n        }\n    }\n\n    /**\n     * 对象的状态值。\n     * @see #stateMap\n     */\n    protected get state(): number {\n        return this._state;\n    }\n\n    protected set state(value: number) {\n        if (this._state != value) {\n            this._state = value;\n            this._setStateChanged();\n        }\n    }\n\n    /**\n     * @private\n     * 改变对象的状态。\n     */\n    protected changeState(): void {\n        this._stateChanged = false;\n        if (this._skin)\n            this.runCallLater(this.changeClips);\n        let index = Math.max(this._state, 0);\n        this._graphics.setState(index, this._stateNum);\n        if (this.label) {\n            this._text.color = this._labelColors[index];\n            if (this._strokeColors) this._text.strokeColor = this._strokeColors[index];\n        }\n    }\n\n    /**\n     * 表示按钮各个状态下的文本颜色。\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\n     */\n    get labelColors(): string {\n        return this._labelColors.join(\",\");\n    }\n\n    set labelColors(value: string) {\n        this._labelColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\n        this._setStateChanged();\n    }\n\n    /**\n     * 表示按钮各个状态下的描边颜色。\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\n     */\n    get strokeColors(): string {\n        return this._strokeColors ? this._strokeColors.join(\",\") : \"\";\n    }\n\n    set strokeColors(value: string) {\n        this._strokeColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\n        this._setStateChanged();\n    }\n\n    /**\n     * 表示按钮文本标签的边距。\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\n     */\n    get labelPadding(): string {\n        this.createText();\n        return this._text.padding.join(\",\");\n    }\n\n    set labelPadding(value: string) {\n        this.createText();\n        this._text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\n    }\n\n    /**\n     * 表示按钮文本标签的字体大小。\n     * @see laya.display.Text.fontSize()\n     */\n    get labelSize(): number {\n        this.createText();\n        return this._text.fontSize;\n    }\n\n    set labelSize(value: number) {\n        this.createText();\n        this._text.fontSize = value\n    }\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * 默认值0，表示不描边。\n     * @see laya.display.Text.stroke()\n     */\n    get labelStroke(): number {\n        this.createText();\n        return this._text.stroke;\n    }\n\n    set labelStroke(value: number) {\n        this.createText();\n        this._text.stroke = value\n    }\n\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * 默认值为 \"#000000\"（黑色）;\n     * @see laya.display.Text.strokeColor()\n     */\n    get labelStrokeColor(): string {\n        this.createText();\n        return this._text.strokeColor;\n    }\n\n    set labelStrokeColor(value: string) {\n        this.createText();\n        this._text.strokeColor = value\n    }\n\n    /**\n     * 表示按钮文本标签是否为粗体字。\n     * @see laya.display.Text.bold()\n     */\n    get labelBold(): boolean {\n        this.createText();\n        return this._text.bold;\n    }\n\n    set labelBold(value: boolean) {\n        this.createText();\n        this._text.bold = value;\n    }\n\n    /**\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\n     */\n    get labelFont(): string {\n        this.createText();\n        return this._text.font;\n    }\n\n    set labelFont(value: string) {\n        this.createText();\n        this._text.font = value;\n    }\n\n    /**\n     * 标签对齐模式，\n     */\n    get labelAlign(): string {\n        this.createText()\n        return this._text.align;\n    }\n\n    set labelAlign(value: string) {\n        this.createText()\n        this._text.align = value;\n    }\n\n    /**\n     * 标签垂直对齐模式，\n     */\n    get labelVAlign(): string {\n        this.createText()\n        return this._text.valign;\n    }\n\n    set labelVAlign(value: string) {\n        this.createText()\n        this._text.valign = value;\n    }\n\n    /**\n     * 对象的点击事件处理器函数（无默认参数）。\n     * @implements\n     */\n    get clickHandler(): Handler {\n        return this._clickHandler;\n    }\n\n    set clickHandler(value: Handler) {\n        this._clickHandler = value;\n    }\n\n    /**\n     * 按钮文本标签 <code>Text</code> 控件。\n     */\n    get text(): Text {\n        this.createText();\n        return this._text;\n    }\n\n    /**\n     * 兼容老IDE\n     * @private\n    */\n    set text(value: Text) {\n        if (typeof (value) == \"string\") {\n            this._text && (this._text.text = value);\n        }\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\n        return null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        if (this._autoSize) {\n            this._graphics.width = value;\n            this._text && (this._text.width = value);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        if (this._autoSize) {\n            this._graphics.height = value;\n            this._text && (this._text.height = value);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\n            this._dataSource = value;\n            this.label = value + \"\";\n        }\n        else\n            super.set_dataSource(value);\n    }\n\n    /**图标x,y偏移，格式：100,100*/\n    get iconOffset(): string {\n        return this._graphics._offset ? this._graphics._offset.join(\",\") : null;\n    }\n\n    set iconOffset(value: string) {\n        if (value)\n            this._graphics._offset = UIUtils.fillArray([1, 1], value, Number);\n        else\n            this._graphics._offset = [];\n    }\n\n    /**@private */\n    protected _setStateChanged(): void {\n        if (!this._stateChanged) {\n            this._stateChanged = true;\n            this.callLater(this.changeState);\n        }\n    }\n}\n\nconst stateMap: any = { \"mouseup\": 0, \"mouseover\": 1, \"mousedown\": 2, \"mouseout\": 0 };","import { Button } from \"./Button\"\n\n/**\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>CheckBox</code> 组件显示一个小方框，该方框内可以有选中标记。\n * <code>CheckBox</code> 组件还可以显示可选的文本标签，默认该标签位于 CheckBox 右侧。\n * <p><code>CheckBox</code> 使用 <code>dataSource</code>赋值时的的默认属性是：<code>selected</code>。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>CheckBox</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.CheckBox;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class CheckBox_Example\n *\t\t{\n *\t\t\tpublic function CheckBox_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n * \t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/check.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\n *\t\t\t\tcheckBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\n *\t\t\t\tcheckBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\n *\t\t\t\tcheckBox.clickHandler = new Handler(this, onClick, [checkBox]);//设置 checkBox 的点击事件处理器。\n *\t\t\t\tLaya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onClick(checkBox:CheckBox):void\n *\t\t\t{\n *\t\t\t\ttrace(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load(\"resource/ui/check.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete()\n * {\n *     console.log(\"资源加载完成！\");\n *     var checkBox:laya.ui.CheckBox= new laya.ui.CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的类的实例对象 checkBox ,传入它的皮肤skin和标签label。\n *     checkBox.x =100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\n *     checkBox.y =100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\n *     checkBox.clickHandler = new laya.utils.Handler(this,this.onClick,[checkBox],false);//设置 checkBox 的点击事件处理器。\n *     Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\n * }\n * function onClick(checkBox)\n * {\n *     console.log(\"checkBox.selected = \",checkBox.selected);\n * }\n * @example\n * import CheckBox= laya.ui.CheckBox;\n * import Handler=laya.utils.Handler;\n * class CheckBox_Example{\n *     constructor()\n *     {\n *         Laya.init(640, 800);\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/check.png\", Handler.create(this,this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete()\n *     {\n *         var checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\n *         checkBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\n *         checkBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\n *         checkBox.clickHandler = new Handler(this, this.onClick,[checkBox]);//设置 checkBox 的点击事件处理器。\n *         Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\n *     }\n *     private onClick(checkBox:CheckBox):void\n *     {\n *         console.log(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\n *     }\n * }\n */\nexport class CheckBox extends Button {\n\n    /**\n     * 创建一个新的 <code>CheckBox</code> 组件实例。\n     * @param skin 皮肤资源地址。\n     * @param label 文本标签的内容。\n     */\n    constructor(skin: string = null, label: string = \"\") {\n        super(skin, label);\n        this.toggle = true;\n        this._autoSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected preinitialize(): void {\n        super.preinitialize();\n        this.toggle = true;\n        this._autoSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected initialize(): void {\n        super.initialize();\n        this.createText();\n        this._text.align = \"left\";\n        this._text.valign = \"top\";\n        this._text.width = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (value instanceof Boolean)\n            this.selected = value as boolean;\n        else if (typeof (value) == 'string')\n            this.selected = value === \"true\";\n        else\n            super.set_dataSource(value);\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { AutoBitmap } from \"./AutoBitmap\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Styles } from \"./Styles\";\nimport { NodeFlags } from \"../Const\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 图片加载完成后调度。\n * @eventType Event.LOADED\n */\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\n/**\n * 当前帧发生变化后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Clip</code> 类是位图切片动画。</p>\n * <p> <code>Clip</code> 可将一张图片，按横向分割数量 <code>clipX</code> 、竖向分割数量 <code>clipY</code> ，\n * 或横向分割每个切片的宽度 <code>clipWidth</code> 、竖向分割每个切片的高度 <code>clipHeight</code> ，\n * 从左向右，从上到下，分割组合为一个切片动画。</p>\n * Image和Clip组件是唯一支持异步加载的两个组件，比如clip.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\n *\n * @example <caption>以下示例代码，创建了一个 <code>Clip</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Clip;\n *\t\tpublic class Clip_Example\n *\t\t{\n *\t\t\tprivate var clip:Clip;\n *\t\t\tpublic function Clip_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tonInit();\n *\t\t\t}\n *\t\t\tprivate function onInit():void\n *\t\t\t{\n *\t\t\t\tclip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\n *\t\t\t\tclip.autoPlay = true;//设置 clip 动画自动播放。\n *\t\t\t\tclip.interval = 100;//设置 clip 动画的播放时间间隔。\n *\t\t\t\tclip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\n *\t\t\t\tclip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\n *\t\t\t\tclip.on(Event.CLICK, this, onClick);//给 clip 添加点击事件函数侦听。\n *\t\t\t\tLaya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onClick():void\n *\t\t\t{\n *\t\t\t\ttrace(\"clip 的点击事件侦听处理函数。clip.total=\"+ clip.total);\n *\t\t\t\tif (clip.isPlaying == true)\n *\t\t\t\t{\n *\t\t\t\t\tclip.stop();//停止动画。\n *\t\t\t\t}else {\n *\t\t\t\t\tclip.play();//播放动画。\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var clip;\n * Laya.loader.load(\"resource/ui/clip_num.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete() {\n *     console.log(\"资源加载完成！\");\n *     clip = new laya.ui.Clip(\"resource/ui/clip_num.png\",10,1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\n *     clip.autoPlay = true;//设置 clip 动画自动播放。\n *     clip.interval = 100;//设置 clip 动画的播放时间间隔。\n *     clip.x =100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\n *     clip.y =100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\n *     clip.on(Event.CLICK,this,onClick);//给 clip 添加点击事件函数侦听。\n *     Laya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\n * }\n * function onClick()\n * {\n *     console.log(\"clip 的点击事件侦听处理函数。\");\n *     if(clip.isPlaying == true)\n *     {\n *         clip.stop();\n *     }else {\n *         clip.play();\n *     }\n * }\n * @example\n * import Clip = laya.ui.Clip;\n * import Handler = laya.utils.Handler;\n * class Clip_Example {\n *     private clip: Clip;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         this.clip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\n *         this.clip.autoPlay = true;//设置 clip 动画自动播放。\n *         this.clip.interval = 100;//设置 clip 动画的播放时间间隔。\n *         this.clip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\n *         this.clip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\n *         this.clip.on(laya.events.Event.CLICK, this, this.onClick);//给 clip 添加点击事件函数侦听。\n *         Laya.stage.addChild(this.clip);//将此 clip 对象添加到显示列表。\n *     }\n *     private onClick(): void {\n *         console.log(\"clip 的点击事件侦听处理函数。clip.total=\" + this.clip.total);\n *         if (this.clip.isPlaying == true) {\n *             this.clip.stop();//停止动画。\n *         } else {\n *             this.clip.play();//播放动画。\n *         }\n *     }\n * }\n *\n */\nexport class Clip extends UIComponent {\n    /**@private */\n    protected _sources: Texture[];\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _clipX: number = 1;\n    /**@private */\n    protected _clipY: number = 1;\n    /**@private */\n    protected _clipWidth: number = 0;\n    /**@private */\n    protected _clipHeight: number = 0;\n    /**@private */\n    protected _autoPlay: boolean;\n    /**@private */\n    protected _interval: number = 50;\n    /**@private */\n    protected _complete: Handler;\n    /**@private */\n    protected _isPlaying: boolean;\n    /**@private */\n    protected _index: number = 0;\n    /**@private */\n    protected _clipChanged: boolean;\n    /**@private */\n    protected _group: string;\n    /**@private */\n    protected _toIndex: number = -1;\n\n    declare _graphics: AutoBitmap;\n\n    /**\n     * 创建一个新的 <code>Clip</code> 示例。\n     * @param url 资源类库名或者地址\n     * @param clipX x方向分割个数\n     * @param clipY y方向分割个数\n     */\n    constructor(url: string = null, clipX: number = 1, clipY: number = 1) {\n        super();\n\n        this._sources = [];\n        this._clipX = clipX;\n        this._clipY = clipY;\n        this.skin = url;\n    }\n\n    /**\n     * @inheritDoc\n     * @override \n     */\n    protected createChildren(): void {\n        this.graphics = new AutoBitmap();\n    }\n\n    /**@private\t @override*/\n    protected _onDisplay(e?: boolean): void {\n        if (this._isPlaying) {\n            if (this._getBit(NodeFlags.DISPLAYED_INSTAGE)) this.play();\n            else this.stop();\n        } else if (this._autoPlay) {\n            this.play();\n        }\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            if (!Loader.getRes(url))\n                return ILaya.loader.load(url, Loader.IMAGE).then(() => this._skinLoaded());\n            else {\n                this._skinLoaded();\n                return Promise.resolve();\n            }\n        }\n        else {\n            this._graphics.source = null;\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        this._setClipChanged();\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**X轴（横向）切片数量。*/\n    get clipX(): number {\n        return this._clipX;\n    }\n\n    set clipX(value: number) {\n        this._clipX = value || 1;\n        this._setClipChanged()\n    }\n\n    /**Y轴(竖向)切片数量。*/\n    get clipY(): number {\n        return this._clipY;\n    }\n\n    set clipY(value: number) {\n        this._clipY = value || 1;\n        this._setClipChanged()\n    }\n\n    /**\n     * 横向分割时每个切片的宽度，与 <code>clipX</code> 同时设置时优先级高于 <code>clipX</code> 。\n     */\n    get clipWidth(): number {\n        return this._clipWidth;\n    }\n\n    set clipWidth(value: number) {\n        this._clipWidth = value;\n        this._setClipChanged()\n    }\n\n    /**\n     * 竖向分割时每个切片的高度，与 <code>clipY</code> 同时设置时优先级高于 <code>clipY</code> 。\n     */\n    get clipHeight(): number {\n        return this._clipHeight;\n    }\n\n    set clipHeight(value: number) {\n        this._clipHeight = value;\n        this._setClipChanged()\n    }\n\n    /**\n     * @private\n     * 改变切片的资源、切片的大小。\n     */\n    protected changeClip(): void {\n        this._clipChanged = false;\n        if (!this._skin || this._destroyed) return;\n\n        let url = this._skinBaseUrl ? URL.formatURL(this._skin, this._skinBaseUrl) : this._skin;\n\n        let img: any = Loader.getRes(url);\n        if (img) {\n            this.loadComplete(this._skin, img);\n        } else {\n            ILaya.loader.load(url, Handler.create(this, this.loadComplete, [this._skin]), null, Loader.IMAGE);\n        }\n    }\n\n    /**\n     * @private\n     * 加载切片图片资源完成函数。\n     * @param url 资源地址。\n     * @param img 纹理。\n     */\n    protected loadComplete(url: string, img: Texture): void {\n        if (url !== this._skin)\n            return;\n\n        this._sources.length = 0;\n        if (img) {\n            var w: number = this._clipWidth || Math.ceil(img.sourceWidth / this._clipX);\n            var h: number = this._clipHeight || Math.ceil(img.sourceHeight / this._clipY);\n\n            for (let i = 0; i < this._clipY; i++) {\n                for (let j = 0; j < this._clipX; j++) {\n                    this._sources.push(img.getCachedClip(w * j, h * i, w, h));\n                }\n            }\n        }\n\n        this.index = this._index;\n        this.event(Event.LOADED);\n        this.onCompResize();\n    }\n\n    /**\n     * 源数据。\n     */\n    get sources(): Texture[] {\n        return this._sources;\n    }\n\n    set sources(value: Texture[]) {\n        this._sources = value;\n        this.index = this._index;\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * 资源分组。\n     */\n    get group(): string {\n        return this._group;\n    }\n\n    set group(value: string) {\n        if (value && this._skin) Loader.setGroup(this._skin, value);\n        this._group = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._graphics.width = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._graphics.height = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureWidth(): number {\n        this.runCallLater(this.changeClip);\n        return this._graphics.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureHeight(): number {\n        this.runCallLater(this.changeClip);\n        return this._graphics.height;\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\n        return null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * 当前帧索引。\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    set index(value: number) {\n        this._index = value;\n        this._graphics && (this._graphics.source = this._sources[value]);\n        this.event(Event.CHANGE);\n    }\n\n    /**\n     * 切片动画的总帧数。\n     */\n    get total(): number {\n        this.runCallLater(this.changeClip);\n        return this._sources.length;\n    }\n\n    /**\n     * 表示是否自动播放动画，若自动播放值为true,否则值为false;\n     * <p>可控制切片动画的播放、停止。</p>\n     */\n    get autoPlay(): boolean {\n        return this._autoPlay;\n    }\n\n    set autoPlay(value: boolean) {\n        if (this._autoPlay != value) {\n            this._autoPlay = value;\n            value ? this.play() : this.stop();\n        }\n    }\n\n    /**\n     * 表示动画播放间隔时间(以毫秒为单位)。\n     */\n    get interval(): number {\n        return this._interval;\n    }\n\n    set interval(value: number) {\n        if (this._interval != value) {\n            this._interval = value;\n            if (this._isPlaying) this.play();\n        }\n    }\n\n    /**\n     * 表示动画的当前播放状态。\n     * 如果动画正在播放中，则为true，否则为flash。\n     */\n    get isPlaying(): boolean {\n        return this._isPlaying;\n    }\n\n    set isPlaying(value: boolean) {\n        this._isPlaying = value;\n    }\n\n    /**\n     * 播放动画。\n     * @param\tfrom\t开始索引\n     * @param\tto\t\t结束索引，-1为不限制\n     */\n    play(from: number = 0, to: number = -1): void {\n        this._setClipChanged();\n        this._isPlaying = true;\n        this.index = from;\n        this._toIndex = to;\n        // this._index++;\n        //修复clip重复播放丢失帧的问题\n        ILaya.timer.loop(this.interval, this, this._loop);\n\n        this.on(Event.DISPLAY, this, this._onDisplay);\n        this.on(Event.UNDISPLAY, this, this._onDisplay);\n    }\n\n    /**\n     * @private\n     */\n    protected _loop(): void {\n        if (this._visible) {\n            this._index++;\n            if (this._toIndex > -1 && this._index >= this._toIndex)\n                this.stop();\n            else if (this._index >= this._sources.length)\n                this._index = 0;\n            this.index = this._index;\n        }\n    }\n\n    /**\n     * 停止动画。\n     */\n    stop(): void {\n        this._isPlaying = false;\n        ILaya.timer.clear(this, this._loop);\n        this.event(Event.COMPLETE);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.index = parseInt(value as string);\n        else\n            super.set_dataSource(value);\n    }\n\n    /**@private */\n    protected _setClipChanged(): void {\n        if (!this._clipChanged) {\n            this._clipChanged = true;\n            this.callLater(this.changeClip);\n        }\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Graphics } from \"../display/Graphics\"\nimport { Input } from \"../display/Input\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\n\n/**\n * 选择项改变后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ColorPicker</code> 组件将显示包含多个颜色样本的列表，用户可以从中选择颜色。\n *\n * @example <caption>以下示例代码，创建了一个 <code>ColorPicker</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.ColorPicker;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class ColorPicker_Example\n *\t\t{\n *\t\t\tpublic function ColorPicker_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/color.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar colorPicket:ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\n *\t\t\t\tcolorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\n *\t\t\t\tcolorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\n *\t\t\t\tcolorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\n *\t\t\t\tcolorPicket.changeHandler = new Handler(this, onChangeColor,[colorPicket]);//设置 colorPicket 的颜色改变回调函数。\n *\t\t\t\tLaya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChangeColor(colorPicket:ColorPicker):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的颜色： \" + colorPicket.selectedColor);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load(\"resource/ui/color.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete()\n * {\n *     console.log(\"资源加载完成！\");\n *     var colorPicket = new laya.ui.ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\n *     colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\n *     colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\n *     colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\n *     colorPicket.changeHandler = laya.utils.Handler.create(this, onChangeColor,[colorPicket],false);//设置 colorPicket 的颜色改变回调函数。\n *     Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\n * }\n * function onChangeColor(colorPicket)\n * {\n *     console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\n * }\n * @example\n * import ColorPicker = laya.ui.ColorPicker;\n * import Handler = laya.utils.Handler;\n * class ColorPicker_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/color.png\", Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         console.log(\"资源加载完成！\");\n *         var colorPicket: ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\n *         colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\n *         colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\n *         colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\n *         colorPicket.changeHandler = new Handler(this, this.onChangeColor, [colorPicket]);//设置 colorPicket 的颜色改变回调函数。\n *         Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\n *     }\n *     private onChangeColor(colorPicket: ColorPicker): void {\n *         console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\n *     }\n * }\n */\nexport class ColorPicker extends UIComponent {\n\n    /**\n     * 当颜色发生改变时执行的函数处理器。\n     * 默认返回参数color：颜色值字符串。\n     */\n    changeHandler: Handler;\n\n    /**\n     * @private\n     * 指定每个正方形的颜色小格子的宽高（以像素为单位）。\n     */\n    protected _gridSize: number = 11;\n    /**\n     * @private\n     * 表示颜色样本列表面板的背景颜色值。\n     */\n    protected _bgColor: string = \"#ffffff\";\n    /**\n     * @private\n     * 表示颜色样本列表面板的边框颜色值。\n     */\n    protected _borderColor: string = \"#000000\";\n    /**\n     * @private\n     * 表示颜色样本列表面板选择或输入的颜色值。\n     */\n    protected _inputColor: string = \"#000000\";\n    /**\n     * @private\n     * 表示颜色输入框的背景颜色值。\n     */\n    protected _inputBgColor: string = \"#efefef\";\n    /**\n     * @private\n     * 表示颜色样本列表面板。\n     */\n    protected _colorPanel: Box;\n    /**\n     * @private\n     * 表示颜色网格。\n     */\n    protected _colorTiles: Sprite;\n    /**\n     * @private\n     * 表示颜色块显示对象。\n     */\n    protected _colorBlock: Sprite;\n    /**\n     * @private\n     * 表示颜色输入框控件 <code>Input</code> 。\n     */\n    protected _colorInput: Input;\n    /**\n     * @private\n     * 表示点击后显示颜色样本列表面板的按钮控件 <code>Button</code> 。\n     */\n    protected _colorButton: Button;\n    /**\n     * @private\n     * 表示颜色值列表。\n     */\n    protected _colors: any[] = [];\n    /**\n     * @private\n     * 表示选择的颜色值。\n     */\n    protected _selectedColor: string = \"#000000\";\n    /** @private */\n    protected _panelChanged: boolean;\n\n    constructor(createChildren = true) {\n        super(false);\n        if (createChildren) {\n            this.preinitialize();\n            this.createChildren();\n            this.initialize();\n        }\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\n        super.destroy(destroyChild);\n        this._colorPanel && this._colorPanel.destroy(destroyChild);\n        this._colorButton && this._colorButton.destroy(destroyChild);\n        this._colorPanel = null;\n        this._colorTiles = null;\n        this._colorBlock = null;\n        this._colorInput = null;\n        this._colorButton = null;\n        this._colors = null;\n        this.changeHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this._colorButton = new Button()\n        this._colorButton.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._colorButton);\n        this._colorPanel = new Box();\n        this._colorPanel.hideFlags = HideFlags.HideAndDontSave;\n        this._colorPanel.size(230, 166);\n        this._colorPanel.addChild(this._colorTiles = new Sprite());\n        this._colorPanel.addChild(this._colorBlock = new Sprite());\n        this._colorPanel.addChild(this._colorInput = new Input());\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected initialize(): void {\n        this._colorButton.on(Event.CLICK, this, this.onColorButtonClick);\n\n        this._colorBlock.pos(5, 5);\n\n        this._colorInput.pos(60, 5);\n        this._colorInput.size(60, 20);\n        this._colorInput.on(Event.CHANGE, this, this.onColorInputChange);\n        this._colorInput.on(Event.KEY_DOWN, this, this.onColorFieldKeyDown);\n\n        this._colorTiles.pos(5, 30);\n        this._colorTiles.on(Event.MOUSE_MOVE, this, this.onColorTilesMouseMove);\n        this._colorTiles.on(Event.CLICK, this, this.onColorTilesClick);\n        this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize);\n\n        this._colorPanel.on(Event.MOUSE_DOWN, this, this.onPanelMouseDown);\n\n        this.bgColor = this._bgColor;\n    }\n\n    private onPanelMouseDown(e: Event): void {\n        e.stopPropagation();\n    }\n\n    /**\n     * 改变颜色样本列表面板。\n     */\n    protected changePanel(): void {\n        this._panelChanged = false;\n        var g: Graphics = this._colorPanel.graphics;\n        g.clear(true);\n        //g.drawRect(0, 0, 230, 166, _bgColor);\n        g.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor);\n\n        this.drawBlock(this._selectedColor);\n\n        this._colorInput.borderColor = this._borderColor;\n        this._colorInput.bgColor = this._inputBgColor;\n        this._colorInput.color = this._inputColor;\n\n        g = this._colorTiles.graphics;\n        g.clear(true);\n\n        var mainColors: any[] = [0x000000, 0x333333, 0x666666, 0x999999, 0xCCCCCC, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0x00FFFF, 0xFF00FF];\n        for (var i: number = 0; i < 12; i++) {\n            for (var j: number = 0; j < 20; j++) {\n                var color: number;\n                if (j === 0) color = mainColors[i];\n                else if (j === 1) color = 0x000000;\n                else color = (((i * 3 + j / 6) % 3 << 0) + ((i / 6) << 0) * 3) * 0x33 << 16 | j % 6 * 0x33 << 8 | (i << 0) % 6 * 0x33;\n\n                var strColor: string = UIUtils.toColor(color);\n                this._colors.push(strColor);\n\n                var x: number = j * this._gridSize;\n                var y: number = i * this._gridSize;\n\n                g.drawRect(x, y, this._gridSize, this._gridSize, strColor, \"#000000\");\n                //g.drawRect(x + 1, y + 1, _gridSize - 1, _gridSize - 1, strColor);\n            }\n        }\n    }\n\n    /**\n     * 颜色样本列表面板的显示按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    private onColorButtonClick(e: Event): void {\n        if (this._colorPanel.parent) this.close();\n        else this.open();\n    }\n\n    /**\n     * 打开颜色样本列表面板。\n     */\n    open(): void {\n        let stage = ILaya.stage;\n        var p: Point = this.localToGlobal(new Point());\n        var px: number = p.x + this._colorPanel.width <= stage.width ? p.x : stage.width - this._colorPanel.width;\n        var py: number = p.y + this._colorButton.height;\n        py = py + this._colorPanel.height <= stage.height ? py : p.y - this._colorPanel.height;\n        this._colorPanel.pos(px, py);\n        this._colorPanel.zOrder = 1001;\n        stage.addChild(this._colorPanel);\n        stage.on(Event.MOUSE_DOWN, this, this.removeColorBox);\n    }\n\n    /**\n     * 关闭颜色样本列表面板。\n     */\n    close(): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\n        this._colorPanel.removeSelf();\n    }\n\n    /**\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    private removeColorBox(e: Event = null): void {\n        this.close();\n        //var target:Sprite = e.target as Sprite;\n        //if (!_colorButton.contains(target) && !_colorPanel.contains(target)) {\n        //close();\n        //}\n    }\n\n    /**\n     * 小格子色块的 <code>Event.KEY_DOWN</code> 事件侦听处理函数。\n     */\n    private onColorFieldKeyDown(e: Event): void {\n        if (e.keyCode == 13) {\n            if (this._colorInput.text) this.selectedColor = this._colorInput.text;\n            else this.selectedColor = null;\n            this.close();\n            e.stopPropagation();\n        }\n    }\n\n    /**\n     * 颜色值输入框 <code>Event.CHANGE</code> 事件侦听处理函数。\n     */\n    private onColorInputChange(e: Event = null): void {\n        if (this._colorInput.text) this.drawBlock(this._colorInput.text);\n        else this.drawBlock(\"#FFFFFF\");\n    }\n\n    /**\n     * 小格子色块的 <code>Event.CLICK</code> 事件侦听处理函数。\n     */\n    private onColorTilesClick(e: Event): void {\n        this.selectedColor = this.getColorByMouse();\n        this.close();\n    }\n\n    /**\n     * @private\n     * 小格子色块的 <code>Event.MOUSE_MOVE</code> 事件侦听处理函数。\n     */\n    private onColorTilesMouseMove(e: Event): void {\n        this._colorInput.focus = false;\n        var color: string = this.getColorByMouse();\n        this._colorInput.text = color;\n        this.drawBlock(color);\n    }\n\n    /**\n     * 通过鼠标位置取对应的颜色块的颜色值。\n     */\n    protected getColorByMouse(): string {\n        var point: Point = this._colorTiles.getMousePoint();\n        var x: number = Math.floor(point.x / this._gridSize);\n        var y: number = Math.floor(point.y / this._gridSize);\n        return this._colors[y * 20 + x];\n    }\n\n    /**\n     * 绘制颜色块。\n     * @param color 需要绘制的颜色块的颜色值。\n     */\n    private drawBlock(color: string): void {\n        var g: Graphics = this._colorBlock.graphics;\n        g.clear(true);\n        var showColor: string = color ? color : \"#ffffff\";\n        g.drawRect(0, 0, 50, 20, showColor, this._borderColor);\n\n        color || g.drawLine(0, 0, 50, 20, \"#ff0000\");\n    }\n\n    /**\n     * 表示选择的颜色值。\n     */\n    get selectedColor(): string {\n        return this._selectedColor;\n    }\n\n    set selectedColor(value: string) {\n        if (this._selectedColor != value) {\n            this._selectedColor = this._colorInput.text = value;\n            this.drawBlock(value);\n            this.changeColor();\n            this.changeHandler && this.changeHandler.runWith(this._selectedColor);\n            this.event(Event.CHANGE, Event.EMPTY);\n        }\n    }\n\n    /**\n     * @copy laya.ui.Button#skin\n     */\n    get skin(): string {\n        return this._colorButton.skin;\n    }\n\n    set skin(value: string) {\n        this._colorButton.once(Event.LOADED, this, this.changeColor);\n        this._colorButton.skin = value;\n        //changeColor();\n    }\n\n    /**\n     * 改变颜色。\n     */\n    private changeColor(): void {\n        var g: Graphics = this.graphics;\n        g.clear(true);\n        var showColor: string = this._selectedColor || \"#000000\";\n        g.drawRect(0, 0, this._colorButton.width, this._colorButton.height, showColor);\n    }\n\n    /**\n     * 表示颜色样本列表面板的背景颜色值。\n     */\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        this._setPanelChanged();\n    }\n\n    /**\n     * 表示颜色样本列表面板的边框颜色值。\n     */\n    get borderColor(): string {\n        return this._borderColor;\n    }\n\n    set borderColor(value: string) {\n        this._borderColor = value;\n        this._setPanelChanged();\n    }\n\n    /**\n     * 表示颜色样本列表面板选择或输入的颜色值。\n     */\n    get inputColor(): string {\n        return this._inputColor;\n    }\n\n    set inputColor(value: string) {\n        this._inputColor = value;\n        this._setPanelChanged();\n    }\n\n    /**\n     * 表示颜色输入框的背景颜色值。\n     */\n    get inputBgColor(): string {\n        return this._inputBgColor;\n    }\n\n    set inputBgColor(value: string) {\n        this._inputBgColor = value;\n        this._setPanelChanged();\n    }\n\n    /**@private */\n    protected _setPanelChanged(): void {\n        if (!this._panelChanged) {\n            this._panelChanged = true;\n            this.callLater(this.changePanel);\n        }\n    }\n}","import { Styles } from \"./Styles\";\nimport { Text } from \"../display/Text\"\nimport { Event } from \"../events/Event\"\nimport { UIComponent } from \"./UIComponent\"\nimport { UIUtils } from \"./UIUtils\"\nimport { HideFlags } from \"../Const\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\nexport type LabelFitContent = \"no\" | \"yes\" | \"height\";\n\n/**\n * 文本内容发生改变后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Label</code> 类用于创建显示对象以显示文本。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>Label</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Label;\n *\t\tpublic class Label_Example\n *\t\t{\n *\t\t\tpublic function Label_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tonInit();\n *\t\t\t}\n *\t\t\tprivate function onInit():void\n *\t\t\t{\n *\t\t\t\tvar label:Label = new Label();//创建一个 Label 类的实例对象 label 。\n *\t\t\t\tlabel.font = \"Arial\";//设置 label 的字体。\n *\t\t\t\tlabel.bold = true;//设置 label 显示为粗体。\n *\t\t\t\tlabel.leading = 4;//设置 label 的行间距。\n *\t\t\t\tlabel.wordWrap = true;//设置 label 自动换行。\n *\t\t\t\tlabel.padding = \"10,10,10,10\";//设置 label 的边距。\n *\t\t\t\tlabel.color = \"#ff00ff\";//设置 label 的颜色。\n *\t\t\t\tlabel.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\n *\t\t\t\tlabel.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\n *\t\t\t\tlabel.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\n *\t\t\t\tlabel.width = 300;//设置 label 的宽度。\n *\t\t\t\tlabel.height = 200;//设置 label 的高度。\n *\t\t\t\tLaya.stage.addChild(label);//将 label 添加到显示列表。\n *\t\t\t\tvar passwordLabel:Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\n *\t\t\t\tpasswordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\n *\t\t\t\tpasswordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\n *\t\t\t\tpasswordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\n *\t\t\t\tpasswordLabel.width = 300;//设置 passwordLabel 的宽度。\n *\t\t\t\tpasswordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\n *\t\t\t\tpasswordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\n *\t\t\t\tpasswordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\n *\t\t\t\tLaya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * onInit();\n * function onInit(){\n *     var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\n *     label.font = \"Arial\";//设置 label 的字体。\n *     label.bold = true;//设置 label 显示为粗体。\n *     label.leading = 4;//设置 label 的行间距。\n *     label.wordWrap = true;//设置 label 自动换行。\n *     label.padding = \"10,10,10,10\";//设置 label 的边距。\n *     label.color = \"#ff00ff\";//设置 label 的颜色。\n *     label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\n *     label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\n *     label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\n *     label.width = 300;//设置 label 的宽度。\n *     label.height = 200;//设置 label 的高度。\n *     Laya.stage.addChild(label);//将 label 添加到显示列表。\n *     var passwordLabel = new laya.ui.Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\n *     passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\n *     passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\n *     passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\n *     passwordLabel.width = 300;//设置 passwordLabel 的宽度。\n *     passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\n *     passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\n *     passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\n *     Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\n * }\n * @example\n * import Label = laya.ui.Label;\n * class Label_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         var label: Label = new Label();//创建一个 Label 类的实例对象 label 。\n *         label.font = \"Arial\";//设置 label 的字体。\n *         label.bold = true;//设置 label 显示为粗体。\n *         label.leading = 4;//设置 label 的行间距。\n *         label.wordWrap = true;//设置 label 自动换行。\n *         label.padding = \"10,10,10,10\";//设置 label 的边距。\n *         label.color = \"#ff00ff\";//设置 label 的颜色。\n *         label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\n *         label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\n *         label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\n *         label.width = 300;//设置 label 的宽度。\n *         label.height = 200;//设置 label 的高度。\n *         Laya.stage.addChild(label);//将 label 添加到显示列表。\n *         var passwordLabel: Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\n *         passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\n *         passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\n *         passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\n *         passwordLabel.width = 300;//设置 passwordLabel 的宽度。\n *         passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\n *         passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\n *         passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\n *         Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\n *     }\n * }\n * @see laya.display.Text\n */\nexport class Label extends UIComponent {\n\n    /**\n     * @private\n     * 文本 <code>Text</code> 实例。\n     */\n    protected _tf: Text;\n    protected _fitContent: LabelFitContent;\n    /** @internal */\n    private _fitFlag: boolean;\n\n    /**\n     * 创建一个新的 <code>Label</code> 实例。\n     * @param text 文本内容字符串。\n     */\n    constructor(text?: string) {\n        super();\n        this._fitContent = \"no\";\n        if (text != null)\n            this.text = text;\n    }\n\n    /**\n     * @override\n     * @inheritDoc \n    */\n    protected createChildren(): void {\n        this._tf = new Text();\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\n        this._tf._parseEscapeChars = true;\n        this._tf._onPostLayout = () => this._onPostLayout();\n        this._tf.on(Event.CHANGE, () => {\n            this.event(Event.CHANGE);\n            if (!this._isWidthSet || !this._isHeightSet)\n                this.onCompResize();\n        });\n        this.addChild(this._tf);\n    }\n\n    protected _onPostLayout() {\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\n            this._fitFlag = true;\n            if (this._fitContent == \"height\")\n                this.height = this._tf.textHeight;\n            else\n                this.size(this._tf.textWidth, this._tf.textHeight);\n            this._fitFlag = false;\n        }\n    }\n\n    /**\n     * 当前文本内容字符串。\n     * @see laya.display.Text.text\n     */\n    get text(): string {\n        return this._tf.text;\n    }\n\n    set text(value: string) {\n        this._tf.text = value;\n    }\n\n    /**\n     * @copy laya.display.Text#wordWrap\n     */\n    get wordWrap(): boolean {\n        return this._tf.wordWrap;\n    }\n\n    /**\n     * @copy laya.display.Text#wordWrap\n     */\n    set wordWrap(value: boolean) {\n        this._tf.wordWrap = value;\n    }\n\n    /**\n     * @copy laya.display.Text#color\n     */\n    get color(): string {\n        return this._tf.color;\n    }\n\n    set color(value: string) {\n        this._tf.color = value;\n    }\n\n    /**\n     * @copy laya.display.Text#font\n     */\n    get font(): string {\n        return this._tf.font;\n    }\n\n    set font(value: string) {\n        this._tf.font = value;\n    }\n\n    /**\n     * @copy laya.display.Text#align\n     */\n    get align(): string {\n        return this._tf.align;\n    }\n\n    set align(value: string) {\n        this._tf.align = value;\n    }\n\n    /**\n     * @copy laya.display.Text#valign\n     */\n    get valign(): string {\n        return this._tf.valign;\n    }\n\n    set valign(value: string) {\n        this._tf.valign = value;\n    }\n\n    /**\n     * @copy laya.display.Text#bold\n     */\n    get bold(): boolean {\n        return this._tf.bold;\n    }\n\n    set bold(value: boolean) {\n        this._tf.bold = value;\n    }\n\n    /**\n     * @copy laya.display.Text#italic\n     */\n    get italic(): boolean {\n        return this._tf.italic;\n    }\n\n    set italic(value: boolean) {\n        this._tf.italic = value;\n    }\n\n    /**\n     * @copy laya.display.Text#leading\n     */\n    get leading(): number {\n        return this._tf.leading;\n    }\n\n    set leading(value: number) {\n        this._tf.leading = value;\n    }\n\n    /**\n     * @copy laya.display.Text#fontSize\n     */\n    get fontSize(): number {\n        return this._tf.fontSize;\n    }\n\n    set fontSize(value: number) {\n        this._tf.fontSize = value;\n    }\n\n    /**\n     * <p>边距信息</p>\n     * <p>\"上边距，右边距，下边距 , 左边距（边距以像素为单位）\"</p>\n     */\n    get padding(): string {\n        return this._tf.padding.join(\",\");\n    }\n\n    set padding(value: string) {\n        this._tf.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\n    }\n\n    /**\n     * @copy laya.display.Text#bgColor\n     */\n    get bgColor(): string {\n        return this._tf.bgColor\n    }\n\n    set bgColor(value: string) {\n        this._tf.bgColor = value;\n    }\n\n    /**\n     * @copy laya.display.Text#borderColor\n     */\n    get borderColor(): string {\n        return this._tf.borderColor\n    }\n\n    set borderColor(value: string) {\n        this._tf.borderColor = value;\n    }\n\n    /**\n     * @copy laya.display.Text#stroke\n     */\n    get stroke(): number {\n        return this._tf.stroke;\n    }\n\n    set stroke(value: number) {\n        this._tf.stroke = value;\n    }\n\n    /**\n     * @copy laya.display.Text#strokeColor\n     */\n    get strokeColor(): string {\n        return this._tf.strokeColor;\n    }\n\n    set strokeColor(value: string) {\n        this._tf.strokeColor = value;\n    }\n\n    get html(): boolean {\n        return this._tf.html;\n    }\n\n    /** 设置是否富文本，支持html语法 */\n    set html(value: boolean) {\n        this._tf.html = value;\n    }\n\n    get ubb(): boolean {\n        return this._tf.ubb;\n    }\n\n    /** 设置是否使用UBB语法解析文本 */\n    set ubb(value: boolean) {\n        this._tf.ubb = value;\n    }\n\n    get maxWidth(): number {\n        return this._tf.maxWidth;\n    }\n\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\n    set maxWidth(value: number) {\n        this._tf.maxWidth = value;\n    }\n\n    get fitContent(): LabelFitContent {\n        return this._fitContent;\n    }\n\n    /** 设置文本框大小是否自动适应文本内容的大小。可取值为both或者height */\n    set fitContent(value: LabelFitContent) {\n        if (typeof (value) === \"boolean\")\n            value = value ? \"yes\" : \"no\";\n        if (this._fitContent != value) {\n            if ((value == \"yes\" || value == \"height\") && !SerializeUtil.isDeserializing && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\n                if (value == \"height\")\n                    this.height = this._tf.textHeight;\n                else\n                    this.size(this._tf.textWidth, this._tf.textHeight);\n            }\n            this._fitContent = value;\n        }\n    }\n\n    /**\n     * 文本控件实体 <code>Text</code> 实例。\n     */\n    get textField(): Text {\n        return this._tf;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureWidth(): number {\n        return this._tf.width;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureHeight(): number {\n        return this._tf.height;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get_width(): number {\n        if (this._isWidthSet || this._tf.text) return super.get_width();\n        return 0;\n    }\n\n    set_width(value: number): void {\n        if (this._fitContent == \"yes\" && !this._fitFlag)\n            return;\n        super.set_width(value);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _setWidth(value: number): void {\n        super._setWidth(value);\n        this._tf.width = value;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get_height(): number {\n        if (this._isHeightSet || this._tf.text) return super.get_height();\n        return 0;\n    }\n\n    set_height(value: number): void {\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && !this._fitFlag)\n            return;\n        super.set_height(value);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._tf.height = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.text = value + \"\";\n        else\n            super.set_dataSource(value);\n    }\n\n    /**\n     * @copy laya.display.Text#overflow\n     */\n    get overflow(): string {\n        return this._tf.overflow;\n    }\n\n    /**\n     * @copy laya.display.Text#overflow\n     */\n    set overflow(value: string) {\n        this._tf.overflow = value;\n    }\n\n    /**\n     * @copy laya.display.Text#underline\n     */\n    get underline(): boolean {\n        return this._tf.underline;\n    }\n\n    /**\n     * @copy laya.display.Text#underline\n     */\n    set underline(value: boolean) {\n        this._tf.underline = value;\n    }\n\n    /**\n     * @copy laya.display.Text#underlineColor\n     */\n    get underlineColor(): string {\n        return this._tf.underlineColor;\n    }\n\n    /**\n     * @copy laya.display.Text#underlineColor\n     */\n    set underlineColor(value: string) {\n        this._tf.underlineColor = value;\n    }\n\n    /**\n     * @copy laya.display.Text#ignoreLang\n     */\n    get ignoreLang(): boolean {\n        return this._tf.ignoreLang;\n    }\n\n    /**\n     * @copy laya.display.Text#ignoreLang\n     */\n    set ignoreLang(value: boolean) {\n        this._tf.ignoreLang = value;\n    }\n\n    public get templateVars(): Record<string, any> {\n        return this._tf.templateVars;\n    }\n\n    public set templateVars(value: Record<string, any> | boolean) {\n        this._tf.templateVars = value;\n    }\n\n    public setVar(name: string, value: any): Label {\n        this._tf.setVar(name, value);\n\n        return this;\n    }\n}","import { Styles } from \"./Styles\";\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\nimport { AutoBitmap } from \"./AutoBitmap\"\nimport { UIComponent } from \"./UIComponent\"\nimport { UIUtils } from \"./UIUtils\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { URL } from \"../net/URL\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\n\n/**\n * 资源加载完成后调度。\n * @eventType Event.LOADED\n */\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Image</code> 类是用于表示位图图像或绘制图形的显示对象。\n * Image和Clip组件是唯一支持异步加载的两个组件，比如img.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\n * \n * @example <caption>以下示例代码，创建了一个新的 <code>Image</code> 实例，设置了它的皮肤、位置信息，并添加到舞台上。</caption>\n *\tpackage\n *\t {\n *\t\timport laya.ui.Image;\n *\t\tpublic class Image_Example\n *\t\t{\n *\t\t\tpublic function Image_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tonInit();\n *\t\t\t}\n *\t\t\tprivate function onInit():void\n *\t \t\t{\n *\t\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\n *\t\t\t\tbg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\n *\t\t\t\tbg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\n *\t\t\t\tbg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\n *\t\t\t\tbg.width = 150;//设置 bg 对象的宽度。\n *\t\t\t\tbg.height = 250;//设置 bg 对象的高度。\n *\t\t\t\tLaya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\n *\t\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\n *\t\t\t\timage.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\n *\t\t\t\timage.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\n *\t\t\t\tLaya.stage.addChild(image);//将此 image 对象添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t }\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * onInit();\n * function onInit() {\n *     var bg = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\n *     bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\n *     bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\n *     bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\n *     bg.width = 150;//设置 bg 对象的宽度。\n *     bg.height = 250;//设置 bg 对象的高度。\n *     Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\n *     var image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\n *     image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\n *     image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\n *     Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\n * }\n * @example\n * class Image_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\n *         bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\n *         bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\n *         bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\n *         bg.width = 150;//设置 bg 对象的宽度。\n *         bg.height = 250;//设置 bg 对象的高度。\n *         Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\n *         image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\n *         image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\n *         Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\n *     }\n * }\n * @see AutoBitmap\n */\nexport class Image extends UIComponent {\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _group: string;\n    protected _useSourceSize: boolean;\n\n    declare _graphics: AutoBitmap;\n\n    /**\n     * 创建一个 <code>Image</code> 实例。\n     * @param skin 皮肤资源地址。\n     */\n    constructor(skin: string | null = null) {\n        super();\n        this.skin = skin;\n    }\n\n    /**\n     * 销毁对象并释放加载的皮肤资源。\n     */\n    dispose(): void {\n        this.destroy(true);\n        ILaya.loader.clearRes(this._skin);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this.graphics = new AutoBitmap();\n    }\n\n    /**\n     * <p>对象的皮肤地址，以字符串表示。</p>\n     * <p>如果资源未加载，则先加载资源，加载完成后应用于此对象。</p>\n     * <b>注意：</b>资源加载完成后，会自动缓存至资源库中。\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            let source = Loader.getRes(url);\n            if (source) {\n                this.source = source;\n                return Promise.resolve();\n            }\n            else {\n                let sk = this._skin;\n                return ILaya.loader.load(url, { type: Loader.IMAGE, group: this._group }).then(tex => {\n                    if (sk == this._skin)\n                        this.source = tex;\n                });\n            }\n        }\n        else {\n            this.source = null;\n            return Promise.resolve();\n        }\n    }\n\n    get source(): Texture {\n        return this._graphics.source;\n    }\n\n    set source(value: Texture) {\n        if (!this._graphics) return;\n        this._graphics.source = value;\n        this.event(Event.LOADED);\n        this.repaint();\n\n        if (this._useSourceSize && value) {\n            this.size(value.sourceWidth, value.sourceHeight);\n            this._useSourceSize = true; //重置，因为size会改变\n        }\n        else\n            this.onCompResize();\n    }\n\n    get color() {\n        return this._graphics.color;\n    }\n\n    set color(value: string) {\n        this._graphics.color = value;\n    }\n\n    /**\n     * 资源分组。\n     */\n    get group(): string {\n        return this._group;\n    }\n\n    set group(value: string) {\n        if (value && this._skin) Loader.setGroup(this._skin, value);\n        this._group = value;\n    }\n\n    get useSourceSize(): boolean {\n        return this._useSourceSize;\n    }\n\n    set useSourceSize(value: boolean) {\n        if (this._useSourceSize != value) {\n            if (value && this._graphics.source)\n                this.size(this._graphics.source.sourceWidth, this._graphics.source.sourceHeight);\n            this._useSourceSize = value; //放最后，因为size会改变autoSize的值\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureWidth(): number {\n        return this._graphics.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureHeight(): number {\n        return this._graphics.height;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._graphics.width = value;\n        if (!SerializeUtil.isDeserializing)\n            this._useSourceSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._graphics.height = value;\n        if (!SerializeUtil.isDeserializing)\n            this._useSourceSize = false;\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"。</li></ul></p>\n     * @see laya.ui.AutoBitmap#sizeGrid\n     */\n    get sizeGrid(): string {\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\n        return null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'string')\n            this.skin = value as string;\n        else\n            super.set_dataSource(value);\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Label } from \"./Label\";\nimport { Image } from \"./Image\";\nimport { Button } from \"./Button\";\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Loader } from \"../net/Loader\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\nimport { Utils } from \"../utils/Utils\";\nimport { AssetDb } from \"../resource/AssetDb\";\n\n/**\n * 移动滑块位置时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * 移动滑块位置完成（用户鼠标抬起）后调度。\n * @eventType @eventType laya.events.EventD\n *\n */\n/*[Event(name = \"changed\", type = \"laya.events.Event\")]*/\n\n/**\n * 使用 <code>Slider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\n * <p>滑块的当前值由滑块端点（对应于滑块的最小值和最大值）之间滑块的相对位置确定。</p>\n * <p>滑块允许最小值和最大值之间特定间隔内的值。滑块还可以使用数据提示显示其当前值。</p>\n *\n * @see laya.ui.HSlider\n * @see laya.ui.VSlider\n */\nexport class Slider extends UIComponent {\n\n    /** @private 获取对 <code>Slider</code> 组件所包含的 <code>Label</code> 组件的引用。*/\n    static label: Label = null;// new Label(); 静态的可能还没有初始化\n\n    /**\n     * 数据变化处理器。\n     * <p>默认回调参数为滑块位置属性 <code>value</code>属性值：Number 。</p>\n     */\n    changeHandler: Handler;\n\n    /**\n     * 一个布尔值，指示是否为垂直滚动。如果值为true，则为垂直方向，否则为水平方向。\n     * <p>默认值为：true。</p>\n     * @default true\n     */\n    isVertical: boolean = true;\n\n    /**\n     * 一个布尔值，指示是否显示标签。\n     * @default true\n     */\n    showLabel: boolean = true;\n    /**@private */\n    protected _allowClickBack: boolean;\n    /**@private */\n    protected _max: number = 100;\n    /**@private */\n    protected _min: number = 0;\n    /**@private */\n    protected _tick: number = 1;\n    /**@private */\n    protected _value: number = 0;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _bg: Image;\n    /**@private */\n    protected _progress: Image;\n    /**@private */\n    protected _bar: Button;\n    /**@private */\n    protected _tx: number;\n    /**@private */\n    protected _ty: number;\n    /**@private */\n    protected _maxMove: number;\n    /**@private */\n    protected _globalSacle: Point;\n\n    /**\n     * 创建一个新的 <code>Slider</code> 类示例。\n     * @param skin 皮肤。\n     */\n    constructor(skin: string = null) {\n        super();\n        if (!Slider.label) {\n            Slider.label = new Label();\n            Slider.label.hideFlags = HideFlags.HideAndDontSave;\n        }\n        this.skin = skin;\n    }\n\n    /**\n     *@inheritDoc\n     @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._bg && this._bg.destroy(destroyChild);\n        this._bar && this._bar.destroy(destroyChild);\n        this._progress && this._progress.destroy(destroyChild);\n        this._bg = null;\n        this._bar = null;\n        this._progress = null;\n        this.changeHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected createChildren(): void {\n        this._bg = new Image();\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._bg);\n\n        this._bar = new Button();\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._bar);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected initialize(): void {\n        this._bar.on(Event.MOUSE_DOWN, this, this.onBarMouseDown);\n        this.allowClickBack = true;\n    }\n\n    /**\n     * @private\n     * 滑块的的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onBarMouseDown(e: Event): void {\n        let stage = ILaya.stage;\n        this._globalSacle || (this._globalSacle = new Point());\n        this._globalSacle.setTo(this.globalScaleX || 0.01, this.globalScaleY || 0.01);\n\n        this._maxMove = this.isVertical ? (this.height - this._bar.height) : (this.width - this._bar.width);\n        this._tx = stage.mouseX;\n        this._ty = stage.mouseY;\n        stage.on(Event.MOUSE_MOVE, this, this.mouseMove);\n        stage.once(Event.MOUSE_UP, this, this.mouseUp);\n        stage.once(Event.MOUSE_OUT, this, this.mouseUp);\n        //显示提示\n        this.showValueText();\n    }\n\n    /**\n     * @private\n     * 显示标签。\n     */\n    protected showValueText(): void {\n        if (this.showLabel) {\n            var label: Label = Slider.label;\n            this.addChild(label);\n            label.textField.text = this._value + \"\";\n            if (this.isVertical) {\n                label.x = this._bar._x + 20;\n                label.y = (this._bar.height - label.height) * 0.5 + this._bar._y;\n            } else {\n                label.y = this._bar._y - 20;\n                label.x = (this._bar.width - label.width) * 0.5 + this._bar._x;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 隐藏标签。\n     */\n    protected hideValueText(): void {\n        Slider.label && Slider.label.removeSelf();\n    }\n\n    /**\n     * @private\n     */\n    private mouseUp(e: Event): void {\n        let stage = ILaya.stage;\n        stage.off(Event.MOUSE_MOVE, this, this.mouseMove);\n        stage.off(Event.MOUSE_UP, this, this.mouseUp);\n        stage.off(Event.MOUSE_OUT, this, this.mouseUp);\n        this.sendChangeEvent(Event.CHANGED);\n        this.hideValueText();\n    }\n\n    /**\n     * @private\n     */\n    private mouseMove(e: Event): void {\n        let stage = ILaya.stage;\n        var oldValue: number = this._value;\n        if (this.isVertical) {\n            this._bar.y += (stage.mouseY - this._ty) / this._globalSacle.y;\n            if (this._bar._y > this._maxMove) this._bar.y = this._maxMove;\n            else if (this._bar._y < 0) this._bar.y = 0;\n            this._value = this._bar._y / this._maxMove * (this._max - this._min) + this._min;\n            if (this._progress) this._progress.height = this._bar._y + 0.5 * this._bar.height;\n        } else {\n            this._bar.x += (stage.mouseX - this._tx) / this._globalSacle.x;\n            if (this._bar._x > this._maxMove) this._bar.x = this._maxMove;\n            else if (this._bar._x < 0) this._bar.x = 0;\n            this._value = this._bar._x / this._maxMove * (this._max - this._min) + this._min;\n            if (this._progress) this._progress.width = this._bar._x + 0.5 * this._bar.width;\n        }\n\n        this._tx = stage.mouseX;\n        this._ty = stage.mouseY;\n\n        if (this._tick != 0) {\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\n        }\n\n        if (this._value != oldValue) {\n            this.sendChangeEvent();\n        }\n        this.showValueText();\n    }\n\n    /**\n     * @private\n     */\n    protected sendChangeEvent(type: string = Event.CHANGE): void {\n        this.event(type);\n        this.changeHandler && this.changeHandler.runWith(this._value);\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n\n        if (url) {\n            return AssetDb.inst.resolveURL(url).then(url => {\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n                return Promise.all([\n                    this._bg._setSkin(url),\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\n                ]).then(() => this._skinLoaded());\n            });\n        }\n        else {\n            this._bg.skin = null;\n            this._bar.skin = null;\n            if (this._progress)\n                this._progress.skin = null;\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        let url = this._bg.source?.url;\n        if (url) {\n            let progressSkin = Utils.replaceFileExtension(url, \"$progress.png\", true);\n            if (Loader.getRes(progressSkin)) {\n                if (!this._progress) {\n                    this._progress = new Image();\n                    this._progress.hideFlags = HideFlags.HideAndDontSave;\n                    this.addChildAt(this._progress, 1);\n                }\n                this._progress.skin = progressSkin;\n            }\n        }\n\n        this.setBarPoint();\n        this.callLater(this.changeValue);\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * @private\n     * 设置滑块的位置信息。\n     */\n    protected setBarPoint(): void {\n        if (this.isVertical) this._bar.x = Math.round((this._bg.width - this._bar.width) * 0.5);\n        else this._bar.y = Math.round((this._bg.height - this._bar.height) * 0.5);\n    }\n\n    /**@inheritDoc @override*/\n    protected measureWidth(): number {\n        return Math.max(this._bg.width, this._bar.width);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        return Math.max(this._bg.height, this._bar.height);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        if (this.isVertical) this._bg.height = this.height;\n        else this._bg.width = this.width;\n        this.setBarPoint();\n        this.changeValue();\n    }\n\n    /**\n     * <p>当前实例的背景图（ <code>Image</code> ）和滑块按钮（ <code>Button</code> ）实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._bg.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this._bg.sizeGrid = value;\n        this._bar.sizeGrid = value;\n        if (this._progress) this._progress.sizeGrid = this._bar.sizeGrid;\n    }\n\n    /**\n     * 设置滑动条的信息。\n     * @param min 滑块的最小值。\n     * @param max 滑块的最小值。\n     * @param value 滑块的当前值。\n     */\n    setSlider(min: number, max: number, value: number): void {\n        this._value = -1;\n        this._min = min;\n        this._max = max > min ? max : min;\n        this.value = value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * 滑动的刻度值，滑动数值为tick的整数倍。默认值为1。\n     */\n    get tick(): number {\n        return this._tick;\n    }\n\n    set tick(value: number) {\n        if (this._tick != value) {\n            this._tick = value;\n            this.callLater(this.changeValue);\n        }\n    }\n\n    /**\n     * @private\n     * 改变滑块的位置值。\n     */\n    changeValue(): void {\n        if (this.tick != 0) {\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\n        }\n\n        if (this._max >= this._min) {\n            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;\n        } else {\n            //当设置的最小值大于最大值的时候，滑动条会反向处理，滑动条限制也应反向处理。\n            this._value = this._value > this._min ? this._min : this._value < this._max ? this._max : this._value;\n        }\n\n        var num: number = this._max - this._min;\n        if (num === 0) num = 1;\n        if (this.isVertical) {\n            this._bar.y = (this._value - this._min) / num * (this.height - this._bar.height);\n            if (this._progress) this._progress.height = this._bar._y + 0.5 * this._bar.height;\n        }\n        else {\n            this._bar.x = (this._value - this._min) / num * (this.width - this._bar.width);\n            if (this._progress) this._progress.width = this._bar._x + 0.5 * this._bar.width;\n        }\n\n    }\n\n    /**\n     * 获取或设置表示最高位置的数字。 默认值为100。\n     */\n    get max(): number {\n        return this._max;\n    }\n\n    set max(value: number) {\n        if (this._max != value) {\n            this._max = value;\n            this.callLater(this.changeValue);\n        }\n    }\n\n    /**\n     * 获取或设置表示最低位置的数字。 默认值为0。\n     */\n    get min(): number {\n        return this._min;\n    }\n\n    set min(value: number) {\n        if (this._min != value) {\n            this._min = value;\n            this.callLater(this.changeValue);\n        }\n    }\n\n    /**\n     * 获取或设置表示当前滑块位置的数字。\n     */\n    get value(): number {\n        return this._value;\n    }\n\n    set value(num: number) {\n        if (this._value != num) {\n            var oldValue: number = this._value;\n            this._value = num;\n            this.changeValue();\n            if (this._value != oldValue) {\n                this.sendChangeEvent();\n            }\n        }\n    }\n\n    /**\n     * 一个布尔值，指定是否允许通过点击滑动条改变 <code>Slider</code> 的 <code>value</code> 属性值。\n     */\n    get allowClickBack(): boolean {\n        return this._allowClickBack;\n    }\n\n    set allowClickBack(value: boolean) {\n        if (this._allowClickBack != value) {\n            this._allowClickBack = value;\n            if (value) this._bg.on(Event.MOUSE_DOWN, this, this.onBgMouseDown);\n            else this._bg.off(Event.MOUSE_DOWN, this, this.onBgMouseDown);\n        }\n    }\n\n    /**\n     * @private\n     * 滑动条的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onBgMouseDown(e: Event): void {\n        var point: Point = this._bg.getMousePoint();\n        if (this.isVertical) this.value = point.y / (this.height - this._bar.height) * (this._max - this._min) + this._min;\n        else this.value = point.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.value = Number(value);\n        else\n            super.set_dataSource(value);\n    }\n\n    /**\n     * 表示滑块按钮的引用。\n     */\n    get bar(): Button {\n        return this._bar;\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Button } from \"./Button\";\nimport { Slider } from \"./Slider\";\nimport { UIConfig } from \"./../../UIConfig\";\nimport { Styles } from \"./Styles\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Ease } from \"../utils/Ease\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\nimport { Utils } from \"../utils/Utils\";\nimport { AssetDb } from \"../resource/AssetDb\";\n\n/**\n * 滚动条滑块位置发生变化后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n/**\n * 开始滑动。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"start\", type = \"laya.events.Event\")]*/\n/**\n * 结束滑动。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"end\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ScrollBar</code> 组件是一个滚动条组件。\n * <p>当数据太多以至于显示区域无法容纳时，最终用户可以使用 <code>ScrollBar</code> 组件控制所显示的数据部分。</p>\n * <p> 滚动条由四部分组成：两个箭头按钮、一个轨道和一个滑块。 </p>\t *\n *\n * @see laya.ui.VScrollBar\n * @see laya.ui.HScrollBar\n */\nexport class ScrollBar extends UIComponent {\n    /**滚动衰减系数*/\n    rollRatio: number = 0.97;\n    /**滚动变化时回调，回传value参数。*/\n    changeHandler: Handler;\n    /**是否缩放滑动条，默认值为true。 */\n    scaleBar: boolean = true;\n    /**一个布尔值，指定是否自动隐藏滚动条(无需滚动时)，默认值为false。*/\n    autoHide: boolean = false;\n    /**橡皮筋效果极限距离，0为没有橡皮筋效果。*/\n    elasticDistance: number = 0;\n    /**橡皮筋回弹时间，单位为毫秒。*/\n    elasticBackTime: number = 500;\n    /**上按钮 */\n    upButton: Button;\n    /**下按钮 */\n    downButton: Button;\n    /**滑条 */\n    slider: Slider;\n    /**顶部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\n    topMoveLimit: number = 0;\n    /**底部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\n    bottomMoveLimit: number = 0;\n    /** 调用滚动停止接口stopMoveLimit时，是否禁止内容的拖拽 */\n    disableDrag: boolean = false;\n\n    /**@private */\n    protected _showButtons: boolean;\n    /**@private */\n    protected _scrollSize: number = 1;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _thumbPercent: number = 1;\n    /**@private */\n    protected _target: Sprite;\n    /**@private */\n    protected _lastPoint: Point;\n    /**@private */\n    protected _lastOffset: number = 0;\n    /**@private */\n    protected _checkElastic: boolean = false;\n    /**@private */\n    protected _isElastic: boolean = false;\n    /**@private */\n    protected _value: number;\n    /**@private */\n    protected _hide: boolean = false;\n    /**@private */\n    protected _clickOnly: boolean = true;\n    /**@private */\n    protected _offsets: any[];\n    /**@private */\n    protected _touchScrollEnable: boolean;\n    /**@private */\n    protected _mouseWheelEnable: boolean;\n\n    /**\n     * 创建一个新的 <code>ScrollBar</code> 实例。\n     * @param skin 皮肤资源地址。\n     */\n    constructor(skin: string = null) {\n        super();\n\n        this._showButtons = UIConfig.showButtons;\n        this._touchScrollEnable = UIConfig.touchScrollEnable;\n        this._mouseWheelEnable = UIConfig.mouseWheelEnable;\n\n        this.skin = skin;\n        this.max = 1;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        this.stopScroll();\n        this.target = null;\n        super.destroy(destroyChild);\n        this.upButton && this.upButton.destroy(destroyChild);\n        this.downButton && this.downButton.destroy(destroyChild);\n        this.slider && this.slider.destroy(destroyChild);\n        this.upButton = this.downButton = null;\n        this.slider = null;\n        this.changeHandler = null;\n        this._offsets = null;\n    }\n\n    /**\n     * @override\n     */\n    protected createChildren(): void {\n        this.slider = new Slider();\n        this.slider.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this.slider);\n\n        this.upButton = new Button();\n        this.upButton.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this.upButton);\n\n        this.downButton = new Button();\n        this.downButton.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this.downButton);\n    }\n\n    /**\n     * @override\n     */\n    protected initialize(): void {\n        this.slider.showLabel = false;\n        this.slider.tick = 0;\n        this.slider.on(Event.CHANGE, this, this.onSliderChange);\n        this.slider.setSlider(0, 0, 0);\n\n        this.upButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\n        this.downButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\n    }\n\n    /**\n     * @private\n     * 滑块位置发生改变的处理函数。\n     */\n    protected onSliderChange(): void {\n        if (this._value != this.slider.value) this.value = this.slider.value;\n    }\n\n    /**\n     * @private\n     * 向上和向下按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onButtonMouseDown(e: Event): void {\n        var isUp: boolean = e.currentTarget === this.upButton;\n        this.slide(isUp);\n        ILaya.timer.once(Styles.scrollBarDelayTime, this, this.startLoop, [isUp]);\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp);\n    }\n\n    /**@private */\n    protected startLoop(isUp: boolean): void {\n        ILaya.timer.frameLoop(1, this, this.slide, [isUp]);\n    }\n\n    /**@private */\n    protected slide(isUp: boolean): void {\n        if (isUp) this.value -= this._scrollSize;\n        else this.value += this._scrollSize;\n    }\n\n    /**\n     * @private\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onStageMouseUp(e: Event): void {\n        ILaya.timer.clear(this, this.startLoop);\n        ILaya.timer.clear(this, this.slide);\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n\n        if (url) {\n            return AssetDb.inst.resolveURL(url).then(url => {\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n                return Promise.all([\n                    this.slider._setSkin(url),\n                    this.upButton._setSkin(Utils.replaceFileExtension(url, \"$up.png\", true)),\n                    this.downButton._setSkin(Utils.replaceFileExtension(url, \"$down.png\", true))\n                ]).then(() => this._skinLoaded());\n            });\n        }\n        else {\n            this.slider.skin = null;\n            this.upButton.skin = null;\n            this.downButton.skin = null;\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this.callLater(this.changeScrollBar);\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * @private\n     * 更改对象的皮肤及位置。\n     */\n    protected changeScrollBar(): void {\n        this.upButton.visible = this._showButtons;\n        this.downButton.visible = this._showButtons;\n        if (this.slider.isVertical)\n            this.slider.y = this._showButtons ? this.upButton.height : 0;\n        else\n            this.slider.x = this._showButtons ? this.upButton.width : 0;\n        this.resetPositions();\n        this.repaint();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        this.repaint();\n        this.resetPositions();\n        this.event(Event.CHANGE);\n        this.changeHandler && this.changeHandler.runWith(this.value);\n    }\n\n    /**@private */\n    private resetPositions(): void {\n        if (this.slider.isVertical) this.slider.height = this.height - (this._showButtons ? (this.upButton.height + this.downButton.height) : 0);\n        else this.slider.width = this.width - (this._showButtons ? (this.upButton.width + this.downButton.width) : 0);\n        this.resetButtonPosition();\n\n    }\n\n    /**@private */\n    protected resetButtonPosition(): void {\n        if (this.slider.isVertical) this.downButton.y = this.slider._y + this.slider.height;\n        else this.downButton.x = this.slider._x + this.slider.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureWidth(): number {\n        if (this.slider.isVertical) return this.slider.width;\n        return 100;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        if (this.slider.isVertical) return 100;\n        return this.slider.height;\n    }\n\n    /**\n     * 设置滚动条信息。\n     * @param min 滚动条最小位置值。\n     * @param max 滚动条最大位置值。\n     * @param value 滚动条当前位置值。\n     */\n    setScroll(min: number, max: number, value: number): void {\n        this.runCallLater(this._sizeChanged);\n        this.slider.setSlider(min, max, value);\n        //_upButton.disabled = max <= 0;\n        //_downButton.disabled = max <= 0;\n        this.slider.bar.visible = max > 0;\n        if (!this._hide && this.autoHide) this.visible = false;\n    }\n\n    /**\n     * 获取或设置表示最高滚动位置的数字。\n     */\n    get max(): number {\n        return this.slider.max;\n    }\n\n    set max(value: number) {\n        this.slider.max = value;\n    }\n\n    /**\n     * 获取或设置表示最低滚动位置的数字。\n     */\n    get min(): number {\n        return this.slider.min;\n    }\n\n    set min(value: number) {\n        this.slider.min = value;\n    }\n\n    /**\n     * 获取或设置表示当前滚动位置的数字。\n     */\n    get value(): number {\n        return this._value;\n    }\n\n    set value(v: number) {\n        if (v !== this._value) {\n            this._value = v;\n            if (!this._isElastic) {\n                if (this.slider[\"_value\"] != v) {\n                    this.slider[\"_value\"] = v;\n                    this.slider.changeValue();\n                }\n                this._value = this.slider[\"_value\"];\n            }\n            this.event(Event.CHANGE);\n            this.changeHandler && this.changeHandler.runWith(this._value);\n        }\n    }\n\n    /**\n     * 一个布尔值，指示滚动条是否为垂直滚动。如果值为true，则为垂直滚动，否则为水平滚动。\n     * <p>默认值为：true。</p>\n     */\n    get isVertical(): boolean {\n        return this.slider.isVertical;\n    }\n\n    set isVertical(value: boolean) {\n        this.slider.isVertical = value;\n    }\n\n    /**\n     * <p>当前实例的 <code>Slider</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this.slider.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this.slider.sizeGrid = value;\n    }\n\n    /**获取或设置一个值，该值表示按下滚动条轨道时页面滚动的增量。 */\n    get scrollSize(): number {\n        return this._scrollSize;\n    }\n\n    set scrollSize(value: number) {\n        this._scrollSize = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.value = Number(value);\n        else\n            super.set_dataSource(value);\n    }\n\n    /**获取或设置一个值，该值表示滑条长度比例，值为：（0-1）。 */\n    get thumbPercent(): number {\n        return this._thumbPercent;\n    }\n\n    set thumbPercent(value: number) {\n        this.runCallLater(this.changeScrollBar);\n        this.runCallLater(this._sizeChanged);\n        value = value >= 1 ? 0.99 : value;\n        this._thumbPercent = value;\n        if (this.scaleBar) {\n            if (this.slider.isVertical) this.slider.bar.height = Math.max(this.slider.height * value, Styles.scrollBarMinNum);\n            else this.slider.bar.width = Math.max(this.slider.width * value, Styles.scrollBarMinNum);\n        }\n    }\n\n    /**\n     * 设置滚动对象。\n     * @see laya.ui.TouchScroll#target\n     */\n    get target(): Sprite {\n        return this._target;\n    }\n\n    set target(value: Sprite) {\n        if (this._target) {\n            this._target.off(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\n            this._target.off(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\n        }\n        this._target = value;\n        if (value) {\n            this._mouseWheelEnable && this._target.on(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\n            this._touchScrollEnable && this._target.on(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\n        }\n    }\n\n    /**是否隐藏滚动条，不显示滚动条，但是可以正常滚动，默认为false。*/\n    get hide(): boolean {\n        return this._hide;\n    }\n\n    set hide(value: boolean) {\n        this._hide = value;\n        this.visible = !value;\n    }\n\n    /**一个布尔值，指定是否显示向上、向下按钮，默认值为true。*/\n    get showButtons(): boolean {\n        return this._showButtons;\n    }\n\n    set showButtons(value: boolean) {\n        this._showButtons = value;\n        this.callLater(this.changeScrollBar);\n    }\n\n    /**一个布尔值，指定是否开启触摸，默认值为true。*/\n    get touchScrollEnable(): boolean {\n        return this._touchScrollEnable;\n    }\n\n    set touchScrollEnable(value: boolean) {\n        this._touchScrollEnable = value;\n        this.target = this._target;\n    }\n\n    /** 一个布尔值，指定是否滑轮滚动，默认值为true。*/\n    get mouseWheelEnable(): boolean {\n        return this._mouseWheelEnable;\n    }\n\n    set mouseWheelEnable(value: boolean) {\n        this._mouseWheelEnable = value;\n        this.target = this._target;\n    }\n\n    /**@private */\n    protected onTargetMouseWheel(e: Event): void {\n        this.value += e.delta * this._scrollSize;\n        this.target = this._target;\n    }\n\n    isLockedFun: Function;\n\n    /**@private */\n    protected onTargetMouseDown(e: Event): void {\n        if ((this.isLockedFun) && !this.isLockedFun(e)) return;\n        this.event(Event.END);\n        this._clickOnly = true;\n        this._lastOffset = 0;\n        this._checkElastic = false;\n        this._lastPoint || (this._lastPoint = new Point());\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\n        ILaya.timer.clear(this, this.tweenMove);\n        Tween.clearTween(this);\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.frameLoop(1, this, this.loop);\n    }\n\n    startDragForce(): void {\n        this._clickOnly = true;\n        this._lastOffset = 0;\n        this._checkElastic = false;\n        this._lastPoint || (this._lastPoint = new Point());\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\n        ILaya.timer.clear(this, this.tweenMove);\n        Tween.clearTween(this);\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.frameLoop(1, this, this.loop);\n    }\n\n    private cancelDragOp(): void {\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.clear(this, this.tweenMove);\n        ILaya.timer.clear(this, this.loop);\n        this._target.mouseEnabled = true;\n    }\n\n\n    triggerDownDragLimit: Function;\n    triggerUpDragLimit: Function;\n    /** 暂停滚动的重载方法-add:xiaosong */\n    stopMoveLimit: Function;\n    private checkTriggers(isTweenMove: boolean = false): boolean {\n        if (this.value >= 0 && this.value - this._lastOffset <= 0) {\n            if ((this.triggerDownDragLimit) && this.triggerDownDragLimit(isTweenMove)) {\n                this.cancelDragOp();\n                this.value = 0;\n                return true;\n            }\n        }\n        if (this.value <= this.max && (this.value - this._lastOffset >= this.max)) {\n            if ((this.triggerUpDragLimit) && this.triggerUpDragLimit(isTweenMove)) {\n                this.cancelDragOp();\n                this.value = this.max;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get lastOffset(): number {\n        return this._lastOffset;\n    }\n\n    startTweenMoveForce(lastOffset: number): void {\n        this._lastOffset = lastOffset;\n        ILaya.timer.frameLoop(1, this, this.tweenMove, [200]);\n    }\n    /**@private */\n    protected loop(): void {\n        if (this.disableDrag) return;\n        var mouseY: number = ILaya.stage.mouseY;\n        var mouseX: number = ILaya.stage.mouseX;\n        this._lastOffset = this.isVertical ? (mouseY - this._lastPoint.y) : (mouseX - this._lastPoint.x);\n\n        if (this._clickOnly) {\n            if (Math.abs(this._lastOffset * (this.isVertical ? ILaya.stage._canvasTransform.getScaleY() : ILaya.stage._canvasTransform.getScaleX())) > 1) {\n                this._clickOnly = false;\n                if (this.checkTriggers()) return;\n                this._offsets || (this._offsets = []);\n                this._offsets.length = 0;\n                this._target.mouseEnabled = false;\n                if (!this.hide && this.autoHide) {\n                    this.alpha = 1;\n                    this.visible = true;\n                }\n                this.event(Event.START);\n            } else return;\n        } else {\n            if (this.checkTriggers()) return;\n        }\n        this._offsets.push(this._lastOffset);\n\n        this._lastPoint.x = mouseX;\n        this._lastPoint.y = mouseY;\n\n        if (this._lastOffset === 0) return;\n\n        if (!this._checkElastic) {\n            if (this.elasticDistance > 0) {\n                if (!this._checkElastic && this._lastOffset != 0) {\n                    if ((this._lastOffset > 0 && this._value <= this.min) || (this._lastOffset < 0 && this._value >= this.max)) {\n                        this._isElastic = true;\n                        this._checkElastic = true;\n                    } else {\n                        this._isElastic = false;\n                    }\n                }\n            } else {\n                this._checkElastic = true;\n            }\n        }\n\n        if (this._isElastic) {\n            if (this._value <= this.min) {\n                if (this._lastOffset > 0) {\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this.min - this._value) / this.elasticDistance)));\n                } else {\n                    this.value -= this._lastOffset * 0.5;\n                    if (this._value >= this.min)\n                        this._checkElastic = false;\n                }\n            } else if (this._value >= this.max) {\n                if (this._lastOffset < 0) {\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this._value - this.max) / this.elasticDistance)));\n                } else {\n                    this.value -= this._lastOffset * 0.5;\n                    if (this._value <= this.max)\n                        this._checkElastic = false;\n                }\n\n            }\n        } else {\n            this.value -= this._lastOffset;\n        }\n    }\n\n    /**@private */\n    protected onStageMouseUp2(e: Event): void {\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.clear(this, this.loop);\n\n        if (this._clickOnly) {\n            if (this._value >= this.min && this._value <= this.max)\n                return;\n        }\n        this._target.mouseEnabled = true;\n\n        if (this._isElastic) {\n            if (this._value < this.min) {\n                this.event(\"dragTopLimit\");\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.min - this.topMoveLimit) : this.min;\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n            } else if (this._value > this.max) {\n                this.event(\"dragBottomLimit\");\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.max + this.bottomMoveLimit) : this.max;\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n            }\n        } else {\n            if (!this._offsets) return;\n            //计算平均值\n            if (this._offsets.length < 1) {\n                this._offsets[0] = this.isVertical ? ILaya.stage.mouseY - this._lastPoint.y : ILaya.stage.mouseX - this._lastPoint.x;\n            }\n            var offset: number = 0;\n            var n: number = Math.min(this._offsets.length, 3);\n            for (var i: number = 0; i < n; i++) {\n                offset += this._offsets[this._offsets.length - 1 - i];\n            }\n            this._lastOffset = offset / n;\n\n            offset = Math.abs(this._lastOffset);\n            if (offset < 2) {\n                this.event(Event.END);\n                return;\n            }\n            if (offset > 250) this._lastOffset = this._lastOffset > 0 ? 250 : -250;\n            var dis: number = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 150)));\n            ILaya.timer.frameLoop(1, this, this.tweenMove, [dis]);\n        }\n    }\n\n    /**@private */\n    private elasticOver(): void {\n        this._isElastic = false;\n        if (!this.hide && this.autoHide) {\n            Tween.to(this, { alpha: 0 }, 500);\n        }\n        this.event(Event.END);\n    }\n\n    /**@private */\n    protected tweenMove(maxDistance: number): void {\n        this._lastOffset *= this.rollRatio;\n        if (this.checkTriggers(true)) {\n            return;\n        }\n        var tarSpeed: number;\n        if (maxDistance > 0) {\n            if (this._lastOffset > 0 && this.value <= this.min) {\n                this._isElastic = true;\n                tarSpeed = -(this.min - maxDistance - this.value) * 0.5;\n                if (this._lastOffset > tarSpeed) this._lastOffset = tarSpeed;\n            } else if (this._lastOffset < 0 && this.value >= this.max) {\n                this._isElastic = true;\n                tarSpeed = -(this.max + maxDistance - this.value) * 0.5;\n                if (this._lastOffset < tarSpeed) this._lastOffset = tarSpeed;\n            }\n        }\n\n        this.value -= this._lastOffset;\n        //if (Math.abs(_lastOffset) < 1 || value == max || value == min) \n        if (Math.abs(this._lastOffset) < 0.1) {\n            ILaya.timer.clear(this, this.tweenMove);\n            if (this._isElastic) {\n                if (this._value < this.min) {\n                    Tween.to(this, { value: this.min }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n                } else if (this._value > this.max) {\n                    Tween.to(this, { value: this.max }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n                } else {\n                    this.elasticOver();\n                }\n                return;\n            }\n            this.event(Event.END);\n            if (!this.hide && this.autoHide) {\n                Tween.to(this, { alpha: 0 }, 500);\n            }\n        }\n    }\n\n    /**\n     * 停止滑动。\n     */\n    stopScroll(): void {\n        this.onStageMouseUp2(null);\n        ILaya.timer.clear(this, this.tweenMove);\n        Tween.clearTween(this);\n    }\n\n    /**\n     * 滚动的刻度值，滑动数值为tick的整数倍。默认值为1。\n     */\n    get tick(): number {\n        return this.slider.tick;\n    }\n\n    set tick(value: number) {\n        this.slider.tick = value;\n    }\n\n    /** 恢复到正常的弹性缓动效果 */\n    backToNormal(): void {\n        if (this._value < this.min) {\n            this._backToNormal(this.min);\n        } else if (this._value > this.max) {\n            this._backToNormal(this.max);\n        }\n    }\n\n    private _backToNormal(value: number) {\n        Tween.to(this, { value: value }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n    }\n}","import { ScrollBar } from \"./ScrollBar\";\n\n/**\n *\n * 使用 <code>VScrollBar</code> （垂直 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\n *\n * @example <caption>以下示例代码，创建了一个 <code>VScrollBar</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.vScrollBar;\n *\t\timport laya.ui.VScrollBar;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class VScrollBar_Example\n *\t\t{\n *\t\t\tprivate var vScrollBar:VScrollBar;\n *\t\t\tpublic function VScrollBar_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\n *\t\t\t\tvScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\n *\t\t\t\tvScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\n *\t\t\t\tvScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\n *\t\t\t\tvScrollBar.changeHandler = new Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\n *\t\t\t\tLaya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var vScrollBar;\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     vScrollBar = new laya.ui.VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\n *     vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\n *     vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\n *     vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\n *     vScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\n *     Laya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\n * }\n * function onChange(value) {\n *     console.log(\"滚动条的位置： value=\" + value);\n * }\n * @example\n * import VScrollBar = laya.ui.VScrollBar;\n * import Handler = laya.utils.Handler;\n * class VScrollBar_Example {\n *     private vScrollBar: VScrollBar;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\n *     }\n *     private onLoadComplete(): void {\n *         this.vScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\n *         this.vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\n *         this.vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\n *         this.vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\n *         this.vScrollBar.changeHandler = new Handler(this, this.onChange);//设置 vScrollBar 的滚动变化处理器。\n *         Laya.stage.addChild(this.vScrollBar);//将此 vScrollBar 对象添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滚动条的位置： value=\" + value);\n *     }\n * }\n */\nexport class VScrollBar extends ScrollBar {\n\n}","import { ScrollBar } from \"./ScrollBar\";\n\n/**\n * 使用 <code>HScrollBar</code> （水平 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\n * @example <caption>以下示例代码，创建了一个 <code>HScrollBar</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.HScrollBar;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class HScrollBar_Example\n *\t\t{\n *\t\t\tprivate var hScrollBar:HScrollBar;\n *\t\t\tpublic function HScrollBar_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\thScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\n *\t\t\t\thScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\n *\t\t\t\thScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\n *\t\t\t\thScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\n *\t\t\t\thScrollBar.changeHandler = new Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\n *\t\t\t\tLaya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var hScrollBar;\n * var res  = [\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"];\n * Laya.loader.load(res,laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     console.log(\"资源加载完成！\");\n *     hScrollBar = new laya.ui.HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\n *     hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\n *     hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\n *     hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\n *     hScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\n *     Laya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\n * }\n * function onChange(value)\n * {\n *     console.log(\"滚动条的位置： value=\" + value);\n * }\n * @example\n * import HScrollBar = laya.ui.HScrollBar;\n * import Handler = laya.utils.Handler;\n * class HScrollBar_Example {\n *     private hScrollBar: HScrollBar;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.hScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\n *         this.hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\n *         this.hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\n *         this.hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\n *         this.hScrollBar.changeHandler = new Handler(this, this.onChange);//设置 hScrollBar 的滚动变化处理器。\n *         Laya.stage.addChild(this.hScrollBar);//将此 hScrollBar 对象添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滚动条的位置： value=\" + value);\n *     }\n * }\n*/\nexport class HScrollBar extends ScrollBar {\n\n    /**\n     * @override\n     * @inheritDoc \n     */\n    protected initialize(): void {\n        super.initialize();\n        this.slider.isVertical = false;\n    }\n}","import { Box } from \"./Box\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { Clip } from \"./Clip\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\nimport { HideFlags } from \"../Const\";\nimport { HierarchyParser } from \"../loaders/HierarchyParser\";\nimport { UIComponent } from \"./UIComponent\";\nimport { ScrollType } from \"./Styles\";\n\n/**\n * 当对象的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * 渲染列表的单元项对象时调度。\n * @eventType Event.RENDER\n */\n/*[Event(name = \"render\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>List</code> 控件可显示项目列表。默认为垂直方向列表。可通过UI编辑器自定义列表。\n *\n * @example <caption>以下示例代码，创建了一个 <code>List</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.List;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class List_Example\n *\t\t{\n *\t\t\tpublic function List_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800, \"false\");//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar arr:Array = [];//创建一个数组，用于存贮列表的数据信息。\n *\t\t\t\tfor (var i:int = 0; i &lt; 20; i++)\n *\t\t\t\t{\n *\t\t\t\t\tarr.push({label: \"item\" + i});\n *\t\t\t\t}\n *\t\t\t\tvar list:List = new List();//创建一个 List 类的实例对象 list 。\n *\t\t\t\tlist.itemRender = Item;//设置 list 的单元格渲染器。\n *\t\t\t\tlist.repeatX = 1;//设置 list 的水平方向单元格数量。\n *\t\t\t\tlist.repeatY = 10;//设置 list 的垂直方向单元格数量。\n *\t\t\t\tlist.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\n *\t\t\t\tlist.array = arr;//设置 list 的列表数据源。\n *\t\t\t\tlist.pos(100, 100);//设置 list 的位置。\n *\t\t\t\tlist.selectEnable = true;//设置 list 可选。\n *\t\t\t\tlist.selectHandler = new Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\n *\t\t\t\tLaya.stage.addChild(list);//将 list 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的项目索引： index= \", index);\n *\t\t\t}\n *\t\t}\n *\t}\n *\timport laya.ui.Box;\n *\timport laya.ui.Label;\n *\tclass Item extends Box\n *\t{\n *\t\tpublic function Item()\n *\t\t{\n *\t\t\tgraphics.drawRect(0, 0, 100, 20,null, \"#ff0000\");\n *\t\t\tvar label:Label = new Label();\n *\t\t\tlabel.text = \"100000\";\n *\t\t\tlabel.name = \"label\";//设置 label 的name属性值。\n *\t\t\tlabel.size(100, 20);\n *\t\t\taddChild(label);\n *\t\t}\n *\t}\n * @example\n * (function (_super){\n *     function Item(){\n *         Item.__super.call(this);//初始化父类\n *         this.graphics.drawRect(0, 0, 100, 20, \"#ff0000\");\n *         var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\n *         label.text = \"100000\";//设置 label 的文本内容。\n *         label.name = \"label\";//设置 label 的name属性值。\n *         label.size(100, 20);//设置 label 的宽度、高度。\n *         this.addChild(label);//将 label 添加到显示列表。\n *     };\n *     Laya.class(Item,\"mypackage.listExample.Item\",_super);//注册类 Item 。\n * })(laya.ui.Box);\n    \n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));//加载资源。\n    \n * function onLoadComplete() {\n *     var arr = [];//创建一个数组，用于存贮列表的数据信息。\n *     for (var i = 0; i &lt; 20; i++) {\n *         arr.push({label: \"item\" + i});\n *     }\n    \n *     var list = new laya.ui.List();//创建一个 List 类的实例对象 list 。\n *     list.itemRender = mypackage.listExample.Item;//设置 list 的单元格渲染器。\n *     list.repeatX = 1;//设置 list 的水平方向单元格数量。\n *     list.repeatY = 10;//设置 list 的垂直方向单元格数量。\n *     list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\n *     list.array = arr;//设置 list 的列表数据源。\n *     list.pos(100, 100);//设置 list 的位置。\n *     list.selectEnable = true;//设置 list 可选。\n *     list.selectHandler = new laya.utils.Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\n *     Laya.stage.addChild(list);//将 list 添加到显示列表。\n * }\n    \n * function onSelect(index)\n * {\n *     console.log(\"当前选择的项目索引： index= \", index);\n * }\n *\n * @example\n * import List = laya.ui.List;\n * import Handler = laya.utils.Handler;\n * public class List_Example {\n *     public List_Example() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\n *     }\n *     private onLoadComplete(): void {\n *         var arr= [];//创建一个数组，用于存贮列表的数据信息。\n *         for (var i: number = 0; i &lt; 20; i++)\n *         {\n *             arr.push({ label: \"item\" + i });\n *         }\n *         var list: List = new List();//创建一个 List 类的实例对象 list 。\n *         list.itemRender = Item;//设置 list 的单元格渲染器。\n *         list.repeatX = 1;//设置 list 的水平方向单元格数量。\n *         list.repeatY = 10;//设置 list 的垂直方向单元格数量。\n *         list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\n *         list.array = arr;//设置 list 的列表数据源。\n *         list.pos(100, 100);//设置 list 的位置。\n *         list.selectEnable = true;//设置 list 可选。\n *         list.selectHandler = new Handler(this, this.onSelect);//设置 list 改变选择项执行的处理器。\n *         Laya.stage.addChild(list);//将 list 添加到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选择的项目索引： index= \", index);\n *     }\n * }\n * import Box = laya.ui.Box;\n * import Label = laya.ui.Label;\n * class Item extends Box {\n *     constructor() {\n *         this.graphics.drawRect(0, 0, 100, 20, null, \"#ff0000\");\n *         var label: Label = new Label();\n *         label.text = \"100000\";\n *         label.name = \"label\";//设置 label 的name属性值。\n *         label.size(100, 20);\n *         this.addChild(label);\n *     }\n * }\n */\nexport class List extends Box {\n\n    /**改变 <code>List</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。*/\n    selectHandler: Handler | null;\n    /**单元格渲染处理器(默认返回参数cell:UIComponent,index:int)。*/\n    renderHandler: Handler | null;\n    /**单元格鼠标事件处理器(默认返回参数e:Event,index:int)。*/\n    mouseHandler: Handler | null;\n    /**指定是否可以选择，若值为true则可以选择，否则不可以选择。 @default false*/\n    selectEnable: boolean = false;\n    /**最大分页数。*/\n    totalPage: number = 0;\n    /**禁用滚动条停止 */\n    disableStopScroll: boolean = false;\n\n    /**@private */\n    protected _content!: Box;\n    /**@private */\n    protected _scrollBar: ScrollBar | null;\n    /**@private */\n    protected _itemRender: any;\n    /**@private */\n    protected _repeatX: number = 0;\n    /**@private */\n    protected _repeatY: number = 0;\n    /**@private */\n    protected _repeatX2: number = 0;\n    /**@private */\n    protected _repeatY2: number = 0;\n    /**@private */\n    protected _spaceX: number = 0;\n    /**@private */\n    protected _spaceY: number = 0;\n    /**@private */\n    protected _cells: UIComponent[] = [];\n    /**@private */\n    protected _array: any[] | null;\n    /**@private */\n    protected _startIndex: number = 0;\n    /**@private */\n    protected _selectedIndex: number = -1;\n    /**@private */\n    protected _page: number = 0;\n    /**@private */\n    protected _isVertical: boolean = true;\n    /**@private */\n    protected _cellSize: number = 20;\n    /**@private */\n    protected _cellOffset: number = 0;\n    /**@private */\n    protected _isMoved: boolean;\n    /**是否缓存内容，如果数据源较少，并且list内无动画，设置此属性为true能大大提高性能 */\n    cacheContent: boolean;\n    /**@private */\n    protected _createdLine: number = 0;\n    /**@private */\n    protected _cellChanged: boolean;\n    /**@private */\n    protected _offset: Point = new Point();\n    /**@private */\n    protected _usedCache: string | null = null;\n    /**@private */\n    protected _elasticEnabled: boolean = false;\n\n    protected _scrollType: ScrollType = 0;\n    protected _vScrollBarSkin: string;\n    protected _hScrollBarSkin: string;\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._content && this._content.destroy(destroyChild);\n        this._scrollBar && this._scrollBar.destroy(destroyChild);\n        super.destroy(destroyChild);\n        this._content = null;\n        this._scrollBar = null;\n        this._itemRender = null;\n        this._cells = null;\n        this._array = null;\n        this.selectHandler = this.renderHandler = this.mouseHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this._content = new Box();\n        this._content.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._content);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set cacheAs(value: string) {\n        super.cacheAs = value;\n        if (this._scrollBar) {\n            this._usedCache = null;\n            if (value !== \"none\") this._scrollBar.on(Event.START, this, this.onScrollStart);\n            else this._scrollBar.off(Event.START, this, this.onScrollStart);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get cacheAs() {\n        return super.cacheAs;\n    }\n\n    private onScrollStart(): void {\n        this._usedCache || (this._usedCache = super.cacheAs);\n        super.cacheAs = \"none\";\n        this._scrollBar!.once(Event.END, this, this.onScrollEnd);\n    }\n\n    private onScrollEnd(): void {\n        super.cacheAs = this._usedCache || 'none';\n    }\n\n    /**\n     * 获取对 <code>List</code> 组件所包含的内容容器 <code>Box</code> 组件的引用。\n     */\n    get content() {\n        return this._content;\n    }\n\n    /**\n     * 滚动类型\n     */\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n\n        if (this._scrollType == ScrollType.None) {\n            if (this._scrollBar) {\n                this._scrollBar.destroy();\n                this._scrollBar = null;\n                this._content.scrollRect = null;\n            }\n        }\n        else if (this._scrollType == ScrollType.Horizontal) {\n            if (this._scrollBar && !this._scrollBar.isVertical) {\n                this._scrollBar.skin = this._hScrollBarSkin;\n                return;\n            }\n\n            if (this._scrollBar) {\n                this._scrollBar.destroy();\n                this._scrollBar = null;\n            }\n\n            let scrollBar = new HScrollBar();\n            scrollBar.name = \"scrollBar\";\n            scrollBar.bottom = 0;\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\n            scrollBar.skin = this._hScrollBarSkin;\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\n            this.scrollBar = scrollBar;\n            this._setCellChanged();\n        }\n        else {\n            if (this._scrollBar && this._scrollBar.isVertical) {\n                this._scrollBar.skin = this._vScrollBarSkin;\n                return;\n            }\n\n            if (this._scrollBar) {\n                this._scrollBar.destroy();\n                this._scrollBar = null;\n            }\n\n            let scrollBar = new VScrollBar();\n            scrollBar.name = \"scrollBar\";\n            scrollBar.right = 0;\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\n            scrollBar.skin = this._vScrollBarSkin;\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\n            this.scrollBar = scrollBar;\n            this._setCellChanged();\n        }\n    }\n\n    /**\n     * 垂直方向滚动条皮肤。\n     */\n    get vScrollBarSkin(): string {\n        return this._vScrollBarSkin;\n    }\n\n    set vScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._vScrollBarSkin != value) {\n            this._vScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Vertical;\n            else\n                this.scrollType = this._scrollType;\n        }\n\n    }\n\n    /**\n     * 水平方向滚动条皮肤。\n     */\n    get hScrollBarSkin(): string {\n        return this._hScrollBarSkin;\n    }\n\n    set hScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._hScrollBarSkin != value) {\n            this._hScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Horizontal;\n            else\n                this.scrollType = this._scrollType;\n        }\n    }\n\n    /**\n     * 获取对 <code>List</code> 组件所包含的滚动条 <code>ScrollBar</code> 组件的引用。\n     */\n    get scrollBar(): ScrollBar | null {\n        return this._scrollBar;\n    }\n\n    set scrollBar(value: ScrollBar | null) {\n        if (this._scrollBar != value) {\n            this._scrollBar = value;\n            if (value) {\n                this._isVertical = this._scrollBar.isVertical;\n                this._scrollBar.target = this._content;\n                this._scrollBar.on(Event.CHANGE, this, this.onScrollBarChange);\n                this.addChild(this._scrollBar);\n                this._content.scrollRect = Rectangle.create();\n            }\n        }\n    }\n\n    /**\n     * 单元格渲染器。\n     * <p><b>取值：</b>\n     * <ol>\n     * <li>单元格类对象。</li>\n     * <li> UI 的 JSON 描述。</li>\n     * </ol></p>\n     * @implements\n     */\n    get itemRender(): any {\n        return this._itemRender;\n    }\n\n    set itemRender(value: any) {\n        if (this._itemRender != value) {\n            this._itemRender = value;\n            //销毁老单元格\n            for (let i = this._cells!.length - 1; i > -1; i--) {\n                this._cells![i].destroy();\n            }\n            this._cells!.length = 0;\n            this._setCellChanged();\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._setCellChanged();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    _setHeight(value: number) {\n        super._setWidth(value);\n        this._setCellChanged();\n    }\n\n\n    /**\n     * 水平方向显示的单元格数量。\n     */\n    get repeatX(): number {\n        return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;\n    }\n\n    set repeatX(value: number) {\n        this._repeatX = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * 垂直方向显示的单元格数量。\n     */\n    get repeatY(): number {\n        return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;\n    }\n\n    set repeatY(value: number) {\n        this._repeatY = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * 水平方向显示的单元格之间的间距（以像素为单位）。\n     */\n    get spaceX(): number {\n        return this._spaceX;\n    }\n\n    set spaceX(value: number) {\n        this._spaceX = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * 垂直方向显示的单元格之间的间距（以像素为单位）。\n     */\n    get spaceY(): number {\n        return this._spaceY;\n    }\n\n    set spaceY(value: number) {\n        this._spaceY = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * @private\n     * 更改单元格的信息。\n     * 在此销毁、创建单元格，并设置单元格的位置等属性。相当于此列表内容发送改变时调用此函数。\n     */\n    protected changeCells(): void {\n        this._cellChanged = false;\n        if (this._itemRender) {\n            //获取滚动条\n            this.scrollBar = (<ScrollBar>this.getChildByName(\"scrollBar\"));\n\n            //自适应宽高\n            let cell = this._getOneCell();\n\n            let cellWidth = (cell.width + this._spaceX) || 1;\n            let cellHeight = (cell.height + this._spaceY) || 1;\n            if (this._width > 0) this._repeatX2 = this._isVertical ? Math.round(this._width / cellWidth) : Math.ceil(this._width / cellWidth);\n            if (this._height > 0) this._repeatY2 = this._isVertical ? Math.ceil(this._height / cellHeight) : Math.round(this._height / cellHeight);\n\n            let listWidth = this._isWidthSet ? this._width : (cellWidth * this.repeatX - this._spaceX);\n            let listHeight = this._isHeightSet ? this._height : (cellHeight * this.repeatY - this._spaceY);\n            this._cellSize = this._isVertical ? cellHeight : cellWidth;\n            this._cellOffset = this._isVertical ? (cellHeight * Math.max(this._repeatY2, this._repeatY) - listHeight - this._spaceY) : (cellWidth * Math.max(this._repeatX2, this._repeatX) - listWidth - this._spaceX);\n\n            if (this._scrollBar) {\n                if (this._isVertical)\n                    this._scrollBar.height = listHeight;\n                else\n                    this._scrollBar.width = listWidth;\n            }\n            this.setContentSize(listWidth, listHeight);\n\n            //创建新单元格\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            let numY = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);\n            this._createItems(0, numX, numY);\n            this._createdLine = numY;\n\n            if (this._array) {\n                this.array = this._array;\n                this.runCallLater(this.renderItems);\n            }\n            else\n                this.changeSelectStatus();\n        }\n    }\n\n    private _getOneCell(): UIComponent {\n        if (this._cells.length === 0) {\n            let item = this.createItem();\n            this._offset.setTo(item._x, item._y);\n            if (this.cacheContent) return item;\n            this._cells.push(item);\n        }\n        return this._cells[0];\n    }\n\n    private _createItems(startY: number, numX: number, numY: number): void {\n        let box = this._content;\n        let cell = this._getOneCell();\n        let cellWidth = cell.width + this._spaceX;\n        let cellHeight = cell.height + this._spaceY;\n        let arr: Array<UIComponent>;\n\n        if (this.cacheContent) {\n            let cacheBox = new Box();\n            cacheBox.hideFlags = HideFlags.HideAndDontSave;\n            cacheBox.cacheAs = \"normal\";\n            cacheBox.pos((this._isVertical ? 0 : startY) * cellWidth, (this._isVertical ? startY : 0) * cellHeight);\n            this._content.addChild(cacheBox);\n            box = cacheBox;\n        } else {\n            arr = [];\n            for (let i = this._cells.length - 1; i > -1; i--) {\n                let item = this._cells[i];\n                item.removeSelf();\n                arr.push(item);\n            }\n            this._cells.length = 0;\n        }\n\n        for (let k = startY; k < numY; k++) {\n            for (let l = 0; l < numX; l++) {\n                if (arr && arr.length) {\n                    cell = arr.pop();\n                } else {\n                    cell = this.createItem();\n                    cell.hideFlags = HideFlags.HideAndDontSave;\n                }\n                cell.x = (this._isVertical ? l : k) * cellWidth - box._x;\n                cell.y = (this._isVertical ? k : l) * cellHeight - box._y;\n                cell.name = \"item\" + (k * numX + l);\n                box.addChild(cell);\n                this.addCell(cell);\n            }\n        }\n    }\n\n    protected createItem(): UIComponent {\n        let arr: any[] = [];\n        let box: UIComponent;\n        if (typeof (this._itemRender) == \"function\") {//TODO:\n            box = new this._itemRender();\n            box._skinBaseUrl = this._skinBaseUrl;\n        } else {\n            if (this._itemRender._$type || this._itemRender._$prefab)\n                box = <UIComponent>HierarchyParser.parse(this._itemRender, { skinBaseUrl: this._skinBaseUrl })[0];\n            else\n                box = LegacyUIParser.createComp(this._itemRender, null, null, arr);\n            if (!box) {\n                console.warn(\"cannot create item\");\n                box = new Box();\n            }\n        }\n        box.hideFlags = HideFlags.HideAndDontSave;\n\n        if (arr.length == 0 && (<any>box)[\"_watchMap\"]) {\n            let watchMap = (<any>box)[\"_watchMap\"];\n            for (let name in watchMap) {\n                let a: any[] = watchMap[name];\n                for (let i = 0; i < a.length; i++) {\n                    let watcher = a[i];\n                    arr.push(watcher.comp, watcher.prop, watcher.value)\n                }\n            }\n        }\n        if (arr.length) (<any>box)[\"_$bindData\"] = arr;\n\n        return box;\n    }\n\n    /**\n     * @private\n     * 添加单元格。\n     * @param cell 需要添加的单元格对象。\n     */\n    protected addCell(cell: UIComponent): void {\n        cell.on(Event.CLICK, this, this.onCellMouse);\n        cell.on(Event.RIGHT_CLICK, this, this.onCellMouse);\n        cell.on(Event.MOUSE_OVER, this, this.onCellMouse);\n        cell.on(Event.MOUSE_OUT, this, this.onCellMouse);\n        cell.on(Event.MOUSE_DOWN, this, this.onCellMouse);\n        cell.on(Event.MOUSE_UP, this, this.onCellMouse);\n        this._cells.push(cell);\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n        this.initItems();\n    }\n\n    /**@internal */\n    _afterInited(): void {\n        this.initItems();\n    }\n\n    /**\n     * 初始化单元格信息。\n     */\n    initItems(): void {\n        if (!this._itemRender && this.getChildByName(\"item0\") != null) {\n            this.repeatX = 1;\n            let count: number;\n            count = 0;\n            for (let i = 0; i < 10000; i++) {\n                let cell = <UIComponent>this.getChildByName(\"item\" + i);\n                if (cell) {\n                    this.addCell(cell);\n                    count++;\n                    continue;\n                }\n                break;\n            }\n            this.repeatY = count;\n        }\n    }\n\n    /**\n     * 设置可视区域大小。\n     * <p>以（0，0，width参数，height参数）组成的矩形区域为可视区域。</p>\n     * @param width 可视区域宽度。\n     * @param height 可视区域高度。\n     */\n    setContentSize(width: number, height: number): void {\n        this._content.width = width;\n        this._content.height = height;\n        if (this._scrollBar) {\n            let r = this._content.scrollRect;\n            if (!r)\n                r = Rectangle.create();\n            r.setTo(-this._offset.x, -this._offset.y, width, height);\n            this._content.scrollRect = r;\n        }\n        this.event(Event.RESIZE);\n    }\n\n    /**\n     * @private\n     * 单元格的鼠标事件侦听处理函数。\n     */\n    protected onCellMouse(e: Event): void {\n        if (e.type === Event.MOUSE_DOWN) this._isMoved = false;\n        let cell = (<UIComponent>e.currentTarget);\n        let index = this._startIndex + this._cells.indexOf(cell);\n        if (index < 0) return;\n        if (e.type === Event.CLICK || e.type === Event.RIGHT_CLICK) {\n            if (this.selectEnable && !this._isMoved) this.selectedIndex = index;\n            else this.changeCellState(cell, true, 0);\n        } else if ((e.type === Event.MOUSE_OVER || e.type === Event.MOUSE_OUT) && this._selectedIndex !== index) {\n            this.changeCellState(cell, e.type === Event.MOUSE_OVER, 0);\n        }\n        this.mouseHandler && this.mouseHandler.runWith([e, index]);\n    }\n\n    /**\n     * @private\n     * 改变单元格的可视状态。\n     * @param cell 单元格对象。\n     * @param visable 是否显示。\n     * @param index 单元格的属性 <code>index</code> 值。\n     */\n    protected changeCellState(cell: UIComponent, visible: boolean, index: number): void {\n        let selectBox = (<Clip>cell.getChildByName(\"selectBox\"));\n        if (selectBox) {\n            this.selectEnable = true;\n            selectBox.visible = visible;\n            selectBox.index = index;\n        }\n    }\n\n    /** \n     * @inheritDoc \n     * @override\n    */\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        this.setContentSize(this.width, this.height);\n        if (this._scrollBar) this.callLater(this.onScrollBarChange);\n    }\n\n    /**\n     * @private\n     * 滚动条的 <code>Event.CHANGE</code> 事件侦听处理函数。\n     */\n    protected onScrollBarChange(e: Event | null = null): void {\n        this.runCallLater(this.changeCells);\n        let scrollValue = this._scrollBar!.value;\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\n        let lineY = (this._isVertical ? this.repeatY : this.repeatX);\n        let scrollLine = Math.floor(scrollValue / this._cellSize);\n\n        if (!this.cacheContent) {\n            let index = scrollLine * lineX;\n            let num = 0;\n            let down = true;\n            let toIndex = 0;\n            if (index > this._startIndex) {\n                num = index - this._startIndex;\n                //let down = true;\n                toIndex = this._startIndex + lineX * (lineY + 1);\n                this._isMoved = true;\n            } else if (index < this._startIndex) {\n                num = this._startIndex - index;\n                down = false;\n                toIndex = this._startIndex - 1;\n                this._isMoved = true;\n            }\n\n            let cell: UIComponent;\n            let cellIndex: number;\n            for (let i = 0; i < num; i++) {\n                if (down) {\n                    cell = this._cells.shift();\n                    this._cells[this._cells.length] = cell;\n                    cellIndex = toIndex + i;\n                } else {\n                    cell = this._cells.pop();\n                    this._cells.unshift(cell);\n                    cellIndex = toIndex - i;\n                }\n                let pos = Math.floor(cellIndex / lineX) * this._cellSize;\n                this._isVertical ? cell.y = pos : cell.x = pos;\n                this.renderItem(cell, cellIndex);\n            }\n            this._startIndex = index;\n            this.changeSelectStatus();\n        } else {\n            let num = (lineY + 1);\n            if (this._createdLine - scrollLine < num) {\n                this._createItems(this._createdLine, lineX, this._createdLine + num);\n                this.renderItems(this._createdLine * lineX, 0);\n                this._createdLine += num;\n            }\n        }\n\n        let r = this._content._style.scrollRect;\n        if (this._isVertical) {\n            r.y = scrollValue - this._offset.y;\n            r.x = -this._offset.x;\n        } else {\n            r.y = -this._offset.y;\n            r.x = scrollValue - this._offset.x;\n        }\n        this._content.scrollRect = r;\n    }\n\n    private posCell(cell: UIComponent, cellIndex: number): void {\n        if (!this._scrollBar) return;\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\n        //let lineY = (this._isVertical ? this.repeatY : this.repeatX);\n        let pos = Math.floor(cellIndex / lineX) * this._cellSize;\n        this._isVertical ? cell._y = pos : cell.x = pos;\n    }\n\n    /**\n     * 表示当前选择的项索引。selectedIndex值更改会引起list重新渲染\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this._selectedIndex = value;\n            this.changeSelectStatus();\n            this.event(Event.CHANGE);\n            this.selectHandler && this.selectHandler.runWith(value);\n            //选择发生变化，自动渲染一次\n            this.startIndex = this._startIndex;\n        }\n    }\n\n    /**\n     * @private\n     * 改变单元格的选择状态。\n     */\n    protected changeSelectStatus(): void {\n        for (let i: number = 0, n: number = this._cells.length; i < n; i++) {\n            this.changeCellState(this._cells[i], this._selectedIndex === this._startIndex + i, 1);\n        }\n    }\n\n    /**\n     * 当前选中的单元格数据源。\n     */\n    get selectedItem(): any {\n        if (!this._array) return null;\n        return this._selectedIndex != -1 ? this._array[this._selectedIndex] : null;\n    }\n\n    set selectedItem(value: any) {\n        this._array && (this.selectedIndex = this._array.indexOf(value));\n    }\n\n    /**\n     * 获取或设置当前选择的单元格对象。\n     */\n    get selection(): UIComponent {\n        return this.getCell(this._selectedIndex);\n    }\n\n    set selection(value: UIComponent) {\n        this.selectedIndex = this._startIndex + this._cells.indexOf(value);\n    }\n\n    /**\n     * 当前显示的单元格列表的开始索引。\n     */\n    get startIndex(): number {\n        return this._startIndex;\n    }\n\n    set startIndex(value: number) {\n        this._startIndex = value > 0 ? value : 0;\n        this.callLater(this.renderItems);\n    }\n\n    /**\n     * @private\n     * 渲染单元格列表。\n     */\n    protected renderItems(from: number = 0, to: number = 0): void {\n        for (let i = from, n = to || this._cells.length; i < n; i++) {\n            this.renderItem(this._cells[i], this._startIndex + i);\n        }\n        this.changeSelectStatus();\n    }\n\n    /**\n     * 渲染一个单元格。\n     * @param cell 需要渲染的单元格对象。\n     * @param index 单元格索引。\n     */\n    protected renderItem(cell: UIComponent, index: number): void {\n        if (!this._array || index >= 0 && index < this._array.length) {\n            cell.visible = true;\n\n            if (this._array) {\n                if ((cell as any)[\"_$bindData\"]) {\n                    cell[\"_dataSource\"] = this._array[index];\n                    this._bindData(cell, this._array[index]);\n                } else\n                    cell.dataSource = this._array[index];\n            }\n\n            if (!this.cacheContent) {\n                //TODO:\n                this.posCell(cell, index);\n            }\n            if (this.hasListener(Event.RENDER)) this.event(Event.RENDER, [cell, index]);\n            if (this.renderHandler) this.renderHandler.runWith([cell, index]);\n        } else {\n            cell.visible = false;\n            cell.dataSource = null;\n        }\n    }\n\n    private _bindData(cell: any, data: any): void {\n        let arr: any[] = cell._$bindData;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            let ele: any = arr[i++];\n            let prop: string = arr[i++];\n            let value: string = arr[i];\n            let fun = UIUtils.getBindFun(value);\n            ele[prop] = fun.call(this, data);\n        }\n    }\n\n    /**\n     * 列表数据源。\n     */\n    get array(): any[] {\n        return this._array as any[];\n    }\n\n    private _preLen = 0;\n\n    set array(value: any[]) {\n        this.runCallLater(this.changeCells);\n        this._array = value || [];\n        this._preLen = this._array.length;\n        let length = this._array.length;\n        this.totalPage = Math.ceil(length / (this.repeatX * this.repeatY));\n        //重设selectedIndex\n        this._selectedIndex = this._selectedIndex < length ? this._selectedIndex : length - 1;\n        //重设startIndex\n        this.startIndex = this._startIndex;\n        //重设滚动条\n        if (this._scrollBar) {\n            //根据开关决定滚动条是否停止，默认在重设的时候会停止滚动\n            (!this.disableStopScroll && this._scrollBar.stopScroll());\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\n            let lineCount = Math.ceil(length / numX);\n            let total = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage;\n            if (total > 1 && lineCount >= numY) {\n                this._scrollBar.scrollSize = this._cellSize;\n                this._scrollBar.thumbPercent = numY / lineCount;\n                this._scrollBar.setScroll(0, (lineCount - numY) * this._cellSize + this._cellOffset, this._scrollBar.value);\n            } else {\n                this._scrollBar.setScroll(0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * 更新数据源，不刷新list，只增加滚动长度\n     * @param\tarray 数据源\n     */\n    updateArray(array: any[]): void {\n        this._array = array;\n        if (this._array) {\n            let freshStart = this._preLen - this._startIndex;\n            if (freshStart >= 0)\n                this.renderItems(freshStart);\n            this._preLen = this._array.length;\n        }\n        if (this._scrollBar) {\n            let length = array.length;\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\n            let lineCount = Math.ceil(length / numX);\n            if (lineCount >= numY) {\n                this._scrollBar.thumbPercent = numY / lineCount;\n                this._scrollBar.slider[\"_max\"] = (lineCount - numY) * this._cellSize + this._cellOffset;\n            }\n\n        }\n    }\n\n    /**\n     * 列表的当前页码。\n     */\n    get page(): number {\n        return this._page;\n    }\n\n    set page(value: number) {\n        this._page = value\n        if (this._array) {\n            this._page = value > 0 ? value : 0;\n            this._page = this._page < this.totalPage ? this._page : this.totalPage - 1;\n            this.startIndex = this._page * this.repeatX * this.repeatY;\n        }\n    }\n\n    /**\n     * 列表的数据总个数。\n     */\n    get length(): number {\n        return this._array ? this._array.length : 0;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.selectedIndex = parseInt(value as string);\n        else if (value instanceof Array)\n            this.array = (<any[]>value)\n        else\n            super.set_dataSource(value);\n    }\n\n\n    /**\n     * 单元格集合。\n     */\n    get cells(): UIComponent[] {\n        this.runCallLater(this.changeCells);\n        return this._cells;\n    }\n\n    /**是否开启橡皮筋效果*/\n    get elasticEnabled(): boolean {\n        return this._elasticEnabled;\n    }\n\n    set elasticEnabled(value: boolean) {\n        this._elasticEnabled = value;\n        if (this._scrollBar) {\n            this._scrollBar.elasticDistance = value ? 200 : 0;\n        }\n    }\n\n    /**\n     * 刷新列表数据源。\n     */\n    refresh(): void {\n        this.array = this._array as any[];\n        //startIndex = _startIndex;\n    }\n\n    /**\n     * 获取单元格数据源。\n     * @param index 单元格索引。\n     */\n    getItem(index: number): any {\n        if (!this._array)\n            return null;\n        if (index > -1 && index < this._array.length) {\n            return this._array[index];\n        }\n        return null;\n    }\n\n    /**\n     * 修改单元格数据源。\n     * @param index 单元格索引。\n     * @param source 单元格数据源。\n     */\n    changeItem(index: number, source: any): void {\n        if (index > -1 && this._array && index < this._array.length) {\n            this._array[index] = source;\n            //如果是可视范围，则重新渲染\n            if (index >= this._startIndex && index < this._startIndex + this._cells.length) {\n                this.renderItem(this.getCell(index)!, index);\n            }\n        }\n    }\n\n    /**\n     * 设置单元格数据源。\n     * @param index 单元格索引。\n     * @param source 单元格数据源。\n     */\n    setItem(index: number, source: any): void {\n        this.changeItem(index, source);\n    }\n\n    /**\n     * 添加单元格数据源。\n     * @param source 数据源。\n     */\n    addItem(source: any): void {\n        if (!this.array) {\n            this.array = [source];\n        } else {\n            this._array!.push(source);\n        }\n        this.array = this._array as any[];\n    }\n\n    /**\n     * 添加单元格数据源到对应的数据索引处。\n     * @param souce 单元格数据源。\n     * @param index 索引。\n     */\n    addItemAt(souce: any, index: number): void {\n        this._array!.splice(index, 0, souce);\n        this.array = this._array!;\n    }\n\n    /**\n     * 通过数据源索引删除单元格数据源。\n     * @param index 需要删除的数据源索引值。\n     */\n    deleteItem(index: number): void {\n        if (this._array) {\n            this._array.splice(index, 1);\n            this.array = this._array;\n        }\n    }\n\n    /**\n     * 通过可视单元格索引，获取单元格。\n     * @param index 可视单元格索引。\n     * @return 单元格对象。\n     */\n    getCell(index: number): UIComponent | null {\n        this.runCallLater(this.changeCells);\n        if (index > -1 && this._cells) {\n            return this._cells[(index - this._startIndex) % this._cells.length];\n        }\n        return null;\n    }\n\n    /**\n     * <p>滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\n     * @param index 单元格在数据列表中的索引。\n     */\n    scrollTo(index: number): void {\n        if (this._scrollBar) {\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            this._scrollBar.value = Math.floor(index / numX) * this._cellSize;\n        } else {\n            this.startIndex = index;\n        }\n    }\n\n    /**\n     * <p>缓动滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\n     * @param index 单元格在数据列表中的索引。\n     * @param time\t缓动时间。\n     * @param complete\t缓动结束回掉\n     */\n    tweenTo(index: number, time: number = 200, complete: Handler | null = null): void {\n        if (this._scrollBar) {\n            this._scrollBar.stopScroll();\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            Tween.to(this._scrollBar, { value: Math.floor(index / numX) * this._cellSize }, time, null, complete, 0, true);\n        } else {\n            this.startIndex = index;\n            if (complete) complete.run();\n        }\n    }\n\n    /**@private */\n    protected _setCellChanged(): void {\n        if (!this._cellChanged) {\n            this._cellChanged = true;\n            this.callLater(this.changeCells);\n        }\n    }\n    /**@override */\n    protected commitMeasure(): void {\n        this.runCallLater(this.changeCells);\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Button } from \"./Button\";\nimport { List } from \"./List\";\nimport { ScrollType, Styles } from \"./Styles\";\nimport { Label } from \"./Label\";\nimport { UIUtils } from \"./UIUtils\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { Graphics } from \"../display/Graphics\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\n\n/**\n * 当用户更改 <code>ComboBox</code> 组件中的选定内容时调度。\n * @eventType laya.events.Event\n * selectedIndex属性变化时调度。\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ComboBox</code> 组件包含一个下拉列表，用户可以从该列表中选择单个值。\n *\n * @example <caption>以下示例代码，创建了一个 <code>ComboBox</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.ComboBox;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class ComboBox_Example\n *\t\t{\n *\t\t\tpublic function ComboBox_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar comboBox:ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\n *\t\t\t\tcomboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *\t\t\t\tcomboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *\t\t\t\tcomboBox.selectHandler = new Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选中的项对象索引： \",index);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高。\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete() {\n *     console.log(\"资源加载完成！\");\n *     var comboBox = new laya.ui.ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\n *     comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *     comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *     comboBox.selectHandler = new laya.utils.Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\n *     Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\n * }\n * function onSelect(index)\n * {\n *     console.log(\"当前选中的项对象索引： \",index);\n * }\n * @example\n * import ComboBox = laya.ui.ComboBox;\n * import Handler = laya.utils.Handler;\n * class ComboBox_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/button.png\", Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         console.log(\"资源加载完成！\");\n *         var comboBox: ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\n *         comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *         comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *         comboBox.selectHandler = new Handler(this, this.onSelect);//设置 comboBox 选择项改变时执行的处理器。\n *         Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选中的项对象索引： \", index);\n *     }\n * }\n *\n */\nexport class ComboBox extends UIComponent {\n    /**@private */\n    protected _visibleNum: number = 6;\n    /**\n     * @private\n     */\n    protected _button: Button;\n    /**\n     * @private\n     */\n    protected _list: List;\n    /**\n     * @private\n     */\n    protected _isOpen: boolean;\n    /**\n     * @private\n     */\n    protected _itemColors: string[];\n    /**\n     * @private\n     */\n    protected _itemPadding: number[];\n    /**\n     * @private\n     */\n    protected _itemSize: number = 12;\n    /**\n     * @private\n     */\n    protected _labels: string[] = [];\n    /**\n     * @private\n     * 下拉提示文本\n     */\n    protected _defaultLabel: string = '';\n    /**\n     * @private\n     */\n    protected _selectedIndex: number = -1;\n    /**\n     * @private\n     */\n    protected _selectHandler: Handler;\n    /**\n     * @private 下拉框列表单元的高度\n     */\n    protected _itemHeight: number;\n    /**\n     * @private\n     */\n    protected _listHeight: number;\n    /**\n     * @private\n     */\n    protected _listChanged: boolean;\n    /**\n     * @private\n     */\n    protected _itemChanged: boolean;\n    /**\n     * @private\n     */\n    protected _scrollBarSkin: string;\n    protected _scrollType: ScrollType = 0;\n    /**\n     * @private\n     */\n    protected _isCustomList: boolean;\n    /**\n     * 渲染项，用来显示下拉列表展示对象\n     */\n    itemRender: any = null;\n\n    /**\n     * 创建一个新的 <code>ComboBox</code> 组件实例。\n     * @param skin 皮肤资源地址。\n     * @param labels 下拉列表的标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\n     */\n    constructor(skin: string = null, labels: string = null) {\n        super();\n\n        this._itemColors = Styles.comboBoxItemColors;\n        this._itemPadding = [3, 3, 3, 3];\n\n        this.skin = skin;\n        this.labels = labels;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\n        super.destroy(destroyChild);\n        this._button && this._button.destroy(destroyChild);\n        this._list && this._list.destroy(destroyChild);\n        this._button = null;\n        this._list = null;\n        this._itemColors = null;\n        this._itemPadding = null;\n        this._itemHeight = null;\n        this._labels = null;\n        this._selectHandler = null;\n        this._defaultLabel = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected createChildren(): void {\n        this._button = new Button();\n        this._button.hideFlags = HideFlags.HideAndDontSave;\n        this._button.text.align = \"left\";\n        this._button.labelPadding = \"0,0,0,5\";\n        this._button.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\n        this.addChild(this._button);\n    }\n\n    private _createList(): void {\n        this._list = new List();\n        this._list.hideFlags = HideFlags.HideAndDontSave;\n        this._list.scrollType = this._scrollType;\n        if (this._scrollBarSkin)\n            this._list.vScrollBarSkin = this._scrollBarSkin;\n        this._setListEvent(this._list);\n    }\n\n    private _setListEvent(list: List): void {\n        this._list.selectEnable = true;\n        this._list.on(Event.MOUSE_DOWN, this, this.onListDown);\n        this._list.mouseHandler = Handler.create(this, this.onlistItemMouse, null, false);\n        if (this._list.scrollBar) this._list.scrollBar.on(Event.MOUSE_DOWN, this, this.onScrollBarDown);\n    }\n\n    /**\n     * @private\n     */\n    private onListDown(e: Event): void {\n        e.stopPropagation();\n    }\n\n    private onScrollBarDown(e: Event): void {\n        e.stopPropagation();\n    }\n\n    private onButtonMouseDown(e: Event): void {\n        this.callLater(this.switchTo, [!this._isOpen]);\n    }\n\n    get skin(): string {\n        return this._button.skin;\n    }\n\n    set skin(value: string) {\n        if (this._button.skin != value) {\n            this._button.skin = value;\n            this._listChanged = true;\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureWidth(): number {\n        return this._button.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        return this._button.height;\n    }\n\n    /**\n     * @private\n     */\n    protected changeList(): void {\n        this._listChanged = false;\n        var labelWidth: number = this.width - 2;\n        var labelColor: string = this._itemColors[2];\n        this._itemHeight = (this._itemHeight) ? this._itemHeight : this._itemSize + 6;\n        let _padding: string = (this.itemPadding) ? this.itemPadding : \"3,3,3,3\";\n        this._list.itemRender = this.itemRender || { type: \"Box\", child: [{ type: \"Label\", props: { name: \"label\", x: 1, padding: _padding, width: labelWidth, height: this._itemHeight, fontSize: this._itemSize, color: labelColor } }] };\n        this._list.repeatY = this._visibleNum;\n        this._list.refresh();\n    }\n\n    /**\n     * @private\n     * 下拉列表的鼠标事件响应函数。\n     */\n    protected onlistItemMouse(e: Event, index: number): void {\n        let type: string = e.type;\n        if (type === Event.MOUSE_OVER || type === Event.MOUSE_OUT) {\n            if (this._isCustomList) return;\n            let box = this._list.getCell(index);\n            if (!box) return;\n            let label: Label = (<Label>box.getChildByName(\"label\"));\n            if (label) {\n                if (type === Event.ROLL_OVER) {\n                    label.bgColor = this._itemColors[0];\n                    label.color = this._itemColors[1];\n                } else {\n                    label.bgColor = null;\n                    label.color = this._itemColors[2];\n                }\n            }\n        } else if (type === Event.CLICK) {\n            this.selectedIndex = index;\n            this.isOpen = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    private switchTo(value: boolean): void {\n        this.isOpen = value;\n    }\n\n    /**\n     * 更改下拉列表的打开状态。\n     */\n    protected changeOpen(): void {\n        this.isOpen = !this._isOpen;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._button.width = this._width;\n        this._itemChanged = true;\n        this._listChanged = true;\n    }\n\n    /**\n     * 下拉列表文本的边距Padding\n     * @readme <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\n     */\n    get itemPadding(): string {\n        return this._itemPadding.join(\",\");\n    }\n\n    set itemPadding(value: string) {\n        this._itemPadding = UIUtils.fillArray(this._itemPadding, value, Number);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._button.height = this._height;\n    }\n\n    /**\n     * 标签集合字符串。\n     */\n    get labels(): string {\n        return this._labels.join(\",\");\n    }\n\n    set labels(value: string) {\n        if (this._labels.length > 0)\n            this.selectedIndex = -1;\n        if (value)\n            this._labels = value.split(\",\");\n        else\n            this._labels.length = 0;\n        this._itemChanged = true;\n    }\n\n    /**\n     * 更改下拉列表。\n     */\n    protected changeItem(): void {\n        this._itemChanged = false;\n        //显示边框\n        this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight;\n        if (!this._isCustomList) {\n            //填充背景\n            var g: Graphics = this._list.graphics;\n            g.clear();\n            g.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);\n        }\n\n        //填充数据\n        let a: any[] = this._list.array || [];\n        a.length = 0;\n        for (let i = 0, n = this._labels.length; i < n; i++) {\n            a.push({ label: this._labels[i] });\n        }\n        this._list.size(this.width, this._listHeight);\n        this._list.array = a;\n\n        //if (_visibleNum > a.length) {\n        //_list.height = _listHeight;\n        //} else {\n        //_list.height = 0;\n        //}\n    }\n\n    /**\n     * 表示选择的下拉列表项的索引。\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this._selectedIndex = value;\n\n            if (this._labels.length > 0)\n                this.changeSelected();\n            else\n                this.callLater(this.changeSelected);\n\n            this.event(Event.CHANGE, Event.EMPTY);\n            this._selectHandler && this._selectHandler.runWith(this._selectedIndex);\n        }\n    }\n\n    private changeSelected(): void {\n        this._button.label = this.selectedLabel;\n    }\n\n    /**\n    * 默认的下拉提示文本。\n    */\n    get defaultLabel(): string {\n        return this._defaultLabel;\n    }\n\n    set defaultLabel(value: string) {\n        this._defaultLabel = value;\n        this._selectedIndex < 0 && (this._button.label = value);\n    }\n\n    /**\n     * 改变下拉列表的选择项时执行的处理器(默认返回参数index:int)。\n     */\n    get selectHandler(): Handler {\n        return this._selectHandler;\n    }\n\n    set selectHandler(value: Handler) {\n        this._selectHandler = value;\n    }\n\n    /**\n     * 表示选择的下拉列表项的的标签。\n     */\n    get selectedLabel(): string {\n        return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : this.defaultLabel;\n    }\n\n    set selectedLabel(value: string) {\n        this.selectedIndex = this._labels.indexOf(value);\n    }\n\n    /**\n     * 获取或设置没有滚动条的下拉列表中可显示的最大行数。\n     */\n    get visibleNum(): number {\n        return this._visibleNum;\n    }\n\n    set visibleNum(value: number) {\n        this._visibleNum = value;\n        this._listChanged = true;\n    }\n\n\n    /**\n     * 下拉列表项的高度\n     */\n    get itemHeight(): number {\n        return this._itemHeight;\n    }\n    set itemHeight(value: number) {\n        this._itemHeight = value;\n        this._listChanged = true;\n    }\n\n    /**\n     * 下拉列表项颜色。\n     * <p><b>格式：</b>\"悬停或被选中时背景颜色,悬停或被选中时标签颜色,标签颜色,边框颜色,背景颜色\"</p>\n     */\n    get itemColors(): string {\n        return this._itemColors.join(\",\");\n    }\n\n    set itemColors(value: string) {\n        this._itemColors = UIUtils.fillArray(this._itemColors, value, String);\n        this._listChanged = true;\n    }\n\n    /**\n     * 下拉列表项标签的字体大小。\n     */\n    get itemSize(): number {\n        return this._itemSize;\n    }\n\n    set itemSize(value: number) {\n        this._itemSize = value;\n        this._listChanged = true;\n    }\n\n    /**\n     * 表示下拉列表的打开状态。\n     */\n    get isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    set isOpen(value: boolean) {\n        //var Laya = ILaya.Laya;\n        if (this._isOpen != value) {\n            this._isOpen = value;\n            this._button.selected = this._isOpen;\n            if (this._isOpen) {\n                this._list || this._createList();\n                this._listChanged && !this._isCustomList && this.changeList();\n                this._itemChanged && this.changeItem();\n\n                var p: Point = this.localToGlobal(Point.TEMP.setTo(0, 0));\n                var py: number = p.y + this._button.height;\n                py = py + this._listHeight <= ILaya.stage.height ? py : p.y - this._listHeight < 0 ? py : p.y - this._listHeight;\n\n                this._list.pos(p.x, py);\n                this._list.zOrder = 1001;\n\n                ILaya.stage.addChild(this._list);\n                //Laya.stage.once(Event.MOUSE_DOWN, this, removeList);\n                //Laya.stage.on(Event.MOUSE_WHEEL, this, _onStageMouseWheel);\n                //parent.addChild(_list);\n                ILaya.stage.once(Event.MOUSE_DOWN, this, this.removeList);\n                ILaya.stage.on(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\n                this._list.selectedIndex = this._selectedIndex;\n            } else {\n                this._list && this._list.removeSelf();\n            }\n        }\n    }\n\n    private _onStageMouseWheel(e: Event): void {\n        if (!this._list || this._list.contains(e.target)) return;\n        this.removeList(null);\n    }\n\n    /**\n     * 关闭下拉列表。\n     */\n    protected removeList(e: Event): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\n        this.isOpen = false;\n    }\n\n    /**\n     * 滚动类型\n     */\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n    }\n\n    /**\n     * 滚动条皮肤。\n     */\n    get scrollBarSkin(): string {\n        return this._scrollBarSkin;\n    }\n\n    set scrollBarSkin(value: string) {\n        this._scrollBarSkin = value;\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._button.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this._button.sizeGrid = value;\n    }\n\n    /**\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>VScrollBar</code> 滚动条组件的引用。\n     */\n    get scrollBar(): VScrollBar {\n        return (<VScrollBar>this.list.scrollBar);\n    }\n\n    /**\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的引用。\n     */\n    get button(): Button {\n        return this._button;\n    }\n\n    /**\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>List</code> 列表组件的引用。\n     */\n    get list(): List {\n        this._list || this._createList();\n        return this._list;\n    }\n\n    set list(value: List) {\n        if (value) {\n            value.removeSelf();\n            this._isCustomList = true;\n            this._list = value;\n            this._setListEvent(value);\n            this._itemHeight = value.getCell(0).height + value.spaceY;\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.selectedIndex = parseInt(value as string);\n        else if (value instanceof Array)\n            this.labels = ((<any[]>value)).join(\",\");\n        else\n            super.set_dataSource(value);\n    }\n\n    /**\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本标签颜色。\n     * <p><b>格式：</b>upColor,overColor,downColor</p>\n     */\n    get labelColors(): string {\n        return this._button.labelColors;\n    }\n\n    set labelColors(value: string) {\n        if (this._button.labelColors != value) {\n            this._button.labelColors = value;\n        }\n    }\n\n    /**\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本边距。\n     * <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\n     */\n    get labelPadding(): string {\n        return this._button.text.padding.join(\",\");\n    }\n\n    set labelPadding(value: string) {\n        this._button.text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\n    }\n\n    /**\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的标签字体大小。\n     */\n    get labelSize(): number {\n        return this._button.text.fontSize;\n    }\n\n    set labelSize(value: number) {\n        this._button.text.fontSize = value\n    }\n\n    /**\n     * 表示按钮文本标签是否为粗体字。\n     * @see laya.display.Text#bold\n     */\n    get labelBold(): boolean {\n        return this._button.text.bold;\n    }\n\n    set labelBold(value: boolean) {\n        this._button.text.bold = value\n    }\n\n    /**\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\n     * @see laya.display.Text#font\n     */\n    get labelFont(): string {\n        return this._button.text.font;\n    }\n\n    set labelFont(value: string) {\n        this._button.text.font = value\n    }\n\n    /**\n     * 表示按钮的状态值。\n     * @see laya.ui.Button#stateNum\n     */\n    get stateNum(): number {\n        return this._button.stateNum;\n    }\n\n    set stateNum(value: number) {\n        this._button.stateNum = value\n    }\n}","import { Scene } from \"../display/Scene\"\nimport { UIComponent } from \"./UIComponent\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * <code>View</code> 是一个视图类\n * 在2.0里，View继承自Scene类，但这是不合理的，Scene是一个2D+3D的大概念。所以在3.0里请忽略这个继承。\n */\nexport class View extends Scene {\n    /**@private 兼容老版本*/\n    static uiMap: any = {};\n    /**@internal */\n    _watchMap: any = {};\n    /**@private 控件的数据源。 */\n    protected _dataSource: any;\n\n    constructor() {\n        super(false);   // 先不要createChildren 因为 this._widget还没有赋值\n\n        //3.0里View并不是Scene\n        this._scene = null;\n\n        this.createChildren();\n    }\n\n    /**\n     * @private 兼容老版本\n     * 注册UI配置信息，比如注册一个路径为\"test/TestPage\"的页面，UI内容是IDE生成的json\n     * @param\turl\t\tUI的路径\n     * @param\tjson\tUI内容\n     */\n    static regUI(url: string, json: any): void {\n        ILaya.loader.cacheRes(url, json);\n    }\n\n\n    /**@private */\n    changeData(key: string): void {\n        let arr: any[] = this._watchMap[key];\n        if (!arr) return;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            let watcher: any = arr[i];\n            watcher.exe(this);\n        }\n    }\n\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        for (let name in value) {\n            let comp = this.getChildByName(name);\n            if (comp instanceof UIComponent)\n                comp.dataSource = value[name];\n            else if (name in this && !((this as any)[name] instanceof Function))\n                (this as any)[name] = value[name];\n        }\n    }\n}","import { UIConfig } from \"./../../UIConfig\";\nimport { NodeFlags } from \"../Const\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Box } from \"./Box\"\nimport { Dialog } from \"./Dialog\"\nimport { UIComponent } from \"./UIComponent\"\nimport { Ease } from \"../utils/Ease\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\nimport { ILaya } from \"../../ILaya\";\n\n/**打开任意窗口后调度。\n * @eventType Event.OPEN\n */\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\n/**关闭任意窗口后调度。\n * @eventType Event.CLOSE\n */\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>DialogManager</code> 对话框管理容器，所有的对话框都在该容器内，并且受管理器管理。\n * 任意对话框打开和关闭，都会出发管理类的open和close事件\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭，点击窗口是否切换层次等\n * 通过设置对话框的zOrder属性，可以更改弹出的层次\n */\nexport class DialogManager extends Sprite {\n    /**遮罩层*/\n    maskLayer: Sprite = new Sprite();\n    /**锁屏层*/\n    lockLayer: Sprite;\n\n    /**@private 全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\n    popupEffect = (dialog: Dialog)=>{\n        dialog.scale(1, 1);\n        dialog._effectTween = Tween.from(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.backOut, Handler.create(this, this.doOpen, [dialog]), 0, false, false);\n    }\n\n    /**@private 全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\n    closeEffect = (dialog: Dialog)=>{\n        dialog._effectTween = Tween.to(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.strongOut, Handler.create(this, this.doClose, [dialog]), 0, false, false);\n    }\n\n    /**全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\n    popupEffectHandler: Handler = new Handler(this, this.popupEffect);\n    /**全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\n    closeEffectHandler: Handler = new Handler(this, this.closeEffect);\n\n    /**\n     * 创建一个新的 <code>DialogManager</code> 类实例。\n     */\n    constructor() {\n        super();\n        this.mouseEnabled = this.maskLayer.mouseEnabled = true;\n        this.zOrder = 1000;\n        ILaya.stage.addChild(this);\n        ILaya.stage.on(Event.RESIZE, this, this._onResize);\n        if (UIConfig.closeDialogOnSide) this.maskLayer.on(\"click\", this, this._closeOnSide);\n        this._onResize(null);\n    }\n\n    private _closeOnSide(): void {\n        var dialog: Dialog = (<Dialog>this.getChildAt(this.numChildren - 1));\n        if (dialog instanceof Dialog) dialog.close(\"side\");\n    }\n\n    /**设置锁定界面，如果为空则什么都不显示*/\n    setLockView(value: UIComponent): void {\n        if (!this.lockLayer) {\n            this.lockLayer = new Box();\n            this.lockLayer.mouseEnabled = true;\n            this.lockLayer.size(ILaya.stage.width, ILaya.stage.height);\n        }\n        this.lockLayer.removeChildren();\n        if (value) {\n            value.centerX = value.centerY = 0;\n            this.lockLayer.addChild(value);\n        }\n    }\n\n    /**@private */\n    private _onResize(e: Event = null): void {\n        var width: number = this.maskLayer.width = ILaya.stage.width;\n        var height: number = this.maskLayer.height = ILaya.stage.height;\n        if (this.lockLayer) this.lockLayer.size(width, height);\n\n        this.maskLayer.graphics.clear(true);\n        this.maskLayer.graphics.drawRect(0, 0, width, height, UIConfig.popupBgColor);\n        this.maskLayer.alpha = UIConfig.popupBgAlpha;\n\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item.isPopupCenter) this._centerDialog(item);\n        }\n    }\n\n    private _centerDialog(dialog: Dialog): void {\n        dialog.x = Math.round(((ILaya.stage.width - dialog.width) >> 1) + dialog.pivotX);\n        dialog.y = Math.round(((ILaya.stage.height - dialog.height) >> 1) + dialog.pivotY);\n    }\n\n    /**\n     * 显示对话框\n     * @param dialog 需要显示的对象框 <code>Dialog</code> 实例。\n     * @param closeOther 是否关闭其它对话框，若值为ture，则关闭其它的对话框。\n     * @param showEffect 是否显示弹出效果\n     */\n    open(dialog: Dialog, closeOther: boolean = false, showEffect: boolean = false): void {\n        if (closeOther) this._closeAll();\n        this._clearDialogEffect(dialog);\n        if (dialog.isPopupCenter) this._centerDialog(dialog);\n        this.addChild(dialog);\n        if (dialog.isModal || this._getBit(NodeFlags.HAS_ZORDER)) ILaya.timer.callLater(this, this._checkMask);\n        if (showEffect && dialog.popupEffect != null) dialog.popupEffect.runWith(dialog);\n        else this.doOpen(dialog);\n        this.event(Event.OPEN);\n    }\n\n    /**@private */\n    private _clearDialogEffect(dialog: Dialog): void {\n        if (dialog._effectTween) {\n            Tween.clear(dialog._effectTween);\n            dialog._effectTween = null;\n        }\n    }\n\n    /**\n     * 执行打开对话框。\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\n     */\n    doOpen(dialog: Dialog): void {\n        dialog.onOpened(dialog._param);\n    }\n\n    /**\n     * 锁定所有层，显示加载条信息，防止双击\n     */\n    lock(value: boolean): void {\n        if (this.lockLayer) {\n            if (value) this.addChild(this.lockLayer);\n            else this.lockLayer.removeSelf();\n        }\n    }\n\n    /**\n     * 关闭对话框。\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\n     */\n    close(dialog: Dialog): void {\n        this._clearDialogEffect(dialog);\n        if (dialog.isShowEffect && dialog.closeEffect != null) dialog.closeEffect.runWith([dialog]);\n        else this.doClose(dialog);\n        this.event(Event.CLOSE);\n    }\n\n    /**\n     * 执行关闭对话框。\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\n     */\n    doClose(dialog: Dialog): void {\n        dialog.removeSelf();\n        dialog.isModal && this._checkMask();\n        dialog.closeHandler && dialog.closeHandler.runWith(dialog.closeType);\n        dialog.onClosed(dialog.closeType);\n        if (dialog.autoDestroyAtClosed) dialog.destroy();\n    }\n\n    /**\n     * 关闭所有的对话框。\n     */\n    closeAll(): void {\n        this._closeAll();\n        this.event(Event.CLOSE);\n    }\n\n    /**@private */\n    private _closeAll(): void {\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item && item.close != null) {\n                this.doClose(item);\n            }\n        }\n    }\n\n    /**\n     * 根据组获取所有对话框\n     * @param\tgroup 组名称\n     * @return\t对话框数组\n     */\n    getDialogsByGroup(group: string): any[] {\n        var arr: any[] = [];\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item && item.group === group) {\n                arr.push(item);\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * 根据组关闭所有弹出框\n     * @param\tgroup 需要关闭的组名称\n     * @return\t需要关闭的对话框数组\n     */\n    closeByGroup(group: string): any[] {\n        var arr: any[] = [];\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item && item.group === group) {\n                item.close();\n                arr.push(item);\n            }\n        }\n        return arr;\n    }\n\n    /**@internal 发生层次改变后，重新检查遮罩层是否正确*/\n    _checkMask(): void {\n        this.maskLayer.removeSelf();\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var dialog: Dialog = (<Dialog>this.getChildAt(i));\n            if (dialog && dialog.isModal) {\n                //trace(numChildren,i);\n                this.addChildAt(this.maskLayer, i);\n                return;\n            }\n        }\n    }\n}","import { View } from \"./View\";\nimport { DialogManager } from \"./DialogManager\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Button } from \"./Button\";\nimport { UIComponent } from \"./UIComponent\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\n\n/**\n * <code>Dialog</code> 组件是一个弹出对话框，实现对话框弹出，拖动，模式窗口功能。\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭等\n * 通过设置zOrder属性，可以更改弹出的层次\n * 通过设置popupEffect和closeEffect可以设置弹出效果和关闭效果，如果不想有任何弹出关闭效果，可以设置前述属性为空\n *\n * @example <caption>以下示例代码，创建了一个 <code>Dialog</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Dialog;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class Dialog_Example\n *\t\t{\n *\t\t\tprivate var dialog:Dialog_Instance;\n *\t\t\tpublic function Dialog_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tdialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\n *\t\t\t\tdialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\n *\t\t\t\tdialog.show();//显示 dialog。\n *\t\t\t\tdialog.closeHandler = new Handler(this, onClose);//设置 dialog 的关闭函数处理器。\n *\t\t\t}\n *\t\t\tprivate function onClose(name:String):void\n *\t\t\t{\n *\t\t\t\tif (name == Dialog.CLOSE)\n *\t\t\t\t{\n *\t\t\t\t\ttrace(\"通过点击 name 为\" + name +\"的组件，关闭了dialog。\");\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}\n *\t}\n *\timport laya.ui.Button;\n *\timport laya.ui.Dialog;\n *\timport laya.ui.Image;\n *\tclass Dialog_Instance extends Dialog\n *\t{\n *\t\tfunction Dialog_Instance():void\n *\t\t{\n *\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");\n *\t\t\tbg.sizeGrid = \"40,10,5,10\";\n *\t\t\tbg.width = 150;\n *\t\t\tbg.height = 250;\n *\t\t\taddChild(bg);\n *\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");\n *\t\t\taddChild(image);\n *\t\t\tvar button:Button = new Button(\"resource/ui/btn_close.png\");\n *\t\t\tbutton.name = Dialog.CLOSE;//设置button的name属性值。\n *\t\t\tbutton.x = 0;\n *\t\t\tbutton.y = 0;\n *\t\t\taddChild(button);\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var dialog;\n * Laya.loader.load(\"resource/ui/btn_close.png\", laya.utils.Handler.create(this, loadComplete));//加载资源\n * (function (_super) {//新建一个类Dialog_Instance继承自laya.ui.Dialog。\n *     function Dialog_Instance() {\n *         Dialog_Instance.__super.call(this);//初始化父类\n *         var bg = new laya.ui.Image(\"resource/ui/bg.png\");//新建一个 Image 类的实例 bg 。\n *         bg.sizeGrid = \"10,40,10,5\";//设置 bg 的网格信息。\n *         bg.width = 150;//设置 bg 的宽度。\n *         bg.height = 250;//设置 bg 的高度。\n *         this.addChild(bg);//将 bg 添加到显示列表。\n *         var image = new laya.ui.Image(\"resource/ui/image.png\");//新建一个 Image 类的实例 image 。\n *         this.addChild(image);//将 image 添加到显示列表。\n *         var button = new laya.ui.Button(\"resource/ui/btn_close.png\");//新建一个 Button 类的实例 bg 。\n *         button.name = laya.ui.Dialog.CLOSE;//设置 button 的 name 属性值。\n *         button.x = 0;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *         button.y = 0;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *         this.addChild(button);//将 button 添加到显示列表。\n *     };\n *     Laya.class(Dialog_Instance,\"mypackage.dialogExample.Dialog_Instance\",_super);//注册类Dialog_Instance。\n * })(laya.ui.Dialog);\n * function loadComplete() {\n *     console.log(\"资源加载完成！\");\n *     dialog = new mypackage.dialogExample.Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\n *     dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\n *     dialog.show();//显示 dialog。\n *     dialog.closeHandler = new laya.utils.Handler(this, onClose);//设置 dialog 的关闭函数处理器。\n * }\n * function onClose(name) {\n *     if (name == laya.ui.Dialog.CLOSE) {\n *         console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\n *     }\n * }\n * @example\n * import Dialog = laya.ui.Dialog;\n * import Handler = laya.utils.Handler;\n * class Dialog_Example {\n *     private dialog: Dialog_Instance;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.dialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\n *         this.dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\n *         this.dialog.show();//显示 dialog。\n *         this.dialog.closeHandler = new Handler(this, this.onClose);//设置 dialog 的关闭函数处理器。\n *     }\n *     private onClose(name: string): void {\n *         if (name == Dialog.CLOSE) {\n *             console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\n *         }\n *     }\n * }\n * import Button = laya.ui.Button;\n * class Dialog_Instance extends Dialog {\n *     Dialog_Instance(): void {\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");\n *         bg.sizeGrid = \"40,10,5,10\";\n *         bg.width = 150;\n *         bg.height = 250;\n *         this.addChild(bg);\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");\n *         this.addChild(image);\n *         var button: Button = new Button(\"resource/ui/btn_close.png\");\n *         button.name = Dialog.CLOSE;//设置button的name属性值。\n *         button.x = 0;\n *         button.y = 0;\n *         this.addChild(button);\n *     }\n * }\n */\nexport class Dialog extends View {\n    /**对话框内的某个按钮命名为close，点击此按钮则会关闭*/\n    static CLOSE: string = \"close\";\n    /**对话框内的某个按钮命名为cancel，点击此按钮则会关闭*/\n    static CANCEL: string = \"cancel\";\n    /**对话框内的某个按钮命名为sure，点击此按钮则会关闭*/\n    static SURE: string = \"sure\";\n    /**对话框内的某个按钮命名为no，点击此按钮则会关闭*/\n    static NO: string = \"no\";\n    /**对话框内的某个按钮命名为yes，点击此按钮则会关闭*/\n    static YES: string = \"yes\";\n    /**对话框内的某个按钮命名为ok，点击此按钮则会关闭*/\n    static OK: string = \"ok\";\n\n    /**@private 表示对话框管理器。*/\n    private static _manager: DialogManager;\n\n    /**对话框管理容器，所有的对话框都在该容器内，并且受管理器管理，可以自定义自己的管理器，来更改窗口管理的流程。\n     * 任意对话框打开和关闭，都会触发管理类的open和close事件*/\n    static get manager(): DialogManager {\n        return Dialog._manager = Dialog._manager || new DialogManager();\n    }\n\n    static set manager(value: DialogManager) {\n        Dialog._manager = value;\n    }\n\n    /**\n     * 对话框被关闭时会触发的回调函数处理器。\n     * <p>回调函数参数为用户点击的按钮名字name:String。</p>\n     */\n    closeHandler: Handler;\n    /**\n     * 弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null\n     * 全局默认弹出效果可以通过manager.popupEffect修改\n     */\n    popupEffect: Handler;\n    /**\n     * 关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null\n     * 全局默认关闭效果可以通过manager.closeEffect修改\n     */\n    closeEffect: Handler;\n    /**组名称*/\n    group: string;\n    /**是否是模式窗口*/\n    isModal: boolean;\n    /**是否显示弹出效果*/\n    isShowEffect: boolean = true;\n    /**指定对话框是否居中弹。<p>如果值为true，则居中弹出，否则，则根据对象坐标显示，默认为true。</p>*/\n    isPopupCenter: boolean = true;\n    /**关闭类型，点击name为\"close\"，\"cancel\"，\"sure\"，\"no\"，\"yes\"，\"no\"的按钮时，会自动记录点击按钮的名称*/\n    closeType: string;\n    /**@private */\n    private _dragArea: Rectangle;\n    /**@internal */\n    _param: any;\n    /**@internal */\n    _effectTween: Tween;\n\n    constructor() {\n        super();\n        this.popupEffect = Dialog.manager.popupEffectHandler;\n        this.closeEffect = Dialog.manager.closeEffectHandler;\n        this._dealDragArea();\n        this.on(Event.CLICK, this, this._onClick);\n    }\n\n    /**@private 提取拖拽区域*/\n    protected _dealDragArea(): void {\n        var dragTarget: Sprite = (<Sprite>this.getChildByName(\"drag\"));\n        if (dragTarget) {\n            this.dragArea = dragTarget._x + \",\" + dragTarget._y + \",\" + dragTarget.width + \",\" + dragTarget.height;\n            dragTarget.removeSelf();\n        }\n    }\n\n    /**\n     * 用来指定对话框的拖拽区域。默认值为\"0,0,0,0\"。\n     * <p><b>格式：</b>构成一个矩形所需的 x,y,width,heith 值，用逗号连接为字符串。\n     * 例如：\"0,0,100,200\"。</p>\n     * @see #includeExamplesSummary 请参考示例\n     */\n    get dragArea(): string {\n        if (this._dragArea) return this._dragArea.toString();\n        return null;\n    }\n\n    set dragArea(value: string) {\n        if (value) {\n            var a: any[] = UIUtils.fillArray([0, 0, 0, 0], value, Number);\n            this._dragArea = new Rectangle(a[0], a[1], a[2], a[3]);\n            this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\n        } else {\n            this._dragArea = null;\n            this.off(Event.MOUSE_DOWN, this, this._onMouseDown);\n        }\n    }\n\n    /**@private */\n    private _onMouseDown(e: Event): void {\n        var point: Point = this.getMousePoint();\n        if (this._dragArea.contains(point.x, point.y)) this.startDrag();\n        else this.stopDrag();\n    }\n\n    /**@private 处理默认点击事件*/\n    protected _onClick(e: Event): void {\n        var btn: Button = (<Button>e.target);\n        if (btn) {\n            switch (btn.name) {\n                case Dialog.CLOSE:\n                case Dialog.CANCEL:\n                case Dialog.SURE:\n                case Dialog.NO:\n                case Dialog.OK:\n                case Dialog.YES:\n                    this.close(btn.name);\n                    return;\n            }\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    open(closeOther: boolean = true, param: any = null): void {\n        this._dealDragArea();\n        this._param = param;\n        Dialog.manager.open(this, closeOther, this.isShowEffect);\n        Dialog.manager.lock(false);\n    }\n\n    /**\n     * 关闭对话框。\n     * @param type 关闭的原因，会传递给onClosed函数\n     * @override\n     */\n    close(type: string = null): void {\n        this.closeType = type;\n        Dialog.manager.close(this);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this.closeHandler = null;\n        this.popupEffect = null;\n        this.closeEffect = null;\n        this._dragArea = null;\n        super.destroy(destroyChild);\n    }\n\n    /**\n     * 显示对话框（以非模式窗口方式显示）。\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\n     * @param showEffect 是否显示弹出效果\n     */\n    show(closeOther: boolean = false, showEffect: boolean = true): void {\n        this._open(false, closeOther, showEffect);\n    }\n\n    /**\n     * 显示对话框（以模式窗口方式显示）。\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\n     * @param showEffect 是否显示弹出效果\n     */\n    popup(closeOther: boolean = false, showEffect: boolean = true): void {\n        this._open(true, closeOther, showEffect);\n    }\n\n    /**@private */\n    protected _open(modal: boolean, closeOther: boolean, showEffect: boolean): void {\n        this.isModal = modal;\n        this.isShowEffect = showEffect;\n        Dialog.manager.lock(true);\n        this.open(closeOther);\n    }\n\n    /**弹出框的显示状态；如果弹框处于显示中，则为true，否则为false;*/\n    get isPopup(): boolean {\n        return this.parent != null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set zOrder(value: number) {\n        super.zOrder = value;\n        Dialog.manager._checkMask();\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get zOrder() {\n        return super.zOrder;\n    }\n\n    /**\n     * 设置锁定界面，在界面未准备好前显示锁定界面，准备完毕后则移除锁定层，如果为空则什么都不显示\n     * @param\tview 锁定界面内容\n     */\n    static setLockView(view: UIComponent): void {\n        Dialog.manager.setLockView(view);\n    }\n\n    /**\n     * 锁定所有层，显示加载条信息，防止下面内容被点击\n     */\n    static lock(value: boolean): void {\n        Dialog.manager.lock(value);\n    }\n\n    /**关闭所有对话框。*/\n    static closeAll(): void {\n        Dialog.manager.closeAll();\n    }\n\n    /**\n     * 根据组获取对话框集合\n     * @param\tgroup 组名称\n     * @return\t对话框数组\n     */\n    static getDialogsByGroup(group: string): any[] {\n        return Dialog.manager.getDialogsByGroup(group);\n    }\n\n    /**\n     * 根据组关闭所有弹出框\n     * @param\tgroup 需要关闭的组名称\n     */\n    static closeByGroup(group: string): any[] {\n        return Dialog.manager.closeByGroup(group);\n    }\n}","import { Event } from \"../events/Event\"\nimport { Texture } from \"../resource/Texture\"\nimport { Clip } from \"./Clip\"\n\n/**\n * 字体切片，简化版的位图字体，只需设置一个切片图片和文字内容即可使用，效果同位图字体\n * 使用方式：设置位图字体皮肤skin，设置皮肤对应的字体内容sheet（如果多行，可以使用空格换行），示例：\n * fontClip.skin = \"font1.png\";//设置皮肤\n * fontClip.sheet = \"abc123 456\";//设置皮肤对应的内容，空格换行。此皮肤为2行5列（显示时skin会被等分为2行5列），第一行对应的文字为\"abc123\"，第二行为\"456\"\n * fontClip.value = \"a1326\";//显示\"a1326\"文字\n */\nexport class FontClip extends Clip {\n    /**数值*/\n    protected _valueArr: string = '';\n    /**文字内容数组**/\n    protected _indexMap: Record<string, number> = null;\n    /**位图字体内容**/\n    protected _sheet: string = null;\n    /**@private */\n    protected _direction: string = \"horizontal\";\n    /**X方向间隙*/\n    protected _spaceX: number = 0;\n    /**Y方向间隙*/\n    protected _spaceY: number = 0;\n    /**@private 水平对齐方式*/\n    private _align: string = \"left\";\n    /**@private 显示文字宽*/\n    private _wordsW: number = 0;\n    /**@private 显示文字高*/\n    private _wordsH: number = 0;\n\n    /**\n     * @param skin 位图字体皮肤\n     * @param sheet 位图字体内容，空格代表换行\n     */\n    constructor(skin: string = null, sheet: string = null) {\n        super();\n        if (skin) this.skin = skin;\n        if (sheet) this.sheet = sheet;\n    }\n\n    /**\n     * 资源加载完毕\n     */\n    protected loadComplete(url: string, img: Texture): void {\n        super.loadComplete(url, img);\n        this.callLater(this.changeValue);\n    }\n\n\n    get index(): number {\n        return this._index;\n    }\n\n    set index(value: number) {\n        this._index = value;\n        ////屏蔽Clip类操作\n    }\n\n    /**\n     * 设置位图字体内容，空格代表换行。比如\"abc123 456\"，代表第一行对应的文字为\"abc123\"，第二行为\"456\"\n     */\n    get sheet(): string {\n        return this._sheet;\n    }\n\n    set sheet(value: string) {\n        value += \"\";\n        this._sheet = value;\n        //根据空格换行\n        var arr: any[] = value.split(\" \");\n        this._clipX = String(arr[0]).length;\n        this.clipY = arr.length;\n\n        this._indexMap = {};\n        for (var i: number = 0; i < this._clipY; i++) {\n            var line: any[] = arr[i].split(\"\");\n            for (var j: number = 0, n: number = line.length; j < n; j++) {\n                this._indexMap[line[j]] = i * this._clipX + j;\n            }\n        }\n    }\n\n    /**\n     * 设置位图字体的显示内容\n     */\n    get value(): string {\n        if (!this._valueArr) return \"\";\n        return this._valueArr;\n    }\n\n    set value(value: string) {\n        value += \"\";\n        this._valueArr = value;\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * 布局方向。\n     * <p>默认值为\"horizontal\"。</p>\n     * <p><b>取值：</b>\n     * <li>\"horizontal\"：表示水平布局。</li>\n     * <li>\"vertical\"：表示垂直布局。</li>\n     * </p>\n     */\n    get direction(): string {\n        return this._direction;\n    }\n\n    set direction(value: string) {\n        this._direction = value;\n        this.callLater(this.changeValue);\n    }\n\n    /**X方向文字间隙*/\n    get spaceX(): number {\n        return this._spaceX;\n    }\n\n    set spaceX(value: number) {\n        this._spaceX = value;\n        if (this._direction === \"horizontal\") this.callLater(this.changeValue);\n    }\n\n    /**Y方向文字间隙*/\n    get spaceY(): number {\n        return this._spaceY;\n    }\n\n    set spaceY(value: number) {\n        this._spaceY = value;\n        if (!(this._direction === \"horizontal\")) this.callLater(this.changeValue);\n    }\n\n\n    set align(v: string) {\n        this._align = v;\n        this.callLater(this.changeValue);\n    }\n\n    /**水平对齐方式*/\n    get align(): string {\n        return this._align;\n    }\n\n    /**渲染数值*/\n    protected changeValue(): void {\n        if (!this._sources) return;\n        if (!this._valueArr) return;\n        this.graphics.clear(true);\n        let texture: Texture;\n        texture = this._sources[0];\n        if (!texture) return;\n        var isHorizontal: boolean = (this._direction === \"horizontal\");\n        if (isHorizontal) {\n            this._wordsW = this._valueArr.length * (texture.sourceWidth + this.spaceX);\n            this._wordsH = texture.sourceHeight;\n        } else {\n            this._wordsW = texture.sourceWidth;\n            this._wordsH = (texture.sourceHeight + this.spaceY) * this._valueArr.length;\n        }\n        let dX: number = 0;\n        if (this._isWidthSet) {\n            switch (this._align) {\n                case \"center\":\n                    dX = 0.5 * (this._width - this._wordsW);\n                    break;\n                case \"right\":\n                    dX = this._width - this._wordsW;\n                    break;\n                default:\n                    dX = 0;\n            }\n        }\n\n        for (let i = 0, sz = this._valueArr.length; i < sz; i++) {\n            let index = this._indexMap[this._valueArr.charAt(i)];\n            texture = this._sources[index];\n            if (!texture)\n                continue;\n\n            if (isHorizontal)\n                this.graphics.drawImage(texture, dX + i * (texture.sourceWidth + this.spaceX), 0, texture.sourceWidth, texture.sourceHeight);\n            else\n                this.graphics.drawImage(texture, 0 + dX, i * (texture.sourceHeight + this.spaceY), texture.sourceWidth, texture.sourceHeight);\n        }\n\n        if (!this._isWidthSet) {\n            this._widget.resetLayoutX();\n            this.callLater(this._sizeChanged);\n        }\n        if (!this._isHeightSet) {\n            this._widget.resetLayoutY();\n            this.callLater(this._sizeChanged);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * @override\n     */\n    protected measureWidth(): number {\n        return this._wordsW;\n    }\n    /**\n     * @override\n     */\n    protected measureHeight(): number {\n        return this._wordsH;\n    }\n    /**\n     * \n     * @param destroyChild \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._valueArr = null;\n        this._indexMap = null;\n        this.graphics.clear(true);\n\n        super.destroy(destroyChild);\n    }\n}","import { Box } from \"./Box\";\nimport { Node } from \"../display/Node\"\nimport { Event } from \"../events/Event\"\n\n/**\n * <code>LayoutBox</code> 是一个布局容器类。\n */\nexport class LayoutBox extends Box {\n    /**@private */\n    protected _space: number = 0;\n    /**@private */\n    protected _align: string = \"none\";\n    /**@private */\n    protected _itemChanged: boolean = false;\n\n    /** \n     * @inheritDoc\t\n     * @override\n    */\n    addChild<T extends Node>(child: T): T {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setItemChanged();\n        return super.addChild(child);\n    }\n\n    private onResize(e: Event): void {\n        this._setItemChanged();\n    }\n\n    /** \n     * @inheritDoc\t\n     * @override\n    */\n    addChildAt(child: Node, index: number): Node {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setItemChanged();\n        return super.addChildAt(child, index);\n    }\n\n    /**\n     *  @inheritDoc\t\n     * @override\n    */\n    removeChildAt(index: number): Node {\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\n        this._setItemChanged();\n        return super.removeChildAt(index);\n    }\n\n    /** 刷新。*/\n    refresh(): void {\n        this._setItemChanged();\n    }\n\n    /**\n     * 改变子对象的布局。\n     */\n    protected changeItems(): void {\n        this._itemChanged = false;\n    }\n\n    /** 子对象的间隔。*/\n    get space(): number {\n        return this._space;\n    }\n\n    set space(value: number) {\n        this._space = value;\n        this._setItemChanged();\n    }\n\n    /** 子对象对齐方式。*/\n    get align(): string {\n        return this._align;\n    }\n\n    set align(value: string) {\n        this._align = value;\n        this._setItemChanged();\n    }\n\n    /**\n     * 排序项目列表。可通过重写改变默认排序规则。\n     * @param items  项目列表。\n     */\n    protected sortItem(items: any[]): void {\n        if (items) items.sort(function (a: any, b: any): number { return a.y - b.y; });\n    }\n\n    protected _setItemChanged(): void {\n        if (!this._itemChanged) {\n            this._itemChanged = true;\n            this.callLater(this.changeItems);\n        }\n    }\n}","import { LayoutBox } from \"./LayoutBox\";\nimport { UIComponent } from \"./UIComponent\";\n\n/**\n * <code>HBox</code> 是一个水平布局容器类。\n */\nexport class HBox extends LayoutBox {\n    /**\n     * 无对齐。\n     */\n    static NONE: string = \"none\";\n    /**\n     * 居顶部对齐。\n     */\n    static TOP: string = \"top\";\n    /**\n     * 居中对齐。\n     */\n    static MIDDLE: string = \"middle\";\n    /**\n     * 居底部对齐。\n     */\n    static BOTTOM: string = \"bottom\";\n\n    /** \n     * @inheritDoc\t\n     * @override\n     */\n    protected sortItem(items: any[]): void {\n        if (items) items.sort(function (a: any, b: any): number { return a.x - b.x; });\n    }\n    /**\n     * @inheritDoc\t\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this.callLater(this.changeItems);\n    }\n\n    /** \n     * @inheritDoc\t\n     * @override\n     */\n    protected changeItems(): void {\n        this._itemChanged = false;\n        var items: any[] = [];\n        var maxHeight = 0;\n        for (let i = 0, n = this.numChildren; i < n; i++) {\n            let item = (<UIComponent>this.getChildAt(i));\n            if (item) {\n                items.push(item);\n                maxHeight = this._isHeightSet ? this._height : Math.max(maxHeight, item.height * item.scaleY);\n            }\n        }\n        this.sortItem(items);\n        let left = 0;\n        for (let i = 0, n = items.length; i < n; i++) {\n            let item = items[i];\n            item.x = left;\n            left += item.width * item.scaleX + this._space;\n            if (this._align == HBox.TOP) {\n                item.y = 0;\n            } else if (this._align == HBox.MIDDLE) {\n                item.y = (maxHeight - item.height * item.scaleY) * 0.5;\n            } else if (this._align == HBox.BOTTOM) {\n                item.y = maxHeight - item.height * item.scaleY;\n            }\n        }\n        this._sizeChanged();\n    }\n}","import { Slider } from \"./Slider\";\n\n/**\n * 使用 <code>HSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\n * <p> <code>HSlider</code> 控件采用水平方向。滑块轨道从左向右扩展，而标签位于轨道的顶部或底部。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>HSlider</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.HSlider;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class HSlider_Example\n *\t\t{\n *\t\t\tprivate var hSlider:HSlider;\n *\t\t\tpublic function HSlider_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\thSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\n *\t\t\t\thSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\n *\t\t\t\thSlider.min = 0;//设置 hSlider 最低位置值。\n *\t\t\t\thSlider.max = 10;//设置 hSlider 最高位置值。\n *\t\t\t\thSlider.value = 2;//设置 hSlider 当前位置值。\n *\t\t\t\thSlider.tick = 1;//设置 hSlider 刻度值。\n *\t\t\t\thSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\n *\t\t\t\thSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\n *\t\t\t\thSlider.changeHandler = new Handler(this, onChange);//设置 hSlider 位置变化处理器。\n *\t\t\t\tLaya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800, \"canvas\");//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var hSlider;\n * var res = [\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"];\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));\n * function onLoadComplete() {\n *     console.log(\"资源加载完成！\");\n *     hSlider = new laya.ui.HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\n *     hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\n *     hSlider.min = 0;//设置 hSlider 最低位置值。\n *     hSlider.max = 10;//设置 hSlider 最高位置值。\n *     hSlider.value = 2;//设置 hSlider 当前位置值。\n *     hSlider.tick = 1;//设置 hSlider 刻度值。\n *     hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\n *     hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\n *     hSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 hSlider 位置变化处理器。\n *     Laya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\n * }\n * function onChange(value)\n * {\n *     console.log(\"滑块的位置： value=\" + value);\n * }\n * @example\n * import Handler = laya.utils.Handler;\n * import HSlider = laya.ui.HSlider;\n * class HSlider_Example {\n *     private hSlider: HSlider;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.hSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\n *         this.hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\n *         this.hSlider.min = 0;//设置 hSlider 最低位置值。\n *         this.hSlider.max = 10;//设置 hSlider 最高位置值。\n *         this.hSlider.value = 2;//设置 hSlider 当前位置值。\n *         this.hSlider.tick = 1;//设置 hSlider 刻度值。\n *         this.hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\n *         this.hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\n *         this.hSlider.changeHandler = new Handler(this, this.onChange);//设置 hSlider 位置变化处理器。\n *         Laya.stage.addChild(this.hSlider);//把 hSlider 添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滑块的位置： value=\" + value);\n *     }\n * }\n *\n * @see laya.ui.Slider\n*/\nexport class HSlider extends Slider {\n\n    /**\n     * 创建一个 <code>HSlider</code> 类实例。\n     * @param skin 皮肤。\n     */\n    constructor(skin: string = null) {\n        super(skin);\n        this.isVertical = false;\n    }\n}","import { Box } from \"./Box\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { Node } from \"../display/Node\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { HideFlags } from \"../Const\";\nimport { ScrollType } from \"./Styles\";\n\n/**\n * <code>Panel</code> 是一个面板容器类。\n */\nexport class Panel extends Box {\n    /**@private */\n    protected _content: Box;\n    /**@private */\n    protected _vScrollBar: VScrollBar;\n    /**@private */\n    protected _hScrollBar: HScrollBar;\n    /**@private */\n    protected _scrollChanged: boolean;\n    /**@private */\n    protected _usedCache: string = null;\n    /**@private */\n    protected _elasticEnabled: boolean = false;\n\n    protected _scrollType: ScrollType = 0;\n    protected _vScrollBarSkin: string;\n    protected _hScrollBarSkin: string;\n\n    /**\n     * 创建一个新的 <code>Panel</code> 类实例。\n     * <p>在 <code>Panel</code> 构造函数中设置属性width、height的值都为100。</p>\n     */\n    constructor() {\n        super();\n        this.width = this.height = 100;\n        //子对象缩放的情况下，优化会有问题，先屏蔽掉\n        //_content.optimizeScrollRect = true;\n    }\n\n    /**@inheritDoc @override*/\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._content && this._content.destroy(destroyChild);\n        this._vScrollBar && this._vScrollBar.destroy(destroyChild);\n        this._hScrollBar && this._hScrollBar.destroy(destroyChild);\n        this._vScrollBar = null;\n        this._hScrollBar = null;\n        this._content = null;\n    }\n\n    /**@inheritDoc @override*/\n    destroyChildren(): void {\n        this._content.destroyChildren();\n    }\n\n    /**@inheritDoc @override*/\n    protected createChildren(): void {\n        this._content = new Box();\n        this._content.hideFlags = HideFlags.HideAndDontSave;\n        super.addChild(this._content);\n    }\n\n    /**@inheritDoc @override*/\n    addChild<T extends Node>(child: T): T {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        return this._content.addChild(child);\n    }\n\n    /**\n     * @private\n     * 子对象的 <code>Event.RESIZE</code> 事件侦听处理函数。\n     */\n    private onResize(): void {\n        this._setScrollChanged();\n    }\n\n    /**@inheritDoc @override*/\n    addChildAt(child: Node, index: number): Node {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        return this._content.addChildAt(child, index);\n    }\n\n    /**@inheritDoc @override*/\n    removeChild(child: Node): Node {\n        child.off(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        if (child._parent == this && this._children) {\n            let index = this._children.indexOf(child);\n            if (index != -1) {\n                this._children.splice(index, 1);\n                (<any>child)._setParent(null);\n            }\n            return child;\n        }\n        else\n            return this._content.removeChild(child);\n    }\n\n    /**@inheritDoc @override*/\n    removeChildAt(index: number): Node {\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        return this._content.removeChildAt(index);\n    }\n\n    /**@inheritDoc @override*/\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\n        this._content.removeChildren(beginIndex, endIndex);\n        this._setScrollChanged();\n        return this;\n    }\n\n    /**@inheritDoc @override*/\n    getChildAt(index: number): Node {\n        return this._content.getChildAt(index);\n    }\n\n    /**@inheritDoc @override*/\n    getChildByName(name: string): Node {\n        return this._content.getChildByName(name);\n    }\n\n    /**@inheritDoc @override*/\n    getChildIndex(child: Node): number {\n        return this._content.getChildIndex(child);\n    }\n\n    /**@inheritDoc @override*/\n    get numChildren(): number {\n        return this._content.numChildren;\n    }\n\n    /**@private */\n    private changeScroll(): void {\n        this._scrollChanged = false;\n        var contentW = this.contentWidth || 1;\n        var contentH = this.contentHeight || 1;\n\n        var vscroll = this._vScrollBar;\n        var hscroll = this._hScrollBar;\n\n        var vShow = vscroll && contentH > this._height;\n        var hShow = hscroll && contentW > this._width;\n        var showWidth = vShow ? this._width - vscroll.width : this._width;\n        var showHeight = hShow ? this._height - hscroll.height : this._height;\n\n        if (vscroll) {\n            vscroll.height = this._height - (hShow ? hscroll.height : 0);\n            vscroll.scrollSize = Math.max(this._height * 0.033, 1);\n            vscroll.thumbPercent = showHeight / contentH;\n            vscroll.setScroll(0, contentH - showHeight, vscroll.value);\n        }\n        if (hscroll) {\n            hscroll.width = this._width - (vShow ? vscroll.width : 0);\n            hscroll.scrollSize = Math.max(this._width * 0.033, 1);\n            hscroll.thumbPercent = showWidth / contentW;\n            hscroll.setScroll(0, contentW - showWidth, hscroll.value);\n        }\n    }\n\n    /**@inheritDoc @override*/\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        this.setContentSize(this._width, this._height);\n    }\n\n    /**\n     * @private\n     * 获取内容宽度（以像素为单位）。\n     */\n    get contentWidth(): number {\n        var max = 0;\n        for (var i = this._content.numChildren - 1; i > -1; i--) {\n            var comp = <Sprite>this._content.getChildAt(i);\n            max = Math.max(comp._x + comp.width * comp.scaleX - comp.pivotX, max);\n        }\n        return max;\n    }\n\n    /**\n     * @private\n     * 获取内容高度（以像素为单位）。\n     */\n    get contentHeight(): number {\n        let max = 0;\n        for (let i = this._content.numChildren - 1; i > -1; i--) {\n            let comp = <Sprite>this._content.getChildAt(i);\n            max = Math.max(comp._y + comp.height * comp.scaleY - comp.pivotY, max);\n        }\n        return max;\n    }\n\n    /**\n     * @private\n     * 设置内容的宽度、高度（以像素为单位）。\n     * @param width 宽度。\n     * @param height 高度。\n     */\n    private setContentSize(width: number, height: number): void {\n        let content = this._content;\n        content.width = width;\n        content.height = height;\n        content._style.scrollRect || (content.scrollRect = Rectangle.create());\n        content._style.scrollRect.setTo(0, 0, width, height);\n        content.scrollRect = content.scrollRect;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._setScrollChanged();\n    }\n\n    /**@inheritDoc @override*/\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._setScrollChanged();\n    }\n\n\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n\n        if (this._scrollType == ScrollType.None) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n        }\n        else if (this._scrollType == ScrollType.Horizontal) {\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n        }\n        else if (this._scrollType == ScrollType.Vertical) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n        else { //both\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n    }\n\n    private createHScrollBar() {\n        let scrollBar = this._hScrollBar = new HScrollBar();\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\n        scrollBar.target = this._content;\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n        scrollBar.bottom = 0;\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\n        scrollBar.skin = this._hScrollBarSkin;\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\n        super.addChild(scrollBar);\n        this._setScrollChanged();\n    }\n\n    private createVScrollBar() {\n        let scrollBar = this._vScrollBar = new VScrollBar();\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\n        scrollBar.target = this._content;\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n        scrollBar.right = 0;\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\n        scrollBar.skin = this._vScrollBarSkin;\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\n        super.addChild(scrollBar);\n        this._setScrollChanged();\n    }\n\n    /**\n     * 垂直方向滚动条皮肤。\n     */\n    get vScrollBarSkin(): string {\n        return this._vScrollBarSkin;\n    }\n\n    set vScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._vScrollBarSkin != value) {\n            this._vScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Vertical;\n            else if (this._scrollType == ScrollType.Horizontal)\n                this.scrollType = ScrollType.Both;\n            else\n                this.scrollType = this._scrollType;\n        }\n\n    }\n\n    /**\n     * 水平方向滚动条皮肤。\n     */\n    get hScrollBarSkin(): string {\n        return this._hScrollBarSkin;\n    }\n\n    set hScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._hScrollBarSkin != value) {\n            this._hScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Horizontal;\n            else if (this._scrollType == ScrollType.Vertical)\n                this.scrollType = ScrollType.Both;\n            this.scrollType = this._scrollType;\n        }\n    }\n\n    /**\n     * 垂直方向滚动条对象。\n     */\n    get vScrollBar(): ScrollBar {\n        return this._vScrollBar;\n    }\n\n    /**\n     * 水平方向滚动条对象。\n     */\n    get hScrollBar(): ScrollBar {\n        return this._hScrollBar;\n    }\n\n    /**\n     * 获取内容容器对象。\n     */\n    get content(): Sprite {\n        return this._content;\n    }\n\n    /**\n     * @private\n     * 滚动条的<code><code>Event.MOUSE_DOWN</code>事件侦听处理函数。</code>事件侦听处理函数。\n     * @param scrollBar 滚动条对象。\n     * @param e Event 对象。\n     */\n    protected onScrollBarChange(scrollBar: ScrollBar): void {\n        var rect = this._content._style.scrollRect;\n        if (rect) {\n            var start = Math.round(scrollBar.value);\n            scrollBar.isVertical ? rect.y = start : rect.x = start;\n            this._content.scrollRect = rect;\n        }\n    }\n\n    /**\n     * <p>滚动内容容器至设定的垂直、水平方向滚动条位置。</p>\n     * @param x 水平方向滚动条属性value值。滚动条位置数字。\n     * @param y 垂直方向滚动条属性value值。滚动条位置数字。\n     */\n    scrollTo(x: number = 0, y: number = 0): void {\n        if (this.vScrollBar) this.vScrollBar.value = y;\n        if (this.hScrollBar) this.hScrollBar.value = x;\n    }\n\n    /**\n     * 刷新滚动内容。\n     */\n    refresh(): void {\n        this.changeScroll();\n    }\n\n    /**@inheritDoc @override*/\n    set cacheAs(value: string) {\n        super.cacheAs = value;\n        this._usedCache = null;\n        if (value !== \"none\") {\n            this._hScrollBar && this._hScrollBar.on(Event.START, this, this.onScrollStart);\n            this._vScrollBar && this._vScrollBar.on(Event.START, this, this.onScrollStart);\n        } else {\n            this._hScrollBar && this._hScrollBar.off(Event.START, this, this.onScrollStart);\n            this._vScrollBar && this._vScrollBar.off(Event.START, this, this.onScrollStart);\n        }\n    }\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get cacheAs() {\n        return super.cacheAs;\n    }\n\n    /**是否开启橡皮筋效果*/\n    get elasticEnabled(): boolean {\n        return this._elasticEnabled;\n    }\n\n    set elasticEnabled(value: boolean) {\n        this._elasticEnabled = value;\n        if (this._vScrollBar) {\n            this._vScrollBar.elasticDistance = value ? 200 : 0;\n        }\n        if (this._hScrollBar) {\n            this._hScrollBar.elasticDistance = value ? 200 : 0;\n        }\n    }\n\n    private onScrollStart(): void {\n        this._usedCache || (this._usedCache = super.cacheAs);\n        super.cacheAs = \"none\";\n        this._hScrollBar && this._hScrollBar.once(Event.END, this, this.onScrollEnd);\n        this._vScrollBar && this._vScrollBar.once(Event.END, this, this.onScrollEnd);\n    }\n\n    private onScrollEnd(): void {\n        super.cacheAs = this._usedCache;\n    }\n\n    /**@private */\n    protected _setScrollChanged(): void {\n        if (!this._scrollChanged) {\n            this._scrollChanged = true;\n            this.callLater(this.changeScroll);\n        }\n    }\n}","import { Event } from \"../events/Event\"\nimport { UIComponent } from \"./UIComponent\"\nimport { Image } from \"./Image\"\nimport { Handler } from \"../utils/Handler\"\nimport { HideFlags } from \"../Const\"\nimport { URL } from \"../net/URL\"\nimport { Utils } from \"../utils/Utils\"\nimport { AssetDb } from \"../resource/AssetDb\"\n\n/**\n * 值发生改变后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ProgressBar</code> 组件显示内容的加载进度。\n * @example <caption>以下示例代码，创建了一个新的 <code>ProgressBar</code> 实例，设置了它的皮肤、位置、宽高、网格等信息，并添加到舞台上。</caption>\n * package\n *\t{\n *\t\timport laya.ui.ProgressBar;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class ProgressBar_Example\n *\t\t{\n *\t\t\tprivate var progressBar:ProgressBar;\n *\t\t\tpublic function ProgressBar_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tprogressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\n *\t\t\t\tprogressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\n *\t\t\t\tprogressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\n *\t\t\t\tprogressBar.value = 0.3;//设置 progressBar 的进度值。\n *\t\t\t\tprogressBar.width = 200;//设置 progressBar 的宽度。\n *\t\t\t\tprogressBar.height = 50;//设置 progressBar 的高度。\n *\t\t\t\tprogressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\n *\t\t\t\tprogressBar.changeHandler = new Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\n *\t\t\t\tLaya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\n *\t\t\t}\n *\t\t\tprivate function changeValue():void\n *\t\t\t{\n *\t\t\t\ttrace(\"改变进度条的进度值。\");\n *\t\t\t\tprogressBar.value = 0.6;\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"进度发生改变： value=\" ,value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var res = [\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"];\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete()\n * {\n *     progressBar = new laya.ui.ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\n *     progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\n *     progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\n *     progressBar.value = 0.3;//设置 progressBar 的进度值。\n *     progressBar.width = 200;//设置 progressBar 的宽度。\n *     progressBar.height = 50;//设置 progressBar 的高度。\n *     progressBar.sizeGrid = \"10,5,10,5\";//设置 progressBar 的网格信息。\n *     progressBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\n *     Laya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\n *     Laya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\n * }\n * function changeValue()\n * {\n *     console.log(\"改变进度条的进度值。\");\n *     progressBar.value = 0.6;\n * }\n * function onChange(value)\n * {\n *     console.log(\"进度发生改变： value=\" ,value);\n * }\n * @example\n * import ProgressBar = laya.ui.ProgressBar;\n * import Handler = laya.utils.Handler;\n * class ProgressBar_Example {\n *     private progressBar: ProgressBar;\n *     public ProgressBar_Example() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.progressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\n *         this.progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\n *         this.progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\n *         this.progressBar.value = 0.3;//设置 progressBar 的进度值。\n *         this.progressBar.width = 200;//设置 progressBar 的宽度。\n *         this.progressBar.height = 50;//设置 progressBar 的高度。\n *         this.progressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\n *         this.progressBar.changeHandler = new Handler(this, this.onChange);//设置 progressBar 的value值改变时执行的处理器。\n *         Laya.stage.addChild(this.progressBar);//将 progressBar 添加到显示列表。\n *         Laya.timer.once(3000, this, this.changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\n *     }\n *     private changeValue(): void {\n *         console.log(\"改变进度条的进度值。\");\n *         this.progressBar.value = 0.6;\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"进度发生改变： value=\", value);\n *     }\n * }\n */\nexport class ProgressBar extends UIComponent {\n    /**\n     * 当 <code>ProgressBar</code> 实例的 <code>value</code> 属性发生变化时的函数处理器。\n     * <p>默认返回参数<code>value</code> 属性（进度值）。</p>\n     */\n    changeHandler: Handler;\n    /**@private */\n    protected _bg: Image;\n    /**@private */\n    protected _bar: Image;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _value: number = 0.5;\n\n    /**\n     * 创建一个新的 <code>ProgressBar</code> 类实例。\n     * @param skin 皮肤地址。\n     */\n    constructor(skin: string = null) {\n        super();\n        this.skin = skin;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._bg && this._bg.destroy(destroyChild);\n        this._bar && this._bar.destroy(destroyChild);\n        this._bg = this._bar = null;\n        this.changeHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected createChildren(): void {\n        this._bg = new Image();\n        this._bg.left = 0;\n        this._bg.right = 0;\n        this._bg.top = 0;\n        this._bg.bottom = 0;\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._bg);\n\n        this._bar = new Image();\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\n        this._bar.top = 0;\n        this._bar.bottom = 0;\n        this.addChild(this._bar);\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n\n        if (url) {\n            return AssetDb.inst.resolveURL(url).then(url => {\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n\n                return Promise.all([\n                    this._bg._setSkin(url),\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\n                ]).then(() => this._skinLoaded());\n            });\n        }\n        else {\n            this._bg.skin = null;\n            this._bar.skin = null;\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this.callLater(this.changeValue);\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureWidth(): number {\n        return this._bg.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        return this._bg.height;\n    }\n\n    /**\n     * 当前的进度量。\n     * <p><b>取值：</b>介于0和1之间。</p>\n     */\n    get value(): number {\n        return this._value;\n    }\n\n    set value(num: number) {\n        if (this._value != num) {\n            num = num > 1 ? 1 : num < 0 ? 0 : num;\n            this._value = num;\n            this.callLater(this.changeValue);\n            this.event(Event.CHANGE);\n            this.changeHandler && this.changeHandler.runWith(num);\n        }\n    }\n\n    /**\n     * @private\n     * 更改进度值的显示。\n     */\n    protected changeValue(): void {\n        if (this.sizeGrid) {\n            let grid = this.sizeGrid.split(\",\");\n            let left = parseInt(grid[3]);\n            if (isNaN(left))\n                left = 0;\n            let right = parseInt(grid[1]);\n            if (isNaN(right))\n                right = 0;\n            let max = this.width - left - right;\n            let sw = max * this._value;\n            this._bar.width = left + right + sw;\n            this._bar.visible = this._bar.width > left + right;\n        } else {\n            this._bar.width = this.width * this._value;\n        }\n    }\n\n    /**\n     * 获取进度条对象。\n     */\n    get bar(): Image {\n        return this._bar;\n    }\n\n    /**\n     * 获取背景条对象。\n     */\n    get bg(): Image {\n        return this._bg;\n    }\n\n    /**\n     * <p>当前 <code>ProgressBar</code> 实例的进度条背景位图（ <code>Image</code> 实例）的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._bg.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this._bg.sizeGrid = this._bar.sizeGrid = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_width(value: number): void {\n        super.set_width(value);\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.value = Number(value);\n        else\n            super.set_dataSource(value);\n    }\n}","import { Event } from \"../events/Event\"\nimport { Button } from \"./Button\"\n\n/**\n * <code>Radio</code> 控件使用户可在一组互相排斥的选择中做出一种选择。\n * 用户一次只能选择 <code>Radio</code> 组中的一个成员。选择未选中的组成员将取消选择该组中当前所选的 <code>Radio</code> 控件。 \n * @see laya.ui.RadioGroup\n */\nexport class Radio extends Button {\n\n    /**@private */\n    protected _value: any;\n\n    /**\n     * 创建一个新的 <code>Radio</code> 类实例。 \n     * @param skin 皮肤。\n     * @param label 标签。\n     */\n    constructor(skin: string = null, label: string = \"\") {\n        super(skin, label);\n        // preinitialize 放到这里了，因为不知道什么时候调用\n        this.toggle = false;\n        this._autoSize = false;\n    }\n\n    /**\n     * @override\n     */\n    protected preinitialize(): void {\n        super.preinitialize();\n        this.toggle = false;\n        this._autoSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     * */\n    protected initialize(): void {\n        super.initialize();\n        this.createText();\n        this._text.align = \"left\";\n        this._text.valign = \"top\";\n        this._text.width = null;\n        this.on(Event.CLICK, this, this.onClick);\n    }\n\n    /**\n     * @private\n     * 对象的<code>Event.CLICK</code>事件侦听处理函数。 \n     */\n    protected onClick(e: Event): void {\n        this.selected = true;\n    }\n\n    /**\n     * 获取或设置 <code>Radio</code> 关联的可选用户定义值。\n     */\n    get value(): any {\n        return this._value != null ? this._value : this.label;\n    }\n\n    set value(obj: any) {\n        this._value = obj;\n    }\n}","import { Box } from \"./Box\";\nimport { ISelect } from \"./ISelect\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Button } from \"./Button\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Group</code> 是一个可以自动布局的项集合控件。\n * <p> <code>Group</code> 的默认项对象为 <code>Button</code> 类实例。\n * <code>Group</code> 是 <code>Tab</code> 和 <code>RadioGroup</code> 的基类。</p>\n */\nexport class UIGroup extends Box {\n\n    /**\n     * 改变 <code>Group</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。\n     */\n    selectHandler: Handler;\n\n    /**@private */\n    protected _items: ISelect[];\n    /**@private */\n    protected _selectedIndex: number = -1;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _direction: string = \"horizontal\";\n    /**@private */\n    protected _space: number = 0;\n    /**@private */\n    protected _labels: string;\n    /**@private */\n    protected _labelColors: string;\n    /**@private */\n    private _labelFont: string;\n    /**@private */\n    protected _labelStrokeColor: string;\n    /**@private */\n    protected _strokeColors: string;\n    /**@private */\n    protected _labelStroke: number;\n    /**@private */\n    protected _labelSize: number;\n    /**@private */\n    protected _labelBold: boolean;\n    /**@private */\n    protected _labelPadding: string;\n    /**@private */\n    protected _labelAlign: string;\n    /**@private */\n    protected _stateNum: number;\n    /**@private */\n    protected _labelChanged: boolean;\n\n    /**\n     * 创建一个新的 <code>Group</code> 类实例。\n     * @param labels 标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\n     * @param skin 皮肤。\n     */\n    constructor(labels: string = null, skin: string = null) {\n        super();\n        this._items = [];\n        this.skin = skin;\n        this.labels = labels;\n    }\n    /**\n     * @override\n     */\n    protected preinitialize(): void {\n        this.mouseEnabled = true;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._items && (this._items.length = 0);\n        this._items = null;\n        this.selectHandler = null;\n    }\n\n    /**\n     * 添加一个项对象，返回此项对象的索引id。\n     *\n     * @param item 需要添加的项对象。\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\n     * @return\n     */\n    addItem(item: ISelect, autoLayout: boolean = true): number {\n        let display = (<Sprite>(item as any));\n        let index = this._items.length;\n        display.name = \"item\" + index;\n        this.addChild(display);\n        this.initItems();\n\n        if (autoLayout && index > 0) {\n            let preItem = (<Sprite>(this._items[index - 1] as any));\n            if (this._direction == \"horizontal\") {\n                display.x = preItem._x + preItem.width + this._space;\n            } else {\n                display.y = preItem._y + preItem.height + this._space;\n            }\n        } else {\n            if (autoLayout) {\n                display.x = 0;\n                display.y = 0;\n            }\n        }\n        return index;\n    }\n\n    /**\n     * 删除一个项对象。\n     * @param item 需要删除的项对象。\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\n     */\n    delItem(item: ISelect, autoLayout: boolean = true): void {\n        var index: number = this._items.indexOf(item);\n        if (index != -1) {\n            let display: Sprite = (<Sprite>(item as any));\n            this.removeChild(display);\n            for (let i = index + 1, n = this._items.length; i < n; i++) {\n                let child = (<Sprite>(this._items[i] as any));\n                child.name = \"item\" + (i - 1);\n                if (autoLayout) {\n                    if (this._direction == \"horizontal\") {\n                        child.x -= display.width + this._space;\n                    } else {\n                        child.y -= display.height + this._space;\n                    }\n                }\n            }\n            this.initItems();\n            if (this._selectedIndex > -1) {\n                let newIndex = this._selectedIndex < this._items.length ? this._selectedIndex : (this._selectedIndex - 1);\n                this._selectedIndex = -1;\n                this.selectedIndex = newIndex;\n            }\n        }\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n        if (!this._labels)\n            this.initItems();\n    }\n\n    /**@internal 2.0解析会调用 */\n    _afterInited(): void {\n        this.initItems();\n    }\n\n    /**\n     * 初始化项对象们。\n     */\n    initItems(): void {\n        this._items.length = 0;\n        for (let i = 0; i < 10000; i++) {\n            let item = <ISelect>this.getChildByName(\"item\" + i);\n            if (item == null)\n                break;\n            this._items.push(item);\n            item.selected = (i === this._selectedIndex);\n            item.clickHandler = Handler.create(this, this.itemClick, [i], false);\n        }\n    }\n\n    /**\n     * @private\n     * 项对象的点击事件侦听处理函数。\n     * @param index 项索引。\n     */\n    protected itemClick(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    /**\n     * 表示当前选择的项索引。默认值为-1。\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this.setSelect(this._selectedIndex, false);\n            this._selectedIndex = value;\n            this.setSelect(value, true);\n            this.event(Event.CHANGE);\n            this.selectHandler && this.selectHandler.runWith(this._selectedIndex);\n        }\n    }\n\n    /**\n     * @private\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\n     * @param index 需要设置的项对象的索引。\n     * @param selected 表示项对象的选中状态。\n     */\n    protected setSelect(index: number, selected: boolean): void {\n        if (this._items && index > -1 && index < this._items.length) this._items[index].selected = selected;\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            if (Loader.getRes(url)) {\n                this._skinLoaded();\n                return Promise.resolve();\n            }\n            else\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded());\n        }\n        else {\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        this._setLabelChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * 标签集合字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\n     */\n    get labels(): string {\n        return this._labels;\n    }\n\n    set labels(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._labels != value) {\n            this._labels = value;\n            let i = 0;\n            let n = this.numChildren;\n            while (i < n) {\n                let item = this.getChildAt(i);\n                if (item.hasHideFlag(HideFlags.HideAndDontSave) && item.name && item.name.startsWith(\"item\")) {\n                    this.removeChildAt(i);\n                    n--;\n                }\n                else\n                    i++;\n            }\n            this._setLabelChanged();\n            if (this._labels) {\n                let a = this._labels.split(\",\");\n                for (let i = 0, n = a.length; i < n; i++) {\n                    let item = this.createItem(this._skin, a[i]);\n                    item.name = \"item\" + i;\n                    item.hideFlags = HideFlags.HideAndDontSave;\n                    this.addChild(item);\n                }\n            }\n            this.initItems();\n        }\n    }\n\n    /**\n     * @private\n     * 创建一个项显示对象。\n     * @param skin 项对象的皮肤。\n     * @param label 项对象标签。\n     */\n    protected createItem(skin: string, label: string): Sprite {\n        return null;\n    }\n\n    /**\n     * @copy laya.ui.Button#labelColors()\n     */\n    get labelColors(): string {\n        return this._labelColors;\n    }\n\n    set labelColors(value: string) {\n        if (this._labelColors != value) {\n            this._labelColors = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * 默认值0，表示不描边。\n     * @see laya.display.Text.stroke()\n     */\n    get labelStroke(): number {\n        return this._labelStroke;\n    }\n\n    set labelStroke(value: number) {\n        if (this._labelStroke != value) {\n            this._labelStroke = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * 默认值为 \"#000000\"（黑色）;\n     * @see laya.display.Text.strokeColor()\n     */\n    get labelStrokeColor(): string {\n        return this._labelStrokeColor;\n    }\n\n    set labelStrokeColor(value: string) {\n        if (this._labelStrokeColor != value) {\n            this._labelStrokeColor = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * <p>表示各个状态下的描边颜色。</p>\n     * @see laya.display.Text.strokeColor()\n     */\n    get strokeColors(): string {\n        return this._strokeColors;\n    }\n\n    set strokeColors(value: string) {\n        if (this._strokeColors != value) {\n            this._strokeColors = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮文本标签的字体大小。\n     */\n    get labelSize(): number {\n        return this._labelSize;\n    }\n\n    set labelSize(value: number) {\n        if (this._labelSize != value) {\n            this._labelSize = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮的状态值，以数字表示，默认为3态。\n     * @see laya.ui.Button#stateNum\n     */\n    get stateNum(): number {\n        return this._stateNum;\n    }\n\n    set stateNum(value: number) {\n        if (this._stateNum != value) {\n            this._stateNum = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮文本标签是否为粗体字。\n     */\n    get labelBold(): boolean {\n        return this._labelBold;\n    }\n\n    set labelBold(value: boolean) {\n        if (this._labelBold != value) {\n            this._labelBold = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\n     * @see laya.display.Text.font()\n     */\n    get labelFont(): string {\n        return this._labelFont;\n    }\n\n    set labelFont(value: string) {\n        if (this._labelFont != value) {\n            this._labelFont = value;\n            this._setLabelChanged();\n        }\n    }\n    /**\n     * 表示按钮文本标签的边距。\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\n     */\n    get labelPadding(): string {\n        return this._labelPadding;\n    }\n\n    set labelPadding(value: string) {\n        if (this._labelPadding != value) {\n            this._labelPadding = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 布局方向。\n     * <p>默认值为\"horizontal\"。</p>\n     * <p><b>取值：</b>\n     * <li>\"horizontal\"：表示水平布局。</li>\n     * <li>\"vertical\"：表示垂直布局。</li>\n     * </p>\n     */\n    get direction(): string {\n        return this._direction;\n    }\n\n    set direction(value: string) {\n        this._direction = value;\n        this._setLabelChanged();\n    }\n\n    /**\n     * 项对象们之间的间隔（以像素为单位）。\n     */\n    get space(): number {\n        return this._space;\n    }\n\n    set space(value: number) {\n        this._space = value;\n        this._setLabelChanged();\n    }\n\n    /**\n     * @private\n     * 更改项对象的属性值。\n     */\n    protected changeLabels(): void {\n        this._labelChanged = false;\n        if (this._items) {\n            var left: number = 0\n            for (var i: number = 0, n: number = this._items.length; i < n; i++) {\n                var btn: Button = (<Button>this._items[i]);\n                this._skin && (btn.skin = this._skin);\n                this._labelColors && (btn.labelColors = this._labelColors);\n                this._labelSize && (btn.labelSize = this._labelSize);\n                this._labelStroke && (btn.labelStroke = this._labelStroke);\n                this._labelStrokeColor && (btn.labelStrokeColor = this._labelStrokeColor);\n                this._strokeColors && (btn.strokeColors = this._strokeColors);\n                this._labelBold && (btn.labelBold = this._labelBold);\n                this._labelPadding && (btn.labelPadding = this._labelPadding);\n                this._labelAlign && (btn.labelAlign = this._labelAlign);\n                this._stateNum && (btn.stateNum = this._stateNum);\n                this._labelFont && (btn.labelFont = this._labelFont);\n                if (this._direction === \"horizontal\") {\n                    btn.y = 0;\n                    btn.x = left;\n                    left += btn.width + this._space;\n                } else {\n                    btn.x = 0;\n                    btn.y = left;\n                    left += btn.height + this._space;\n                }\n            }\n        }\n        this._sizeChanged();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected commitMeasure(): void {\n        this.runCallLater(this.changeLabels);\n    }\n\n    /**\n     * 项对象们的存放数组。\n     */\n    get items(): ISelect[] {\n        return this._items;\n    }\n\n    /**\n     * 获取或设置当前选择的项对象。\n     */\n    get selection(): ISelect {\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\n    }\n\n    set selection(value: ISelect) {\n        this.selectedIndex = this._items.indexOf(value);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.selectedIndex = parseInt(value as string);\n        else if (value instanceof Array)\n            this.labels = ((<any[]>value)).join(\",\");\n        else\n            super.set_dataSource(value);\n    }\n\n    /**@private */\n    protected _setLabelChanged(): void {\n        if (!this._labelChanged) {\n            this._labelChanged = true;\n            this.callLater(this.changeLabels);\n        }\n    }\n}","import { UIGroup } from \"./UIGroup\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Radio } from \"./Radio\"\n\n/**\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>RadioGroup</code> 控件定义一组 <code>Radio</code> 控件，这些控件相互排斥；\n * 因此，用户每次只能选择一个 <code>Radio</code> 控件。\n *\n * @example <caption>以下示例代码，创建了一个 <code>RadioGroup</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Radio;\n *\t\timport laya.ui.RadioGroup;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class RadioGroup_Example\n *\t\t{\n *\t\t\tpublic function RadioGroup_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar radioGroup:RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\n *\t\t\t\tradioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\n *\t\t\t\tradioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\n *\t\t\t\tradioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\n *\t\t\t\tradioGroup.space = 10;//设置 radioGroup 的项间隔距离。\n *\t\t\t\tradioGroup.selectHandler = new Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的单选按钮索引: index= \", index);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/radio.png\"], laya.utils.Handler.create(this, onLoadComplete));\n * function onLoadComplete() {\n *     var radioGroup= new laya.ui.RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\n *     radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\n *     radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\n *     radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\n *     radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\n *     radioGroup.selectHandler = new laya.utils.Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\n *     Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\n * }\n * function onSelect(index) {\n *     console.log(\"当前选择的单选按钮索引: index= \", index);\n * }\n * @example\n * import Radio = laya.ui.Radio;\n * import RadioGroup = laya.ui.RadioGroup;\n * import Handler = laya.utils.Handler;\n * class RadioGroup_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         var radioGroup: RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\n *         radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\n *         radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\n *         radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\n *         radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\n *         radioGroup.selectHandler = new Handler(this, this.onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\n *         Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选择的单选按钮索引: index= \", index);\n *     }\n * }\n */\nexport class RadioGroup extends UIGroup {\n    /**@inheritDoc \n     * @override\n    */\n    protected createItem(skin: string, label: string): Sprite {\n        let btn = new Radio();\n        btn._skinBaseUrl = this._skinBaseUrl;\n        if (skin)\n            btn.skin = skin;\n        btn.label = label;\n        return btn;\n    }\n}","import { Box } from \"./Box\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * 自适应缩放容器，容器设置大小后，容器大小始终保持stage大小，子内容按照原始最小宽高比缩放\n */\nexport class ScaleBox extends Box {\n    private _oldW: number = 0;\n    private _oldH: number = 0;\n\n    /**\n     * @override\n     */\n    onEnable(): void {\n        ILaya.stage.on(\"resize\", this, this.onResize);\n        this.onResize();\n    }\n    /**\n     * @override\n     */\n    onDisable(): void {\n        ILaya.stage.off(\"resize\", this, this.onResize);\n    }\n\n    private onResize(): void {\n        if (this.width > 0 && this.height > 0) {\n            let stage = ILaya.stage;\n            let scale = Math.min(stage.width / this._oldW, stage.height / this._oldH);\n            super.width = stage.width;\n            super.height = stage.height;\n            this.scale(scale, scale);\n        }\n    }\n    /**\n     * @override\n     */\n    set_width(value: number): void {\n        super.set_width(value);\n        this._oldW = value;\n    }\n\n    /**\n     * @override\n     */\n    set_height(value: number) {\n        super.set_height(value);\n        this._oldH = value;\n    }\n}","import { Sprite } from \"../display/Sprite\"\nimport { Button } from \"./Button\"\nimport { UIGroup } from \"./UIGroup\"\n\n/**\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Tab</code> 组件用来定义选项卡按钮组。\t *\n * <p>属性：<code>selectedIndex</code> 的默认值为-1。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>Tab</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Tab;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class Tab_Example\n *\t\t{\n *\t\t\tpublic function Tab_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar tab:Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\n *\t\t\t\ttab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\n *\t\t\t\ttab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\n *\t\t\t\ttab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\n *\t\t\t\ttab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\n *\t\t\t\ttab.selectHandler = new Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(tab);//将 tab 添到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的表情页索引: index= \", index);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/tab.png\"], laya.utils.Handler.create(this, onLoadComplete));\n * function onLoadComplete() {\n *     var tab = new laya.ui.Tab();//创建一个 Tab 类的实例对象 tab 。\n *     tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\n *     tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\n *     tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\n *     tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\n *     tab.selectHandler = new laya.utils.Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\n *     Laya.stage.addChild(tab);//将 tab 添到显示列表。\n * }\n * function onSelect(index) {\n *     console.log(\"当前选择的标签页索引: index= \", index);\n * }\n * @example\n * import Tab = laya.ui.Tab;\n * import Handler = laya.utils.Handler;\n * class Tab_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         var tab: Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\n *         tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\n *         tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\n *         tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\n *         tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\n *         tab.selectHandler = new Handler(this, this.onSelect);//设置 tab 的选择项发生改变时执行的处理器。\n *         Laya.stage.addChild(tab);//将 tab 添到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选择的表情页索引: index= \", index);\n *     }\n * }\n */\nexport class Tab extends UIGroup {\n\n    /**\n     * @private\n     * @inheritDoc\n     * @override\n     */\n    protected createItem(skin: string, label: string): Sprite {\n        let btn = new Button();\n        btn._skinBaseUrl = this._skinBaseUrl;\n        if (skin)\n            btn.skin = skin;\n        btn.label = label;\n        return btn;\n    }\n}","import { Label } from \"./Label\";\nimport { Input } from \"../display/Input\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { AutoBitmap } from \"./AutoBitmap\"\nimport { Styles } from \"./Styles\"\nimport { UIUtils } from \"./UIUtils\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 输入文本后调度。\n * @eventType Event.INPUT\n */\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\n/**\n * 在输入框内敲回车键后调度。\n * @eventType Event.ENTER\n */\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\n/**\n * 当获得输入焦点后调度。\n * @eventType Event.FOCUS\n */\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\n/**\n * 当失去输入焦点后调度。\n * @eventType Event.BLUR\n */\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>TextInput</code> 类用于创建显示对象以显示和输入文本。\n *\n * @example <caption>以下示例代码，创建了一个 <code>TextInput</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.display.Stage;\n *\t\timport laya.ui.TextInput;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class TextInput_Example\n *\t\t{\n *\t\t\tpublic function TextInput_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar textInput:TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\n *\t\t\t\ttextInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\n *\t\t\t\ttextInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\n *\t\t\t\ttextInput.color = \"#008fff\";//设置 textInput 的文本颜色。\n *\t\t\t\ttextInput.font = \"Arial\";//设置 textInput 的文本字体。\n *\t\t\t\ttextInput.bold = true;//设置 textInput 的文本显示为粗体。\n *\t\t\t\ttextInput.fontSize = 30;//设置 textInput 的字体大小。\n *\t\t\t\ttextInput.wordWrap = true;//设置 textInput 的文本自动换行。\n *\t\t\t\ttextInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\n *\t\t\t\ttextInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\n *\t\t\t\ttextInput.width = 300;//设置 textInput 的宽度。\n *\t\t\t\ttextInput.height = 200;//设置 textInput 的高度。\n *\t\t\t\tLaya.stage.addChild(textInput);//将 textInput 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     var textInput = new laya.ui.TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\n *     textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\n *     textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\n *     textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\n *     textInput.font = \"Arial\";//设置 textInput 的文本字体。\n *     textInput.bold = true;//设置 textInput 的文本显示为粗体。\n *     textInput.fontSize = 30;//设置 textInput 的字体大小。\n *     textInput.wordWrap = true;//设置 textInput 的文本自动换行。\n *     textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\n *     textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\n *     textInput.width = 300;//设置 textInput 的宽度。\n *     textInput.height = 200;//设置 textInput 的高度。\n *     Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\n * }\n * @example\n * import Stage = laya.display.Stage;\n * import TextInput = laya.ui.TextInput;\n * import Handler = laya.utils.Handler;\n * class TextInput_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         var textInput: TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\n *         textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\n *         textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\n *         textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\n *         textInput.font = \"Arial\";//设置 textInput 的文本字体。\n *         textInput.bold = true;//设置 textInput 的文本显示为粗体。\n *         textInput.fontSize = 30;//设置 textInput 的字体大小。\n *         textInput.wordWrap = true;//设置 textInput 的文本自动换行。\n *         textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\n *         textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\n *         textInput.width = 300;//设置 textInput 的宽度。\n *         textInput.height = 200;//设置 textInput 的高度。\n *         Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\n *     }\n * }\n */\nexport class TextInput extends Label {\n    /** @private */\n    protected _skin: string;\n\n    declare _graphics: AutoBitmap;\n    declare _tf: Input;\n\n    /**\n     * 创建一个新的 <code>TextInput</code> 类实例。\n     * @param text 文本内容。\n     */\n    constructor(text?: string) {\n        super();\n        if (text != null)\n            this.text = text;\n        this.skin = this.skin;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected preinitialize(): void {\n        this.mouseEnabled = true;\n    }\n\n    /**\n     * @inheritDoc\n     * @override \n    */\n    protected createChildren(): void {\n        this.graphics = new AutoBitmap();\n\n        this._tf = new Input();\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\n        this._tf.padding = Styles.inputLabelPadding;\n        this._tf._onPostLayout = () => this._onPostLayout();\n        this._tf.on(Event.INPUT, () => this.event(Event.INPUT));\n        this._tf.on(Event.ENTER, () => this.event(Event.ENTER));\n        this._tf.on(Event.BLUR, () => this.event(Event.BLUR));\n        this._tf.on(Event.FOCUS, () => this.event(Event.FOCUS));\n        this.addChild(this._tf);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected initialize(): void {\n        this.width = 128;\n        this.height = 22;\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            let source = Loader.getRes(url);\n            if (source) {\n                this._skinLoaded(source);\n                return Promise.resolve();\n            }\n            else\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\n        }\n        else {\n            this._skinLoaded(null);\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(source: any): void {\n        this._graphics.source = source;\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * <p>当前实例的背景图（ <code>AutoBitmap</code> ）实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._graphics && this._graphics.sizeGrid ? this._graphics.sizeGrid.join(\",\") : null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._graphics && (this._graphics.width = value);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._graphics && (this._graphics.height = value);\n    }\n\n    /**\n     * <p>指示当前是否是文本域。</p>\n     * 值为true表示当前是文本域，否则不是文本域。\n     */\n    get multiline(): boolean {\n        return this._tf.multiline;\n    }\n\n    set multiline(value: boolean) {\n        this._tf.multiline = value;\n    }\n\n    /**\n     * 设置可编辑状态。\n     */\n    set editable(value: boolean) {\n        this._tf.editable = value;\n    }\n\n    get editable(): boolean {\n        return this._tf.editable;\n    }\n\n    /**选中输入框内的文本。*/\n    select(): void {\n        this._tf.select();\n    }\n\n    /**限制输入的字符。*/\n    get restrict(): string {\n        return this._tf.restrict;\n    }\n\n    set restrict(pattern: string) {\n        this._tf.restrict = pattern;\n    }\n\n    /**\n     * @copy laya.display.Input#prompt\n     */\n    get prompt(): string {\n        return this._tf.prompt;\n    }\n\n    set prompt(value: string) {\n        this._tf.prompt = value;\n    }\n\n    /**\n     * @copy laya.display.Input#promptColor\n     */\n    get promptColor(): string {\n        return this._tf.promptColor;\n    }\n\n    set promptColor(value: string) {\n        this._tf.promptColor = value;\n    }\n\n    /**\n     * @copy laya.display.Input#maxChars\n     */\n    get maxChars(): number {\n        return this._tf.maxChars;\n    }\n\n    set maxChars(value: number) {\n        this._tf.maxChars = value;\n    }\n\n    /**\n     * @copy laya.display.Input#focus\n     */\n    get focus(): boolean {\n        return this._tf.focus;\n    }\n\n    set focus(value: boolean) {\n        this._tf.focus = value;\n    }\n\n    /**\n     * @copy laya.display.Input#type\n     */\n    get type(): string {\n        return this._tf.type;\n    }\n\n    set type(value: string) {\n        this._tf.type = value;\n    }\n\n    setSelection(startIndex: number, endIndex: number): void {\n        this._tf.setSelection(startIndex, endIndex);\n    }\n}","import { TextInput } from \"./TextInput\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { ScrollType, Styles } from \"./Styles\";\nimport { Event } from \"../events/Event\"\nimport { HideFlags } from \"../Const\";\n\n/**\n * <code>TextArea</code> 类用于创建显示对象以显示和输入文本。\n * @example <caption>以下示例代码，创建了一个 <code>TextArea</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.TextArea;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class TextArea_Example\n *\t\t{\n *\t\t\tpublic function TextArea_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar textArea:TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\n *\t\t\t\ttextArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\n *\t\t\t\ttextArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\n *\t\t\t\ttextArea.color = \"#008fff\";//设置 textArea 的文本颜色。\n *\t\t\t\ttextArea.font = \"Arial\";//设置 textArea 的字体。\n *\t\t\t\ttextArea.bold = true;//设置 textArea 的文本显示为粗体。\n *\t\t\t\ttextArea.fontSize = 20;//设置 textArea 的文本字体大小。\n *\t\t\t\ttextArea.wordWrap = true;//设置 textArea 的文本自动换行。\n *\t\t\t\ttextArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\n *\t\t\t\ttextArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\n *\t\t\t\ttextArea.width = 300;//设置 textArea 的宽度。\n *\t\t\t\ttextArea.height = 200;//设置 textArea 的高度。\n *\t\t\t\tLaya.stage.addChild(textArea);//将 textArea 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     var textArea = new laya.ui.TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\n *     textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\n *     textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\n *     textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\n *     textArea.font = \"Arial\";//设置 textArea 的字体。\n *     textArea.bold = true;//设置 textArea 的文本显示为粗体。\n *     textArea.fontSize = 20;//设置 textArea 的文本字体大小。\n *     textArea.wordWrap = true;//设置 textArea 的文本自动换行。\n *     textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\n *     textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\n *     textArea.width = 300;//设置 textArea 的宽度。\n *     textArea.height = 200;//设置 textArea 的高度。\n *     Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\n * }\n * @example\n * import TextArea = laya.ui.TextArea;\n * import Handler = laya.utils.Handler;\n * class TextArea_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n\t\n *     private onLoadComplete(): void {\n *         var textArea: TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\n *         textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\n *         textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\n *         textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\n *         textArea.font = \"Arial\";//设置 textArea 的字体。\n *         textArea.bold = true;//设置 textArea 的文本显示为粗体。\n *         textArea.fontSize = 20;//设置 textArea 的文本字体大小。\n *         textArea.wordWrap = true;//设置 textArea 的文本自动换行。\n *         textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\n *         textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\n *         textArea.width = 300;//设置 textArea 的宽度。\n *         textArea.height = 200;//设置 textArea 的高度。\n *         Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\n *     }\n * }\n */\nexport class TextArea extends TextInput {\n    protected _scrollType: ScrollType = 0;\n    protected _vScrollBarSkin: string;\n    protected _hScrollBarSkin: string;\n    /**@private */\n    protected _vScrollBar: VScrollBar;\n    /**@private */\n    protected _hScrollBar: HScrollBar;\n\n    /**\n     * <p>创建一个新的 <code>TextArea</code> 示例。</p>\n     * @param text 文本内容字符串。\n     */\n    constructor(text?: string) {\n        super(text);\n    }\n\n    protected _onPostLayout(): void {\n        super._onPostLayout();\n        this.callLater(this.changeScroll);\n    }\n    /**\n     * \n     * @param destroyChild \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._vScrollBar && this._vScrollBar.destroy();\n        this._hScrollBar && this._hScrollBar.destroy();\n        this._vScrollBar = null;\n        this._hScrollBar = null;\n        super.destroy(destroyChild);\n    }\n    /**\n     * @override\n     */\n    protected initialize(): void {\n        this.width = 180;\n        this.height = 150;\n        this._tf.wordWrap = true;\n        this.multiline = true;\n    }\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this.callLater(this.changeScroll);\n    }\n    /**\n\n    /**\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this.callLater(this.changeScroll);\n    }\n\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n\n        if (this._scrollType == ScrollType.None) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n        }\n        else if (this._scrollType == ScrollType.Horizontal) {\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n        }\n        else if (this._scrollType == ScrollType.Vertical) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n        else { //both\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n    }\n\n    private createHScrollBar() {\n        this._hScrollBar = new HScrollBar();\n        this._hScrollBar.hideFlags = HideFlags.HideAndDontSave;\n        this._hScrollBar._skinBaseUrl = this._skinBaseUrl;\n        this._hScrollBar.skin = this._hScrollBarSkin;\n        this.addChild(this._hScrollBar);\n        this._hScrollBar.on(Event.CHANGE, this, this.onHBarChanged);\n        this._hScrollBar.on(Event.LOADED, this, this.changeScroll);\n        this._hScrollBar.mouseWheelEnable = false;\n        this._hScrollBar.touchScrollEnable = false;\n        this._hScrollBar.target = this._tf;\n        this.callLater(this.changeScroll);\n    }\n\n    private createVScrollBar() {\n        this._vScrollBar = new VScrollBar();\n        this._vScrollBar.hideFlags = HideFlags.HideAndDontSave;\n        this._vScrollBar._skinBaseUrl = this._skinBaseUrl;\n        this._vScrollBar.skin = this._vScrollBarSkin;\n        this.addChild(this._vScrollBar);\n        this._vScrollBar.on(Event.CHANGE, this, this.onVBarChanged);\n        this._vScrollBar.on(Event.LOADED, this, this.changeScroll);\n        this._vScrollBar.touchScrollEnable = false;\n        this._vScrollBar.target = this._tf;\n        this.callLater(this.changeScroll);\n    }\n\n    /**\n     * 垂直方向滚动条皮肤。\n     */\n    get vScrollBarSkin(): string {\n        return this._vScrollBarSkin;\n    }\n\n    set vScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._vScrollBarSkin != value) {\n            this._vScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Vertical;\n            else if (this._scrollType == ScrollType.Horizontal)\n                this.scrollType = ScrollType.Both;\n            else\n                this.scrollType = this._scrollType;\n        }\n\n    }\n\n    /**\n     * 水平方向滚动条皮肤。\n     */\n    get hScrollBarSkin(): string {\n        return this._hScrollBarSkin;\n    }\n\n    set hScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._hScrollBarSkin != value) {\n            this._hScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Horizontal;\n            else if (this._scrollType == ScrollType.Vertical)\n                this.scrollType = ScrollType.Both;\n            this.scrollType = this._scrollType;\n        }\n    }\n\n    protected onVBarChanged(e: Event): void {\n        if (this._tf.scrollY != this._vScrollBar.value) {\n            this._tf.scrollY = this._vScrollBar.value;\n        }\n    }\n\n    protected onHBarChanged(e: Event): void {\n        if (this._tf.scrollX != this._hScrollBar.value) {\n            this._tf.scrollX = this._hScrollBar.value;\n        }\n    }\n\n    /**垂直滚动条实体*/\n    get vScrollBar(): VScrollBar {\n        return this._vScrollBar;\n    }\n\n    /**水平滚动条实体*/\n    get hScrollBar(): HScrollBar {\n        return this._hScrollBar;\n    }\n\n    /**垂直滚动最大值*/\n    get maxScrollY(): number {\n        return this._tf.maxScrollY;\n    }\n\n    /**垂直滚动值*/\n    get scrollY(): number {\n        return this._tf.scrollY;\n    }\n\n    /**水平滚动最大值*/\n    get maxScrollX(): number {\n        return this._tf.maxScrollX;\n    }\n\n    /**水平滚动值*/\n    get scrollX(): number {\n        return this._tf.scrollX;\n    }\n\n    private changeScroll(): void {\n        let vShow = this._vScrollBar && this._tf.maxScrollY > 0;\n        let hShow = this._hScrollBar && this._tf.maxScrollX > 0;\n        let padding = this._tf.padding;\n        let showWidth = vShow ? this._width - this._vScrollBar.width - padding[2] : this._width;\n        let showHeight = hShow ? this._height - this._hScrollBar.height - padding[3] : this._height;\n\n        this._tf.size(showWidth, showHeight);\n\n        if (this._vScrollBar) {\n            this._vScrollBar.x = this._width - this._vScrollBar.width - padding[2];\n            this._vScrollBar.y = padding[1];\n            this._vScrollBar.height = this._height - (hShow ? this._hScrollBar.height : 0) - padding[1] - padding[3];\n            this._vScrollBar.scrollSize = 1;\n            this._vScrollBar.thumbPercent = showHeight / Math.max(this._tf.textHeight, showHeight);\n            this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY);\n            this._vScrollBar.visible = vShow;\n        }\n        if (this._hScrollBar) {\n            this._hScrollBar.x = padding[0];\n            this._hScrollBar.y = this._height - this._hScrollBar.height - padding[3];\n            this._hScrollBar.width = this._width - (vShow ? this._vScrollBar.width : 0) - padding[0] - padding[2];\n            this._hScrollBar.scrollSize = Math.max(showWidth * 0.033, 1);\n            this._hScrollBar.thumbPercent = showWidth / Math.max(this._tf.textWidth, showWidth);\n            this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX);\n            this._hScrollBar.visible = hShow;\n        }\n    }\n\n    /**滚动到某个位置*/\n    scrollTo(y: number): void {\n        this.commitMeasure();\n        this._tf.scrollY = y;\n    }\n}","import { Graphics } from \"../display/Graphics\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Text } from \"../display/Text\"\nimport { Event } from \"../events/Event\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { UIComponent } from \"./UIComponent\"\nimport { UIEvent } from \"./UIEvent\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\n\n/**鼠标提示管理类*/\nexport class TipManager extends UIComponent {\n    static offsetX: number = 10;\n    static offsetY: number = 15;\n    static tipTextColor: string = \"#ffffff\";\n    static tipBackColor: string = \"#111111\";\n    static tipDelay: number = 200;\n    private _tipBox: UIComponent;\n    private _tipText: Text;\n    private _defaultTipHandler: Function;\n\n    constructor() {\n        super();\n        this._tipBox = new UIComponent();\n        this._tipBox.addChild(this._tipText = new Text());\n        this._tipText.x = this._tipText.y = 5;\n        this._tipText.color = TipManager.tipTextColor;\n        this._defaultTipHandler = this._showDefaultTip;\n        ILaya.stage.on(UIEvent.SHOW_TIP, this, this._onStageShowTip);\n        ILaya.stage.on(UIEvent.HIDE_TIP, this, this._onStageHideTip);\n        this.zOrder = 1100\n    }\n\n    /**\n     * @private\n     */\n    private _onStageHideTip(e: any): void {\n        ILaya.timer.clear(this, this._showTip);\n        this.closeAll();\n        this.removeSelf();\n    }\n\n    /**\n     * @private\n     */\n    private _onStageShowTip(data: any): void {\n        ILaya.timer.once(TipManager.tipDelay, this, this._showTip, [data], true);\n    }\n\n    /**\n     * @private\n     */\n    private _showTip(tip: any): void {\n        if (typeof (tip) == 'string') {\n            var text: string = String(tip);\n            if (Boolean(text)) {\n                this._defaultTipHandler(text);\n            }\n        } else if (tip instanceof Handler) {\n            ((<Handler>tip)).run();\n        } else if (tip instanceof Function) {\n            tip.apply();\n        }\n        if (true) {\n            ILaya.stage.on(Event.MOUSE_MOVE, this, this._onStageMouseMove);\n            ILaya.stage.on(Event.MOUSE_DOWN, this, this._onStageMouseDown);\n        }\n\n        this._onStageMouseMove(null);\n    }\n\n    /**\n     * @private\n     */\n    private _onStageMouseDown(e: Event): void {\n        this.closeAll();\n    }\n\n    /**\n     * @private\n     */\n    private _onStageMouseMove(e: Event): void {\n        this._showToStage(this, TipManager.offsetX, TipManager.offsetY);\n    }\n\n    /**\n     * @private\n     */\n    private _showToStage(dis: Sprite, offX: number = 0, offY: number = 0): void {\n        var rec: Rectangle = dis.getBounds();\n        dis.x = ILaya.stage.mouseX + offX;\n        dis.y = ILaya.stage.mouseY + offY;\n        if (dis._x + rec.width > ILaya.stage.width) {\n            dis.x -= rec.width + offX;\n        }\n        if (dis._y + rec.height > ILaya.stage.height) {\n            dis.y -= rec.height + offY;\n        }\n    }\n\n    /**关闭所有鼠标提示*/\n    closeAll(): void {\n        ILaya.timer.clear(this, this._showTip);\n        ILaya.stage.off(Event.MOUSE_MOVE, this, this._onStageMouseMove);\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this._onStageMouseDown);\n        this.removeChildren();\n    }\n\n    /**\n     * 显示显示对象类型的tip\n     */\n    showDislayTip(tip: Sprite): void {\n        this.addChild(tip);\n        this._showToStage(this);\n        ILaya.stage.addChild(this);\n    }\n\n    /**\n     * @private\n     */\n    private _showDefaultTip(text: string): void {\n        this._tipText.text = text;\n        var g: Graphics = this._tipBox.graphics;\n        g.clear(true);\n        g.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, TipManager.tipBackColor);\n        this.addChild(this._tipBox);\n        this._showToStage(this);\n        ILaya.stage.addChild(this);\n    }\n\n    /**默认鼠标提示函数*/\n    get defaultTipHandler(): Function {\n        return this._defaultTipHandler;\n    }\n\n    set defaultTipHandler(value: Function) {\n        this._defaultTipHandler = value;\n    }\n}","import { Box } from \"./Box\";\nimport { List } from \"./List\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { Clip } from \"./Clip\";\nimport { Event } from \"../events/Event\"\nimport { Handler } from \"../utils/Handler\"\nimport { HideFlags } from \"../Const\";\nimport { XML } from \"../html/XML\";\n\n/**@private */\ninterface ITreeDataSource {\n    x: number;\n    hasChild: boolean;\n    isOpen: boolean;\n    isDirectory: boolean;\n}\n\n/**\n * 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n/**\n * 节点打开关闭时触发。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Tree</code> 控件使用户可以查看排列为可扩展树的层次结构数据。\n *\n * @example\n * package\n *\t{\n *\t\timport laya.ui.Tree;\n *\t\timport laya.utils.Browser;\n *\t\timport laya.utils.Handler;\n\t\n *\t\tpublic class Tree_Example\n *\t\t{\n\t\n *\t\t\tpublic function Tree_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, onLoadComplete));\n *\t\t\t}\n\t\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar xmlString:String;//创建一个xml字符串，用于存储树结构数据。\n *\t\t\t\txmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\n *\t\t\t\tvar domParser:* = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\n *\t\t\t\tvar xml:* = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\n\t\n *\t\t\t\tvar tree:Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\n *\t\t\t\ttree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\n *\t\t\t\ttree.itemRender = Item;//设置 tree 的项渲染器。\n *\t\t\t\ttree.xml = xml;//设置 tree 的树结构数据。\n *\t\t\t\ttree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\n *\t\t\t\ttree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\n *\t\t\t\ttree.width = 200;//设置 tree 的宽度。\n *\t\t\t\ttree.height = 100;//设置 tree 的高度。\n *\t\t\t\tLaya.stage.addChild(tree);//将 tree 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n\t\n * import laya.ui.Box;\n * import laya.ui.Clip;\n * import laya.ui.Label;\n *\tclass Item extends Box\n *\t{\n *\t\tpublic function Item()\n *\t\t{\n *\t\t\tthis.name = \"render\";\n *\t\t\tthis.right = 0;\n *\t\t\tthis.left = 0;\n\t\n *\t\t\tvar selectBox:Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\n *\t\t\tselectBox.name = \"selectBox\";\n *\t\t\tselectBox.height = 24;\n *\t\t\tselectBox.x = 13;\n *\t\t\tselectBox.y = 0;\n *\t\t\tselectBox.left = 12;\n *\t\t\taddChild(selectBox);\n\t\n *\t\t\tvar folder:Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\n *\t\t\tfolder.name = \"folder\";\n *\t\t\tfolder.x = 14;\n *\t\t\tfolder.y = 4;\n *\t\t\taddChild(folder);\n\t\n *\t\t\tvar label:Label = new Label(\"treeItem\");\n *\t\t\tlabel.name = \"label\";\n *\t\t\tlabel.color = \"#ffff00\";\n *\t\t\tlabel.width = 150;\n *\t\t\tlabel.height = 22;\n *\t\t\tlabel.x = 33;\n *\t\t\tlabel.y = 1;\n *\t\t\tlabel.left = 33;\n *\t\t\tlabel.right = 0;\n *\t\t\taddChild(label);\n\t\n *\t\t\tvar arrow:Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\n *\t\t\tarrow.name = \"arrow\";\n *\t\t\tarrow.x = 0;\n *\t\t\tarrow.y = 5;\n *\t\t\taddChild(arrow);\n *\t\t}\n *\t }\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"];\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));\n * function onLoadComplete() {\n *     var xmlString;//创建一个xml字符串，用于存储树结构数据。\n *     xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\n *     var domParser = new laya.utils.Browser.window.DOMParser();//创建一个DOMParser实例domParser。\n *     var xml = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\n\t\n *     var tree = new laya.ui.Tree();//创建一个 Tree 类的实例对象 tree 。\n *     tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\n *     tree.itemRender = mypackage.treeExample.Item;//设置 tree 的项渲染器。\n *     tree.xml = xml;//设置 tree 的树结构数据。\n *     tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\n *     tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\n *     tree.width = 200;//设置 tree 的宽度。\n *     tree.height = 100;//设置 tree 的高度。\n *     Laya.stage.addChild(tree);//将 tree 添加到显示列表。\n * }\n * (function (_super) {\n *     function Item() {\n *         Item.__super.call(this);//初始化父类。\n *         this.right = 0;\n *         this.left = 0;\n\t\n *         var selectBox = new laya.ui.Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\n *         selectBox.name = \"selectBox\";//设置 selectBox 的name 为“selectBox”时，将被识别为树结构的项的背景。2帧：悬停时背景、选中时背景。\n *         selectBox.height = 24;\n *         selectBox.x = 13;\n *         selectBox.y = 0;\n *         selectBox.left = 12;\n *         this.addChild(selectBox);//需要使用this.访问父类的属性或方法。\n\t\n *         var folder = new laya.ui.Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\n *         folder.name = \"folder\";//设置 folder 的name 为“folder”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\n *         folder.x = 14;\n *         folder.y = 4;\n *         this.addChild(folder);\n\t\n *         var label = new laya.ui.Label(\"treeItem\");\n *         label.name = \"label\";//设置 label 的name 为“label”时，此值将用于树结构数据赋值。\n *         label.color = \"#ffff00\";\n *         label.width = 150;\n *         label.height = 22;\n *         label.x = 33;\n *         label.y = 1;\n *         label.left = 33;\n *         label.right = 0;\n *         this.addChild(label);\n\t\n *         var arrow = new laya.ui.Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\n *         arrow.name = \"arrow\";//设置 arrow 的name 为“arrow”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\n *         arrow.x = 0;\n *         arrow.y = 5;\n *         this.addChild(arrow);\n *     };\n *     Laya.class(Item,\"mypackage.treeExample.Item\",_super);//注册类 Item 。\n * })(laya.ui.Box);\n * @example\n * import Tree = laya.ui.Tree;\n * import Browser = laya.utils.Browser;\n * import Handler = laya.utils.Handler;\n * class Tree_Example {\n\t\n *     constructor() {\n *         Laya.init(640, 800);\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder * . * png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, this.onLoadComplete));\n *     }\n *     private onLoadComplete(): void {\n *         var xmlString: String;//创建一个xml字符串，用于存储树结构数据。\n *         xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc  * label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\n *         var domParser: any = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\n *         var xml: any = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\n\t\n *         var tree: Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\n *         tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\n *         tree.itemRender = Item;//设置 tree 的项渲染器。\n *         tree.xml = xml;//设置 tree 的树结构数据。\n *         tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\n *         tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\n *         tree.width = 200;//设置 tree 的宽度。\n *         tree.height = 100;//设置 tree 的高度。\n *         Laya.stage.addChild(tree);//将 tree 添加到显示列表。\n *     }\n * }\n * import Box = laya.ui.Box;\n * import Clip = laya.ui.Clip;\n * import Label = laya.ui.Label;\n * class Item extends Box {\n *     constructor() {\n *         super();\n *         this.name = \"render\";\n *         this.right = 0;\n *         this.left = 0;\n *         var selectBox: Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\n *         selectBox.name = \"selectBox\";\n *         selectBox.height = 24;\n *         selectBox.x = 13;\n *         selectBox.y = 0;\n *         selectBox.left = 12;\n *         this.addChild(selectBox);\n\t\n *         var folder: Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\n *         folder.name = \"folder\";\n *         folder.x = 14;\n *         folder.y = 4;\n *         this.addChild(folder);\n\t\n *         var label: Label = new Label(\"treeItem\");\n *         label.name = \"label\";\n *         label.color = \"#ffff00\";\n *         label.width = 150;\n *         label.height = 22;\n *         label.x = 33;\n *         label.y = 1;\n *         label.left = 33;\n *         label.right = 0;\n *         this.addChild(label);\n\t\n *         var arrow: Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\n *         arrow.name = \"arrow\";\n *         arrow.x = 0;\n *         arrow.y = 5;\n *         this.addChild(arrow);\n *     }\n * }\n */\nexport class Tree extends Box {\n    /**@private */\n    protected _list: List;\n    /**@private */\n    protected _source: any[];\n    /**@private */\n    protected _renderHandler: Handler;\n    /**@private */\n    protected _spaceLeft: number = 10;\n    /**@private */\n    protected _spaceBottom: number = 0;\n    /**@private */\n    protected _keepStatus: boolean = true;\n\n    /**\n     * 创建一个新的 <code>Tree</code> 类实例。\n     * <p>在 <code>Tree</code> 构造函数中设置属性width、height的值都为200。</p>\n     */\n    constructor() {\n        super();\n        this.width = this.height = 200;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._list && this._list.destroy(destroyChild);\n        this._list = null;\n        this._source = null;\n        this._renderHandler = null;\n    }\n    /**\n     * @override\n     */\n    protected createChildren(): void {\n        this._list = new List();\n        this._list.hideFlags = HideFlags.HideAndDontSave;\n        this._list.left = 0;\n        this._list.right = 0;\n        this._list.top = 0;\n        this._list.bottom = 0;\n        this._list._skinBaseUrl = this._skinBaseUrl;\n        this.addChild(this._list);\n        this._list.renderHandler = Handler.create(this, this.renderItem, null, false);\n        this._list.repeatX = 1;\n        this._list.on(Event.CHANGE, this, this.onListChange);\n    }\n\n    /**\n     * @private\n     * 此对象包含的<code>List</code>实例的<code>Event.CHANGE</code>事件侦听处理函数。\n     */\n    protected onListChange(e: Event = null): void {\n        this.event(Event.CHANGE);\n    }\n\n    /**\n     * 数据源发生变化后，是否保持之前打开状态，默认为true。\n     * <p><b>取值：</b>\n     * <li>true：保持之前打开状态。</li>\n     * <li>false：不保持之前打开状态。</li>\n     * </p>\n     */\n    get keepStatus(): boolean {\n        return this._keepStatus;\n    }\n\n    set keepStatus(value: boolean) {\n        this._keepStatus = value;\n    }\n\n    /**\n     * 列表数据源，只包含当前可视节点数据。\n     */\n    get array(): any[] {\n        return this._list.array;\n    }\n\n    set array(value: any[]) {\n        if (this._keepStatus && this._list.array && value) {\n            this.parseOpenStatus(this._list.array, value);\n        }\n        this._source = value;\n        this._list.array = this.getArray();\n    }\n\n    /**\n     * 数据源，全部节点数据。\n     */\n    get source(): any[] {\n        return this._source;\n    }\n\n    /**\n     * 此对象包含的<code>List</code>实例对象。\n     */\n    get list(): List {\n        return this._list;\n    }\n\n    /**\n     * 此对象包含的<code>List</code>实例的单元格渲染器。\n     * <p><b>取值：</b>\n     * <ol>\n     * <li>单元格类对象。</li>\n     * <li> UI 的 JSON 描述。</li>\n     * </ol></p>\n     * @implements\n     */\n    get itemRender(): any {\n        return this._list.itemRender;\n    }\n\n    set itemRender(value: any) {\n        this._list.itemRender = value;\n    }\n\n    /**\n     * 滚动条皮肤。\n     */\n    get scrollBarSkin(): string {\n        return this._list.vScrollBarSkin;\n    }\n\n    set scrollBarSkin(value: string) {\n        this._list.vScrollBarSkin = value;\n    }\n\n    /**滚动条*/\n    get scrollBar(): ScrollBar {\n        return this._list.scrollBar;\n    }\n\n    /**\n     * 单元格鼠标事件处理器。\n     * <p>默认返回参数（e:Event,index:int）。</p>\n     */\n    get mouseHandler(): Handler {\n        return this._list.mouseHandler;\n    }\n\n    set mouseHandler(value: Handler) {\n        this._list.mouseHandler = value;\n    }\n\n    /**\n     * <code>Tree</code> 实例的渲染处理器。\n     */\n    get renderHandler(): Handler {\n        return this._renderHandler;\n    }\n\n    set renderHandler(value: Handler) {\n        this._renderHandler = value;\n    }\n\n    /**\n     * 左侧缩进距离（以像素为单位）。\n     */\n    get spaceLeft(): number {\n        return this._spaceLeft;\n    }\n\n    set spaceLeft(value: number) {\n        this._spaceLeft = value;\n    }\n\n    /**\n     * 每一项之间的间隔距离（以像素为单位）。\n     */\n    get spaceBottom(): number {\n        return this._list.spaceY;\n    }\n\n    set spaceBottom(value: number) {\n        this._list.spaceY = value;\n    }\n\n    /**\n     * 表示当前选择的项索引。\n     */\n    get selectedIndex(): number {\n        return this._list.selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        this._list.selectedIndex = value;\n    }\n\n    /**\n     * 当前选中的项对象的数据源。\n     */\n    get selectedItem(): any {\n        return this._list.selectedItem;\n    }\n\n    set selectedItem(value: any) {\n        this._list.selectedItem = value;\n    }\n\n    /**\n     * @private\n     * 获取数据源集合。\n     */\n    protected getArray(): any[] {\n        var arr: any[] = [];\n        for (let key in this._source) {//TODO TS\n            let item = this._source[key];\n            if (this.getParentOpenStatus(item)) {\n                item.x = this._spaceLeft * this.getDepth(item);\n                arr.push(item);\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * @private\n     * 获取项对象的深度。\n     */\n    protected getDepth(item: any, num: number = 0): number {\n        if (item.nodeParent == null) return num;\n        else return this.getDepth(item.nodeParent, num + 1);\n    }\n\n    /**\n     * @private\n     * 获取项对象的上一级的打开状态。\n     */\n    protected getParentOpenStatus(item: any): boolean {\n        var parent: any = item.nodeParent;\n        if (parent == null) {\n            return true;\n        } else {\n            if (parent.isOpen) {\n                if (parent.nodeParent != null) return this.getParentOpenStatus(parent);\n                else return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 渲染一个项对象。\n     * @param cell 一个项对象。\n     * @param index 项的索引。\n     */\n    protected renderItem(cell: Box, index: number): void {\n        var item: ITreeDataSource = cell.dataSource;\n        if (item) {\n            cell.left = item.x;\n            var arrow = cell.getChildByName(\"arrow\") as Clip;\n            if (arrow) {\n                if (item.hasChild) {\n                    arrow.visible = true;\n                    arrow.index = item.isOpen ? 1 : 0;\n                    (<any>arrow).__cellIndex = index;\n                    arrow.off(Event.CLICK, this, this.onArrowClick);\n                    arrow.on(Event.CLICK, this, this.onArrowClick);\n                } else {\n                    arrow.visible = false;\n                }\n            }\n            var folder = cell.getChildByName(\"folder\") as Clip;\n            if (folder) {\n                if (folder.clipY == 2) {\n                    folder.index = item.isDirectory ? 0 : 1;\n                } else {\n                    folder.index = item.isDirectory ? item.isOpen ? 1 : 0 : 2;\n                }\n            }\n            this._renderHandler && this._renderHandler.runWith([cell, index]);\n        }\n    }\n\n    /**\n     * @private\n     */\n    private onArrowClick(e: Event): void {\n        var arrow = e.currentTarget;\n        var index = arrow.__cellIndex;\n        this._list.array[index].isOpen = !this._list.array[index].isOpen;\n        this.event(Event.OPEN);\n        this._list.array = this.getArray();\n    }\n\n    /**\n     * 设置指定项索引的项对象的打开状态。\n     * @param index 项索引。\n     * @param isOpen 是否处于打开状态。\n     */\n    setItemState(index: number, isOpen: boolean): void {\n        if (!this._list.array[index]) return;\n        this._list.array[index].isOpen = isOpen;\n        this._list.array = this.getArray();\n    }\n\n    /**\n     * 刷新项列表。\n     */\n    fresh(): void {\n        this._list.array = this.getArray();\n        this.repaint();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        //if (value is XmlDom) xml = value as XmlDom;\n        super.set_dataSource(value);\n    }\n\n    /**\n     *  xml结构的数据源。\n     */\n    set xml(value: XML) {\n        var arr: any[] = [];\n        this.parseXml(value, arr, null, true);\n\n        this.array = arr;\n    }\n\n    /**\n     * @private\n     * 解析并处理XML类型的数据源。\n     */\n    protected parseXml(xml: XML, source: any[], nodeParent: any, isRoot: boolean): void {\n        var obj: any;\n        var list = xml.elements();\n        var childCount = list.length;\n        if (!isRoot) {\n            obj = {};\n            var list2 = xml.attributes;\n            for (let key in list2) {\n                var value = list2[key];\n                obj[key] = value == \"true\" ? true : value == \"false\" ? false : value;\n            }\n            obj.nodeParent = nodeParent;\n            if (childCount > 0) obj.isDirectory = true;\n            obj.hasChild = childCount > 0;\n            source.push(obj);\n        }\n        for (var i = 0; i < childCount; i++) {\n            var node = list[i];\n            this.parseXml(node, source, obj, false);\n        }\n    }\n\n    /**\n     * @private\n     * 处理数据项的打开状态。\n     */\n    protected parseOpenStatus(oldSource: any[], newSource: any[]): void {\n        for (var i = 0, n = newSource.length; i < n; i++) {\n            var newItem = newSource[i];\n            if (newItem.isDirectory) {\n                for (var j = 0, m = oldSource.length; j < m; j++) {\n                    var oldItem = oldSource[j];\n                    if (oldItem.isDirectory && this.isSameParent(oldItem, newItem) && newItem.label == oldItem.label) {\n                        newItem.isOpen = oldItem.isOpen;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 判断两个项对象在树结构中的父节点是否相同。\n     * @param item1 项对象。\n     * @param item2 项对象。\n     * @return 如果父节点相同值为true，否则值为false。\n     */\n    protected isSameParent(item1: any, item2: any): boolean {\n        if (item1.nodeParent == null && item2.nodeParent == null) return true;\n        else if (item1.nodeParent == null || item2.nodeParent == null) return false\n        else {\n            if (item1.nodeParent.label == item2.nodeParent.label) return this.isSameParent(item1.nodeParent, item2.nodeParent);\n            else return false;\n        }\n    }\n\n    /**\n     * 表示选择的树节点项的<code>path</code>属性值。\n     */\n    get selectedPath(): string {\n        if (this._list.selectedItem) {\n            return this._list.selectedItem.path;\n        }\n        return null;\n    }\n\n    /**\n     * 更新项列表，显示指定键名的数据项。\n     * @param\tkey 键名。\n     */\n    filter(key: string): void {\n        if (Boolean(key)) {\n            var result: any[] = [];\n            this.getFilterSource(this._source, result, key);\n            this._list.array = result;\n        } else {\n            this._list.array = this.getArray();\n        }\n    }\n\n    /**\n     * @private\n     * 获取数据源中指定键名的值。\n     */\n    private getFilterSource(array: any[], result: any[], key: string): void {\n        key = key.toLocaleLowerCase();\n        for (let item of array) {\n            if (!item.isDirectory && String(item.label).toLowerCase().indexOf(key) > -1) {\n                item.x = 0;\n                result.push(item);\n            }\n            if (item.child && item.child.length > 0) {\n                this.getFilterSource(item.child, result, key);\n            }\n        }\n    }\n}\n","import { LayoutBox } from \"./LayoutBox\";\nimport { UIComponent } from \"./UIComponent\";\n\n/**\n     * <code>VBox</code> 是一个垂直布局容器类。\n     */\nexport class VBox extends LayoutBox {\n    /**\n     * 无对齐。\n     */\n    static NONE: string = \"none\";\n    /**\n     * 左对齐。\n     */\n    static LEFT: string = \"left\";\n    /**\n     * 居中对齐。\n     */\n    static CENTER: string = \"center\";\n    /**\n     * 右对齐。\n     */\n    static RIGHT: string = \"right\";\n\n    /** 兼容以前的changeItems逻辑，是否在发生变动时，使用 sortItem 排序所有item */\n    public isSortItem: boolean = false;\n\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this.callLater(this.changeItems);\n    }\n\n\n    /** \n     * @inheritDoc\t\n     * @override\n    */\n    protected changeItems(): void {\n        this._itemChanged = false;\n        let items: any[] = [];\n        let maxWidth = 0;\n\n        for (let i = 0, n = this.numChildren; i < n; i++) {\n            let item = (<UIComponent>this.getChildAt(i));\n            if (item) {\n                items.push(item);\n                maxWidth = this._isWidthSet ? this._width : Math.max(maxWidth, item.width * item.scaleX);\n            }\n        }\n        if (this.isSortItem) {\n            this.sortItem(items);\n        }\n        let top = 0;\n        for (let i = 0, n = items.length; i < n; i++) {\n            let item = items[i];\n            item.y = top;\n            top += item.height * item.scaleY + this._space;\n            if (this._align == VBox.LEFT) {\n                item.x = 0;\n            } else if (this._align == VBox.CENTER) {\n                item.x = (maxWidth - item.width * item.scaleX) * 0.5;\n            } else if (this._align == VBox.RIGHT) {\n                item.x = maxWidth - item.width * item.scaleX;\n            }\n        }\n        this._sizeChanged();\n    }\n}","/**\n * Morn UI Version 3.0 http://www.mornui.com/\n * Feedback yung http://weibo.com/newyung\n */\nimport { Node } from \"../display/Node\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Box } from \"./Box\"\nimport { Handler } from \"../utils/Handler\"\n\n/**\n * <code>ViewStack</code> 类用于视图堆栈类，用于视图的显示等设置处理。\n */\nexport class ViewStack extends Box {\n    /**@private */\n    protected _items: any[];\n    /**@private */\n    protected _setIndexHandler: Handler = Handler.create(this, this.setIndex, null, false);\n    /**@private */\n    protected _selectedIndex: number;\n\n    constructor() {\n        super();\n\n        this._items = [];\n    }\n\n    /**\n     * 批量设置视图对象。\n     * @param views 视图对象数组。\n     */\n    setItems(views: any[]): void {\n        this.removeChildren();\n        var index: number = 0;\n        for (var i: number = 0, n: number = views.length; i < n; i++) {\n            var item: Node = views[i];\n            if (item) {\n                item.name = \"item\" + index;\n                this.addChild(item);\n                index++;\n            }\n        }\n        this.initItems();\n    }\n\n    /**\n     * 添加视图。\n     * 添加视图对象，并设置此视图对象的<code>name</code> 属性。\n     * @param view 需要添加的视图对象。\n     */\n    addItem(view: Node): void {\n        view.name = \"item\" + this._items.length;\n        this.addChild(view);\n        this.initItems();\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n        this.initItems();\n    }\n\n    /**@internal */\n    _afterInited(): void {\n        this.initItems();\n    }\n\n    /**\n     * 初始化视图对象集合。\n     */\n    initItems(): void {\n        this._items.length = 0;\n        for (var i: number = 0; i < 10000; i++) {\n            var item: Sprite = (<Sprite>this.getChildByName(\"item\" + i));\n            if (item == null) {\n                break;\n            }\n            this._items.push(item);\n            item.visible = (i == this._selectedIndex);\n        }\n    }\n\n    /**\n     * 表示当前视图索引。\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this.setSelect(this._selectedIndex, false);\n            this._selectedIndex = value;\n            this.setSelect(this._selectedIndex, true);\n        }\n    }\n\n    /**\n     * @private\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\n     * @param index 需要设置的对象的索引。\n     * @param selected 表示对象的选中状态。\n     */\n    protected setSelect(index: number, selected: boolean): void {\n        if (this._items && index > -1 && index < this._items.length) {\n            this._items[index].visible = selected;\n        }\n    }\n\n    /**\n     * 获取或设置当前选择的项对象。\n     */\n    get selection(): Node {\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\n    }\n\n    set selection(value: Node) {\n        this.selectedIndex = this._items.indexOf(value);\n    }\n\n    /**\n     *  索引设置处理器。\n     * <p>默认回调参数：index:int</p>\n     */\n    get setIndexHandler(): Handler {\n        return this._setIndexHandler;\n    }\n\n    set setIndexHandler(value: Handler) {\n        this._setIndexHandler = value;\n    }\n\n    /**\n     * @private\n     * 设置属性<code>selectedIndex</code>的值。\n     * @param index 选中项索引值。\n     */\n    protected setIndex(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    /**\n     * 视图集合数组。\n     */\n    get items(): any[] {\n        return this._items;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\n            this.selectedIndex = parseInt(value as string);\n        } else {\n            for (var prop in this._dataSource) {\n                if (prop in this) {\n                    (this as any)[prop] = this._dataSource[prop];\n                }\n            }\n        }\n    }\n}","import { Slider } from \"./Slider\";\n\n/**\n * 使用 <code>VSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\n * <p> <code>VSlider</code> 控件采用垂直方向。滑块轨道从下往上扩展，而标签位于轨道的左右两侧。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>VSlider</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.HSlider;\n *\t\timport laya.ui.VSlider;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class VSlider_Example\n *\t\t{\n *\t\t\tprivate var vSlider:VSlider;\n *\t\t\tpublic function VSlider_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\n *\t\t\t\tvSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\n *\t\t\t\tvSlider.min = 0;//设置 vSlider 最低位置值。\n *\t\t\t\tvSlider.max = 10;//设置 vSlider 最高位置值。\n *\t\t\t\tvSlider.value = 2;//设置 vSlider 当前位置值。\n *\t\t\t\tvSlider.tick = 1;//设置 vSlider 刻度值。\n *\t\t\t\tvSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\n *\t\t\t\tvSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\n *\t\t\t\tvSlider.changeHandler = new Handler(this, onChange);//设置 vSlider 位置变化处理器。\n *\t\t\t\tLaya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var vSlider;\n * Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     vSlider = new laya.ui.VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\n *     vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\n *     vSlider.min = 0;//设置 vSlider 最低位置值。\n *     vSlider.max = 10;//设置 vSlider 最高位置值。\n *     vSlider.value = 2;//设置 vSlider 当前位置值。\n *     vSlider.tick = 1;//设置 vSlider 刻度值。\n *     vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\n *     vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\n *     vSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 vSlider 位置变化处理器。\n *     Laya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\n * }\n * function onChange(value) {\n *     console.log(\"滑块的位置： value=\" + value);\n * }\n * @example\n * import HSlider = laya.ui.HSlider;\n * import VSlider = laya.ui.VSlider;\n * import Handler = laya.utils.Handler;\n * class VSlider_Example {\n *     private vSlider: VSlider;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.vSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\n *         this.vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\n *         this.vSlider.min = 0;//设置 vSlider 最低位置值。\n *         this.vSlider.max = 10;//设置 vSlider 最高位置值。\n *         this.vSlider.value = 2;//设置 vSlider 当前位置值。\n *         this.vSlider.tick = 1;//设置 vSlider 刻度值。\n *         this.vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\n *         this.vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\n *         this.vSlider.changeHandler = new Handler(this, this.onChange);//设置 vSlider 位置变化处理器。\n *         Laya.stage.addChild(this.vSlider);//把 vSlider 添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滑块的位置： value=\" + value);\n *     }\n * }\n * @see laya.ui.Slider\n */\nexport class VSlider extends Slider {\n\n}","import { UIComponent } from \"./UIComponent\";\nimport { Stage } from \"../display/Stage\";\nimport { Texture } from \"../resource/Texture\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * 微信开放数据展示组件，直接实例本组件，即可根据组件宽高，位置，以最优的方式显示开放域数据\n */\nexport class OpenDataContextView extends UIComponent {\n    private _fps: number = 30;\n\n    constructor() {\n        super();\n        this._width = this._height = 200;\n        let tex: Texture = new Texture(new Texture2D(this._width, this._height, TextureFormat.R8G8B8A8, false, false, false));\n        tex.bitmap.lock = true;\n        this.texture = tex;\n    }\n\n    get fps() {\n        return this._fps;\n    }\n\n    set fps(value: number) {\n        if (this._fps != value) {\n            this._fps = value;\n            if (LayaEnv.isPlaying && this.activeInHierarchy\n                && (window as any).wx && (window as any).sharedCanvas) {\n                ILaya.timer.clear(this, this._onLoop);\n                ILaya.timer.loop(1000 / value, this, this._onLoop);\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    _onActive(): void {\n        if (!LayaEnv.isPlaying)\n            return;\n\n        if ((window as any).wx && (window as any).sharedCanvas)\n            ILaya.timer.loop(1000 / this._fps, this, this._onLoop);\n    }\n    /**\n     * @override\n     */\n    _onInActive(): void {\n        if (!LayaEnv.isPlaying)\n            return;\n\n        this.postMsg({ type: \"close\" });\n        ILaya.timer.clear(this, this._onLoop);\n    }\n\n    private _onLoop(): void {\n        let tex = this.texture;\n        let canvas: HTMLCanvasElement = (window as any).sharedCanvas;\n        if (tex.width != canvas.width || tex.height != canvas.height) {\n            tex.bitmap.destroy();\n            tex.bitmap = new Texture2D(canvas.width, canvas.height, TextureFormat.R8G8B8A8, false, false, false);\n            tex.bitmap.lock = true;\n        }\n        (<Texture2D>tex.bitmap).setImageData(canvas, true, false);\n    }\n\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.width = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.height = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    set x(value: number) {\n        super.x = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    get x() {\n        return super.x;\n    }\n\n    /**\n     * @override\n     */\n    set y(value: number) {\n        super.y = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    get y() {\n        return super.y;\n    }\n\n    private updateViewPort(): void {\n        let stage: Stage = ILaya.stage;\n        let sx = stage._canvasTransform.getScaleX() * this.globalScaleX * stage.transform.getScaleX();\n        let sy = stage._canvasTransform.getScaleY() * this.globalScaleY * stage.transform.getScaleY();\n\n        this.postMsg({\n            type: \"updateViewPort\",\n            box: {\n                x: this.x * sx,\n                y: this.y * sy,\n                width: this.width * sx,\n                height: this.height * sy,\n            }\n        });\n    }\n\n    /**向开放数据域发送消息*/\n    postMsg(msg: any): void {\n        if ((window as any).wx && (window as any).wx.getOpenDataContext) {\n            var openDataContext: any = (window as any).wx.getOpenDataContext();\n            openDataContext.postMessage(msg);\n        }\n    }\n}","import { ClassUtils } from \"../utils/ClassUtils\";\nimport { AutoBitmap } from \"./AutoBitmap\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { CheckBox } from \"./CheckBox\";\nimport { Clip } from \"./Clip\";\nimport { ColorPicker } from \"./ColorPicker\";\nimport { ComboBox } from \"./ComboBox\";\nimport { Dialog } from \"./Dialog\";\nimport { DialogManager } from \"./DialogManager\";\nimport { FontClip } from \"./FontClip\";\nimport { HBox } from \"./HBox\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { HSlider } from \"./HSlider\";\nimport { Image } from \"./Image\";\nimport { Label } from \"./Label\";\nimport { LayoutBox } from \"./LayoutBox\";\nimport { List } from \"./List\";\nimport { Panel } from \"./Panel\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport { Radio } from \"./Radio\";\nimport { RadioGroup } from \"./RadioGroup\";\nimport { ScaleBox } from \"./ScaleBox\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { Slider } from \"./Slider\";\nimport { Tab } from \"./Tab\";\nimport { TextArea } from \"./TextArea\";\nimport { TextInput } from \"./TextInput\";\nimport { TipManager } from \"./TipManager\";\nimport { Tree } from \"./Tree\";\nimport { UIComponent } from \"./UIComponent\";\nimport { UIGroup } from \"./UIGroup\";\nimport { UIUtils } from \"./UIUtils\";\nimport { VBox } from \"./VBox\";\nimport { View } from \"./View\";\nimport { ViewStack } from \"./ViewStack\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { VSlider } from \"./VSlider\";\nimport { OpenDataContextView } from \"./OpenDataContextView\";\n\nlet c = ClassUtils.regClass;\nc(\"AutoBitmap\", AutoBitmap);\nc(\"Box\", Box);\nc(\"Button\", Button);\nc(\"CheckBox\", CheckBox);\nc(\"Clip\", Clip);\nc(\"ColorPicker\", ColorPicker);\nc(\"ComboBox\", ComboBox);\nc(\"Dialog\", Dialog);\nc(\"DialogManager\", DialogManager);\nc(\"FontClip\", FontClip);\nc(\"HBox\", HBox);\nc(\"HScrollBar\", HScrollBar);\nc(\"HSlider\", HSlider);\nc(\"Image\", Image);\nc(\"Label\", Label);\nc(\"LayoutBox\", LayoutBox);\nc(\"List\", List);\nc(\"Panel\", Panel);\nc(\"ProgressBar\", ProgressBar);\nc(\"Radio\", Radio);\nc(\"RadioGroup\", RadioGroup);\nc(\"ScaleBox\", ScaleBox);\nc(\"ScrollBar\", ScrollBar);\nc(\"Slider\", Slider);\nc(\"Tab\", Tab);\nc(\"TextArea\", TextArea);\nc(\"TextInput\", TextInput);\nc(\"TipManager\", TipManager);\nc(\"Tree\", Tree);\nc(\"UIGroup\", UIGroup);\nc(\"UIUtils\", UIUtils);\nc(\"VBox\", VBox);\nc(\"View\", View);\nc(\"ViewStack\", ViewStack);\nc(\"VScrollBar\", VScrollBar);\nc(\"VSlider\", VSlider);\nc(\"UIComponent\", UIComponent);\n\nc(\"OpenDataContextView\", OpenDataContextView);"],"names":["Graphics","LayaEnv","ILaya","DrawTextureCmd","Draw9GridTextureCmd","Utils","WeakObject","ColorFilter","Sprite","Widget","Event","ScrollType","Text","HideFlags","NodeFlags","URL","Loader","Handler","Input","Point","SerializeUtil","AssetDb","Tween","Ease","Rectangle","HierarchyParser","LegacyUIParser","Scene","Texture","Texture2D","TextureFormat","ClassUtils"],"mappings":"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"}