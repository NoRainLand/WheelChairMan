{"version":3,"file":"laya.core.js","sources":["../../src/layaAir/Decorators.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/ILaya.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/webgl/shader/BaseShader.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/NativeRenderTexture2D.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/webgl/shader/ShaderDefinesBase.ts","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/webgl/shader/Shader.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2X.ts","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitCMD.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/utils/Buffer2D.ts","../../src/layaAir/laya/webgl/utils/IndexBuffer2D.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts","../../src/layaAir/laya/webgl/utils/VertexBuffer2D.ts","../../src/layaAir/laya/webgl/utils/Mesh2D.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/webgl/canvas/NativeWebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/filters/NativeFilter.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/skinAnishader/skinShader.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/skinAnishader/skinShader.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/webgl/submit/Submit.ts","../../src/layaAir/laya/webgl/submit/SubmitCanvas.ts","../../src/layaAir/laya/webgl/submit/SubmitTarget.ts","../../src/layaAir/laya/webgl/submit/SubmitTexture.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/utils/NativeWordText.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/CharRender_Native.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/resource/NativeContext.ts","../../src/layaAir/laya/resource/Context.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/RenderEngine/RenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLExtension.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalTex.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalRT.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLBuffer.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/VertexArrayObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GlCapable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLParams.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLEngine.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/filters/BlurFilterGLRender.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/GlowFilterGLRender.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/utils/IStatRender.ts","../../src/layaAir/laya/utils/StatUI.ts","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/webgl/utils/MeshParticle2D.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/loaders/TTFLoader.ts","../../src/layaAir/laya/net/ResourceVersion.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/HTMLChar.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/display/cmd/DrawParticleCmd.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/CommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/DepthState.ts","../../src/layaAir/laya/RenderEngine/EXRTextureInfo.ts","../../src/layaAir/laya/RenderEngine/StencilState.ts","../../src/layaAir/laya/RenderEngine/RenderShader/DefineDatas.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderDefine.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderData.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderShader/RenderState.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLConfig.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/CommonMemoryAllocater.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/NativeMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager.ts","../../src/layaAir/laya/webgl/shader/ShaderValue.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts"],"sourcesContent":["export type EnumDescriptor = {\n    name: string,\n    value: any,\n    extend?: EnumDescriptor,\n    [index: string]: any,\n}[] | any[] | Object | string;\n\nexport interface PropertyDescriptor {\n    /** 属性名称。一般不需要设定。 */\n    name: string;\n    /** \n     * 属性类型。\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\n     */\n    type: string | Function | Object | [string | Function] | [\"Record\", string | Function];\n    /** 标题。如果不提供，则使用name。 */\n    caption: string;\n    /** 提示文字 */\n    tips: string;\n\n    /** 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个Inspector栏目内。 */\n    catalog: string;\n    /* 栏目标题。不提供则直接使用栏目名称。 */\n    catalogCaption: string;\n    /* 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。*/\n    catalogOrder: number;\n\n    /**\n     * 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\n     * \n     *      number : 数字输入。\n     *      string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\n     *      boolean : 多选框。\n     *      color : 一个颜色框+调色盘+拾色器\n     *      vec2 : XY输入的组合\n     *      vec3 : XYZ输入的组合\n     *      vec4 : XYZW输入的组合\n     *      asset : 选择资源\n     * \n     * 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\n     * 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为“color”。\n     * \n     * 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\n     * inspector为null的话则是完全不创建。\n     */\n    inspector: string;\n\n    /** 隐藏控制。\n     * 可以用表达式，支持的语法有：\n     * 1. 字符串。例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，隐藏这个属性。隐含的变量有两个，data为当前数据，field为IPropertyField接口。\n     * 2. 函数。函数原型为func(data:any, field:IPropertyField)。\n     */\n    hidden: boolean | string;\n    /** 只读控制。可以用表达式，参考隐藏控制。 */\n    readonly: boolean | string | Function;\n    /** 数据检查机制。\n     * 可以用表达式，支持的语法有：\n     * 1. 字符串。例如\"data.a\"， 如果data.a是一个字符串，表示验证不通过，这个字符串作为错误提示信息显示；如果是其他值，则表示验证通过。\n     *    隐含的变量有三个，data为当前数据，value为当前用户输入的值，field为IPropertyField接口。\n     * 2. 函数。函数原型为func(data:any, value:any, field:IPropertyField)。\n     *    如果返回值是一个字符串，表示验证不通过，这个字符串作为错误提示信息显示；如果是其他值，则表示验证通过。\n     */\n    validator: string;\n\n    /** 是否序列化 */\n    serializable: boolean;\n\n    /** 是否多行文本输入 */\n    multiline: boolean;\n    /** 是否密码输入 */\n    password: boolean;\n    /** 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交 */\n    submitOnTyping: boolean;\n    /** 输入文本的提示信息 */\n    prompt: string;\n\n    /** 定义枚举 */\n    enumSource: EnumDescriptor;\n\n    /** 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。 */\n    reverseBool: boolean;\n\n    /** 是否允许null值。默认为true。*/\n    nullable: boolean;\n\n    /** 数字的最小值 */\n    min: number,\n    /** 数字的最大值 */\n    max: number,\n    /** 数值范围，等同于一次性设置min和max。 */\n    range: [number, number];\n    /** 拖动方式改变数值时，每次数值改变的幅度。 */\n    step: number;\n    /** 小数点后的位数 */\n    fractionDigits: number;\n    /** 显示为百分比 */\n    percentage: boolean;\n\n    /** 对数组类型属性适用。表示数组是固定长度，不允许修改。*/\n    fixedLength: boolean;\n    /** 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。*/\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\n    /** 对数组类型属性适用。这里可以定义数组元素的属性 */\n    elementProps: Partial<PropertyDescriptor>;\n\n    /** 对颜色类型属性适用。表示是否提供透明度a值的修改。 */\n    showAlpha: boolean;\n    /** 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。*/\n    defaultColor: any;\n    /** 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。 */\n    colorNullable: boolean;\n\n    /** 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。*/\n    hideHeader: boolean;\n    /** 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。*/\n    createObjectMenu: Array<string>;\n\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。*/\n    assetTypeFilter: string;\n    /** 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。*/\n    useAssetPath: boolean;\n    /** 对资源类型的属性适用。选择资源时是否允许选择内部资源 */\n    allowInternalAssets: boolean;\n\n    /** 显示位置。语法：before xxx/after xxx/first/last。 */\n    position: string;\n\n    /** 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。 */\n    \"private\": boolean;\n\n    /** 增加缩进，单位是层级，不是像素。 */\n    addIndent: number;\n\n    /** 表示属性是否允许多选情况下编辑。默认true。 */\n    allowMultipleObjects: boolean;\n\n    /** 表示属性不显示在派生类的属性表中 */\n    hideInDeriveType: boolean;\n\n    /** 属性改变时额外调用对象的一个函数，这里是函数名称。\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。 \n     */\n    onChange: string;\n\n    /** 额外的选项 */\n    options: Record<string, any>;\n}\n\nexport interface TypeDescriptor {\n    /** 标题。如果不提供，则使用name。 */\n    caption: string;\n    /** 添加到组件菜单。 */\n    menu: string;\n    /** 图标。*/\n    icon: string;\n    /** 属性列表 */\n    properties: Array<Partial<PropertyDescriptor>>;\n    /** 编辑这个类实例的控件 */\n    inspector: string;\n    /** 对Component使用，表示这个组件允许挂载的节点类型。默认null */\n    worldType: \"2d\" | \"3d\" | null;\n    /** 额外的选项 */\n    options: Record<string, any>;\n}\n\nfunction dummy() { }\nfunction dummy2() { }\n\n/**\n * 注册一个类型，注册后才能被序列化系统自动保存和载入。\n */\nexport function regClass(): any { return dummy; }\n\n/**\n * 设置类型的额外信息。\n */\nexport function classInfo(info?: Partial<TypeDescriptor>): any { return dummy2; }\n\n/**\n * 设置组件可以在编辑器环境中激活。\n */\nexport function runInEditor(constructor: Function): void { }\n\n/**\n * 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\n */\nexport function property(info?: string | Partial<PropertyDescriptor>): any { return dummy2; }\n","/**\n *  Config 用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\n */\nexport class Config {\n    /**\n    * 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\n    */\n    static isAntialias: boolean = true;\n    /**\n     * 是否使用webgl2\n     */\n    static useWebGL2: boolean = true;\n    /*\n     * 限制fps \n     */\n    static FPS = 60;\n    /**\n     * 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\n     */\n    static useRetinalCanvas: boolean = false;\n\n    //-------------2D设置---------------------\n    /**\n     * 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\n     */\n    static animationInterval: number = 50;\n\n    /**\n       * 当使用webGL渲染2d的时候，每次创建vb是否直接分配足够64k个顶点的缓存。这样可以提高效率。\n       */\n    static webGL2D_MeshAllocMaxMem: boolean = true;\n\n    /*\n     *默认文本大小，默认为12\n     */\n    static defaultFontSize: number = 12;\n    /*\n     *默认文本字体，默认为Arial TODO delete  这个要查找机器里面有什么字体\n     */\n    static defaultFont: string = \"Arial\";\n\n    //-------------引擎内部使用-------------\n    /**\n     * 设置画布是否透明，只对2D(WebGL)、3D有效。\n     */\n    static isAlpha: boolean = false;\n    /**\n     * 设置画布是否包含深度\n     */\n    static isDepth: boolean = false;\n    /**\n     * 表明在一个系统性能低的环境是否创建该上下文的boolean值\n     */\n    static isfailIfMajorPerformanceCaveat: boolean = false;\n\n    static powerPreference: WebGLPowerPreference = \"default\";\n    /**\n     * 设置画布是否预乘，只对2D(WebGL)、3D有效。\n     */\n    static premultipliedAlpha: boolean = true;\n    /**\n     * 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\n     */\n    static isStencil: boolean = false;\n    /**\n     * 是否保留渲染缓冲区。\n     */\n    static preserveDrawingBuffer: boolean = false;\n    /**\n     * 是否打印Webgl指令，同时定位webgl报错\n     */\n    static printWebglOrder: boolean = false;\n    /**在IOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加*/\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\n\n    static defaultFontStr(): string {\n        return Config.defaultFontSize + \"px \" + Config.defaultFont;\n    }\n}\n\n","/**\n * @private\n * 静态常量集合\n */\nexport class Const {\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\n    static ENUM_TEXTALIGN_CENTER: number = 1;\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\n\n    static BYTES_PE: number = 4;\n    static BYTES_PIDX: number = 2;\n\n    static MAX_CLIP_SIZE: number = 99999999;\n}\n\n/**\n * @private\n * 节点标志\n */\nexport class NodeFlags {\n    static NOT_ACTIVE = 0x01;\n    static ACTIVE_INHIERARCHY = 0x02;\n    static AWAKED = 0x04;\n    static NOT_READY = 0x08;\n    static DISPLAY = 0x10;\n    static HAS_ZORDER = 0x20;\n    static HAS_MOUSE = 0x40;\n    static DISPLAYED_INSTAGE = 0x80;\n    static DRAWCALL_OPTIMIZE = 0x100;\n    static PROCESS_COLLISIONS = 0x200;\n    static PROCESS_TRIGGERS = 0x400;\n    static HAS_SCRIPT = 0x800;\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\n    static DISABLE_INNER_CLIPPING = 0x2000;\n    static DISABLE_OUTER_CLIPPING = 0x4000;\n    static DISABLE_VISIBILITY = 0x8000;\n    static HIDE_BY_EDITOR = 0x10000;\n    static LOCK_BY_EDITOR = 0x20000;\n}\n\nexport class HideFlags {\n    static HideInHierarchy = 0x1;\n    static HideInInspector = 0x2;\n    static DontSave = 0x4;\n    static HideAndDontSave = 0x7;\n}","/**\n * <code>ClassUtils</code> 是一个类工具类。\n */\nexport class ClassUtils {\n    static _classMap: Record<string, any> = {};\n\n    /**\n     * 注册 Class 映射，方便在class反射时获取。\n     * @param\tclassName 映射的名字或者别名。\n     * @param\tclassDef 类的全名或者类的引用，全名比如:\"laya.Sprite\"。\n     */\n    static regClass(className: string, classDef: any): void {\n        ClassUtils._classMap[className] = classDef;\n    }\n\n    /**\n     * 根据名字返回类对象。\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\n     * @return 类对象\n     */\n    static getClass(className: string): any {\n        return ClassUtils._classMap[className];\n    }\n\n    /**\n     * 根据名称创建 Class 实例。\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\n     * @return\t返回类的实例。\n     */\n    static getInstance(className: string): any {\n        var compClass: any = ClassUtils.getClass(className);\n        if (compClass) return new compClass();\n        else console.warn(\"[error] Undefined class:\", className);\n        return null;\n    }\n}\n\n","import { Timer } from \"./laya/utils/Timer\";\nimport { Loader } from \"./laya/net/Loader\";\nimport { Context } from \"./laya/resource/Context\";\nimport { Browser } from \"./laya/utils/Browser\";\nimport { Stage } from \"./laya/display/Stage\";\n\n/**\n * @internal\n * 使用全局类的时候，避免引用其他模块\n */\nexport class ILaya {\n    static Loader: typeof Loader = null;\n    static Context: typeof Context = null;\n    static Browser: typeof Browser = null;\n\n    static Laya: any = null;\n    static loader: Loader = null;\n    static timer: Timer = null;\n    static systemTimer: Timer = null;\n    static physicsTimer: Timer = null;\n    static stage: Stage = null;\n}\n","export class LayaEnv {\n    static version: string = \"3.0.0rc\";\n    static isPlaying: boolean = true;\n    static isPreview: boolean = false;\n    static isConch: boolean = (<any>window).conch != null;\n\n    static beforeInit: (stageConfig: IStageConfig) => void;\n    static afterInit: () => void;\n}\n\nexport interface IStageConfig {\n    designWidth?: number;\n    designHeight?: number;\n    scaleMode?: string;\n    screenMode?: string;\n    alignV?: string;\n    alignH?: string;\n    backgroundColor?: string;\n}","import { ClassUtils } from \"./ClassUtils\";\n\n/**\n * <p> <code>Pool</code> 是对象池类，用于对象的存储、重复使用。</p>\n * <p>合理使用对象池，可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。</p>\n */\nexport class Pool {\n    /**@private */\n    private static _CLSID: number = 0;\n    /**@private */\n    private static POOLSIGN: string = \"__InPool\";\n    /**@private  对象存放池。*/\n    private static _poolDic: any = {};\n\n    /**\n     * 根据对象类型标识字符，获取对象池。\n     * @param sign 对象类型标识字符。\n     * @return 对象池。\n     */\n    static getPoolBySign(sign: string): any[] {\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\n    }\n\n    /**\n     * 清除对象池的对象。\n     * @param sign 对象类型标识字符。\n     */\n    static clearBySign(sign: string): void {\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\n    }\n\n    /**\n     * 将对象放到对应类型标识的对象池中。\n     * @param sign 对象类型标识字符。\n     * @param item 对象。\n     */\n    static recover(sign: string, item: any): void {\n        if (item[Pool.POOLSIGN]) return;\n        item[Pool.POOLSIGN] = true;\n        Pool.getPoolBySign(sign).push(item);\n    }\n\n    /**\n     * 根据类名进行回收，如果类有类名才进行回收，没有则不回收\n     * @param\tinstance 类的具体实例\n     */\n    static recoverByClass(instance: any): void {\n        if (instance) {\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\n            if (className) Pool.recover(className, instance);\n        }\n    }\n\n    /**\n     * 返回类的唯一标识\n     */\n    private static _getClassSign(cla:any): string {\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\n        if (!className) {\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\n            Pool._CLSID++;\n            //ClassUtils.regClass(cla.name,cla);\n        }\n        return className;\n    }\n\n    /**\n     * 根据类名回收类的实例\n     * @param\tinstance 类的具体实例\n     */\n    static createByClass<T>(cls: new () => T): T {\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\n    }\n\n    /**\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\n     * <p>当对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。</p>\n     * @param sign 对象类型标识字符。\n     * @param cls 用于创建该类型对象的类。\n     * @return 此类型标识的一个对象。\n     */\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\n        if (!Pool._poolDic[sign]) return new cls();\n\n        var pool = Pool.getPoolBySign(sign);\n        if (pool.length) {\n            var rst = pool.pop();\n            rst[Pool.POOLSIGN] = false;\n        } else {\n            rst = new cls();\n        }\n        return rst;\n    }\n\n    /**\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\n     * <p>当对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。</p>\n     * @param sign 对象类型标识字符。\n     * @param createFun 用于创建该类型对象的方法。\n     * @param caller this对象\n     * @return 此类型标识的一个对象。\n     */\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\n        var pool: any[] = Pool.getPoolBySign(sign);\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\n        rst[Pool.POOLSIGN] = false;\n        return rst;\n    }\n\n    /**\n     * 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\n     * @param sign 对象类型标识字符。\n     * @return 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\n     */\n    static getItem(sign: string): any {\n        var pool: any[] = Pool.getPoolBySign(sign);\n        var rst: any = pool.length ? pool.pop() : null;\n        if (rst) {\n            rst[Pool.POOLSIGN] = false;\n        }\n        return rst;\n    }\n\n}\n\n\n","var _gid: number = 1;\nconst _pi: number = 180 / Math.PI;\nconst _pi2: number = Math.PI / 180;\n\n/**\n * <code>Utils</code> 是工具类。\n */\nexport class Utils {\n\n    /**\n     * 角度转弧度。\n     * @param\tangle 角度值。\n     * @return\t返回弧度值。\n     */\n    static toRadian(angle: number): number {\n        return angle * _pi2;\n    }\n\n    /**\n     * 弧度转换为角度。\n     * @param\tradian 弧度值。\n     * @return\t返回角度值。\n     */\n    static toAngle(radian: number): number {\n        return radian * _pi;\n    }\n\n    /**\n     * 将传入的 uint 类型颜色值转换为字符串型颜色值。\n     * @param color 颜色值。\n     * @return 字符串型颜色值。\n     */\n    static toHexColor(color: number): string {\n        if (color < 0 || isNaN(color)) return null;\n        var str: string = color.toString(16);\n        while (str.length < 6) str = \"0\" + str;\n        return \"#\" + str;\n    }\n\n    static fromStringColor(value: string): number {\n        if (!value)\n            return 0;\n\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\n            let p1 = value.indexOf(\"(\");\n            let p2 = value.indexOf(\")\");\n            if (p1 == -1 || p2 == -1)\n                return 0;\n\n            value = value.substring(p1 + 1, p2);\n            let arr: any[] = value.split(\",\");\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                arr[i] = parseFloat(arr[i]);\n                if (isNaN(arr[i]))\n                    arr[i] = 0;\n            }\n            if (arr.length == 4)\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\n            else\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\n        } else {\n            value.charAt(0) === '#' && (value = value.substring(1));\n            let len = value.length;\n            if (len === 3 || len === 4) {\n                let temp: string = \"\";\n                for (let i = 0; i < len; i++) {\n                    temp += (value[i] + value[i]);\n                }\n                value = temp;\n            }\n            return parseInt(value, 16);\n        }\n    }\n\n    /**获取一个全局唯一ID。*/\n    static getGID(): number {\n        return _gid++;\n    }\n\n    /**\n     * 将字符串解析成 XML 对象。\n     * @param value 需要解析的字符串。\n     * @return js原生的XML对象。\n     */\n    static parseXMLFromString: Function = function (value: string): XMLDocument {\n        var rst: any;\n        value = value.replace(/>\\s+</g, '><');\n        rst = (new DOMParser()).parseFromString(value, 'text/xml');\n        if (rst.firstChild.textContent.indexOf(\"This page contains the following errors\") > -1) {\n            throw new Error(rst.firstChild.firstChild.textContent);\n        }\n        return rst;\n    }\n\n    /**\n     * @private\n     * 清空source数组，复制array数组的值。\n     * @param\tsource 需要赋值的数组。\n     * @param\tarray 新的数组值。\n     * @return \t复制后的数据 source 。\n     */\n    static copyArray(source: any[], array: any[]): any[] {\n        source || (source = []);\n        if (!array) return source;\n        source.length = array.length;\n        var len: number = array.length;\n        for (let i = 0; i < len; i++) {\n            source[i] = array[i];\n        }\n        return source;\n    }\n\n    /**\n     * @private\n     * 批量移动点坐标。\n     * @param points 坐标列表。\n     * @param x x轴偏移量。\n     * @param y y轴偏移量。\n     */\n    static transPointList(points: any[], x: number, y: number): void {\n        var i: number, len: number = points.length;\n        for (i = 0; i < len; i += 2) {\n            points[i] += x;\n            points[i + 1] += y;\n        }\n    }\n\n    /**\n     * 解析一个字符串，并返回一个整数。和JS原生的parseInt不同：如果str为空或者非数字，原生返回NaN，这里返回0。\n     * @param\tstr\t\t要被解析的字符串。\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\n     * @return\t返回解析后的数字。\n     */\n    static parseInt(str: string, radix: number = 0): number {\n        var result: any = parseInt(str, radix);\n        if (isNaN(result)) return 0;\n        return result;\n    }\n\n    /**\n     * 获得路径中的文件名（包含扩展名）\n     */\n    static getBaseName(path: string): string {\n        let i = path.lastIndexOf(\"/\");\n        if (i != -1)\n            path = path.substring(i + 1);\n        i = path.indexOf(\"?\");\n        if (i != -1)\n            path = path.substring(0, i);\n        return path;\n    }\n\n    /**\n     * 获取文件名的扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\n     */\n    static getFileExtension(path: string): string {\n        let i = path.lastIndexOf(\".\");\n\n        if (i != -1) {\n            let ext = path.substring(i + 1).toLowerCase();\n            let j = ext.indexOf(\"?\");\n            if (j != -1)\n                ext = ext.substring(0, j);\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\n                let k = path.lastIndexOf(\".\", i - 1);\n                if (k != -1) {\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\n                        return ext2;\n                }\n            }\n            return ext;\n        }\n        else\n            return \"\";\n    }\n\n    /**\n     * 更改文件名的扩展名。\n     */\n    static replaceFileExtension(path: string, newExt: string): string {\n        if (!path)\n            return path;\n        let i = path.lastIndexOf(\".\");\n        if (newExt.length > 0)\n            newExt = \".\" + newExt;\n        if (i != -1) {\n            let j = path.indexOf(\"?\", i);\n            if (j != -1)\n                return path.substring(0, i) + newExt + path.substring(j);\n            else\n                return path.substring(0, i) + newExt;\n        }\n        else\n            return path + newExt;\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { NodeFlags } from \"../Const\";\nimport { Node } from \"../display/Node\"\nimport { Pool } from \"../utils/Pool\"\nimport { Utils } from \"../utils/Utils\";\n\n/**\n * <code>Component</code> 类用于创建组件的基类。\n */\nexport class Component {\n    /** @private */\n    private _id: number;\n    /**@private */\n    private _hideFlags: number = 0;\n    /**@private */\n    private _enableState: boolean;\n    /** @internal */\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\n\n    /**\n     * 获取所属Node节点。\n     */\n    owner: Node;\n    /** @internal */\n    _enabled: boolean = true;\n    /**\n     * 是否单例，即同一个节点只能添加此类型的脚本一次\n     */\n    _singleton?: boolean = true;\n    /**\n     * 是否可以在IDE环境中运行\n     */\n    runInEditor?: boolean;\n    scriptPath?: string;\n    _extra?: IComponentExtra;\n\n    get hideFlags(): number {\n        return this._hideFlags;\n    }\n\n    set hideFlags(value: number) {\n        this._hideFlags = value;\n    }\n\n    /**\n     * 创建一个新的 <code>Component</code> 实例。\n     */\n    constructor() {\n        this._id = Utils.getGID();\n\n        this._initialize();\n    }\n\n    //@internal\n    _initialize(): void {\n        this._extra = {};\n    }\n\n    hasHideFlag(flag: number): boolean {\n        return (this._hideFlags & flag) != 0;\n    }\n\n    /**\n     * 唯一标识ID。\n     */\n    get id(): number {\n        return this._id;\n    }\n\n    /**\n     * 是否启用组件。\n     */\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    set enabled(value: boolean) {\n        if (this._enabled != value) {\n            this._enabled = value;\n            if (this.owner)\n                this._setActive(value && this.owner.activeInHierarchy);\n        }\n    }\n\n    get awaked(): boolean {\n        return this._status > 0;\n    }\n\n    /**\n     * 是否已经销毁 。\n     */\n    get destroyed(): boolean {\n        return this._status == 4;\n    }\n    /**\n     * @internal\n     */\n    _isScript(): boolean {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    protected _resetComp(): void {\n        this._enabled = true;\n        this._status = 0;\n        this._enableState = false;\n        this.owner = null;\n    }\n\n    _setOwner(node: Node) {\n        if (this._status != 0) {\n            throw 'reuse a destroyed component';\n        }\n        this.owner = node;\n\n        if (this._isScript())\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\n\n        this._onAdded();\n        this.onAdded();\n    }\n\n    /**\n     * 被添加到节点后调用，可根据需要重写此方法\n     * @internal\n     */\n    protected _onAdded(): void {\n    }\n\n    /**\n   * 被激活后调用，可根据需要重写此方法\n   * @internal\n   */\n    protected _onAwake(): void {\n    }\n\n    /**\n     * 被激活后调用，可根据需要重写此方法\n     * @internal\n     */\n    protected _onEnable(): void {\n        this.onEnable();\n    }\n\n    /**\n    * 被禁用时调用，可根据需要重写此方法\n    * @internal\n    * 销毁组件\n    */\n    protected _onDisable(): void {\n        this.onDisable();\n    }\n\n    /**\n     * 被销毁时调用，可根据需要重写此方法\n     * @internal\n     */\n    protected _onDestroy(): void {\n    }\n\n    /**\n     * @internal\n     */\n    _parse(data: any, interactMap: any = null): void {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _parseInteractive(data: any = null, spriteMap: any = null) {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _cloneTo(dest: Component): void {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _setActive(value: boolean): void {\n        if (value) {\n            if (this._status == 0) {\n                this._status = 1;\n\n                if (LayaEnv.isPlaying || this.runInEditor) {\n                    this._onAwake();\n                    this.onAwake();\n                }\n            }\n            if (this._enabled && !this._enableState) {\n                this._enableState = true;\n\n                if (LayaEnv.isPlaying || this.runInEditor) {\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\n                    driver.add(this);\n\n                    if (LayaEnv.isPlaying && this._isScript())\n                        this.setupScript();\n\n                    this._onEnable();\n                }\n            }\n        } else if (this._enableState) {\n            this._enableState = false;\n            if (LayaEnv.isPlaying || this.runInEditor) {\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\n                driver.remove(this);\n\n                this.owner.offAllCaller(this);\n\n                this._onDisable();\n            }\n        }\n    }\n\n    protected setupScript() {\n    }\n\n    /**\n     * 销毁组件\n     */\n    destroy(): void {\n        if (this._status == 4)\n            return;\n\n        if (this.owner)\n            this.owner._destroyComponent(this);\n    }\n\n    /**\n     * @internal\n     */\n    _destroy(second?: boolean): void {\n        if (second) {\n            this._onDestroy();\n            this.onDestroy();\n            if (this.onReset) {\n                this.onReset();\n                this._resetComp();\n                Pool.recoverByClass(this);\n            }\n            return;\n        }\n\n        this._setActive(false);\n        this._status = 4;\n\n        let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\n        driver._toDestroys.add(this);\n    }\n\n    /**\n     * 被添加到节点后调用，和Awake不同的是即使节点未激活onAdded也会调用。\n     */\n    onAdded(): void {\n    }\n\n    /**\n     * 重置组件参数到默认值，如果实现了这个函数，则组件会被重置并且自动回收到对象池，方便下次复用\n     * 如果没有重置，则不进行回收复用\n\n     */\n    onReset?(): void;\n\n    /**\n     * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\n     */\n    onAwake(): void {\n    }\n\n    /**\n     * 组件被启用后执行，比如节点被添加到舞台后\n     */\n    onEnable(): void {\n    }\n\n    /**\n     * 第一次执行update之前执行，只会执行一次\n     */\n    onStart?(): void;\n\n    /**\n     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\n     */\n    onUpdate?(): void;\n\n    /**\n     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\n     */\n    onLateUpdate?(): void;\n\n    /**\n     * 渲染之前执行\n     */\n    onPreRender?(): void;\n\n    /**\n     * 渲染之后执行\n     */\n    onPostRender?(): void;\n\n    /**\n     * 组件被禁用时执行，比如从节点从舞台移除后\n     */\n    onDisable(): void {\n    }\n\n    /**\n     * 手动调用节点销毁时执行\n     */\n    onDestroy(): void {\n    }\n}\n\nexport interface IComponentExtra { }","import { Point } from \"./Point\";\nimport { Pool } from \"../utils/Pool\"\n\n/**\n * <p> <code>Matrix</code> 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。</p>\n * <p>您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。</p>\n */\nexport class Matrix {\n\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\n    static EMPTY: Matrix = new Matrix();\n    /**用于中转使用的 <code>Matrix</code> 对象。*/\n    static TEMP: Matrix = new Matrix();\n    /**@internal */\n    static _createFun: Function|null = null;\n\n    /**缩放或旋转图像时影响像素沿 x 轴定位的值。*/\n    a: number;\n    /**旋转或倾斜图像时影响像素沿 y 轴定位的值。*/\n    b: number;\n    /**旋转或倾斜图像时影响像素沿 x 轴定位的值。*/\n    c: number;\n    /**缩放或旋转图像时影响像素沿 y 轴定位的值。*/\n    d: number;\n    /**沿 x 轴平移每个点的距离。*/\n    tx: number;\n    /**沿 y 轴平移每个点的距离。*/\n    ty: number;\n    /**@internal 是否有旋转缩放操作*/\n    _bTransform: boolean = false;\n\n    /**\n     * 使用指定参数创建新的 <code>Matrix</code> 对象。\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\n     */\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\n        if (Matrix._createFun != null) {\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\n        }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n        this._checkTransform();\n    }\n\n    /**\n     * 将本矩阵设置为单位矩阵。\n     * @return 返回当前矩形。\n     */\n    identity(): Matrix {\n        this.a = this.d = 1;\n        this.b = this.tx = this.ty = this.c = 0;\n        this._bTransform = false;\n        return this;\n    }\n\n    /**@internal */\n    _checkTransform(): boolean {\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\n    }\n\n    /**\n     * 设置沿 x 、y 轴平移每个点的距离。\n     * @param\tx 沿 x 轴平移每个点的距离。\n     * @param\ty 沿 y 轴平移每个点的距离。\n     * @return\t返回对象本身\n     */\n    setTranslate(x: number, y: number): Matrix {\n        this.tx = x;\n        this.ty = y;\n        return this;\n    }\n\n    /**\n     * 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\n     * @return 返回此矩形对象。\n     */\n    translate(x: number, y: number): Matrix {\n        this.tx += x;\n        this.ty += y;\n        return this;\n    }\n\n    /**\n     * 对矩阵应用缩放转换。\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\n     * @return\t返回矩阵对象本身\n     */\n    scale(x: number, y: number): Matrix {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n        this._bTransform = true;\n        return this;\n    }\n\n    /**\n     * 对 Matrix 对象应用旋转转换。\n     * @param\tangle 以弧度为单位的旋转角度。\n     * @return\t返回矩阵对象本身\n     */\n    rotate(angle: number): Matrix {\n        var cos: number = Math.cos(angle);\n        var sin: number = Math.sin(angle);\n        var a1: number = this.a;\n        var c1: number = this.c;\n        var tx1: number = this.tx;\n\n        this.a = a1 * cos - this.b * sin;\n        this.b = a1 * sin + this.b * cos;\n        this.c = c1 * cos - this.d * sin;\n        this.d = c1 * sin + this.d * cos;\n        this.tx = tx1 * cos - this.ty * sin;\n        this.ty = tx1 * sin + this.ty * cos;\n        this._bTransform = true;\n        return this;\n    }\n\n    /**\n     * 对 Matrix 对象应用倾斜转换。\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\n     * @return 当前 Matrix 对象。\n     */\n    skew(x: number, y: number): Matrix {\n        var tanX: number = Math.tan(x);\n        var tanY: number = Math.tan(y);\n        var a1: number = this.a;\n        var b1: number = this.b;\n        this.a += tanY * this.c;\n        this.b += tanY * this.d;\n        this.c += tanX * a1;\n        this.d += tanX * b1;\n        return this;\n    }\n\n    /**\n     * 对指定的点应用当前矩阵的逆转化并返回此点。\n     * @param\tout 待转化的点 Point 对象。\n     * @return\t返回out\n     */\n    invertTransformPoint(out: Point): Point {\n        var a1: number = this.a;\n        var b1: number = this.b;\n        var c1: number = this.c;\n        var d1: number = this.d;\n        var tx1: number = this.tx;\n        var n: number = a1 * d1 - b1 * c1;\n\n        var a2: number = d1 / n;\n        var b2: number = -b1 / n;\n        var c2: number = -c1 / n;\n        var d2: number = a1 / n;\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\n    }\n\n    /**\n     * 将 Matrix 对象表示的几何转换应用于指定点。\n     * @param\tout 用来设定输出结果的点。\n     * @return\t返回out\n     */\n    transformPoint(out: Point): Point {\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\n    }\n\n    /**\n     * 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\n     * @param\tout 用来设定输出结果的点。\n     * @return\t返回out\n     */\n    transformPointN(out: Point): Point {\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\n    }\n\n    /**\n     * 获取 X 轴缩放值。\n     * @return  X 轴缩放值。\n     */\n    getScaleX(): number {\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\n    }\n\n    /**\n     * 获取 Y 轴缩放值。\n     * @return Y 轴缩放值。\n     */\n    getScaleY(): number {\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\n    }\n\n    /**\n     * 执行原始矩阵的逆转换。\n     * @return 当前矩阵对象。\n     */\n    invert(): Matrix {\n        var a1: number = this.a;\n        var b1: number = this.b;\n        var c1: number = this.c;\n        var d1: number = this.d;\n        var tx1: number = this.tx;\n        var n: number = a1 * d1 - b1 * c1;\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\n        return this;\n    }\n\n    /**\n     *  将 Matrix 的成员设置为指定值。\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\n     * @param\ttx 沿 x 轴平移每个点的距离。\n     * @param\tty 沿 y 轴平移每个点的距离。\n     * @return 当前矩阵对象。\n     */\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\n        return this;\n    }\n\n    /**\n     * 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\n     * @param\tmatrix 要连接到源矩阵的矩阵。\n     * @return\t当前矩阵。\n     */\n    concat(matrix: Matrix): Matrix {\n        var a: number = this.a;\n        var c: number = this.c;\n        var tx: number = this.tx;\n        this.a = a * matrix.a + this.b * matrix.c;\n        this.b = a * matrix.b + this.b * matrix.d;\n        this.c = c * matrix.a + this.d * matrix.c;\n        this.d = c * matrix.b + this.d * matrix.d;\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\n        return this;\n    }\n\n    /**\n     * 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\n     * @param\tm1 矩阵一。\n     * @param\tm2 矩阵二。\n     * @param\tout 输出对象。\n     * @return\t结果输出对象 out。\n     */\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\n        if (bb !== 0 || bc !== 0) {\n            out.a = aa * ba + ab * bc;\n            out.b = aa * bb + ab * bd;\n            out.c = ac * ba + ad * bc;\n            out.d = ac * bb + ad * bd;\n            out.tx = ba * atx + bc * aty + btx;\n            out.ty = bb * atx + bd * aty + bty;\n        } else {\n            out.a = aa * ba;\n            out.b = ab * bd;\n            out.c = ac * ba;\n            out.d = ad * bd;\n            out.tx = ba * atx + btx;\n            out.ty = bd * aty + bty;\n        }\n        return out;\n    }\n\n    /**\n     * 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\n     * @param m1\t矩阵一。\n     * @param m2\t矩阵二。\n     * @param out\t输出对象Array。\n     * @return 结果输出对象 out。\n     */\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\n        if (bb !== 0 || bc !== 0) {\n            out[0] = aa * ba + ab * bc;\n            out[1] = aa * bb + ab * bd;\n            out[4] = ac * ba + ad * bc;\n            out[5] = ac * bb + ad * bd;\n            out[12] = ba * atx + bc * aty + btx;\n            out[13] = bb * atx + bd * aty + bty;\n        } else {\n            out[0] = aa * ba;\n            out[1] = ab * bd;\n            out[4] = ac * ba;\n            out[5] = ad * bd;\n            out[12] = ba * atx + btx;\n            out[13] = bd * aty + bty;\n        }\n        return out;\n    }\n\n    /**\n     * @private\n     * 对矩阵应用缩放转换。反向相乘\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\n     */\n    scaleEx(x: number, y: number): void {\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\n        if (bb !== 0 || bc !== 0) {\n            this.a = x * ba;\n            this.b = x * bb;\n            this.c = y * bc;\n            this.d = y * bd;\n        } else {\n            this.a = x * ba;\n            this.b = 0 * bd;\n            this.c = 0 * ba;\n            this.d = y * bd;\n        }\n        this._bTransform = true;\n    }\n\n    /**\n     * @private\n     * 对 Matrix 对象应用旋转转换。反向相乘\n     * @param\tangle 以弧度为单位的旋转角度。\n     */\n    rotateEx(angle: number): void {\n        var cos: number = Math.cos(angle);\n        var sin: number = Math.sin(angle);\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\n        if (bb !== 0 || bc !== 0) {\n            this.a = cos * ba + sin * bc;\n            this.b = cos * bb + sin * bd;\n            this.c = -sin * ba + cos * bc;\n            this.d = -sin * bb + cos * bd;\n        } else {\n            this.a = cos * ba;\n            this.b = sin * bd;\n            this.c = -sin * ba;\n            this.d = cos * bd;\n        }\n        this._bTransform = true;\n    }\n\n    /**\n     * 返回此 Matrix 对象的副本。\n     * @return 与原始实例具有完全相同的属性的新 Matrix 实例。\n     */\n    clone(): Matrix {\n        var dec: Matrix = Matrix.create();\n        dec.a = this.a;\n        dec.b = this.b;\n        dec.c = this.c;\n        dec.d = this.d;\n        dec.tx = this.tx;\n        dec.ty = this.ty;\n        dec._bTransform = this._bTransform;\n        return dec;\n    }\n\n    /**\n     * 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\n     * @param\tdec 要复制当前矩阵数据的 Matrix 对象。\n     * @return\t已复制当前矩阵数据的 Matrix 对象。\n     */\n    copyTo(dec: Matrix): Matrix {\n        dec.a = this.a;\n        dec.b = this.b;\n        dec.c = this.c;\n        dec.d = this.d;\n        dec.tx = this.tx;\n        dec.ty = this.ty;\n        dec._bTransform = this._bTransform;\n        return dec;\n    }\n\n    /**\n     * 返回列出该 Matrix 对象属性的文本值。\n     * @return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\n     */\n    toString(): string {\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\n    }\n\n    /**\n     * 销毁此对象。\n     */\n    destroy(): void {\n        this.recover();\n    }\n\n    /**\n     * 回收到对象池，方便复用\n     */\n    recover(): void {\n        Pool.recover(\"Matrix\", this.identity());\n    }\n\n    /**\n     * 从对象池中创建一个 <code>Matrix</code> 对象。\n     * @return <code>Matrix</code> 对象。\n     */\n    static create(): Matrix {\n        return Pool.getItemByClass(\"Matrix\", Matrix);\n    }\n}\n\n","import { Pool } from \"../utils/Pool\"\n\n/**\n * <code>Point</code> 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\n */\nexport class Point {\n\n    /**临时使用的公用对象。*/\n    static TEMP: Point = new Point();\n    /**@private 全局空的point对象(x=0，y=0)，不允许修改此对象内容*/\n    static EMPTY: Point = new Point();\n\n    /**该点的水平坐标。*/\n    x: number;\n    /**该点的垂直坐标。*/\n    y: number;\n\n    /**\n     * 根据指定坐标，创建一个新的 <code>Point</code> 对象。\n     * @param x\t（可选）水平坐标。\n     * @param y\t（可选）垂直坐标。\n     */\n    constructor(x: number = 0, y: number = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * 从对象池创建\n     */\n    static create(): Point {\n        return Pool.getItemByClass(\"Point\", Point);\n    }\n\n    /**\n     * 将 <code>Point</code> 的成员设置为指定值。\n     * @param\tx 水平坐标。\n     * @param\ty 垂直坐标。\n     * @return 当前 Point 对象。\n     */\n    setTo(x: number, y: number): Point {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * 重置\n     */\n    reset(): Point {\n        this.x = this.y = 0;\n        return this;\n    }\n\n    /**\n     * 回收到对象池，方便复用\n     */\n    recover(): void {\n        Pool.recover(\"Point\", this.reset());\n    }\n\n    /**\n     * 计算当前点和目标点(x，y)的距离。\n     * @param\tx 水平坐标。\n     * @param\ty 垂直坐标。\n     * @return\t返回当前点和目标点之间的距离。\n     */\n    distance(x: number, y: number): number {\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\n    }\n\n    /**返回包含 x 和 y 坐标的值的字符串。*/\n    toString(): string {\n        return this.x + \",\" + this.y;\n    }\n\n    /**\n     * 标准化向量。\n     */\n    normalize(): void {\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\n        if (d > 0) {\n            var id: number = 1.0 / d;\n            this.x *= id;\n            this.y *= id;\n        }\n    }\n\n    /**\n     * copy point坐标\n     * @param\tpoint 需要被copy的point\n     */\n    copy(point: Point): Point {\n        return this.setTo(point.x, point.y);\n    }\n}\n\n","import { Pool } from \"../utils/Pool\";\nimport { Point } from \"./Point\";\n\n/**\n * <p><code>Rectangle</code> 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。</p>\n * <p>Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。</p>\n */\nexport class Rectangle {\n\n    /**@private 全局空的矩形区域x=0,y=0,width=0,height=0，不允许修改此对象内容*/\n    static EMPTY: Rectangle = new Rectangle();\n    /**全局临时的矩形区域，此对象用于全局复用，以减少对象创建*/\n    static TEMP: Rectangle = new Rectangle();\n\n    /** @private */\n    private static _temB: number[] = [];\n    /** @private */\n    private static _temA: number[] = [];\n\n    /** 矩形左上角的 X 轴坐标。*/\n    x: number;\n    /** 矩形左上角的 Y 轴坐标。*/\n    y: number;\n    /** 矩形的宽度。*/\n    width: number;\n    /** 矩形的高度。*/\n    height: number;\n\n    /**\n     * 创建一个 <code>Rectangle</code> 对象。\n     * @param\tx 矩形左上角的 X 轴坐标。\n     * @param\ty 矩形左上角的 Y 轴坐标。\n     * @param\twidth 矩形的宽度。\n     * @param\theight 矩形的高度。\n     */\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    /** 此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/\n    get right(): number {\n        return this.x + this.width;\n    }\n\n    /** 此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/\n    get bottom(): number {\n        return this.y + this.height;\n    }\n\n    /**\n     * 将 Rectangle 的属性设置为指定值。\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\n     * @param\twidth\t矩形的宽度。\n     * @param\theight\t矩形的高。\n     * @return\t返回属性值修改后的矩形对象本身。\n     */\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n\n    /**\n     * 重置\n     */\n    reset(): Rectangle {\n        this.x = this.y = this.width = this.height = 0;\n        return this;\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\n            //console.log(\"recover Temp or Empty:\", this);\n            return;\n        }\n        Pool.recover(\"Rectangle\", this.reset());\n    }\n\n    /**\n     * 创建\n     */\n    static create(): Rectangle {\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\n    }\n\n    /**\n     * 复制 source 对象的属性值到此矩形对象中。\n     * @param\tsourceRect\t源 Rectangle 对象。\n     * @return\t返回属性值修改后的矩形对象本身。\n     */\n    copyFrom(source: Rectangle): Rectangle {\n        this.x = source.x;\n        this.y = source.y;\n        this.width = source.width;\n        this.height = source.height;\n        return this;\n    }\n\n    /**\n     * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\n     * @param x\t点的 X 轴坐标值（水平位置）。\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\n     */\n    contains(x: number, y: number): boolean {\n        if (this.width <= 0 || this.height <= 0) return false;\n\n        if (x >= this.x && x < this.right) {\n            if (y >= this.y && y < this.bottom) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\n     * @param\trect Rectangle 对象。\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\n     */\n    intersects(rect: Rectangle): boolean {\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\n    }\n\n    /**\n     * 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\n     * @param rect\t待比较的矩形区域。\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\n     * @return\t返回相交的矩形区域对象。\n     */\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\n        if (!this.intersects(rect)) return null;\n        out || (out = new Rectangle());\n        out.x = Math.max(this.x, rect.x);\n        out.y = Math.max(this.y, rect.y);\n        out.width = Math.min(this.right, rect.right) - out.x;\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\n        return out;\n    }\n\n    /**\n     * <p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>\n     * <p>注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);</p>\n     * @param\t要添加到此 Rectangle 对象的 Rectangle 对象。\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\n     */\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\n        out || (out = new Rectangle());\n        this.clone(out);\n        if (source.width <= 0 || source.height <= 0) return out;\n        out.addPoint(source.x, source.y);\n        out.addPoint(source.right, source.bottom);\n        return this;\n    }\n\n    /**\n     * 返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\n     * @param out\t（可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。\n     * @return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\n     */\n    clone(out: Rectangle | null = null): Rectangle {\n        out || (out = new Rectangle());\n        out.x = this.x;\n        out.y = this.y;\n        out.width = this.width;\n        out.height = this.height;\n        return out;\n    }\n\n    /**\n     * 当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。\n     */\n    toString(): string {\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\n    }\n\n    /**\n     * 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\n     * @param\trect 待比较的 Rectangle 对象。\n     * @return\t如果判断的属性都相等，则返回 true ,否则返回 false。\n     */\n    equals(rect: Rectangle): boolean {\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\n        return true;\n    }\n\n    /**\n     * <p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>\n     * <p>此方法会修改本对象。</p>\n     * @param x\t点的 X 坐标。\n     * @param y\t点的 Y 坐标。\n     * @return 返回此 Rectangle 对象。\n     */\n    addPoint(x: number, y: number): Rectangle {\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\n        return this;\n    }\n\n    /**\n     * @internal\n     * 返回代表当前矩形的顶点数据。\n     * @return 顶点数据。\n     */\n    _getBoundPoints() {\n        var rst = Rectangle._temB;\n        rst.length = 0;\n        if (this.width == 0 || this.height == 0) return rst;\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\n        return rst;\n    }\n\n    /**\n     * @internal\n     * 返回矩形的顶点数据。\n     */\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\n        var rst: any[] = Rectangle._temA;\n        rst.length = 0;\n        if (width == 0 || height == 0) return rst;\n        if (sp) {\n            x *= sp.width;\n            y *= sp.height;\n            width *= sp.width;\n            height *= sp.height;\n        }\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\n        return rst;\n    }\n\n    /**\n     * @internal\n     * 返回包含所有点的最小矩形。\n     * @param pointList 点列表。\n     * @return 包含所有点的最小矩形矩形对象。\n     */\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\n\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\n        rst = rst ? rst : Rectangle.create();\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\n        minX = minY = 99999;\n        maxX = maxY = -minX;\n        for (i = 0; i < len; i += 2) {\n            tPoint.x = pointList[i];\n            tPoint.y = pointList[i + 1];\n            minX = minX < tPoint.x ? minX : tPoint.x;\n            minY = minY < tPoint.y ? minY : tPoint.y;\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\n        }\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    /**\n     * 确定此 Rectangle 对象是否为空。\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\n     */\n    isEmpty(): boolean {\n        if (this.width <= 0 || this.height <= 0) return true;\n        return false;\n    }\n}\n\n","import { IRender2DContext } from \"../RenderEngine/RenderInterface/IRender2DContext\";\nimport { IRenderDrawContext } from \"../RenderEngine/RenderInterface/IRenderDrawContext\";\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\nimport { IRenderOBJCreate } from \"../RenderEngine/RenderInterface/IRenderOBJCreate\";\nimport { ITextureContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\n\n/**\n * 封装GL命令\n */\nexport class LayaGL {\n    static textureContext: ITextureContext;\n    static renderEngine:IRenderEngine;\n    static render2DContext:IRender2DContext;\n    static renderDrawContext:IRenderDrawContext;\n    static renderOBJCreate:IRenderOBJCreate;\n}","export enum HDREncodeFormat{\n    NONE,\n    RGBM,\n    RGBD\n   \n}","/**\n * 纹理格式\n */\nexport enum TextureFormat {\n    /**纹理格式_R8G8B8。*/\n    R8G8B8 = 0,\n    /**纹理格式_R8G8B8A8。*/\n    R8G8B8A8 = 1,\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\n    R5G6B5 = 16,\n    /**纹理格式_ALPHA8。*/\n    Alpha8 = 2,\n    /**纹理格式_DXT1。*/\n    DXT1 = 3,\n    /**纹理格式_DXT3 */\n    DXT3 = 29,\n    /**纹理格式_DXT5。*/\n    DXT5 = 4,\n    /**纹理格式_ETC2RGB。*/\n    ETC1RGB = 5,\n    ///**纹理格式_ETC2RGB。*/\n    ETC2RGB = 6,\n    ///**纹理格式_ETC2RGBA。*/\n    ETC2RGBA = 7,\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\n    /**纹理格式_PVRTCRGB_2BPPV。*/\n    ETC2SRGB_Alpha8 = 8,\n    /** 纹理格式_ETC2SRGB*/\n    ETC2SRGB = 28,\n    /** 纹理格式_PVRTCRGB_2BPPV*/\n    PVRTCRGB_2BPPV = 9,\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\n    PVRTCRGBA_2BPPV = 10,\n    /**纹理格式_PVRTCRGB_4BPPV。*/\n    PVRTCRGB_4BPPV = 11,\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\n    PVRTCRGBA_4BPPV = 12,\n    /**RGBA格式纹理,每个通道32位浮点数。*/\n    R32G32B32A32 = 15,\n    /**R32G32B32 */\n    R32G32B32 = 30,\n    /**RGBA格式纹理，每个通道16位浮点数。 */\n    R16G16B16A16 = 17,\n    /**R16 G16 B6 */\n    R16G16B16 = 31,\n    /**ASTC 4x4*/\n    ASTC4x4 = 18,\n    /**ASTC sRGB 4x4 */\n    ASTC4x4SRGB = 23,\n    /**ASTC 6x6*/\n    ASTC6x6 = 19,\n    /**ASTC  6x6*/\n    ASTC6x6SRGB = 24,\n    /**ASTC 8x8 */\n    ASTC8x8 = 20,\n    /**ASTC srgb 8x8 */\n    ASTC8x8SRGB = 25,\n    /**ASTC 10x10 */\n    ASTC10x10 = 21,\n    /**ASTC srgb 10x10 */\n    ASTC10x10SRGB = 26,\n    /**ASTC 12x12 */\n    ASTC12x12 = 22,\n    /**ASTC srgb 12x12 */\n    ASTC12x12SRGB = 27,\n    /**ktx图片 */\n    KTXTEXTURE = -1,\n    /**pvr图片 */\n    PVRTEXTURE = -2\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \n\nexport class Delegate {\n    private _flag: number;\n    private _items: Array<any>;\n\n    public constructor() {\n        this._flag = 0;\n        this._items = [];\n    }\n\n    public add(callback: Function, target?: any, args?: any[]): void {\n        let arr = this._items;\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\n        if (index != -1) {\n            arr[index + 2] = args;\n            arr[index + 3] = 1;\n        }\n        else\n            arr.push(callback, target, args, 1);\n    }\n\n    public once(callback: Function, target?: any, args?: any[]): void {\n        let arr = this._items;\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\n        if (index != -1) {\n            arr[index + 2] = args;\n            arr[index + 3] = 2;\n        }\n        else\n            arr.push(callback, target, args, 2);\n    }\n\n    public remove(callback: Function, target?: any): void {\n        let arr = this._items;\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\n        if (index != -1) {\n            if (this._flag != 0) {\n                arr[index + 3] = 0;\n                this._flag = 2;\n            }\n            else\n                arr.splice(index, ITEM_LAYOUT);\n        }\n    }\n\n    public clear(): void {\n        let arr = this._items;\n        if (this._flag != 0) {\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\n            this._flag = 2;\n        }\n        else {\n            arr.length = 0;\n        }\n    }\n\n    public clearForTarget(target: any): void {\n        if (!target)\n            return;\n\n        let arr = this._items;\n        if (this._flag != 0) {\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\n            this._flag = 2;\n        }\n        else {\n            let i: number = arr.length - ITEM_LAYOUT;\n            while (i >= 0) {\n                if (arr[i + 1] == target)\n                    arr.splice(i, ITEM_LAYOUT);\n                i -= ITEM_LAYOUT;\n            }\n        }\n    }\n\n    public get count(): number {\n        return this._items.length / ITEM_LAYOUT;\n    }\n\n    public invoke(...args: any[]): void {\n        if (this._flag != 0)\n            return;\n\n        this._flag = 1;\n        let arr = this._items;\n        let cnt = arr.length;\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\n            let fixedArgs = arr[i + 2];\n            if (fixedArgs != null)\n                arr[i].call(arr[i + 1], ...fixedArgs, ...args);\n            else\n                arr[i].call(arr[i + 1], ...args);\n            if (arr[i + 3] == 2) {\n                arr[i + 3] = 0;\n                this._flag = 2;\n            }\n        }\n\n        if (this._flag == 2) {\n            let cnt = arr.length;\n            let i = 0;\n            while (i < cnt) {\n                if (arr[i + 3] == 0) {\n                    arr.splice(i, ITEM_LAYOUT);\n                    cnt -= ITEM_LAYOUT;\n                    continue;\n                }\n                else\n                    i += ITEM_LAYOUT;\n            }\n        }\n        this._flag = 0;\n    }\n}","import { Point } from \"../maths/Point\"\n\nexport interface ITouchInfo {\n    touchId: number;\n    readonly pos: Point;\n}\n\n/**\n * <code>Event</code> 是事件类型的集合。一般当发生事件时，<code>Event</code> 对象将作为参数传递给事件侦听器。\n */\nexport class Event {\n\n    /** 一个空的 Event 对象。用于事件派发中转使用。*/\n    static readonly EMPTY: Readonly<Event> = new Event();\n\n    /** 定义 mousedown 事件对象的 type 属性值。*/\n    static MOUSE_DOWN = \"mousedown\";\n    /** 定义 mouseup 事件对象的 type 属性值。*/\n    static MOUSE_UP = \"mouseup\";\n    /** 定义 rightmousedown 事件对象的 type 属性值。*/\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\n    /** 定义 rightmouseup 事件对象的 type 属性值。*/\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\n    /** 定义 click 事件对象的 type 属性值。*/\n    static CLICK = \"click\";\n    /** 定义 rightclick 事件对象的 type 属性值。*/\n    static RIGHT_CLICK = \"rightclick\";\n    /** 定义 mousemove 事件对象的 type 属性值。*/\n    static MOUSE_MOVE = \"mousemove\";\n    /** 定义 mouseover 事件对象的 type 属性值。*/\n    static MOUSE_OVER = \"mouseover\";\n    /** 定义 mouseout 事件对象的 type 属性值。*/\n    static MOUSE_OUT = \"mouseout\";\n    /** 定义 mousewheel 事件对象的 type 属性值。*/\n    static MOUSE_WHEEL = \"mousewheel\";\n    /** 定义 mouseover 事件对象的 type 属性值。*/\n    static ROLL_OVER = \"mouseover\";\n    /** 定义 mouseout 事件对象的 type 属性值。*/\n    static ROLL_OUT = \"mouseout\";\n    /** 定义 doubleclick 事件对象的 type 属性值。*/\n    static DOUBLE_CLICK = \"doubleclick\";\n    /** 定义 mousemove 事件对象的 type 属性值。*/\n    static MOUSE_DRAG = \"mousedrag\";\n    /** 定义 mousemove 事件对象的 type 属性值。*/\n    static MOUSE_DRAG_END = \"mousedragend\";\n\n    /** 定义 dragstart 事件对象的 type 属性值。*/\n    static DRAG_START = \"dragstart\";\n    /** 定义 dragmove 事件对象的 type 属性值。*/\n    static DRAG_MOVE = \"dragmove\";\n    /** 定义 dragend 事件对象的 type 属性值。*/\n    static DRAG_END = \"dragend\";\n\n    /** 定义 keydown 事件对象的 type 属性值。*/\n    static KEY_DOWN = \"keydown\";\n    /** 定义 keypress 事件对象的 type 属性值。*/\n    static KEY_PRESS = \"keypress\";\n    /** 定义 keyup 事件对象的 type 属性值。*/\n    static KEY_UP = \"keyup\";\n\n    /** 定义 change 事件对象的 type 属性值。*/\n    static CHANGE = \"change\";\n    /** 定义 changed 事件对象的 type 属性值。*/\n    static CHANGED = \"changed\";\n    /** 定义 willResize 事件对象的 type 属性值。*/\n    static WILL_RESIZE = \"willResize\";\n    /** 定义 resize 事件对象的 type 属性值。*/\n    static RESIZE = \"resize\";\n\n    /** 定义 added 事件对象的 type 属性值。*/\n    static ADDED = \"added\";\n    /** 定义 removed 事件对象的 type 属性值。*/\n    static REMOVED = \"removed\";\n    /** 定义 display 事件对象的 type 属性值。*/\n    static DISPLAY = \"display\";\n    /** 定义 undisplay 事件对象的 type 属性值。*/\n    static UNDISPLAY = \"undisplay\";\n\n    /** 定义 error 事件对象的 type 属性值。*/\n    static ERROR = \"error\";\n    /** 定义 complete 事件对象的 type 属性值。*/\n    static COMPLETE = \"complete\";\n    /** 定义 loaded 事件对象的 type 属性值。*/\n    static LOADED = \"loaded\";\n    /** 定义 loaded 事件对象的 type 属性值。*/\n    static READY = \"ready\";\n    /** 定义 progress 事件对象的 type 属性值。*/\n    static PROGRESS = \"progress\";\n    /** 定义 input 事件对象的 type 属性值。*/\n    static INPUT = \"input\";\n    /** 定义 render 事件对象的 type 属性值。*/\n    static RENDER = \"render\";\n    /** 定义 open 事件对象的 type 属性值。*/\n    static OPEN = \"open\";\n    /** 定义 message 事件对象的 type 属性值。*/\n    static MESSAGE = \"message\";\n    /** 定义 close 事件对象的 type 属性值。*/\n    static CLOSE = \"close\";\n\n    /** 定义 frame 事件对象的 type 属性值。*/\n    static FRAME = \"enterframe\";\n    /** 定义 enter 事件对象的 type 属性值。*/\n    static ENTER = \"enter\";\n    /** 定义 select 事件对象的 type 属性值。*/\n    static SELECT = \"select\";\n    /** 定义 blur 事件对象的 type 属性值。*/\n    static BLUR = \"blur\";\n    /** 定义 focus 事件对象的 type 属性值。*/\n    static FOCUS = \"focus\";\n    /** 定义 visibilitychange 事件对象的 type 属性值。*/\n    static VISIBILITY_CHANGE = \"visibilitychange\";\n    /** 定义 focuschange 事件对象的 type 属性值。*/\n    static FOCUS_CHANGE = \"focuschange\";\n    /** 定义 played 事件对象的 type 属性值。*/\n    static PLAYED = \"played\";\n    /** 定义 paused 事件对象的 type 属性值。*/\n    static PAUSED = \"paused\";\n    /** 定义 stopped 事件对象的 type 属性值。*/\n    static STOPPED = \"stopped\";\n    /** 定义 start 事件对象的 type 属性值。*/\n    static START = \"start\";\n    /** 定义 end 事件对象的 type 属性值。*/\n    static END = \"end\";\n    /** 定义 link 事件对象的 type 属性值。*/\n    static LINK = \"link\";\n    /** 定义 label 事件对象的 type 属性值。*/\n    static LABEL = \"label\";\n    /**浏览器全屏更改时触发*/\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\n    /**显卡设备丢失时触发*/\n    static DEVICE_LOST = \"devicelost\";\n    /**世界矩阵更新时触发。*/\n    static TRANSFORM_CHANGED = \"transformchanged\";\n    /**3D layer改变时触发。*/\n    static LAYERCHANGE = \"layerChange\";\n    /**3D Static改变时触发 */\n    static staticMask = \"staticMask\";\n\n    /**物理碰撞开始*/\n    static TRIGGER_ENTER = \"triggerenter\";\n    /**物理碰撞持续*/\n    static TRIGGER_STAY = \"triggerstay\";\n    /**物理碰撞结束*/\n    static TRIGGER_EXIT = \"triggerexit\";\n\n    /**物理碰撞开始*/\n    static COLLISION_ENTER = \"collisionenter\";\n    /**物理碰撞持续*/\n    static COLLISION_STAY = \"collisionstay\";\n    /**物理碰撞结束*/\n    static COLLISION_EXIT = \"collisionexit\";\n    /**关节破坏 */\n    static JOINT_BREAK = \"jointbreak\";\n\n    /**\n     * 检测指定事件类型是否是鼠标事件。\n     * @param\ttype 事件的类型。\n     * @return\t如果是鼠标事件，则值为 true;否则，值为 false。\n     */\n    static isMouseEvent(type: string): boolean {\n        return MOUSE_EVENTS.has(type);\n    }\n\n    /** 事件类型。*/\n    type: string;\n    /** 事件目标触发对象。*/\n    target: any;\n    /** 事件当前冒泡对象。*/\n    currentTarget: any;\n\n    /** 分配给触摸点的唯一标识号（作为 int）。*/\n    touchId: number = 0;\n    /** 点击坐标 */\n    readonly touchPos: Point;\n\n    /**滚轮滑动增量*/\n    delta: number;\n\n    /** 原生浏览器事件。*/\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\n\n    /** @internal */\n    _stopped: boolean;\n    /** @internal */\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\n\n    constructor() {\n        this.touchPos = new Point();\n    }\n\n    /**\n     * 设置事件数据。\n     * @param\ttype 事件类型。\n     * @param\tcurrentTarget 事件目标触发对象。\n     * @param\ttarget 事件当前冒泡对象。\n     * @return 返回当前 Event 对象。\n     */\n    setTo(type: string, currentTarget: any, target: any): Event {\n        this.type = type;\n        this.currentTarget = currentTarget;\n        this.target = target;\n        return this;\n    }\n\n    /**\n     * 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\n     */\n    stopPropagation(): void {\n        this._stopped = true;\n    }\n\n    /**\n     * 触摸点列表。\n     */\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\n        return this._touches;\n    }\n\n    /** \n     * 鼠标按键，\n     * 0：主按键，通常指鼠标左键\n     * 1：辅助按键，通常指鼠标滚轮中键\n     * 2：次按键，通常指鼠标右键\n     * 3：第四个按钮，通常指浏览器后退按钮\n     * 4：第五个按钮，通常指浏览器的前进按钮\n     */\n    get button(): number {\n        return ((<MouseEvent | WheelEvent>this.nativeEvent)?.button) ?? 0;\n    }\n\n    /**\n     * 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get altKey(): boolean {\n        return this.nativeEvent?.altKey;\n    }\n\n    /**\n     * 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get ctrlKey(): boolean {\n        return this.nativeEvent?.ctrlKey;\n    }\n\n    /**\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get shiftKey(): boolean {\n        return this.nativeEvent?.shiftKey;\n    }\n\n    /**\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get metaKey(): boolean {\n        return this.nativeEvent?.metaKey;\n    }\n\n    get key(): string {\n        return (<KeyboardEvent>this.nativeEvent).key;\n    }\n\n    get keyCode(): number {\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\n    }\n\n    /**\n     * 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\n     */\n    get charCode(): string {\n        return (<KeyboardEvent>this.nativeEvent)?.code;\n    }\n\n    /**\n     * 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\n     */\n    get keyLocation(): number {\n        if (this.nativeEvent)\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\n        else\n            return 0;\n    }\n\n    /**鼠标在 Stage 上的 X 轴坐标*/\n    get stageX(): number {\n        return this.touchPos.x;\n    }\n\n    /**鼠标在 Stage 上的 Y 轴坐标*/\n    get stageY(): number {\n        return this.touchPos.y;\n    }\n}\n\nconst MOUSE_EVENTS = new Set<string>([\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.RIGHT_CLICK, Event.DOUBLE_CLICK,\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL\n]);","import { Delegate } from \"../utils/Delegate\";\nimport { Event } from \"./Event\";\n\nconst eventPool: Array<Event> = [];\n\n/**\n * <code>EventDispatcher</code> 类是可调度事件的所有类的基类。\n */\nexport class EventDispatcher {\n    /**@private */\n    private _events: Record<string, Delegate>;\n\n    protected onStartListeningToType(type: string) {\n    }\n\n    /**\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\n     * @param\ttype 事件的类型。\n     * @return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\n     */\n    hasListener(type: string): boolean {\n        let listeners = this._events && this._events[type];\n        return !!listeners && listeners.count > 0;\n    }\n\n    /**\n     * 派发事件。\n     * @param type\t事件类型。\n     * @param data\t（可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\n     */\n    event(type: string, data?: any): boolean {\n        let listeners = this._events && this._events[type];\n        if (!listeners) return false;\n        let ret = listeners.count > 0;\n\n        if (Array.isArray(data))\n            listeners.invoke(...data);\n        else if (data !== undefined)\n            listeners.invoke(data);\n        else if (data === Event.EMPTY) {\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\n            listeners.invoke(ev.setTo(type, this, this));\n            ev.target = ev.currentTarget = null;\n            eventPool.push(ev);\n        }\n        else\n            listeners.invoke();\n\n        return ret;\n    }\n\n    /**\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\n     * @param type\t\t事件的类型。\n     * @param caller\t事件侦听函数的执行域。\n     * @param listener\t事件侦听函数。\n     * @param args\t\t（可选）事件侦听函数的回调参数。\n     * @return 此 EventDispatcher 对象。\n     */\n    on(type: string, listener: Function): EventDispatcher;\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\n        if (arguments.length == 2) {\n            listener = caller;\n            caller = null;\n        }\n        if (!this._events) this._events = {};\n        let listeners = this._events[type];\n        if (!listeners) {\n            this.onStartListeningToType(type);\n            this._events[type] = listeners = new Delegate();\n        }\n\n        listeners.add(listener, caller, args);\n        return this;\n    }\n\n    /**\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\n     * @param type\t\t事件的类型。\n     * @param caller\t事件侦听函数的执行域。\n     * @param listener\t事件侦听函数。\n     * @param args\t\t（可选）事件侦听函数的回调参数。\n     * @return 此 EventDispatcher 对象。\n     */\n    once(type: string, listener: Function): EventDispatcher;\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\n        if (arguments.length == 2) {\n            listener = caller;\n            caller = null;\n        }\n        if (!this._events) this._events = {};\n        let listeners = this._events[type];\n        if (!listeners) {\n            this.onStartListeningToType(type);\n            this._events[type] = listeners = new Delegate();\n        }\n\n        listeners.once(listener, caller, args);\n        return this;\n    }\n\n    /**\n     * 从 EventDispatcher 对象中删除侦听器。\n     * @param type\t\t事件的类型。\n     * @param caller\t事件侦听函数的执行域。\n     * @param listener\t事件侦听函数。\n     * @return 此 EventDispatcher 对象。\n     */\n    off(type: string, listener: Function): EventDispatcher;\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\n        if (arguments.length == 2) {\n            listener = caller;\n            caller = null;\n        }\n        let listeners = this._events && this._events[type];\n        if (listeners)\n            listeners.remove(listener, caller);\n\n        return this;\n    }\n\n    /**\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\n     * @param type\t（可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\n     * @return 此 EventDispatcher 对象。\n     */\n    offAll(type?: string): EventDispatcher {\n        if (type == null)\n            this._events = null;\n        else {\n            let listeners = this._events && this._events[type];\n            if (listeners)\n                listeners.clear();\n        }\n        return this;\n    }\n\n    /**\n     * 移除caller为target的所有事件监听\n     * @param\tcaller caller对象\n     */\n    offAllCaller(caller: any): EventDispatcher {\n        if (caller && this._events) {\n            for (let type in this._events)\n                this._events[type].clearForTarget(caller);\n        }\n        return this;\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\n\nvar _idCounter: number = 0;\nvar _disposingCounter: number = 0;\n\n/**\n * <code>Resource</code> 资源存取类。\n */\nexport class Resource extends EventDispatcher {\n    /** @private */\n    static _idResourcesMap: any = {};\n    /** @private 以字节为单位。*/\n    private static _cpuMemory: number = 0;\n    /** @private 以字节为单位。*/\n    private static _gpuMemory: number = 0;\n    /**是否开启debug模式 */\n    static DEBUG: boolean = false;\n\n    /**\n     * 当前内存，以字节为单位。\n     */\n    static get cpuMemory(): number {\n        return Resource._cpuMemory;\n    }\n\n    /**\n     * 当前显存，以字节为单位。\n     */\n    static get gpuMemory(): number {\n        return Resource._gpuMemory;\n    }\n\n    /**\n     * @internal\n     */\n    static _addCPUMemory(size: number): void {\n        Resource._cpuMemory += size;\n    }\n\n    /**\n     * @internal\n     */\n    static _addGPUMemory(size: number): void {\n        Resource._gpuMemory += size;\n    }\n\n    /**\n     * @internal\n     */\n    static _addMemory(cpuSize: number, gpuSize: number): void {\n        Resource._cpuMemory += cpuSize;\n        Resource._gpuMemory += gpuSize;\n    }\n\n    /**\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\n     */\n    static destroyUnusedResources(): void {\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\n        if (!ILaya.loader.loading)\n            Resource._destroyUnusedResources(true);\n        else\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\n    }\n\n    /** @private */\n    private static _destroyUnusedResources(force: boolean): void {\n        if (!force && ILaya.loader.loading)\n            return;\n\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\n        let resourceChange = true;\n\n        resourceChange = false;\n\n        for (let k in Resource._idResourcesMap) {\n            let res: Resource = Resource._idResourcesMap[k];\n            if (!res.lock && res._referenceCount === 0) {\n                res.destroy();\n                resourceChange = true;\n            }\n        }\n        \n        if (resourceChange)\n            ILaya.timer.frameLoop(1, Resource, Resource.destroyUnusedResources);\n\n    }\n\n    /**@private */\n    private _cpuMemory: number = 0;\n    /**@private */\n    private _gpuMemory: number = 0;\n\n    /**@private */\n    protected _id: number = 0;\n    /**@private */\n    protected _destroyed?: boolean;\n    /**@private */\n    protected _referenceCount: number = 0;\n    protected _obsolute: boolean;\n\n    /**是否加锁，如果true为不能使用自动释放机制。*/\n    lock?: boolean;\n    /**名称。 */\n    name?: string;\n    /**获取资源的URL地址。 */\n    url: string;\n    /**获取资源的UUID。 */\n    uuid: string;\n\n    /**是否在引用计数为0的时候立马删除他 */\n    destoryedImmediately: boolean;\n\n    /**\n     * 获取唯一标识ID,通常用于识别。\n     */\n    get id(): number {\n        return this._id;\n    }\n\n    /**\n     * 内存大小。\n     */\n    get cpuMemory(): number {\n        return this._cpuMemory;\n    }\n\n    /**\n     * 显存大小。\n     */\n    get gpuMemory(): number {\n        return this._gpuMemory;\n    }\n\n    /**\n     * 是否已销毁。\n     */\n    get destroyed(): boolean {\n        return this._destroyed;\n    }\n\n\n    /** 如果设置一个已缓存的资源obsolute为true，则\n     * 1）getRes仍然可以返回这个资源；\n     * 2）下次加载时会忽略这个缓存而去重新加载。。\n     */\n    get obsolute(): boolean {\n        return this._obsolute;\n    }\n\n    set obsolute(value: boolean) {\n        this._obsolute = value;\n    }\n\n    /**\n     * 获取资源的引用计数。\n     */\n    get referenceCount(): number {\n        return this._referenceCount;\n    }\n\n    /**\n     * 创建一个 <code>Resource</code> 实例。\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\n     */\n    protected constructor(managed?: boolean) {\n        super();\n\n        this._id = ++_idCounter;\n        this._destroyed = false;\n        this._referenceCount = 0;\n        if (managed == null || managed)\n            Resource._idResourcesMap[this.id] = this;\n        this.lock = false;\n        this.destoryedImmediately = true;\n    }\n\n    /**\n     * @internal\n     * 资源占用CPU资源\n     */\n    _setCPUMemory(value: number): void {\n        var offsetValue: number = value - this._cpuMemory;\n        this._cpuMemory = value;\n        Resource._addCPUMemory(offsetValue);\n    }\n\n    /**\n     * @internal\n     * 资源占用GPU资源\n     */\n    _setGPUMemory(value: number): void {\n        var offsetValue: number = value - this._gpuMemory;\n        this._gpuMemory = value;\n        Resource._addGPUMemory(offsetValue);\n    }\n\n    /**\n     * @internal\n     * 设置资源url\n     */\n    _setCreateURL(url: string, uuid?: string): void {\n        this.url = url;\n        this.uuid = uuid;\n    }\n\n    /**\n     * 返回资源是否从指定url创建\n     */\n    isCreateFromURL(url: string): boolean {\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\n            || this.url === url;\n    }\n\n    /**\n     * @internal\n     */\n    _addReference(count: number = 1): void {\n        this._referenceCount += count;\n    }\n\n    /**\n     * @internal\n     */\n    _removeReference(count: number = 1): void {\n        this._referenceCount -= count;\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destoryedImmediately) {\n            this.destroy();\n        }\n    }\n\n    /**\n     * 清除引用\n     */\n    _clearReference(): void {\n        this._referenceCount = 0;\n    }\n\n    /**\n     * @internal\n     */\n    protected _recoverResource(): void {\n    }\n\n    /**\n     * @internal\n     */\n    protected _disposeResource(): void {\n    }\n\n    /**\n     * @internal\n     */\n    protected _activeResource(): void {\n\n    }\n\n    /**\n     * 销毁资源,销毁后资源不能恢复。\n     */\n    destroy(): void {\n        if (this._destroyed)\n            return;\n\n        this._destroyed = true;\n        this.lock = false; //解锁资源，强制清理\n        _disposingCounter++;\n        this._disposeResource();\n        _disposingCounter--;\n        this.offAll();\n        delete Resource._idResourcesMap[this.id];\n        if (this.url) {\n            if (Resource.DEBUG)\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\n            ILaya.loader.clearRes(this.url, this);\n        }\n    }\n}\n\n","import { LayaGL } from \"../layagl/LayaGL\";\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\nimport { Resource } from \"./Resource\";\n\n/**\n * <code>BaseTexture</code> 纹理的父类，抽象类，不允许实例。\n */\nexport class BaseTexture extends Resource {\n    /**\n     * @internal\n     */\n    _texture: InternalTexture;\n    /**@internal */\n    hdrEncodeFormat: HDREncodeFormat;\n    /**@private */\n    protected _width: number;\n    /**@private */\n    protected _height: number;\n\n    /**\n     * 获取宽度。\n     */\n    get width(): number {\n        return this._width;\n    }\n\n    set width(width: number) {\n        this._width = width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get height(): number {\n        return this._height;\n    }\n\n    set height(height: number) {\n        this._height = height;\n    }\n\n    protected _dimension: TextureDimension;\n\n    /**\n     * 纹理几何属性\n     */\n    public get dimension(): TextureDimension {\n        return this._dimension;\n    }\n\n    protected _format: TextureFormat;\n    /**\n     * 纹理格式\n     */\n    public get format(): TextureFormat {\n        return this._format;\n    }\n\n    /**\n     * 是否生成mipmap\n     */\n    public get mipmap(): boolean {\n        return this._texture.mipmap;\n    }\n\n    public get mipmapCount(): number {\n        return this._texture.mipmapCount;\n    }\n\n    /**\n     * 各向异性值\n     */\n    public get anisoLevel(): number {\n        return this._texture.anisoLevel;\n    }\n    public set anisoLevel(value: number) {\n        this._texture.anisoLevel = value;\n    }\n\n    /**\n     * 采样过滤模式\n     */\n    public get filterMode(): FilterMode {\n        return this._texture.filterMode;\n    }\n    public set filterMode(value: FilterMode) {\n        this._texture.filterMode = value;\n    }\n\n    /**\n     * U方向采样模式\n     */\n    public get wrapModeU(): WrapMode {\n        return this._texture.wrapU;\n    }\n    public set wrapModeU(value: WrapMode) {\n        this._texture.wrapU = value;\n    }\n\n    /**\n     * V方向采样模式\n     */\n    public get wrapModeV(): WrapMode {\n        return this._texture.wrapV;\n    }\n    public set wrapModeV(value: WrapMode) {\n        this._texture.wrapV = value;\n    }\n\n    /**\n     * W方向采样模式\n     */\n    public get wrapModeW(): WrapMode {\n        return this._texture.wrapW;\n    }\n    public set wrapModeW(value: WrapMode) {\n        this._texture.wrapW = value;\n    }\n\n    /**\n     * 贴图压缩格式\n     */\n    public get compareMode(): TextureCompareMode {\n        return this._texture.compareMode;\n    }\n\n    public set compareMode(value: TextureCompareMode) {\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\n    }\n\n\n    /**\n     * gamma矫正值\n     * 如果是1.0  texture2D直接采样就是linear \n     */\n    public get gammaCorrection(): number {\n        return this._texture.gammaCorrection;\n    }\n\n    /**\n     * mipmap起始等级\n     */\n    public set baseMipmapLevel(value: number) {\n        this._texture.baseMipmapLevel = value;\n    }\n\n    public get baseMipmapLevel(): number {\n        return this._texture.baseMipmapLevel;\n    }\n\n    /**\n     * 最大Mipmap等级\n     */\n    public set maxMipmapLevel(value: number) {\n        this._texture.maxMipmapLevel = value;\n    }\n\n    public get maxMipmapLevel(): number {\n        return this._texture.maxMipmapLevel;\n    }\n\n    /**@internal */\n    _gammaSpace: boolean = false;\n    // todo\n    public get gammaSpace(): boolean {\n        // return this._gammaSpace;\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\n    }\n\n    /**\n     * 实例化一个纹理\n     * @param width 长\n     * @param height 宽\n     * @param format 格式\n     */\n    constructor(width: number, height: number, format: number) {\n        super();\n        this._width = width;\n        this._height = height;\n        this._format = format;\n        this.destoryedImmediately = false;\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\n    }\n\n    /**\n     * 是否是gpu压缩纹理格式\n     * @returns \n     */\n    gpuCompressFormat(): boolean {\n        let format = this._format;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n            case TextureFormat.R16G16B16:\n            case TextureFormat.R16G16B16A16:\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R5G6B5:\n            case TextureFormat.Alpha8:\n                return false;\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n            case TextureFormat.ETC1RGB:\n            case TextureFormat.ETC2RGB:\n            case TextureFormat.ETC2RGBA:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.PVRTCRGB_2BPPV:\n            case TextureFormat.PVRTCRGBA_2BPPV:\n            case TextureFormat.PVRTCRGB_4BPPV:\n            case TextureFormat.PVRTCRGBA_4BPPV:\n            case TextureFormat.ASTC4x4:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12:\n            case TextureFormat.ASTC12x12SRGB:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * 获取纹理格式的字节数\n     * @internal\n     */\n    _getFormatByteCount(): number {\n        switch (this._format) {\n            case TextureFormat.R8G8B8:\n                return 3;\n            case TextureFormat.R8G8B8A8:\n                return 4;\n            case TextureFormat.R5G6B5:\n                return 1;\n            case TextureFormat.Alpha8:\n                return 1;\n            case TextureFormat.R16G16B16A16:\n                return 2;\n            case TextureFormat.R32G32B32A32:\n                return 4;\n\n            default:\n                throw \"Texture2D: unknown format.\";\n        }\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    _getSource() {\n        return this._texture.resource;\n    }\n\n    /**\n     * 默认贴图\n     */\n    get defaultTexture(): BaseTexture {\n        throw \"defaulte\"\n    }\n\n    protected _disposeResource(): void {\n        this._texture.dispose();\n    }\n}","import { Matrix } from \"../maths/Matrix\"\n\n/**\n * <p> <code>Byte</code> 类提供用于优化读取、写入以及处理二进制数据的方法和属性。</p>\n * <p> <code>Byte</code> 类适用于需要在字节层访问数据的高级开发人员。</p>\n */\nexport class Byte {\n\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     */\n    static BIG_ENDIAN: string = \"bigEndian\";\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\n     * <p> <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。<br/>\n     * <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\n     */\n    static LITTLE_ENDIAN: string = \"littleEndian\";\n    /**@private */\n    private static _sysEndian: string = null;\n    /**@private 是否为小端数据。*/\n    protected _xd_: boolean = true;\n    /**@private */\n    private _allocated_: number = 8;\n    /**@private 原始数据。*/\n    protected _d_: any\n    /**@private DataView*/\n    protected _u8d_: any;\n    /**@private */\n    protected _pos_: number = 0;\n    /**@private */\n    protected _length: number = 0;\n\n    /**\n     * <p>获取当前主机的字节序。</p>\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     * @return 当前系统的字节序。\n     */\n    static getSystemEndian(): string {\n        if (!Byte._sysEndian) {\n            var buffer: any = new ArrayBuffer(2);\n            new DataView(buffer).setInt16(0, 256, true);\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\n        }\n        return Byte._sysEndian;\n    }\n\n    /**\n     * 创建一个 <code>Byte</code> 类的实例。\n     * @param\tdata\t用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\n     */\n    constructor(data: any = null) {\n        if (data) {\n            this._u8d_ = new Uint8Array(data);\n            this._d_ = new DataView(this._u8d_.buffer);\n            this._length = this._d_.byteLength;\n        } else {\n            this._resizeBuffer(this._allocated_);\n        }\n    }\n\n    /**\n     * 获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\n     */\n    get buffer(): ArrayBuffer {\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\n        return rstBuffer.slice(0, this._length);\n    }\n\n    /**\n     * <p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\n     *  <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     */\n    get endian(): string {\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\n    }\n\n    set endian(value: string) {\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\n    }\n\n    /**\n     * <p> <code>Byte</code> 对象的长度（以字节为单位）。</p>\n     * <p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>\n     * <p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>\n     */\n    set length(value: number) {\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\n        this._length = value;\n    }\n\n    get length(): number {\n        return this._length;\n    }\n\n    /**@private */\n    private _resizeBuffer(len: number): void {\n        try {\n            var newByteView: any = new Uint8Array(len);\n            if (this._u8d_ != null) {\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\n                else newByteView.set(this._u8d_.subarray(0, len));\n            }\n            this._u8d_ = newByteView;\n            this._d_ = new DataView(newByteView.buffer);\n        } catch (err) {\n            throw \"Invalid typed array length:\" + len;\n        }\n    }\n\n    /**\n     * @private\n     * <p>常用于解析固定格式的字节流。</p>\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\n     * @return 读取的字符串。\n     */\n    getString(): string {\n        return this.readString();\n    }\n\n    /**\n     * <p>常用于解析固定格式的字节流。</p>\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\n     * @return 读取的字符串。\n     */\n    readString(): string {\n        return this._rUTF(this.getUint16());\n    }\n\n    /**\n     * @private\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。</p>\n     * <p><b>注意：</b>返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Float32Array 对象。\n     */\n    getFloat32Array(start: number, len: number): any {\n        return this.readFloat32Array(start, len);\n    }\n\n    /**\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Float32Array 对象。\n     */\n    readFloat32Array(start: number, len: number): any {\n        var end: number = start + len;\n        end = (end > this._length) ? this._length : end;\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\n        this._pos_ = end;\n        return v;\n    }\n\n    /**\n     * @private\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Uint8Array 对象。\n     */\n    getUint8Array(start: number, len: number): Uint8Array {\n        return this.readUint8Array(start, len);\n    }\n\n    /**\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Uint8Array 对象。\n     */\n    readUint8Array(start: number, len: number): Uint8Array {\n        var end: number = start + len;\n        end = (end > this._length) ? this._length : end;\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\n        this._pos_ = end;\n        return v;\n    }\n\n    /**\n     * @private\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。</p>\n     * <p><b>注意：</b>返回的 Int16Array 对象，在 JavaScript 环境下，是原生的 HTML5 Int16Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Int16Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\n     * @param\tstart\t开始读取的字节偏移量位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Int16Array 对象。\n     */\n    getInt16Array(start: number, len: number): any {\n        return this.readInt16Array(start, len);\n    }\n\n    /**\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。\n     * @param\tstart\t开始读取的字节偏移量位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Uint8Array 对象。\n     */\n    readInt16Array(start: number, len: number): any {\n        var end: number = start + len;\n        end = (end > this._length) ? this._length : end;\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\n        this._pos_ = end;\n        return v;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\n     * @return 单精度（32 位）浮点数。\n     */\n    getFloat32(): number {\n        return this.readFloat32();\n    }\n\n    /**\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\n     * @return 单精度（32 位）浮点数。\n     */\n    readFloat32(): number {\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\n        this._pos_ += 4;\n        return v;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\n     * @return 双精度（64 位）浮点数。\n     */\n    getFloat64(): number {\n        return this.readFloat64();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\n     * @return 双精度（64 位）浮点数。\n     */\n    readFloat64(): number {\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\n        this._pos_ += 8;\n        return v;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\n     * @param\tvalue\t单精度（32 位）浮点数。\n     */\n    writeFloat32(value: number): void {\n        this._ensureWrite(this._pos_ + 4);\n        this._d_.setFloat32(this._pos_, value, this._xd_);\n        this._pos_ += 4;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\n     * @param\tvalue\t双精度（64 位）浮点数。\n     */\n    writeFloat64(value: number): void {\n        this._ensureWrite(this._pos_ + 8);\n        this._d_.setFloat64(this._pos_, value, this._xd_);\n        this._pos_ += 8;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\n     * @return Int32 值。\n     */\n    getInt32(): number {\n        return this.readInt32();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\n     * @return Int32 值。\n     */\n    readInt32(): number {\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\n        this._pos_ += 4;\n        return float;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\n     * @return Uint32 值。\n     */\n    getUint32(): number {\n        return this.readUint32();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\n     * @return Uint32 值。\n     */\n    readUint32(): number {\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\n        this._pos_ += 4;\n        return v;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\n     * @param\tvalue\t需要写入的 Int32 值。\n     */\n    writeInt32(value: number): void {\n        this._ensureWrite(this._pos_ + 4);\n        this._d_.setInt32(this._pos_, value, this._xd_);\n        this._pos_ += 4;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入 Uint32 值。\n     * @param\tvalue\t需要写入的 Uint32 值。\n     */\n    writeUint32(value: number): void {\n        this._ensureWrite(this._pos_ + 4);\n        this._d_.setUint32(this._pos_, value, this._xd_);\n        this._pos_ += 4;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\n     * @return Int16 值。\n     */\n    getInt16(): number {\n        return this.readInt16();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\n     * @return Int16 值。\n     */\n    readInt16(): number {\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\n        this._pos_ += 2;\n        return us;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\n     * @return Uint16 值。\n     */\n    getUint16(): number {\n        return this.readUint16();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\n     * @return Uint16 值。\n     */\n    readUint16(): number {\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\n        this._pos_ += 2;\n        return us;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\n     * @param\tvalue\t需要写入的Uint16 值。\n     */\n    writeUint16(value: number): void {\n        this._ensureWrite(this._pos_ + 2);\n        this._d_.setUint16(this._pos_, value, this._xd_);\n        this._pos_ += 2;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\n     * @param\tvalue\t需要写入的 Int16 值。\n     */\n    writeInt16(value: number): void {\n        this._ensureWrite(this._pos_ + 2);\n        this._d_.setInt16(this._pos_, value, this._xd_);\n        this._pos_ += 2;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\n     * @return Uint8 值。\n     */\n    getUint8(): number {\n        return this.readUint8();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\n     * @return Uint8 值。\n     */\n    readUint8(): number {\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\n        return this._u8d_[this._pos_++];\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\n     * @param\tvalue\t需要写入的 Uint8 值。\n     */\n    writeUint8(value: number): void {\n        this._ensureWrite(this._pos_ + 1);\n        this._d_.setUint8(this._pos_, value);\n        this._pos_++;\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint8 值。\n     */\n    //TODO:coverage\n    _getUInt8(pos: number): number {\n        return this._readUInt8(pos);\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint8 值。\n     */\n    //TODO:coverage\n    _readUInt8(pos: number): number {\n        return this._d_.getUint8(pos);\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint16 值。\n     */\n    //TODO:coverage\n    _getUint16(pos: number): number {\n        return this._readUint16(pos);\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint16 值。\n     */\n    //TODO:coverage\n    _readUint16(pos: number): number {\n        return this._d_.getUint16(pos, this._xd_);\n    }\n\n    /**\n     * @internal\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\n     * @return  Matrix 对象。\n     */\n    //TODO:coverage\n    _getMatrix(): Matrix {\n        return this._readMatrix();\n    }\n\n    /**\n     * @internal\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\n     * @return  Matrix 对象。\n     */\n    //TODO:coverage\n    _readMatrix(): Matrix {\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\n        return rst;\n    }\n\n    /**\n     * @private\n     * 读取指定长度的 UTF 型字符串。\n     * @param\tlen 需要读取的长度。\n     * @return 读取的字符串。\n     */\n    private _rUTF(len: number): string {\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\n        var u: any = this._u8d_, i: number = 0;\n        var strs: any[] = [];\n        var n: number = 0;\n        strs.length = 1000;\n        while (this._pos_ < max) {\n            c = u[this._pos_++];\n            if (c < 0x80) {\n                if (c != 0)\n                    //v += f(c);\\\n                    strs[n++] = f(c);\n            } else if (c < 0xE0) {\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\n            } else if (c < 0xF0) {\n                c2 = u[this._pos_++];\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\n            } else {\n                c2 = u[this._pos_++];\n                c3 = u[this._pos_++];\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\n                if (_code >= 0x10000) {\n                    const _offset = _code - 0x10000;\n                    const _lead = 0xd800 | (_offset >> 10);\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\n                    strs[n++] = f(_lead);\n                    strs[n++] = f(_trail);\n                }\n                else {\n                    strs[n++] = f(_code);\n                }\n            }\n            i++;\n        }\n        strs.length = n;\n        return strs.join('');\n        //return v;\n    }\n\n    /**\n     * @private\n     * 读取 <code>len</code> 参数指定的长度的字符串。\n     * @param\tlen\t要读取的字符串的长度。\n     * @return 指定长度的字符串。\n     */\n    //TODO:coverage\n    getCustomString(len: number): string {\n        return this.readCustomString(len);\n    }\n\n    /**\n     * @private\n     * 读取 <code>len</code> 参数指定的长度的字符串。\n     * @param\tlen\t要读取的字符串的长度。\n     * @return 指定长度的字符串。\n     */\n    //TODO:coverage\n    readCustomString(len: number): string {\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\n        var u: any = this._u8d_, i: number = 0;\n        while (len > 0) {\n            c = u[this._pos_];\n            if (c < 0x80) {\n                v += f(c);\n                this._pos_++;\n                len--;\n            } else {\n                ulen = c - 0x80;\n                this._pos_++;\n                len -= ulen;\n                while (ulen > 0) {\n                    c = u[this._pos_++];\n                    c2 = u[this._pos_++];\n                    v += f((c2 << 8) | c);\n                    ulen--;\n                }\n            }\n        }\n\n        return v;\n    }\n\n    /**\n     * 移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\n     */\n    get pos(): number {\n        return this._pos_;\n    }\n\n    set pos(value: number) {\n        this._pos_ = value;\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\n        //_d_.byteOffset = value;\n    }\n\n    /**\n     * 可从字节流的当前位置到末尾读取的数据的字节数。\n     */\n    get bytesAvailable(): number {\n        return this._length - this._pos_;\n    }\n\n    /**\n     * 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\n     */\n    clear(): void {\n        this._pos_ = 0;\n        this.length = 0;\n    }\n\n    /**\n     * @internal\n     * 获取此对象的 ArrayBuffer 引用。\n     * @return\n     */\n    __getBuffer(): ArrayBuffer {\n        //this._d_.buffer.byteLength = this.length;\n        return this._d_.buffer;\n    }\n\n    /**\n     * <p>将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字为字符串添加前缀。</p>\n     * <p>对应的读取方法为： getUTFBytes 。</p>\n     * @param value 要写入的字符串。\n     */\n    writeUTFBytes(value: string): void {\n        // utf8-decode\n        value = value + \"\";\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\n            var c: number = value.charCodeAt(i);\n\n            if (c <= 0x7F) {\n                this.writeByte(c);\n            } else if (c <= 0x7FF) {\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\n                this._ensureWrite(this._pos_ + 2);\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\n                this._pos_ += 2;\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\n                i++;\n                const c2 = value.charCodeAt(i);\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\n                    const _p1 = (c & 0x3FF) + 0x40;\n                    const _p2 = c2 & 0x3FF;\n\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\n                    const _b4 = 0x80 | (_p2 & 0x3F);\n\n                    this._ensureWrite(this._pos_ + 4);\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\n                    this._pos_ += 4;\n                }\n            } else if (c <= 0xFFFF) {\n                this._ensureWrite(this._pos_ + 3);\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\n                this._pos_ += 3;\n            } else {\n                this._ensureWrite(this._pos_ + 4);\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\n                this._pos_ += 4;\n            }\n        }\n    }\n\n    /**\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>\n     * <p>对应的读取方法为： getUTFString 。</p>\n     * @param\tvalue 要写入的字符串值。\n     */\n    writeUTFString(value: string): void {\n        var tPos: number = this.pos;\n        this.writeUint16(1);\n        this.writeUTFBytes(value);\n        var dPos: number = this.pos - tPos - 2;\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\n        this._d_.setUint16(tPos, dPos, this._xd_);\n    }\n\n    /**\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。</p>\n     * @param\tvalue 要写入的字符串值。\n     */\n    writeUTFString32(value: string): void {\n        var tPos = this.pos;\n        this.writeUint32(1);\n        this.writeUTFBytes(value);\n        var dPos = this.pos - tPos - 4;\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\n        this._d_.setUint32(tPos, dPos, this._xd_);\n    }\n\n\n    /**\n     * @private\n     * 读取 UTF-8 字符串。\n     * @return 读取的字符串。\n     */\n    readUTFString(): string {\n        //var tPos:int = pos;\n        //var len:int = getUint16();\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\n        return this.readUTFBytes(this.getUint16());\n    }\n\n    /**\n     * @private\n     */\n    readUTFString32(): string {\n        return this.readUTFBytes(this.getUint32());\n    }\n\n    /**\n     * <p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>\n     * <p>对应的写入方法为： writeUTFString 。</p>\n     * @return 读取的字符串。\n     */\n    getUTFString(): string {\n        return this.readUTFString();\n    }\n\n    /**\n     * @private\n     * 读字符串，必须是 writeUTFBytes 方法写入的字符串。\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\n     * @return 读取的字符串。\n     */\n    readUTFBytes(len: number = -1): string {\n        if (len === 0) return \"\";\n        var lastBytes: number = this.bytesAvailable;\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\n        len = len > 0 ? len : lastBytes;\n        return this._rUTF(len);\n    }\n\n    /**\n     * <p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>\n     * <p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\n     * @return 读取的字符串。\n     */\n    getUTFBytes(len: number = -1): string {\n        return this.readUTFBytes(len);\n    }\n\n    /**\n     * <p>在字节流中写入一个字节。</p>\n     * <p>使用参数的低 8 位。忽略高 24 位。</p>\n     * @param\tvalue\n     */\n    writeByte(value: number): void {\n        this._ensureWrite(this._pos_ + 1);\n        this._d_.setInt8(this._pos_, value);\n        this._pos_ += 1;\n    }\n\n    /**\n     * <p>从字节流中读取带符号的字节。</p>\n     * <p>返回值的范围是从 -128 到 127。</p>\n     * @return 介于 -128 和 127 之间的整数。\n     */\n    readByte(): number {\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\n        return this._d_.getInt8(this._pos_++);\n    }\n\n    /**\n     * @private\n     * 从字节流中读取带符号的字节。\n     */\n    getByte(): number {\n        return this.readByte();\n    }\n\n    /**\n     * @internal\n     * <p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>\n     * @param\tlengthToEnsure\t指定的长度。\n     */\n    _ensureWrite(lengthToEnsure: number): void {\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\n    }\n\n    /**\n     * <p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>\n     * <p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>\n     * <p>如果 offset 或 length 小于0，本函数将抛出异常。</p>\n     * @param\tarraybuffer\t需要写入的 Arraybuffer 对象。\n     * @param\toffset\t\tArraybuffer 对象的索引的偏移量（以字节为单位）\n     * @param\tlength\t\t从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）\n     */\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\n        if (length == 0) length = arraybuffer.byteLength - offset;\n        this._ensureWrite(this._pos_ + length);\n        var uint8array: any = new Uint8Array(arraybuffer);\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\n        this._pos_ += length;\n    }\n\n    /**\n     * 读取ArrayBuffer数据\n     * @param\tlength\n     * @return\n     */\n    readArrayBuffer(length: number): ArrayBuffer {\n        var rst: ArrayBuffer;\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\n        this._pos_ = this._pos_ + length\n        return rst;\n    }\n}\n\n","/**\n * <code>HalfFloatUtils</code> 类用于创建HalfFloat工具。\n */\nexport class HalfFloatUtils {\n    /**@internal */\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\n    /**@internal */\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\n    /**@internal */\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\n\n    /**@internal */\n    private static _baseTable: Uint32Array = new Uint32Array(512);\n    /**@internal */\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\n\n    /**@internal */\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\n    /**@internal */\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\n    /**@internal */\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\n\n    /**\n     * @internal\n     */\n    static __init__(): void {\n        for (var i: number = 0; i < 256; ++i) {\n            var e: number = i - 127;\n            // very small number (0, -0)\n            if (e < -27) {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\n\n                // small number (denorm)\n            } else if (e < -14) {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\n\n                // normal number\n            } else if (e <= 15) {\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\n\n                // large number (Infinity, -Infinity)\n            } else if (e < 128) {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\n\n                // stay (NaN, Infinity, -Infinity)\n            } else {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\n            }\n        }\n\n        HalfFloatUtils._mantissaTable[0] = 0;\n        for (i = 1; i < 1024; ++i) {\n            var m: number = i << 13;    // zero pad mantissa bits\n            e = 0;          // zero exponent\n\n            // normalized\n            while ((m & 0x00800000) === 0) {\n                e -= 0x00800000;    // decrement exponent\n                m <<= 1;\n            }\n\n            m &= ~0x00800000;   // clear leading 1 bit\n            e += 0x38800000;    // adjust bias\n\n            HalfFloatUtils._mantissaTable[i] = m | e;\n        }\n        for (i = 1024; i < 2048; ++i) {\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n        }\n\n        HalfFloatUtils._exponentTable[0] = 0;\n        for (i = 1; i < 31; ++i) {\n            HalfFloatUtils._exponentTable[i] = i << 23;\n        }\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\n        for (i = 33; i < 63; ++i) {\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n        }\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\n\n        HalfFloatUtils._offsetTable[0] = 0;\n        for (i = 1; i < 64; ++i) {\n            if (i === 32) {\n                HalfFloatUtils._offsetTable[i] = 0;\n            } else {\n                HalfFloatUtils._offsetTable[i] = 1024;\n            }\n        }\n    }\n\n    /**\n     * round a number to a half float number bits.\n     * @param {number} num\n     */\n    static roundToFloat16Bits(num: number): number {\n        HalfFloatUtils._floatView[0] = num;\n        var f: number = HalfFloatUtils._uint32View[0];\n        var e: number = (f >> 23) & 0x1ff;\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\n    }\n\n    /**\n     * convert a half float number bits to a number.\n     * @param {number} float16bits - half float number bits\n     */\n    static convertToNumber(float16bits: number): number {\n        var m: number = float16bits >> 10;\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\n        return HalfFloatUtils._floatView[0];\n    }\n\n}\n\n\n","/**\n * 纹理的过滤模式。\n */\nexport enum FilterMode {\n    /**点过滤。*/\n    Point = 0,\n    /**双线性过滤。*/\n    Bilinear = 1,\n    /**三线性过滤。*/\n    Trilinear = 2,\n}","export enum RenderCapable{\n    Element_Index_Uint32,//Index Usage 32\n    TextureFormat_R32G32B32A32,//Texturefloat32\n    TextureFormat_R16G16B16A16,//TextureFloat16\n    Texture_anisotropic,//anisotropic function\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\n    RenderTextureFormat_Depth,//depthTexture\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\n    Vertex_VAO,//VAO\n    DrawElement_Instance,//Instance\n    Shader_TextureLod,//Texture lod sampler\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\n    Texture_SRGB,//Textrue srgb   \n    MSAA,//MSAA\n    UnifromBufferObject,\n    GRAPHICS_API_GLES3,//TODO 感觉不太合适\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\n\nconst FOURCC_DXT1: number = 827611204;\nconst FOURCC_DXT3 = 861165636;\nconst FOURCC_DXT5: number = 894720068;\nconst FOURCC_DX10 = 808540228;\nconst DDPF_FOURCC: number = 0x4;\nconst DDPF_RGB = 0x40;\nconst DDSCAPS2_CUBEMAP = 0x200;\nconst DDPF_LUMINANCE = 0x20000;\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\nconst DDS_MAGIC: number = 0x20534444;\nconst DDS_HEADER_LENGTH: number = 31;\nconst DDS_HEADER_MAGIC: number = 0;\nconst DDS_HEADER_SIZE: number = 1;\nconst DDS_HEADER_FLAGS: number = 2;\nconst DDS_HEADER_HEIGHT: number = 3;\nconst DDS_HEADER_WIDTH: number = 4;\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\nconst DDS_HEADER_PF_FLAGS: number = 20;\nconst DDS_HEADER_PF_FOURCC: number = 21;\nconst DDS_HEADER_PF_RGBBPP: number = 22;\nconst DDS_HEADER_PF_CAPS2: number = 28;\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\n\nconst Int32ToFourCC = (value: number) => {\n    return String.fromCharCode(\n        value & 0xff,\n        (value >> 8) & 0xff,\n        (value >> 16) & 0xff,\n        (value >> 24) & 0xff\n    );\n}\n\n/**\n * dds 未存储 color space 需要手动指定\n */\nexport class DDSTextureInfo {\n\n    width: number;\n    height: number;\n    mipmapCount: number;\n    isCube: boolean;\n    bpp: number;\n    blockBytes: number;\n    format: TextureFormat;\n    compressed: boolean;\n    dataOffset: number;\n    source: ArrayBuffer;\n\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\n        this.width = width;\n        this.height = height;\n        this.mipmapCount = mipmapCount;\n        this.isCube = isCube;\n        this.blockBytes = blockBytes;\n        this.dataOffset = dataOffset;\n        this.format = format;\n        this.source = sourceData;\n        this.bpp = bpp;\n        this.compressed = compressed;\n    }\n\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\n\n        let width = header[DDS_HEADER_WIDTH];\n        let height = header[DDS_HEADER_HEIGHT];\n\n        let mipmapCount = 1;\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\n        }\n\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\n\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? extendedHeader[32] : 0;\n\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\n\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5);\n\n        let layaTexFormat = TextureFormat.DXT1;\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\n        let blockBytes = 1;\n        // todo  DXT10  unCompressed texture ?\n        switch (fourCC) {\n            case FOURCC_DXT1:\n                layaTexFormat = TextureFormat.DXT1;\n                blockBytes = 8;\n                break;\n            case FOURCC_DXT3:\n                layaTexFormat = TextureFormat.DXT3;\n                blockBytes = 16;\n                break;\n            case FOURCC_DXT5:\n                layaTexFormat = TextureFormat.DXT5;\n                blockBytes = 16;\n                break;\n            case FOURCC_D3DFMT_R16G16B16A16F:\n                layaTexFormat = TextureFormat.R16G16B16A16;\n                blockBytes = 4;\n                break;\n            case FOURCC_D3DFMT_R32G32B32A32F:\n                layaTexFormat = TextureFormat.R32G32B32A32;\n                blockBytes = 4;\n                break;\n            default:\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\n        }\n\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\n            throw \"Invalid magic number in DDS header\";\n        }\n        if (!isFourCC && !isRGB && !isLuminance) {\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\n        }\n\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\n\n        if (isCompressed && !ext) {\n            throw \"Compressed textures are not supported on this platform.\";\n        }\n\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\n    }\n\n}","\nexport enum TextureDimension {\n    Tex2D,\n    Cube,\n    Tex3D,\n    Texture2DArray,\n    CubeArray,\n    Unkonw,\n    None\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\n\nconst KTX1FileIdentifier = [\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\n];\n\nconst KTX2FileIdentifier = [\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\n];\n\nconst IdentifierByteSize = 12;\nconst HeaderSize = 13;\n\n/** etc1 */\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\n\n/** etc2 */\nconst COMPRESSED_R11_EAC = 37488;\nconst COMPRESSED_RG11_EAC = 37490;\nconst COMPRESSED_RGB8_ETC2 = 37492;\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\nconst COMPRESSED_SRGB8_ETC2 = 37493;\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\n\n/** astc */\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\n\n/** pvr */\n// todo\n\n\n/** gl param for unCompressed image data*/\nconst GL_FORMAT_RGBA = 6408;\nconst GL_FORMAT_RGB = 6407;\nconst GL_FORMAT_RGBA32F = 0x8814;\nconst GL_FORMAT_RGB32F = 0x8815;\nconst GL_FORMAT_RGBA16F = 0x881A;\nconst GL_FORMAT_RGB16F = 0x881B;\nconst GL_FORMAT_SRGB8 = 0x8C41;\n\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\n\n// gl data type\nconst GL_DATATYPE_BYTE = 0x1400;\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\nconst GL_DATATYPE_SHORT = 0x1402;\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\nconst GL_DATATYPE_INT = 0x1404;\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\nconst GL_DATATYPE_FLOAT = 0x1406;\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\n\n/**\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\n */\nexport class KTXTextureInfo {\n\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\n\n        if (glFormat == 0) {\n            switch (glInternalFormat) {\n                /** etc1 */\n                case COMPRESSED_RGB_ETC1_WEBGL:\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\n                /** etc2 */\n                // todo etc2 其他格式\n                case COMPRESSED_RGBA8_ETC2_EAC:\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\n                case COMPRESSED_RGB8_ETC2:\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\n                case COMPRESSED_SRGB8_ETC2:\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\n\n                /** astc */\n                // todo astc 其他格式\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\n                default:\n                    throw \"KTX: UnSupported Compressed format.\";\n            }\n        }\n        else {\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\n            }\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\n                return { format: TextureFormat.R32G32B32, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\n                return { format: TextureFormat.R16G16B16, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8, sRGB: true };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8, sRGB: false };\n            }\n            else {\n                throw \"ktx: Unsupported UnCompressed image data.\";\n            }\n        }\n    }\n\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\n\n\n        let FileIdentifier = new Uint8Array(source, 0, 12);\n\n        // ktx2\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\n            throw \"ktx2 !\"\n        }\n        // ktx1\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\n            return KTXTextureInfo.createKTX1Info(source);\n        }\n        else {\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\n        }\n    }\n\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\n\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\n\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\n\n        let endianness = headerDataView.getUint32(0, true);\n        let littleEndian = endianness == 0x04030201;\n\n        // header\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\n        let compressed = glType == 0;\n\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\n        let layaFormat = formatInfo.format;\n        let sRGBData = formatInfo.sRGB;\n\n        // todo  3d texture\n        let layaDemision = TextureDimension.Tex2D;\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\n            layaDemision = TextureDimension.CubeArray;\n        }\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\n            layaDemision = TextureDimension.Cube;\n        }\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\n            layaDemision = TextureDimension.Texture2DArray;\n        }\n\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\n\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\n\n    }\n\n\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\n\n    }\n\n}","import { ILaya } from \"../../ILaya\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Handler } from \"../utils/Handler\";\nimport { BaseTexture } from \"./BaseTexture\";\nimport { Byte } from \"../utils/Byte\";\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\n\nexport interface TexturePropertyParams {\n    wrapModeU?: number,\n    wrapModeV?: number,\n    filterMode?: FilterMode,\n    anisoLevel?: number,\n    premultiplyAlpha?: boolean,\n    hdrEncodeFormat?: HDREncodeFormat,\n}\n\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\n\n/**\n * <code>Texture2D</code> 类用于生成2D纹理。\n */\nexport class Texture2D extends BaseTexture {\n    /**Texture2D资源。*/\n    static TEXTURE2D: string = \"TEXTURE2D\";\n\n    /**纯灰色纹理。*/\n    static grayTexture: Texture2D = null;\n    /**纯白色纹理。*/\n    static whiteTexture: Texture2D = null;\n    /**纯黑色纹理。*/\n    static blackTexture: Texture2D = null;\n    /**默认法线纹理 */\n    static normalTexture: Texture2D = null;\n    /**错误纹理 */\n    static erroTextur: Texture2D = null;\n\n    /**\n     * @internal\n     */\n    static __init__() {\n        var pixels: Uint8Array = new Uint8Array(3);\n        pixels[0] = 128;\n        pixels[1] = 128;\n        pixels[2] = 128;\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false);\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\n        pixels[0] = 255;\n        pixels[1] = 255;\n        pixels[2] = 255;\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false);\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\n        pixels[0] = 0;\n        pixels[1] = 0;\n        pixels[2] = 0;\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false);\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\n            let floatPixle = new Uint16Array(3);\n            floatPixle[0] = 14336;\n            floatPixle[1] = 14336;\n            floatPixle[1] = 15360;\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16, false, false, false);\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\n        }\n        else {\n            pixels[0] = 128;\n            pixels[1] = 128;\n            pixels[2] = 255;\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false, false);\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\n        }\n\n        Texture2D.normalTexture.lock = true;\n\n        Texture2D.erroTextur = Texture2D.whiteTexture;\n    }\n\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\n        var byte: Byte = new Byte(data);\n        var version: String = byte.readUTFString();\n        var texture: Texture2D;\n        var pixelDataArrays: Float32Array | Uint16Array;\n        var usePixelData: Float32Array | Uint16Array;\n        switch (version) {\n            case \"LAYAANIMATORTEXTURE:0000\":\n                var textureWidth: number = byte.readInt32();\n                var pixelDataLength: number = byte.readInt32();\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\n                pixelDataArrays.set(usePixelData, 0);\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\n                texture.setPixelsData(pixelDataArrays, false, false);\n                texture.filterMode = FilterMode.Point;\n                break;\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\n                var textureWidth: number = byte.readInt32();\n                var pixelDataLength: number = byte.readInt32();\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\n                    }\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\n                    texture.setPixelsData(usePixelData, false, false);\n                    texture.filterMode = FilterMode.Point;\n\n                } else {\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\n                    usePixelData.set(pixelDataArrays, 0);\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\n                    texture.setPixelsData(usePixelData, false, false);\n                    texture.filterMode = FilterMode.Point;\n                }\n                break;\n            default:\n                throw \"Laya3D:unknow version.\";\n        }\n\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param imageSource \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\n\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\n        let mipmap = constructParams ? constructParams[3] : true;\n        let canread = constructParams ? constructParams[4] : false;\n        let srgb = constructParams ? constructParams[5] : false;\n        // todo  srgb\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb);\n\n        if (propertyParams) {\n            let pma = propertyParams.premultiplyAlpha;\n            texture.setImageData(imageSource, pma, false);\n            texture.setProperties(propertyParams);\n        }\n        else\n            texture.setImageData(imageSource, false, false);\n\n        if (canread) {\n            if (LayaEnv.isConch && imageSource._nativeObj) {\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\n            } else {\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\n                ILaya.Browser.canvas.clear();\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\n            }\n        }\n\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\n\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\n\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, false);\n\n        texture.setDDSData(ddsInfo);\n        if (propertyParams)\n            texture.setProperties(propertyParams);\n\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\n\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\n\n        texture.setKTXData(ktxInfo);\n        if (propertyParams)\n            texture.setProperties(propertyParams);\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     */\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\n        throw \"pvr !\";\n    }\n\n    /**\n     * 加载纹理\n     * @param url 路径\n     * @param complete 处理时间\n     */\n    static load(url: string, complete: Handler): void {\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\n    }\n\n    /**@internal */\n    _canRead: boolean = false;\n    /**@internal */\n    _pixels: Uint8Array;\n\n    /**\n     * 实例化2D纹理\n     * @param width \n     * @param height \n     * @param format \n     * @param mipmap \n     * @param canRead \n     * @param sRGB \n     * @returns \n     */\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\n        super(width, height, format);\n        this._dimension = TextureDimension.Tex2D;\n        this._gammaSpace = sRGB;\n        this._canRead = canRead;\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB);\n        return;\n    }\n\n    /**\n     * 设置Image数据\n     * @param source Image原始数据\n     * @param premultiplyAlpha 是否预乘法\n     * @param invertY \n     */\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置像素数据\n     * @param source \n     * @param premultiplyAlpha \n     * @param invertY \n     */\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置像素值\n     * @param xOffset offset X\n     * @param yOffset offset Y\n     * @param width 宽\n     * @param height 高\n     * @param pixels 像素\n     * @param mipmapLevel mipmap等级\n     * @param generateMipmap 生成mipmap\n     * @param premultiplyAlpha 预乘\n     * @param invertY 翻转Y\n     */\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置dds数据\n     * @param ddsInfo \n     */\n    setDDSData(ddsInfo: DDSTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\n    }\n\n    /**\n     * 设置ktx数据\n     * @param ktxInfo \n     */\n    setKTXData(ktxInfo: KTXTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\n    }\n\n    /**\n     * 设置HDR数据\n     * @param hdrInfo \n     */\n    setHDRData(hdrInfo: HDRTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\n    }\n\n    /**\n     * 默认贴图\n     */\n    get defaultTexture(): BaseTexture {\n        return Texture2D.grayTexture;\n    }\n\n    /**\n     * \n     * 获得像素\n     * @returns \n     */\n    getPixels() {\n        if (this._canRead && this._pixels) {\n            return this._pixels;\n        }\n        else {\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\n        }\n    }\n\n    /**\n     * @internal\n     * @param propertyParams \n     */\n    private setProperties(propertyParams: TexturePropertyParams) {\n        if (propertyParams) {\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\n        }\n    }\n}","import { Resource } from \"../../resource/Resource\"\n\n/**\n * ...\n * @author ...\n */\nexport class BaseShader extends Resource {\n    static activeShader: BaseShader|null;\t\t\t//等于bindShader或者null\n    static bindShader: BaseShader;\t\t\t//当前绑定的shader\n\n    constructor() {\n        super();\n\n\n    }\n\n}\n\n\n","import { Matrix } from \"../../maths/Matrix\"\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\n\nexport class RenderState2D {\n    static _MAXSIZE: number = 99999999;\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\n    static EMPTYMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    static TEMPMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    static worldMatrix4: number[] = RenderState2D.TEMPMAT4_ARRAY;\n\n    static worldMatrix: Matrix = new Matrix();\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\n    static worldAlpha: number = 1.0;\n\n    static worldScissorTest: boolean = false;\n\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\n    static worldShaderDefines: ShaderDefines2D;\n    static worldFilters: any[];\n\n    static width: number = 0;\n    static height: number = 0;\n\n    static InvertY:boolean = false;\n    /* 不知道 有什么用，删掉先\n    public static function getMatrArray():Array {\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    }\n    */\n    //TODO:coverage\n    static mat2MatArray(mat: Matrix, matArray: any[]): any[] {\n        var m: Matrix = mat;\n        var m4: any[] = matArray;\n        m4[0] = m.a;\n        m4[1] = m.b;\n        m4[2] = RenderState2D.EMPTYMAT4_ARRAY[2];\n        m4[3] = RenderState2D.EMPTYMAT4_ARRAY[3];\n        m4[4] = m.c;\n        m4[5] = m.d;\n        m4[6] = RenderState2D.EMPTYMAT4_ARRAY[6];\n        m4[7] = RenderState2D.EMPTYMAT4_ARRAY[7];\n        m4[8] = RenderState2D.EMPTYMAT4_ARRAY[8];\n        m4[9] = RenderState2D.EMPTYMAT4_ARRAY[9];\n        m4[10] = RenderState2D.EMPTYMAT4_ARRAY[10];\n        m4[11] = RenderState2D.EMPTYMAT4_ARRAY[11];\n        m4[12] = m.tx;\n        m4[13] = m.ty;\n        m4[14] = RenderState2D.EMPTYMAT4_ARRAY[14];\n        m4[15] = RenderState2D.EMPTYMAT4_ARRAY[15];\n        return matArray;\n    }\n\n    static restoreTempArray(): void {\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\n    }\n\n    static clear(): void {\n        RenderState2D.worldScissorTest = false;\n        //worldFilters = null;\n        RenderState2D.worldAlpha = 1;\n        //worldClipRect.x = worldClipRect.y = 0;\n        //worldClipRect.width = width;\n        //worldClipRect.height = height;\n    }\n\n}\n\n\n","import { TextureFormat } from \"./TextureFormat\";\n\nexport enum RenderTargetFormat {\n \n    None = -1,\n    /**使用RGB的纹理，不可设置SRGB参数 */\n    R8G8B8 = TextureFormat.R8G8B8,\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\n    R32G32B32 = TextureFormat.R32G32B32,\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\n    R16G16B16 = TextureFormat.R16G16B16,\n    \n    DEPTH_16 = 35,\n    STENCIL_8 = 36,\n    DEPTHSTENCIL_24_8 = 37,\n    DEPTH_32 = 38\n}","export enum RenderClearFlag{\n    Nothing = 0,\n    Color = 1,\n    Depth = 2,\n    Stencil = 4,\n}","import { IClone } from \"../utils/IClone\";\n\n/**\n * <code>Color</code> 类用于创建颜色实例。\n */\nexport class Color implements IClone {\n    /**\n     * 红色\n     */\n    static RED: Color = new Color(1, 0, 0, 1);\n    /**\n     * 绿色\n     */\n    static GREEN: Color = new Color(0, 1, 0, 1);\n    /**\n     * 蓝色\n     */\n    static BLUE: Color = new Color(0, 0, 1, 1);\n    /**\n     * 蓝绿色\n     */\n    static CYAN: Color = new Color(0, 1, 1, 1);\n    /**\n     * 黄色\n     */\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\n    /**\n     * 品红色\n     */\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\n    /**\n     * 灰色\n     */\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\n    /**\n     * 白色\n     */\n    static WHITE: Color = new Color(1, 1, 1, 1);\n    /**\n     * 黑色\n     */\n    static BLACK: Color = new Color(0, 0, 0, 1);\n    /**\n     * 全透明\n     */\n    static CLEAR: Color = new Color(0, 0, 0, 0);\n\n    /**\n     * Gamma空间值转换到线性空间。\n     * @param value gamma空间值。\n     */\n    static gammaToLinearSpace(value: number): number {\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\n        // {  cs / 12.92,                 cs <= 0.04045 }\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\n        if (value <= 0.04045)\n            return value / 12.92;\n        else if (value < 1.0)\n            return Math.pow((value + 0.055) / 1.055, 2.4);\n        else\n            return Math.pow(value, 2.4);\n    }\n\n    /**\n     * 线性空间值转换到Gamma空间。\n     * @param value 线性空间值。\n     */\n    static linearToGammaSpace(value: number): number {\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\n        // {  0.0,                          0         <= cl\n        // {  12.92 * c,                    0         <  cl < 0.0031308\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\n        if (value <= 0.0)\n            return 0.0;\n        else if (value <= 0.0031308)\n            return 12.92 * value;\n        else if (value <= 1.0)\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\n        else\n            return Math.pow(value, 0.41666);\n    }\n\n\n    /**red分量*/\n    r: number;\n\n    /**green分量*/\n    g: number;\n\n    /**blue分量*/\n    b: number;\n\n    /**alpha分量*/\n    a: number;\n\n    /**\n     * 创建一个 <code>Color</code> 实例。\n     * @param\tr  颜色的red分量。\n     * @param\tg  颜色的green分量。\n     * @param\tb  颜色的blue分量。\n     * @param\ta  颜色的alpha分量。\n     */\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    equal(c: Color): boolean {\n        if (!c) return false;\n        const toFIxed = (a: number, b: number) => {\n            var delta = 1e-5;\n            return -delta < a - b && a - b < delta;\n        }\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\n    }\n\n    /**\n     * Gamma空间转换到线性空间。\n     * @param\tlinear 线性空间颜色。\n     */\n    toLinear(out: Color): void {\n        out.r = Color.gammaToLinearSpace(this.r);\n        out.g = Color.gammaToLinearSpace(this.g);\n        out.b = Color.gammaToLinearSpace(this.b);\n        out.a = this.a;\n    }\n\n    /**\n     * 线性空间转换到Gamma空间。\n     * @param\tgamma Gamma空间颜色。\n     */\n    toGamma(out: Color): void {\n        out.r = Color.linearToGammaSpace(this.r);\n        out.g = Color.linearToGammaSpace(this.g);\n        out.b = Color.linearToGammaSpace(this.b);\n        out.a = this.a;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destColor: Color = (<Color>destObject);\n        destColor.r = this.r;\n        destColor.g = this.g;\n        destColor.b = this.b;\n        destColor.a = this.a;\n    }\n\n    scale(value: number): Color {\n        this.r = this.r * value;\n        this.g = this.g * value;\n        this.b = this.b * value;\n        return this;\n    }\n\n    setValue(r: number, g: number, b: number, a: number) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  array 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(array: any[], offset: number = 0): void {\n        this.r = array[offset + 0];\n        this.g = array[offset + 1];\n        this.b = array[offset + 2];\n        this.a = array[offset + 3];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Color = new Color();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n\n\n","import { Texture2D } from \"./Texture2D\";\nimport { BaseTexture } from \"./BaseTexture\"\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\nimport { Color } from \"../maths/Color\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\n\n/**\n * <code>RenderTexture</code> 类用于创建渲染目标。\n */\nexport class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {\n    /** @private */\n    private static _currentActive: NativeRenderTexture2D;\n    private static _clearColor: Color = new Color();\n    private _lastRT: NativeRenderTexture2D;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    //为push,pop 用的。以后和上面只保留一份。\n    //由于可能递归，所以不能简单的用save，restore\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\n\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\n    /**\n     * 获取当前激活的Rendertexture\n     */\n    static get currentActive(): NativeRenderTexture2D {\n        return NativeRenderTexture2D._currentActive;\n    }\n\n    /** @private */\n    private _depthStencilFormat: number;\n\n    private _colorFormat: RenderTargetFormat;\n\n    /**@internal */\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\n\n    /**\n     * 获取深度格式。\n     *@return 深度格式。\n     */\n    get depthStencilFormat(): number {\n        return this._depthStencilFormat;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get defaultTexture(): BaseTexture {\n        return Texture2D.grayTexture;\n    }\n\n    getIsReady(): boolean {\n        return true;\n    }\n\n    /**\n     * 获取宽度。\n     */\n    get sourceWidth(): number {\n        return this._width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get sourceHeight(): number {\n        return this._height;\n    }\n\n    /**\n     * 获取offsetX。\n     */\n    get offsetX(): number {\n        return 0;\n    }\n\n    /***\n     * 获取offsetY\n     */\n    get offsetY(): number {\n        return 0;\n    }\n\n    depthStencilTexture: BaseTexture;\n\n    _renderTarget: InternalRenderTarget;\n    _isCameraTarget: boolean;\n\n    private _nativeObj: any;\n    /**\n     * @param width  宽度。\n     * @param height 高度。\n     * @param format 纹理格式。\n     * @param depthStencilFormat 深度格式。\n     * 创建一个 <code>RenderTexture</code> 实例。\n     */\n    constructor(width: number, height: number, format: number = RenderTargetFormat.R8G8B8, depthStencilFormat: number = RenderTargetFormat.DEPTH_16, create: boolean = true ) {//TODO:待老郭清理\n\n        super(width, height, format);\n        this._colorFormat = format;\n        this._depthStencilFormat = depthStencilFormat;\n        if (width != 0 && height != 0 && create) {\n            this._create();\n        }\n        this.lock = true;\n    }\n\n    get isCube(): boolean {\n        return this._nativeObj.isCube;\n    }\n\n    get samples(): number {\n        return this._nativeObj.samples;\n    }\n\n    get generateMipmap(): boolean {\n        return this._nativeObj.generateMipmap;\n    }\n\n    _start(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    _end(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    _create() {\n        // todo  mipmap\n        this._nativeObj = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, this.width, this.height, this._colorFormat, this.depthStencilFormat);\n        this._texture = this._nativeObj._renderTarget._textures[0];\n    }\n\n\n    /**\n     * 保存当前的RT信息。\n     */\n    static pushRT(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * 恢复上次保存的RT信息\n     */\n    static popRT(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * 开始绑定。\n     */\n    start(): void {\n        this._nativeObj.start();\n    }\n\n    /**\n     * 结束绑定。\n     */\n    end(): void {\n        this._nativeObj.end();\n    }\n\n    /**\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\n     */\n    restore(): void {\n        this._nativeObj.restore();\n    }\n\n\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\n        this._nativeObj.clear(r, g, b, a);\n    }\n\n\n    /**\n     * 获得像素数据。\n     * @param x X像素坐标。\n     * @param y Y像素坐标。\n     * @param width 宽度。\n     * @param height 高度。\n     * @return 像素数据。\n     */\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\n        return this._nativeObj.getData(x, y, width, height);\n    }\n    recycle(): void {\n\n    }\n\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    _disposeResource(): void {\n        this._nativeObj._disposeResource();\n    }\n\n}\n\n\n\n","import { Texture2D } from \"./Texture2D\";\nimport { LayaGL } from \"../layagl/LayaGL\"\nimport { BaseTexture } from \"./BaseTexture\"\nimport { BaseShader } from \"../webgl/shader/BaseShader\"\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\"\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\nimport { Color } from \"../maths/Color\";\n/**\n * <code>RenderTexture</code> 类用于创建渲染目标。\n */\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\n    /** @private */\n    private static _currentActive: RenderTexture2D;\n    static _clearColor: Color = new Color();\n    static _clearLinearColor:Color = new Color();\n    private _lastRT: RenderTexture2D;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    //为push,pop 用的。以后和上面只保留一份。\n    //由于可能递归，所以不能简单的用save，restore\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\n    /**\n     * 默认uv\n     */\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\n    /**\n     * 默认翻转uv\n     */\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\n    /**\n     * 获取当前激活的Rendertexture\n     */\n    static get currentActive(): RenderTexture2D {\n        return RenderTexture2D._currentActive;\n    }\n\n    /** @private */\n    private _depthStencilFormat: number;\n    /** @private */\n    private _colorFormat: RenderTargetFormat;\n\n    /**@internal */\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\n\n    /**\n     * 获取深度格式。\n     *@return 深度格式。\n     */\n    get depthStencilFormat(): number {\n        return this._depthStencilFormat;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get defaultTexture(): BaseTexture {\n        return Texture2D.grayTexture;\n    }\n\n    /**\n     * RenderTexture2D是否准备好\n     * @returns \n     */\n    getIsReady(): boolean {\n        return true;\n    }\n\n    /**\n     * 获取宽度。\n     */\n    get sourceWidth(): number {\n        return this._width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get sourceHeight(): number {\n        return this._height;\n    }\n\n    /**\n     * 获取offsetX。\n     */\n    get offsetX(): number {\n        return 0;\n    }\n\n    /***\n     * 获取offsetY\n     */\n    get offsetY(): number {\n        return 0;\n    }\n    /**深度模板纹理 */\n    depthStencilTexture: BaseTexture;\n    /**@internal 内部RT */\n    _renderTarget: InternalRenderTarget;\n    /**是否是CameraTarget */\n    _isCameraTarget: boolean;\n\n\n    /**\n     * @param width  宽度。\n     * @param height 高度。\n     * @param format 纹理格式。\n     * @param depthStencilFormat 深度格式。\n     * 创建一个 <code>RenderTexture</code> 实例。\n     */\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\n\n        super(width, height, format);\n        this._colorFormat = format;\n        this._depthStencilFormat = depthStencilFormat;\n        if (width != 0 && height != 0) {\n            this._create();\n        }\n        this.lock = true;\n    }\n\n    /**是否是RTCube */\n    get isCube(): boolean {\n        return this._renderTarget._isCube;\n    }\n\n    /**采样 */\n    get samples(): number {\n        return this._renderTarget._samples;\n    }\n\n    /**\n     * 是否生成Mipmap\n     */\n    get generateMipmap(): boolean {\n        return this._renderTarget._generateMipmap;\n    }\n\n    /**\n     * @internal\n     */\n    _start(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /**\n     * @internal\n     */\n    _end(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    \n    /**\n     * @internal\n     */\n    _create() {\n        // todo  mipmap\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, true, 1);\n\n        this._texture = this._renderTarget._textures[0];\n    }\n\n\n    /**\n     * 保存当前的RT信息。\n     */\n    static pushRT(): void {\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\n    }\n    /**\n     * 恢复上次保存的RT信息\n     */\n    static popRT(): void {\n        var top: any = RenderTexture2D.rtStack.pop();\n        if (top) {\n            if (RenderTexture2D._currentActive != top.rt) {\n                top.rt ? LayaGL.textureContext.bindRenderTarget(top.rt._renderTarget) : LayaGL.textureContext.bindoutScreenTarget();\n                RenderTexture2D._currentActive = top.rt;\n            }\n            LayaGL.renderEngine.viewport(0, 0, top.w, top.h);\n            RenderState2D.width = top.w;\n            RenderState2D.height = top.h;\n        }\n    }\n    /**\n     * 开始绑定。\n     */\n    start(): void {\n        //(memorySize == 0) && recreateResource();\n        LayaGL.textureContext.bindRenderTarget(this._renderTarget);\n        this._lastRT = RenderTexture2D._currentActive;\n        RenderTexture2D._currentActive = this;\n\n        //var gl:LayaGL = LayaGL.instance;//TODO:这段代码影响2D、3D混合\n        ////(memorySize == 0) && recreateResource();\n        //LayaGL.instance.bindFramebuffer(WebGLContext.FRAMEBUFFER, _frameBuffer);\n        //_lastRT = _currentActive;\n        //_currentActive = this;\n        ////_readyed = false;  \n        //_readyed = true;\t//这个没什么用。还会影响流程，比如我有时候并不调用end。所以直接改成true\n        //\n        ////if (_type == TYPE2D) {\n        LayaGL.renderEngine.viewport(0, 0, this._width, this._height);//外部设置\n        this._lastWidth = RenderState2D.width;\n        this._lastHeight = RenderState2D.height;\n        RenderState2D.width = this._width;\n        RenderState2D.height = this._height;\n        BaseShader.activeShader = null;\n        ////}\n    }\n\n    /**\n     * 结束绑定。\n     */\n    end(): void {\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\n        RenderTexture2D._currentActive = null;\n    }\n\n    /**\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\n     */\n    restore(): void {\n        if (this._lastRT != RenderTexture2D._currentActive) {\n\n            if (this._lastRT) {\n                LayaGL.textureContext.bindRenderTarget(this._lastRT._renderTarget);\n            }\n            else {\n                LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\n            }\n\n            RenderTexture2D._currentActive = this._lastRT;\n        }\n        // this._readyed = true;\n        //if (_type == TYPE2D)//待调整\n        //{\n        LayaGL.renderEngine.viewport(0, 0, this._lastWidth, this._lastHeight);\n        RenderState2D.width = this._lastWidth;\n        RenderState2D.height = this._lastHeight;\n        BaseShader.activeShader = null;\n        //} else \n        //\tgl.viewport(0, 0, Laya.stage.width, Laya.stage.height);\n    }\n\n    /**\n     * 清理RT\n     * @param r \n     * @param g \n     * @param b \n     * @param a \n     */\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\n\n        RenderTexture2D._clearColor.r = r;\n        RenderTexture2D._clearColor.g = g;\n        RenderTexture2D._clearColor.b = b;\n        RenderTexture2D._clearColor.a = a;\n        RenderTexture2D._clearColor.toLinear(RenderTexture2D._clearLinearColor);\n        //@ts-ignore\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, RenderTexture2D._clearLinearColor, 1);\n    }\n\n    /**\n     * 获得像素数据。\n     * @param x X像素坐标。\n     * @param y Y像素坐标。\n     * @param width 宽度。\n     * @param height 高度。\n     * @return 像素数据。\n     */\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\n    }\n    \n    /**\n     * @internal\n     */\n    recycle(): void {\n\n    }\n\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    _disposeResource(): void {\n        //width 和height为0的时候不会创建资源\n        this._renderTarget && this._renderTarget.dispose();\n    }\n\n}\n\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n    //@ts-ignore\n    RenderTexture2D = NativeRenderTexture2D;\n}\n\n\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\n\n/**\n * WebGLRTMgr 管理WebGLRenderTarget的创建和回收\n * TODO 需求不大，管理成本高。先去掉。\n */\n\nexport class WebGLRTMgr {\n\n\tprivate static dict: any = {};\t\t//key=h*10000+w\n\t/**\n\t * 获得一个renderTarget\n\t * 暂时先按照严格大小判断。\n\t * \n\t * @param\tw\n\t * @param\th\n\t * @return\n\t */\n\tstatic getRT(w: number, h: number): RenderTexture2D {\n\t\tw = w | 0;\n\t\th = h | 0;\n\t\tif (w >= 10000) {\n\t\t\tconsole.error('getRT error! w too big');\n\t\t}\n\t\tvar ret: RenderTexture2D;\n\t\t/*\n\t\tvar key: number = h * 10000 + w;\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\n\t\tif (sw) {\n\t\t\tif (sw.length > 0) {\n\t\t\t\tret = sw.pop();\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\t*/\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n\t\t//ret._mgrKey = key;\n\t\treturn ret;\n\t}\n\n\n\t/**\n\t * 回收一个renderTarget\n\t * @param\trt\n\t */\n\tstatic releaseRT(rt: RenderTexture2D): void {\n\t\trt.destroy();\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\n\t\treturn;\n\t\t/*\n\t\t//如果_mgrKey<=0表示已经加进来了。\n\t\tif (rt._mgrKey <= 0)\n\t\t\treturn;\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\n\t\trt._mgrKey = 0;\n\t\tsw.push(rt);\n\t\t*/\n\t}\n}\n\n","export enum BlendFactor {\n    /** (0, 0, 0, 0)*/\n    Zero,\n    /** (1, 1, 1, 1)*/\n    One,\n    /** (Rs, Gs, Bs, As) */\n    SourceColor,\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\n    OneMinusSourceColor,\n    /** (Rd, Gd, Bd, Ad)*/\n    DestinationColor,\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\n    OneMinusDestinationColor,\n    /** (As, As, As, As)*/\n    SourceAlpha,\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\n    OneMinusSourceAlpha,\n    /** (Ad, Ad, Ad, Ad)*/\n    DestinationAlpha,\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\n    OneMinusDestinationAlpha,\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\n    SourceAlphaSaturate,\n    /** (Rc, Gc, Bc, Ac)*/\n    BlendColor,\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\n    OneMinusBlendColor\n  }","export enum BlendType{\n    /**混合枚举_禁用。*/\n\tBLEND_DISABLE = 0,\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\n\tBLEND_ENABLE_ALL = 1,\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\n\tBLEND_ENABLE_SEPERATE = 2\n}","export enum RenderStateType{\n    DepthTest,\n    DepthMask,\n    DepthFunc,\n    StencilTest,\n    StencilMask,\n    StencilFunc,\n    StencilOp,\n    BlendType,\n    BlendEquation,\n    BlendEquationSeparate,\n    BlendFunc,\n    BlendFuncSeperate,\n    CullFace,\n    FrontFace,\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { BlendType } from \"../RenderEngine/RenderEnum/BlendType\";\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\n/**\n * @private\n */\nexport class RenderStateContext {\n    static mainContext: any;\n\n    static DepthTestCMD: RenderStateCommand;\n    static DepthMaskCMD: RenderStateCommand;\n    static DepthFuncCMD: RenderStateCommand;\n    static StencilTestCMD: RenderStateCommand;\n    static StencilMaskCMD: RenderStateCommand;\n    static StencilFuncCMD: RenderStateCommand;\n    static stencilOpCMD: RenderStateCommand;\n    static BlendCMD: RenderStateCommand;\n    static BlendEquationCMD: RenderStateCommand;\n    static BlendEquationSeparateCMD: RenderStateCommand;\n    static BlendFuncCMD: RenderStateCommand;\n    static BlendFuncSeperateCMD: RenderStateCommand;\n    static CullFaceCMD: RenderStateCommand;\n    static FrontFaceCMD: RenderStateCommand;\n    static stencilFuncArray = new Array<number>(2);\n    static blendEquationSeparateArray = new Array<number>(2);\n    static blenfunArray = new Array(2);\n    static blendFuncSeperateArray = new Array(4);\n    static stencilOpArray = new Array<number>(3);\n    static __init__() {\n        RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\n    }\n    /**\n     * @internal\n     */\n    static setDepthTest(value: boolean): void {\n        RenderStateContext.DepthTestCMD.clear();\n        RenderStateContext.DepthTestCMD.addCMD(RenderStateType.DepthTest, value);\n        RenderStateContext.DepthTestCMD.applyCMD();\n    }\n\n    /**\n     * @internal\n     */\n    static setDepthMask(value: boolean): void {\n        RenderStateContext.DepthMaskCMD.clear();\n        RenderStateContext.DepthMaskCMD.addCMD(RenderStateType.DepthMask, value);\n        RenderStateContext.DepthMaskCMD.applyCMD();\n    }\n\n    /**\n     * @internal\n     */\n    static setDepthFunc(value: CompareFunction): void {\n        RenderStateContext.DepthFuncCMD.clear();\n        RenderStateContext.DepthFuncCMD.addCMD(RenderStateType.DepthFunc, value);\n        RenderStateContext.DepthFuncCMD.applyCMD();\n    }\n\n    /**\n     * @internal\n     */\n    static setStencilTest(value: boolean): void {\n        RenderStateContext.StencilTestCMD.clear();\n        RenderStateContext.StencilTestCMD.addCMD(RenderStateType.StencilTest, value);\n        RenderStateContext.StencilTestCMD.applyCMD();\n    }\n\n    /**\n     * 模板写入开关\n     * @param gl \n     * @param value \n     */\n    static setStencilMask(value: boolean): void {\n        RenderStateContext.StencilMaskCMD.clear();\n        RenderStateContext.StencilMaskCMD.addCMD(RenderStateType.StencilMask, value);\n        RenderStateContext.StencilMaskCMD.applyCMD();\n    }\n\n\n    /**\n     * @internal\n     */\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\n        RenderStateContext.StencilFuncCMD.clear();\n        RenderStateContext.stencilFuncArray[0] = fun;\n        RenderStateContext.stencilFuncArray[1] = ref;\n        RenderStateContext.StencilFuncCMD.addCMD(RenderStateType.StencilFunc, RenderStateContext.stencilFuncArray);\n        RenderStateContext.StencilFuncCMD.applyCMD();\n    }\n\n    /**\n    * @internal\n    */\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\n        RenderStateContext.stencilOpCMD.clear();\n        RenderStateContext.stencilOpArray[0] = fail;\n        RenderStateContext.stencilOpArray[1] = zfail;\n        RenderStateContext.stencilOpArray[2] = zpass;\n        RenderStateContext.stencilOpCMD.addCMD(RenderStateType.StencilOp, RenderStateContext.stencilOpArray);\n        RenderStateContext.stencilOpCMD.applyCMD();\n    }\n\n\n\n    /**\n     * @internal\n     */\n    static setBlend(value: boolean): void {\n        RenderStateContext.BlendCMD.clear();\n        if (!value)\n            RenderStateContext.BlendCMD.addCMD(RenderStateType.BlendType, BlendType.BLEND_DISABLE);\n        else\n            RenderStateContext.BlendCMD.addCMD(RenderStateType.BlendType, BlendType.BLEND_ENABLE_SEPERATE);\n        RenderStateContext.BlendCMD.applyCMD();\n    }\n\n\n    /**\n     * @internal\n     */\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\n        RenderStateContext.BlendEquationCMD.clear();\n        RenderStateContext.BlendEquationCMD.addCMD(RenderStateType.BlendEquation, blendEquation);\n        RenderStateContext.BlendEquationCMD.applyCMD();\n    }\n\n\n    /**\n     * @internal\n     */\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\n        RenderStateContext.BlendEquationSeparateCMD.clear();\n        RenderStateContext.blendEquationSeparateArray[0] = blendEquationRGB;\n        RenderStateContext.blendEquationSeparateArray[1] = blendEquationAlpha;\n        RenderStateContext.BlendEquationSeparateCMD.addCMD(RenderStateType.BlendEquationSeparate, RenderStateContext.blendEquationSeparateArray)\n        RenderStateContext.BlendEquationSeparateCMD.applyCMD();\n    }\n\n\n    /**\n     * @internal\n     */\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor, force: boolean = false): void {\n        RenderStateContext.BlendFuncCMD.clear();\n        RenderStateContext.blenfunArray[0] = sFactor;\n        RenderStateContext.blenfunArray[1] = dFactor;\n        RenderStateContext.BlendFuncCMD.addCMD(RenderStateType.BlendFunc, RenderStateContext.blenfunArray);\n        RenderStateContext.BlendFuncCMD.applyCMD();\n    }\n\n    /**\n     * @internal\n     */\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\n        RenderStateContext.BlendFuncSeperateCMD.clear();\n        RenderStateContext.blendFuncSeperateArray[0] = srcRGB;\n        RenderStateContext.blendFuncSeperateArray[1] = dstRGB;\n        RenderStateContext.blendFuncSeperateArray[2] = srcAlpha;\n        RenderStateContext.blendFuncSeperateArray[3] = dstAlpha;\n        RenderStateContext.BlendFuncSeperateCMD.addCMD(RenderStateType.BlendFuncSeperate, RenderStateContext.blendFuncSeperateArray);\n        RenderStateContext.BlendFuncSeperateCMD.applyCMD();\n    }\n}\n\n\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\n\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\nexport class BlendMode {\n    static activeBlendFunction: Function = null;\n    /** @internal 这个不直接暴露给开发者*/\n    static NAMES = [\n        \"normal\", \n        \"add\", \n        \"multiply\", \n        \"screen\", \n        \"overlay\", \n        \"light\", \n        \"mask\", \n        \"destination-out\",\n        \"add_old\"];\n\n    /** @internal */\n    static TOINT:{[key:string]:number} = { \n        \"normal\": 0, \n        \"add\": 1, \n        \"multiply\": 2, \n        \"screen\": 3, \n        \"overlay\": 4, \n        \"light\": 5, \n        \"mask\": 6, \n        \"destination-out\": 7, \n        \"lighter\": 1,\n        \"lighter_old\": 8,\n        \"add_old\":8};\n\n    static      NORMAL = \"normal\";\t\t\t\t\t//0\n    static        MASK = \"mask\";\t\t\t\t\t//6\n    static     LIGHTER = \"lighter\";\t\t\t\t\t//1  \n\n    static fns: any[];\n    static targetFns: any[];\n    /**@internal */\n    static _init_(): void {\n        BlendMode.fns =       [\n            BlendMode.BlendNormal,      //0\n            BlendMode.BlendAdd,         //1\n            BlendMode.BlendMultiply,    //2\n            BlendMode.BlendScreen,      //3\n            BlendMode.BlendOverlay,     //4\n            BlendMode.BlendLight,       //5\n            BlendMode.BlendMask,        //6\n            BlendMode.BlendDestinationOut,   //7\n            BlendMode.BlendAddOld         //8\n        ];\n\n        BlendMode.targetFns = [\n            BlendMode.BlendNormalTarget,    //0\n            BlendMode.BlendAddTarget,       //1\n            BlendMode.BlendMultiplyTarget,  //2\n            BlendMode.BlendScreenTarget,    //3\n            BlendMode.BlendOverlayTarget,   //4\n            BlendMode.BlendLightTarget,     //5\n            BlendMode.BlendMask,            //6\n            BlendMode.BlendDestinationOut,  //7\n            BlendMode.BlendAddTargetOld     //8\n        ];\n    }\n\n    static BlendNormal(): void {\n        //为了避免黑边，和canvas作为贴图的黑边\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha,true);\n        \n    }\n\n    /**@internal 这个add感觉不合理，所以改成old了 */\n    static BlendAddOld(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha,true);\n    }\n\n    static BlendAdd(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One,true);\n    }\n\n    static BlendMultiply(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha,true);\n    }\n\n    static BlendScreen(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One,true);\n    }\n\n    static BlendOverlay(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha,true);\n    }\n\n    static BlendLight(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One,BlendFactor.One,true);\n    }\n\n    static BlendNormalTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha,true);\n    }\n\n    /**@internal add不应该是1+dst_α 所以改成old */\n    static BlendAddTargetOld(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha,true);\n    }\n    static BlendAddTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One,true);\n    }\n\n    static BlendMultiplyTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha,true);\n    }\n\n    static BlendScreenTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One,true);\n    }\n\n    static BlendOverlayTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor,true);\n    }\n\n    static BlendLightTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One,true);\n    }\n\n    static BlendMask(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha,true);\n    }\n\n    static BlendDestinationOut(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero,true);\n    }\n}\n\n","export class ShaderDefinesBase {\n\n    /**@internal */\n    _value: number = 0;\n\n    private _name2int: { [id: string]: number };\n    private _int2name: any[];\n    private _int2nameMap: any[];\n\n    constructor(name2int: any, int2name: any[], int2nameMap: any[]) {\n        this._name2int = name2int;\n        this._int2name = int2name;\n        this._int2nameMap = int2nameMap;\n    }\n\n    //TODO:coverage\n    add(value: any): number {\n        if (typeof (value) == 'string') {\n            this._value |= this._name2int[(<string>value)];\n        } else {\n            this._value |= value;\n        }\n        return this._value;\n    }\n\n    addInt(value: number): number {\n        this._value |= value;\n        return this._value;\n    }\n\n    //TODO:coverage\n    remove(value: any): number {\n        if (typeof (value) == 'string') {\n            this._value &= ~(this._name2int[(<string>value)]);\n        } else {\n            this._value &= (~value);\n        }\n        return this._value;\n    }\n\n    //TODO:coverage\n    isDefine(def: number): boolean {\n        return (this._value & def) === def;\n    }\n\n    //TODO:coverage\n    getValue(): number {\n        return this._value;\n    }\n\n    setValue(value: number): void {\n        this._value = value;\n    }\n\n    toNameDic(): any {\n        var r: string = this._int2nameMap[this._value];\n        return r ? r : ShaderDefinesBase._toText(this._value, this._int2name, this._int2nameMap);\n    }\n\n    static _reg(name: string, value: number, _name2int: any, _int2name: any[]): void {\n        _name2int[name] = value;\n        _int2name[value] = name;\n    }\n\n    static _toText(value: number, _int2name: any[], _int2nameMap: any): any {\n        var r: string = _int2nameMap[value];\n        if (r) return r;\n        var o: any = {};\n        var d: number = 1;\n        for (var i: number = 0; i < 32; i++) {\n            d = 1 << i;\n            if (d > value) break;\n            if (value & d) {\n                var name: string = _int2name[d];\n                name && (o[name] = \"\");\n            }\n        }\n        _int2nameMap[value] = o;\n        return o;\n    }\n\n    //TODO:coverage\n    static _toInt(names: string, _name2int: any): number {\n        var words: any[] = names.split('.');\n        var num: number = 0;\n        for (var i: number = 0, n: number = words.length; i < n; i++) {\n            var value: number = _name2int[words[i]];\n            if (!value) throw new Error(\"Defines to int err:\" + names + \"/\" + words[i]);\n            num |= value;\n        }\n        return num;\n    }\n}\n\n\n","import { ShaderDefinesBase } from \"../ShaderDefinesBase\"\nexport class ShaderDefines2D extends ShaderDefinesBase {\n    static TEXTURE2D: number = 0x01;\n    static PRIMITIVE: number = 0x04;\n    static FILTERGLOW: number = 0x08;\n    static FILTERBLUR: number = 0x10;\n    static FILTERCOLOR: number = 0x20;\n    static COLORADD: number = 0x40;\n\n    static WORLDMAT: number = 0x80;\n    static FILLTEXTURE: number = 0x100;\n    static SKINMESH: number = 0x200;\n    static MVP3D: number = 0x800;\n\n    static GAMMASPACE:number = 0x1000;\n\n    static INVERTY:number = 0x2000;\n\n    static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\n\n    private static __name2int: any = {};\n    private static __int2name: any[] = [];\n    private static __int2nameMap: any[] = [];\n\n    static __init__(): void {\n        ShaderDefines2D.reg(\"TEXTURE2D\", ShaderDefines2D.TEXTURE2D);\n        ShaderDefines2D.reg(\"PRIMITIVE\", ShaderDefines2D.PRIMITIVE);\n\n        ShaderDefines2D.reg(\"GLOW_FILTER\", ShaderDefines2D.FILTERGLOW);\n        ShaderDefines2D.reg(\"BLUR_FILTER\", ShaderDefines2D.FILTERBLUR);\n        ShaderDefines2D.reg(\"COLOR_FILTER\", ShaderDefines2D.FILTERCOLOR);\n        ShaderDefines2D.reg(\"COLOR_ADD\", ShaderDefines2D.COLORADD);\n\n        ShaderDefines2D.reg(\"WORLDMAT\", ShaderDefines2D.WORLDMAT);\n        ShaderDefines2D.reg(\"FILLTEXTURE\", ShaderDefines2D.FILLTEXTURE);\n        ShaderDefines2D.reg('MVP3D', ShaderDefines2D.MVP3D);\n\n        ShaderDefines2D.reg('GAMMASPACE',ShaderDefines2D.GAMMASPACE);\n\n        ShaderDefines2D.reg('INVERTY',ShaderDefines2D.INVERTY);\n    }\n\n    constructor() {\n        super(ShaderDefines2D.__name2int, ShaderDefines2D.__int2name, ShaderDefines2D.__int2nameMap);\n    }\n\n    static reg(name: string, value: number): void {\n        this._reg(name, value, ShaderDefines2D.__name2int, ShaderDefines2D.__int2name);\n    }\n\n    //TODO:coverage\n    static toText(value: number, int2name: any[], int2nameMap: any): any {\n        return this._toText(value, int2name, int2nameMap);\n    }\n\n    //TODO:coverage\n    static toInt(names: string): number {\n        return this._toInt(names, ShaderDefines2D.__name2int);\n    }\n}\n\n\n","import { Texture2D } from \"./Texture2D\";\nimport { Event } from \"../events/Event\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { BaseTexture } from \"./BaseTexture\";\nimport { Resource } from \"./Resource\";\n\nconst _rect1 = new Rectangle();\nconst _rect2 = new Rectangle();\n\n/**\n * <code>Texture</code> 是一个纹理处理类。\n */\nexport class Texture extends Resource {\n    /**@private 默认 UV 信息。*/\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\n    /**@private */\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\n    /**@private 反转 UV 信息。*/\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\n\n    /**@private uv的范围*/\n    uvrect: any[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\n    /**@private */\n    private _bitmap: BaseTexture;\n    /**@internal */\n    public _uv: ArrayLike<number>;\n    /** @private */\n    private _w: number = 0;\n    /** @private */\n    private _h: number = 0;\n\n    /**沿 X 轴偏移量。*/\n    offsetX: number = 0;\n    /**沿 Y 轴偏移量。*/\n    offsetY: number = 0;\n    /**原始宽度（包括被裁剪的透明区域）。*/\n    sourceWidth: number = 0;\n    /**原始高度（包括被裁剪的透明区域）。*/\n    sourceHeight: number = 0;\n    /**图片地址*/\n    url: string;\n    /** UUID */\n    uuid: string;\n    /** @private */\n    scaleRate: number = 1;\n\n    clipCache: Map<string, Texture>;\n\n    /**\n     *  根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\n     * @param\tsource 绘图资源 Texture2D 或者 Texture对象。\n     * @param\tx 起始绝对坐标 x 。\n     * @param\ty 起始绝对坐标 y 。\n     * @param\twidth 宽绝对值。\n     * @param\theight 高绝对值。\n     * @param\toffsetX X 轴偏移量（可选）。\t就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\n     * @param\toffsetY Y 轴偏移量（可选）。\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\n     * @return  <code>Texture</code> 对象。\n     */\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\n        offsetX: number = 0, offsetY: number = 0,\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\n    }\n\n    /**\n     * @internal\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\n     * @param\tx 起始绝对坐标 x 。\n     * @param\ty 起始绝对坐标 y 。\n     * @param\twidth 宽绝对值。\n     * @param\theight 高绝对值。\n     * @param\toffsetX X 轴偏移量（可选）。\n     * @param\toffsetY Y 轴偏移量（可选）。\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\n     * @param\toutTexture 返回的Texture对象。\n     * @return  <code>Texture</code> 对象。\n     */\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\n        offsetX: number = 0, offsetY: number = 0,\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\n        var btex: boolean = source instanceof Texture;\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\n\n        if (bitmap.width && (x + width) > bitmap.width)\n            width = bitmap.width - x;\n        if (bitmap.height && (y + height) > bitmap.height)\n            height = bitmap.height - y;\n        var tex: Texture;\n        if (outTexture) {\n            tex = outTexture;\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\n        } else {\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\n        }\n        tex.width = width;\n        tex.height = height;\n        tex.offsetX = offsetX;\n        tex.offsetY = offsetY;\n\n        var dwidth: number = 1 / bitmap.width;\n        var dheight: number = 1 / bitmap.height;\n        x *= dwidth;\n        y *= dheight;\n        width *= dwidth;\n        height *= dheight;\n\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\n\n        var bitmapScale: number = ((<Texture>(bitmap as any))).scaleRate;\n        if (bitmapScale && bitmapScale != 1) {\n            tex.sourceWidth /= bitmapScale;\n            tex.sourceHeight /= bitmapScale;\n            tex.width /= bitmapScale;\n            tex.height /= bitmapScale;\n            tex.scaleRate = bitmapScale;\n            tex.offsetX /= bitmapScale;\n            tex.offsetY /= bitmapScale;\n        } else {\n            tex.scaleRate = 1;\n        }\n        return tex;\n    }\n\n    /**\n     * 截取Texture的一部分区域，生成新的Texture，如果两个区域没有相交，则返回null。\n     * @param\ttexture\t目标Texture。\n     * @param\tx\t\t相对于目标Texture的x位置。\n     * @param\ty\t\t相对于目标Texture的y位置。\n     * @param\twidth\t截取的宽度。\n     * @param\theight\t截取的高度。\n     * @return 返回一个新的Texture。\n     */\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\n        var texScaleRate: number = texture.scaleRate;\n        if (texScaleRate != 1) {\n            x *= texScaleRate;\n            y *= texScaleRate;\n            width *= texScaleRate;\n            height *= texScaleRate;\n        }\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\n        if (result)\n            var tex: Texture = Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\n        else\n            return null;\n        return tex;\n    }\n\n    /**\n     * uv\n     */\n    get uv(): ArrayLike<number> {\n        return this._uv;\n    }\n\n    set uv(value: ArrayLike<number>) {\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\n        this._uv = value;\n    }\n\n    /** 实际宽度。*/\n    get width(): number {\n        if (this._w)\n            return this._w;\n        if (!this.bitmap) return 0;\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\n    }\n\n    set width(value: number) {\n        this._w = value;\n        this.sourceWidth || (this.sourceWidth = value);\n    }\n\n    /** 实际高度。*/\n    get height(): number {\n        if (this._h)\n            return this._h;\n        if (!this.bitmap) return 0;\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\n    }\n\n    set height(value: number) {\n        this._h = value;\n        this.sourceHeight || (this.sourceHeight = value);\n    }\n\n    /**\n     * 获取位图。\n     * @return 位图。\n     */\n    get bitmap(): BaseTexture {\n        return this._bitmap;\n    }\n\n    /**\n     * 设置位图。\n     * @param 位图。\n     */\n    set bitmap(value: BaseTexture) {\n        if (this._bitmap == value)\n            return;\n        this._bitmap && this._bitmap._removeReference(this._referenceCount);\n        this._bitmap = value;\n        value && (value._addReference(this._referenceCount));\n    }\n\n    /**\n     * 创建一个 <code>Texture</code> 实例。\n     * @param bitmap 位图资源。\n     * @param uv UV 数据信息。\n     */\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\n        sourceWidth: number = 0, sourceHeight: number = 0) {\n        super(false);\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\n    }\n\n    /**\n     * @internal\n     */\n    _addReference(count: number = 1): void {\n        super._addReference(count);\n        this._bitmap && this._bitmap._addReference(count);\n    }\n\n    /**\n     * @internal\n     */\n    _removeReference(count: number = 1): void {\n        super._removeReference(count);\n        this._bitmap && this._bitmap._removeReference(count);\n    }\n\n    /**\n     * @internal\n     */\n    _getSource(cb: () => void = null): any {\n        if (this._destroyed || !this._bitmap)\n            return null;\n        this.recoverBitmap(cb);\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\n    }\n\n    /**\n     * 设置此对象的位图资源、UV数据信息。\n     * @param\tbitmap 位图资源\n     * @param\tuv UV数据信息\n     */\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\n        this.bitmap = bitmap;\n        this.sourceWidth = sourceWidth;\n        this.sourceHeight = sourceHeight;\n\n        if (bitmap) {\n            this._w = bitmap.width;\n            this._h = bitmap.height;\n            this.sourceWidth = this.sourceWidth || bitmap.width;\n            this.sourceHeight = this.sourceHeight || bitmap.height\n        }\n        this.uv = uv || Texture.DEF_UV;\n    }\n\n    /**\n     * 加载指定地址的图片。\n     * @param\turl 图片地址。\n     * @param\tcomplete 加载完成回调\n     */\n    load(url: string, complete?: Handler): Promise<void> {\n        if (this._destroyed)\n            return Promise.resolve();\n\n        return ILaya.loader.load(url).then((tex: Texture) => {\n            let bit = tex.bitmap;\n            this.bitmap = bit;\n            this.sourceWidth = this._w = bit.width;\n            this.sourceHeight = this._h = bit.height;\n            complete && complete.run();\n            this.event(Event.READY, this);\n        });\n    }\n\n    /**\n     * 获得像素数据\n     * @param x x\n     * @param y y\n     * @param width 宽\n     * @param height 高\n     * @returns \n     */\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\n        var st: number, dst: number, i: number;\n        var tex2d = this.bitmap;\n        // 适配图集\n        var texw = this._w;\n        var texh = this._h;\n        var sourceWidth = this.sourceWidth;\n        var sourceHeight = this.sourceHeight;\n        var tex2dw = tex2d.width;\n        var tex2dh = tex2d.height;\n        var offsetX = this.offsetX;\n        var offsetY = this.offsetY;\n        let draww = width;\n        let drawh = height;\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\n        if (width <= 0 || height <= 0) return null;\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\n        let marginT = offsetY > y ? offsetY - y : 0;\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\n        let rePosY = y > offsetY ? y - offsetY : 0;\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\n        drawh -= marginT;\n\n        var wstride = width * 4;\n        var pix: Uint8Array = null;\n        try {\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\n        } catch (e) {\n        }\n        if (pix) {\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\n                return pix;\n            //否则只取一部分\n            let uv = (this._uv as Array<number>).slice();\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\n            let atlasPosY = Math.round(uv[1] * tex2dh);\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\n            wstride = tex2dw * 4;\n            dst = (atlasPosY + rePosY) * wstride;\n            st = atlasPosX * 4 + rePosX * 4 + dst;\n            for (i = 0; i < drawh; i++) {\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\n                st += wstride;\n            }\n            return ret;\n        }\n\n        // 如果无法直接获取，只能先渲染出来\n        var ctx = new ILaya.Context();\n        ctx.size(width, height);\n        ctx.asBitmap = true;\n        var uv: number[] = null;\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\n            var stu = uv[0];\n            var stv = uv[1];\n            var uvw = uv[2] - stu;\n            var uvh = uv[7] - stv;\n            var uk = uvw / texw;\n            var vk = uvh / texh;\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\n        }\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv);\n        //ctx.drawTexture(value, -x, -y, x + width, y + height);\n        ctx._targets.start();\n        ctx.flush();\n        ctx._targets.end();\n        ctx._targets.restore();\n        var dt: Uint8Array = ctx._targets.getData(0, 0, width, height) as Uint8Array;\n        ctx.destroy();\n        // 上下颠倒一下\n        ret = new Uint8Array(width * height * 4);\n        st = 0;\n        dst = (height - 1) * wstride;\n        for (i = height - 1; i >= 0; i--) {\n            ret.set(dt.slice(dst, dst + wstride), st);\n            st += wstride;\n            dst -= wstride;\n        }\n        return ret;\n    }\n\n    /**\n     * 获取Texture上的某个区域的像素点\n     * @param\tx\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @return  返回像素点集合\n     */\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\n        return this.getTexturePixels(x, y, width, height);\n        // canvas 不支持\n    }\n\n    /**\n     * 通过url强制恢复bitmap。\n     */\n    recoverBitmap(onok: () => void = null): void {\n        var url = this._bitmap.url;\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\n            ILaya.loader.load(url).then((tex: Texture) => {\n                this.bitmap = tex.bitmap;\n                onok && onok();\n            });\n        }\n    }\n\n    /**\n     * 强制释放Bitmap,无论是否被引用。\n     */\n    disposeBitmap(): void {\n        if (!this._destroyed && this._bitmap) {\n            this._bitmap.destroy();\n        }\n    }\n\n    get valid(): boolean {\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\n    }\n\n    /**\n     * obsolute\n     */\n    public get obsolute(): boolean {\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\n    }\n\n    public set obsolute(value: boolean) {\n        this._obsolute = value;\n    }\n\n    /**\n     * @private\n     */\n    protected _disposeResource(): void {\n        let bit = this._bitmap;\n        this._bitmap = null;\n        if (bit)\n            bit._removeReference(this._referenceCount);\n    }\n\n    /**\n     * 获得clip贴图\n     * @param x x\n     * @param y y\n     * @param width 宽\n     * @param height 高\n     * @returns \n     */\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\n        let key = `${x}_${y}_${width}_${height}`;\n        if (!this.clipCache)\n            this.clipCache = new Map();\n\n        let tex = this.clipCache.get(key);\n        if (tex)\n            return tex;\n        tex = Texture.createFromTexture(this, x, y, width, height);\n\n        if (this.clipCache.size > 100)\n            this.clipCache.clear();\n\n        this.clipCache.set(key, tex);\n\n        return tex;\n    }\n}\n\n/**\n * 平移 UV。\n * @param offsetX 沿 X 轴偏移量。\n * @param offsetY 沿 Y 轴偏移量。\n * @param uv 需要平移操作的的 UV。\n * @return 平移后的UV。\n */\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\n    for (var i: number = 0; i < 8; i += 2) {\n        uv[i] += offsetX;\n        uv[i + 1] += offsetY;\n    }\n    return uv;\n}","/**\n * @private\n * <code>StringKey</code> 类用于存取字符串对应的数字。\n */\nexport class StringKey {\n\n    private _strsToID: any = {};\n    private _idToStrs: any[] = [];\n    private _length: number = 0;\n    //TODO:\n\n    /**\n     * 添加一个字符。\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\n     * @return 此字符对应的数字。\n     */\n    //TODO:coverage\n    add(str: string): number {\n        var index: any = this._strsToID[str];\n        if (index != null) return index;\n\n        this._idToStrs[this._length] = str;\n        return this._strsToID[str] = this._length++;\n    }\n\n    /**\n     * 获取指定字符对应的ID。\n     * @param\tstr 字符。\n     * @return 此字符对应的ID。\n     */\n    //TODO:coverage\n    getID(str: string): number {\n        var index: any = this._strsToID[str];\n        return index == null ? -1 : index;\n    }\n\n    /**\n     * 根据指定ID获取对应字符。\n     * @param  id ID。\n     * @return 此id对应的字符。\n     */\n    //TODO:coverage\n    getName(id: number): string {\n        var str: any = this._idToStrs[id];\n        return str == null ? undefined : str;\n    }\n}\n\n","import { Utils } from \"../utils/Utils\";\n/**\n * 此类用来描述资源\n */\nexport class AssetDb {\n    /**\n     * 默认资源实例\n     */\n    static inst: AssetDb = new AssetDb();\n    \n    /**\n     * uuid 数据\n     */\n    uuidMap: Record<string, string> = {};\n    \n    /**\n     * shaderName 数据\n     */\n    shaderNameMap: Record<string, string> = {};\n    \n    /**\n     * 元资源 数据\n     */\n    metaMap: Record<string, any> = {};\n\n    /** 是否下载图片的描述信息 */\n    enableImageMetaFile: boolean = false;\n\n    /**\n     * uuid获得url\n     * @param uuid uuid\n     * @returns \n     */\n    UUID_to_URL(uuid: string): string {\n        return this.uuidMap[uuid];\n    }\n\n    /**\n     * 异步uuid获得Url\n     * @param uuid \n     * @returns \n     */\n    UUID_to_URL_async(uuid: string): Promise<string> {\n        return null;\n    }\n\n    /**\n     * Url获得uuid值\n     * @param url \n     * @returns \n     */\n    URL_to_UUID_async(url: string): Promise<string> {\n        return null;\n    }\n\n    /**\n     * TODO\n     * @param url \n     * @param onResolve \n     * @returns \n     */\n    resolveURL(url: string, onResolve: (url: string) => void) {\n        if (url.startsWith(\"res://\")) {\n            let uuid = url.substring(6);\n            url = this.UUID_to_URL(uuid);\n            if (url) {\n                onResolve(url);\n                return;\n            }\n\n            let promise = AssetDb.inst.UUID_to_URL_async(uuid);\n            if (promise) {\n                promise.then(onResolve);\n                return;\n            }\n        }\n        onResolve(url);\n    }\n\n    /**\n     * 查找shadername的地址\n     * @param shaderName \n     * @returns \n     */\n    shaderName_to_URL(shaderName: string): string {\n        return this.shaderNameMap[shaderName];\n    }\n\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\n        console.warn(`unknown shaderName: ${shaderName}`);\n        return null;\n    }\n\n    /**\n     * 获得元数据\n     * @param url \n     * @param uuid \n     * @returns \n     */\n    getMeta(url: string, uuid: string): any {\n        let meta = this.metaMap[url];\n        if (meta)\n            return meta;\n        else if (this.enableImageMetaFile)\n            return url + \".json\";\n        else\n            return null;\n    }\n\n    /**\n     * 获得子资源路径\n     * @param url \n     * @param uuid \n     * @param subAssetName \n     * @param subAssetExt \n     * @returns \n     */\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\n        return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\n    }\n}","import { LayaEnv } from \"../../LayaEnv\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Utils } from \"../utils/Utils\";\n\n/**\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\n * <p>通过basePath属性可以设置网络基础路径</p>\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\n * <p>除了默认的通过增加后缀的格式化外，通过VersionManager类，可以开启IDE提供的，基于目录的管理方式来替代 \"?v=\" 的管理方式</p>\n * @see laya.net.VersionManager\n */\nexport class URL {\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":99,\"aaa/bb.png\":12}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb.png?v=99\"的一个地址*/\n    static version: Record<string, number | string> = {};\n\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\n    static basePath: string = \"\";\n    /**root路径。只针对'~'类型的url路径有效*/\n    static rootPath: string = \"\";\n\n    /**@private */\n    private _url: string;\n    /**@private */\n    private _path: string;\n    /**@private */\n\n    private static overrideFileExts: Record<string, string> = {};\n    private static hasExtOverrides: boolean;\n\n    static __init__() {\n        //xiaomi 没有location\n        //Vivo location.protocol是\"\"\n        //微信真机 location.protocol是undefined\n        URL.rootPath = URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\n\n        if (LayaEnv.isPlaying && !LayaEnv.isPreview){\n            this.overrideExtension([\"rendertexture\", \"videotexture\"], \"rt.json\");\n            this.overrideExtension([\"controller\"], \"controller.json\");\n            this.overrideExtension([\"mc\"], \"mc.bin\");\n            this.overrideExtension([\"mcc\"], \"mcc.json\");\n            this.overrideExtension([\"shader\"], \"shader.json\");\n        }\n    }\n\n    /**创建一个新的 <code>URL</code> 实例。*/\n    constructor(url: string) {\n        this._url = URL.formatURL(url);\n        this._path = URL.getPath(url);\n    }\n\n    /**格式化后的地址。*/\n    get url(): string {\n        return this._url;\n    }\n\n    /**地址的文件夹路径（不包括文件名）。*/\n    get path(): string {\n        return this._path;\n    }\n\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\n    static customFormat: Function = function (url: string): string {\n        let ver = URL.version[url];\n        if (!((<any>window)).conch && ver != null) {\n            if (url.indexOf(\"?\") != -1) {\n                if (url.indexOf(\"&v=\") == -1 && url.indexOf(\"?v=\") == -1)\n                    url += \"&v=\" + ver;\n            }\n            else\n                url += \"?v=\" + ver;\n        }\n        return url;\n    }\n\n    /**\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\n     * @param url 地址。\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\n     * @return 格式化处理后的地址。\n     */\n    static formatURL(url: string, base?: string): string {\n        if (!url)\n            return base || URL.basePath || \"\";\n\n        if (url.startsWith(\"res://\")) {\n            let uuid = url.substring(6);\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\n            if (!url2)\n                return url;\n\n            url = url2;\n        }\n\n        let char1 = url.charCodeAt(0);\n        if (url.indexOf(\":\") == -1 && char1 !== 47) { //已经format过\n            //自定义路径格式化\n            if (URL.customFormat != null)\n                url = URL.customFormat(url);\n\n            if (char1 === 126) // ~\n                url = URL.join(URL.rootPath, url.substring(2));\n            else\n                url = URL.join(base != null ? base : URL.basePath, url);\n        }\n\n        return url;\n    }\n\n    /**\n     * 处理扩展名的自动转换\n     * @param url 地址。\n     * @return 格式化处理后的地址。\n     */\n    static postFormatURL(url: string): string {\n        if (URL.hasExtOverrides) {\n            let extold = Utils.getFileExtension(url);\n            let ext = URL.overrideFileExts[extold];\n            if (ext != null)\n                url = Utils.replaceFileExtension(url, ext);\n        }\n\n        return url;\n    }\n\n    /**\n     * 格式化相对路径。主要是处理.和..这些情况。\n     */\n    static normalize(url: string): string {\n        if (url.indexOf(\"./\") == -1)\n            return url;\n\n        let parts = url.split(\"/\");\n        let len = parts.length;\n        let i = 0;\n        while (i < len) {\n            if (parts[i] == \".\") {\n                parts.splice(i, 1);\n                len--;\n                continue;\n            }\n            else if (parts[i] == '..') {\n                let index: number = i - 1;\n                if (index >= 0 && parts[index] !== '..') {\n                    parts.splice(index, 2);\n                    len -= 2;\n                    i--;\n                    continue;\n                }\n            }\n\n            i++;\n        }\n        parts.length = len;\n        return parts.join('/');\n    }\n\n    static getResURLByUUID(url: string): string {\n        if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\n            return \"res://\" + url;\n        else\n            return url;\n    }\n\n    /**\n    * 组合相对路径并格式化\n    * @param base\n    * @param path\n    */\n    static join(base: string, path: string): string {\n        if (!path) return \"\";\n\n        //如果是全路径，直接返回，提高性能\n        if (path.indexOf(\":\") > 0)\n            return path;\n\n        if (base) {\n            let char1 = path.charCodeAt(0);\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\n                if (base.charCodeAt(base.length - 1) !== 47)\n                    path = base + \"/\" + path;\n                else\n                    path = base + path;\n            }\n        }\n\n        return URL.normalize(path);\n    }\n\n    /**\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\n     * @param url url地址。\n     * @return 返回文件夹路径。\n     */\n    static getPath(url: string): string {\n        var ofs: number = url.lastIndexOf('/');\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\n    }\n\n    /**\n     * 获取指定 URL 的文件名。\n     * @param url 地址。\n     * @return 返回文件名。\n     */\n    static getFileName(url: string): string {\n        var ofs: number = url.lastIndexOf('/');\n        return ofs > 0 ? url.substring(ofs + 1) : url;\n    }\n\n    /**\n     * 获取URL版本字符。\n     * @param url\n     * @return\n     */\n    static getURLVerion(url: string): string {\n        var index: number = url.indexOf(\"?\");\n        return index >= 0 ? url.substring(index) : null;\n    }\n\n    /**\n     * 下载时，转换URL的扩展名。\n     * @originalExts 原始扩展名。例如[\"scene\"]。\n     * @targetExt 要转换为的扩展名。例如\"json\"。\n     */\n    static overrideExtension(originalExts: Array<string>, targetExt: string) {\n        for (let ext of originalExts)\n            URL.overrideFileExts[ext] = targetExt;\n        URL.hasExtOverrides = true;\n    }\n\n    /*\n     * 兼容微信不支持加载scene后缀场景，设置为true，则会把scene加载替换为json\n    */\n    static set exportSceneToJson(value: boolean) {\n        if (value)\n            URL.overrideExtension([\"scene3d\", \"scene\", \"taa\", \"prefab\"], \"json\");\n    }\n}","import { ShaderCompile } from \"./ShaderCompile\";\nimport { ShaderNode } from \"./ShaderNode\";\n\nexport class IncludeFile {\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\n        var out: any[] = [];\n        /*\n           var words:Array = str.split(_splitToWordExps);\n           trace(str);\n           trace(words);\n         */\n        var c: string;\n        var ofs: number = -1;\n        var word: string;\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\n            c = str.charAt(i);\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\n                if (ofs >= 0 && (i - ofs) > 1) {\n                    word = str.substr(ofs, i - ofs);\n                    out.push(word);\n                }\n                if (c == '\"' || c == \"'\") {\n                    var ofs2: number = str.indexOf(c, i + 1);\n                    if (ofs2 < 0) {\n                        throw \"Sharder err:\" + str;\n                    }\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\n                    i = ofs2;\n                    ofs = -1;\n                    continue;\n                }\n                if (c == '(' && block && out.length > 0) {\n                    word = out[out.length - 1] + \";\";\n                    if (\"vec4;main;\".indexOf(word) < 0)\n                        block.useFuns += word;\n                }\n                ofs = -1;\n                continue;\n            }\n            if (ofs < 0) ofs = i;\n        }\n        if (ofs < n && (n - ofs) > 1) {\n            word = str.substr(ofs, n - ofs);\n            out.push(word);\n        }\n        return out;\n    }\n\n\n    script: string;\n    codes: any = {};\n    funs: any = {};\n    curUseID: number = -1;\n    funnames: string = \"\";\n\n    constructor(txt: string) {\n        this.script = txt;\n        var begin: number = 0, ofs: number, end: number;\n        while (true) {\n            begin = txt.indexOf(\"#begin\", begin);\n            if (begin < 0) break;\n\n            end = begin + 5;\n            while (true) {\n                end = txt.indexOf(\"#end\", end);\n                if (end < 0) break;\n                if (txt.charAt(end + 4) === 'i')\n                    end += 5;\n                else break;\n            }\n\n            if (end < 0) {\n                throw \"add include err,no #end:\" + txt;\n            }\n\n            ofs = txt.indexOf('\\n', begin);\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\n            if (words[1] == 'code') {\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\n            } else if (words[1] == 'function')//#begin function void test()\n            {\n                ofs = txt.indexOf(\"function\", begin);\n                ofs += \"function\".length;\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\n                this.funnames += words[3] + \";\";\n            }\n\n            begin = end + 1;\n        }\n    }\n\n    getWith(name: string | null = null): string {\n        var r: string = name ? this.codes[name] : this.script;\n        if (!r) {\n            throw \"get with error:\" + name;\n        }\n        return r;\n    }\n\n    getFunsScript(funsdef: string): string {\n        var r: string = \"\";\n        for (var i in this.funs) {\n            if (funsdef.indexOf(i + \";\") >= 0) {\n                r += this.funs[i];\n            }\n        }\n        return r;\n    }\n\n}\n\n\n","export class ShaderNode {\n    private static __id: number = 1;\n    //是否删除无用代码\n    private static __noCompileEnable = true;\n\n    childs: any[] = [];\n    text: string = \"\";\n    parent: ShaderNode;\n    name: string;\n    noCompile: boolean;\n    includefiles: any[];\n    condition: any;\n    conditionType: number;\n    useFuns: string = \"\";\n    z: number = 0;\n    src: string;\n\n    constructor(includefiles: any[]) {\n        this.includefiles = includefiles;\n    }\n\n    setParent(parent: ShaderNode): void {\n        parent.childs.push(this);\n        this.z = parent.z + 1;\n        this.parent = parent;\n    }\n\n    setCondition(condition: string, type: number): void {\n        if (condition) {\n            this.conditionType = type;\n            condition = condition.replace(/(\\s*$)/g, \"\");\n            this.condition = function (): boolean {\n                return (this as any)[condition];\n            }\n            this.condition.__condition = condition;\n        }\n    }\n\n    toscript(def: any, out: any[]): any[] {\n        return this._toscript(def, out, ++ShaderNode.__id);\n    }\n\n    private _toscript(def: any, out: any[], id: number): any[] {\n        if (this.childs.length < 1 && !this.text) return out;\n        var outIndex: number = out.length;\n        if (this.condition) {\n            var ifdef: boolean = !!this.condition.call(def);\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\n        }\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\n        this.text && out.push(this.text);\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\n            o._toscript(def, out, id);\n        });\n\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\n            var funsCode: string;\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\n                //如果已经加入了，就不要再加\n                if (this.includefiles[i].curUseID == id) {\n                    continue;\n                }\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\n                if (funsCode.length > 0) {\n                    this.includefiles[i].curUseID = id;\n                    out[0] = funsCode + out[0];\n                }\n            }\n        }\n\n        return out;\n    }\n}\n\n\n","import { ILaya } from \"../../../ILaya\";\nimport { URL } from \"../../net/URL\";\nimport { IncludeFile } from \"./IncludeFile\";\nimport { ShaderNode } from \"./ShaderNode\";\n\nexport interface IShaderCompiledObj {\n    vsNode: ShaderNode;\n    psNode: ShaderNode;\n    includeNames: Set<string>;\n    defs: Set<string>;\n};\n\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\n\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\n\n/**\n * @private\n * <code>ShaderCompile</code> 类用于实现Shader编译。\n */\nexport class ShaderCompile {\n    static IFDEF_NO: number = 0;\n    static IFDEF_YES: number = 1;\n    static IFDEF_ELSE: number = 2;\n    static IFDEF_PARENT: number = 3;\n\n    static includes: Record<string, IncludeFile> = {};\n\n    static loadIncludeFileSync: (fileName: string) => void;\n\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\n        if (!txt || txt.length === 0) {\n            console.error(\"shader include file err:\" + fileName);\n            return null;\n        }\n\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\n            console.warn(\"shader include file already exists:\" + fileName);\n            return ShaderCompile.includes[fileName];\n        }\n\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\n        let file = new IncludeFile(txt);\n        ShaderCompile.includes[fileName] = file;\n        return file;\n    }\n\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\n        let result: IShaderCompiledObj = {\n            vsNode: new ShaderNode([]),\n            psNode: new ShaderNode([]),\n            includeNames: new Set(),\n            defs: new Set()\n        };\n\n        let includes: Array<IncludeItem> = [];\n\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\n        ps = ps.replace(_clearCR, \"\")\n\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\n\n        for (let inc of includes) {\n            if (inc.file)\n                result.includeNames.add(inc.name);\n            else\n                console.warn(`ShaderCompile missing file ${inc.name}`);\n        }\n\n        return result;\n    }\n\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\n        let result: IShaderCompiledObj = {\n            vsNode: new ShaderNode([]),\n            psNode: new ShaderNode([]),\n            includeNames: new Set(),\n            defs: new Set()\n        };\n\n        let includes: Array<IncludeItem> = [];\n\n        vs = vs.replace(_clearCR, \"\");\n        ps = ps.replace(_clearCR, \"\")\n\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\n\n        return this._loadIncludesDeep(result, includes, 0);\n    }\n\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\n        let toLoad: Array<IncludeItem>;\n        let includesCnt = includes.length;\n        for (let i = index; i < includesCnt; i++) {\n            let inc = includes[i];\n            if (inc.file)\n                result.includeNames.add(inc.name);\n            else {\n                if (!toLoad) toLoad = [];\n                toLoad.push(inc);\n            }\n        }\n\n        if (!toLoad)\n            return Promise.resolve(result);\n\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\n            let cnt = toLoad.length;\n            for (let i = 0; i < cnt; i++) {\n                let inc = toLoad[i];\n                let file = files[i];\n                if (!file) {\n                    let childs = inc.node.parent.childs;\n                    childs.splice(childs.indexOf(inc.node), 1);\n                }\n                else {\n                    result.includeNames.add(inc.name);\n\n                    let text = file.getWith(inc.codeName);\n                    if (inc.node.condition)\n                        inc.node.text = text;\n                    else {\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\n                        inc.node.text = \"\";\n                    }\n                }\n            }\n            if (includes.length > includesCnt)\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\n            else\n                return result;\n        });\n    }\n\n    /**\n     * @private\n     */\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\n        let node: ShaderNode, preNode: ShaderNode;\n        let text: string, name: string, fname: string;\n        let ofs: number, words: any[];\n        let i: number, n: number, j: number;\n        let lines = script.split(\"\\n\");\n\n        for (i = 0; i < lines.length; i++) {\n            text = lines[i];\n            if (text.length < 1) continue;\n            ofs = text.indexOf(\"//\");\n            if (ofs === 0) continue;\n            if (ofs >= 0) text = text.substr(0, ofs);\n\n            if ((ofs = text.indexOf(\"#\")) < 0) {\n                preNode = parent.childs[parent.childs.length - 1];\n                let includefiles = parent.includefiles;\n                if (preNode && !preNode.name) {\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\n                    preNode.text += \"\\n\" + text;\n                    continue;\n                }\n\n                node = new ShaderNode(includefiles);\n                node.text = text;\n                node.noCompile = true;\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\n                node.setParent(parent);\n                continue;\n            }\n\n            node = new ShaderNode(parent.includefiles);\n            node.text = text;\n            node.noCompile = true;\n\n            name = \"#\";\n            for (j = ofs + 1, n = text.length; j < n; j++) {\n                let c: string = text.charAt(j);\n                if (c === ' ' || c === '\\t' || c === '?') break;\n                name += c;\n            }\n            node.name = name;\n            switch (name) {\n                case \"#ifdef\":\n                case \"#ifndef\":\n                    node.src = text;\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\n                    if (!node.noCompile) {\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\n                        node.text = node.text;\n                    } else {\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\n                    }\n                    node.setParent(parent);\n                    parent = node;\n\n                    words = text.substr(j).split(_splitToWordExps3);\n                    for (j = 0; j < words.length; j++) {\n                        text = words[j];\n                        text.length && defs.add(text);\n                    }\n                    break;\n\n                case \"#if\":\n                case \"#elif\":\n                    node.src = text;\n                    node.noCompile = true;\n                    if (name == \"#elif\") {\n                        parent = parent.parent;\n                        preNode = parent.childs[parent.childs.length - 1];\n                        //匹配\"#ifdef\"\n                        preNode.text = preNode.src;\n                        preNode.noCompile = true;\n                        preNode.condition = null;\n                    }\n                    node.setParent(parent);\n                    parent = node;\n\n                    words = text.substr(j).split(_splitToWordExps3);\n                    for (j = 0; j < words.length; j++) {\n                        text = words[j];\n                        text.length && text != \"defined\" && defs.add(text);\n                    }\n                    break;\n\n                case \"#else\":\n                    node.src = text;\n                    parent = parent.parent;\n                    preNode = parent.childs[parent.childs.length - 1];\n                    node.noCompile = preNode.noCompile;\n                    if (!node.noCompile) {\n                        node.condition = preNode.condition;\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\n                    }\n                    //递归节点树\n                    node.setParent(parent);\n                    parent = node;\n                    break;\n\n                case \"#endif\":\n                    parent = parent.parent;\n                    preNode = parent.childs[parent.childs.length - 1];\n                    node.noCompile = preNode.noCompile;\n                    if (!node.noCompile) {\n                        node.text = node.text;\n                    }\n                    node.setParent(parent);\n                    break;\n\n                case \"#include\"://这里有问题,主要是空格\n                    words = IncludeFile.splitToWords(text, null);\n                    let includeName: string = words[1];\n                    let includeFile: IncludeFile;\n                    if (includeName.startsWith(\".\"))\n                        includeName = URL.join(basePath, includeName);\n                    includeFile = ShaderCompile.includes[includeName];\n\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\n                        ShaderCompile.loadIncludeFileSync(includeName);\n                        includeFile = ShaderCompile.includes[includeName];\n                    }\n\n                    let codeName = words[2] == 'with' ? words[3] : null;\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\n                    node.setParent(parent);\n\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\n                        if (includeFile) {\n                            text = includeFile.getWith(codeName);\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\n                        }\n                        node.text = \"\";\n                    }\n                    else {\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\n\n                        if (includeFile)\n                            node.text = includeFile.getWith(codeName);\n                    }\n                    break;\n\n                case \"#import\":\n                    words = IncludeFile.splitToWords(text, null);\n                    fname = words[1];\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\n                    break;\n\n                default:\n                    node.setParent(parent);\n                    break;\n            }\n        }\n    }\n}\n\n\n\n","import { StringKey } from \"../../utils/StringKey\";\nimport { IShaderCompiledObj, ShaderCompile } from \"../utils/ShaderCompile\";\nimport { BaseShader } from \"./BaseShader\";\nimport { ShaderValue } from \"./ShaderValue\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\n\nexport class Shader extends BaseShader {\n    private static _count: number = 0;\n    /**@internal */\n    static _preCompileShader: Record<string, IShaderCompiledObj> = {}; //存储预编译结果，可以通过名字获得内容,目前不支持#ifdef嵌套和条件\n    private _attribInfo: any[] | null = null;\n\n    static SHADERNAME2ID: number = 0.0002;\n\n\n    static nameKey: StringKey = new StringKey();\n\n    static sharders: any[] = new Array(0x20);// (sharders = [], sharders.length = 0x20, sharders);\n\n    //TODO:coverage\n    static create(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[] = null): Shader {\n        return new Shader(vs, ps, saveName, nameMap, bindAttrib);\n    }\n\n    // /**\n    //  * 根据宏动态生成shader文件，支持#include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";条件嵌入文件\n    //  * @param\tname\n    //  * @param\tvs\n    //  * @param\tps\n    //  * @param\tdefine 宏定义，格式:{name:value...}\n    //  * @return\n    //  */\n    // //TODO:coverage\n    // static withCompile(nameID: number, define: any, shaderName: any, createShader: Function): Shader {\n    //     if (shaderName && Shader.sharders[shaderName])\n    //         return Shader.sharders[shaderName];\n\n    //     var pre: ShaderCompile = Shader._preCompileShader[Shader.SHADERNAME2ID * nameID];\n    //     if (!pre)\n    //         throw new Error(\"withCompile shader err!\" + nameID);\n    //     return pre.createShader(define, shaderName, createShader, null);\n    // }\n\n    /**\n     * 根据宏动态生成shader文件，支持#include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";条件嵌入文件\n     * @param\tname\n     * @param\tvs\n     * @param\tps\n     * @param\tdefine 宏定义，格式:{name:value...}\n     * @return\n     */\n    static withCompile2D(nameID: number, mainID: number, define: any, shaderName: any, createShader: Function, bindAttrib: any[] = null): Shader {\n        if (shaderName && Shader.sharders[shaderName])\n            return Shader.sharders[shaderName];\n\n        var pre: IShaderCompiledObj = Shader._preCompileShader[Shader.SHADERNAME2ID * nameID + mainID];\n        if (!pre)\n            throw new Error(\"withCompile shader err!\" + nameID + \" \" + mainID);\n\n        var defMap: any = {};\n        var defineStr: string = \"\";\n        if (define) {\n            for (var i in define) {\n                defineStr += \"#define \" + i + \"\\n\";\n                defMap[i] = true;\n            }\n        }\n        var vs: any[] = pre.vsNode.toscript(defMap, []);\n        var ps: any[] = pre.psNode.toscript(defMap, []);\n        return ((<Function>createShader)\n            || (<Function>Shader.create))(defineStr + vs.join('\\n'), defineStr + ps.join('\\n'), shaderName, (<any>pre).nameMap, bindAttrib);\n    }\n\n    static addInclude(fileName: string, txt: string): void {\n        ShaderCompile.addInclude(fileName, txt);\n    }\n\n    /**\n     * 预编译shader文件，主要是处理宏定义\n     * @param\tnameID,一般是特殊宏+shaderNameID*0.0002组成的一个浮点数当做唯一标识\n     * @param\tvs\n     * @param\tps\n     */\n    //TODO:coverage\n    static preCompile(nameID: number, vs: string, ps: string, nameMap: any): void {\n        let id: number = Shader.SHADERNAME2ID * nameID;\n        let obj = ShaderCompile.compile(vs, ps);\n        (<any>obj).nameMap = nameMap;\n        Shader._preCompileShader[id] = obj;\n    }\n\n    /**\n     * 预编译shader文件，主要是处理宏定义\n     * @param\tnameID,一般是特殊宏+shaderNameID*0.0002组成的一个浮点数当做唯一标识\n     * @param\tvs\n     * @param\tps\n     */\n    static preCompile2D(nameID: number, mainID: number, vs: string, ps: string, nameMap: any): void {\n        let id: number = Shader.SHADERNAME2ID * nameID + mainID;\n        let obj = ShaderCompile.compile(vs, ps);\n        (<any>obj).nameMap = nameMap;\n        Shader._preCompileShader[id] = obj;\n    }\n\n    private _nameMap: any; //shader参数别名，语义\n    private _vs: string\n    private _ps: string;\n    private _curActTexIndex: number = 0;\n    private _reCompile: boolean;\n    private _render2DContext: IRender2DContext;\n\n    //存储一些私有变量\n    tag: any = {};\n    /**@internal */\n    _vshader: any;\n    /**@internal */\n    _pshader: any\n    /**@internal */\n    _program: any = null;\n    /**@internal */\n    _params: any[] = null;\n    /**@internal */\n    _paramsMap: any = {};\n\n    /**\n     * 根据vs和ps信息生成shader对象\n     * 把自己存储在 sharders 数组中\n     * @param\tvs\n     * @param\tps\n     * @param\tname:\n     * @param\tnameMap 帮助里要详细解释为什么需要nameMap\n     */\n    constructor(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[] | null = null) {\n        super();\n        if ((!vs) || (!ps)) throw \"Shader Error\";\n        this._attribInfo = bindAttrib;\n        this._id = ++Shader._count;\n        this._vs = vs;\n        this._ps = ps;\n        this._nameMap = nameMap ? nameMap : {};\n        saveName != null && (Shader.sharders[saveName] = this);\n        this.recreateResource();\n        this.lock = true;\n        this._render2DContext = LayaGL.render2DContext;\n    }\n\n    protected recreateResource(): void {\n        this._compile();\n        this._setGPUMemory(0);//忽略尺寸尺寸\n    }\n\n    //TODO:coverage\n    /**\n     * @override\n     */\n    protected _disposeResource(): void {\n        RenderStateContext.mainContext.deleteShader(this._vshader);\n        RenderStateContext.mainContext.deleteShader(this._pshader);\n        RenderStateContext.mainContext.deleteProgram(this._program);\n        this._vshader = this._pshader = this._program = null;\n        this._params = null;\n        this._paramsMap = {};\n        this._setGPUMemory(0);\n        this._curActTexIndex = 0;\n    }\n\n    private _compile(): void {\n        if (!this._vs || !this._ps || this._params)\n            return;\n        this._reCompile = true;\n        this._params = [];\n\n        var result: any;\n\n        var gl: WebGLRenderingContext = RenderStateContext.mainContext;\n        this._program = gl.createProgram();\n        this._vshader = Shader._createShader(gl, this._vs, gl.VERTEX_SHADER);\n        this._pshader = Shader._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\n\n        gl.attachShader(this._program, this._vshader);\n        gl.attachShader(this._program, this._pshader);\n\n        var one: any, i: number, j: number, n: number, location: any;\n\n        //属性用指定location的方法，这样更灵活，更方便与vao结合。\n        //注意注意注意 这个必须放到link前面\n        var attribDescNum: number = this._attribInfo ? this._attribInfo.length : 0;\n        for (i = 0; i < attribDescNum; i += 2) {\n            gl.bindAttribLocation(this._program, this._attribInfo[i + 1], this._attribInfo[i]);\n        }\n\n        gl.linkProgram(this._program);\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            throw gl.getProgramInfoLog(this._program);\n        }\n\n        var nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS); //个数\n\n        for (i = 0; i < nUniformNum; i++) {\n            var uniform: any = gl.getActiveUniform(this._program, i);//得到uniform对象，包括名字等信息 {name,type,size}\n            location = gl.getUniformLocation(this._program, uniform.name); //用名字来得到location\n            one = { vartype: \"uniform\", glfun: null, ivartype: 1, location: location, name: uniform.name, type: uniform.type, isArray: false, isSame: false, preValue: null, indexOfParams: 0 };\n            if (one.name.indexOf('[0]') > 0) {\n                one.name = one.name.substr(0, one.name.length - 3);\n                one.isArray = true;\n                one.location = gl.getUniformLocation(this._program, one.name);\n            }\n            this._params.push(one);\n        }\n\n        for (i = 0, n = this._params.length; i < n; i++) {\n            one = this._params[i];\n            one.indexOfParams = i;\n            one.index = 1;\n            one.value = [one.location, null];\n            one.codename = one.name;\n            one.name = this._nameMap[one.codename] ? this._nameMap[one.codename] : one.codename;\n            this._paramsMap[one.name] = one;\n            one._this = this;\n            one.uploadedValue = [];\n\n            switch (one.type) {\n                case gl.INT:\n                    one.fun = one.isArray ? this._uniform1iv : this._uniform1i;\n                    break;\n                case gl.FLOAT:\n                    one.fun = one.isArray ? this._uniform1fv : this._uniform1f;\n                    break;\n                case gl.FLOAT_VEC2:\n                    one.fun = one.isArray ? this._uniform_vec2v : this._uniform_vec2;\n                    break;\n                case gl.FLOAT_VEC3:\n                    one.fun = one.isArray ? this._uniform_vec3v : this._uniform_vec3;\n                    break;\n                case gl.FLOAT_VEC4:\n                    one.fun = one.isArray ? this._uniform_vec4v : this._uniform_vec4;\n                    break;\n                case gl.SAMPLER_2D:\n                    one.fun = this._uniform_sampler2D;\n                    break;\n                case gl.SAMPLER_CUBE:\n                    one.fun = this._uniform_samplerCube;\n                    break;\n                case gl.FLOAT_MAT4:\n                    one.glfun = gl.uniformMatrix4fv;\n                    one.fun = this._uniformMatrix4fv;\n                    break;\n                case gl.BOOL:\n                    one.fun = this._uniform1i;\n                    break;\n                case gl.FLOAT_MAT2:\n                case gl.FLOAT_MAT3:\n                    //TODO 这个有人会用的。\n                    throw new Error(\"compile shader err!\");\n                default:\n                    throw new Error(\"compile shader err!\");\n            }\n        }\n    }\n\n    private static _createShader(gl: WebGLRenderingContext, str: string, type: any): any {\n        var shader: any = gl.createShader(type);\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n        if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            return shader;\n        } else {\n            console.log(gl.getShaderInfoLog(shader));\n            return null;\n        }\n    }\n\n    /**\n     * 根据变量名字获得\n     * @param\tname\n     * @return\n     */\n    //TODO:coverage\n    getUniform(name: string): any {\n        return this._paramsMap[name];\n    }\n\n    //TODO:coverage\n    private _uniform1f(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            RenderStateContext.mainContext.uniform1f(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n\n    //TODO:coverage\n    private _uniform1fv(one: any, value: any): number {\n        if (value.length < 4) {\n            var uploadedValue: any[] = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                RenderStateContext.mainContext.uniform1fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        } else {\n            RenderStateContext.mainContext.uniform1fv(one.location, value);\n            return 1;\n        }\n    }\n\n    private _uniform_vec2(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\n            RenderStateContext.mainContext.uniform2f(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\n            return 1;\n        }\n        return 0;\n    }\n\n    //TODO:coverage\n    private _uniform_vec2v(one: any, value: any): number {\n        if (value.length < 2) {\n            var uploadedValue: any[] = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                RenderStateContext.mainContext.uniform2fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        } else {\n            RenderStateContext.mainContext.uniform2fv(one.location, value);\n            return 1;\n        }\n    }\n\n    //TODO:coverage\n    private _uniform_vec3(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\n            RenderStateContext.mainContext.uniform3f(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\n            return 1;\n        }\n        return 0;\n    }\n\n    //TODO:coverage\n    private _uniform_vec3v(one: any, value: any): number {\n        RenderStateContext.mainContext.uniform3fv(one.location, value);\n        return 1;\n    }\n\n    private _uniform_vec4(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n            RenderStateContext.mainContext.uniform4f(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\n            return 1;\n        }\n        return 0;\n    }\n\n    //TODO:coverage\n    private _uniform_vec4v(one: any, value: any): number {\n        RenderStateContext.mainContext.uniform4fv(one.location, value);\n        return 1;\n    }\n\n    private _uniformMatrix4fv(one: any, value: any): number {\n        RenderStateContext.mainContext.uniformMatrix4fv(one.location, false, value);\n        return 1;\n    }\n\n    //TODO:coverage\n    private _uniform1i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            RenderStateContext.mainContext.uniform1i(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n\n    //TODO:coverage\n    private _uniform1iv(one: any, value: any): number {\n        RenderStateContext.mainContext.uniform1iv(one.location, value);\n        return 1;\n    }\n\n    private _uniform_sampler2D(one: any, value: any): number {//TODO:TEXTURTE ARRAY\n        var gl: WebGLRenderingContext = RenderStateContext.mainContext;\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] == null) {\n            uploadedValue[0] = this._curActTexIndex;\n            gl.uniform1i(one.location, this._curActTexIndex);\n            this._render2DContext.activeTexture(gl.TEXTURE0 + this._curActTexIndex);\n            this._render2DContext.bindTexture(gl.TEXTURE_2D, value);\n            //WebGLContext.activeTexture(gl, gl.TEXTURE0 + this._curActTexIndex);\n            //WebGLContext.bindTexture(gl, gl.TEXTURE_2D, value);\n            this._curActTexIndex++;\n            return 1;\n        } else {\n            this._render2DContext.activeTexture(gl.TEXTURE0 + uploadedValue[0]);\n            this._render2DContext.bindTexture(gl.TEXTURE_2D, value);\n            return 0;\n        }\n    }\n\n    //TODO:coverage\n    private _uniform_samplerCube(one: any, value: any): number {//TODO:TEXTURTECUBE ARRAY\n        var gl: WebGLRenderingContext = RenderStateContext.mainContext;\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] == null) {\n            uploadedValue[0] = this._curActTexIndex;\n            gl.uniform1i(one.location, this._curActTexIndex);\n            this._render2DContext.activeTexture(gl.TEXTURE0 + this._curActTexIndex);\n            this._render2DContext.bindTexture(gl.TEXTURE_CUBE_MAP, value);\n            this._curActTexIndex++;\n            return 1;\n        } else {\n            this._render2DContext.activeTexture(gl.TEXTURE0 + uploadedValue[0]);\n            this._render2DContext.bindTexture(gl.TEXTURE_CUBE_MAP, value);\n            return 0;\n        }\n    }\n\n    uploadTexture2D(value: any): void {\n        //这个可能执行频率非常高，所以这里能省就省点\n        //Stat.shaderCall++;\n        //var gl:WebGLContext = WebGLContext.mainContext;\n        //WebGLContext.activeTexture(gl,WebGLContext.TEXTURE0);\t2d必须是active0\n        // var CTX: any = RenderStateContext;\n\n        // if (CTX._activeTextures[0] !== value) {\n        this._render2DContext.bindTexture(RenderStateContext.mainContext.TEXTURE_2D, value);\n        // CTX._activeTextures[0] = value;\n        //}\n    }\n\n    /**\n     * 提交shader到GPU\n     * @param\tshaderValue\n     */\n    upload(shaderValue: ShaderValue, params: any[] = null): void {\n        BaseShader.activeShader = BaseShader.bindShader = this;\n        //recreateResource();\n        this._render2DContext.bindUseProgram(this._program);\n\n        if (this._reCompile) {\n            params = this._params;\n            this._reCompile = false;\n        } else {\n            params = params || this._params;\n        }\n\n\n        var one: any, value: any, n: number = params.length, shaderCall: number = 0;\n\n        for (var i: number = 0; i < n; i++) {\n            one = params[i];\n            if ((value = (shaderValue as any)[one.name]) !== null)\n\n                shaderCall += one.fun.call(this, one, value);\n        }\n\n    }\n}\n\n","import { Shader } from \"../Shader\"\nimport { ShaderValue } from \"../ShaderValue\"\n\nexport class Shader2X extends Shader {\n    _params2dQuick2: any[]|null = null;\n    _shaderValueWidth: number = 0;\n    _shaderValueHeight: number = 0;\n\n    constructor(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[]|null = null) {\n        super(vs, ps, saveName, nameMap, bindAttrib);\n    }\n\n    //TODO:coverage\n    /**\n     * @override\n     */\n    protected _disposeResource(): void {\n        super._disposeResource();\n        this._params2dQuick2 = null;\n    }\n\n    //TODO:coverage\n    upload2dQuick2(shaderValue: ShaderValue): void {\n        this.upload(shaderValue, this._params2dQuick2 || this._make2dQuick2());\n    }\n\n    //去掉size的所有的uniform\n    _make2dQuick2(): any[] {\n        if (!this._params2dQuick2) {\n            this._params2dQuick2 = [];\n\n            var params: any[] = this._params, one: any;\n            for (var i: number = 0, n: number = params.length; i < n; i++) {\n                one = params[i];\n                if (one.name !== \"size\") this._params2dQuick2.push(one);\n            }\n        }\n        return this._params2dQuick2;\n    }\n\n    static create(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[]|null = null): Shader {\n        return new Shader2X(vs, ps, saveName, nameMap, bindAttrib);\n    }\n}\n\n\n","import { Texture } from \"../../../../resource/Texture\"\nimport { Shader } from \"../../Shader\"\nimport { ShaderValue } from \"../../ShaderValue\"\nimport { Shader2D } from \"../Shader2D\"\nimport { Shader2X } from \"../Shader2X\"\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\nimport { RenderState2D } from \"../../../utils/RenderState2D\"\nimport { RenderTexture2D } from \"../../../../resource/RenderTexture2D\"\nimport { TextTexture } from \"laya/webgl/text/TextTexture\"\nimport { Const } from \"../../../../Const\"\n\nexport class Value2D {\n    protected static _cache: any[] = [];\n    protected static _typeClass: any = [];\n\n    static TEMPMAT4_ARRAY: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    public static _initone(type: number, classT: any): void {\n        Value2D._typeClass[type] = classT;\n        Value2D._cache[type] = [];\n        Value2D._cache[type]._length = 0;\n    }\n\n    static create(mainType: number, subType: number): Value2D {\n        var types: any = Value2D._cache[mainType | subType];\n        if (types._length)\n            return types[--types._length];\n        else\n            return new Value2D._typeClass[mainType | subType](subType);\n    }\n\n\n    static __init__(): void {\n    }\n\n    defines: ShaderDefines2D = new ShaderDefines2D();\n\n\n    size: any[] = [0, 0];\n\n    alpha: number = 1.0;\t//这个目前只给setIBVB用。其他的都放到attribute的color中了\n    mmat: any[];\t\t//worldmatrix，是4x4的，因为为了shader使用方便。 TODO 换成float32Array\n    u_MvpMatrix: any[];\n    texture: any;\n\n    ALPHA: number = 1.0;\t//这个？\n\n    shader: Shader;\n\n    mainID: number;\n    subID: number = 0;\n    filters: any[];\n\n    textureHost: Texture | RenderTexture2D | TextTexture;\n    //public var fillStyle:DrawStyle;\t\t\t//TODO 这个有什么用？\n    color: any[];\n    //public var strokeStyle:DrawStyle;\n    colorAdd: any[];\n    u_mmat2: any[];\n    ref: number = 1;\n    protected _attribLocation: any[];\t//[name,location,name,location...] 由继承类赋值。这个最终会传给对应的shader\n\n    private _inClassCache: any;\n    private _cacheID: number = 0;\n    clipMatDir: any[] = [Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\n    clipMatPos: any[] = [0, 0];\n    clipOff: any[] = [0, 0];\t\t\t// 裁剪是否需要加上偏移，cacheas normal用\n    //public var clipDir:Array = [Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t\t//裁剪信息\n    //public var clipRect:Array = [0, 0];\t\t\t\t\t\t//裁剪位置\n\n    constructor(mainID: number, subID: number) {\n        this.mainID = mainID;\n        this.subID = subID;\n\n        this.textureHost = null;\n        this.texture = null;\n        //this.fillStyle = null;\n        this.color = null;\n        //this.strokeStyle = null;\n        this.colorAdd = null;\n        this.u_mmat2 = null;\n\n        this._cacheID = mainID | subID;\n        this._inClassCache = Value2D._cache[this._cacheID];\n        if (mainID > 0 && !this._inClassCache) {\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\n            this._inClassCache._length = 0;\n        }\n        this.clear();\n\n    }\n\n    setValue(value: Shader2D): void { }\n    //throw new Error(\"todo in subclass\");\n\n    //不知道什么意思，这个名字太难懂，反正只有submitIBVB中用到。直接把代码拷贝到哪里\n    //public function refresh():ShaderValue\n\n    private _ShaderWithCompile(): Shader2X {\n        var ret: Shader2X = (<Shader2X>Shader.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Shader2X.create, this._attribLocation));\n        //ret.setAttributesLocation(_attribLocation); 由于上面函数的流程的修改，导致这里已经晚了\n        return ret;\n    }\n\n    upload(): void {\n        var renderstate2d: any = RenderState2D;\n\n        // 如果有矩阵的话，就设置 WORLDMAT 宏\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addInt(ShaderDefines2D.WORLDMAT);\n        this.mmat = renderstate2d.worldMatrix4;\n\n        if (RenderState2D.matWVP) {\n            this.defines.addInt(ShaderDefines2D.MVP3D);\n            this.u_MvpMatrix = RenderState2D.matWVP.elements;\n        }\n        let returnGamma: boolean = !(RenderTexture2D.currentActive);\n        //returnGamma = returnGamma && (this.textureHost && ((this.textureHost as RenderTexture2D).gammaCorrection == 1 || (this.textureHost as Texture).bitmap.gammaCorrection == 1));\n        if (returnGamma && this.textureHost) {\n            if (this.textureHost instanceof RenderTexture2D) {\n                returnGamma = (this.textureHost as RenderTexture2D).gammaCorrection == 1;\n            } else if (this.textureHost instanceof Texture) {\n                returnGamma = (this.textureHost as Texture).bitmap.gammaCorrection == 1;\n            }\n        }\n\n        if (returnGamma) {\n            this.defines.addInt(ShaderDefines2D.GAMMASPACE);\n        } else {\n            this.defines.remove(ShaderDefines2D.GAMMASPACE);\n        }\n\n        if(RenderState2D.InvertY){\n            this.defines.addInt(ShaderDefines2D.INVERTY);\n        }else{\n            this.defines.remove(ShaderDefines2D.INVERTY);\n        }\n\n\n\n        var sd: Shader2X = Shader.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();\n\n        if (sd._shaderValueWidth !== renderstate2d.width || sd._shaderValueHeight !== renderstate2d.height) {\n            this.size[0] = renderstate2d.width;\n            this.size[1] = renderstate2d.height;\n            sd._shaderValueWidth = renderstate2d.width;\n            sd._shaderValueHeight = renderstate2d.height;\n            sd.upload((<ShaderValue>this), null);\n        }\n        else {\n            sd.upload((<ShaderValue>this), sd._params2dQuick2 || sd._make2dQuick2());\n        }\n    }\n\n    //TODO:coverage\n    setFilters(value: any[]): void {\n        this.filters = value;\n        if (!value)\n            return;\n\n        var n: number = value.length, f: any;\n        for (var i: number = 0; i < n; i++) {\n            f = value[i];\n            if (f) {\n                this.defines.add(f.type);//搬到setValue中\n                f.action.setValue(this);\n            }\n        }\n    }\n\n    clear(): void {\n        this.defines._value = this.subID;\n        this.clipOff[0] = 0;\n    }\n\n    release(): void {\n        if ((--this.ref) < 1) {\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\n            //this.fillStyle = null;\n            //this.strokeStyle = null;\n            this.clear();\n            this.filters = null;\n            this.ref = 1;\n            this.clipOff[0] = 0;\n        }\n    }\n\n\n}\n\n\n","/**\n\t * ...\n\t * @author xie\n\t */\nexport class SubmitKey {\n    blendShader: number;\n    submitType: number;\n    other: number;\n\n    constructor() {\n        this.clear();\n    }\n\n    clear(): void {\n        this.submitType = -1;\n        this.blendShader = this.other = 0;\n        //alpha = 1;\n    }\n\n    //TODO:coverage\n    copyFrom(src: SubmitKey): void {\n        this.other = src.other;\n        this.blendShader = src.blendShader;\n        this.submitType = src.submitType;\n        //alpha = src.alpha;\n    }\n\n    copyFrom2(src: SubmitKey, submitType: number, other: number): void {\n        //this.blendShader = src.blendShader;\n        //this.alpha = src.alpha;\t\t\t\n        this.other = other;\n        this.submitType = submitType;\n    }\n\n    //�Ƚ�3�����ⲿ�ṩ2��\n    //TODO:coverage\n    equal3_2(next: SubmitKey, submitType: number, other: number): boolean {\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && this.alpha === alpha;\n    }\n\n    //ȫ�Ƚϡ��ⲿ�ṩ2��\n    //TODO:coverage\n    equal4_2(next: SubmitKey, submitType: number, other: number): boolean {\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && alpha === next.alpha;\n    }\n\n    //�Ƚ�3��\n    //TODO:coverage\n    equal_3(next: SubmitKey): boolean {\n        return this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\n    }\n    //ȫ�Ƚϡ�4��\n    //TODO:coverage\n    equal(next: SubmitKey): boolean {\n        return this.other === next.other && this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\n    }\n\n}\n\n\n","import { ISubmit } from \"./ISubmit\";\nimport { SubmitKey } from \"./SubmitKey\";\nexport class SubmitCMD implements ISubmit {\n    static POOL: SubmitCMD[] = []; fun: Function;\n    /**@internal */\n    _this: any;\n    args: any[];\n    /**@internal */\n    _ref: number = 1;\n    /**@internal */\n    _key: SubmitKey = new SubmitKey();\n\n    constructor() {\n    }\n\n    renderSubmit(): number {\n        this.fun.apply(this._this, this.args);\n        return 1;\n    }\n\n    getRenderType(): number {\n        return 0;\n    }\n\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            var pool: any = SubmitCMD.POOL;\n            pool[pool._length++] = this;\n            this.args = null;\n            this.fun = null;\n            this._this = null;\n        }\n    }\n\n    static create(args: any[], fun: Function, thisobj: any): SubmitCMD {\n        var o: SubmitCMD = (SubmitCMD.POOL as any)._length ? SubmitCMD.POOL[--(SubmitCMD.POOL as any)._length] : new SubmitCMD();\n        o.fun = fun;\n        o.args = args;\n        o._this = thisobj;\n        o._ref = 1;\n        o._key.clear();\n        return o;\n    }\n}\n{ (SubmitCMD.POOL as any)._length = 0 }\n\n\n","import { IFilter } from \"./IFilter\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { RenderSprite } from \"../renders/RenderSprite\"\nimport { Context } from \"../resource/Context\"\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\nimport { Texture2D } from \"../resource/Texture2D\"\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\"\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\"\nimport { ColorFilter } from \"./ColorFilter\";\n\n/**\n * <code>Filter</code> 是滤镜基类。\n */\nexport class Filter implements IFilter {\n    /**@private 模糊滤镜。*/\n    static BLUR: number = 0x10;\n    /**@private 颜色滤镜。*/\n    static COLOR: number = 0x20;\n    /**@private 发光滤镜。*/\n    static GLOW: number = 0x08;\n    /** @internal*/\n    _glRender: any;\n\n    /**\n     * 创建一个 <code>Filter</code> 实例。\n     * */\n    constructor() { }\n\n    /**@private 滤镜类型。*/\n    get type(): number { return -1 }\n\n    static _filter = function (this:RenderSprite,sprite: Sprite, context: Context, x: number, y: number): void {\n        var webglctx: Context = context;\n        var next: any = ((<RenderSprite>this))._next;\n        if (next) {\n            var filters: any[] = sprite.filters, len: number = filters.length;\n            //如果只有一个滤镜，那么还用原来的方式\n            if (len == 1 && (filters[0].type == Filter.COLOR)) {\n                context.save();\n                context.setColorFilter(filters[0]);\n                next._fun.call(next, sprite, context, x, y);\n                context.restore();\n                return;\n            }\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\n            var svCP: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\t//拷贝用shaderValue\n            var b: Rectangle;\n\n            var p: Point = Point.TEMP;\n            var tMatrix: Matrix = webglctx._curMat;\n            var mat: Matrix = Matrix.create();\n            tMatrix.copyTo(mat);\n            var tPadding: number = 0;\t//给glow用\n            var tHalfPadding: number = 0;\n            var tIsHaveGlowFilter: boolean = false;\n            //这里判断是否存储了out，如果存储了直接用;\n            var source: RenderTexture2D = null;\n            var out: RenderTexture2D = sprite._cacheStyle.filterCache || null;\n            if (!out || sprite.getRepaint() != 0) {\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\n                //glow需要扩展边缘\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = new Rectangle();\n                b.copyFrom(sprite.getSelfBounds());\n                b.x += sprite.x;\n                b.y += sprite.y;\n                b.x -= sprite.pivotX + 4;//blur \n                b.y -= sprite.pivotY + 4;//blur\n                var tSX: number = b.x;\n                var tSY: number = b.y;\n                //重新计算宽和高\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                out && WebGLRTMgr.releaseRT(out);// out.recycle();\n                source = WebGLRTMgr.getRT(b.width, b.height);\n                var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\n                sprite._getCacheStyle().filterCache = out;\n                //使用RT\n                webglctx.pushRT();\n                webglctx.useRT(source);\n                var tX: number = sprite.x - tSX + tHalfPadding;\n                var tY: number = sprite.y - tSY + tHalfPadding;\n                //执行节点的渲染\n                next._fun.call(next, sprite, context, tX, tY);\n                webglctx.useRT(outRT);\n                for (var i: number = 0; i < len; i++) {\n                    if (i != 0) {\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\n                        webglctx.useRT(source);\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\n                        webglctx.useRT(outRT);\n                    }\n                    var fil: Filter = filters[i];\n                    //把src往out上画\n                    switch (fil.type) {\n                        case Filter.BLUR:\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\n                            break;\n                        case Filter.GLOW:\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            break;\n                        case Filter.COLOR:\n                            webglctx.setColorFilter((<ColorFilter>fil));\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n                            webglctx.setColorFilter(null);\n                            break;\n                    }\n                }\n                webglctx.popRT();\n            } else {\n\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = sprite.getBounds();\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                //edit\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                b.x -= sprite.pivotX + 4; //blur \n                b.y -= sprite.pivotY + 4;//blur \n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                //scope.addValue(\"out\", out);\n            }\n            x = x - tHalfPadding - sprite.x;\n            y = y - tHalfPadding - sprite.y;\n            p.setTo(x, y);\n            mat.transformPoint(p);\n            x = p.x + b.x;\n            y = p.y + b.y;\n            //把最后的out纹理画出来\n            webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\n\n            //把对象放回池子中\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\n            if (source) {\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\n                    s.destroy();\n                }, this);\n                source = null;\n                context.addRenderObject(submit);\n            }\n            mat.destroy();\n        }\n    }\n}\n\n","import { Utils } from \"./Utils\"\n\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\n\n/**\n * @private\n * <code>ColorUtils</code> 是一个颜色值处理类。\n */\nexport class ColorUtils {\n    /**@private */\n    static _SAVE: any = {};\n    /**@private */\n    static _SAVE_SIZE: number = 0;\n    /**@private */\n\n    /**@private */\n    private static _DEFAULT: any = ColorUtils._initDefault();\n\n    /**rgba 取值范围0-1*/\n    //TODO:delete？\n    arrColor: any[] = [];\n    /** 字符串型颜色值。*/\n    strColor: string;\n    /** uint 型颜色值。*/\n    numColor: number;\n    /**@internal TODO:*/\n    _drawStyle: any;\n\n    /**\n     * 根据指定的属性值，创建一个 <code>Color</code> 类的实例。\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\n     */\n    constructor(value: any) {\n        if (value == null || value == 'none') {\n            this.strColor = \"#00000000\";\n            this.numColor = 0;\n            this.arrColor = [0, 0, 0, 0];\n            return;\n        }\n\n        let color: number;\n        if (typeof (value) == 'string') {\n            color = Utils.fromStringColor(value);\n            this.strColor = value;\n        } else {\n            color = value;\n            this.strColor = Utils.toHexColor(color);\n        }\n\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\n            //color:0xrrggbbaa numColor此时为负数\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\n        } else {\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\n        }\n    }\n\n    /**@private */\n    static _initDefault(): any {\n        ColorUtils._DEFAULT = {};\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\n        return ColorUtils._DEFAULT;\n    }\n\n    /**@private 缓存太大，则清理缓存*/\n    static _initSaveMap(): void {\n        ColorUtils._SAVE_SIZE = 0;\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\n    }\n\n    /**\n     * 根据指定的属性值，创建并返回一个 <code>Color</code> 类的实例。\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\n     * @return 一个 <code>Color</code> 类的实例。\n     */\n    static create(value: any): ColorUtils {\n        let key: string = value + \"\";\n        let color: ColorUtils = ColorUtils._SAVE[key];\n        if (color != null) return color;\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\n        ColorUtils._SAVE_SIZE++;\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\n    }\n}\n\n","import { Filter } from \"./Filter\";\nimport { IFilter } from \"./IFilter\";\nimport { ColorUtils } from \"../utils/ColorUtils\"\n\n/**对比度列表*/\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\n/**灰色矩阵*/\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\n/**单位矩阵,表示什么效果都没有*/\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n/**标准矩阵长度*/\nconst LENGTH: number = 25;\n\n/**\n * <p><code>ColorFilter</code> 是颜色滤镜。使用 ColorFilter 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即，从 Sprite 类继承的对象）。</p>\n * <p>注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。</p>\n */\nexport class ColorFilter extends Filter implements IFilter {\n\n    /** @internal */\n    _mat: Float32Array;\n    /** @internal */\n    _alpha: Float32Array;\n    /**当前使用的矩阵*/\n    _matrix: any[];\n\n    /**\n     * 创建一个 <code>ColorFilter</code> 实例。\n     * @param mat\t（可选）由 20 个项目（排列成 4 x 5 矩阵）组成的数组，用于颜色转换。\n     */\n    constructor(mat: any[] = null) {\n        super();\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\n        this._mat = new Float32Array(16);\n        this._alpha = new Float32Array(4);\n        this.setByMatrix(mat);\n    }\n\n    /**\n     * 设置为灰色滤镜\n     */\n    gray(): ColorFilter {\n        return this.setByMatrix(GRAY_MATRIX);\n    }\n\n    /**\n     * 设置为变色滤镜\n     * @param red 红色系数,范围:0~1\n     * @param green 绿色系数,范围:0~1\n     * @param blue 蓝色系数,范围:0~1\n     * @param alpha alpha系数,范围:0~1\n     */\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\n    }\n\n    /**\n     * 设置滤镜色\n     * @param\tcolor 颜色值\n     */\n    setColor(color: string): ColorFilter {\n        var arr: any[] = ColorUtils.create(color).arrColor;\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\n        return this.setByMatrix(mt);\n    }\n\n    /**\n     * 设置矩阵数据\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\n     * @return this\n     */\n    setByMatrix(matrix: any[]): ColorFilter {\n        if (this._matrix != matrix) this._copyMatrix(matrix);\n        var j: number = 0;\n        var z: number = 0;\n        for (var i: number = 0; i < 20; i++) {\n            if (i % 5 != 4) {\n                this._mat[j++] = matrix[i];\n            } else {\n                this._alpha[z++] = matrix[i];\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @private \n     * @override\n    */\n    get type(): number {\n        return Filter.COLOR;\n    }\n\n    /**\n     * 调整颜色，包括亮度，对比度，饱和度和色调\n     * @param brightness 亮度,范围:-100~100\n     * @param contrast 对比度,范围:-100~100\n     * @param saturation 饱和度,范围:-100~100\n     * @param hue 色调,范围:-180~180\n     * @return this\n     */\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\n        this.adjustHue(hue);\n        this.adjustContrast(contrast);\n        this.adjustBrightness(brightness);\n        this.adjustSaturation(saturation);\n        return this;\n    }\n\n    /**\n     * 调整亮度\n     * @param brightness 亮度,范围:-100~100\n     * @return this\n     */\n    adjustBrightness(brightness: number): ColorFilter {\n        brightness = this._clampValue(brightness, 100);\n        if (brightness == 0 || isNaN(brightness)) return this;\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 调整对比度\n     * @param contrast 对比度,范围:-100~100\n     * @return this\n     */\n    adjustContrast(contrast: number): ColorFilter {\n        contrast = this._clampValue(contrast, 100);\n        if (contrast == 0 || isNaN(contrast)) return this;\n        var x: number;\n        if (contrast < 0) {\n            x = 127 + contrast / 100 * 127\n        } else {\n            x = contrast % 1;\n            if (x == 0) {\n                x = DELTA_INDEX[contrast];\n            } else {\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\n            }\n            x = x * 127 + 127;\n        }\n        var x1: number = x / 127;\n        var x2: number = (127 - x) * 0.5;\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 调整饱和度\n     * @param saturation 饱和度,范围:-100~100\n     * @return this\n     */\n    adjustSaturation(saturation: number): ColorFilter {\n        saturation = this._clampValue(saturation, 100);\n        if (saturation == 0 || isNaN(saturation)) return this;\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\n        var dx: number = 1 - x;\n        var r: number = 0.3086 * dx;\n        var g: number = 0.6094 * dx;\n        var b: number = 0.0820 * dx;\n\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 调整色调\n     * @param hue 色调,范围:-180~180\n     * @return this\n     */\n    adjustHue(hue: number): ColorFilter {\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\n        if (hue == 0 || isNaN(hue)) return this;\n        var cos: number = Math.cos(hue);\n        var sin: number = Math.sin(hue);\n        var r: number = 0.213;\n        var g: number = 0.715;\n        var b: number = 0.072;\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 重置成单位矩阵，去除滤镜效果\n     */\n    reset(): ColorFilter {\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\n    }\n\n    /**\n     * 矩阵乘法\n     * @param matrix\n     * @return this\n     */\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\n        var col: any[] = [];\n        this._matrix = this._fixMatrix(this._matrix);\n        for (var i: number = 0; i < 5; i++) {\n            for (var j: number = 0; j < 5; j++) {\n                col[j] = this._matrix[j + i * 5];\n            }\n            for (j = 0; j < 5; j++) {\n                var val: number = 0;\n                for (var k: number = 0; k < 5; k++) {\n                    val += matrix[j + k * 5] * col[k];\n                }\n                this._matrix[j + i * 5] = val;\n            }\n        }\n        return this.setByMatrix(this._matrix);\n    }\n\n    /**\n     * 规范值的范围\n     * @param val 当前值\n     * @param limit 值的范围-limit~limit\n     */\n    private _clampValue(val: number, limit: number): number {\n        return Math.min(limit, Math.max(-limit, val));\n    }\n\n    /**\n     * 规范矩阵,将矩阵调整到正确的大小\n     * @param matrix 需要调整的矩阵\n     */\n    private _fixMatrix(matrix: any[] = null): any[] {\n        if (matrix == null) return IDENTITY_MATRIX;\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\n        return matrix;\n    }\n\n    /**\n     * 复制矩阵\n     */\n    private _copyMatrix(matrix: any[]): any[] {\n        var len: number = LENGTH;\n        if (!this._matrix) this._matrix = [];\n        for (var i: number = 0; i < len; i++) {\n            this._matrix[i] = matrix[i];\n        }\n        return this._matrix;\n    }\n\n    onAfterDeserialize() {\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\n        this.color(arr[0], arr[1], arr[2], arr[3]);\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\n    }\n}\n\n","import { Point } from \"./Point\";\nimport { Utils } from \"../utils/Utils\"\n\n/**\n * @private\n * 凸包算法。\n */\nexport class GrahamScan {\n\n    private static _mPointList: any[];\n    private static _tempPointList: any[] = [];\n    private static _temPList: any[] = [];\n    private static _temArr: any[] = [];\n\n    static multiply(p1: Point, p2: Point, p0: Point): number {\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\n    }\n\n    /**\n     * 计算两个点的距离。\n     * @param\tp1\n     * @param\tp2\n     * @return\n     */\n    static dis(p1: Point, p2: Point): number {\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\n    }\n\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[]|null = null): any[] {\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\n        if (!rst) rst = [];\n        rst.length = 0;\n        if (tempUse) {\n            //\t\t\t\trst=_mPointList.slice(0,count);\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\n        } else {\n            //\t\t\t\trst=_mPointList.splice(0,count);\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\n        }\n        return rst;\n    }\n\n    /**\n     * 将数组 src 从索引0位置 依次取 cout 个项添加至 tst 数组的尾部。\n     * @param\trst 原始数组，用于添加新的子元素。\n     * @param\tsrc 用于取子元素的数组。\n     * @param\tcount 需要取得子元素个数。\n     * @return 添加完子元素的 rst 对象。\n     */\n    static getFrom(rst: any[], src: any[], count: number): any[] {\n        var i: number;\n        for (i = 0; i < count; i++) {\n            rst.push(src[i]);\n        }\n        return rst;\n    }\n\n    /**\n     * 将数组 src 从末尾索引位置往头部索引位置方向 依次取 cout 个项添加至 tst 数组的尾部。\n     * @param\trst 原始数组，用于添加新的子元素。\n     * @param\tsrc 用于取子元素的数组。\n     * @param\tcount 需要取得子元素个数。\n     * @return 添加完子元素的 rst 对象。\n     */\n    static getFromR(rst: any[], src: any[], count: number): any[] {\n        var i: number;\n        for (i = 0; i < count; i++) {\n            rst.push(src.pop());\n        }\n        return rst;\n    }\n\n    /**\n     *  [x,y...]列表 转 Point列表\n     * @param pList Point列表\n     * @return [x,y...]列表\n     */\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\n        for (i = 0; i < len; i++) {\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\n        }\n        return rst;\n    }\n\n    /**\n     * Point列表转[x,y...]列表\n     * @param pointList Point列表\n     * @return [x,y...]列表\n     */\n    static pointListToPlist(pointList: any[]): any[] {\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\n        rst.length = 0;\n        for (i = 0; i < len; i++) {\n            tPoint = pointList[i];\n            rst.push(tPoint.x, tPoint.y);\n        }\n        return rst;\n    }\n\n    /**\n     *  寻找包括所有点的最小多边形顶点集合\n     * @param pList 形如[x0,y0,x1,y1...]的点列表\n     * @return  最小多边形顶点集合\n     */\n    static scanPList(pList: any[]): any[] {\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\n    }\n\n    /**\n     * 寻找包括所有点的最小多边形顶点集合\n     * @param PointSet Point列表\n     * @return 最小多边形顶点集合\n     */\n    static scan(PointSet: any[]): any[] {\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\n        var _tmpDic: any = {};\n        var key: string;\n        ch = GrahamScan._temArr;\n        ch.length = 0;\n        n = PointSet.length;\n        for (i = n - 1; i >= 0; i--) {\n            tmp = PointSet[i];\n            key = tmp.x + \"_\" + tmp.y;\n            if (!(key in _tmpDic)) {\n                _tmpDic[key] = true;\n                ch.push(tmp);\n            }\n        }\n        n = ch.length;\n        Utils.copyArray(PointSet, ch);\n        //\t\t\tPointSet=ch;\n        //\t\t\tn=PointSet.length;\n        //找到最下且偏左的那个点  \n        for (i = 1; i < n; i++)\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\n                k = i;\n        //将这个点指定为PointSet[0]  \n        tmp = PointSet[0];\n        PointSet[0] = PointSet[k];\n        PointSet[k] = tmp;\n        //按极角从小到大,距离偏短进行排序  \n        for (i = 1; i < n - 1; i++) {\n            k = i;\n            for (j = i + 1; j < n; j++)\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \n            tmp = PointSet[i];\n            PointSet[i] = PointSet[k];\n            PointSet[k] = tmp;\n        }\n        //第三个点先入栈  \n        ch = GrahamScan._temArr;\n        ch.length = 0;\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\n        if (PointSet.length < 3) {\n            return Utils.copyArray(ch, PointSet);\n        }\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\n        //判断与其余所有点的关系  \n        for (i = 3; i < n; i++) {\n            //不满足向左转的关系,栈顶元素出栈  \n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\n            //当前点与栈内所有点满足向左关系,因此入栈.  \n            PointSet[i] && ch.push(PointSet[i]);\n        }\n        return ch;\n    }\n\n}\n\n","/**\n * @private\n */\nexport class SpriteConst {\n    /** @private */\n    static ALPHA: number = 0x01;\n    /** @private */\n    static TRANSFORM: number = 0x02;\n    /** @private */\n    static BLEND: number = 0x04;\n    /** @private */\n    static CANVAS: number = 0x08;\n    /** @private */\n    static FILTERS: number = 0x10;\n    /** @private */\n    static MASK: number = 0x20;\n    /** @private */\n    static CLIP: number = 0x40;\n    /** @private */\n    static STYLE: number = 0x80;\n    /** @private */\n    static TEXTURE: number = 0x100;\n    /** @private */\n    static GRAPHICS: number = 0x200;\n    /** @private */\n    static LAYAGL3D: number = 0x400;\n    /** @private */\n    static CUSTOM: number = 0x800;\n    /** @private */\n    static ONECHILD: number = 0x1000;\n    /** @private */\n    static HITAREA: number = 0x2000;\n    /** @private */\n    static CHILDS: number = 0x4000;\n\n    /** @private */\n    static REPAINT_NONE: number = 0;\n    /** @private */\n    static REPAINT_NODE: number = 0x01;\n    /** @private */\n    static REPAINT_CACHE: number = 0x02;\n    /** @private */\n    static REPAINT_ALL: number = 0x03;\n}\n\n\n","/**\n * 渲染统计数据\n */\nexport enum RenderStatisticsInfo{\n    DrawCall,\n    InstanceDrawCall,\n    Triangle,\n    UniformUpload,//TODO\n    GPUMemory,\n    TextureMemeory,\n    RenderTextureMemory,\n    BufferMemory,\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { IStatRender } from \"./IStatRender\";\n\n/**\n     * <p> <code>Stat</code> 是一个性能统计面板，可以实时更新相关的性能参数。</p>\n     * <p>参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：<br/>\n     * FPS(WebGL)：WebGL 模式下的帧频，也就是每秒显示的帧数，值越高、越稳定，感觉越流畅；<br/>\n     * Sprite：统计所有渲染节点（包括容器）数量，它的大小会影响引擎进行节点遍历、数据组织和渲染的效率。其值越小，游戏运行效率越高；<br/>\n     * DrawCall：此值是决定性能的重要指标，其值越小，游戏运行效率越高。Canvas模式下表示每大约1秒的图像绘制次数；WebGL模式下表示每大约1秒的渲染提交批次，每次准备数据并通知GPU渲染绘制的过程称为1次DrawCall，在每次DrawCall中除了在通知GPU的渲染上比较耗时之外，切换材质与shader也是非常耗时的操作；<br/>\n     * CurMem：Canvas模式下，表示内存占用大小，值越小越好，过高会导致游戏闪退；WebGL模式下，表示内存与显存的占用，值越小越好；<br/>\n     * Shader：是 WebGL 模式独有的性能指标，表示每大约1秒 Shader 提交次数，值越小越好；<br/>\n     * Canvas：由三个数值组成，只有设置 CacheAs 后才会有值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"类型的画布数量 / 缓存类型为\"bitmap\"类型的画布数量。</p>\n     */\nexport type StatUnit = \"M\" | \"K\" | \"int\";\nexport type StatColor = \"yellow\" | \"white\" | \"red\";\nexport type StatMode = \"summit\" | \"average\";\n\nexport interface StatUIParams {\n    title: string,//显示title\n    value: string,//对应Stat的数据\n    color: StatColor,//显示颜色\n    units: StatUnit,//\"M\"/\"k\"/\"int\"//显示单位\n    mode: StatMode//\"resource/average\"//显示模式\n}\n\nexport class Stat {\n    //FPS\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS(WebGL)\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\n    //Node nums\n    public static NodeStatUIParams: StatUIParams = { title: \"NodeNums\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //Sprite3D nums\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //DrawCall\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //triangleFace\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\n    //RenderNoe 渲染节点数量\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //SkinRenderNode\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //ParticleRenderNode\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //FrustumCulling\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" };\n    //uniformUpload\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" };\n    //OpaqueDrawCall\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //TransformDrawCall\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //DepthCastDrawCall\n    public static DepthCastDrawCall:StatUIParams = {title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //InstanceDrawCall\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //CMDDrawCall\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //BlitDrawCall\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //GPU 显存:\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //Texture2D memory\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //RenderTexture memory\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //BufferMemory\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall,Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\n    public static renderShaow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall,Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\n    /** 每秒帧数。*/\n    static FPS: number = 0;\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\n    static loopCount: number = 0;\n    // /** 三角形面数。*/\n    // static trianglesFaces: number = 0;\n    /** 精灵<code>Sprite</code> 的数量。*/\n    //static spriteCount: number = 0;\n    /** 精灵渲染使用缓存<code>Sprite</code> 的数量。*/\n    static spriteRenderUseCacheCount: number = 0;\n\n\n    /** 画布 canvas 使用标准渲染的次数。*/\n    static canvasNormal: number = 0;\n    /** 画布 canvas 使用位图渲染的次数。*/\n    static canvasBitmap: number = 0;\n    /** 画布 canvas 缓冲区重绘次数。*/\n    static canvasReCache: number = 0;\n    /** 表示当前使用的是否为慢渲染模式。*/\n    static renderSlow: boolean = false;\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\n    //static gpuMemory: number;\n    static cpuMemory: number;\n\n    /**@internal */\n    public static _canvasStr: string;\n    /**@internal */\n    public static _spriteStr: string;\n    /**@internal */\n    public static _fpsData: any[] = [];\n\n\n    /**@internal */\n    public static _timer: number = 0;\n    /**@internal */\n    public static _count: number = 0;\n\n    /**@internal */\n    public static _fpsStr: string = \"\";\n    /**@internal */\n    public static spriteCount: number = 0;//TODO\n    /**@internal */\n    public static sprite3DCount: number = 0;//TODO\n    /**@internal */\n    public static drawCall: number = 0;\n    /**@internal */\n    public static trianglesFaces: number = 0;\n    /**@internal */\n    public static renderNode: number = 0;\n    /**@internal */\n    public static skinRenderNode: number = 0;\n    /**@internal */\n    public static particleRenderNode: number = 0;\n    /**@internal 视锥剔除次数。*/\n    public static frustumCulling: number = 0;\n    /**@internal */\n    public static uniformUpload: number = 0;\n    /**@internal */\n    public static opaqueDrawCall: number = 0;\n    /**@internal */\n    public static transDrawCall: number = 0;\n    /**@internal */\n    public static depthCastDrawCall:number = 0;\n    /**@internal */\n    public static instanceDrawCall: number = 0;\n    /**@internal */\n    public static cmdDrawCall: number = 0;\n    /**@internal */\n    public static blitDrawCall: number = 0;\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\n    public static gpuMemory: number;\n    /**@internal */\n    public static textureMemory: number = 0;\n    /**@internal */\n    public static renderTextureMemory: number = 0;\n    /**@interanl */\n    public static bufferMemory: number = 0;\n\n\n    /**@internal*/\n    static _StatRender: IStatRender;\n    static _currentShowArray:Array<StatUIParams>;\n    /**\n     * 显示性能统计信息。\n     * @param\tx X轴显示位置。\n     * @param\ty Y轴显示位置。\n     */\n    static show(x: number = 0, y: number = 0, views: Array<StatUIParams> = Stat.AllShow): void {\n        Stat._currentShowArray = views;\n        Stat._StatRender.show(x, y, views);\n    }\n\n    /**\n     * 设置自定义的Stat\n     * @param stat \n     * @param value \n     */\n    static setStat(stat: string, value: number) {\n        if (!(Stat as any)[stat])\n            (Stat as any)[stat] = 0;\n        (Stat as any)[stat] += value;\n    }\n\n\n    /**激活性能统计*/\n    static enable(): void {\n        Stat._StatRender.enable();\n    }\n\n    /**\n     * 隐藏性能统计信息。\n     */\n    static hide(): void {\n        Stat._StatRender.hide();\n    }\n\n    static updateEngineData():void{\n        \n        Stat.trianglesFaces = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.Triangle);\n        Stat.drawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.DrawCall);\n        Stat.instanceDrawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\n        \n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.GPUMemory);\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.TextureMemeory);\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory);\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.BufferMemory);\n    }\n\n    /**\n     * @private\n     * 清零性能统计计算相关的数据。\n     */\n    static clear(): void {\n        if(!Stat._currentShowArray)\n            return;\n        Stat._currentShowArray.forEach(element => {\n            if(element.mode==\"average\")\n                (Stat as any)[element.value] = 0;\n        });\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.Triangle);\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.DrawCall);\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\n    }\n\n    /**\n     * 点击性能统计显示区域的处理函数。\n     */\n    static set onclick(fn: Function) {\n        Stat._StatRender.set_onclick(fn as any);\n    }\n}\n\n","import { ISubmit } from \"./ISubmit\";\nimport { SubmitKey } from \"./SubmitKey\";\nimport { Value2D } from \"../shader/d2/value/Value2D\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\n\nexport class SubmitBase implements ISubmit {\n\n    static TYPE_2D: number = 10000;\n    static TYPE_CANVAS: number = 10003;\n    static TYPE_CMDSETRT: number = 10004;\n    static TYPE_CUSTOM: number = 10005;\n    static TYPE_BLURRT: number = 10006;\n    static TYPE_CMDDESTORYPRERT: number = 10007;\n    static TYPE_DISABLESTENCIL: number = 10008;\n    static TYPE_OTHERIBVB: number = 10009;\n    static TYPE_PRIMITIVE: number = 10010;\n    static TYPE_RT: number = 10011;\n    static TYPE_BLUR_RT: number = 10012;\n    static TYPE_TARGET: number = 10013;\n    static TYPE_CHANGE_VALUE: number = 10014;\n    static TYPE_SHAPE: number = 10015;\n    static TYPE_TEXTURE: number = 10016;\n    static TYPE_FILLTEXTURE: number = 10017;\n\n    static KEY_ONCE: number = -1;\n    static KEY_FILLRECT: number = 1;\n    static KEY_DRAWTEXTURE: number = 2;\n    static KEY_VG: number = 3;\n    static KEY_TRIANGLES: number = 4;\n\n    static RENDERBASE: SubmitBase;\n    static ID: number = 1;\n    static preRender: ISubmit = null;\t//上一个submit，主要用来比较key,以减少uniform的重复提交。\n\n    clipInfoID: number = -1;\t//用来比较clipinfo\n    /**@internal */\n    _mesh: Mesh2D|null = null;\t\t\t//代替 _vb,_ib\n    /**@internal */\n    _blendFn: Function = null;\n    protected _id: number = 0;\n    /**@internal */\n    _renderType: number = 0;\n    /**@internal */\n    _parent: ISubmit = null;\n    //渲染key，通过key判断是否是同一个\n    /**@internal */\n    _key: SubmitKey = new SubmitKey();\n\n    // 从VB中什么地方开始画，画到哪\n    /**@internal */\n    _startIdx: number = 0;\t\t//indexbuffer 的偏移，单位是byte\n    /**@internal */\n    _numEle: number = 0;\n    /**@internal */\n    _ref: number = 1;\t// 其实已经没有用了\n\n    shaderValue: Value2D = null;\n\n    static __init__(): void {\n        var s: SubmitBase = SubmitBase.RENDERBASE = new SubmitBase(-1);\n        s.shaderValue = new Value2D(0, 0);\n        s.shaderValue.ALPHA = 1;\n        s._ref = 0xFFFFFFFF;\n    }\n\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\n        this._renderType = renderType;\n        this._id = ++SubmitBase.ID;\n    }\n\n    getID(): number {\n        return this._id;\n    }\n\n\n    getRenderType(): number {\n        return this._renderType;\n    }\n\n    toString(): string {\n        return \"ibindex:\" + this._startIdx + \" num:\" + this._numEle + \" key=\" + this._key;\n    }\n\n    renderSubmit(): number { return 1; }\n    releaseRender(): void { }\n}\n\n\n","export enum RenderParams{\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\n    Max_Uniform_Count,//最大Uniform数量\n    Max_AnisoLevel_Count,//最大各向异性数量\n    MAX_Texture_Size,//Shader中的最大纹理\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\n    SHADER_CAPAILITY_LEVEL,//Shader质量\n    FLOAT,\n    UNSIGNED_BYTE,\n    BYTE,\n    UNSIGNED_SHORT,\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\n\n\n/**\n * 类用来定义顶点元素格式\n */\nexport class VertexElementFormat {\n\t/**单精度浮点数 */\n\tstatic Single: string = \"single\";\n\t/**vec2 数据*/\n\tstatic Vector2: string = \"vector2\";\n\t/**vec3 数据*/\n\tstatic Vector3: string = \"vector3\";\n\t/**vec4 数据 */\n\tstatic Vector4: string = \"vector4\";\n\t/**颜色 */\n\tstatic Color: string = \"color\";\n\t/**字节数组4 */\n\tstatic Byte4: string = \"byte4\";\n\t/**字节数组3 */\n\tstatic Byte3: string = \"byte3\";\n\t/**字节数组2 */\n\tstatic Byte2: string = \"byte2\";\n\t/**字节数组1 */\n\tstatic ByteOne:string = \"byte\";\n\t/**半精度浮点数数组2 */\n\tstatic Short2: string = \"short2\";\n\t/**半精度浮点数数组4 */\n\tstatic Short4: string = \"short4\";\n\t/**归一化半精度浮点数组2 */\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\n\t/**归一化半精度浮点数组4 */\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\n\t/**@internal */\n\tstatic HalfVector2: string = \"halfvector2\";\n\t/**@internal */\n\tstatic HalfVector4: string = \"halfvector4\";\n\t/**@internal */\n\tstatic NorByte4: string = \"nbyte4\";\n\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\n\tprivate static _elementInfos: any;\n\t/**@internal */\n\tstatic __init__(): void {\n\t\tVertexElementFormat._elementInfos = {\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"byte3\": [3,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"byte2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"byte\": [1,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"short2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"nbyte4\":[4,LayaGL.renderEngine.getParams(RenderParams.BYTE),1],\n\t\t};\n\t}\n\n\t/**\n\t * 获取顶点元素格式信息。\n\t * @param element 元素名称\n\t * @returns 返回顶点元素信息\n\t */\n\tstatic getElementInfos(element: string): any[] {\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\n\t\tif (info)\n\t\t\treturn info;\n\t\telse\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\n\t}\n}\n\n","import { VertexElement } from \"../renders/VertexElement\";\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\n\n/**\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\n */\nexport class VertexDeclaration {\n    /**@internal */\n    private static _uniqueIDCounter: number = 1;\n\n    /**@internal */\n    private _id: number;\n    /**@internal */\n    private _vertexStride: number;\n    /**@internal */\n    private _vertexElementsDic: { [key: string]: VertexElement };\n    /**@internal */\n    _shaderValues: { [key: number]: Int32Array };\n\n    /**@internal [只读]*/\n    _vertexElements: Array<VertexElement>;\n\n    /**\n     * 获取唯一标识ID(通常用于优化或识别)。\n     * @return 唯一标识ID\n     */\n    get id(): number {\n        return this._id;\n    }\n\n    /**\n     * 顶点跨度，以字节为单位。\n     */\n    get vertexStride(): number {\n        return this._vertexStride;\n    }\n\n    /**\n     * 顶点元素的数量。\n     */\n    get vertexElementCount(): number {\n        return this._vertexElements.length;\n    }\n\n    /**\n     * 创建一个 <code>VertexDeclaration</code> 实例。\n     * @param\tvertexStride 顶点跨度。\n     * @param\tvertexElements 顶点元素集合。\n     */\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\n        this._id = ++VertexDeclaration._uniqueIDCounter;\n        this._vertexElementsDic = {};\n        this._vertexStride = vertexStride;\n        this._vertexElements = vertexElements;\n        var count: number = vertexElements.length;\n        this._shaderValues = {};\n\n        for (var j: number = 0; j < count; j++) {\n            var vertexElement: VertexElement = vertexElements[j];\n            var name: number = vertexElement._elementUsage;\n            this._vertexElementsDic[name] = vertexElement;\n            var value: Int32Array = new Int32Array(5);\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\n            value[0] = elmentInfo[0];\n            value[1] = elmentInfo[1];\n            value[2] = elmentInfo[2];\n            value[3] = this._vertexStride;\n            value[4] = vertexElement._offset;\n            this._shaderValues[name] = value;\n        }\n    }\n\n    /**\n     * 通过索引获取顶点元素。\n     * @param index 索引。\n     */\n    getVertexElementByIndex(index: number): VertexElement {\n        return this._vertexElements[index];\n    }\n\n    /**\n     * get vertexElement by usage\n     */\n    getVertexElementByUsage(usage: number): VertexElement {\n        return this._vertexElementsDic[usage];\n    }\n}\n\n\n","/**\n* <code>VertexElement</code> 类用于创建顶点结构分配。\n*/\nexport class VertexElement {\n    /**@internal */\n    _offset: number;\n    /**@internal */\n    _elementFormat: string;\n    /**@internal */\n    _elementUsage: number;\n    //usageIndex:int;//TODO:待确定是否添加\n\n    /**\n     * 顶点偏移\n     */\n    get offset(): number {\n        return this._offset;\n    }\n    /**\n     * 顶点信息名称\n     */\n    get elementFormat(): string {\n        return this._elementFormat;\n    }\n\n    /**\n     * 顶点宏标记\n     */\n    get elementUsage(): number {\n        return this._elementUsage;\n    }\n\n    /**\n     * 创建顶点结构分配实例\n     * @param offset 顶点偏移\n     * @param elementFormat 顶点数据格式名称\n     * @param elementUsage 顶点宏标记\n     */\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\n        this._offset = offset;\n        this._elementFormat = elementFormat;\n        this._elementUsage = elementUsage;\n        //this.usageIndex = usageIndex;\n    }\n}\n\n","export enum BufferTargetType{\n    ARRAY_BUFFER,//顶点\n    ELEMENT_ARRAY_BUFFER,//索引\n    //WebGL2.0 UniformBuffer\n    UNIFORM_BUFFER,//UBO\n    COPY_READ_BUFFER,//TODO\n    COPY_WRITE_BUFFER,//TODO\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\n    PIXEL_PACK_BUFFER,//TODO\n    PIXEL_UNPACK_BUFFER,//TODO\n}\n\n\n/**\n * Buffer usage.\n */\n export enum BufferUsage {\n    /** The buffer content are intended to be specified once, and used many times */\n    Static,\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\n    Dynamic,\n    /** The buffer contents are intended to be specified once, and used at most a few times */\n    Stream\n  }","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\nimport { IRenderVertexState } from \"../../RenderEngine/RenderInterface/IRenderVertexState\";\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\n\n\n\n/**\n * @internal\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\n */\nexport class BufferState {\n\tstatic _curBindedBufferState:BufferState;\n\t/**@private [只读]*/\n\tprotected _nativeVertexArrayObject: IRenderVertexState;\n\n\t/**@internal [只读]*/\n\t_bindedIndexBuffer: IndexBuffer;\n\n\t/**@internal */\n\t_vertexBuffers: VertexBuffer[];\n\n\t/**\n\t * 创建一个 <code>BufferState</code> 实例。\n\t */\n\tconstructor() {\n\t\tthis._nativeVertexArrayObject = LayaGL.renderEngine.createVertexState();\n\t}\n\n\tprotected applyVertexBuffers(): void {\n\t\tthis._nativeVertexArrayObject.applyVertexBuffer(this._vertexBuffers);\n\t}\n\n\tprotected applyIndexBuffers(): void {\n\t\tthis._nativeVertexArrayObject.applyIndexBuffer(this._bindedIndexBuffer);\n\t}\n\n\n\tapplyState(vertexBuffers: VertexBuffer[], indexBuffer: IndexBuffer | null) {\n\t\tthis._vertexBuffers = vertexBuffers;\n\t\tthis._bindedIndexBuffer = indexBuffer;\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\n\t\tthis.bind();\n\t\tthis.applyVertexBuffers();\n\t\tthis.applyIndexBuffers();\n\t\tthis.unBind();\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\n\t}\n\n\t/**\n\t * @private\n\t */\n\tbind(): void {\n\t\tthis._nativeVertexArrayObject.bindVertexArray();\n\t\tBufferState._curBindedBufferState = this;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tunBind(): void {\n\t\tif (BufferState._curBindedBufferState==this) {\n\t\t\tthis._nativeVertexArrayObject.unbindVertexArray();\n\t\t\tBufferState._curBindedBufferState = null;\n\t\t} else {\n\t\t\tthrow \"BufferState: must call bind() function first.\";\n\t\t}\n\t}\n\n\tisbind():boolean{\n\t\treturn (BufferState._curBindedBufferState==this);\n\t}\n\n\n\n\t/**\n\t * @private\n\t */\n\tdestroy(): void {\n\t\tthis._nativeVertexArrayObject.destroy();\n\t\tthis._nativeVertexArrayObject = null;\n\t}\n}\n\n\n","export enum IndexFormat {\n    /** 8 位无符号整型索引格式。*/\n    UInt8,\n    /** 16 位无符号整型索引格式。*/\n    UInt16,\n    /** 32 位无符号整型索引格式。*/\n    UInt32\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\nimport { IRenderBuffer } from \"./RenderInterface/IRenderBuffer\";\n\nexport class Buffer {\n\n\t_glBuffer: IRenderBuffer;\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\n\n\t_bufferType: number;\n\t_bufferUsage: number;\n\n\t_byteLength: number = 0; \n\n\tget bufferUsage(): number {\n\t\treturn this._bufferUsage;\n\t}\n\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n\t\tthis._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\n\t\tthis._bufferType = targetType;\n\t\tthis._bufferUsage = bufferUsageType;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tbind(): boolean {\n\t\treturn this._glBuffer.bindBuffer();\n\t}\n\n\tunbind():void{\n\t\treturn this._glBuffer.unbindBuffer();\n\t}\n\n\t/**\n\t * reset byteLength\n\t */\n\tresizelength(bytelength:number){\n\t\tthis._byteLength = bytelength;\n\t\tthis._glBuffer.resizeBuffer(this._byteLength)\n\t}\n\n\t/**\n\t * @private\n\t */\n\tdestroy(): void {\n\t\tif (this._glBuffer) {\n\t\t\tthis._glBuffer.destroy();\n\t\t\tthis._glBuffer = null;\n\t\t}\n\t}\n}\n\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\nimport { Buffer } from \"./Buffer\";\nimport { BufferState } from \"../webgl/utils/BufferState\";\n\nexport class IndexBuffer extends Buffer {\n    /** @internal */\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\n    /** @internal */\n    protected _indexTypeByteCount: number;\n    /** @internal */\n    protected _indexCount: number;\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n        super(targetType, bufferUsageType);\n    }\n\n\n    _setIndexData(data: number): void;\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\n        var curBufSta: BufferState = BufferState._curBindedBufferState;\n\n        if (curBufSta) {\n            if (curBufSta._bindedIndexBuffer === this) {\n                this._glBuffer.setDataLength(0);\n            } else {\n                curBufSta.unBind();//避免影响VAO\n                this.bind();\n                if (typeof data === \"number\")\n                    this._glBuffer.setDataLength(data);\n                else\n                    this._glBuffer.setData(data, bufferOffset);\n                curBufSta.bind();\n            }\n        } else {\n            this.bind();\n            if (typeof data === \"number\")\n                this._glBuffer.setDataLength(data);\n            else\n                this._glBuffer.setData(data, bufferOffset)\n        }\n    }\n}","/**\n * \n * @author laya\n */\nexport class RenderInfo {\n    /**当前帧的开始时间 */\n    static loopStTm: number = 0;\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\n    static loopCount: number = 0;\n}","import { RenderInfo } from \"../../renders/RenderInfo\";\nimport { BaseShader } from \"../shader/BaseShader\";\nimport { Buffer } from \"../../RenderEngine/Buffer\";\n\nexport class Buffer2D {\n\n    static FLOAT32: number = 4;\n    static SHORT: number = 2;\n\n    protected _maxsize: number = 0;\n\n    _upload: boolean = true;\n    protected _uploadSize: number = 0;\n    protected _bufferSize: number = 0;\n    protected _u8Array: Uint8Array = null;\t\t//反正常常要拷贝老的数据，所以保留这个可以提高效率\n    _floatArray32: Float32Array;\n    _uint32Array: Uint32Array;\n    _uint16Array: Uint16Array;\n\n    private constBuffer: Buffer;\n\n    get bufferLength(): number {\n        return this.constBuffer._buffer.byteLength;\n    }\n\n    set byteLength(value: number) {\n        this.setByteLength(value);\n    }\n\n    setByteLength(value: number): void {\n        if (this.constBuffer._byteLength !== value) {\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\n            this.constBuffer._byteLength = value;\n        }\n    }\n\n    /**\n     * 在当前的基础上需要多大空间，单位是byte\n     * @param\tsz\n     * @return  增加大小之前的写位置。单位是byte\n     */\n    needSize(sz: number): number {\n        var old: number = this.constBuffer._byteLength;\n        if (sz) {\n            var needsz: number = this.constBuffer._byteLength + sz;\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\n            this.constBuffer._byteLength = needsz;\n        }\n        return old;\n    }\n\n    constructor(buffer: Buffer) {\n        this.constBuffer = buffer;\n    }\n\n    getFloat32Array(): Float32Array {\n        if (!this._floatArray32) {\n            this._floatArray32 = new Float32Array(this.constBuffer._buffer.buffer);\n        }\n        return this._floatArray32;\n    }\n\n    protected _bufferData(): void {\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\n        if (RenderInfo.loopCount % 30 == 0) {//每30帧缩小一下buffer\t。TODO 这个有问题。不知道_maxsize和_byteLength是怎么维护的，这里会导致重新分配64字节\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\n                //_setGPUMemory(_buffer.byteLength);\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\n                this._bufferSize = this.constBuffer._buffer.byteLength;\n                this._checkArrayUse();\n                let buff = this.constBuffer._buffer.buffer;\n                ((this._bufferSize % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\n                ((this._bufferSize % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\n                this._uint16Array = new Uint16Array(buff);\n            }\n            this._maxsize = this.constBuffer._byteLength;\n        }\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\n            this._uploadSize = this.constBuffer._buffer.byteLength;\n\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\n        }\n        this.constBuffer._glBuffer.setData(new Uint8Array(this.constBuffer._buffer.buffer, 0, this.constBuffer._byteLength), 0);\n        this.constBuffer.unbind();\n    }\n\n    //TODO:coverage\n    protected _bufferSubData(offset: number = 0, dataStart: number = 0, dataLength: number = 0): void {\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\n        if (RenderInfo.loopCount % 30 == 0) {\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\n                //_setGPUMemory(_buffer.byteLength);\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\n                this._bufferSize = this.constBuffer._buffer.byteLength;\n                this._checkArrayUse();\n            }\n            this._maxsize = this.constBuffer._byteLength;\n        }\n\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\n            this._uploadSize = this.constBuffer._buffer.byteLength;\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\n            //_setGPUMemory(_uploadSize);\n        }\n\n        if (dataStart || dataLength) {\n            var subBuffer: ArrayBuffer = this.constBuffer._buffer.buffer.slice(dataStart, dataLength);\n            this.constBuffer._glBuffer.setData(subBuffer, offset);\n        } else {\n            this.constBuffer._glBuffer.setData(this.constBuffer._buffer.buffer, offset);\n        }\n    }\n\n    /**\n     * buffer重新分配了，继承类根据需要做相应的处理。\n     */\n    protected _checkArrayUse(): void {\n\n    }\n\n    // /**\n    //  * 给vao使用的 _bind_upload函数。不要与已经绑定的判断是否相同\n    //  * @return\n    //  */\n    // _bind_uploadForVAO(): boolean {\n    // \tif (!this._upload)\n    // \t\treturn false;\n    // \tthis._upload = false;\n    // \tthis.constBuffer.bind();\n    // \tthis._bufferData();\n    // \treturn true;\n    // }\n\n    _bind_upload(): boolean {\n        if (!this._upload)\n            return false;\n        this._upload = false;\n        this.constBuffer.bind();\n        this._bufferData();\n        return true;\n    }\n\n    //TODO:coverage\n    _bind_subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\n        if (!this._upload)\n            return false;\n\n        this._upload = false;\n        this.constBuffer.bind();\n        this._bufferSubData(offset, dataStart, dataLength);\n        return true;\n    }\n\n    /**\n     * 重新分配buffer大小，如果nsz比原来的小则什么都不做。\n     * @param\tnsz\t\tbuffer大小，单位是byte。\n     * @param\tcopy\t是否拷贝原来的buffer的数据。\n     * @return\n     */\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D //是否修改了长度\n    {\n        var buff: any = this.constBuffer._buffer;\n        if (buff && nsz <= buff.byteLength)\n            return this;\n        var u8buf: Uint8Array = this._u8Array;\n        //_setGPUMemory(nsz);\n        if (copy && buff && buff.byteLength > 0) {\n            var oldU8Arr: Uint8Array = new Uint8Array(buff.buffer);\n            var newbuffer: Uint8Array = new Uint8Array(nsz);\n            newbuffer.set(oldU8Arr, 0);\n            buff = this.constBuffer._buffer = newbuffer;\n            this._u8Array = new Uint8Array(this.constBuffer._buffer.buffer);\n        } else {\n            var data = new ArrayBuffer(nsz);\n            buff = this.constBuffer._buffer = new Uint8Array(data);\n            this._u8Array = new Uint8Array(buff.buffer);\n        }\n        buff = this.constBuffer._buffer.buffer;\n        ((nsz % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\n        ((nsz % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\n        this._uint16Array = new Uint16Array(buff);\n        this._checkArrayUse();\n        this._upload = true;\n        this._bufferSize = buff.byteLength;\n        return this;\n    }\n\n    append(data: any): void {\n        this._upload = true;\n        var byteLen: number, n: any;\n        byteLen = data.byteLength;\n        if (data instanceof Uint8Array) {\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\n            n = new Uint8Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\n        } else if (data instanceof Uint16Array) {\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\n            n = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\n        } else if (data instanceof Float32Array) {\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\n            n = new Float32Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\n        }\n        n.set(data, 0);\n        this.constBuffer._byteLength += byteLen;\n        this._checkArrayUse();\n    }\n\n    /**\n     * 附加Uint16Array的数据。数据长度是len。byte的话要*2\n     * @param\tdata\n     * @param\tlen\n     */\n    appendU16Array(data: Uint16Array, len: number): void {\n        this._resizeBuffer(this.constBuffer._byteLength + len * 2, true);\n        //(new Uint16Array(_buffer, _byteLength, len)).set(data.slice(0, len));\n        //下面这种写法比上面的快多了\n        var u: Uint16Array = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength, len);\t//TODO 怎么能不用new\n        if (len == 6) {\n            u[0] = data[0]; u[1] = data[1]; u[2] = data[2];\n            u[3] = data[3]; u[4] = data[4]; u[5] = data[5];\n        } else if (len >= 100) {\n            u.set(new Uint16Array(data.buffer, 0, len));\n        } else {\n            for (var i: number = 0; i < len; i++) {\n                u[i] = data[i];\n            }\n        }\n        this.constBuffer._byteLength += len * 2;\n        this._checkArrayUse();\n    }\n\n    //TODO:coverage\n    getBuffer(): ArrayBuffer {\n        return this.constBuffer._buffer.buffer;\n    }\n\n    setNeedUpload(): void {\n        this._upload = true;\n    }\n\n\n    //TODO:coverage\n    subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\n        var scuess: boolean = this._bind_subUpload();\n        this.constBuffer.unbind();\n        //gl.bindBuffer(this._bufferType, null);\n        //if (this._bufferType == gl.ARRAY_BUFFER) Buffer._bindedVertexBuffer = null;\n        //if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER) Buffer._bindedIndexBuffer = null;\n        BaseShader.activeShader = null\n        return scuess;\n    }\n\n    _disposeResource(): void {\n        this._upload = true;\n        this._uploadSize = 0;\n        this._floatArray32 = null;\n        this._uint32Array = null;\n        this._u8Array = null;\n    }\n\n\n    /**\n     * 清理数据。保留ArrayBuffer\n     */\n    clear(): void {\n        this.constBuffer._byteLength = 0;\n        this._upload = true;\n    }\n}\n\n\n\n","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\nimport { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Buffer2D } from \"./Buffer2D\";\n\nexport class IndexBuffer2D extends IndexBuffer {\n    static create: Function = function (bufferUsage: number = BufferUsage.Static): IndexBuffer2D {\n        return new IndexBuffer2D(bufferUsage);\n    }\n\n    protected _uint16Array: Uint16Array;\n    buffer2D:Buffer2D;\n    constructor(bufferUsage: number = BufferUsage.Static) {\n        super(BufferTargetType.ELEMENT_ARRAY_BUFFER,bufferUsage);\n        this.buffer2D = new Buffer2D(this);\n        this._bufferUsage = bufferUsage;\n        this._buffer = new Uint8Array(8);\n    }\n    /**\n     * @override\n     */\n    // protected _checkArrayUse(): void {\n    //     this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));\n    // }\n\n    // getUint16Array(): Uint16Array {\n    //     return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));\n    // }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _bindForVAO(): void {\n        \n        this._glBuffer.bindBuffer()\n    }\n\n    destory(): void {\n        this._uint16Array = null;\n        this._buffer = null;\n    }\n\n    disposeResource(): void {\n        this.buffer2D._disposeResource();\n    }\n}\n\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\nimport { Buffer } from \"./Buffer\";\nimport { VertexDeclaration } from \"./VertexDeclaration\";\n\nexport class VertexBuffer extends Buffer {\n\tprivate _instanceBuffer: boolean = false;\n\t/** @internal */\n\t_vertexDeclaration: VertexDeclaration | null = null;\n\n\t/**\n\t * 获取顶点声明。\n\t */\n\tget vertexDeclaration(): VertexDeclaration | null {\n\t\treturn this._vertexDeclaration;\n\t}\n\n\tset vertexDeclaration(value: VertexDeclaration | null) {\n\t\tthis._vertexDeclaration = value;\n\t}\n\tget instanceBuffer(): boolean {\n\t\treturn this._instanceBuffer;\n\t}\n\n\tset instanceBuffer(value: boolean) {\n\t\tthis._instanceBuffer = value;\n\t}\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n\t\tsuper(targetType, bufferUsageType);\n\t}\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\nimport { Buffer2D } from \"./Buffer2D\";\n\nexport class VertexBuffer2D extends VertexBuffer {\n    static create: Function = function (vertexStride: number, bufferUsage: number = BufferUsage.Dynamic): VertexBuffer2D {\n        return new VertexBuffer2D(vertexStride, bufferUsage);\n    }\n\n    buffer2D: Buffer2D;\n\n    private _vertexStride: number;\n\n    get vertexStride(): number {\n        return this._vertexStride;\n    }\n\n    constructor(vertexStride: number, bufferUsage: number) {\n        super(BufferTargetType.ARRAY_BUFFER, bufferUsage);\n        this.buffer2D = new Buffer2D(this);\n        this._vertexStride = vertexStride;\n        this._bufferUsage = bufferUsage;\n        //this._buffer = new Uint8Array(8);\n        //this._floatArray32 = new Float32Array(this._buffer);\n        //this._uint32Array = new Uint32Array(this._buffer);\n    }\n\n    getFloat32Array(): Float32Array {\n        return this.buffer2D._floatArray32;\n    }\n\n    get _floatArray32() {\n        return this.buffer2D._floatArray32;\n    }\n\n    get _uint32Array() {\n        return this.buffer2D._uint32Array;\n    }\n\n    /**\n     * 在当前位置插入float数组。\n     * @param\tdata\n     * @param\tpos\n     */\n    appendArray(data: any[]): void {\n        var oldoff: number = this._byteLength >> 2;\n        this.buffer2D.setByteLength(this._byteLength + data.length * 4);\n        var vbdata: Float32Array = this.getFloat32Array();\n        vbdata.set(data, oldoff);\n        this.buffer2D._upload = true;\n    }\n    // \t/**\n    // \t * @override\n    // \t */\n    // \t protected _checkArrayUse(): void {\n    //     this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));\n    //     this._uint32Array && (this._uint32Array = new Uint32Array(this._buffer));\n    // }\n\n    //只删除buffer，不disableVertexAttribArray\n    deleteBuffer(): void {\n        this.buffer2D._disposeResource();\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _bindForVAO(): void {\n        this._glBuffer.bindBuffer();\n    }\n    /**\n     * @override\n     * override\n     */\n    destroy(): void {\n        super.destroy();\n        this._byteLength = 0;\n        this.buffer2D._upload = true;\n        this._buffer = null;\n    }\n\n}\n\n\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Config } from \"./../../../Config\";\nimport { BufferState } from \"./BufferState\";\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\n\n/**\n * Mesh2d只是保存数据。描述attribute用的。本身不具有渲染功能。\n */\nexport class Mesh2D {\n    _stride = 0;\t\t\t//顶点结构大小。每个mesh的顶点结构是固定的。\n    vertNum = 0;\t\t\t\t//当前的顶点的个数\n    indexNum = 0;\t\t\t//实际index 个数。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\n    protected _applied = false;\t//是否已经设置给webgl了\n    _vb: VertexBuffer2D;\t\t\t//vb和ib都可能需要在外部修改，所以public\n    _ib: IndexBuffer2D;\n    private _vao: BufferState;\t\t\t\t\t\t//webgl VAO对象。需要WebGL扩展。\n    private static _gvaoid = 0;\n    private _attribInfo: any[];\t\t\t//保存起来的属性定义数组。\n    protected _quadNum = 0;\n    //public static var meshlist:Array = [];\t//活着的mesh对象列表。\n    canReuse = false;\t//用完以后，是删除还是回收。\n\n    /**\n     * \n     * @param\tstride\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\n     * @param\tiballoc\n     */\n    constructor(stride: number, vballoc: number, iballoc: number) {\n        this._stride = stride;\n        this._vb = new VertexBuffer2D(stride, BufferUsage.Dynamic);\n        if (vballoc) {\n            this._vb.buffer2D._resizeBuffer(vballoc, false);\n        } else {\n            Config.webGL2D_MeshAllocMaxMem && this._vb.buffer2D._resizeBuffer(64 * 1024 * stride, false);\n        }\n        this._ib = new IndexBuffer2D();\n        if (iballoc) {\n            this._ib.buffer2D._resizeBuffer(iballoc, false);\n        }\n        //meshlist.push(this);\n    }\n\n    /**\n     * 直接创建一个固定的ib。按照固定四边形的索引。\n     * @param\tvar QuadNum\n     */\n    createQuadIB(QuadNum: number): void {\n        this._quadNum = QuadNum;\n        this._ib.buffer2D._resizeBuffer(QuadNum * 6 * 2, false);\t//short类型\n        this._ib.buffer2D.byteLength = this._ib.buffer2D.bufferLength;\t//这个我也不知道是什么意思\n\n        var bd: Uint16Array = this._ib.buffer2D._uint16Array;\n        var idx: number = 0;\n        var curvert: number = 0;\n        for (var i: number = 0; i < QuadNum; i++) {\n            bd[idx++] = curvert;\n            bd[idx++] = curvert + 2;\n            bd[idx++] = curvert + 1;\n            bd[idx++] = curvert;\n            bd[idx++] = curvert + 3;\n            bd[idx++] = curvert + 2;\n            curvert += 4;\n        }\n\n        this._ib.buffer2D.setNeedUpload();\n    }\n\n    /**\n     * 设置mesh的属性。每3个一组，对应的location分别是0,1,2...\n     * 含义是：type,size,offset\n     * 不允许多流。因此stride是固定的，offset只是在一个vertex之内。\n     * @param\tattribs\n     */\n    setAttributes(attribs: any[]): void {\n        this._attribInfo = attribs;\n        if (this._attribInfo.length % 3 != 0) {\n            throw 'Mesh2D setAttributes error!';\n        }\n    }\n\n    /**\n     * 初始化VAO的配置，只需要执行一次。以后使用的时候直接bind就行\n     * @param\tgl\n     */\n    private configVAO(): void {\n        if (this._applied)\n            return;\n        this._applied = true;\n        if (!this._vao) {\n            //_vao = __JS__('gl.createVertexArray();');\n            this._vao = new BufferState();\n            //_vao.dbgid = _gvaoid++;\n        }\n        this._vao.applyState([this._vb],this._ib);\n        // var attribNum: number = this._attribInfo.length / 3;\n        // var idx: number = 0;\n        // for (var i: number = 0; i < attribNum; i++) {\n        //     var _size: number = this._attribInfo[idx + 1];\n        //     var _type: number = this._attribInfo[idx];\n        //     var _off: number = this._attribInfo[idx + 2];\n        //     gl.enableVertexAttribArray(i);\n        //     gl.vertexAttribPointer(i, _size, _type, false, this._stride, _off); //注意 normalize都设置为false了，想必没人要用这个功能把。\n        //     idx += 3;\n        // }\n        // this._vao.unBind();\n        //gl.bindVertexArray(null);\n    }\n\n    /**\n     * 应用这个mesh\n     * @param\tgl\n     */\n    useMesh(): void {\n        if(this._vao&&!this._vao.isbind()){\n            BufferState._curBindedBufferState&&BufferState._curBindedBufferState.unBind();\n        }\n        //要先bind，在bufferData\n        this._applied || this.configVAO();\n        this._ib.buffer2D._bind_upload();\n        this._vb.buffer2D._bind_upload();\n        this._vao.bind();\n    }\n\n    // //TODO:coverage\n    // getEleNum(): number {\n    //     return this._ib.buffer2D.getBuffer().byteLength / 2;\n    // }\n\n    /**\n     * 子类实现。用来把自己放到对应的回收池中，以便复用。\n     */\n    releaseMesh(): void { }\n\n    /**\n     * 释放资源。\n     */\n    destroy(): void {\n    }\n\n    /**\n     * 清理vb数据\n     */\n    clearVB(): void {\n        this._vb.buffer2D.clear();\n    }\n}\n\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\nimport { Mesh2D } from \"./Mesh2D\";\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\n\n/**\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\n */\nexport class MeshQuadTexture extends Mesh2D {\n\tstatic const_stride: number = 24;// 48;  24是不带clip的\n\tprivate static _fixib: IndexBuffer2D;\n\tprivate static _maxIB: number = 16 * 1024;\n\tprivate static _fixattriInfo: any[];\n\tprivate static _POOL: any[] = [];\n\t//private static var _num;\n\tstatic VertexDeclarition:VertexDeclaration;\n\tstatic __int__(): void {\n\t\t//var gl: WebGLRenderingContext = LayaGL.instance;\n\t\tMeshQuadTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\n\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\n\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 20];\n\t}\n\n\n\tconstructor() {\n\t\tsuper(MeshQuadTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\n\t\tthis.canReuse = true;\n\t\tthis.setAttributes(MeshQuadTexture._fixattriInfo);\n\t\tif (!MeshQuadTexture._fixib) {\n\t\t\tthis.createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\n\t\t\tMeshQuadTexture._fixib = this._ib;\n\t\t} else {\n\t\t\tthis._ib = MeshQuadTexture._fixib;\n\t\t\tthis._quadNum = MeshQuadTexture._maxIB;\n\t\t}\n\t\tif(!MeshQuadTexture.VertexDeclarition)\n\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(24,[\n\t\t   new VertexElement(0,VertexElementFormat.Vector4,0),\n\t\t   new VertexElement(16,VertexElementFormat.Byte4,1),\n\t\t   new VertexElement(20,VertexElementFormat.Byte4,2),\n\t   ])\n\t   this._vb.vertexDeclaration = MeshQuadTexture.VertexDeclarition;\n\t}\n\n\t/**\n\t * \n\t */\n\tstatic getAMesh(mainctx: boolean): MeshQuadTexture {\n\t\t//console.log('getmesh');\n\t\tvar ret: MeshQuadTexture = null;\n\t\tif (MeshQuadTexture._POOL.length) {\n\t\t\tret = MeshQuadTexture._POOL.pop();\n\t\t} else\n\t\t\tret = new MeshQuadTexture();\n\t\t// 先分配64k顶点的空间，这样可以避免浪费内存，否则后面增加内存的时候是成倍增加的，当快超过64k的时候，直接变成了128k\n\t\tmainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\n\t\treturn ret;\n\t}\n\n\t\t/**\n\t\t * 把本对象放到回收池中，以便getMesh能用。\n\t\t * @override\n\t\t */\n\t\t  releaseMesh(): void {\n\t\tthis._vb.buffer2D.setByteLength(0);\n\t\tthis.vertNum = 0;\n\t\tthis.indexNum = 0;\n\t\t//_applied = false;\n\t\tMeshQuadTexture._POOL.push(this);\n\t}\n\t\t/**\n\t\t * @override\n\t\t */\n\t\t  destroy(): void {\n\t\t//_ib.destroy(); ib是公用的。\n\t\tthis._vb.destroy();\n\t\tthis._vb.deleteBuffer();\n\t}\n\n\t/**\n\t * \n\t * @param\tpos\n\t * @param\tuv\n\t * @param\tcolor\n\t * @param\tclip   ox,oy,xx,xy,yx,yy\n\t * @param \tuseTex 是否使用贴图。false的话是给fillRect用的\n\t */\n\taddQuad(pos: any[], uv: ArrayLike<number>, color: number, useTex: boolean): void {\n\t\tvar vb: VertexBuffer2D = this._vb;\n\t\tvar vpos: number = (vb._byteLength >> 2);\t//float数组的下标\n\t\t//x,y,u,v,rgba\n\t\tvb.buffer2D.setByteLength((vpos + MeshQuadTexture.const_stride) << 2); //是一个四边形的大小，也是这里填充的大小\n\t\tvar vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\n\t\tvar vbu32Arr: Uint32Array = vb._uint32Array;\n\t\tvar cpos: number = vpos;\n\t\tvar useTexVal: number = useTex ? 0xff : 0;\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvb.buffer2D._upload = true;\n\t}\n}\n\n","import { Matrix } from \"../../maths/Matrix\";\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\nimport { Mesh2D } from \"./Mesh2D\";\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\n\n/**\n * 与MeshQuadTexture基本相同。不过index不是固定的\n */\nexport class MeshTexture extends Mesh2D {\n    static const_stride: number = 24;\n    private static _fixattriInfo: any[];\n    private static _POOL: any[] = [];\n\n    static VertexDeclarition:VertexDeclaration;\n\n    \n\n    static __init__(): void {\n        MeshTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\n            5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\n            5121/*gl.UNSIGNED_BYTE*/, 4, 20];\n    }\n\n    constructor() {\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\n        this.canReuse = true;\n        this.setAttributes(MeshTexture._fixattriInfo);\n        if(!MeshTexture.VertexDeclarition)\n         MeshTexture.VertexDeclarition = new VertexDeclaration(24,[\n            new VertexElement(0,VertexElementFormat.Vector4,0),\n            new VertexElement(16,VertexElementFormat.Byte4,1),\n            new VertexElement(20,VertexElementFormat.Byte4,2),\n        ])\n        this._vb.vertexDeclaration = MeshTexture.VertexDeclarition;\n        \n    }\n\n\t/**\n\t * \n\t */\n    static getAMesh(mainctx: boolean): MeshTexture {\n        //console.log('getmesh');\n        var ret: MeshTexture;\n        if (MeshTexture._POOL.length) {\n            ret = MeshTexture._POOL.pop();\n        }\n        else ret = new MeshTexture();\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshTexture.const_stride, false);\n        return ret;\n    }\n\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number): void {\n        //vb\n        var vb: VertexBuffer2D = this._vb;\n        var ib: IndexBuffer2D = this._ib;\n        var vertsz: number = vertices.length >> 1;\n        var startpos: number = vb.buffer2D.needSize(vertsz * MeshTexture.const_stride);//vb的起点。\t\t\t\n        var f32pos: number = startpos >> 2;\n        var vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\n        var vbu32Arr: Uint32Array = vb._uint32Array;\n        var ci: number = 0;\n        var m00: number = matrix.a;\n        var m01: number = matrix.b;\n        var m10: number = matrix.c;\n        var m11: number = matrix.d;\n        var tx: number = matrix.tx;\n        var ty: number = matrix.ty;\n        var i: number = 0;\n        //var clipinfo:Array = ctx.getTransedClipInfo();\n        for (i = 0; i < vertsz; i++) {\n            var x: number = vertices[ci], y: number = vertices[ci + 1];\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\n            vbdata[f32pos + 2] = uvs[ci];\n            vbdata[f32pos + 3] = uvs[ci + 1];\n            vbu32Arr[f32pos + 4] = rgba;\n            vbu32Arr[f32pos + 5] = 0xff;\n            f32pos += 6;\n            //裁剪信息。\n            //vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\n            //vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1];\t//cliprect的位置\n            ci += 2;\n        }\n        vb.buffer2D.setNeedUpload();\n\n        var vertN: number = this.vertNum;\n        var sz: number = idx.length;\n        var stib: number = ib.buffer2D.needSize(idx.byteLength);\n        var cidx: Uint16Array = ib.buffer2D._uint16Array;\n        //var cidx:Uint16Array = new Uint16Array(__JS__('ib._buffer'), stib);\n        var stibid: number = stib >> 1;\t// indexbuffer的起始位置\n        if (vertN > 0) {\n            var end: number = stibid + sz;\n            var si: number = 0;\n            for (i = stibid; i < end; i++ , si++) {\n                cidx[i] = idx[si] + vertN;\n            }\n        } else {\n            cidx.set(idx, stibid);\n        }\n        ib.buffer2D.setNeedUpload();\n\n        this.vertNum += vertsz;\n        this.indexNum += idx.length;\n    }\n\n\t\t/**\n\t\t * 把本对象放到回收池中，以便getMesh能用。\n\t\t * @override\n\t\t */\n\t\t /*override*/ releaseMesh(): void {\n        this._vb.buffer2D.setByteLength(0);\n        this._ib.buffer2D.setByteLength(0);\n        this.vertNum = 0;\n        this.indexNum = 0;\n        //_applied = false;\n        MeshTexture._POOL.push(this);\n    }\n/**\n * @override\n */\n\t\t /*override*/ destroy(): void {\n        this._ib.destroy();\n        this._vb.destroy();\n        this._ib.disposeResource();\n        this._vb.deleteBuffer();\n    }\n}\n\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { Context } from \"../../resource/Context\";\nimport { Mesh2D } from \"./Mesh2D\";\n\n/**\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\n */\nexport class MeshVG extends Mesh2D {\n    static const_stride: number = 12;// 36;\n    private static _fixattriInfo: any[];\n    private static _POOL: any[] = [];\n    static vertexDeclaration: VertexDeclaration = null;\n\n    static __init__(): void {\n        MeshVG._fixattriInfo = [5126/*gl.FLOAT*/, 2, 0,\t//x,y\n            5121/*gl.UNSIGNED_BYTE*/, 4, 8];\n    }\n\n    constructor() {\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\n        this.canReuse = true;\n        this.setAttributes(MeshVG._fixattriInfo);\n        if (!MeshVG.vertexDeclaration)\n            MeshVG.vertexDeclaration = new VertexDeclaration(12, [\n                new VertexElement(0, VertexElementFormat.Vector2, 0),\n                new VertexElement(8, VertexElementFormat.Byte4, 1),\n            ]);\n        this._vb.vertexDeclaration = MeshVG.vertexDeclaration;\n    }\n\n    static getAMesh(mainctx: boolean): MeshVG {\n        //console.log('getmeshvg');\n        var ret: MeshVG;\n        if (MeshVG._POOL.length) {\n            ret = MeshVG._POOL.pop();\n        } else\n            ret = new MeshVG();\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\n        return ret;\n    }\n\n    /**\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\n     * @param\trgba\trgba颜色\n     * @param\tib\t\tindex数组。\n     */\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void {\n        var startpos: number = this._vb.buffer2D.needSize(points.length / 2 * MeshVG.const_stride);//vb的起点。\n        var f32pos: number = startpos >> 2;\n        var vbdata: Float32Array = this._vb._floatArray32 || this._vb.getFloat32Array();\n        var vbu32Arr: Uint32Array = this._vb._uint32Array;\n        var ci: number = 0;\n        //vb\n        //var clipinfo:Array = ctx.getTransedClipInfo();\n        var sz: number = points.length / 2;\n        for (var i: number = 0; i < sz; i++) {\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\n            vbu32Arr[f32pos++] = rgba;\n            /*\n            //裁剪信息。\n            vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\n            vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1]; //cliprect的位置\n            */\n        }\n        this._vb.buffer2D.setNeedUpload();\n\n        //ib\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\n        this._ib.buffer2D.append(new Uint16Array(ib));\n        this._ib.buffer2D.setNeedUpload();\n\n        this.vertNum += sz;\n        this.indexNum += ib.length;\n    }\n\n    /**\n     * 把本对象放到回收池中，以便getMesh能用。\n     * @override\n     */\n    releaseMesh(): void {\n        this._vb.buffer2D.setByteLength(0);\n        this._ib.buffer2D.setByteLength(0);\n        this.vertNum = 0;\n        this.indexNum = 0;\n        //_applied = false;\n        MeshVG._POOL.push(this);\n    }\n    /**\n     * @override\n     */\n    destroy(): void {\n        this._ib.destroy();\n        this._vb.destroy();\n        this._ib.disposeResource();\n        this._vb.deleteBuffer();\n    }\n}\n\n","export class NativeWebGLCacheAsNormalCanvas {\n    _nativeObj: any;\n    _context: any;\n    constructor(ctx: any, sp: any)\n    {\n        this._context = ctx;\n        this._nativeObj = new (window as any)._conchWebGLCacheAsNormalCanvas(ctx._nativeObj, 0);\n    }\n    startRec(): void {\n        this._nativeObj.startRec();\n    }\n    endRec(): void {\n        this._nativeObj.endRec();\n    }\n    isCacheValid(): boolean {\n        return this._nativeObj.isCacheValid();\n    }  \n    isTextNeedRestore(): boolean {\n        return this._nativeObj.isTextNeedRestore();\n    }\n    get context() {\n        return this._context;\n    }\n}\n","import { Sprite } from \"../../display/Sprite\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Submit } from \"../submit/Submit\"\nimport { SubmitBase } from \"../submit/SubmitBase\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\nimport { MeshTexture } from \"../utils/MeshTexture\"\nimport { MeshVG } from \"../utils/MeshVG\"\nimport { NativeWebGLCacheAsNormalCanvas } from \"./NativeWebGLCacheAsNormalCanvas\"\n\n/**\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\n * 否则包括clip等都非常难以处理\n */\nexport class WebGLCacheAsNormalCanvas {\n    submitStartPos: number = 0;\t// 对应的context的submit的开始的地方\n    submitEndPos: number = 0;\n    context: Context;\n    touches: any[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\n    submits: any[] = [];\t\t// 从context中剪切的submit\n    sprite: Sprite|null = null;\t// 对应的sprite对象\n\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\n    /**@internal */\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\n    meshlist: any[] = [];\t\t\t//本context用到的mesh\n\n    // 原始context的原始值\n    private _oldMesh: MeshQuadTexture|null;\n    private _oldPathMesh: MeshVG|null;\n    private _oldTriMesh: MeshTexture|null;\n    private _oldMeshList: any[];\n\n    // cache的时候对应的clip\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\n    private oldTx: number = 0;\n    private oldTy: number = 0;\n    private static matI: Matrix = new Matrix();\n\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\n    invMat: Matrix = new Matrix();\n\n    constructor(ctx: Context, sp: Sprite) {\n        this.context = ctx;\n        this.sprite = sp;\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\n    }\n\n    startRec(): void {\n\t\tlet context = this.context;\n        // 如果有文字优化，这里要先提交一下\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\n            context._charSubmitCache.enable(false, context);\n            context._charSubmitCache.enable(true, context);\n        }\n        context._incache = true;\n        this.touches.length = 0;\n        //记录需要touch的文字资源\n        ((<any>context)).touches = this.touches;\n        context._globalClipMatrix.copyTo(this.cachedClipInfo);\n\n        this.submits.length = 0;\n        this.submitStartPos = context._submits._length;\n\n        // 先把之前的释放掉\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\n            var curm: Mesh2D = this.meshlist[i];\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\n        }\n        this.meshlist.length = 0;\n\n        this._mesh = MeshQuadTexture.getAMesh(false);\n        this._pathMesh = MeshVG.getAMesh(false);\n        this._triangleMesh = MeshTexture.getAMesh(false);\n\n        this.meshlist.push(this._mesh);\n        this.meshlist.push(this._pathMesh);\n        this.meshlist.push(this._triangleMesh);\n\n        // 打断合并\n        context._curSubmit = SubmitBase.RENDERBASE;\n        // 接管context中的一些值\n        this._oldMesh = context._mesh;\n        this._oldPathMesh = context._pathMesh;\n        this._oldTriMesh = context._triangleMesh;\n        this._oldMeshList = context.meshlist;\n\n        context._mesh = this._mesh;\n        context._pathMesh = this._pathMesh;\n        context._triangleMesh = this._triangleMesh;\n        context.meshlist = this.meshlist;\n\n        // 要取消位置，因为以后会再传入位置。这里好乱\n        this.oldTx = context._curMat.tx;\n        this.oldTy = context._curMat.ty;\n        context._curMat.tx = 0;\n        context._curMat.ty = 0;\n\n        // 取消缩放等\n        context._curMat.copyTo(this.invMat);\n        this.invMat.invert();\n        //oldMatrix = context._curMat;\n        //context._curMat = matI;\n    }\n\n    endRec(): void {\n\t\tlet context = this.context;\n        // 如果有文字优化，这里要先提交一下\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\n            context._charSubmitCache.enable(false, context);\n            context._charSubmitCache.enable(true, context);\n        }\n        // copy submit\n        var parsubmits: any = context._submits;\n        this.submitEndPos = parsubmits._length;\n        var num: number = this.submitEndPos - this.submitStartPos;\n        for (var i: number = 0; i < num; i++) {\n            this.submits.push(parsubmits[this.submitStartPos + i]);\n        }\n        parsubmits._length -= num;\n\n        // 恢复原始context的值\n        context._mesh = this._oldMesh;\n        context._pathMesh = this._oldPathMesh;\n        context._triangleMesh = this._oldTriMesh;\n        context.meshlist = this._oldMeshList;\n\n        // 打断合并\n        context._curSubmit = SubmitBase.RENDERBASE;\n        // 恢复matrix\n        //context._curMat = oldMatrix;\n        context._curMat.tx = this.oldTx;\n        context._curMat.ty = this.oldTy;\n        ((<any>context)).touches = null;\n        context._incache = false;\n    }\n\n    /**\n     * 当前缓存是否还有效。例如clip变了就失效了，因为clip太难自动处理\n     * @return\n     */\n    isCacheValid(): boolean {\n        var curclip: Matrix = this.context._globalClipMatrix;\n        if (curclip.a != this.cachedClipInfo.a || curclip.b != this.cachedClipInfo.b || curclip.c != this.cachedClipInfo.c\n            || curclip.d != this.cachedClipInfo.d || curclip.tx != this.cachedClipInfo.tx || curclip.ty != this.cachedClipInfo.ty)\n            return false;\n        return true;\n    }\n    isTextNeedRestore(): boolean {\n        var textNeedRestore: boolean = false;\n        var charRIs: any[] = this.touches;\n\t\tif (charRIs) {\n\t\t\tfor (var ci: number = 0; ci < charRIs.length; ci++) {\n\t\t\t\tif (charRIs[ci].deleted) {\n\t\t\t\t\ttextNeedRestore = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        return textNeedRestore;\n    }\n    flushsubmit(): void {\n        var curSubmit: SubmitBase = SubmitBase.RENDERBASE;\n        this.submits.forEach(function (subm: Submit): void {\n            if (subm == SubmitBase.RENDERBASE) return;\n            SubmitBase.preRender = curSubmit;\n            curSubmit = subm;\n            subm.renderSubmit();\n        });\n    }\n\n    releaseMem(): void {\n\n    }\n}\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n\t//@ts-ignore\n\tWebGLCacheAsNormalCanvas = NativeWebGLCacheAsNormalCanvas;\n}","import { NodeFlags } from \"../Const\"\nimport { Sprite } from \"../display/Sprite\"\nimport { SpriteConst } from \"../display/SpriteConst\"\nimport { SpriteStyle } from \"../display/css/SpriteStyle\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Context } from \"../resource/Context\"\nimport { Texture } from \"../resource/Texture\"\nimport { _RenderFunction } from \"./RenderSprite\"\n\n/**\n * @internal\n * 快速节点命令执行器\n * 多个指令组合才有意义，单个指令没必要在下面加\n */\nexport class LayaGLQuickRunner {\n    /*[FILEINDEX:10000]*/\n    static map: _RenderFunction[] = [];\n    private static curMat: Matrix = new Matrix();\n    /**@internal */\n    static __init__(): void {\n        /*\n           glQuickMap[\"drawNode;\"] = drawNode;\n           glQuickMap[\"drawNodes;\"] = drawNodes;\n           glQuickMap[\"drawLayaGL;\"] = drawLayaGL;\n           glQuickMap[\"drawLayaGL;drawNodes;\"] = drawLayaGL_drawNodes;\n           glQuickMap[\"save;alpha;drawNode;restore;\"] = save_alpha_drawNode_restore;\n           glQuickMap[\"save;alpha;drawLayaGL;restore;\"] = save_alpha_drawLayaGL_restore;\n         */\n        //glQuickMap[\"save;alpha;drawTextureWithGr;restore;\"] = save_alpha_drawTextureWithGr_restore;\n        //glQuickMap[\"save;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\n        //glQuickMap[\"save;alpha;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\n        //glQuickMap[\"drawTextureWithGr;\"] = drawTextureWithGr;\n        //glQuickMap[\"save;transform;drawNodes;restore;\"] = save_transform_drawNodes_restore;\n        //glQuickMap[\"save;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\n        //map[SpriteConst.TEXTURE] = _drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\n        //map[ SpriteConst.GRAPHICS] = _drawLayaGL;\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\n\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\n    }\n\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var tex: Texture = sprite.texture;\n\n\n        /*\n        var ctx:WebGLContext2D = context as WebGLContext2D;\n        var ctxm:Matrix = ctx._curMat;\n        ctxm.copyTo(curMat);\n        //context.saveTransform(curMat);\n        ctx.transformByMatrixNoSave(sprite.getTransform(), x, y);\n        ctx.drawTexture(tex, -style.pivotX, -style.pivotY, sprite._width || tex.width, sprite._height || tex.height);\n        curMat.copyTo(ctxm);\n        //ctx.restoreTransform(curMat);\n        */\n\n        context.saveTransform(LayaGLQuickRunner.curMat);\n        context.transformByMatrix(sprite.transform, x, y);\n\n        var width: number = sprite._width || tex.sourceWidth;\n        var height: number = sprite._height || tex.sourceHeight;\n        var wRate: number = width / tex.sourceWidth;\n        var hRate: number = height / tex.sourceHeight;\n        width = tex.width * wRate;\n        height = tex.height * hRate;\n        if (width <= 0 || height <= 0) return null;\n        var px: number = -sprite.pivotX + tex.offsetX * wRate;\n        var py: number = -sprite.pivotY + tex.offsetY * hRate;\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n            context.drawTexture(tex, px, py, width, height);\n\n        context.restoreTransform(LayaGLQuickRunner.curMat);\n\n        /*\n        context.saveTransform(curMat);\n        var w:int = sprite._width || tex.width;\n        var h:int = sprite._height || tex.height;\n        var mat:Matrix = sprite.transform;// (sprite as Object)._tfChanged?(sprite as Object)._adjustTransform():(sprite as Object)._transform;\n        mat.tx += x; mat.ty += y;\n        //(context as WebGLContext2D).drawTextureWithTransform(tex, -style.pivotX, -style.pivotY, w, h,mat,x,y,1,null,null);\n    \t\n        var ctx:WebGLContext2D = context;\n        var curMat:Matrix = ctx._curMat;\n        var tmpMat:Matrix = ctx._tmpMatrix;\n        var transform = mat;\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + x; tmpMat.ty = transform.ty + y;\n        tmpMat._bTransform = transform._bTransform;\n        if (transform && curMat._bTransform) {\n            Matrix.mul(tmpMat, curMat, tmpMat);\n            transform = tmpMat;\n            transform._bTransform = true;\n        }else {\n            //如果curmat没有旋转。\n            transform = tmpMat;\n        }\n        ctx._drawTextureM(tex, x, y, w,h, mat, 1,null);\n    \t\n        //var st = __JS__(\"performance.now()\");\n        //Laya.stage.perfdt += (__JS__(\"performance.now()\")-st);\n        context.restoreTransform(curMat);\n        */\n    }\n\n    //static public function _drawTexture(sprite:Sprite, context:Context, x:Number, y:Number):void {\n    //var tex:Texture = sprite.texture;\n    //context.drawTexture(tex, x-sprite.pivotX, y-sprite.pivotY, sprite._width || tex.width, sprite._height || tex.height);\n    //}\n\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        var tex: Texture = sprite.texture;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n            var width: number = sprite._width || tex.width;\n            var height: number = sprite._height || tex.height;\n            var wRate: number = width / tex.sourceWidth;\n            var hRate: number = height / tex.sourceHeight;\n            width = tex.width * wRate;\n            height = tex.height * hRate;\n            if (width <= 0 || height <= 0) return null;\n            var px: number = x - style.pivotX + tex.offsetX * wRate;\n            var py: number = y - style.pivotY + tex.offsetY * hRate;\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                context.drawTexture(tex, px, py, width, height);\n            context.globalAlpha = temp;\n        }\n    }\n\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        var tex: Texture = sprite.texture;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n\n            context.saveTransform(LayaGLQuickRunner.curMat);\n            context.transformByMatrix(sprite.transform, x, y);\n            var width: number = sprite._width || tex.sourceWidth;\n            var height: number = sprite._height || tex.sourceHeight;\n            var wRate: number = width / tex.sourceWidth;\n            var hRate: number = height / tex.sourceHeight;\n            width = tex.width * wRate;\n            height = tex.height * hRate;\n            if (width <= 0 || height <= 0) return null;\n            var px: number = -style.pivotX + tex.offsetX * wRate;\n            var py: number = -style.pivotY + tex.offsetY * hRate;\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                context.drawTexture(tex, px, py, width, height);\n            context.restoreTransform(LayaGLQuickRunner.curMat);\n\n            context.globalAlpha = temp;\n        }\n    }\n\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n\n            context.saveTransform(LayaGLQuickRunner.curMat);\n            context.transformByMatrix(sprite.transform, x, y);\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\n            context.restoreTransform(LayaGLQuickRunner.curMat);\n\n            context.globalAlpha = temp;\n        }\n    }\n\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\n            context.globalAlpha = temp;\n        }\n    }\n\n    //static public function _drawLayaGL(sprite:Sprite, context:Context, x:Number, y:Number):void {\n    //sprite._graphics._render(sprite, context, x, y);\n    //}\t\t\n\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        //var transform:Matrix = sprite.transform;\n\n        //临时\n        //if (transform) {\n        context.saveTransform(LayaGLQuickRunner.curMat);\n        context.transformByMatrix(sprite.transform, x, y);\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\n        context.restoreTransform(LayaGLQuickRunner.curMat);\n        //}else {\n        //sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\n        //}\t\t\t\n    }\n\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\n        //var transform:Matrix = sprite.transform;\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\n        let drawingToTexture = context._drawingToTexture;\n\n        var style: SpriteStyle = sprite._style;\n        context.saveTransform(LayaGLQuickRunner.curMat);\n        context.transformByMatrix(sprite.transform, x, y);\n\n        //x = x-style.pivotX;\n        //y = y - style.pivotY;\n\n        x = -style.pivotX;\n        y = -style.pivotY;\n\n        var childs: any[] = sprite._children, n: number = childs.length;\n        let rect: Rectangle;\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\n\n        if (style.viewport) {\n            rect = style.viewport;\n            left = rect.x;\n            top = rect.y;\n            right = rect.right;\n            bottom = rect.bottom;\n        }\n\n        for (let i = 0; i < n; ++i) {\n            let ele = childs[i];\n            let visFlag: boolean;\n            if (drawingToTexture)\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\n            else\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\n                visFlag = false;\n\n            if (visFlag)\n                ele.render(context, x, y);\n        }\n\n        context.restoreTransform(LayaGLQuickRunner.curMat);\n        textLastRender && context.drawCallOptimize(false);\n    }\n\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\n\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\n        let drawingToTexture = context._drawingToTexture;\n\n        var style: SpriteStyle = sprite._style;\n        x = x - style.pivotX;\n        y = y - style.pivotY;\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\n\n        var childs: any[] = sprite._children, n: number = childs.length;\n        let rect: Rectangle;\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\n\n        if (style.viewport) {\n            rect = style.viewport;\n            left = rect.x;\n            top = rect.y;\n            right = rect.right;\n            bottom = rect.bottom;\n        }\n\n        for (let i = 0; i < n; ++i) {\n            let ele = childs[i];\n            let visFlag: boolean;\n            if (drawingToTexture)\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\n            else\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\n                visFlag = false;\n\n            if (visFlag)\n                ele.render(context, x, y);\n\n        }\n\n        textLastRender && context.drawCallOptimize(false);\n    }\n}\n\n","import { IFilter } from \"./IFilter\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { RenderSprite } from \"../renders/RenderSprite\"\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { ColorFilter } from \"./ColorFilter\";\nimport { BlurFilter } from \"./BlurFilter\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\n\n/**\n * <code>Filter</code> 是滤镜基类。\n */\nexport class NativeFilter implements IFilter {\n    /**@private 模糊滤镜。*/\n    static BLUR: number = 0x10;\n    /**@private 颜色滤镜。*/\n    static COLOR: number = 0x20;\n    /**@private 发光滤镜。*/\n    static GLOW: number = 0x08;\n    /** @internal*/\n    _glRender: any;\n\n    /**\n     * 创建一个 <code>Filter</code> 实例。\n     * */\n    constructor() { }\n\n    /**@private 滤镜类型。*/\n    get type(): number { return -1 }\n\n    static _filter = function (this:RenderSprite,sprite: Sprite, context: any, x: number, y: number): void {\n        var webglctx: any = context;\n        var next: any = ((<RenderSprite>this))._next;\n        if (next) {\n            var filters: any[] = sprite.filters, len: number = filters.length;\n            //如果只有一个滤镜，那么还用原来的方式\n            if (len == 1 && (filters[0].type == NativeFilter.COLOR)) {\n                context.save();\n                context.setColorFilter(filters[0]);\n                next._fun.call(next, sprite, context, x, y);\n                context.restore();\n                return;\n            }\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\n            var svCP: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\t//拷贝用shaderValue\n            var b: Rectangle;\n\n            var p: Point = Point.TEMP;\n            var tMatrix: Matrix = webglctx._curMat;\n            var mat: Matrix = Matrix.create();\n            tMatrix.copyTo(mat);\n            var tPadding: number = 0;\t//给glow用\n            var tHalfPadding: number = 0;\n            var tIsHaveGlowFilter: boolean = false;\n            //这里判断是否存储了out，如果存储了直接用;\n            var source: any = null;\n            var out: any = sprite._cacheStyle.filterCache || null;\n            if (!out || sprite.getRepaint() != 0) {\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\n                //glow需要扩展边缘\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = new Rectangle();\n                b.copyFrom(sprite.getSelfBounds());\n                b.x += sprite.x;\n                b.y += sprite.y;\n                b.x -= sprite.pivotX + 4;//blur \n                b.y -= sprite.pivotY + 4;//blur\n                var tSX: number = b.x;\n                var tSY: number = b.y;\n                //重新计算宽和高\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                //out && WebGLRTMgr.releaseRT(out);// out.recycle();\n                out && out.destroy();// out.recycle();\n                //source = WebGLRTMgr.getRT(b.width, b.height);\n                source = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n                //var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\n                var outRT: any = out = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n                sprite._getCacheStyle().filterCache = out;\n                //使用RT\n                webglctx.pushRT();\n                webglctx.useRT(source);\n                var tX: number = sprite.x - tSX + tHalfPadding;\n                var tY: number = sprite.y - tSY + tHalfPadding;\n                //执行节点的渲染\n                next._fun.call(next, sprite, context, tX, tY);\n                webglctx.useRT(outRT);\n                for (var i: number = 0; i < len; i++) {\n                    if (i != 0) {\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\n                        webglctx.useRT(source);\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\n                        webglctx.useRT(outRT);\n                    }\n                    var fil: NativeFilter = filters[i];\n                    //把src往out上画\n                    switch (fil.type) {\n                        case NativeFilter.BLUR:\n                            //fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\n                            webglctx.drawTargetBlurFilter(source, 0, 0, b.width, b.height, (fil as BlurFilter).strength);\n                            break;\n                        case NativeFilter.GLOW:\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            break;\n                        case NativeFilter.COLOR:\n                            webglctx.setColorFilter((<ColorFilter>fil));\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n                            webglctx.setColorFilter(null);\n                            break;\n                    }\n                }\n                webglctx.popRT();\n            } else {\n\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = sprite.getBounds();\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                //edit\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                b.x -= sprite.pivotX + 4; //blur \n                b.y -= sprite.pivotY + 4;//blur \n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                //scope.addValue(\"out\", out);\n            }\n            x = x - tHalfPadding - sprite.x;\n            y = y - tHalfPadding - sprite.y;\n            p.setTo(x, y);\n            mat.transformPoint(p);\n            x = p.x + b.x;\n            y = p.y + b.y;\n            //把最后的out纹理画出来\n            //webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\n\n            //把对象放回池子中\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\n            /*if (source) {\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\n                    s.destroy();\n                }, this);\n                source = null;\n                context.addRenderObject(submit);\n            }*/\n            webglctx.drawFilter(out, source, x, y, b.width, b.height);\n            mat.destroy();\n        }\n    }\n}\n\n","import { NodeFlags } from \"../Const\";\nimport { CacheStyle } from \"../display/css/CacheStyle\";\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\nimport { TextStyle } from \"../display/css/TextStyle\";\nimport { Sprite } from \"../display/Sprite\";\nimport { SpriteConst } from \"../display/SpriteConst\";\nimport { Filter } from \"../filters/Filter\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Context } from \"../resource/Context\";\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\nimport { Texture } from \"../resource/Texture\";\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\";\nimport { Stat } from \"../utils/Stat\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\nimport { ILaya } from \"../../ILaya\";\nimport { NativeFilter } from \"../filters/NativeFilter\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * @private\n * \n */\nexport interface _RenderFunction {\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\n}\n\n/**\n * @private\n * 精灵渲染器\n */\nexport class RenderSprite {\n    /** @private */\n    //public static const IMAGE:int = 0x01;\n    /** @private */\n    //public static const ALPHA:int = 0x02;\n    /** @private */\n    //public static const TRANSFORM:int = 0x04;\n    /** @private */\n    //public static const BLEND:int = 0x08;\n    /** @private */\n    //public static const CANVAS:int = 0x10;\n    /** @private */\n    //public static const FILTERS:int = 0x20;\n    /** @private */\n    //public static const MASK:int = 0x40;\n    /** @private */\n    //public static const CLIP:int = 0x80;\n    /** @private */\n    //public static const STYLE:int = 0x100;\n    /** @private */\n    //public static const GRAPHICS:int = 0x200;\n    /** @private */\n    //public static const CUSTOM:int = 0x400;\n    /** @private */\n    //public static const CHILDS:int = 0x800;\n    /** @private */\n    static INIT: number = 0x11111;\n    /** @private */\n    static renders: RenderSprite[] = [];\n    /** @private */\n    protected static NORENDER: RenderSprite = new RenderSprite(0, null);\n    /** @internal */\n    _next: RenderSprite;\n    /** @internal */\n    _fun: Function;\n\n    /** @internal */\n    static __init__(): void {\n        LayaGLQuickRunner.__init__();\n        var i: number, len: number;\n        var initRender: RenderSprite;\n        initRender = new RenderSprite(RenderSprite.INIT, null);\n        len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\n        for (i = 0; i < len; i++)\n            RenderSprite.renders[i] = initRender;\n\n        RenderSprite.renders[0] = new RenderSprite(0, null);\n    }\n\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\n        var type: number = sprite._renderType;\n        var r: RenderSprite = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\n        r._fun(sprite, context, x, y);\n    }\n\n    private static _getTypeRender(type: number): RenderSprite {\n        if (LayaGLQuickRunner.map[type]) return new RenderSprite(type, null);\n        var rst: RenderSprite | null = null;\n        var tType: number = SpriteConst.CHILDS;\n        while (tType > 0) {\n            if (tType & type)\n                rst = new RenderSprite(tType, rst);\n            tType = tType >> 1;\n        }\n        return rst as RenderSprite;\n    }\n\n    constructor(type: number, next: RenderSprite | null) {\n\n        if (LayaGLQuickRunner.map[type]) {\n            this._fun = LayaGLQuickRunner.map[type];\n            this._next = RenderSprite.NORENDER;\n            return;\n        }\n        this._next = next || RenderSprite.NORENDER;\n        switch (type) {\n            case 0:\n                this._fun = this._no;\n                return;\n            case SpriteConst.ALPHA:\n                this._fun = this._alpha;\n                return;\n            case SpriteConst.TRANSFORM:\n                this._fun = this._transform;\n                return;\n            case SpriteConst.BLEND:\n                this._fun = this._blend;\n                return;\n            case SpriteConst.CANVAS:\n                this._fun = this._canvas;\n                return;\n            case SpriteConst.MASK:\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\n                    this._fun = this._maskNative;\n                }\n                else {\n                    this._fun = this._mask;\n                }\n                return;\n            case SpriteConst.CLIP:\n                this._fun = this._clip;\n                return;\n            case SpriteConst.STYLE:\n                this._fun = this._style;\n                return;\n            case SpriteConst.GRAPHICS:\n                this._fun = this._graphics;\n                return;\n            case SpriteConst.CHILDS:\n                this._fun = this._children;\n                return;\n            case SpriteConst.CUSTOM:\n                this._fun = this._custom;\n                return;\n            case SpriteConst.TEXTURE:\n                this._fun = this._texture;\n                return;\n            case SpriteConst.FILTERS:\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\n                    this._fun = NativeFilter._filter;\n                }\n                else {\n                    this._fun = Filter._filter;\n                }\n                return;\n            case SpriteConst.HITAREA:\n                this._fun = this._hitarea;\n                return;\n            case RenderSprite.INIT:\n                this._fun = RenderSprite._initRenderFun;\n                return;\n        }\n\n        this.onCreate(type);\n    }\n\n    protected onCreate(type: number): void {\n\n    }\n\n    /**@internal */\n    _style(sprite: Sprite, context: Context, x: number, y: number): void {\n        //现在只有Text会走这里，Html已经不走这里了\n        var style: TextStyle = (<TextStyle>sprite._style);\n        if (style.render != null) style.render(sprite, context, x, y);\n        var next: RenderSprite = this._next;\n        next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal */\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\n    }\n\n    /**@internal */\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\n        sprite.customRender(context, x, y);\n        this._next._fun.call(this._next, sprite, context, 0, 0);\n    }\n\n    /**@internal */\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\n        var next: RenderSprite = this._next;\n        if (next == RenderSprite.NORENDER) return;\n\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\n            next._fun.call(next, sprite, context, x, y);\n            return;\n        }\n\n        var r: Rectangle = sprite._style.scrollRect;\n        var width = r.width;\n        var height = r.height;\n        if (width === 0 || height === 0) {\n            return;\n        }\n        context.save();\n        context.clipRect(x, y, width, height);\n        next._fun.call(next, sprite, context, x - r.x, y - r.y);\n        context.restore();\n    }\n\n    /**@internal */\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\n            var tex: Texture = sprite.texture;\n            if (tex._getSource()) {\n                var width: number = sprite._width || tex.sourceWidth;\n                var height: number = sprite._height || tex.sourceHeight;\n                var wRate: number = width / tex.sourceWidth;\n                var hRate: number = height / tex.sourceHeight;\n                width = tex.width * wRate;\n                height = tex.height * hRate;\n                if (width <= 0 || height <= 0) return;\n\n                var px = x - sprite.pivotX + tex.offsetX * wRate;\n                var py = y - sprite.pivotY + tex.offsetY * hRate;\n\n                context.drawTexture(tex, px, py, width, height);\n            }\n        }\n        var next: RenderSprite = this._next;\n        if (next != RenderSprite.NORENDER)\n            next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal */\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\n            var style = sprite._style;\n            var g = sprite._graphics;\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\n        }\n        var next = this._next;\n        if (next != RenderSprite.NORENDER)\n            next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal IDE only*/\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\n        if (!context._drawingToTexture && sprite.hitArea) {\n            var style = sprite._style;\n            var g = sprite.hitArea._hit;\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= 0.5;\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\n            g = sprite.hitArea._unHit;\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\n            context.globalAlpha = temp;\n        }\n        var next = this._next;\n        if (next != RenderSprite.NORENDER)\n            next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n            var next: RenderSprite = this._next;\n            next._fun.call(next, sprite, context, x, y);\n            context.globalAlpha = temp;\n        }\n    }\n\n    /**@internal */\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\n        var transform: Matrix = sprite.transform, _next: RenderSprite = this._next;\n        var style: SpriteStyle = sprite._style;\n        if (transform && _next != RenderSprite.NORENDER) {\n            context.save();\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\n            _next._fun.call(_next, sprite, context, 0, 0);\n            context.restore();\n        } else {\n            if (_next != RenderSprite.NORENDER)\n                _next._fun.call(_next, sprite, context, x, y);\n        }\n    }\n\n    /**@internal */\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\n        let style: SpriteStyle = sprite._style;\n        let childs = <Sprite[]>sprite._children, n: number = childs.length, ele: any;\n        x = x - sprite.pivotX;\n        y = y - sprite.pivotY;\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\n        let drawingToTexture = context._drawingToTexture;\n        let rect: Rectangle;\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\n\n        if (style.viewport) {\n            rect = style.viewport;\n            left = rect.x;\n            top = rect.y;\n            right = rect.right;\n            bottom = rect.bottom;\n        }\n\n        for (let i = 0; i < n; ++i) {\n            let ele = childs[i];\n            let visFlag: boolean;\n            if (drawingToTexture)\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\n            else\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\n            if (visFlag) {\n                if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\n                    visFlag = false;\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\n                    visFlag = false;\n            }\n\n            if (visFlag) {\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\n                    context.clipRect(0, 0, 1, 1, true);\n\n                ele.render(context, x, y);\n            }\n        }\n        textLastRender && context.drawCallOptimize(false);\n    }\n\n    /**@internal */\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\n\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        var _next: RenderSprite = this._next;\n\n        if (!_cacheStyle.enableCanvasRender || !context._drawingToTexture && _cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\n            _next._fun.call(_next, sprite, context, x, y);\n            return;\n        }\n        _cacheStyle.cacheAs === 'bitmap' ? (Stat.canvasBitmap++) : (Stat.canvasNormal++);\n\n        //检查保存的文字是否失效了\n        var cacheNeedRebuild: boolean = false;\n        var textNeedRestore: boolean = false;\n\n        if (_cacheStyle.canvas) {\n            // 检查文字是否被释放了，以及clip是否改变了，需要重新cache了\n            var canv: any = _cacheStyle.canvas;\n            textNeedRestore = canv.isTextNeedRestore && canv.isTextNeedRestore();\n            cacheNeedRebuild = canv.isCacheValid && !canv.isCacheValid();\n        }\n\n        if (sprite._needRepaint() || (!_cacheStyle.canvas) || textNeedRestore || cacheNeedRebuild || ILaya.stage.isGlobalRepaint()) {\n            if (_cacheStyle.cacheAs === 'normal') {\n                if (context._targets) {// 如果有target说明父节点已经是一个cacheas bitmap了，就不再走cacheas normal的流程了\n                    _next._fun.call(_next, sprite, context, x, y);\n                    return;\t//不再继续\n                } else {\n                    this._canvas_webgl_normal_repaint(sprite, context);\n                }\n            } else {\n                this._canvas_repaint(sprite, context, x, y);\n            }\n        }\n        var tRec: Rectangle = _cacheStyle.cacheRect;\n        //Stage._dbgSprite.graphics.drawRect(x, y, 30,30, null, 'red');\n        context.drawCanvas(_cacheStyle.canvas, x + tRec.x, y + tRec.y, tRec.width, tRec.height);\n    }\n\n    /**@internal */\n    _canvas_repaint(sprite: Sprite, context: Context, x: number, y: number): void {\n\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        var _next: RenderSprite = this._next;\n        var tx: Context;\n        var canvas: HTMLCanvas = _cacheStyle.canvas;\n        var left: number;\n        var top: number;\n        var tRec: Rectangle;\n        var tCacheType: string = _cacheStyle.cacheAs;\n\n        var w: number, h: number;\n        var scaleX: number, scaleY: number;\n\n        var scaleInfo: Point;\n        scaleInfo = _cacheStyle._calculateCacheRect(sprite, tCacheType, x, y);\n        scaleX = scaleInfo.x;\n        scaleY = scaleInfo.y;\n\n        //显示对象实际的绘图区域\n        tRec = _cacheStyle.cacheRect;\n\n        //计算cache画布的大小\n        w = tRec.width * scaleX;\n        h = tRec.height * scaleY;\n        left = tRec.x;\n        top = tRec.y;\n\n        if (tCacheType === 'bitmap' && (w > 2048 || h > 2048)) {\n            console.warn(\"cache bitmap size larger than 2048,cache ignored\");\n            _cacheStyle.releaseContext();\n            _next._fun.call(_next, sprite, context, x, y);\n            return;\n        }\n        if (!canvas) {\n            _cacheStyle.createContext();\n            canvas = _cacheStyle.canvas;\n        }\n        tx = canvas.context as Context;\n\n        //WebGL用\n        tx.sprite = sprite;\n\n        (canvas.width != w || canvas.height != h) && canvas.size(w, h);//asbitmap需要合理的大小，所以size放到前面\n\n        if (tCacheType === 'bitmap') tx.asBitmap = true;\n        else if (tCacheType === 'normal') tx.asBitmap = false;\n\n        //清理画布。之前记录的submit会被全部清掉\n        tx.clear();\n\n        //TODO:测试webgl下是否有缓存模糊\n        if (scaleX != 1 || scaleY != 1) {\n            var ctx: any = tx;\n            ctx.save();\n            ctx.scale(scaleX, scaleY);\n            _next._fun.call(_next, sprite, tx, -left, -top);\n            ctx.restore();\n            sprite._applyFilters();\n        } else {\n            ctx = tx;\n            _next._fun.call(_next, sprite, tx, -left, -top);\n            sprite._applyFilters();\n        }\n\n        if (_cacheStyle.staticCache) _cacheStyle.reCache = false;\n        Stat.canvasReCache++;\n    }\n\n    /**@internal */\n    _canvas_webgl_normal_repaint(sprite: Sprite, context: Context): void {\n\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        var _next: RenderSprite = this._next;\n        var canvas: WebGLCacheAsNormalCanvas = _cacheStyle.canvas as unknown as WebGLCacheAsNormalCanvas;\n\n        var tCacheType: string = _cacheStyle.cacheAs;\n        _cacheStyle._calculateCacheRect(sprite, tCacheType, 0, 0);\n\n        if (!canvas) {\n            canvas = new WebGLCacheAsNormalCanvas(context, sprite);\n            _cacheStyle.canvas = ((canvas as any) as HTMLCanvas);\n        }\n        var tx: Context = canvas.context as Context;\n\n\n        canvas.startRec();\n        _next._fun.call(_next, sprite, tx, sprite.pivotX, sprite.pivotY);\t// 由于后面的渲染会减去pivot，而cacheas normal并不希望这样，只希望创建一个原始的图像。所以在这里补偿。\n        sprite._applyFilters();\n\n        Stat.canvasReCache++;\n        canvas.endRec();\n\n        //context.drawCanvas(canvas, x , y , 1, 1); // 这种情况下宽高没用\n    }\n\n    /**@internal */\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var next: RenderSprite = this._next;\n        if (style.blendMode) {\n            context.save();\n            context.globalCompositeOperation = style.blendMode;\n            next._fun.call(next, sprite, context, x, y);\n            context.restore();\n        } else {\n            next._fun.call(next, sprite, context, x, y);\n        }\n    }\n\n    /**\n     * @internal\n     * mask的渲染。 sprite有mask属性的情况下，来渲染这个sprite\n     * @param\tsprite\n     * @param\tcontext\n     * @param\tx\n     * @param\ty\n     */\n    _mask(sprite: Sprite, context: Context, x: number, y: number): void {\n        var next: RenderSprite = this._next;\n        var mask: Sprite = sprite.mask;\n        var submitCMD: SubmitCMD;\n        var ctx: Context = (<Context>context);\n        if (mask && (!mask._getBit(NodeFlags.DISABLE_VISIBILITY) || context._drawingToTexture)) {\n            ctx.save();\n            var preBlendMode: string = ctx.globalCompositeOperation;\n            var tRect: Rectangle = new Rectangle();\n            //裁剪范围是根据mask来定的\n            tRect.copyFrom(mask.getBounds());\n            // 为什么round\n            tRect.width = Math.round(tRect.width);\n            tRect.height = Math.round(tRect.height);\n            tRect.x = Math.round(tRect.x);\n            tRect.y = Math.round(tRect.y);\n            if (tRect.width > 0 && tRect.height > 0) {\n                var w: number = tRect.width;\n                var h: number = tRect.height;\n                var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\n\n                ctx.breakNextMerge();\n                //先把mask画到tmpTarget上\n                ctx.pushRT();\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));\n                mask.render(ctx, -tRect.x, -tRect.y);\n                ctx.breakNextMerge();\n                ctx.popRT();\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\n                ctx.save();\n\n                /**\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\n                 */\n                let shrink = 0.1;\n                ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\n\n                //画出本节点的内容\n                next._fun.call(next, sprite, ctx, x, y);\n                ctx.restore();\n\n                //设置混合模式\n                preBlendMode = ctx.globalCompositeOperation;\n                ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\n\n                var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n                var uv = Texture.INV_UV;\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\n                //所以增加的限制。王亚伟\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\n\n                ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\n                ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\n\n                //恢复混合模式\n                ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\n            }\n            ctx.restore();\n        } else {\n            next._fun.call(next, sprite, context, x, y);\n        }\n\n    }\n    _maskNative(sprite: Sprite, context: Context, x: number, y: number): void {\n        var next: RenderSprite = this._next;\n        var mask: Sprite = sprite.mask;\n        var submitCMD: SubmitCMD;\n        var ctx: Context = (<Context>context);\n        if (mask) {\n            ctx.save();\n            var preBlendMode: string = ctx.globalCompositeOperation;\n            var tRect: Rectangle = new Rectangle();\n            //裁剪范围是根据mask来定的\n            tRect.copyFrom(mask.getBounds());\n            // 为什么round\n            tRect.width = Math.round(tRect.width);\n            tRect.height = Math.round(tRect.height);\n            tRect.x = Math.round(tRect.x);\n            tRect.y = Math.round(tRect.y);\n            if (tRect.width > 0 && tRect.height > 0) {\n                var w: number = tRect.width;\n                var h: number = tRect.height;\n\n                var tmpRT: any = (ctx as any).drawMask(w, h);\n                /*var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\n\n                ctx.breakNextMerge();\n                //先把mask画到tmpTarget上\n                ctx.pushRT();\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));*/\n                mask.render(ctx, -tRect.x, -tRect.y);\n                let shrink = 0.1;\n                (ctx as any).drawMasked(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\n                //ctx.breakNextMerge();\n                //ctx.popRT();\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\n                //ctx.save();\n\n                /**\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\n                 */\n                //let shrink = 0.1;\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w-shrink*2, h-shrink*2);\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\n\n                //画出本节点的内容\n                next._fun.call(next, sprite, ctx, x, y);\n\n                (ctx as any).drawMaskComposite(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\n                //ctx.restore();\n\n                //设置混合模式\n                //preBlendMode = ctx.globalCompositeOperation;\n                //ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\n\n                //var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n                //var uv = Texture.INV_UV;\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\n                //所以增加的限制。王亚伟\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\n\n                //ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\n                //ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\n\n                //恢复混合模式\n                //ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\n            }\n            ctx.restore();\n        } else {\n            next._fun.call(next, sprite, context, x, y);\n        }\n\n    }\n\n    //static tempUV: any[] = new Array(8);\n    static tmpTarget(ctx: Context, rt: RenderTexture2D, w: number, h: number): void {\n        rt.start();\n        rt.clear(0, 0, 0, 0);\n    }\n\n    static recycleTarget(rt: RenderTexture2D): void {\n        WebGLRTMgr.releaseRT(rt);\n    }\n\n    static setBlendMode(blendMode: string): void {\n        BlendMode.targetFns[BlendMode.TOINT[blendMode]]();\n    }\n}\n\n","import { Point } from \"./Point\";\n\n/**\n * @private\n * 计算贝塞尔曲线的工具类。\n */\nexport class Bezier {\n\n    /**\n     * 工具类单例\n     */\n    static I: Bezier = new Bezier();\n    /** @private */\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\n    /** @private */\n    private _calFun: Function = this.getPoint2;\n\n    /** @private */\n    private _switchPoint(x: number, y: number): void {\n        var tPoint: Point = this._controlPoints.shift();\n        tPoint.setTo(x, y);\n        this._controlPoints.push(tPoint);\n    }\n\n    /**\n     * 计算二次贝塞尔点。\n     */\n    getPoint2(t: number, rst: any[]): void {\n        //二次贝塞尔曲线公式\n        var p1: Point = this._controlPoints[0];\n        var p2: Point = this._controlPoints[1];\n        var p3: Point = this._controlPoints[2];\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\n        rst.push(lineX, lineY);\n    }\n\n    /**\n     * 计算三次贝塞尔点\n     */\n    getPoint3(t: number, rst: any[]): void {\n        //三次贝塞尔曲线公式\n        var p1: Point = this._controlPoints[0];\n        var p2: Point = this._controlPoints[1];\n        var p3: Point = this._controlPoints[2];\n        var p4: Point = this._controlPoints[3];\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\n        rst.push(lineX, lineY);\n    }\n\n    /**\n     * 计算贝塞尔点序列\n     */\n    insertPoints(count: number, rst: any[]): void {\n        var i: number;\n        count = count > 0 ? count : 5;\n        var dLen: number;\n        dLen = 1 / count;\n        for (i = 0; i <= 1; i += dLen) {\n            this._calFun(i, rst);\n        }\n    }\n\n    /**\n     * 获取贝塞尔曲线上的点。\n     * @param pList 控制点[x0,y0,x1,y1...]\n     * @param inSertCount 每次曲线的插值数量\n     */\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\n        var i: number, len: number;\n        len = pList.length;\n        if (len < (count + 1) * 2) return [];\n        var rst: any[] = [];\n        switch (count) {\n            case 2:\n                this._calFun = this.getPoint2;\n                break;\n            case 3:\n                this._calFun = this.getPoint3;\n                break;\n            default:\n                return [];\n        }\n        while (this._controlPoints.length <= count) {\n            this._controlPoints.push(Point.create());\n        }\n        for (i = 0; i < count * 2; i += 2) {\n            this._switchPoint(pList[i], pList[i + 1]);\n        }\n        for (i = count * 2; i < len; i += 2) {\n            this._switchPoint(pList[i], pList[i + 1]);\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\n        }\n        return rst;\n    }\n}\n\n","export enum BlendEquationSeparate{\n    ADD,//source + destination (default value)\n    SUBTRACT,// source - destination\n    REVERSE_SUBTRACT,//destination - source\n    //TODO:\n    MIN,//Minimum of source and destination\n    MAX,//Maximum of source and destination\n}","export enum CullMode {\n    /** Disable culling. */\n    Off = 0,\n    /** cut the front-face of the polygons. */\n    Front = 1,\n    /** cut the back-face of the polygons. */\n    Back = 2\n  }\n  ","import { ColorUtils } from \"../../utils/ColorUtils\"\n\nexport class DrawStyle {\n    static DEFAULT: DrawStyle = new DrawStyle(\"#000000\")\n\n    _color: ColorUtils;\n\n    static create(value: any): DrawStyle {\n        if (value) {\n            var color: ColorUtils = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\n        }\n        return DrawStyle.DEFAULT;\n    }\n\n    constructor(value: any) {\n        this.setValue(value);\n    }\n\n    setValue(value: any): void {\n        if (value) {\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\n        }\n        else this._color = ColorUtils.create(\"#000000\");\n    }\n\n    reset(): void {\n        this._color = ColorUtils.create(\"#000000\");\n    }\n\n    toInt(): number {\n        return this._color.numColor;\n    }\n\n    equal(value: any): boolean {\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\n        return false;\n    }\n\n    toColorStr(): string {\n        return this._color.strColor;\n    }\n}\n\n\n","\nexport class Path {\n\n    //public var _rect:Rectangle;\n    /**@internal */\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\n    /**@internal */\n    _lastOriY: number = 0;\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\n    private _curPath: renderPath = null;\n\n\n    constructor() {\n    }\n\n    beginPath(convex: boolean): void {\n        this.paths.length = 1;\n        this._curPath = this.paths[0] = new renderPath();\n        this._curPath.convex = convex;\n        //_curPath.path = [];\n    }\n\n    closePath(): void {\n        this._curPath.loop = true;\n    }\n\n    newPath(): void {\n        this._curPath = new renderPath();\n        this.paths.push(this._curPath);\n    }\n\n    addPoint(pointX: number, pointY: number): void {\n        //tempArray.push(pointX, pointY);\n        this._curPath.path.push(pointX, pointY);\n    }\n\n    //直接添加一个完整的path\n    push(points: any[], convex: boolean): void {\n        if (!this._curPath) {\n            this._curPath = new renderPath();\n            this.paths.push(this._curPath);\n        } else if (this._curPath.path.length > 0) {\n            this._curPath = new renderPath();\n            this.paths.push(this._curPath);\n        }\n        var rp: renderPath = this._curPath;\n        rp.path = points.slice();//TODO 这个可能多次slice了\n        rp.convex = convex;\n    }\n\n    reset(): void {\n        this.paths.length = 0;//TODO 复用\n    }\n}\n\n\n\nclass renderPath {\n    path: any[] = []; //[x,y,x,y,....]的数组\n    loop: boolean = false;\n    convex: boolean = false;\n}\n","import { ISaveData } from \"./ISaveData\";\nimport { Context } from \"../../../resource/Context\"\nimport { SubmitBase } from \"../../submit/SubmitBase\"\n\nexport class SaveBase implements ISaveData {\n\n    /*[FILEINDEX:1]*/\n    /*[DISBALEOUTCONST-BEGIN]*/\n    static TYPE_ALPHA: number = 0x1;\n    static TYPE_FILESTYLE: number = 0x2;\n    static TYPE_FONT: number = 0x8;\n    static TYPE_LINEWIDTH: number = 0x100;\n    static TYPE_STROKESTYLE: number = 0x200;\n    static TYPE_MARK: number = 0x400;\n    static TYPE_TRANSFORM: number = 0x800;\n    static TYPE_TRANSLATE: number = 0x1000;\n    static TYPE_ENABLEMERGE: number = 0x2000;\n\n    static TYPE_TEXTBASELINE: number = 0x4000;\n    static TYPE_TEXTALIGN: number = 0x8000;\n    static TYPE_GLOBALCOMPOSITEOPERATION: number = 0x10000;\n    static TYPE_CLIPRECT: number = 0x20000;\n    static TYPE_CLIPRECT_STENCIL: number = 0x40000;\n    static TYPE_IBVB: number = 0x80000;\n    static TYPE_SHADER: number = 0x100000;\n    static TYPE_FILTERS: number = 0x200000;\n    static TYPE_FILTERS_TYPE: number = 0x400000;\n    static TYPE_COLORFILTER: number = 0x800000;\n    /*[DISBALEOUTCONST-END]*/\n    private static POOL: any = SaveBase._createArray();\n    private static _namemap: any = SaveBase._init();\n    /**@internal */\n    static _createArray(): any[] {\n        var value: any = [];\n        value._length = 0;\n        return value;\n    }\n    /**@internal */\n    static _init(): any {\n        var namemap: any = SaveBase._namemap = {};\n\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\n        namemap[SaveBase.TYPE_FONT] = \"font\";\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\n\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\n\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\n\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\n        return namemap;\n    }\n\n    private _valueName: string;\n    private _value: any;\n    private _dataObj: any;\n    private _newSubmit: boolean;\n\n    constructor() {\n    }\n\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        this._dataObj[this._valueName] = this._value;\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\n        this._newSubmit && (context._curSubmit = SubmitBase.RENDERBASE);\n    }\n\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\n        if ((context._saveMark._saveuse & type) !== type) {\n            context._saveMark._saveuse |= type;\n            var cache: any = SaveBase.POOL;\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\n            o._dataObj = dataObj;\n            o._newSubmit = newSubmit;\n            var _save: any = context._save;\n            _save[_save._length++] = o;\n        }\n    }\n}\n\n\n","import { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\nimport { Matrix } from \"../../../maths/Matrix\"\nimport { Rectangle } from \"../../../maths/Rectangle\"\nimport { Context } from \"../../../resource/Context\"\n\nexport class SaveClipRect implements ISaveData {\n\n    private static POOL: any = SaveBase._createArray();\n\n    _globalClipMatrix: Matrix = new Matrix();\n    _clipInfoID: number = -1;\n    _clipRect: Rectangle = new Rectangle();\n    incache: boolean = false;\n\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\n        this._clipRect.clone(context._clipRect);\n        context._clipInfoID = this._clipInfoID;\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\n        context._clipInCache = this.incache;\n    }\n\n    static save(context: Context): void {\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\n        var cache: any = SaveClipRect.POOL;\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\n        context._clipRect.clone(o._clipRect);\n        o._clipInfoID = context._clipInfoID;\n        o.incache = context._clipInCache;\n        var _save: any = context._save;\n        _save[_save._length++] = o;\n    }\n}\n\n","import { Context } from \"../../../resource/Context\";\nimport { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\n\nexport class SaveMark implements ISaveData {\n\n    private static POOL: any = SaveBase._createArray();\n    /**@internal */\n    _saveuse: number = 0;\n    /**@internal */\n    _preSaveMark: SaveMark;\n\n    constructor() {\n    }\n\n    isSaveMark(): boolean {\n        return true;\n    }\n\n    restore(context: Context): void {\n        context._saveMark = this._preSaveMark;\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\n    }\n\n    static Create(context: Context): SaveMark {\n        var no: any = SaveMark.POOL;\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\n        o._saveuse = 0;\n        o._preSaveMark = context._saveMark;\n        context._saveMark = o;\n        return o;\n    }\n}\n\n","import { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\nimport { Matrix } from \"../../../maths/Matrix\"\nimport { Context } from \"../../../resource/Context\"\n\nexport class SaveTransform implements ISaveData {\n\n\n    private static POOL: any = SaveBase._createArray();\n    /**@internal */\n    _savematrix: Matrix;\n    /**@internal */\n    _matrix: Matrix = new Matrix();\n\n    constructor() {\n    }\n\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        context._curMat = this._savematrix;\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\n    }\n\n    static save(context: Context): void {\n        var _saveMark: any = context._saveMark;\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\n        var no: any = SaveTransform.POOL;\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\n        o._savematrix = context._curMat;\n        context._curMat = context._curMat.copyTo(o._matrix);\n        var _save: any = context._save;\n        _save[_save._length++] = o;\n    }\n}\n\n","import { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\nimport { Matrix } from \"../../../maths/Matrix\"\nimport { Context } from \"../../../resource/Context\"\n\nexport class SaveTranslate implements ISaveData {\n\n\n    private static POOL: any = SaveBase._createArray();\n    /**@internal */\n    _mat: Matrix = new Matrix();\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        this._mat.copyTo(context._curMat);\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\n    }\n\n    static save(context: Context): void {\n        var no: any = SaveTranslate.POOL;\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\n        context._curMat.copyTo(o._mat);\n        var _save: any = context._save;\n        _save[_save._length++] = o;\n    }\n\n}\n\n\n","/*\n\ttexture和fillrect使用的。\n*/\nattribute vec4 posuv;\nattribute vec4 attribColor;\nattribute vec4 attribFlags;\n//attribute vec4 clipDir;\n//attribute vec2 clipRect;\nuniform vec4 clipMatDir;\nuniform vec2 clipMatPos;\t\t// 这个是全局的，不用再应用矩阵了。\nvarying vec2 cliped;\nuniform vec2 size;\nuniform vec2 clipOff;\t\t\t// 使用要把clip偏移。cacheas normal用. 只用了[0]\n#ifdef WORLDMAT\n\tuniform mat4 mmat;\n#endif\n#ifdef MVP3D\n\tuniform mat4 u_MvpMatrix;\n#endif\nvarying vec4 v_texcoordAlpha;\nvarying vec4 v_color;\nvarying float v_useTex;\n\nvoid main() {\n\n\tvec4 pos = vec4(posuv.xy,0.,1.);\n#ifdef WORLDMAT\n\tpos=mmat*pos;\n#endif\n\tvec4 pos1  =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,0.,1.0);\n#ifdef MVP3D\n\tgl_Position=u_MvpMatrix*pos1;\n#else\n\tgl_Position=pos1;\n#endif\n\tv_texcoordAlpha.xy = posuv.zw;\n\t//v_texcoordAlpha.z = attribColor.a/255.0;\n\tv_color = attribColor/255.0;\n\tv_color.xyz*=v_color.w;//反正后面也要预乘\n\t\n\tv_useTex = attribFlags.r/255.0;\n\tfloat clipw = length(clipMatDir.xy);\n\tfloat cliph = length(clipMatDir.zw);\n\t\n\tvec2 clpos = clipMatPos.xy;\n\t#ifdef WORLDMAT\n\t\t// 如果有mmat，需要修改clipMatPos,因为 这是cacheas normal （如果不是就错了）， clipMatPos被去掉了偏移\n\t\tif(clipOff[0]>0.0){\n\t\t\tclpos.x+=mmat[3].x;\t//tx\t最简单处理\n\t\t\tclpos.y+=mmat[3].y;\t//ty\n\t\t}\n\t#endif\n\tvec2 clippos = pos.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\n\tif(clipw>20000. && cliph>20000.)\n\t\tcliped = vec2(0.5,0.5);\n\telse {\n\t\t//转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\n\t\tcliped=vec2( dot(clippos,clipMatDir.xy)/clipw/clipw, dot(clippos,clipMatDir.zw)/cliph/cliph);\n\t}\n\n\t#ifdef INVERTY\n\t\tgl_Position.y = -gl_Position.y;\n\t#endif\n\n}","/*\n\ttexture和fillrect使用的。\n*/\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvec3 linearToGamma(in vec3 value)\n{\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\n\n    // return pow(value, vec3(1.0 / 2.2));\n    // return pow(value, vec3(0.455));\n}\n\nvec4 linearToGamma(in vec4 value)\n{\n    return vec4(linearToGamma(value.rgb), value.a);\n}\n\n\nvarying vec4 v_texcoordAlpha;\nvarying vec4 v_color;\nvarying float v_useTex;\nuniform sampler2D texture;\nvarying vec2 cliped;\n\nvec4 sampleTexture(sampler2D texture, vec2 uv)\n{\n    vec4 color = texture2D(texture, uv);\n#ifdef GAMMASPACE\n    color.xyz = linearToGamma(color.xyz);\n#endif\n    return color;\n}\n\n#ifdef BLUR_FILTER\nuniform vec4 strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\nuniform vec2 blurInfo;\n\n    #define PI 3.141593\n\nfloat getGaussian(float x, float y)\n{\n    return strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur()\n{\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\n    vec2 halfsz = vec2(blurw, blurw) / 2.0 / blurInfo;\n    vec2 startpos = v_texcoordAlpha.xy - halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0 / blurInfo; //每个像素\n\n    for (float y = 0.0; y <= blurw; ++y)\n\t{\n\t    ctexcoord.x = startpos.x;\n\t    for (float x = 0.0; x <= blurw; ++x)\n\t\t{\n\t\t    // TODO 纹理坐标的固定偏移应该在vs中处理\n\t\t    vec4Color += sampleTexture(texture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0);\n\t\t    ctexcoord.x += step.x;\n\t\t}\n\t    ctexcoord.y += step.y;\n\t}\n    // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\n    return vec4Color;\n}\n#endif\n\n#ifdef COLOR_FILTER\nuniform vec4 colorAlpha;\nuniform mat4 colorMat;\n#endif\n\n#ifdef GLOW_FILTER\nuniform vec4 u_color;\nuniform vec4 u_blurInfo1;\nuniform vec4 u_blurInfo2;\n#endif\n\n#ifdef COLOR_ADD\nuniform vec4 colorAdd;\n#endif\n\n#ifdef FILLTEXTURE\nuniform vec4 u_TexRange; // startu,startv,urange, vrange\n#endif\n\nvoid main()\n{\n    if (cliped.x < 0.)\n\tdiscard;\n    if (cliped.x > 1.)\n\tdiscard;\n    if (cliped.y < 0.)\n\tdiscard;\n    if (cliped.y > 1.)\n\tdiscard;\n\n#ifdef FILLTEXTURE\n    vec4 color = sampleTexture(texture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\n#else\n    vec4 color = sampleTexture(texture, v_texcoordAlpha.xy);\n#endif\n\n    if (v_useTex <= 0.)\n\tcolor = vec4(1., 1., 1., 1.);\n    color.a *= v_color.w;\n    // color.rgb*=v_color.w;\n    color.rgb *= v_color.rgb;\n    gl_FragColor = color;\n\n#ifdef COLOR_ADD\n    gl_FragColor = vec4(colorAdd.rgb, colorAdd.a * gl_FragColor.a);\n    gl_FragColor.xyz *= colorAdd.a;\n#endif\n\n#ifdef BLUR_FILTER\n    gl_FragColor = blur();\n    gl_FragColor.w *= v_color.w;\n#endif\n\n#ifdef COLOR_FILTER\n    mat4 alphaMat = colorMat;\n\n    alphaMat[0][3] *= gl_FragColor.a;\n    alphaMat[1][3] *= gl_FragColor.a;\n    alphaMat[2][3] *= gl_FragColor.a;\n\n    gl_FragColor = gl_FragColor * alphaMat;\n    gl_FragColor += colorAlpha / 255.0 * gl_FragColor.a;\n#endif\n\n#ifdef GLOW_FILTER\n    const float c_IterationTime = 10.0;\n    float floatIterationTotalTime = c_IterationTime * c_IterationTime;\n    vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\n    vec2 vec2FilterDir = vec2(-(u_blurInfo1.z) / u_blurInfo2.x, -(u_blurInfo1.w) / u_blurInfo2.y);\n    vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\n    float maxNum = u_blurInfo1.x * u_blurInfo1.y;\n    vec2 vec2Off = vec2(0.0, 0.0);\n    float floatOff = c_IterationTime / 2.0;\n    for (float i = 0.0; i <= c_IterationTime; ++i)\n\t{\n\t    for (float j = 0.0; j <= c_IterationTime; ++j)\n\t\t{\n\t\t    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\n\t\t    vec4Color += sampleTexture(texture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off) / floatIterationTotalTime;\n\t\t}\n\t}\n    gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}","attribute vec4 position;\nattribute vec4 attribColor;\n//attribute vec4 clipDir;\n//attribute vec2 clipRect;\nuniform vec4 clipMatDir;\nuniform vec2 clipMatPos;\n#ifdef WORLDMAT\n\tuniform mat4 mmat;\n#endif\nuniform mat4 u_mmat2;\n//uniform vec2 u_pos;\nuniform vec2 size;\nvarying vec4 color;\n//vec4 dirxy=vec4(0.9,0.1, -0.1,0.9);\n//vec4 clip=vec4(100.,30.,300.,600.);\nvarying vec2 cliped;\nvoid main(){\n\t\n#ifdef WORLDMAT\n\tvec4 pos=mmat*vec4(position.xy,0.,1.);\n\tgl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n#else\n\tgl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n#endif\t\n\tfloat clipw = length(clipMatDir.xy);\n\tfloat cliph = length(clipMatDir.zw);\n\tvec2 clippos = position.xy - clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\n\tif(clipw>20000. && cliph>20000.)\n\t\tcliped = vec2(0.5,0.5);\n\telse {\n\t\t//clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\n\t\tcliped=vec2( dot(clippos,clipMatDir.xy)/clipw/clipw, dot(clippos,clipMatDir.zw)/cliph/cliph);\n\t}\n  //pos2d.x = dot(clippos,dirx);\n  color=attribColor/255.;\n}","precision mediump float;\n//precision mediump float;\nvarying vec4 color;\n//uniform float alpha;\nvarying vec2 cliped;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor= color;// vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=color.a;\n\tif(cliped.x<0.) discard;\n\tif(cliped.x>1.) discard;\n\tif(cliped.y<0.) discard;\n\tif(cliped.y>1.) discard;\n}","attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}","precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\n\nvec4 sampleTexture(sampler2D texture,vec2 uv){\n   vec4 color = texture2D(texture,uv);\n   #ifdef GAMMASPACE\n      color.xyz = color.xyz*color.xyz;\n   #endif\n   return color;\n}\n\nvoid main() {\n\tvec4 t_color = sampleTexture(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}","import { ShaderDefines2D } from \"./ShaderDefines2D\";\nimport { DrawStyle } from \"../../canvas/DrawStyle\"\nimport { Shader } from \"../Shader\"\n\nimport texture_vs from './files/texture.vs.glsl';\nimport texture_ps from './files/texture.ps.glsl';\nimport prime_vs from './files/primitive.vs.glsl';\nimport prime_ps from './files/primitive.ps.glsl';\nimport skin_vs from './skinAnishader/skinShader.vs.glsl';\nimport skin_ps from './skinAnishader/skinShader.ps.glsl';\n\nexport class Shader2D {\n    ALPHA: number = 1;\n    shader: Shader;\n    filters: any[];\n    defines = new ShaderDefines2D();\n    shaderType: number = 0;\n    colorAdd: any[];\n    fillStyle = DrawStyle.DEFAULT;\n    strokeStyle  = DrawStyle.DEFAULT;\n    destroy(): void {\n\t\t//@ts-ignore\n\t\tthis.defines = null;\n\t\t//@ts-ignore\n        this.filters = null;\n    }\n\n    static __init__(): void {\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n            (window as any).preCompile2D(ShaderDefines2D.TEXTURE2D, texture_vs, texture_ps);\n            (window as any).preCompile2D(ShaderDefines2D.PRIMITIVE, prime_vs, prime_ps);\n            (window as any).preCompile2D(ShaderDefines2D.SKINMESH, skin_vs, skin_ps);\n        }\n        else {\n            Shader.preCompile2D(0, ShaderDefines2D.TEXTURE2D, texture_vs, texture_ps, null);\n            Shader.preCompile2D(0, ShaderDefines2D.PRIMITIVE, prime_vs, prime_ps, null);\n            Shader.preCompile2D(0, ShaderDefines2D.SKINMESH, skin_vs, skin_ps, null);\n        }\n    }\n}\n\n","import { IndexBuffer2D } from \"../../../utils/IndexBuffer2D\"\nimport { VertexBuffer2D } from \"../../../utils/VertexBuffer2D\"\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\n\nexport class SkinMeshBuffer {\n\n    ib: IndexBuffer2D;\n    vb: VertexBuffer2D;\n\n    static instance: SkinMeshBuffer;\n\n    //TODO:coverage\n    constructor() {\n        this.ib = IndexBuffer2D.create(BufferUsage.Dynamic);\n        this.vb = VertexBuffer2D.create(8);\n    }\n\n    //TODO:coverage\n    static getInstance(): SkinMeshBuffer {\n        return SkinMeshBuffer.instance = SkinMeshBuffer.instance || new SkinMeshBuffer();\n    }\n\n    //TODO:coverage\n    addSkinMesh(skinMesh: any): void {\n        //skinMesh.getData(vb, ib, vb.byteLength / 32);\n        skinMesh.getData2(this.vb, this.ib, this.vb._byteLength / 32);\n    }\n\n\n    reset(): void {\n        this.vb.buffer2D.clear();\n        this.ib.buffer2D.clear();\n    }\n\n}\n\n\n","export class BasePoly {\n\n    private static tempData: any[] = new Array(256);\n\n\t/**\n\t * 构造线的三角形数据。根据一个位置数组生成vb和ib\n\t * @param\tp\n\t * @param\tindices\n\t * @param\tlineWidth\n\t * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\n\t * @param\toutVertex\n\t * @return\n\t */\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\n\n        if (p.length < 4) return null;\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\n        points[0] = p[0]; points[1] = p[1];\n\t\t/*\n\t\tvar points:Array = p.concat();\n\t\tif (loop) {\n\t\t\tpoints.push(points[0], points[1]);\n\t\t}\n\t\t*/\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\n        var i: number = 0;\n        var length: number = p.length;\n        //先过滤一下太相近的点\n        for (i = 2; i < length; i += 2) {\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\n            }\n        }\n        //如果终点和起点没有重合，且要求loop的情况的处理\n        if (loop && Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]) > 0.01) {\n            points[newlen++] = p[0]; points[newlen++] = p[1];\n        }\n\n        var result: any[] = outVertex;\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\n        var w: number = lineWidth / 2;\n\n        var px: number, py: number, p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\n        var perpx: number, perpy: number, perp2x: number, perp2y: number, perp3x: number, perp3y: number;\n        var a1: number, b1: number, c1: number, a2: number, b2: number, c2: number;\n        var denom: number, pdist: number, dist: number;\n\n        p1x = points[0];\n        p1y = points[1];\n        p2x = points[2];\n        p2y = points[3];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\n        perpx = perpx / dist * w;\n        perpy = perpy / dist * w;\n\n        result.push(p1x - perpx, p1y - perpy, p1x + perpx, p1y + perpy);\n        for (i = 1; i < length - 1; i++) {\n            p1x = points[(i - 1) * 2];\n            p1y = points[(i - 1) * 2 + 1];\n            p2x = points[(i) * 2];\n            p2y = points[(i) * 2 + 1];\n            p3x = points[(i + 1) * 2];\n            p3y = points[(i + 1) * 2 + 1];\n\n            perpx = -(p1y - p2y);\n            perpy = p1x - p2x;\n            dist = Math.sqrt(perpx * perpx + perpy * perpy);\n            perpx = perpx / dist * w;\n            perpy = perpy / dist * w;\n\n            perp2x = -(p2y - p3y);\n            perp2y = p2x - p3x;\n            dist = Math.sqrt(perp2x * perp2x + perp2y * perp2y);\n            perp2x = perp2x / dist * w;\n            perp2y = perp2y / dist * w;\n\n            a1 = (-perpy + p1y) - (-perpy + p2y);\n            b1 = (-perpx + p2x) - (-perpx + p1x);\n            c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\n            a2 = (-perp2y + p3y) - (-perp2y + p2y);\n            b2 = (-perp2x + p2x) - (-perp2x + p3x);\n            c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\n            denom = a1 * b2 - a2 * b1;\n            if (Math.abs(denom) < 0.1) {\n                denom += 10.1;\n                result.push(p2x - perpx, p2y - perpy, p2x + perpx, p2y + perpy);\n                continue;\n            }\n            px = (b1 * c2 - b2 * c1) / denom;\n            py = (a2 * c1 - a1 * c2) / denom;\n            pdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);\n            result.push(px, py, p2x - (px - p2x), p2y - (py - p2y));\n        }\n\n        p1x = points[newlen - 4];\n        p1y = points[newlen - 3];\n        p2x = points[newlen - 2];\n        p2y = points[newlen - 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\n        perpx = perpx / dist * w;\n        perpy = perpy / dist * w;\n\n        result.push(p2x - perpx, p2y - perpy, p2x + perpx, p2y + perpy);\n        for (i = 1; i < length; i++) {\n            indices.push(indexBase + (i - 1) * 2, indexBase + (i - 1) * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2, indexBase + (i - 1) * 2);\n        }\n\n        return result;\n    }\n\n\t/**\n\t * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\n\t * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\n\t * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\n\t * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\n\t * 注意把重合的点去掉\n\t * @param\tpath\n\t * @param\tcolor\n\t * @param\twidth\n\t * @param\tloop\n\t * @param\toutvb\n\t * @param\tvbstride  顶点占用几个float,(bytelength/4)\n\t * @param\toutib\n\t * test:\n\t * 横线\n\t * [100,100, 400,100]\n\t * 竖线\n\t * [100,100, 100,400]\n\t * 直角\n\t * [100,100, 400,100, 400,400]\n\t * 重合点\n\t * [100,100,100,100,400,100]\n\t * 同一直线上的点\n\t * [100,100,100,200,100,3000]\n\t * 像老式电视的左边不封闭的图形\n\t * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\n\t * \n\t */\n    //TODO:coverage\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\n\n        var points: any[] = path.slice();\n        var ptlen: number = points.length;\n        var p1x: number = points[0], p1y: number = points[1];\n        var p2x: number = points[2], p2y: number = points[2];\n        var len: number = 0;\n        var rp: number = 0;\n        var dx: number = 0, dy: number = 0;\n\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\n        //x,y,len,dx,dy,tx,ty,dot\n        //数组中每个都表示当前点开始的长度，方向\n        //x,y,dx,dy\n\n        var pointnum: number = ptlen / 2;\n        if (pointnum <= 1) return;\n        if (pointnum == 2) {\n            //TODO\n            return;\n        }\n\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\n        //var segNum:int = pointnum + (loop?1:0);\n        var ci: number = 0;\n        for (var i: number = 0; i < pointnum - 1; i++) {\n            p1x = points[ci++], p1y = points[ci++];\n            p2x = points[ci++], p2y = points[ci++];\n            dx = p2x - p1x, dy = p2y - p1y;\n            if (dx != 0 && dy != 0) {\n                len = Math.sqrt(dx * dx + dy * dy);\n                if (len > 1e-3) {\n                    rp = realPtNum * 4;\n                    tmpData[rp] = p1x;\n                    tmpData[rp + 1] = p1y;\n                    tmpData[rp + 2] = dx / len;\n                    tmpData[rp + 3] = dy / len;\n                    realPtNum++;\n                }\n            }\n        }\n        if (loop) {//loop的话，需要取第一个点来算\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\n            p2x = points[0], p2y = points[1];\n            dx = p2x - p1x, dy = p2y - p1y;\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\n                len = Math.sqrt(dx * dx + dy * dy);\n                if (len > 1e-3) {\n                    rp = realPtNum * 4;\n                    tmpData[rp] = p1x;\n                    tmpData[rp + 1] = p1y;\n                    tmpData[rp + 2] = dx / len;\n                    tmpData[rp + 3] = dy / len;\n                    realPtNum++;\n                }\n            }\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\n            rp = realPtNum * 4;\n            tmpData[rp] = p1x;\n            tmpData[rp + 1] = p1y;\n            tmpData[rp + 2] = dx / len;\n            tmpData[rp + 3] = dy / len;\n            realPtNum++;\n        }\n        ci = 0;\n\n\t\t/**\n\t\t * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\n\t\t */\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\n\n        for (i = 0; i < pointnum; i++) {\n            p1x = points[ci], p1y = points[ci + 1];\n            p2x = points[ci + 2], p2y = points[ci + 3];\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\n\n        }\n        if (loop) {\n\n        }\n\n    }\n}\n\n","export class EarcutNode {\n    i: any;\n    x: any;\n    y: any;\n    prev: any;\n    next: any;\n    z: any;\n    prevZ: any;\n    nextZ: any;\n    steiner: any;\n    constructor(i: any, x: any, y: any) {\n        // vertice index in coordinates array\n        this.i = i;\n\n        // vertex coordinates\n        this.x = x;\n        this.y = y;\n\n        // previous and next vertice nodes in a polygon ring\n        this.prev = null;\n        this.next = null;\n\n        // z-order curve value\n        this.z = null;\n\n        // previous and next nodes in z-order\n        this.prevZ = null;\n        this.nextZ = null;\n\n        // indicates whether this is a steiner point\n        this.steiner = false;\n    }\n}\n\n\n\n","import { EarcutNode } from \"./EarcutNode\";\nexport class Earcut {\n    static earcut(data: any, holeIndices: any, dim: any): any {\n\n        dim = dim || 2;\n\n        var hasHoles: any = holeIndices && holeIndices.length,\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\n            triangles: any = [];\n\n        if (!outerNode) return triangles;\n\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\n\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\n\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n        if (data.length > 80 * dim) {\n            minX = maxX = data[0];\n            minY = maxY = data[1];\n\n            for (var i: any = dim; i < outerLen; i += dim) {\n                x = data[i];\n                y = data[i + 1];\n                if (x < minX) minX = x;\n                if (y < minY) minY = y;\n                if (x > maxX) maxX = x;\n                if (y > maxY) maxY = y;\n            }\n\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n            invSize = Math.max(maxX - minX, maxY - minY);\n            invSize = invSize !== 0 ? 1 / invSize : 0;\n        }\n\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n        return triangles;\n    }\n\n    // create a circular doubly linked list from polygon points in the specified winding order\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\n        var i: any, last: any;\n\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\n        } else {\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\n        }\n\n        if (last && Earcut.equals(last, last.next)) {\n            Earcut.removeNode(last);\n            last = last.next;\n        }\n\n        return last;\n    }\n\n    // eliminate colinear or duplicate points\n    static filterPoints(start: any, end: any): any {\n        if (!start) return start;\n        if (!end) end = start;\n\n        var p: any = start,\n            again: any;\n        do {\n            again = false;\n\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\n                Earcut.removeNode(p);\n                p = end = p.prev;\n                if (p === p.next) break;\n                again = true;\n\n            } else {\n                p = p.next;\n            }\n        } while (again || p !== end);\n\n        return end;\n    }\n\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\n        if (!ear) return;\n\n        // interlink polygon nodes in z-order\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\n\n        var stop: any = ear,\n            prev: any, next: any;\n\n        // iterate through ears, slicing them one by one\n        while (ear.prev !== ear.next) {\n            prev = ear.prev;\n            next = ear.next;\n\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\n                // cut off the triangle\n                triangles.push(prev.i / dim);\n                triangles.push(ear.i / dim);\n                triangles.push(next.i / dim);\n\n                Earcut.removeNode(ear);\n\n                // skipping the next vertice leads to less sliver triangles\n                ear = next.next;\n                stop = next.next;\n\n                continue;\n            }\n\n            ear = next;\n\n            // if we looped through the whole remaining polygon and can't find any more ears\n            if (ear === stop) {\n                // try filtering points and slicing again\n                if (!pass) {\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\n\n                    // if this didn't work, try curing all small self-intersections locally\n                } else if (pass === 1) {\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n                    // as a last resort, try splitting the remaining polygon into two\n                } else if (pass === 2) {\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\n                }\n\n                break;\n            }\n        }\n    }\n\n    // check whether a polygon node forms a valid ear with adjacent nodes\n    static isEar(ear: any): any {\n        var a: any = ear.prev,\n            b: any = ear,\n            c: any = ear.next;\n\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n        // now make sure we don't have other points inside the potential ear\n        var p: any = ear.next.next;\n\n        while (p !== ear.prev) {\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\n            p = p.next;\n        }\n\n        return true;\n    }\n\n    //TODO:coverage\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\n        var a: any = ear.prev,\n            b: any = ear,\n            c: any = ear.next;\n\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n        // triangle bbox; min & max are calculated like this for speed\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n        // z-order range for the current triangle bbox;\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\n\n        // first look for points inside the triangle in increasing z-order\n        var p: any = ear.nextZ;\n\n        while (p && p.z <= maxZ) {\n            if (p !== ear.prev && p !== ear.next &&\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\n            p = p.nextZ;\n        }\n\n        // then look for points in decreasing z-order\n        p = ear.prevZ;\n\n        while (p && p.z >= minZ) {\n            if (p !== ear.prev && p !== ear.next &&\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\n            p = p.prevZ;\n        }\n\n        return true;\n    }\n\n    // go through all polygon nodes and cure small local self-intersections\n    //TODO:coverage\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\n        var p: any = start;\n        do {\n            var a: any = p.prev,\n                b: any = p.next.next;\n\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\n\n                triangles.push(a.i / dim);\n                triangles.push(p.i / dim);\n                triangles.push(b.i / dim);\n\n                // remove two nodes involved\n                Earcut.removeNode(p);\n                Earcut.removeNode(p.next);\n\n                p = start = b;\n            }\n            p = p.next;\n        } while (p !== start);\n\n        return p;\n    }\n\n    // try splitting polygon into two and triangulate them independently\n    //TODO:coverage\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\n        // look for a valid diagonal that divides the polygon into two\n        var a: any = start;\n        do {\n            var b: any = a.next.next;\n            while (b !== a.prev) {\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\n                    // split the polygon in two by the diagonal\n                    var c: any = Earcut.splitPolygon(a, b);\n\n                    // filter colinear points around the cuts\n                    a = Earcut.filterPoints(a, a.next);\n                    c = Earcut.filterPoints(c, c.next);\n\n                    // run earcut on each half\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\n                    return;\n                }\n                b = b.next;\n            }\n            a = a.next;\n        } while (a !== start);\n    }\n\n    // link every hole into the outer loop, producing a single-ring polygon without holes\n    //TODO:coverage\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\n        var queue: any = [],\n            i: any, len: any, start: any, end: any, list: any;\n\n        for (i = 0, len = holeIndices.length; i < len; i++) {\n            start = holeIndices[i] * dim;\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            list = Earcut.linkedList(data, start, end, dim, false);\n            if (list === list.next) list.steiner = true;\n            queue.push(Earcut.getLeftmost(list));\n        }\n\n        queue.sort(Earcut.compareX);\n\n        // process holes from left to right\n        for (i = 0; i < queue.length; i++) {\n            Earcut.eliminateHole(queue[i], outerNode);\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\n        }\n\n        return outerNode;\n    }\n\n    //TODO:coverage\n    static compareX(a: any, b: any): any {\n        return a.x - b.x;\n    }\n\n    // find a bridge between vertices that connects hole with an outer ring and and link it\n    //TODO:coverage\n    static eliminateHole(hole: any, outerNode: any): void {\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\n        if (outerNode) {\n            var b: any = Earcut.splitPolygon(outerNode, hole);\n            Earcut.filterPoints(b, b.next);\n        }\n    }\n\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\n    //TODO:coverage\n    static findHoleBridge(hole: any, outerNode: any): any {\n        var p: any = outerNode,\n            hx: any = hole.x,\n            hy: any = hole.y,\n            qx: any = -Infinity,\n            m: any;\n\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\n        // segment's endpoint with lesser x will be potential connection point\n        do {\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n                if (x <= hx && x > qx) {\n                    qx = x;\n                    if (x === hx) {\n                        if (hy === p.y) return p;\n                        if (hy === p.next.y) return p.next;\n                    }\n                    m = p.x < p.next.x ? p : p.next;\n                }\n            }\n            p = p.next;\n        } while (p !== outerNode);\n\n        if (!m) return null;\n\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\n        // if there are no points found, we have a valid connection;\n        // otherwise choose the point of the minimum angle with the ray as connection point\n\n        var stop: any = m,\n            mx: any = m.x,\n            my: any = m.y,\n            tanMin: any = Infinity,\n            tan: any;\n\n        p = m.next;\n\n        while (p !== stop) {\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\n                    m = p;\n                    tanMin = tan;\n                }\n            }\n\n            p = p.next;\n        }\n\n        return m;\n    }\n\n    // interlink polygon nodes in z-order\n    //TODO:coverage\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\n        var p: any = start;\n        do {\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\n            p.prevZ = p.prev;\n            p.nextZ = p.next;\n            p = p.next;\n        } while (p !== start);\n\n        p.prevZ.nextZ = null;\n        p.prevZ = null;\n\n        Earcut.sortLinked(p);\n    }\n\n    // Simon Tatham's linked list merge sort algorithm\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n    //TODO:coverage\n    static sortLinked(list: any): any {\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\n            inSize: any = 1;\n\n        do {\n            p = list;\n            list = null;\n            tail = null;\n            numMerges = 0;\n\n            while (p) {\n                numMerges++;\n                q = p;\n                pSize = 0;\n                for (i = 0; i < inSize; i++) {\n                    pSize++;\n                    q = q.nextZ;\n                    if (!q) break;\n                }\n                qSize = inSize;\n\n                while (pSize > 0 || (qSize > 0 && q)) {\n\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                        e = p;\n                        p = p.nextZ;\n                        pSize--;\n                    } else {\n                        e = q;\n                        q = q.nextZ;\n                        qSize--;\n                    }\n\n                    if (tail) tail.nextZ = e;\n                    else list = e;\n\n                    e.prevZ = tail;\n                    tail = e;\n                }\n\n                p = q;\n            }\n\n            tail.nextZ = null;\n            inSize *= 2;\n\n        } while (numMerges > 1);\n\n        return list;\n    }\n\n    // z-order of a point given coords and inverse of the longer side of data bbox\n    //TODO:coverage\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\n        // coords are transformed into non-negative 15-bit integer range\n        x = 32767 * (x - minX) * invSize;\n        y = 32767 * (y - minY) * invSize;\n\n        x = (x | (x << 8)) & 0x00FF00FF;\n        x = (x | (x << 4)) & 0x0F0F0F0F;\n        x = (x | (x << 2)) & 0x33333333;\n        x = (x | (x << 1)) & 0x55555555;\n\n        y = (y | (y << 8)) & 0x00FF00FF;\n        y = (y | (y << 4)) & 0x0F0F0F0F;\n        y = (y | (y << 2)) & 0x33333333;\n        y = (y | (y << 1)) & 0x55555555;\n\n        return x | (y << 1);\n    }\n\n    // find the leftmost node of a polygon ring\n    //TODO:coverage\n    static getLeftmost(start: any): any {\n        var p: any = start,\n            leftmost: any = start;\n        do {\n            if (p.x < leftmost.x) leftmost = p;\n            p = p.next;\n        } while (p !== start);\n\n        return leftmost;\n    }\n\n    // check if a point lies within a convex triangle\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n    }\n\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n    //TODO:coverage\n    static isValidDiagonal(a: any, b: any): boolean {\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\n    }\n\n    // signed area of a triangle\n    static area(p: any, q: any, r: any): any {\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n    }\n\n    // check if two points are equal\n    static equals(p1: any, p2: any): boolean {\n        return p1.x === p2.x && p1.y === p2.y;\n    }\n\n    // check if two segments intersect\n    //TODO:coverage\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\n    }\n\n    // check if a polygon diagonal intersects any polygon segments\n    //TODO:coverage\n    static intersectsPolygon(a: any, b: any): boolean {\n        var p: any = a;\n        do {\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                Earcut.intersects(p, p.next, a, b)) return true;\n            p = p.next;\n        } while (p !== a);\n\n        return false;\n    }\n\n    // check if a polygon diagonal is locally inside the polygon\n    //TODO:coverage\n    static locallyInside(a: any, b: any): boolean {\n        return Earcut.area(a.prev, a, a.next) < 0 ?\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\n    }\n\n    // check if the middle point of a polygon diagonal is inside the polygon\n    //TODO:coverage\n    static middleInside(a: any, b: any): boolean {\n        var p: any = a,\n            inside: any = false,\n            px: any = (a.x + b.x) / 2,\n            py: any = (a.y + b.y) / 2;\n        do {\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n                inside = !inside;\n            p = p.next;\n        } while (p !== a);\n\n        return inside;\n    }\n\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n    //TODO:coverage\n    static splitPolygon(a: any, b: any): any {\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\n            b2: any = new EarcutNode(b.i, b.x, b.y),\n            an: any = a.next,\n            bp: any = b.prev;\n\n        a.next = b;\n        b.prev = a;\n\n        a2.next = an;\n        an.prev = a2;\n\n        b2.next = a2;\n        a2.prev = b2;\n\n        bp.next = b2;\n        b2.prev = bp;\n\n        return b2;\n    }\n\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\n    static insertNode(i: any, x: any, y: any, last: any): any {\n        var p: any = new EarcutNode(i, x, y);\n\n        if (!last) {\n            p.prev = p;\n            p.next = p;\n\n        } else {\n            p.next = last.next;\n            p.prev = last;\n            last.next.prev = p;\n            last.next = p;\n        }\n        return p;\n    }\n\n    static removeNode(p: any): void {\n        p.next.prev = p.prev;\n        p.prev.next = p.next;\n\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n    }\n    // return a percentage difference between the polygon area and its triangulation area;\n    // used to verify correctness of triangulation\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\n        var hasHoles = holeIndices && holeIndices.length;\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    \n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n        if (hasHoles) {\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\n                var start = holeIndices[i] * dim;\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\n            }\n        }\n    \n        var trianglesArea = 0;\n        for (i = 0; i < triangles.length; i += 3) {\n            var a = triangles[i] * dim;\n            var b = triangles[i + 1] * dim;\n            var c = triangles[i + 2] * dim;\n            trianglesArea += Math.abs(\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n        }\n    \n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\n    };*/\n\n    static signedArea(data: any, start: any, end: any, dim: any): any {\n        var sum: any = 0;\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n            j = i;\n        }\n        return sum;\n    }\n\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\n    /*earcut.flatten = function (data) {\n        var dim = data[0][0].length,\n            result = {vertices: [], holes: [], dimensions: dim},\n            holeIndex = 0;\n    \n        for (var i = 0; i < data.length; i++) {\n            for (var j = 0; j < data[i].length; j++) {\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n            }\n            if (i > 0) {\n                holeIndex += data[i - 1].length;\n                result.holes.push(holeIndex);\n            }\n        }\n        return result;\n    };*/\n}\n\n","/**\n * Mesh topology.\n */\n export enum MeshTopology {\n    /** Draws a single dot */\n    Points,\n    /** Draws a line between a pair of vertices */\n    Lines,\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\n    LineLoop,\n    /** Draws a straight line to the next vertex. */\n    LineStrip,\n    /** Draws a triangle for a group of three vertices */\n    Triangles,\n    /** Draws a triangle strip */\n    TriangleStrip,\n    /** Draws a triangle fan */\n    TriangleFan\n  }\n  ","import { Const } from \"../../Const\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { Context } from \"../../resource/Context\";\nimport { BlendMode } from \"../canvas/BlendMode\";\nimport { Value2D } from \"../shader/d2/value/Value2D\";\nimport { Mesh2D } from \"../utils/Mesh2D\";\nimport { SubmitBase } from \"./SubmitBase\";\n\nexport class Submit extends SubmitBase {\n\n    protected static _poolSize: number = 0;\n    protected static POOL: Submit[] = [];\n\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\n        super(renderType);\n    }\n    /**\n     * @override\n     */\n    renderSubmit(): number {\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0) return 1;//怎么会有_numEle是0的情况?\n\n        var _tex = this.shaderValue.textureHost;\n        if (_tex) {\n            var source: any = _tex._getSource();\n            if (!source)\n                return 1;\n            this.shaderValue.texture = source;\n        }\n\n        this._mesh.useMesh();\n        //_ib._bind_upload() || _ib._bind();\n        //_vb._bind_upload() || _vb._bind();\n\n        this.shaderValue.upload();\n\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\n            RenderStateContext.setBlend(true);\n            this._blendFn();\n            BlendMode.activeBlendFunction = this._blendFn;\n        }\n        LayaGL.renderDrawContext.drawElements(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\n        // Stat.renderBatches++;\n        // Stat.trianglesFaces += this._numEle / 3;\n\n        return 1;\n    }\n    /**\n     * @override\n     */\n    releaseRender(): void {\n        if (SubmitBase.RENDERBASE == this)\n            return;\n\n        if ((--this._ref) < 1) {\n            Submit.POOL[Submit._poolSize++] = this;\n            this.shaderValue.release();\n            this.shaderValue = null;\n            //_vb = null;\n            //_mesh.destroy();\n            this._mesh = null;\n            this._parent && (this._parent.releaseRender(), this._parent = null);\n        }\n    }\n\n\t/**\n     * create方法只传对submit设置的值\n     */\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit {\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\n        o._ref = 1;\n        o._mesh = mesh;\n        o._key.clear();\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\n        o._numEle = 0;\n        var blendType = context._nBlendType;\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\n        o.shaderValue = sv;\n        o.shaderValue.setValue(context._shader2D);\n        var filters: any[] = context._shader2D.filters;\n        filters && o.shaderValue.setFilters(filters);\n        return o;\n    }\n\n\t/**\n\t * 创建一个矢量submit\n\t * @param\tctx\n\t * @param\tmesh\n\t * @param\tnumEle\t\t对应drawElement的第二个参数:count\n\t * @param\toffset\t\tdrawElement的时候的ib的偏移。\n\t * @param\tsv\t\t\tValue2D\n\t * @return\n\t */\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit {\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\n        o._mesh = mesh;\n        o._numEle = numEle;\n        o._startIdx = mesh.indexNum * 2;\n        o._ref = 1;\n        o.shaderValue = sv;\n        o.shaderValue.setValue(ctx._shader2D);\n        var blendType = ctx._nBlendType;\n        o._key.blendShader = blendType;\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\n        return o;\n    }\n}\n\n\n","import { Matrix } from \"../../maths/Matrix\";\nimport { Context } from \"../../resource/Context\";\nimport { Value2D } from \"../shader/d2/value/Value2D\";\nimport { RenderState2D } from \"../utils/RenderState2D\";\nimport { SubmitBase } from \"./SubmitBase\";\n\n/**\n * cache as normal 模式下的生成的canvas的渲染。\n */\nexport class SubmitCanvas extends SubmitBase {\n    /**@internal */\n    _matrix: Matrix = new Matrix();\t\t// 用来计算当前的世界矩阵\n    canv: Context;\n    /**@internal */\n    _matrix4: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    static POOL: SubmitCanvas[] = [];\n\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas {\n        var o = (!(SubmitCanvas.POOL as any)._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--(SubmitCanvas.POOL as any)._length];\n        o.canv = canvas;\n        o._ref = 1;\n        o._numEle = 0;\n        var v: Value2D = o.shaderValue;\n        v.alpha = alpha;\n        v.defines.setValue(0);\n        filters && filters.length && v.setFilters(filters);\n        return o;\n    }\n\n    constructor() {\n        super(SubmitBase.TYPE_2D);\n        this.shaderValue = new Value2D(0, 0);\n    }\n\n    /**\n     * @override\n     */\n    renderSubmit(): number {\n        // 下面主要是为了给canvas设置矩阵。因为canvas保存的是没有偏移的。\n        var preAlpha = RenderState2D.worldAlpha;\n        var preMatrix4 = RenderState2D.worldMatrix4;\n        var preMatrix = RenderState2D.worldMatrix;\n\n        var preFilters: any[] = RenderState2D.worldFilters;\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\n\n        var v = this.shaderValue;\n        var m = this._matrix;\n        var m4 = this._matrix4;\n        var mout = Matrix.TEMP;\n        Matrix.mul(m, preMatrix, mout);\n        m4[0] = mout.a;\n        m4[1] = mout.b;\n        m4[4] = mout.c;\n        m4[5] = mout.d;\n        m4[12] = mout.tx;\n        m4[13] = mout.ty;\n\n        RenderState2D.worldMatrix = mout.clone();\n        RenderState2D.worldMatrix4 = m4;\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\n        if (v.filters && v.filters.length) {\n            RenderState2D.worldFilters = v.filters;\n            RenderState2D.worldShaderDefines = v.defines;\n        }\n        (this.canv as any)['flushsubmit']();\n        RenderState2D.worldAlpha = preAlpha;\n        RenderState2D.worldMatrix4 = preMatrix4;\n        RenderState2D.worldMatrix.destroy();\n        RenderState2D.worldMatrix = preMatrix;\n\n        RenderState2D.worldFilters = preFilters;\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\n        return 1;\n    }\n    /**\n     * @override\n     */\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            var cache = SubmitCanvas.POOL;\n            //_vb = null;\n            this._mesh = null;\n            cache[(cache as any)._length++] = this;\n        }\n    }\n    /**\n     * @override\n     */\n    getRenderType(): number {\n        return SubmitBase.TYPE_CANVAS;\n    }\n\n}\n{ (SubmitCanvas.POOL as any)._length = 0 }\n","import { ISubmit } from \"./ISubmit\";\nimport { SubmitKey } from \"./SubmitKey\";\nimport { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Context } from \"../../resource/Context\"\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\nimport { BlendMode } from \"../canvas/BlendMode\"\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\nimport { Value2D } from \"../shader/d2/value/Value2D\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Const } from \"../../Const\";\n\nexport class SubmitTarget implements ISubmit {\n    /**@internal */\n    _mesh: Mesh2D;\t\t\t//代替 _vb,_ib\n    /**@internal */\n    _startIdx: number;\n    /**@internal */\n    _numEle: number;\n    shaderValue: Value2D;\n    blendType: number = 0;\n    /**@internal */\n    _ref: number = 1;\n    /**@internal */\n    _key: SubmitKey = new SubmitKey();\n    srcRT: RenderTexture2D;\n\n    constructor() {\n    }\n\n    static POOL: SubmitTarget[] = [];\n    renderSubmit(): number {\n        this._mesh.useMesh();\n\n        var target = this.srcRT;\n        if (target) {//??为什么会出现为空的情况\n            this.shaderValue.texture = target._getSource();\n            this.shaderValue.upload();\n            this.blend();\n            // Stat.renderBatches++;\n            // Stat.trianglesFaces += this._numEle / 3;\n            LayaGL.renderDrawContext.drawElements(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\n        }\n        return 1;\n    }\n\n    blend(): void {\n        if (BlendMode.activeBlendFunction !== BlendMode.fns[this.blendType]) {\n            RenderStateContext.setBlend(true);\n            BlendMode.fns[this.blendType]();\n            BlendMode.activeBlendFunction = BlendMode.fns[this.blendType];\n        }\n    }\n\n    getRenderType(): number {\n        return 0;\n    }\n\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            var pool: any = SubmitTarget.POOL;\n            pool[pool._length++] = this;\n        }\n    }\n\n    static create(context: Context, mesh: Mesh2D, sv: Value2D, rt: RenderTexture2D): SubmitTarget {\n        var o: SubmitTarget = (SubmitTarget.POOL as any)._length ? SubmitTarget.POOL[--(SubmitTarget.POOL as any)._length] : new SubmitTarget();\n        o._mesh = mesh;\n        o.srcRT = rt;\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\n        o._ref = 1;\n        o._key.clear();\n        o._numEle = 0;\n        o.blendType = context._nBlendType;\n        o._key.blendShader = o.blendType;\n        o.shaderValue = sv;\n        o.shaderValue.setValue(context._shader2D);\n        if (context._colorFiler) {\n            var ft: ColorFilter = context._colorFiler;\n            sv.defines.add(ft.type);\n            (<TextureSV>sv).colorMat = ft._mat;\n            (<TextureSV>sv).colorAlpha = ft._alpha;\n        }\n        return o;\n    }\n}\n\n{\n    (SubmitTarget.POOL as any)._length = 0;\n}\n\n\n","import { SubmitBase } from \"./SubmitBase\";\nimport { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Context } from \"../../resource/Context\"\nimport { BlendMode } from \"../canvas/BlendMode\"\nimport { BaseShader } from \"../shader/BaseShader\"\nimport { Shader } from \"../shader/Shader\"\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\nimport { Value2D } from \"../shader/d2/value/Value2D\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Const } from \"../../Const\";\n\nexport class SubmitTexture extends SubmitBase {\n    private static _poolSize: number = 0;\n    private static POOL: SubmitTexture[] = [];\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\n        super(renderType);\n    }\n    /**\n     * @override\n     */\n\treleaseRender(): void {\n        if ((--this._ref) < 1) {\n            SubmitTexture.POOL[SubmitTexture._poolSize++] = this;\n            this.shaderValue.release();\n            //_vb = null;\n            this._mesh = null;\t\t//下次create会重新赋值。既然会重新赋值，那还设置干嘛\n            this._parent && (this._parent.releaseRender(), this._parent = null);\n        }\n    }\n\n    renderSubmit(): number {\n        if (this._numEle === 0)\n            return 1;\n\n        var tex = this.shaderValue.textureHost;\n        if (tex) {//现在fillrect也用的这个submit，所以不必要求有texture\n            var source: any = tex ? tex._getSource() : null;\n            if (!source) return 1;\n        }\n\n        this._mesh.useMesh();\n        //如果shader参数都相同，只要提交texture就行了\n        var lastSubmit = <SubmitTexture>SubmitBase.preRender;\n        var prekey = ((<SubmitBase>SubmitBase.preRender))._key;\n        if (this._key.blendShader === 0 && (this._key.submitType === prekey.submitType && this._key.blendShader === prekey.blendShader) && BaseShader.activeShader &&\n            (<SubmitBase>SubmitBase.preRender).clipInfoID == this.clipInfoID &&\n            lastSubmit.shaderValue.defines._value === this.shaderValue.defines._value && //shader define要相同. \n            (this.shaderValue.defines._value & ShaderDefines2D.NOOPTMASK) == 0 //只有基本类型的shader走这个，像blur，glow，filltexture等都不要这样优化\n        ) {\n            (<Shader>BaseShader.activeShader).uploadTexture2D(source);\n        }\n        else {\n            if (BlendMode.activeBlendFunction !== this._blendFn) {\n                RenderStateContext.setBlend(true);\n                this._blendFn();\n                BlendMode.activeBlendFunction = this._blendFn;\n            }\n            this.shaderValue.texture = source;\n            this.shaderValue.upload();\n        }\n\n        LayaGL.renderDrawContext.drawElements(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\n\n        // Stat.renderBatches++;\n        // Stat.trianglesFaces += this._numEle / 3;\n        return 1;\n    }\n\n    /*\n       create方法只传对submit设置的值\n     */\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): SubmitTexture {\n        var o = SubmitTexture._poolSize ? SubmitTexture.POOL[--SubmitTexture._poolSize] : new SubmitTexture(SubmitBase.TYPE_TEXTURE);\n        o._mesh = mesh;\n        o._key.clear();\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\n        o._ref = 1;\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\n        o._numEle = 0;\n        var blendType = context._nBlendType;\n        o._key.blendShader = blendType;\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\n        o.shaderValue = sv;\n        //sv.setValue(context._shader2D);\n        if (context._colorFiler) {\n            var ft: ColorFilter = context._colorFiler;\n            sv.defines.add(ft.type);\n            (<TextureSV>sv).colorMat = ft._mat;\n            (<TextureSV>sv).colorAlpha = ft._alpha;\n        }\n        return o;\n    }\n\n}\n\n\n","import { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\nimport { Value2D } from \"../shader/d2/value/Value2D\"\nimport { SubmitTexture } from \"../submit/SubmitTexture\"\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\nimport { RenderInfo } from \"../../renders/RenderInfo\";\n/**\n * ...\n * @author laoxie\n */\nexport class CharSubmitCache {\n    private static __posPool: any[] = [];\n    private static __nPosPool: number = 0;\n\n    private _data: any[] = [];\n    private _ndata: number = 0;\n    private _tex: Texture;\n    private _imgId: number;\n    private _clipid: number = -1;\n    private _clipMatrix: Matrix = new Matrix();\n    /**@internal */\n    _enable: boolean = false;\n    /**@internal */\n    _colorFiler: ColorFilter;\n\n    constructor() {\n\n    }\n\n    clear(): void {\n        this._tex = null;\n        this._imgId = -1;\n        this._ndata = 0;\n        this._enable = false;\n        this._colorFiler = null;\n    }\n\n    destroy(): void {\n        this.clear();\n        this._data.length = 0;\n        this._data = null;\n    }\n\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\n            this.submit(ctx);\n        }\n\n        this._clipid = ctx._clipInfoID;\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\n        this._tex = tex;\n        this._imgId = imgid;\n        this._colorFiler = ctx._colorFiler;\n\n        this._data[this._ndata] = pos;\n        this._data[this._ndata + 1] = uv;\n        this._data[this._ndata + 2] = color;\n        this._ndata += 3;\n    }\n\n    getPos(): any[] {\n        if (CharSubmitCache.__nPosPool == 0)\n            return new Array(8);\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\n    }\n\n    enable(value: boolean, ctx: Context): void {\n        if (value === this._enable)\n            return;\n        this._enable = value;\n        this._enable || this.submit(ctx);\n    }\n\n    submit(ctx: Context): void {\n        var n: number = this._ndata;\n        if (!n)\n            return;\n\n        var _mesh: MeshQuadTexture = ctx._mesh;\n\n        var colorFiler: ColorFilter = ctx._colorFiler;\n        ctx._colorFiler = this._colorFiler;\n        var submit: SubmitTexture = SubmitTexture.create(ctx, _mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\n        submit.shaderValue.textureHost = this._tex;\n        submit._key.other = this._imgId;\n        ctx._colorFiler = colorFiler;\n        ctx._copyClipInfo(submit, this._clipMatrix);\n        submit.clipInfoID = this._clipid;\n\n        for (var i: number = 0; i < n; i += 3) {\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\n        }\n\n        n /= 3;\n        submit._numEle += n * 6;\n        _mesh.indexNum += n * 6;\n        _mesh.vertNum += n * 4;\n        ctx._drawCount += n;\n        this._ndata = 0;\n\n        if (RenderInfo.loopCount % 100 == 0)\n            this._data.length = 0;\n    }\n\n}\n\n\n","import { Point } from \"../../maths/Point\"\n\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\nexport class AtlasGrid {\n    atlasID: number = 0;\n    private _width: number = 0;\n    private _height: number = 0;\n    private _texCount: number = 0;\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\n    _used: number = 0;\t\t\t\t// 使用率\n\n    // TODO type 是否有用\n\n    //------------------------------------------------------------------------------\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\n        this._cells = null;\n        this._rowInfo = null;\n        this.atlasID = id;\n        this._init(width, height);\n    }\n\n    //------------------------------------------------------------------\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\n        if (!this._get(width, height, pt))\n            return false;\n        //根据获得的x,y填充\n        this._fill(pt.x, pt.y, width, height, type);\n        this._texCount++;\n        //返回是否成功，以及X位置和Y位置\n        return true;\n    }\n\n    //------------------------------------------------------------------------------\n    private _release(): void {\n        this._cells = null;\n        this._rowInfo = null;\n    }\n\n    //------------------------------------------------------------------------------\n    private _init(width: number, height: number): boolean {\n        this._width = width;\n        this._height = height;\n        this._release();\n        if (this._width == 0) return false;\n        this._cells = new Uint8Array(this._width * this._height * 3);\n        this._rowInfo = new Uint8Array(this._height);\n        this._used = 0;\n        this._clear();\n        return true;\n    }\n\n    //------------------------------------------------------------------\n    private _get(width: number, height: number, pt: Point): boolean {\n        if (width > this._width || height > this._height) {\n            return false;\n        }\n        //定义返回的x,y的位置\n        var rx: number = -1;\n        var ry: number = -1;\n        //为了效率先保存临时变量\n        var nWidth: number = this._width;\n        var nHeight: number = this._height;\n        //定义一个变量为了指向 m_pCells\n        var pCellBox: Uint8Array = this._cells;\n\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\n        for (var y: number = 0; y < nHeight; y++) {\n            //如果该行的空白数 小于 要放入的宽度返回\n            if (this._rowInfo[y] < width) continue;\n            for (var x: number = 0; x < nWidth;) {\n\n                var tm: number = (y * nWidth + x) * 3;\n\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\n                    x += pCellBox[tm + 1];\n                    continue;\n                }\n                rx = x;\n                ry = y;\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\n                for (var xx: number = 0; xx < width; xx++) {\n                    if (pCellBox[3 * xx + tm + 2] < height) {\n                        rx = -1;\n                        break;\n                    }\n                }\n                // 不行就x继续前进\n                if (rx < 0) {\n                    x += pCellBox[tm + 1];\n                    continue;\n                }\n                // 找到了\n                pt.x = rx;\n                pt.y = ry;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //------------------------------------------------------------------\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\n        //定义一些临时变量\n        var nWidth: number = this._width;\n        var nHeghit: number = this._height;\n        //代码检查\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\n\n        //填充\n        for (var yy: number = y; yy < (h + y); ++yy) {\n            this._check(this._rowInfo[yy] >= w);\n            this._rowInfo[yy] -= w;\n            for (var xx: number = 0; xx < w; xx++) {\n                var tm: number = (x + yy * nWidth + xx) * 3;\n                this._check(this._cells[tm] == 0);\n                this._cells[tm] = type;\n                this._cells[tm + 1] = w;\n                this._cells[tm + 2] = h;\n            }\n        }\n        //调整我左方相邻空白格子的宽度连续信息描述\n        if (x > 0) {\n            for (yy = 0; yy < h; ++yy) {\n                // TODO 下面应该可以优化\n                var s: number = 0;\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\n                }\n                for (xx = s; xx > 0; --xx) {\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\n                    this._check(xx > 0);\n                }\n            }\n        }\n        //调整我上方相邻空白格子的高度连续信息描述\n        if (y > 0) {\n            for (xx = x; xx < (x + w); ++xx) {\n                // TODO 下面应该可以优化\n                s = 0;\n                for (yy = y - 1; yy >= 0; --yy, s++) {\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\n                }\n                for (yy = s; yy > 0; --yy) {\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\n                    this._check(yy > 0);\n                }\n            }\n        }\n\n        this._used += (w * h) / (this._width * this._height);\n    }\n\n    private _check(ret: boolean): void {\n        if (ret == false) {\n            console.log(\"xtexMerger 错误啦\");\n        }\n    }\n\n    //------------------------------------------------------------------\n    private _clear(): void {\n        this._texCount = 0;\n        for (var y: number = 0; y < this._height; y++) {\n            this._rowInfo[y] = this._width;\n        }\n        for (var i: number = 0; i < this._height; i++) {\n            for (var j: number = 0; j < this._width; j++) {\n                var tm: number = (i * this._width + j) * 3;\n                this._cells[tm] = 0;\n                this._cells[tm + 1] = this._width - j;\n                this._cells[tm + 2] = this._width - i;\n            }\n        }\n    }\n    //------------------------------------------------------------------\n}\n\n\n","/**\n * 纹理寻址模式。\n */\nexport enum WrapMode {\n    /** 循环平铺。*/\n    Repeat = 0,\n    /** 超过UV边界后采用最后一个像素。*/\n    Clamp = 1,\n    /** 镜像采样 */\n    Mirrored = 2\n}","import { LayaGL } from \"../../layagl/LayaGL\"\nimport { RenderInfo } from \"../../renders/RenderInfo\"\nimport { Resource } from \"../../resource/Resource\"\nimport { CharRenderInfo } from \"./CharRenderInfo\"\nimport { ILaya } from \"../../../ILaya\";\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\"\nimport { Texture2D } from \"../../resource/Texture2D\";\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\nimport { TextAtlas } from \"./TextAtlas\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { TextRender } from \"./TextRender\";\n\nexport class TextTexture extends Resource {\n    private static pool: any[] = new Array(10); // 回收用\n    private static poolLen: number = 0;\n    private static cleanTm: number = 0;\n    private _render2DContext: IRender2DContext;\n\n    /**@internal */\n    _source: Texture2D;\t// webgl 贴图\n    /**@internal */\n    _texW: number = 0;\n    /**@internal */\n    _texH: number = 0;\n    /**@internal */\n    _discardTm: number = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\n    genID: number = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\n    bitmap: any = { id: 0, _glTexture: null };\t\t\t\t\t\t//samekey的判断用的\n    curUsedCovRate: number = 0; \t// 当前使用到的使用率。根据面积算的\n    curUsedCovRateAtlas: number = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\n    lastTouchTm: number = 0;\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\n    //public var isIso:Boolean = false;\n    get gammaCorrection(): number {\n        return (this.bitmap._glTexture as any).gammaCorrection;\n    }\n    constructor(textureW: number, textureH: number) {\n        super();\n        this._texW = textureW || TextRender.atlasWidth;\n        this._texH = textureH || TextRender.atlasWidth;\n        this.bitmap.id = this.id;\n        this.lock = true;//防止被资源管理清除\n        this._render2DContext = LayaGL.render2DContext;\n    }\n\n    recreateResource(): void {\n        if (this._source)\n            return;\n        var glTex: Texture2D = this._source = new Texture2D(this._texW, this._texH, TextureFormat.R8G8B8A8, false, false, true);\n        glTex.setPixelsData(null, true, false);\n        glTex.lock = true;\n        this.bitmap._glTexture = glTex;\n\n        this._source.filterMode = FilterMode.Bilinear;\n        this._source.wrapModeU = WrapMode.Clamp;\n        this._source.wrapModeV = WrapMode.Clamp;\n\n        //TODO 预乘alpha\n        if (TextRender.debugUV) {\n            this.fillWhite();\n        }\n    }\n\n    /**\n     * \n     * @param\tdata\n     * @param\tx\t\t\t拷贝位置。\n     * @param\ty\n     * @param  uv  \n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\n     */\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\n        if (TextRender.isWan1Wan) {\n            return this.addCharCanvas(data, x, y, uv);\n        }\n        var dt: any = data.data;\n        if (data.data instanceof Uint8ClampedArray)\n            dt = new Uint8Array(dt.buffer);\n        !this._source && this.recreateResource();\n\n        LayaGL.textureContext.setTextureSubPixelsData(this._source._texture, dt, 0, false, x, y, data.width, data.height, true, false);\n        var u0: number;\n        var v0: number;\n        var u1: number;\n        var v1: number;\n        u0 = x / this._texW;\n        v0 = y / this._texH;\n        u1 = (x + data.width) / this._texW;\n        v1 = (y + data.height) / this._texH;\n        uv = uv || new Array(8);\n        uv[0] = u0, uv[1] = v0;\n        uv[2] = u1, uv[3] = v0;\n        uv[4] = u1, uv[5] = v1;\n        uv[6] = u0, uv[7] = v1;\n        return uv;\n    }\n\n    /**\n     * 玩一玩不支持 getImageData\n     * @param\tcanv\n     * @param\tx\n     * @param\ty\n     */\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\n        !this._source && this.recreateResource();\n\n        LayaGL.textureContext.setTexturebySubImageData(this._source._texture, canv, x, y, true, false);\n        var u0: number;\n        var v0: number;\n        var u1: number;\n        var v1: number;\n        if (LayaEnv.isConch) {\n            u0 = x / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\n            v0 = y / this._texH;\n            u1 = (x + canv.width) / this._texW;\n            v1 = (y + canv.height) / this._texH;\n        } else {\n            u0 = (x + 1) / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\n            v0 = (y + 1) / this._texH;\n            u1 = (x + canv.width - 1) / this._texW;\n            v1 = (y + canv.height - 1) / this._texH;\n        }\n        uv = uv || new Array(8);\n        uv[0] = u0, uv[1] = v0;\n        uv[2] = u1, uv[3] = v0;\n        uv[4] = u1, uv[5] = v1;\n        uv[6] = u0, uv[7] = v1;\n        return uv;\n    }\n\n    /**\n     * 填充白色。调试用。\n     */\n    fillWhite(): void {\n        !this._source && this.recreateResource();\n        var dt: Uint8Array = new Uint8Array(this._texW * this._texH * 4);\n        ((<any>dt)).fill(0xff);\n        LayaGL.textureContext.setTextureImageData(this._source._getSource(), dt as any, true, false);\n    }\n\n    discard(): void {\n        // 文字贴图的释放要触发全局cacheas normal无效\n        ILaya.stage.setGlobalRepaint();\n        // 不再使用问题贴图的重用，否则会有内容清理问题\n        this.destroy();\n        return;\n    }\n\n    static getTextTexture(w: number, h: number): TextTexture {\n        // 不再回收\n        return new TextTexture(w, h);\n    }\n    /**\n     * @override\n     */\n    protected _disposeResource(): void {\n        //console.log('destroy TextTexture');\n        this._source && this._source.destroy();\n        this._source = null;\n    }\n\n    /**\n     * 定期清理\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\n     */\n    static clean(): void {\n        var curtm: number = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t//每10秒看看pool中的贴图有没有很老的可以删除的\n            for (var i: number = 0; i < TextTexture.poolLen; i++) {\n                var p: TextTexture = TextTexture.pool[i];\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\n                    p.destroy();\t\t\t\t\t//真正删除贴图\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\n                    TextTexture.poolLen--;\n                    i--;\t//这个还要处理，用来抵消i++\n                }\n            }\n            TextTexture.cleanTm = curtm;\n        }\n    }\n\n    touchRect(ri: CharRenderInfo, curloop: number): void {\n        if (this.lastTouchTm != curloop) {\n            this.curUsedCovRate = 0;\n            this.curUsedCovRateAtlas = 0;\n            this.lastTouchTm = curloop;\n        }\n        var texw2: number = TextRender.atlasWidth * TextRender.atlasWidth;\n        var gridw2: number = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\n    }\n\n    // 为了与当前的文字渲染兼容的补丁\n    get texture(): any {\n        return this;\n    }\n    /**@internal */\n    _getSource(): any {\n        return this._source._getSource();\n    }\n\n    // for debug\n    drawOnScreen(x: number, y: number): void {\n\n    }\n}\n","import { AtlasGrid } from \"./AtlasGrid\";\nimport { TextTexture } from \"./TextTexture\";\nimport { Point } from \"../../maths/Point\"\nimport { CharRenderInfo } from \"./CharRenderInfo\"\nimport { TextRender } from \"./TextRender\";\n\n/**\n *  文字贴图的大图集。\n */\nexport class TextAtlas {\n    texWidth: number = 1024;\n    texHeight: number = 1024;\n    private atlasgrid: AtlasGrid;\n    //private protectDist: number = 1;\n    texture: TextTexture|null = null;\n    charMaps: any = {};\t\t// 保存文字信息的字典\n    static atlasGridW: number = 16;\n\n    constructor() {\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\n        }\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\n    }\n\n    setProtecteDist(d: number): void {\n        //this.protectDist = d;\n    }\n\n    /**\n     * 如果返回null，则表示无法加入了\n     * 分配的时候优先选择最接近自己高度的节点\n     * @param\tw\n     * @param\th\n     * @return\n     */\n    getAEmpty(w: number, h: number, pt: Point): boolean {\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\n        if (find) {\n            pt.x *= TextAtlas.atlasGridW;\n            pt.y *= TextAtlas.atlasGridW;\n        }\n        return find;\n    }\n\n    /**\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\n     */\n    get usedRate(): number {\n        return this.atlasgrid._used;\n    }\n    //data 也可能是canvas\n    /*\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\n        texture.addChar(data, node.x, node.y);\n    }\n    */\n\n    destroy(): void {\n        for (var k in this.charMaps) {\n            var ri: CharRenderInfo = this.charMaps[k];\n            ri.deleted = true;\n        }\n        this.texture.discard();\n    }\n\n    printDebugInfo(): void {\n\n    }\n}\n\n","export class FontInfo {\n\n    static EMPTY: FontInfo = new FontInfo(null);\n\n    private static _cache: any = {};\n    private static _gfontID: number = 0;\n    private static _lastFont: string = '';\n    private static _lastFontInfo: FontInfo;\n\n    /**\n     * 解析字体模型\n     * @param font \n     */\n    static Parse(font: string): FontInfo {\n        if (font === FontInfo._lastFont) {\n            return FontInfo._lastFontInfo;\n        }\n        var r: FontInfo = FontInfo._cache[font];\n        if (!r) {\n            r = FontInfo._cache[font] = new FontInfo(font);\n        }\n        FontInfo._lastFont = font;\n        FontInfo._lastFontInfo = r;\n        return r;\n    }\n\n    /**@internal */\n    _id: number;\n    /**@internal */\n    _font: string = \"14px Arial\";\n    /**@internal */\n    _family: string = \"Arial\";\n    /**@internal */\n    _size: number = 14;\n    /**@internal */\n    _italic: boolean = false;\n    /**@internal */\n    _bold: boolean = false;\n\n    constructor(font: string | null) {\n        this._id = FontInfo._gfontID++;\n        this.setFont(font || this._font);\n    }\n\n    /**\n     * 设置字体格式\n     * @param value \n     */\n    setFont(value: string): void {\n        this._font = value;\n        var _words: any[] = value.split(' ');\n        var l: number = _words.length;\n        if (l < 2) {\n            if (l == 1) {\n                if (_words[0].indexOf('px') > 0) {\n                    this._size = parseInt(_words[0]);\n                }\n            }\n            return;\n        }\n        var szpos: number = -1;\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\n        for (var i: number = 0; i < l; i++) {\n            if (_words[i].indexOf('px') > 0 || _words[i].indexOf('pt') > 0) {\n                szpos = i;\n                this._size = parseInt(_words[i]);\n                if (this._size <= 0) {\n                    console.error('font parse error:' + value);\n                    this._size = 14;\n                }\n                break;\n            }\n        }\n\n        //最后一个是用逗号分开的family\n        var fpos: number = szpos + 1;\n        var familys: string = _words[fpos];\n        fpos++;//下一个\n        for (; fpos < l; fpos++) {\n            familys += ' ' + _words[fpos];\n        }\n        this._family = (familys.split(','))[0];\n        this._italic = _words.indexOf('italic') >= 0;\n        this._bold = _words.indexOf('bold') >= 0;\n    }\n}\n\n","export class NativeWordText {\n    _nativeObj: any;\n    constructor()\n    {\n        this._nativeObj = new (window as any)._conchWordText();\n    }\n    setText(txt: string): void {\n        //this.changed = true;\n        this._nativeObj._text = txt;\n        //this.width = -1;\n        this.cleanCache();\n    }\n    cleanCache(): void {\n        this._nativeObj.cleanCache();\n    }\n    set splitRender(value: boolean) {\n        this._nativeObj.splitRender = value;\n    }\n}","import { NativeWordText } from \"./NativeWordText\";\n\n/**\n * @private\n */\nexport class WordText {\n    //TODO:\n    id: number;\n    save: any[] = [];\n    toUpperCase: string = null;\n    changed: boolean;\n    /**@internal */\n    _text: string;\n    width: number = -1;\t//整个WordText的长度。-1表示没有计算还。\n    pageChars: any[] = [];\t//把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\n    startID: number = 0;\t//上面的是个数组，但是可能前面都是空的，加个起始位置\n    startIDStroke: number = 0;\n    lastGCCnt: number = 0;\t//如果文字gc了，需要检查缓存是否有效，这里记录上次检查对应的gc值。\n    splitRender: boolean = false;\t// 强制拆分渲染\n    scalex=1;\t// 缓存的时候的缩放\n    scaley=1;\n\n    setText(txt: string): void {\n        this.changed = true;\n        this._text = txt;\n        this.width = -1;\n        this.cleanCache();\n        //pageChars = [];//需要重新更新\n    }\n\n    //TODO:coverage\n    toString(): string {\n        return this._text;\n    }\n\n    get length(): number {\n        return this._text ? this._text.length : 0;\n    }\n\n    //TODO:coverage\n    charCodeAt(i: number): number {\n        return this._text ? this._text.charCodeAt(i) : NaN;\n    }\n\n    //TODO:coverage\n    charAt(i: number): string {\n        return this._text ? this._text.charAt(i) : null;\n    }\n\n    /**\n     * 自己主动清理缓存，需要把关联的贴图删掉\n     * 不做也可以，textrender会自动清理不用的\n     * TODO 重用\n     */\n    cleanCache(): void {\n        // 如果是独占文字贴图的，需要删掉\n        //TODO 这个效果不对。会造成文字错乱\n        let pagecharse = this.pageChars;\n        for( var i in pagecharse){\n            let p = pagecharse[i];\n            var tex: any = p.tex;\n            var words: any[] = p.words;\n            if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\n                tex.destroy();\n            }\n        }\n        /*\n        this.pageChars.forEach(function (p: any): void { // 可能有多个\n            var tex: any = p.tex;\n            var words: any[] = p.words;\n            if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\n                tex.destroy();\n            }\n        });\n        */\n        this.pageChars = [];\n        this.startID = 0;\n        this.scalex=1;\n        this.scaley=1;\n    }\n}\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n    //@ts-ignore\n    WordText = NativeWordText;\n}\n","import { RenderInfo } from \"../../renders/RenderInfo\"\n/**\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\n */\nexport class CharRenderInfo {\n    char: string = '';\t\t\t\t// 调试用\n    tex: any;\t\t\t\t\t\t//\n    deleted: boolean = false; \t// 已经被删除了\n    uv: any[] = new Array(8);// [0, 0, 1, 1];\t\t//uv\n    pos: number = 0;\t\t\t\t\t//数组下标\n    width: number;\t\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\n    height: number; \t\t\t\t//字体高度。没有缩放\n    bmpWidth: number;\t\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\n    bmpHeight: number;\n    orix: number = 0;\t\t\t\t// 原点位置，通常都是所在区域的左上角\n    oriy: number = 0;\n    touchTick: number = 0;\t\t//\n    isSpace: boolean = false;\t\t//是否是空格，如果是空格，则只有width有效\n    touch(): void {\n        var curLoop: number = RenderInfo.loopCount;\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\n            this.tex.touchRect(this, curLoop);\n        }\n        this.touchTick = curLoop;\n    }\n}\n\n","import { CharRenderInfo } from \"./CharRenderInfo\";\nexport class ICharRender {\n    fontsz = 16;\n    getWidth(font: string, str: string): number { return 0; }\n\n    scale(sx: number, sy: number): void {\n    }\n\n    get canvasWidth(): number {\n        return 0;\n    }\n\n    set canvasWidth(w: number) {\n\n    }\n    /**\n     *TODO stroke \n     * @param\tchar\n     * @param\tfont\n     * @param\tsize  返回宽高\n     * @return\n     */\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\n        return null;\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\n\n/**\n * <code>Browser</code> 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\n */\nexport class Browser {\n\n    /** 浏览器代理信息。*/\n    static userAgent: string;\n    /** 表示是否在移动设备，包括IOS和安卓等设备内。*/\n    static onMobile: boolean;\n    /** 表示是否在 IOS 设备内。*/\n    static onIOS: boolean;\n    /** 表示是否在 Mac 设备。*/\n    static onMac: boolean;\n    /** 表示是否在 IPhone 设备内。*/\n    static onIPhone: boolean;\n    /** 表示是否在 IPad 设备内。*/\n    static onIPad: boolean;\n    /** 表示是否在 Android 设备内。*/\n    static onAndroid: boolean;\n    /** 表示是否在 Windows Phone 设备内。*/\n    static onWP: boolean;\n    /** 表示是否在 QQ 浏览器内。*/\n    static onQQBrowser: boolean;\n    /** 表示是否在移动端 QQ 或 QQ 浏览器内。*/\n    static onMQQBrowser: boolean;\n    /** 表示是否在 Safari 内。*/\n    static onSafari: boolean;\n    /** 表示是否在 Chrome 内 */\n    static onChrome: boolean;\n    /** 表示是否在 IE 浏览器内*/\n    static onIE: boolean;\n    /** 表示是否在 微信 内*/\n    static onWeiXin: boolean;\n    /** 表示是否在 PC 端。*/\n    static onPC: boolean;\n    /** 微信小游戏 **/\n    static onMiniGame: boolean;\n    /** 百度小游戏 **/\n    static onBDMiniGame: boolean;\n    /** 小米戏小游戏 **/\n    static onKGMiniGame: boolean;\n    /** OPPO小游戏 **/\n    static onQGMiniGame: boolean;\n    /** VIVO小游戏 **/\n    static onVVMiniGame: boolean;\n    /** 阿里小游戏 **/\n    static onAlipayMiniGame: boolean;\n    /***手机QQ小游戏 */\n    static onQQMiniGame: boolean;\n    /*** BILIBILI小游戏 */\n    static onBLMiniGame: boolean;\n    /** 字节跳动小游戏*/\n    static onTTMiniGame: boolean;\n    /** 华为快游戏 */\n    static onHWMiniGame: boolean;\n    /** 淘宝小程序 */\n    static onTBMiniGame: boolean;\n    /** @private */\n    static onFirefox: boolean;//TODO:求补充\n    /** @private */\n    static onEdge: boolean;//TODO:求补充\n    /** @private */\n    static onLayaRuntime: boolean;\n\n    /** 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性 **/\n    static platform: number;\n    static PLATFORM_PC = 0;\n    static PLATFORM_ANDROID = 1;\n    static PLATFORM_IOS = 2;\n\n    /** 表示是否支持WebAudio*/\n    static supportWebAudio: boolean;\n    /** 表示是否支持LocalStorage*/\n    static supportLocalStorage: boolean;\n\n    /** 全局离线画布（非主画布）。主要用来测量字体、获取image数据。*/\n    static canvas: any;\n    /** 全局离线画布上绘图的环境（非主画布）。 */\n    static context: CanvasRenderingContext2D;\n\n    /** @private */\n    private static _window: any;\n    /** @private */\n    private static _document: Document;\n    /** @private */\n    private static _container: any;\n    /** @private */\n    private static _pixelRatio: number = -1;\n\n    /** @private */\n    private static _clientWidth: number;\n    /** @private */\n    private static _clientHeight: number;\n\n    /** @private */\n    static mainCanvas: any = null;\n\n    /**@private */\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\n    /**@private */\n    private static fontMap: { [key: string]: string } = {};\n    /**@private */\n    static measureText: Function = function (txt: string, font: string): any {\n        let isChinese: boolean = Browser.hanzi.test(txt);\n        if (isChinese && Browser.fontMap[font]) {\n            return Browser.fontMap[font];\n        }\n\n        let ctx: CanvasRenderingContext2D = Browser.context;\n        ctx.font = font;\n\n        let r: any = ctx.measureText(txt);\n        if (isChinese) Browser.fontMap[font] = r;\n        return r;\n    }\n\n    /**@internal */\n    static __init__(): any {\n        let Laya: any = (window as any).Laya || ILaya.Laya;\n        if (Browser._window) return Browser._window;\n        let win: any = Browser._window = window;\n        let doc: any = Browser._document = win.document;\n        let u: string = Browser.userAgent = win.navigator.userAgent;\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\n        let platform: string = win.navigator.platform;\n\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\n            (window as any).wxMiniGame(Laya, Laya);\n            Laya[\"MiniAdpter\"].enable();\n        }\n        //阿里小游戏\n        if (\"my\" in Browser.window) {\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\n                //这里需要手动初始化阿里适配库\n                (window as any).tbMiniGame(Laya, Laya);\n                if (!Laya[\"TBMiniAdapter\"]) {\n                    console.error(\"请先添加淘宝适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-6-0\");\n                } else {\n                    Laya[\"TBMiniAdapter\"].enable();\n                }\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\n                //这里需要手动初始化阿里适配库\n                (window as any).aliPayMiniGame(Laya, Laya);\n                if (!Laya[\"ALIMiniAdapter\"]) {\n                    console.error(\"请先添加阿里小游戏适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-6-0\");\n                } else {\n                    Laya[\"ALIMiniAdapter\"].enable();\n                }\n            }\n        }\n\n        if (u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1 && \"wx\" in Browser.window) {\n            if (\"tt\" in Browser.window) {\n                //手机头条小游戏\n                (window as any).ttMiniGame(Laya, Laya);\n                if (!Laya[\"TTMiniAdapter\"]) {\n                    //TODO\n                    console.error(\"请引入字节跳动小游戏的适配库\");\n                } else {\n                    Laya[\"TTMiniAdapter\"].enable();\n                }\n            } else if (\"bl\" in Browser.window) {\n                //手机B站小游戏\n                (window as any).biliMiniGame(Laya, Laya);\n                if (!Laya[\"BLMiniAdapter\"]) {\n                    console.error(\"请引入bilibili小游戏的适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-7-0\");\n                } else {\n                    Laya[\"BLMiniAdapter\"].enable();\n                }\n            }\n            else if (\"qq\" in Browser.window) {\n                //手机QQ小游戏\n                (window as any).qqMiniGame(Laya, Laya);\n                if (!Laya[\"QQMiniAdapter\"]) {\n                    console.error(\"请引入手机QQ小游戏的适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-0-0\");\n                } else {\n                    Laya[\"QQMiniAdapter\"].enable();\n                }\n            }\n            else {\n                //微信小游戏\n                (window as any).wxMiniGame(Laya, Laya);\n                if (!Laya[\"MiniAdpter\"]) {\n                    console.error(\"请先添加小游戏适配库,详细教程：https://ldc2.layabox.com/doc/?nav=zh-ts-5-0-0\");\n                    //TODO 教程要改\n                } else {\n                    Laya[\"MiniAdpter\"].enable();\n                }\n            }\n        }\n        //华为快游戏\n        if (\"hbs\" in Browser.window) {\n            (window as any).hwMiniGame(Laya, Laya);\n            if (!Laya[\"HWMiniAdapter\"]) {\n                console.error(\"请先添加小游戏适配库!\");\n                //TODO 教程要改\n            } else {\n                Laya[\"HWMiniAdapter\"].enable();\n            }\n        }\n\n        //百度小游戏\n        if (u.indexOf(\"SwanGame\") > -1) {\n            (window as any).bdMiniGame(Laya, Laya);\n            if (!Laya[\"BMiniAdapter\"]) {\n                console.error(\"请先添加百度小游戏适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-1-0\");\n                //TODO 教程要改\n            } else {\n                Laya[\"BMiniAdapter\"].enable();\n            }\n        }\n\n        //小米小游戏\n        if (u.indexOf('QuickGame') > -1) {\n            (window as any).miMiniGame(Laya, Laya);\n            if (!Laya[\"KGMiniAdapter\"]) {\n                console.error(\"请先添加小米小游戏适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-2-0\");\n            } else {\n                Laya[\"KGMiniAdapter\"].enable();\n            }\n        }\n\n        //OPPO小游戏\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\n            (window as any).qgMiniGame(Laya, Laya);\n            if (!Laya[\"QGMiniAdapter\"]) {\n                console.error(\"请先添加OPPO小游戏适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-3-0\");\n            } else {\n                Laya[\"QGMiniAdapter\"].enable();\n            }\n        }\n\n        //VIVO小游戏\n        if (u.indexOf('VVGame') > -1) {\n            (window as any).vvMiniGame(Laya, Laya);\n            if (!Laya[\"VVMiniAdapter\"]) {\n                console.error(\"请先添加VIVO小游戏适配库,详细教程：https://ldc2.layabox.com/doc/?language=zh&nav=zh-ts-5-4-0\");\n            } else {\n                Laya[\"VVMiniAdapter\"].enable();\n            }\n        }\n\n        //新增trace的支持\n        win.trace = console.log;\n\n        //兼容requestAnimationFrame\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\n            return win.setTimeout(fun, 1000 / 60);\n        }\n\n        //强制修改body样式\n        var bodyStyle: any = doc.body.style;\n        bodyStyle.margin = 0;\n        bodyStyle.overflow = 'hidden';\n        bodyStyle['-webkit-user-select'] = 'none';\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\n\n        //强制修改meta标签，防止开发者写错\n        var metas: any[] = doc.getElementsByTagName('meta');\n        var i: number = 0, flag: boolean = false, content: any = 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no';\n        while (i < metas.length) {\n            var meta: any = metas[i];\n            if (meta.name == 'viewport') {\n                meta.content = content;\n                flag = true;\n                break;\n            }\n            i++;\n        }\n        if (!flag) {\n            meta = doc.createElement('meta');\n            meta.name = 'viewport', meta.content = content;\n            doc.getElementsByTagName('head')[0].appendChild(meta);\n        }\n\n        //处理兼容性\t\t\t\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\n        Browser.onSafari = u.indexOf(\"Safari\") > -1;\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\n        Browser.onPC = !Browser.onMobile;\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\n        Browser.onEdge = u.indexOf('Edge') > -1;\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\n        Browser.onLayaRuntime = !!(window as any).conch;\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\n            Browser.onQGMiniGame = true;//OPPO环境判断\n            Browser.onMiniGame = false;\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\n            Browser.onQQMiniGame = true;//手机QQ环境判断\n            Browser.onMiniGame = false;\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\n            Browser.onBLMiniGame = true;//B站环境判断\n            Browser.onMiniGame = false;\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\n            Browser.onTTMiniGame = true;\n            Browser.onMiniGame = false;\n        }\n\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\n        if (u.indexOf('AlipayMiniGame') > -1) {\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\n            Browser.onMiniGame = false;\n        }\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\n            Browser.onTBMiniGame = true;\n        }\n\n        if (Browser.onAndroid || Browser.onIOS) {\n            //也有可能是模拟器\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\n                Browser.platform = Browser.PLATFORM_PC;\n            else if (Browser.onAndroid)\n                Browser.platform = Browser.PLATFORM_ANDROID;\n            else\n                Browser.platform = Browser.PLATFORM_IOS;\n        }\n        else\n            Browser.platform = Browser.PLATFORM_PC;\n\n        return win;\n    }\n    /**\n     * 获取是否为小游戏环境\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\n     */\n    static get _isMiniGame(): boolean {\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame;\n    }\n    /**\n     * 创建浏览器原生节点。\n     * @param\ttype 节点类型。\n     * @return\t创建的节点对象的引用。\n     */\n    static createElement(type: string): any {\n        Browser.__init__();\n        return Browser._document.createElement(type);\n    }\n\n    /**\n     * 返回 Document 对象中拥有指定 id 的第一个对象的引用。\n     * @param\ttype 节点id。\n     * @return\t节点对象。\n     */\n    static getElementById(type: string): any {\n        Browser.__init__();\n        return Browser._document.getElementById(type);\n    }\n\n    /**\n     * 移除指定的浏览器原生节点对象。\n     * @param\ttype 节点对象。\n     */\n    static removeElement(ele: any): void {\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\n    }\n\n    /**\n     * 获取浏览器当前时间戳，单位为毫秒。\n     */\n    static now(): number {\n        return Date.now();\n    }\n\n    /**\n     * 浏览器窗口可视宽度。\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。\n     */\n    static get clientWidth(): number {\n        Browser.__init__();\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\n    }\n\n    static set clientWidth(value: number) {\n        Browser._clientWidth = value;\n    }\n\n    /**\n     * 浏览器窗口可视高度。\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。\n     */\n    static get clientHeight(): number {\n        Browser.__init__();\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\n    }\n\n    static set clientHeight(value: number) {\n        Browser._clientHeight = value;\n    }\n\n    /** 浏览器窗口物理宽度。考虑了设备像素比。*/\n    static get width(): number {\n        Browser.__init__();\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\n    }\n\n    /** 浏览器窗口物理高度。考虑了设备像素比。*/\n    static get height(): number {\n        Browser.__init__();\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\n    }\n\n    /** 获得设备像素比。*/\n    static get pixelRatio(): number {\n        if (Browser._pixelRatio < 0) {\n            Browser.__init__();\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\n            else {\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\n            }\n        }\n        return Browser._pixelRatio;\n    }\n\n    /**画布容器，用来盛放画布的容器。方便对画布进行控制*/\n    static get container(): any {\n        if (!Browser._container) {\n            Browser.__init__();\n            Browser._container = Browser.createElement(\"div\");\n            Browser._container.id = \"layaContainer\";\n            Browser._document.body.appendChild(Browser._container);\n        }\n        return Browser._container;\n    }\n\n    static set container(value: any) {\n        Browser._container = value;\n    }\n\n    /**浏览器原生 window 对象的引用。*/\n    static get window(): any {\n        return Browser._window || Browser.__init__();\n    }\n\n    /**浏览器原生 document 对象的引用。*/\n    static get document(): any {\n        Browser.__init__();\n        return Browser._document;\n    }\n\n    /**\n     * 获得URL参数值\n     * @param\tname 参数名称\n     * @return\t参数值\n     */\n    static getQueryString(name: string): string {\n        if (Browser.onMiniGame) return null;\n        if (!window.location || !window.location.search)\n            return null;\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n        var r: any = window.location.search.substring(1).match(reg);\n        if (r != null) return unescape(r[2]);\n        return null;\n    }\n}\n\n","import { CharRenderInfo } from \"./CharRenderInfo\"\nimport { ICharRender } from \"./ICharRender\"\nimport { Browser } from \"../../utils/Browser\";\nexport class CharRender_Canvas extends ICharRender {\n\tprivate static canvas: any = null;// HTMLCanvasElement;\n\tprivate ctx: any = null;\n\tprivate lastScaleX = 1.0;\n\tprivate lastScaleY = 1.0;\n\t//private needResetScale: boolean = false;\n\tprivate maxTexW = 0;\n\tprivate maxTexH = 0;\n\tprivate scaleFontSize = true;\n\tprivate showDbgInfo = false;\n\tprivate supportImageData = true;\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\n\t\tsuper();\n\t\tthis.maxTexW = maxw;\n\t\tthis.maxTexH = maxh;\n\t\tthis.scaleFontSize = scalefont;\n\t\tthis.supportImageData = useImageData;\n\t\tthis.showDbgInfo = showdbg;\n\t\tif (!CharRender_Canvas.canvas) {\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\n\t\t\tCharRender_Canvas.canvas.width = 1024;\n\t\t\tCharRender_Canvas.canvas.height = 512;\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\n\t\t\tdocument.body.appendChild(CharRender_Canvas.canvas);;\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\n\t\t}\n\t}\n\t/**\n\t * @override\n\t */\n\tget canvasWidth(): number {\n\t\treturn CharRender_Canvas.canvas.width;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tset canvasWidth(w: number) {\n\t\tif (CharRender_Canvas.canvas.width == w)\n\t\t\treturn;\n\t\tCharRender_Canvas.canvas.width = w;\n\t\tif (w > 2048) {\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\n\t\t}\n\t\t// 重新恢复一下缩放\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\n\t}\n\n\t/**\n\t * \n\t * @param font \n\t * @param str \n\t * @override\n\t */\n\tgetWidth(font: string, str: string): number {\n\t\tif (!this.ctx) return 0;\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\n\t\tif (this.ctx._lastFont != font) {\n\t\t\tthis.ctx.font = font;\n\t\t\tthis.ctx._lastFont = font;\n\t\t\t//console.log('use font ' + font);\n\t\t}\n\t\treturn this.ctx.measureText(str).width;\n\t}\n\n\t/**\n\t * \n\t * @param sx \n\t * @param sy \n\t * @override\n\t */\n\tscale(sx: number, sy: number): void {\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\n\t\t\tthis.lastScaleX = sx;\n\t\t\tthis.lastScaleY = sy;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\n\t\t\tthis.lastScaleX = sx;\n\t\t\tthis.lastScaleY = sy;\n\t\t}\n\t}\n\n\t/**\n\t *TODO stroke \n\t * @param\tchar\n\t * @param\tfont\n\t * @param\tcri  修改里面的width。\n\t * @return\n\t * @override\n\t */\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\n\t\tif (!this.supportImageData)\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\n\t\tvar ctx: any = this.ctx;\n\n\t\tvar sz = this.fontsz;\n\t\t//ctx.save();\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\n\t\t\tctx.font = font;\n\t\t\tctx._lastFont = font;\n\t\t\t//console.log('use font ' + font);\n\t\t}\n\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\n\t\tvar h: number = cri.height * this.lastScaleY;\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\n\t\tw = Math.ceil(w);\n\t\th = Math.ceil(h);\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\n\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\n\t\t}\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\n\t\tctx.save();\n\t\t//ctx.textAlign = \"end\";\n\t\tctx.textBaseline = \"middle\";\n\t\t//ctx.translate(CborderSize, CborderSize);\n\t\t//ctx.scale(xs, ys);\n\t\tif (lineWidth > 0) {\n\t\t\tctx.strokeStyle = strokeColStr;\n\t\t\tctx.lineWidth = lineWidth;\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\n\t\t}\n\t\tif (colStr) {\n\t\t\tctx.fillStyle = colStr;\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\n\t\t}\n\n\t\tif (this.showDbgInfo) {\n\t\t\tctx.strokeStyle = '#ff0000';\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\n\t\t\tctx.strokeStyle = '#00ff00';\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\n\t\t}\n\t\t//ctx.restore();\n\t\tif (rect) {\n\t\t\tif (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\n\t\t}\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\n\t\tctx.restore();\n\t\tcri.bmpWidth = imgdt.width;\n\t\tcri.bmpHeight = imgdt.height;\n\t\treturn imgdt;\n\t}\n\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\n\t\tvar ctx: any = this.ctx;\n\n\t\t//ctx.save();\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\n\t\t\tctx.font = font;\n\t\t\tctx._lastFont = font;\n\t\t\t//console.log('use font ' + font);\n\t\t}\n\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\n\t\tvar h: number = cri.height * this.lastScaleY;\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\n\t\tw = Math.min(w, this.maxTexW);\n\t\th = Math.min(h, this.maxTexH);\n\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\n\t\tctx.font = font;\n\t\t//}\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\n\t\tctx.save();\n\t\tif (this.scaleFontSize) {\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\n\t\t}\n\t\tctx.translate(margin_left, margin_top);\n\t\tctx.textAlign = \"left\";\n\n\t\tvar sz = this.fontsz;\n\t\tctx.textBaseline = \"middle\";\n\t\t//ctx.translate(CborderSize, CborderSize);\n\t\t//ctx.scale(xs, ys);\n\t\tif (lineWidth > 0) {\n\t\t\tctx.strokeStyle = strokeColStr;\n\t\t\tctx.fillStyle = colStr;\n\t\t\tctx.lineWidth = lineWidth;\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\n\t\t\tif (ctx.fillAndStrokeText) {\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\n\t\t\t} else {\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\n\t\t\t\tctx.fillText(char, 0, sz / 2);\n\t\t\t}\n\t\t} else if (colStr) {\n\t\t\tctx.fillStyle = colStr;\n\t\t\tctx.fillText(char, 0, sz / 2);\n\t\t}\n\t\tif (this.showDbgInfo) {\n\t\t\tctx.strokeStyle = '#ff0000';\n\t\t\tctx.strokeRect(0, 0, w, h);\n\t\t\tctx.strokeStyle = '#00ff00';\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\n\t\t}\n\t\tctx.restore();\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\n\t\treturn CharRender_Canvas.canvas;\n\t}\n}\n\n","import { CharRenderInfo } from \"./CharRenderInfo\";\nimport { ICharRender } from \"./ICharRender\"\nimport { ColorUtils } from \"../../utils/ColorUtils\"\nexport class CharRender_Native extends ICharRender {\n\tprivate lastFont: string = '';\n\tprivate lastScaleX: number = 1.0;\n\tprivate lastScaleY: number = 1.0;\n\n\t//TODO:coverage\n\tconstructor() {\n\t\tsuper();\n\n\t}\n\n\t/**\n\t * \n\t * @param font \n\t * @param str \n\t * @override\n\t */\n\t getWidth(font: string, str: string): number {\n\t\tif (!(window as any).conchTextCanvas) return 0;\n\t\t//TODO 先取消判断，保证字体信息一致\n\t\t//if (lastFont != font) { \n\t\t(window as any).conchTextCanvas.font = font;\n\t\tthis.lastFont = font;\n\t\t//console.log('use font ' + font);\n\t\t//}\t\t\t\t\t\n\t\t//getTextBitmapData\n\t\treturn (window as any).conchTextCanvas.measureText(str).width;\n\t}\n\n\t/**\n\t * \n\t * @param sx \n\t * @param sy \n\t * @override\n\t */\n\tscale(sx: number, sy: number): void {\n\t\tthis.lastScaleX = sx;\n\t\tthis.lastScaleY = sy;\n\t}\n\t/**\n\t *TODO stroke \n\t * @param\tchar\n\t * @param\tfont\n\t * @param\tsize  返回宽高\n\t * @return\n\t * @override\n\t */\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo,\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData|null {\n\n\t\tif (!(window as any).conchTextCanvas) return null;\n\t\t//window.conchTextCanvas.getTextBitmapData();\n\n\t\t//TODO 先取消判断，保证字体信息一致\n\t\t//if(lastFont!=font){\n\t\t(window as any).conchTextCanvas.font = font;\n\t\tthis.lastFont = font;\n\t\t//}\t\t\t\t\t\t\n\t\tvar w: number = size.width = (window as any).conchTextCanvas.measureText(char).width;\n\t\tvar h: number = size.height;\n\t\tw += (margin_left + margin_right);\n\t\th += (margin_top + margin_bottom);\n\n\t\t(window as any).conchTextCanvas.scale && (window as any).conchTextCanvas.scale(this.lastScaleX, this.lastScaleY);\n\n\t\tvar c1: ColorUtils = ColorUtils.create(strokeColStr);\n\t\tvar nStrokeColor: number = c1.numColor;\n\t\tvar c2: ColorUtils = ColorUtils.create(colStr);\n\t\tvar nTextColor: number = c2.numColor;\n\t\tvar textInfo: any = (window as any).conchTextCanvas.getTextBitmapData(char, nTextColor, lineWidth > 2 ? 2 : lineWidth, nStrokeColor);\n\t\t//window.Laya.LayaGL.instance.texSubImage2D(1,2,0,0,textInfo.width,textInfo.height,0,0,textInfo.bitmapData);\n\t\t//var ret = new ImageData();\n\t\tsize.bmpWidth = textInfo.width;\n\t\tsize.bmpHeight = textInfo.height;\n\t\treturn textInfo;\n        /*\n        ctx.clearRect(0,0, w, h);\n        //ctx.textAlign = \"end\";\n        ctx.textBaseline = \"top\";\n        if (lineWidth > 0) { \n            ctx.strokeStyle = colStr;\n            ctx.lineWidth = lineWidth;\n            ctx.strokeText(char, margin_left, margin_top);\n        } else {\n            ctx.fillStyle = colStr;\n            ctx.fillText(char, margin_left, margin_top);\n        }\n        if ( CharBook.debug) {\n            ctx.strokeStyle = '#ff0000';\n            ctx.strokeRect(0, 0, w, h);\n            ctx.strokeStyle = '#00ff00';\n            ctx.strokeRect(margin_left, margin_top, size.width, size.height);\n        }\n        //ctx.restore();\n        return ctx.getImageData( 0,0, w, h );\n        */\n\t}\n}\n\n","import { TextAtlas } from \"./TextAtlas\";\nimport { TextTexture } from \"./TextTexture\";\nimport { Sprite } from \"../../display/Sprite\"\nimport { Point } from \"../../maths/Point\"\nimport { RenderInfo } from \"../../renders/RenderInfo\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { FontInfo } from \"../../utils/FontInfo\"\nimport { HTMLChar } from \"../../utils/HTMLChar\"\nimport { WordText } from \"../../utils/WordText\"\nimport { CharRenderInfo } from \"./CharRenderInfo\"\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\nimport { CharRender_Native } from \"./CharRender_Native\"\nimport { ICharRender } from \"./ICharRender\"\nimport { ILaya } from \"../../../ILaya\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { Const } from \"../../Const\";\n\nexport class TextRender {\n    //config\n    static useOldCharBook = false;\n    static atlasWidth = 1024;\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\n    static forceWholeRender = false; \t// 强制整句话渲染\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\n    static isWan1Wan = false;\n    static showLog = false;\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\n    //config\n\n    /**\n     * fontSizeInfo\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\n     */\n    private fontSizeInfo: any = {};\n    static atlasWidth2: number;\n    private charRender: ICharRender;\n    private static tmpRI: CharRenderInfo = new CharRenderInfo();\n    private static pixelBBX: number[] = [0, 0, 0, 0];\n    private mapFont: any = {};\t\t// 把font名称映射到数字\n    private fontID: number = 0;\n\n    private fontScaleX: number = 1.0;\t\t\t\t\t\t//临时缩放。\n    private fontScaleY: number = 1.0;\n\n    //private var charMaps:Object = {};\t// 所有的都放到一起\n\n    private _curStrPos: number = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\n    static textRenderInst: TextRender;\t//debug\n\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\n\n    private bmpData32: Uint32Array;\n    private static imgdtRect: any[] = [0, 0, 0, 0];\n\n    // 当前字体的测量信息。\n    private lastFont: FontInfo | null = null;\n    private fontSizeW: number = 0;\n    private fontSizeH: number = 0;\n    private fontSizeOffX: number = 0;\n    private fontSizeOffY: number = 0;\n\n    private renderPerChar: boolean = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\n    private tmpAtlasPos: Point = new Point();\n    private textureMem: number = 0; \t\t\t// 当前贴图所占用的内存\n    private fontStr: string;\t\t\t\t\t// 因为要去掉italic，所以自己保存一份\n    static simClean: boolean = false;\t\t\t\t// 测试用。强制清理占用低的图集\n\n    constructor() {\n        var bugIOS = false;//是否是有bug的ios版本\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\n            //12.3\n        }\n        if ((ILaya.Browser.onMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) /*&& !Browser.onAndroid*/ && !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\n        //TextRender.isWan1Wan = true;\n        this.charRender = LayaEnv.isConch ? (new CharRender_Native()) : (new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false));\n        TextRender.textRenderInst = this;\n        ILaya.Laya['textRender'] = this;\n        TextRender.atlasWidth2 = TextRender.atlasWidth * TextRender.atlasWidth;\n        //TEST\n        //forceSplitRender = true;\n        //noAtlas = true;\n        //forceWholeRender = true;\n        //TEST\n    }\n\n    /**\n     * 设置当前字体，获得字体的大小信息。\n     * @param\tfont\n     */\n    setFont(font: FontInfo): void {\n        if (this.lastFont == font) return;\n        this.lastFont = font;\n        var fontsz = this.getFontSizeInfo(font._family);\n        var offx = fontsz >> 24\n        var offy = (fontsz >> 16) & 0xff;\n        var fw = (fontsz >> 8) & 0xff;\n        var fh = fontsz & 0xff;\n        var k = font._size / TextRender.standardFontSize;\n        this.fontSizeOffX = Math.ceil(offx * k);\n        this.fontSizeOffY = Math.ceil(offy * k);\n        this.fontSizeW = Math.ceil(fw * k);\n        this.fontSizeH = Math.ceil(fh * k);\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\n            this.fontStr = font._font.replace('italic', '');\n        } else {\n            this.fontStr = font._font;\n        }\n    }\n\n    /**\n     * 从string中取出一个完整的char，例如emoji的话要多个\n     * 会修改 _curStrPos\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\n     * @param\tstr\n     * @param\tstart\t开始位置\n     */\n    getNextChar(str: string): string | null {\n        var len = str.length;\n        var start = this._curStrPos;\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\n        if (start >= len)\n            return null;\n\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\n        var i = start;\n        var state = 0; //0 初始化 1  正常 2 连续中\n        for (; i < len; i++) {\n            var c = str.charCodeAt(i);\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\n                if (state == 1) break;//新的字符了，要截断\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\n                i++;\t//跨过一个。\n            }\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\n                // 继续。不改变状态\n            }\n            else if (c == 0x200d) {\t\t//zero width joiner\n                state = 2; \t// 继续\n            } else {\n                if (state == 0) state = 1;\n                else if (state == 1) break;\n                else if (state == 2) {\n                    // 继续\n                }\n            }\n        }\n        this._curStrPos = i;\n        return str.substring(start, i);\n    }\n\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string, underLine: number = 0): void {\n        if (data.length <= 0)\n            return;\n        //以后保存到wordtext中\n        var font = FontInfo.Parse(fontStr);\n\n        var nTextAlign = 0;\n        switch (textAlign) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        this._fast_filltext(ctx, (<WordText>data), null, x, y, font, color, strokeColor, lineWidth, nTextAlign, underLine);\n    }\n\n    fillWords(ctx: Context, data: HTMLChar[], x: number, y: number, fontStr: string | FontInfo, color: string, strokeColor: string | null, lineWidth: number): void {\n        if (!data) return;\n        if (data.length <= 0) return;\n        var font = typeof (fontStr) === 'string' ? FontInfo.Parse(fontStr) : fontStr;\n        this._fast_filltext(ctx, null, data, x, y, font, color, strokeColor, lineWidth, 0, 0);\n    }\n\n    _fast_filltext(ctx: Context, data: string | WordText | null, htmlchars: HTMLChar[] | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\n        if (htmlchars && htmlchars.length < 1) return;\n        if (lineWidth < 0) lineWidth = 0;\n        this.setFont(font);\n        this.fontScaleX = this.fontScaleY = 1.0;\n        if (TextRender.scaleFontWithCtx) {\n            var sx = 1;\n            var sy = 1;\n\n            if (!LayaEnv.isConch || ((window as any).conchTextCanvas.scale)) {\n                sx = ctx.getMatScaleX();\n                sy = ctx.getMatScaleY();\n            }\n\n            if (sx < 1e-4 || sy < 1e-1)\n                return;\n            if (sx > 1) this.fontScaleX = sx;\n            if (sy > 1) this.fontScaleY = sy;\n        }\n\n        font._italic && (ctx._italicDeg = 13);\n        //准备bmp\n        //拷贝到texture上,得到一个gltexture和uv\n        var wt = <WordText>data;\n        var isWT = !htmlchars && (data instanceof WordText);\n        var str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\n        var isHtmlChar = !!htmlchars;\n        /**\n         * sameTexData \n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\n         */\n        var sameTexData: any[] = isWT ? wt.pageChars : [];\n\n        //总宽度，下面的对齐需要\n        var strWidth = 0;\n        if (isWT) {\n            str = wt._text;\n            strWidth = wt.width;\n            if (strWidth < 0) {\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\n            }\n        } else {\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\n        }\n\n        //水平对齐方式\n        switch (textAlign) {\n            case Const.ENUM_TEXTALIGN_CENTER:\n                x -= strWidth / 2;\n                break;\n            case Const.ENUM_TEXTALIGN_RIGHT:\n                x -= strWidth;\n                break;\n        }\n\n        //检查保存的数据是否有的已经被释放了\n        if (wt && sameTexData) {\t// TODO 能利用lastGCCnt么\n            //wt.lastGCCnt = _curPage.gcCnt;\n            if (this.hasFreedText(sameTexData)) {\n                sameTexData = wt.pageChars = [];\n            }\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\n            // \t// 文字缩放要清理缓存\n            // \tsameTexData = wt.pageChars = [];\n            // }\n        }\n        var ri: CharRenderInfo = null;\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\n        var splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || isHtmlChar || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\n        if (!sameTexData || sameTexData.length < 1) {\n            if (isWT) {\n                wt.scalex = this.fontScaleX;\n                wt.scaley = this.fontScaleY;\n            }\n            // 重新构建缓存的贴图信息\n            // TODO 还是要ctx.scale么\n            if (splitTex) {\n                // 如果要拆分字符渲染\n                var stx = 0;\n                var sty = 0;\n\n                this._curStrPos = 0;\n                var curstr: string | null;\n                while (true) {\n                    if (htmlchars) {\n                        var chc = htmlchars[this._curStrPos++];\n                        if (chc) {\n                            curstr = chc.char;\n                            stx = chc.x;\n                            sty = chc.y;\n                        } else {\n                            curstr = null;\n                        }\n                    } else {\n                        curstr = this.getNextChar(str);\n                    }\n                    if (!curstr)\n                        break;\n                    ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\n                    if (!ri) {\n                        // 没有分配到。。。\n                        break;\n                    }\n                    if (ri.isSpace) {\t// 空格什么都不做\n                    } else {\n                        //分组保存\n                        var add = sameTexData[ri.tex.id];\n                        if (!add) {\n                            var o1 = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: new Array() };\t// 根据genid来减少是否释放的判断量\n                            sameTexData[ri.tex.id] = o1;\n                            add = o1.words;\n                        } else {\n                            add = add.words;\n                        }\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\n                        stx += ri.width;\t// TODO 缩放\n                    }\n                }\n\n            } else {\n                // 如果要整句话渲染\n                var margin = LayaEnv.isConch ? 0 : (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\n                var isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\n                ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\n                // 整句渲染，则只有一个贴图\n                sameTexData[0] = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\n            }\n\n            //TODO getbmp 考虑margin 字体与标准字体的关系\n        }\n\n        this._drawResortedWords(ctx, x, y, sameTexData);\n        ctx._italicDeg = 0;\n    }\n\n    /**\n     * 画出重新按照贴图顺序分组的文字。\n     * @param\tsamePagesData\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\n     */\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: any[]): void {\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\n        var mat = ctx._curMat;\n        //var slen = samePagesData.length;\n        //for (var id = 0; id < slen; id++) {\n        for (var id in samePagesData) {// TODO samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt;\n            // TODO 想个更好的方法\n            var dt = samePagesData[id];\n            if (!dt) continue;\n            var pri: any[] = dt.words;\n            var pisz = pri.length; if (pisz <= 0) continue;\n            var tex = ((<TextTexture>samePagesData[id].tex));\n            for (var j = 0; j < pisz; j++) {\n                var riSaved: any = pri[j];\n                var ri: CharRenderInfo = riSaved.ri;\n                if (ri.isSpace) continue;\n                ri.touch();\n                ctx.drawTexAlign = true;\n                //ctx._drawTextureM(ri.tex.texture as Texture, startx +riSaved.x -ri.orix / fontScaleX , starty + riSaved.y -ri.oriy / fontScaleY , riSaved.w, riSaved.h, null, 1.0, ri.uv);\n                if (LayaEnv.isConch) {\n                    ctx._drawTextureM((<Texture>tex.texture), startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h, null, 1.0, ri.uv);\n                } else {\n                    let t = tex as TextTexture;\n                    ctx._inner_drawTexture(t.texture, t.id,\n                        startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\n                        mat, ri.uv, 1.0, isLastRender);\n                }\n\n                if ((<any>ctx).touches) {\n                    (<any>ctx).touches.push(ri);\n                }\n            }\n        }\n        //不要影响别人\n        //ctx._curSubmit._key.other = -1;\n    }\n\n    /**\n     * 检查 txts数组中有没有被释放的资源\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\n     * @param\tstartid\n     * @return\n     */\n    hasFreedText(txts: any[]): boolean {\n        for (let i in txts) {\n            var pri = txts[i];\n            if (!pri) continue;\n            var tex = (<TextTexture>pri.tex);\n            if (tex.destroyed || tex.genID != pri.texgen) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\n        var fid = this.mapFont[font._family];\n        if (fid == undefined) {\n            this.mapFont[font._family] = fid = this.fontID++;\n        }\n        /*\n        var cid:int = mapColor[color];\n        if (cid == undefined) {\n            mapColor[color] = cid = colorID++;\n        }\n        var scid:int = mapColor[strokeColor];\n        */\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\n        if (lineWidth > 0)\n            key += '_' + strokeColor! + lineWidth;\n        if (font._bold)\n            key += 'P';\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\n        }\n\n        var i = 0;\n        // 遍历所有的大图集看是否存在\n        var sz = this.textAtlases.length;\n        var ri: CharRenderInfo;\n        var atlas: TextAtlas;\n        if (!isoTexture) {\n            for (i = 0; i < sz; i++) {\n                atlas = this.textAtlases[i];\n                ri = atlas.charMaps[key]\n                if (ri) {\n                    ri.touch();\n                    return ri;\n                }\n            }\n        }\n        // 没有找到，要创建一个\n        ri = new CharRenderInfo();\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\n        ri.char = str;\n        ri.height = font._size;\n        var margin = LayaEnv.isConch ? 0 : (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\n        // 如果不存在，就要插入已有的，或者创建新的\n        var imgdt: ImageData | null = null;\n        // 先大约测量文字宽度 \n\n        if (!lineWidth) {\n            lineWidth = 0;\n        }\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\n        if (w1 > this.charRender.canvasWidth) {\n            this.charRender.canvasWidth = Math.min(2048, w1 + margin * 2);\n        }\n        if (isoTexture) {\n            // 独立贴图\n            this.charRender.fontsz = font._size;\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\n            // 这里可以直接\n            if (imgdt) {\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\n                tex.addChar(imgdt, 0, 0, ri.uv);\n                ri.tex = tex;\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\n                ri.oriy = margin;\n                tex.ri = ri;\n                this.isoTextures.push(tex);\n            }\n        } else {\n            // 大图集\n            var len = str.length;\n            if (len > 1) {\n                // emoji或者组合的\n            }\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\n            if (this.renderPerChar || len == 1) {\n                // 单个字符的处理\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\n            } else {\n                // 多个字符的处理\n                TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\n            }\n            this.charRender.fontsz = font._size;\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\n                margin, margin, margin, margin, TextRender.imgdtRect);\n            if (imgdt) {\n                atlas = this.addBmpData(imgdt, ri);\n                if (TextRender.isWan1Wan) {\n                    // 这时候 imgdtRect 是不好使的，要自己设置\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\n                    ri.oriy = margin;\n                } else {\n                    // 取下来的imagedata的原点在哪\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\n                    ri.oriy = (this.fontSizeOffY + lineExt);\n                }\n                atlas.charMaps[key] = ri;\n            }\n        }\n        return ri;\n    }\n\n    /**\n     * 添加数据到大图集\n     * @param\tw\n     * @param\th\n     * @return\n     */\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\n        var w = data.width;\n        var h = data.height;\n        var sz = this.textAtlases.length;\n        var atlas: TextAtlas;\n        var find = false;\n        for (var i = 0; i < sz; i++) {\n            atlas = this.textAtlases[i];\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\n            if (find) {\n                break;\n            }\n        }\n        if (!find) {\n            // 创建一个新的\n            atlas = new TextAtlas()\n            this.textAtlases.push(atlas);\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\n            if (!find) {\n                throw 'err1'; //TODO\n            }\n            // 清理旧的\n            this.cleanAtlases();\n        }\n        if (find) {\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\n            ri.tex = atlas.texture;\n        }\n        return atlas;\n    }\n\n    /**\n     * 清理利用率低的大图集\n     */\n    GC(): void {\n        var i = 0;\n        var sz = this.textAtlases.length;\n        var dt = 0;\n        var destroyDt = TextRender.destroyAtlasDt;\n        var totalUsedRate = 0;\t// 总使用率\n        var totalUsedRateAtlas = 0;\n        var curloop = RenderInfo.loopCount;\n\n        //var minUsedRateID:int = -1;\n        //var minUsedRate:Number = 1;\n        var maxWasteRateID = -1;\n        var maxWasteRate = 0;\n        var tex: TextTexture = null;\n        var curatlas: TextAtlas = null;\n        // 图集的清理\n        for (; i < sz; i++) {\n            curatlas = this.textAtlases[i];\n            tex = curatlas.texture;\n            if (tex) {\n                totalUsedRate += tex.curUsedCovRate;\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\n                // 浪费掉的图集\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\n                // 记录哪个图集浪费的最多\n                if (maxWasteRate < waste) {\n                    maxWasteRate = waste;\n                    maxWasteRateID = i;\n                }\n                /*\n                if (minUsedRate > tex.curUsedCovRate) {\n                    minUsedRate = tex.curUsedCovRate;\n                    minUsedRateID = i;\n                }\n                */\n            }\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\n            // 可能同时会有多个图集被回收\n            dt = curloop - curatlas.texture.lastTouchTm;\n            if (dt > destroyDt) {\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\n                curatlas.destroy();\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\n                sz--;\n                i--;\n                maxWasteRateID = -1;\n            }\n        }\n        // 缩减图集数组的长度\n        this.textAtlases.length = sz;\n\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\n        sz = this.isoTextures.length;\n        for (i = 0; i < sz; i++) {\n            tex = this.isoTextures[i];\n            dt = curloop - tex.lastTouchTm;\n            if (dt > TextRender.destroyUnusedTextureDt) {\n                tex.ri.deleted = true;\n                tex.ri.tex = null;\n                // 直接删除，不回收\n                tex.destroy();\n                this.isoTextures[i] = this.isoTextures[sz - 1];\n                sz--;\n                i--;\n            }\n        }\n        this.isoTextures.length = sz;\n\n        // 如果超出内存需要清理不常用\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\n            TextRender.simClean = false;\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\n            if (maxWasteRateID >= 0) {\n                curatlas = this.textAtlases[maxWasteRateID];\n                curatlas.destroy();\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\n                this.textAtlases.length = this.textAtlases.length - 1;\n            }\n        }\n\n        TextTexture.clean();\n    }\n\n    /**\n     * 尝试清理大图集\n     */\n    cleanAtlases(): void {\n        // TODO 根据覆盖率决定是否清理\n    }\n\n    getCharBmp(c: string): any {\n\n    }\n\n    /**\n     * 检查当前线是否存在数据\n     * @param\tdata\n     * @param\tl\n     * @param\tsx\n     * @param\tex\n     * @return\n     */\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\n        if (this.bmpData32.buffer != data.data.buffer) {\n            this.bmpData32 = new Uint32Array(data.data.buffer);\n        }\n        var stpos = data.width * l + sx;\n        for (var x = sx; x < ex; x++) {\n            if (this.bmpData32[stpos++] != 0) return true;\n        }\n        return false;\n    }\n\n    /**\n     * 根据bmp数据和当前的包围盒，更新包围盒\n     * 由于选择的文字是连续的，所以可以用二分法\n     * @param\tdata\n     * @param\tcurbbx \t[l,t,r,b]\n     * @param   onlyH 不检查左右\n     */\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\n        var w = data.width;\n        var h = data.height;\n        var x = 0;\n        // top\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\n        var ey = 0;\n        var y = sy;\n        if (this.checkBmpLine(data, sy, 0, w)) {\n            // 如果当前行有数据，就要往上找\n            while (true) {\n                y = (sy + ey) / 2 | 0;\t// 必须是int\n                if (y + 1 >= sy) {// \n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\n                    curbbx[1] = y;\n                    break;\n                }\n                if (this.checkBmpLine(data, y, 0, w)) {\n                    //中间线有数据，搜索上半部分\n                    sy = y;\n                } else {\n                    //中间线没有有数据，搜索下半部分\n                    ey = y;\n                }\n            }\n        }\n        // 下半部分\n        if (curbbx[3] > h) curbbx[3] = h;\n        else {\n            y = sy = curbbx[3];\n            ey = h;\n            if (this.checkBmpLine(data, sy, 0, w)) {\n                while (true) {\n                    y = (sy + ey) / 2 | 0;\n                    if (y - 1 <= sy) {\n                        curbbx[3] = y;\n                        break;\n                    }\n                    if (this.checkBmpLine(data, y, 0, w)) {\n                        sy = y;\n                    } else {\n                        ey = y;\n                    }\n                }\n            }\n        }\n\n        if (onlyH)\n            return;\n\n        // 左半部分\n        var minx = curbbx[0];\n        var stpos = w * curbbx[1]; //w*cy+0\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\n            for (x = 0; x < minx; x++) {\n                if (this.bmpData32[stpos + x] != 0) {\n                    minx = x;\n                    break;\n                }\n            }\n            stpos += w;\n        }\n        curbbx[0] = minx;\n        // 右半部分\n        var maxx = curbbx[2];\n        stpos = w * curbbx[1]; //w*cy\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\n            for (x = maxx; x < w; x++) {\n                if (this.bmpData32[stpos + x] != 0) {\n                    maxx = x;\n                    break;\n                }\n            }\n            stpos += w;\n        }\n        curbbx[2] = maxx;\n    }\n\n    getFontSizeInfo(font: string): number {\n        var finfo: any = this.fontSizeInfo[font];\n        if (finfo != undefined)\n            return finfo;\n\n        var fontstr: string = 'bold ' + TextRender.standardFontSize + 'px ' + font;\n        if (TextRender.isWan1Wan) {\n            // 这时候无法获得imagedata，只能采取保险测量\n            this.fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\n            this.fontSizeH = TextRender.standardFontSize * 1.5;\n            var szinfo: number = this.fontSizeW << 8 | this.fontSizeH;\n            this.fontSizeInfo[font] = szinfo;\n            return szinfo;\n        }\n        // bbx初始大小\n        TextRender.pixelBBX[0] = TextRender.standardFontSize / 2;// 16;\n        TextRender.pixelBBX[1] = TextRender.standardFontSize / 2;// 16;\n        TextRender.pixelBBX[2] = TextRender.standardFontSize;// 32;\n        TextRender.pixelBBX[3] = TextRender.standardFontSize;// 32;\n\n        var orix: number = 16;\t\t// 左边留白，也就是x原点的位置\n        var oriy: number = 16;\n        var marginr: number = 16;\n        var marginb: number = 16;\n        this.charRender.scale(1, 1);\n        TextRender.tmpRI.height = TextRender.standardFontSize;\n        this.charRender.fontsz = TextRender.standardFontSize;\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, TextRender.tmpRI, orix, oriy, marginr, marginb);\n        // native 返回的是 textBitmap。 data直接是ArrayBuffer \n        if (LayaEnv.isConch) {\n            //bmpdt.data.buffer = bmpdt.data;\n            (bmpdt as any).data = new Uint8ClampedArray(bmpdt.data);\n        }\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\n        //测量宽度是 tmpRI.width\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, TextRender.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\n        if (LayaEnv.isConch) {\n            //bmpdt.data.buffer = bmpdt.data;\n            (bmpdt as any).data = new Uint8ClampedArray(bmpdt.data);\n        }\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\n        // 国字的宽度就用系统测量的，不再用像素检测\n        if (TextRender.pixelBBX[2] < orix + TextRender.tmpRI.width)\n            TextRender.pixelBBX[2] = orix + TextRender.tmpRI.width;\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);//TODO 改成 true\n        // 原点在 16,16\n        if (LayaEnv.isConch) {\n            //runtime 的接口好像有问题，不认orix，oriy\n            orix = 0;\n            oriy = 0;\n        }\n        var xoff = Math.max(orix - TextRender.pixelBBX[0], 0);\n        var yoff = Math.max(oriy - TextRender.pixelBBX[1], 0);\n        var bbxw = TextRender.pixelBBX[2] - TextRender.pixelBBX[0];\n        var bbxh = TextRender.pixelBBX[3] - TextRender.pixelBBX[1];\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\n        this.fontSizeInfo[font] = sizeinfo;\n        return sizeinfo;\n    }\n\n    printDbgInfo(): void {\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\n        console.log('缓存用到的字体:');\n        for (var f in this.mapFont) {\n            var fontsz = this.getFontSizeInfo(f);\n            var offx = fontsz >> 24\n            var offy = (fontsz >> 16) & 0xff;\n            var fw = (fontsz >> 8) & 0xff;\n            var fh = fontsz & 0xff;\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\n        }\n        var num = 0;\n        console.log('缓存数据:');\n        var totalUsedRate = 0;\t// 总使用率\n        var totalUsedRateAtlas = 0;\n        this.textAtlases.forEach(function (a: TextAtlas): void {\n            var id = a.texture.id;\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\n            totalUsedRate += a.texture.curUsedCovRate;\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\n            for (var k in a.charMaps) {\n                var ri: CharRenderInfo = a.charMaps[k];\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\n                    '字符:', ri.char, 'key:', k);\n                num++;\n            }\n        });\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\n        this.isoTextures.forEach(function (tex: TextTexture): void {\n            console.log('    size:', tex._texW, tex._texH, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\n        });\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\n\n    }\n\n    // 在屏幕上显示某个大图集\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\n        if (!this.textAtlases[n]) {\n            console.log('没有这个图集');\n            return null;\n        }\n        var sp = new Sprite();\n        var texttex = this.textAtlases[n].texture;\n        var texture: any = {\n            width: TextRender.atlasWidth,\n            height: TextRender.atlasWidth,\n            sourceWidth: TextRender.atlasWidth,\n            sourceHeight: TextRender.atlasWidth,\n            offsetX: 0,\n            offsetY: 0,\n            getIsReady: function (): boolean { return true; },\n            _addReference: function (): void { },\n            _removeReference: function (): void { },\n            _getSource: function (): any { return texttex._getSource(); },\n            bitmap: { id: texttex.id },\n            _uv: Texture.DEF_UV\n        };\n        ((<any>sp)).size = function (w: number, h: number): Sprite {\n            this.width = w;\n            this.height = h;\n            sp.graphics.clear();\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\n            sp.graphics.drawTexture((<Texture>texture), 0, 0, sp.width, sp.height);\n            return (<Sprite>this);\n        }\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\n        sp.graphics.drawTexture((<Texture>texture), 0, 0, w, h);\n        sp.pos(x, y);\n        ILaya.stage.addChild(sp);\n        return sp;\n    }\n\n    /////// native ///////\n    filltext_native(ctx: Context, data: string | WordText, htmlchars: HTMLChar[], x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string, underLine: number = 0): void {\n        if (data && data.length <= 0) return;\n        if (htmlchars && htmlchars.length < 1) return;\n\n        var font = FontInfo.Parse(fontStr);\n\n        var nTextAlign = 0;\n        switch (textAlign) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        return this._fast_filltext(ctx, (<WordText>data), htmlchars, x, y, font, color, strokeColor, lineWidth, nTextAlign, underLine);\n    }\n}","/**\n * <code>MathUtils3D</code> 类用于创建数学工具。\n */\nexport class MathUtils3D {\n\t/**单精度浮点(float)零的容差*/\n\tstatic zeroTolerance: number = 1e-6;\n\t/**浮点数默认最大值*/\n\tstatic MaxValue: number = 3.40282347e+38;\n\t/**浮点数默认最小值*/\n\tstatic MinValue: number = -3.40282347e+38;\n\t/**角度转弧度系数*/\n\tstatic Deg2Rad: number = Math.PI / 180;\n\n\t/**\n\t * 创建一个 <code>MathUtils</code> 实例。\n\t */\n\tconstructor() {\n\n\t}\n\n\t/**\n\t * 是否在容差的范围内近似于0\n\t * @param  判断值\n\t * @return  是否近似于0\n\t */\n\tstatic isZero(v: number): boolean {\n\t\treturn Math.abs(v) < MathUtils3D.zeroTolerance;\n\t}\n\n\t/**\n\t * 两个值是否在容差的范围内近似相等Sqr Magnitude\n\t * @param  判断值\n\t * @return  是否近似于0\n\t */\n\tstatic nearEqual(n1: number, n2: number): boolean {\n\t\tif (MathUtils3D.isZero(n1 - n2))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tstatic fastInvSqrt(value: number): number {\n\t\tif (MathUtils3D.isZero(value))\n\t\t\treturn value;\n\t\treturn 1.0 / Math.sqrt(value);\n\t}\n}\n\n\n","import { IClone } from \"../utils/IClone\";\n\n\n/**\n * <code>Vector2</code> 类用于创建二维向量。\n */\nexport class Vector2 implements IClone {\n    /**零向量,禁止修改*/\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\n    /**一向量,禁止修改*/\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n\n    /**\n     * 创建一个 <code>Vector2</code> 实例。\n     * @param\tx  X轴坐标。\n     * @param\ty  Y轴坐标。\n     */\n    constructor(x: number = 0, y: number = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    /**\n     * 设置xy值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     */\n    setValue(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * 缩放二维向量。\n     * @param\ta 源二维向量。\n     * @param\tb 缩放值。\n     * @param\tout 输出二维向量。\n     */\n    static scale(a: Vector2, b: number, out: Vector2): void {\n        out.x = a.x * b;\n        out.y = a.y * b;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  array 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\n        this.x = array[offset + 0];\n        this.y = array[offset + 1];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.x, this.y];\n    }\n\n    /**\n     * 写入Float32Array数组\n     * @param array 数组。\n     * @param offset 数组偏移。 \n     */\n    writeTo(array: Float32Array, offset: number = 0): void {\n        array[offset + 0] = this.x;\n        array[offset + 1] = this.y;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destVector2: Vector2 = (<Vector2>destObject);\n        destVector2.x = this.x;\n        destVector2.y = this.y;\n    }\n\n    /**\n     * 求两个二维向量的点积。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @return   点积。\n     */\n    static dot(a: Vector2, b: Vector2): number {\n        return (a.x * b.x) + (a.y * b.y);\n    }\n\n    /**\n     * 归一化二维向量。\n     * @param\ts 源三维向量。\n     * @param\tout 输出三维向量。\n     */\n    static normalize(s: Vector2, out: Vector2): void {\n        var x: number = s.x, y: number = s.y;\n        var len: number = x * x + y * y;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            out.x = x * len;\n            out.y = y * len;\n        }\n    }\n\n    /**\n     * 计算标量长度。\n     * @param\ta 源三维向量。\n     * @return 标量长度。\n     */\n    static scalarLength(a: Vector2): number {\n        var x: number = a.x, y: number = a.y;\n        return Math.sqrt(x * x + y * y);\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var destVector2: Vector2 = new Vector2();\n        this.cloneTo(destVector2);\n        return destVector2;\n    }\n\n    forNativeElement(nativeElements: Float32Array | null = null): void//[NATIVE_TS]\n    {\n        if (nativeElements) {\n            (<any>this).elements = nativeElements;\n            (<any>this).elements[0] = this.x;\n            (<any>this).elements[1] = this.y;\n        }\n        else {\n            (<any>this).elements = new Float32Array([this.x, this.y]);\n        }\n        Vector2.rewriteNumProperty(this, \"x\", 0);\n        Vector2.rewriteNumProperty(this, \"y\", 1);\n    }\n\n    static rewriteNumProperty(proto: any, name: string, index: number): void {\n        Object[\"defineProperty\"](proto, name, {\n            \"get\": function (): any {\n                return this.elements[index];\n            },\n            \"set\": function (v: any): void {\n                this.elements[index] = v;\n            }\n        });\n    }\n\n}\n\n","import { Matrix4x4 } from \"./Matrix4x4\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { Vector2 } from \"./Vector2\";\nimport { IClone } from \"../utils/IClone\";\n\n/**\n * <code>Vector4</code> 类用于创建四维向量。\n */\nexport class Vector4 implements IClone {\n\n    /**零向量*/\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\n\n    /*一向量*/\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\n\n    /*X单位向量*/\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\n\n    /*Y单位向量*/\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\n\n    /*Z单位向量*/\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\n\n    /*W单位向量*/\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\n\n    /** @internal */\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n    /**Z轴坐标*/\n    z: number;\n    /**W轴坐标*/\n    w: number;\n\n    /**\n     * 创建一个 <code>Vector4</code> 实例。\n     * @param\tx  X轴坐标。\n     * @param\ty  Y轴坐标。\n     * @param\tz  Z轴坐标。\n     * @param\tw  W轴坐标。\n     */\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * 设置xyzw值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     * @param\tw W值。\n     */\n    setValue(x: number, y: number, z: number, w: number): void {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  arr 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(arr: any[], offset: number = 0): void {\n        this.x = arr[offset + 0];\n        this.y = arr[offset + 1];\n        this.z = arr[offset + 2];\n        this.w = arr[offset + 3];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    /**\n     * 写入Float32Array数组\n     * @param arr 数组。\n     * @param offset 数组偏移。 \n     */\n    writeTo(arr: Float32Array, offset: number = 0): void {\n        arr[offset + 0] = this.x;\n        arr[offset + 1] = this.y;\n        arr[offset + 2] = this.z;\n        arr[offset + 3] = this.w;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destVector4: Vector4 = (<Vector4>destObject);\n        destVector4.x = this.x;\n        destVector4.y = this.y;\n        destVector4.z = this.z;\n        destVector4.w = this.w;\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var destVector4: Vector4 = new Vector4();\n        this.cloneTo(destVector4);\n        return destVector4;\n    }\n\n    /**\n     * 插值四维向量。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @param\tt 插值比例。\n     * @param\tout 输出向量。\n     */\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\n        out.x = ax + t * (b.x - ax);\n        out.y = ay + t * (b.y - ay);\n        out.z = az + t * (b.z - az);\n        out.w = aw + t * (b.w - aw);\n    }\n\n    /**\n     * 通过4x4矩阵把一个四维向量转换为另一个四维向量\n     * @param\tvector4 带转换四维向量。\n     * @param\tM4x4    4x4矩阵。\n     * @param\tout     转换后四维向量。\n     */\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\n        var vx: number = vector4.x;\n        var vy: number = vector4.y;\n        var vz: number = vector4.z;\n        var vw: number = vector4.w;\n\n        var me: Float32Array = m4x4.elements;\n\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\n    }\n\n    /**\n     * 判断两个四维向量是否相等。\n     * @param\ta 四维向量。\n     * @param\tb 四维向量。\n     * @return  是否相等。\n     */\n    static equals(a: Vector4, b: Vector4): boolean {\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\n    }\n\n    /**\n     * 求四维向量是否相等\n     * @param value \n     * @returns \n     */\n    equal(value:Vector4){\n        return Vector4.equals(this,value);\n    }\n\n    /**\n     * 求四维向量的长度。\n     * @return  长度。\n     */\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    /**\n     * 求四维向量长度的平方。\n     * @return  长度的平方。\n     */\n    lengthSquared(): number {\n\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    }\n\n    /**\n     * 归一化四维向量。\n     * @param\ts   源四维向量。\n     * @param\tout 输出四维向量。\n     */\n    static normalize(s: Vector4, out: Vector4): void {\n        var len: number = s.length();\n        if (len > 0) {\n            var inverse: number = 1.0 / len;\n            out.x = s.x * inverse;\n            out.y = s.y * inverse;\n            out.z = s.z * inverse;\n            out.w = s.w * inverse;\n        }\n    }\n\n    /**\n     * 求两个四维向量的和。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 输出向量。\n     */\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = a.x + b.x;\n        out.y = a.y + b.y;\n        out.z = a.z + b.z;\n        out.w = a.w + b.w;\n    }\n\n    /**\n     * 求两个四维向量的差。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 输出向量。\n     */\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = a.x - b.x;\n        out.y = a.y - b.y;\n        out.z = a.z - b.z;\n        out.w = a.w - b.w;\n    }\n\n    /**\n     * 计算两个四维向量的乘积。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 输出向量。\n     */\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = a.x * b.x;\n        out.y = a.y * b.y;\n        out.z = a.z * b.z;\n        out.w = a.w * b.w;\n    }\n\n    /**\n     * 缩放四维向量。\n     * @param\ta   源四维向量。\n     * @param\tb   缩放值。\n     * @param\tout 输出四维向量。\n     */\n    static scale(a: Vector4, b: number, out: Vector4): void {\n        out.x = a.x * b;\n        out.y = a.y * b;\n        out.z = a.z * b;\n        out.w = a.w * b;\n    }\n\n    /**\n     * 求一个指定范围的四维向量\n     * @param\tvalue clamp向量\n     * @param\tmin   最小\n     * @param\tmax   最大\n     * @param   out   输出向量\n     */\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\n        var x: number = value.x;\n        var y: number = value.y;\n        var z: number = value.z;\n        var w: number = value.w;\n\n        var mineX: number = min.x;\n        var mineY: number = min.y;\n        var mineZ: number = min.z;\n        var mineW: number = min.w;\n\n        var maxeX: number = max.x;\n        var maxeY: number = max.y;\n        var maxeZ: number = max.z;\n        var maxeW: number = max.w;\n\n        x = (x > maxeX) ? maxeX : x;\n        x = (x < mineX) ? mineX : x;\n\n        y = (y > maxeY) ? maxeY : y;\n        y = (y < mineY) ? mineY : y;\n\n        z = (z > maxeZ) ? maxeZ : z;\n        z = (z < mineZ) ? mineZ : z;\n\n        w = (w > maxeW) ? maxeW : w;\n        w = (w < mineW) ? mineW : w;\n\n        out.x = x;\n        out.y = y;\n        out.z = z;\n        out.w = w;\n    }\n\n    /**\n     * 两个四维向量距离的平方。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离的平方。\n     */\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        var w: number = value1.w - value2.w;\n\n        return (x * x) + (y * y) + (z * z) + (w * w);\n    }\n\n    /**\n     * 两个四维向量距离。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离。\n     */\n    static distance(value1: Vector4, value2: Vector4): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        var w: number = value1.w - value2.w;\n\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\n    }\n\n    /**\n     * 求两个四维向量的点积。\n     * @param\ta 向量。\n     * @param\tb 向量。\n     * @return  点积。\n     */\n    static dot(a: Vector4, b: Vector4): number {\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\n    }\n\n    /**\n     * 分别取两个四维向量x、y、z的最小值计算新的四维向量。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 结果三维向量。\n     */\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = Math.min(a.x, b.x);\n        out.y = Math.min(a.y, b.y);\n        out.z = Math.min(a.z, b.z);\n        out.w = Math.min(a.w, b.w);\n    }\n\n    /**\n     * 分别取两个四维向量x、y、z的最大值计算新的四维向量。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 结果三维向量。\n     */\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = Math.max(a.x, b.x);\n        out.y = Math.max(a.y, b.y);\n        out.z = Math.max(a.z, b.z);\n        out.w = Math.max(a.w, b.w);\n    }\n\n    forNativeElement(nativeElements: Float32Array = null): void {\n        if (nativeElements) {\n            (<any>this).elements = nativeElements;\n            (<any>this).elements[0] = this.x;\n            (<any>this).elements[1] = this.y;\n            (<any>this).elements[2] = this.z;\n            (<any>this).elements[3] = this.w;\n        }\n        else {\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\n        }\n        Vector2.rewriteNumProperty(this, \"x\", 0);\n        Vector2.rewriteNumProperty(this, \"y\", 1);\n        Vector2.rewriteNumProperty(this, \"z\", 2);\n        Vector2.rewriteNumProperty(this, \"w\", 3);\n\n    }\n\n}\n\n","import { Vector4 } from \"./Vector4\";\nimport { Matrix4x4 } from \"./Matrix4x4\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { IClone } from \"../utils/IClone\";\nimport { Quaternion } from \"./Quaternion\";\n\n/**\n * <code>Vector3</code> 类用于创建三维向量。\n */\nexport class Vector3 implements IClone {\n    /**@internal\t*/\n    static _tempVector4 = new Vector4();\n\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\n\n    /**\n     * 两个三维向量距离的平方。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离的平方。\n     */\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        return (x * x) + (y * y) + (z * z);\n    }\n\n    /**\n     * 两个三维向量距离。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离。\n     */\n    static distance(value1: Vector3, value2: Vector3): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        return Math.sqrt((x * x) + (y * y) + (z * z));\n    }\n\n    /**\n     * 分别取两个三维向量x、y、z的最小值计算新的三维向量。\n     * @param\ta。\n     * @param\tb。\n     * @param\tout。\n     */\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = Math.min(a.x, b.x);\n        out.y = Math.min(a.y, b.y);\n        out.z = Math.min(a.z, b.z);\n    }\n\n    /**\n     * 分别取两个三维向量x、y、z的最大值计算新的三维向量。\n     * @param\ta a三维向量。\n     * @param\tb b三维向量。\n     * @param\tout 结果三维向量。\n     */\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = Math.max(a.x, b.x);\n        out.y = Math.max(a.y, b.y);\n        out.z = Math.max(a.z, b.z);\n    }\n\n    /**\n     * 根据四元数旋转三维向量。\n     * @param\tsource 源三维向量。\n     * @param\trotation 旋转四元数。\n     * @param\tout 输出三维向量。\n     */\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\n\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\n\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    }\n\n    /**\n     * 计算标量长度。\n     * @param\ta 源三维向量。\n     * @return 标量长度。\n     */\n    static scalarLength(a: Vector3): number {\n        var x: number = a.x, y: number = a.y, z: number = a.z;\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n\n    /**\n     * 计算标量长度的平方。\n     * @param\ta 源三维向量。\n     * @return 标量长度的平方。\n     */\n    static scalarLengthSquared(a: Vector3): number {\n        var x: number = a.x, y: number = a.y, z: number = a.z;\n        return x * x + y * y + z * z;\n    }\n\n    /**\n     * 归一化三维向量。\n     * @param\ts 源三维向量。\n     * @param\tout 输出三维向量。\n     */\n    static normalize(s: Vector3, out: Vector3): void {\n        var x: number = s.x, y: number = s.y, z: number = s.z;\n        var len: number = x * x + y * y + z * z;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            out.x = x * len;\n            out.y = y * len;\n            out.z = z * len;\n        }\n    }\n\n\n\n    /**\n     * 计算两个三维向量的乘积。\n     * @param\ta left三维向量。\n     * @param\tb right三维向量。\n     * @param\tout 输出三维向量。\n     */\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = a.x * b.x;\n        out.y = a.y * b.y;\n        out.z = a.z * b.z;\n    }\n\n    /**\n     * 缩放三维向量。\n     * @param\ta 源三维向量。\n     * @param\tb 缩放值。\n     * @param\tout 输出三维向量。\n     */\n    static scale(a: Vector3, b: number, out: Vector3): void {\n        out.x = a.x * b;\n        out.y = a.y * b;\n        out.z = a.z * b;\n    }\n\n    /**\n     * 插值三维向量。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @param\tt 插值比例。\n     * @param\tout 输出向量。\n     */\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\n        out.x = ax + t * (b.x - ax);\n        out.y = ay + t * (b.y - ay);\n        out.z = az + t * (b.z - az);\n    }\n\n    /**\n     * 通过矩阵转换一个三维向量到另外一个三维向量。\n     * @param\tvector 源三维向量。\n     * @param\ttransform  变换矩阵。\n     * @param\tresult 输出三维向量。\n     */\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\n        var intermediate: Vector4 = Vector3._tempVector4;\n        Vector3.transformV3ToV4(vector, transform, intermediate);\n        result.x = intermediate.x;\n        result.y = intermediate.y;\n        result.z = intermediate.z;\n    }\n\n    /**\n     * 通过矩阵转换一个三维向量到另外一个四维向量。\n     * @param\tvector 源三维向量。\n     * @param\ttransform  变换矩阵。\n     * @param\tresult 输出四维向量。\n     */\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\n        var vectorX: number = vector.x;\n        var vectorY: number = vector.y;\n        var vectorZ: number = vector.z;\n\n        var transformElem: Float32Array = transform.elements;\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\n    }\n\n    /**\n     * 通过法线矩阵转换一个法线三维向量到另外一个三维向量。\n     * @param\tnormal 源法线三维向量。\n     * @param\ttransform  法线变换矩阵。\n     * @param\tresult 输出法线三维向量。\n     */\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\n        var normalX: number = normal.x;\n        var normalY: number = normal.y;\n        var normalZ: number = normal.z;\n\n        var transformElem: Float32Array = transform.elements;\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\n    }\n\n    /**\n     * 通过矩阵转换一个三维向量到另外一个归一化的三维向量。\n     * @param\tvector 源三维向量。\n     * @param\ttransform  变换矩阵。\n     * @param\tresult 输出三维向量。\n     */\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\n        var coordinateX: number = coordinate.x;\n        var coordinateY: number = coordinate.y;\n        var coordinateZ: number = coordinate.z;\n\n        var transformElem: Float32Array = transform.elements;\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\n    }\n\n    /**\n     * 求一个指定范围的向量\n     * @param\tvalue clamp向量\n     * @param\tmin  最小\n     * @param\tmax  最大\n     * @param   out 输出向量\n     */\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\n        var x: number = value.x;\n        var y: number = value.y;\n        var z: number = value.z;\n\n        var mineX: number = min.x;\n        var mineY: number = min.y;\n        var mineZ: number = min.z;\n\n        var maxeX: number = max.x;\n        var maxeY: number = max.y;\n        var maxeZ: number = max.z;\n\n        x = (x > maxeX) ? maxeX : x;\n        x = (x < mineX) ? mineX : x;\n\n        y = (y > maxeY) ? maxeY : y;\n        y = (y < mineY) ? mineY : y;\n\n        z = (z > maxeZ) ? maxeZ : z;\n        z = (z < mineZ) ? mineZ : z;\n\n        out.x = x;\n        out.y = y;\n        out.z = z;\n    }\n\n    /**\n     * 求两个三维向量的和。\n     * @param\ta left三维向量。\n     * @param\tb right三维向量。\n     * @param\tout 输出向量。\n     */\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = a.x + b.x;\n        out.y = a.y + b.y;\n        out.z = a.z + b.z;\n    }\n\n    /**\n     * 求两个三维向量的差。\n     * @param\ta  left三维向量。\n     * @param\tb  right三维向量。\n     * @param\to out 输出向量。\n     */\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\n        o.x = a.x - b.x;\n        o.y = a.y - b.y;\n        o.z = a.z - b.z;\n    }\n\n    /**\n     * 求两个三维向量的叉乘。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @param\to 输出向量。\n     */\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\n        o.x = ay * bz - az * by;\n        o.y = az * bx - ax * bz;\n        o.z = ax * by - ay * bx;\n    }\n\n    /**\n     * 求两个三维向量的点积。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @return   点积。\n     */\n    static dot(a: Vector3, b: Vector3): number {\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\n    }\n\n    /**\n     * 判断两个三维向量是否相等。\n     * @param\ta 三维向量。\n     * @param\tb 三维向量。\n     * @return  是否相等。\n     */\n    static equals(a: Vector3, b: Vector3): boolean {\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\n    }\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n    /**Z轴坐标*/\n    z: number;\n\n    /**\n     * 创建一个 <code>Vector3</code> 实例。\n     * @param\tx  X轴坐标。\n     * @param\ty  Y轴坐标。\n     * @param\tz  Z轴坐标。\n     */\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /**\n     * 求四维向量是否相等\n     * @param value \n     * @returns \n     */\n    equal(value: Vector3) {\n        return Vector3.equals(this, value);\n    }\n\n    /**\n     * 设置xyz值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     */\n    setValue(x: number, y: number, z: number): Vector3 {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    /**\n     * 设置xyz值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     * @return 返回Vector3\n     */\n    set(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  arr 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(arr: any[], offset: number = 0): void {\n        this.x = arr[offset + 0];\n        this.y = arr[offset + 1];\n        this.z = arr[offset + 2];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.x, this.y, this.z];\n    }\n\n    /**\n     * 写入Array数组\n     * @param arr 数组。\n     * @param offset 数组偏移。 \n     */\n    writeTo(arr: Float32Array, offset: number = 0): void {\n        arr[offset + 0] = this.x;\n        arr[offset + 1] = this.y;\n        arr[offset + 2] = this.z;\n    }\n\n    /**\n     * 计算长度。\n     * @return 长度。\n     */\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    /**\n     * 计算平方。\n     * @return 返回向量长度的平方。\n     */\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    /**\n     * 向量相减\n     * @param b 被减向量\n     * @param out \n     * @returns \n     */\n    vsub(b: Vector3, out: Vector3) {\n        out.x = this.x - b.x;\n        out.y = this.y - b.y;\n        out.z = this.z - b.z;\n        return out;\n    }\n\n    /**\n     * 向量相加\n     * @param b 加向量\n     * @param out \n     * @returns \n     */\n    vadd(b: Vector3, out: Vector3) {\n        out.x = this.x + b.x;\n        out.y = this.y + b.y;\n        out.z = this.z + b.z;\n        return out;\n    }\n\n    /**\n     * 缩放向量\n     * @param s 缩放值\n     * @param out\n     * @returns 返回缩放向量\n     */\n    scale(s: number, out: Vector3) {\n        out.x = this.x * s;\n        out.y = this.y * s;\n        out.z = this.z * s;\n        return out;\n    }\n\n    /**\n     * 归一化向量\n     * @returns \n     */\n    normalize() {\n        let x = this.x, y = this.y, z = this.z;\n        var len = x * x + y * y + z * z;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            this.x = x * len;\n            this.y = y * len;\n            this.z = z * len;\n        }\n        return this;\n    }\n\n    /**\n     * 向量点乘\n     * @param b \n     * @returns \n     */\n    dot(b: Vector3): number {\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\n    }\n\n    /**\n     * 向量叉乘\n     * @param b \n     * @param o \n     * @returns \n     */\n    cross(b: Vector3, o: Vector3): Vector3 {\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\n        o.x = ay * bz - az * by;\n        o.y = az * bx - ax * bz;\n        o.z = ax * by - ay * bx;\n        return o;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destVector3: Vector3 = (<Vector3>destObject);\n        destVector3.x = this.x;\n        destVector3.y = this.y;\n        destVector3.z = this.z;\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var destVector3: Vector3 = new Vector3();\n        this.cloneTo(destVector3);\n        return destVector3;\n    }\n\n    /**\n     * 设置默认值\n     */\n    toDefault(): void {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n}\n\n","import { Config } from \"./Config\";\nimport { Vector3 } from \"./laya/maths/Vector3\";\n\n/**\n * <code>Config3D</code> 类用于创建3D初始化配置。\n */\nexport class Config3D {\n    /**\n     * 控制是否动态合并 \n     */\n    static enableDynamicBatch: boolean = true;\n    /**\n     * 是否静态合并 \n     */\n    static enableStaticBatch: boolean = true;\n    /** \n     * 是否开启UniformBuffer\n     */\n    static enableUniformBufferObject = true;\n    /**\n     * 设置3DRT分辨率倍数\n     */\n    static pixelRatio: number = 1;\n    /**\n     *  设置自定义分辨率\n     */\n    static customResolution: boolean = false;\n    /**\n     *  设置最大RendertexturePool缓存的值\n     */\n    static defaultCacheRTMemory: number = 256;\n    /**\n     * 默认物理功能初始化内存，单位为M。\n     */\n    static defaultPhysicsMemory: number = 16;\n    /**\n     *  是否开启多光源,如果场景不需要多光源，关闭后可提升性能。\n     */\n    static enableMultiLight: boolean = true;\n    /**\n     * 最大光源数量。\n     */\n    static maxLightCount: number = 32;\n    /**\n    * X、Y、Z轴的光照集群数量,Z值会影响Cluster接受区域光(点光、聚光)影响的数量,Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量,如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\n    */\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\n    /**\n    * 设置分辨率大小（并不是实际渲染分辨率）\n    * @param width \n    * @param height \n    */\n    static setResolution(width: number, height: number) {\n        Config3D.customResolution = true;\n        Config3D._resoluWidth = width;\n        Config3D._resoluHeight = height;\n    }\n\n    /**BVHRenderConfig */\n    /**是否使用BVH裁剪 */\n    static useBVHCull: boolean = false;\n    /**一个BVH节点最大的cell数，超过这个数会分离 */\n    static BVH_max_SpatialCount = 7;\n    /**最大BVH节点的大小 */\n    static BVH_limit_size = 32;\n    /**最小cellbuild数，如果小于这个数，不会BVH构建 */\n    static BVH_Min_Build_nums = 10\n\n\n    //----引擎内部使用,不暴露给开发者----\n    /**@internal */\n    static _uniformBlock: boolean;\n    /**@internal 设置分辨率宽度*/\n    static _resoluWidth: number = -1;\n    /**@internal 设置分辨率高度*/\n    static _resoluHeight: number = -1;\n    /**@internal*/\n    static _maxAreaLightCountPerClusterAverage: number;\n    /**@internal*/\n    static _multiLighting: boolean;\n    /** @internal是否开启视锥裁剪调试。\n     */\n    static debugFrustumCulling: boolean = false;\n}\n\nConfig.isStencil = true;","import { Config3D } from \"../../Config3D\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\nimport { BaseTexture } from \"./BaseTexture\";\n\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\n\n    // todo 记录当前 绑定 rt  位置不放在这里\n    protected static _currentActive: RenderTexture = null;\n\n    static get currentActive(): RenderTexture {\n        return RenderTexture._currentActive;\n    }\n\n    protected static _configInstance: any = {};\n    static configRenderContextInstance(value: any) {\n        RenderTexture._configInstance = value;\n    }\n\n    private static _pool: RenderTexture[] = [];\n    private static _poolMemory: number = 0;\n\n    /**\n     * 创建一个RenderTexture\n     * @param width\n     * @param height\n     * @param colorFormat\n     * @param depthFormat\n     * @param mipmap \n     * @param multiSamples \n     * @param depthTexture \n     * @param sRGB \n     * @returns \n     */\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\n\n        // todo mipmap 判断\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\n\n        let n = RenderTexture._pool.length;\n        for (let index = 0; index < n; index++) {\n            let rt = RenderTexture._pool[index];\n\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\n                rt._inPool = false;\n                let end = RenderTexture._pool[n - 1];\n                RenderTexture._pool[index] = end;\n                RenderTexture._pool.length -= 1;\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\n                return rt;\n            }\n        }\n\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\n        rt.lock = true;\n        return rt;\n    }\n\n    static recoverToPool(rt: RenderTexture): void {\n        if (rt._inPool || rt.destroyed)\n            return;\n        RenderTexture._pool.push(rt);\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\n        rt._inPool = true;\n    }\n\n    static clearPool() {\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\n            return;\n        }\n        for (var i in RenderTexture._pool) {\n            RenderTexture._pool[i].destroy();\n        }\n        RenderTexture._pool = [];\n        RenderTexture._poolMemory = 0;\n    }\n\n    /** @internal 最后绑定到主画布上的结果 此值可能为null*/\n    private static _bindCanvasRender: RenderTexture;\n    /**\n     * 绑定到主画布上的RenderTexture\n     */\n    static get bindCanvasRender(): RenderTexture {\n        return RenderTexture._bindCanvasRender;\n    }\n\n    static set bindCanvasRender(value: RenderTexture) {\n        if (value != this._bindCanvasRender)\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\n            this._bindCanvasRender = value;\n    }\n\n\n    _inPool: boolean = false;\n\n    _isCameraTarget: boolean = false;\n\n    _renderTarget: InternalRenderTarget;\n\n    private _generateDepthTexture: boolean = false;\n    public get generateDepthTexture(): boolean {\n        return this._generateDepthTexture;\n    }\n    public set generateDepthTexture(value: boolean) {\n\n        // todo  重复 设置\n        if (value && !this._depthStencilTexture) {\n            // todo  base texture format 移出构造函数\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\n            // @ts-ignore\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\n\n\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTextureInternal(TextureDimension.Tex2D, this.width, this.height, this.depthStencilFormat, false, false);\n\n            LayaGL.textureContext.setupRendertargetTextureAttachment(this._renderTarget, this._depthStencilTexture._texture);\n\n        }\n\n        this._generateDepthTexture = value;\n    }\n\n    private _depthStencilTexture: BaseTexture;\n\n    get depthStencilTexture(): BaseTexture {\n        return this._depthStencilTexture;\n    }\n\n    _generateMipmap: boolean;\n\n    get colorFormat(): RenderTargetFormat {\n        return this._renderTarget.colorFormat;\n    }\n\n    protected _depthStencilFormat: RenderTargetFormat;\n    get depthStencilFormat(): RenderTargetFormat {\n        return this._renderTarget.depthStencilFormat;\n    }\n\n    protected _multiSamples: number;\n    public get multiSamples(): number {\n        return this._renderTarget._samples;\n    }\n\n    get isCube(): boolean {\n        return this._renderTarget._isCube;\n    }\n\n    get samples(): number {\n        return this._renderTarget._samples;\n    }\n\n    get generateMipmap(): boolean {\n        return this._renderTarget._generateMipmap;\n    }\n\n    /**\n     * @param width \n     * @param height \n     * @param colorFormat \n     * @param depthFormat \n     * @param generateMipmap \n     * @param multiSamples \n     * @param generateDepthTexture \n     * @param sRGB \n     */\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\n        super(width, height, colorFormat);\n\n        this._gammaSpace = sRGB;\n\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\n\n        this._generateMipmap = generateMipmap;\n        this._multiSamples = multiSamples;\n        this._generateDepthTexture = generateDepthTexture;\n\n        // todo format \n        this._createRenderTarget();\n    }\n\n    _createRenderTarget() {\n        this._dimension = TextureDimension.Tex2D;\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\n\n        // rt 格式 宽高可能不支持\n        this._generateMipmap = this._renderTarget._generateMipmap;\n        this._texture = this._renderTarget._textures[0];\n\n        this.generateDepthTexture = this._generateDepthTexture;\n    }\n\n    //@internal\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\n        this._width = width;\n        this._height = height;\n        this._format = <TextureFormat><any>colorFormat;\n\n        this._gammaSpace = sRGB;\n\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\n\n        this._generateMipmap = generateMipmap;\n        this._multiSamples = multiSamples;\n        this._generateDepthTexture = generateDepthTexture;\n\n        this._disposeResource();\n\n        // todo format \n        this._createRenderTarget();\n    }\n\n    _start() {\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\n        if (RenderTexture._currentActive != this) {\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\n            RenderTexture._currentActive = this;\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\n        }\n    }\n\n    _end() {\n        RenderTexture._currentActive = null;\n\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\n        (this._isCameraTarget) && (RenderTexture._configInstance.invertY = false);\n    }\n\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\n        return out;\n    }\n\n    protected _disposeResource(): void {\n\n        if (RenderTexture._currentActive == this) {\n            this._end();\n        }\n\n        this._renderTarget.dispose();\n        this._renderTarget = null;\n        this._depthStencilTexture?.destroy();\n        this._depthStencilTexture = null;\n    }\n\n}","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { Const } from \"../Const\";\nimport { ColorFilter } from \"../filters/ColorFilter\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\nimport { ColorUtils } from \"../utils/ColorUtils\";\nimport { FontInfo } from \"../utils/FontInfo\";\nimport { HTMLChar } from \"../utils/HTMLChar\";\nimport { WordText } from \"../utils/WordText\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { NativeWebGLCacheAsNormalCanvas } from \"../webgl/canvas/NativeWebGLCacheAsNormalCanvas\";\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\nimport { HTMLCanvas } from \"./HTMLCanvas\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\nimport { Texture } from \"./Texture\";\nimport { BufferState } from \"../webgl/utils/BufferState\";\nimport { RenderTexture } from \"./RenderTexture\";\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\n/**\n * @internal\n */\nenum CONTEXT2D_FUNCTION_ID {\n    SIZE = 0,\n    CLEAR,\n    SAVE,\n    TRANSFORM,\n    ALPHA,\n    RESTORE,\n    FILL_STYLE,\n    FILL_RECT,\n    STROKE_STYLE,\n    LINE_WIDTH,\n    STROKE_RECT,\n    FILL_WORD_TEXT,\n    DRAW_TEXTURE_SIZE_GRID,\n    DRAW_TEXTURE,\n    CLIP_RECT,\n    DRAW_LINE,\n    DRAW_LINES,\n    SCALE,\n    TRANSLATE,\n    ROTATE,\n    DRAW_CIRCLE,\n    DRAW_PIE,\n    DRAW_POLY,\n    DRAW_CURVES,\n    BEGIN_PATH,\n    MOVE_TO,\n    LINE_TO,\n    ARC_TO,\n    CLOSE_PATH,\n    FILL,\n    STROKE,\n    SET_AS_BITMAP,\n    DRAW_MASKED,\n    DRAW_TRANGLES,\n    SET_GLOBAL_COMPOSITE_OPERTAION,\n    FILL_WORDS,\n}\n\n/**\n * @internal\n */\nexport class NativeContext {\n    public static readonly ARRAY_BUFFER_TYPE_DATA = 0;          //创建ArrayBuffer时的类型为Data\n    public static readonly ARRAY_BUFFER_TYPE_CMD = 1;           //创建ArrayBuffer时的类型为Command\n    public static readonly ARRAY_BUFFER_REF_REFERENCE = 0;          //创建ArrayBuffer时的类型为引用\n    public static readonly ARRAY_BUFFER_REF_COPY = 1;               //创建ArrayBuffer时的类型为拷贝\n\n    public _idata: Int32Array;\n    public _fdata: Float32Array;\n    public _byteArray: Uint8Array;\n    public _buffer: ArrayBuffer;\n    private _byteLen: number = 0;\n\n\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\n    static ENUM_TEXTALIGN_CENTER: number = 1;\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\n    private _nativeObj: any;\n    private _tempRenderTexture2D: any;\n    sprite: any = null;\n    private _renderObject3DList: any[] = [];\n    /**@internal */\n    _tmpMatrix: Matrix = new Matrix();\n    static __init__(): void {\n    }\n    constructor() {\n        this._nativeObj = new (window as any)._conchContext((LayaGL.renderEngine as any)._nativeObj);\n        this._byteLen = 1024 * 512;\n        this._tempRenderTexture2D = new NativeRenderTexture2D(0, 0, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false);\n        this._init(false);\n    }\n    _init(isSyncToRenderThread: boolean): void {\n        this._buffer = new ArrayBuffer(this._byteLen);\n        this._idata = new Int32Array(this._buffer);\n        this._fdata = new Float32Array(this._buffer);\n        this._byteArray = new Uint8Array(this._buffer);\n\n        var bufferConchRef: any = (window as any).webglPlus.createArrayBufferRef(this._buffer, NativeContext.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread, NativeContext.ARRAY_BUFFER_REF_REFERENCE);\n        this._nativeObj.setSharedCommandBuffer(bufferConchRef);\n        //this._layagl.createArrayBufferRef(this._buffer, NativeCommandEncoder.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread);\n        this._idata[0] = 1;\n    }\n    _need(sz: number): void {\n        if ((this._byteLen - (this._idata[0] << 2)) >= sz) return;\n        this._nativeObj.flushCommand();\n        if (sz > this._byteLen) {\n            throw \"too big\";\n        }\n    }\n\n    /**@private */\n    get lineJoin(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineJoin(value: string) {\n    }\n\n    /**@private */\n    get lineCap(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineCap(value: string) {\n    }\n\n    /**@private */\n    get miterLimit(): string {\n        return '';\n    }\n\n    /**@private */\n    set miterLimit(value: string) {\n    }\n\n    /**@private */\n    clearRect(x: number, y: number, width: number, height: number): void {\n    }\n\n    set isMain(value: boolean) {\n        this._nativeObj.flushCommand();\n        this._nativeObj.isMain = value;\n    }\n    get isMain() {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.isMain;\n    }\n    set _targets(target: RenderTexture2D) {\n        if (target) {\n            this._nativeObj.flushCommand();\n            this._nativeObj._target = (target as any)._nativeObj;\n        }\n    }\n    get _targets(): RenderTexture2D {\n        this._nativeObj.flushCommand();\n        let target = this._nativeObj._target;\n        //if (target && !this._tempRenderTexture2D._renderTarget) {\n        if (target) {\n            this._tempRenderTexture2D.width = this._nativeObj.width;\n            this._tempRenderTexture2D.height = this._nativeObj.height;\n            this._tempRenderTexture2D._nativeObj = target;\n            this._tempRenderTexture2D._renderTarget = target._renderTarget;\n            this._tempRenderTexture2D._texture = target._renderTarget._textures[0];\n            return this._tempRenderTexture2D;\n        }\n        return null;\n    }\n    alpha(value: number): void {\n        //this._nativeObj.globalAlpha *= value;\n        //this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\n        this.globalAlpha *= value;\n    }\n    flush(): void {\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\n        //this._nativeObj.flush();\n        this._nativeObj.flushCommand();\n        this._nativeObj.flush();\n\n    }\n    clear(): void {\n        //this._nativeObj.clear();\n        this.add_i(CONTEXT2D_FUNCTION_ID.CLEAR);\n        this._nativeObj.flushCommand();\n        this._renderObject3DList.length = 0;\n    }\n    /**\n     * 释放所有资源\n     * @param\tkeepRT  是否保留rendertarget\n     */\n     destroy(keepRT: boolean = false): void {\n        this._nativeObj.flushCommand();\n        if (this._tempRenderTexture2D._nativeObj) {\n            this._tempRenderTexture2D._nativeObj._deleteRT = keepRT;\n        }\n        this._nativeObj.destroy(keepRT);\n    }\n    \n    static const2DRenderCMD: RenderStateCommand;\n    static set2DRenderConfig(): void {\n       \n        if (!NativeContext.const2DRenderCMD) {\n            const cmd = NativeContext.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\n            cmd.addCMD(RenderStateType.BlendType, true);\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\n            //WebGLContext.setDepthTest(gl, false);\n            cmd.addCMD(RenderStateType.DepthTest, false);\n            //WebGLContext.setDepthMask(gl, true);\n            cmd.addCMD(RenderStateType.DepthMask, true);\n            //WebGLContext.setCullFace(gl, false);\n            cmd.addCMD(RenderStateType.CullFace, false);\n            //WebGLContext.setFrontFace(gl, gl.CCW);\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\n        }\n        NativeContext.const2DRenderCMD.applyCMD();\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\n        (window as any).set2DRenderConfig();\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\n    }\n    set globalCompositeOperation(value: string) {\n        //this._nativeObj.globalCompositeOperation = value;\n        this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, value);\n    }\n\n    get globalCompositeOperation(): string {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.globalCompositeOperation;\n    }\n    set fillStyle(value: any) {\n        var c: ColorUtils = ColorUtils.create(value);\n        this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\n    }\n\n    get fillStyle(): any {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.fillStyle;\n    }\n    set globalAlpha(value: number) {\n        this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\n    }\n\n    get globalAlpha(): number {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.globalAlpha;\n    }\n    save(): void {\n        //this._nativeObj.save();\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n    }\n    restore(): void {\n        //this._nativeObj.restore();\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n    }\n    saveTransform(matrix: Matrix): void {\n        //this._nativeObj.save();\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n    }\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\n        //this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\n    }\n    restoreTransform(matrix: Matrix): void {\n        //this._nativeObj.restore();\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n    }\n    clipRect(x: number, y: number, width: number, height: number): void {\n        //this._nativeObj.clipRect(x, y, width, height);\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.CLIP_RECT, x, y, width, height);\n    }\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\n        //this._nativeObj.transform(a, b, c, d, tx, ty);\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, a, b, c, d, tx, ty);\n    }\n    scale(scaleX: number, scaleY: number): void {\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\n    }\n\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        //this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width, height, (tex as any).uv);\n        this.add_iiffffffffffff(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width, height\n            , (tex as any).uv[0]\n            , (tex as any).uv[1]\n            , (tex as any).uv[2]\n            , (tex as any).uv[3]\n            , (tex as any).uv[4]\n            , (tex as any).uv[5]\n            , (tex as any).uv[6]\n            , (tex as any).uv[7]);\n    }\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, colorfilter: any/*ColorFilter*/ | null = null, uv?: number[]): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        /*this._nativeObj.save();\n        this._nativeObj.globalAlpha = alpha;\n        if (transform) {\n            this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height|| tex.height, uv || (tex as any).uv);\n        }\n        else {\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height|| tex.height, uv || (tex as any).uv);\n        }\n        this._nativeObj.restore();*/\n        this.save();\n        this.alpha(alpha);\n        var uvs: any = uv || (tex as any).uv;\n        if (transform) {\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\n            this.add_iiffffffffffff(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\n                , uvs[0]\n                , uvs[1]\n                , uvs[2]\n                , uvs[3]\n                , uvs[4]\n                , uvs[5]\n                , uvs[6]\n                , uvs[7]);\n        }\n        else {\n            this.add_iiffffffffffff(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height || tex.height\n                , uvs[0]\n                , uvs[1]\n                , uvs[2]\n                , uvs[3]\n                , uvs[4]\n                , uvs[5]\n                , uvs[6]\n                , uvs[7]);\n        }\n        this.restore();\n    }\n\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\n\n        var top: number = sizeGrid[0];\n        var left: number = sizeGrid[3];\n        var right: number = sizeGrid[1];\n        var bottom: number = sizeGrid[2];\n        var repeat: boolean = sizeGrid[4];\n\n        /*this._nativeObj.drawTextureWithSizeGrid((tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat, gx, gy, uv[0]\n            ,uv[1]\n            ,uv[2]\n            ,uv[3]\n            ,uv[4]\n            ,uv[5]\n            ,uv[6]\n            ,uv[7]);*/\n        this.add_iiffffffffiffffffffff(\n            CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE_SIZE_GRID,\n            (tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat ? 1 : 0, gx, gy\n            , uv[0]\n            , uv[1]\n            , uv[2]\n            , uv[3]\n            , uv[4]\n            , uv[5]\n            , uv[6]\n            , uv[7]);\n    }\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, alpha: number, uv: any[] | null): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        /*this._nativeObj.save();\n        this._nativeObj.globalAlpha = alpha;\n        transform && this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n        this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height, uv || (tex as any).uv);\n        this._nativeObj.restore();*/\n\n        this.save();\n        this.alpha(alpha);\n        if (transform) {\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n        }\n        var uvs: any = uv || (tex as any).uv;\n        this.add_iiffffffffffff(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\n            , uvs[0]\n            , uvs[1]\n            , uvs[2]\n            , uvs[3]\n            , uvs[4]\n            , uvs[5]\n            , uvs[6]\n            , uvs[7]);\n            this.restore();\n\n    }\n    translate(x: number, y: number): void {\n        //this._nativeObj.translate(x, y);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, x, y);\n    }\n    _transform(mat: any/*Matrix*/, pivotX: number, pivotY: number): void {\n        //this._nativeObj.translate(pivotX, pivotY);\n        //this._nativeObj.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\n        //this._nativeObj.translate(-pivotX, -pivotY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\n    }\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\n        //this._nativeObj.translate(pivotX, pivotY);\n        //this._nativeObj.rotate(angle);\n        //this._nativeObj.translate(-pivotX, -pivotY);\n\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\n        this.add_if(CONTEXT2D_FUNCTION_ID.ROTATE, angle);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\n    }\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\n        //this._nativeObj.translate(pivotX, pivotY);\n        //this._nativeObj.scale(scaleX, scaleY);\n        //this._nativeObj.translate(-pivotX, -pivotY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\n    }\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawLine(x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\n        this.add_iffffffif(CONTEXT2D_FUNCTION_ID.DRAW_LINE, x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\n    }\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawLines(x, y, new Float32Array(points), c1.numColor, lineWidth);\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_LINES, x, y, c1.numColor, lineWidth, new Float32Array(points));\n    }\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(fillColor);\n        var c2: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawCircle(x, y, radius, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\n        this.add_ifffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_CIRCLE, x, y, radius, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\n    }\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(fillColor);\n        var c2: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawPie(x, y, radius, startAngle, endAngle, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\n        this.add_ifffffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_PIE, x, y, radius, startAngle, endAngle, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\n    }\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(fillColor);\n        var c2: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawPoly(x, y, new Float32Array(points), fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth, isConvexPolygon);\n        this.add_iffiiiifi_ab(CONTEXT2D_FUNCTION_ID.DRAW_POLY, x, y, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth, isConvexPolygon ? 1 : 0, new Float32Array(points));\n    }\n    fillRect(x: number, y: number, width: number, height: number, fillColor: any) {\n        if (fillColor != null) {\n            var c: ColorUtils = ColorUtils.create(fillColor);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\n        }\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n    }\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\n\n        /*if (fillColor != null) {\n            var c1: ColorUtils = ColorUtils.create(fillColor);\n   \n            this._nativeObj.save(); \n            this._nativeObj.fillStyle = c1.numColor;\n            this._nativeObj.fillRect(x, y, width, height);\n            this._nativeObj.restore();\n        }\n        if (lineColor != null) {         \n            var c2: ColorUtils = ColorUtils.create(lineColor);\n            this._nativeObj.save(); \n            this._nativeObj.strokeStyle = c2.numColor;\n            this._nativeObj.lineWidth = lineWidth;//lineColor\n            this._nativeObj.strokeRect(x, y, width, height);\n            this._nativeObj.restore();\n        }*/\n\n        if (fillColor != null) {\n            var c1: ColorUtils = ColorUtils.create(fillColor);\n\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n        }\n        if (lineColor != null) {\n            var c2: ColorUtils = ColorUtils.create(lineColor);\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, lineWidth);\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.STROKE_RECT, x, y, width, height);\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n        }\n    }\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\n        //形成路径\n        /*this._nativeObj.beginPath(false);\n        //x += args[0], y += args[1];\n\n        //var paths:Array = args[2];\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\n\n            var path: any[] = paths[i];\n            switch (path[0]) {\n                case \"moveTo\":\n                    this._nativeObj.moveTo(x + path[1], y + path[2]);\n                    break;\n                case \"lineTo\":\n                    this._nativeObj.lineTo(x + path[1], y + path[2]);\n                    break;\n                case \"arcTo\":\n                    this._nativeObj.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\n                    break;\n                case \"closePath\":\n                    this._nativeObj.closePath();\n                    break;\n            }\n        }\n\n        //var brush:Object = args[3];\n        if (brush != null) {\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\n            this._nativeObj.fillStyle = c1.numColor;\n            this._nativeObj.fill();\n        }\n\n        //var pen:Object = args[4];\n        if (pen != null) {\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\n            this._nativeObj.strokeStyle = c2.numColor;\n            this._nativeObj.lineWidth = pen.lineWidth || 1;\n            this._nativeObj.lineJoin = pen.lineJoin;\n            this._nativeObj.lineCap = pen.lineCap;\n            this._nativeObj.miterLimit = pen.miterLimit;\n            this._nativeObj.stroke();\n        }*/\n        this.add_ii(CONTEXT2D_FUNCTION_ID.BEGIN_PATH, 0);\n\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\n\n            var path: any[] = paths[i];\n            switch (path[0]) {\n                case \"moveTo\":\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.MOVE_TO, x + path[1], y + path[2]);\n                    break;\n                case \"lineTo\":\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.LINE_TO, x + path[1], y + path[2]);\n                    break;\n                case \"arcTo\":\n                    this.add_ifffff(CONTEXT2D_FUNCTION_ID.ARC_TO, x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\n                    break;\n                case \"closePath\":\n                    this.add_i(CONTEXT2D_FUNCTION_ID.CLOSE_PATH);\n                    break;\n            }\n        }\n\n        //var brush:Object = args[3];\n        if (brush != null) {\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\n            this.add_i(CONTEXT2D_FUNCTION_ID.FILL);\n        }\n\n        //var pen:Object = args[4];\n        if (pen != null) {\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, pen.lineWidth || 1);\n            //this._nativeObj.lineJoin = pen.lineJoin;\n            //this._nativeObj.lineCap = pen.lineCap;\n            //this._nativeObj.miterLimit = pen.miterLimit;\n            this.add_i(CONTEXT2D_FUNCTION_ID.STROKE);\n        }\n    }\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\n        var c1: ColorUtils = ColorUtils.create(lineColor);\n\n        /*this._nativeObj.beginPath(false);\n        this._nativeObj.strokeStyle = c1.numColor;\n        this._nativeObj.lineWidth = lineWidth;\n        //var points:Array = args[2];\n        //x += args[0], y += args[1];\n        this._nativeObj.moveTo(x + points[0], y + points[1]);\n        var i: number = 2, n: number = points.length;\n        while (i < n) {\n            this._nativeObj.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\n        }\n        this._nativeObj.stroke();*/\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_CURVES, x, y, c1.numColor, lineWidth, new Float32Array(points));\n    }\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\n        if (!canvas) return;\n        this._nativeObj.flushCommand();\n        if (canvas instanceof (NativeWebGLCacheAsNormalCanvas)) {\n            this._nativeObj.drawCanvasNormal(canvas._nativeObj, x, y, width, height);\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_NORMAL, canvas._nativeObj.id, x, y, width, height);\n        }\n        else {\n            this._nativeObj.drawCanvasBitmap((canvas.context as any)._nativeObj, x, y, width, height);\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_BITMAP, (canvas.context as any)._nativeObj.id, x, y, width, height);\n        }\n    }\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(borderColor);\n        if (typeof (txt) === 'string') {\n            //this._nativeObj.fillWords(txt, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, fontStr)\n        }\n        else {\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\n        }\n    }\n    // 与fillText的区别是没有border信息\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(null);\n        if (typeof (text) === 'string') {\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, 0, text, font)\n        }\n        else {\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, 0, nTextAlign, font);\n        }\n    }\n    fillWords(words: HTMLChar[], x: number, y: number, fontStr: string, color: string): void {\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(null);\n        var length = words.length;\n        for (var i = 0; i < length; i++) {\n            //this._nativeObj.fillWords(words[i].char, words[i].x + x,  words[i].y + y, fontStr, c1.numColor, c2.numColor, 0, 0);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, 0, words[i].x + x, words[i].y + y, 0, words[i].char, fontStr);\n        }\n    }\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(null);\n        if (typeof (text) === 'string') {\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, text, font);\n        }\n        else {\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\n        }\n    }\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(borderColor);\n        if (typeof (txt) === 'string') {\n            //this._nativeObj.fillWords(txt, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, font);\n        }\n        else {\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\n        }\n    }\n    fillBorderWords(words: HTMLChar[], x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number): void {\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(borderColor);\n        var length = words.length;\n        for (var i = 0; i < length; i++) {\n            //this._nativeObj.fillWords(words[i].char, words[i].x + x,  words[i].y + y, font, c1.numColor, c2.numColor, lineWidth, 0);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, 0, words[i].x + x, words[i].y + y, lineWidth, words[i].char, font);\n        }\n    }\n    fillWords11(words: HTMLChar[], x: number, y: number, fontStr: FontInfo, color: string, strokeColor: string | null, lineWidth: number): void {\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\n        var font = typeof (fontStr) === 'string' ? fontStr : (fontStr as any)._font;\n        var length = words.length;\n        for (var i = 0; i < length; i++) {\n            //this._nativeObj.fillWords(words[i].char, words[i].x + x,  words[i].y + y, font, c1.numColor, c2.numColor, lineWidth, 0);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, 0, words[i].x + x, words[i].y + y, lineWidth, words[i].char, font);\n        }\n    }\n\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\n        if (typeof (data) === 'string') {\n            //this._nativeObj.fillWords(data, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, data, fontStr)\n        }\n        else {\n            //this._nativeObj.fillWordText((data as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\n        }\n    }\n\n    /**@internal */\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\n\n        if (typeof (data) === 'string') {\n            //this._nativeObj.fillWords(data, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, textAlign, x, y, lineWidth, data, (fontObj as any)._font)\n        }\n        else {\n\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, textAlign, (fontObj as any)._font);\n            //this._nativeObj.fillWordText(data._nativeObj.id, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\n        }\n    }\n    drawTriangles(tex: Texture,\n        x: number, y: number,\n        vertices: Float32Array,\n        uvs: Float32Array,\n        indices: Uint16Array,\n        matrix: Matrix, alpha: number, color: ColorFilter, blendMode: string, colorNum: number = 0xffffffff): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        } \n        var m: Matrix = matrix ? matrix : this._tmpMatrix;\n        /*if (blendMode != null || color != null) {\n            this._nativeObj.save(); \n            //to do ColorFilter\n            this._nativeObj.globalCompositeOperation = blendMode;\n            this._nativeObj.drawTriangles((tex as any).bitmap._texture.id, \n                x, y, \n                vertices, \n                uvs, \n                indices, \n                m.a, m.b,m.c,m.d,m.tx,m.ty, alpha, colorNum);\n            this._nativeObj.restore();\n        }\n        else {\n            this._nativeObj.drawTriangles((tex as any).bitmap._texture.id, \n            x, y, \n            vertices, \n            uvs, \n            indices, \n            m.a, m.b,m.c,m.d,m.tx,m.ty, alpha, colorNum)\n        }*/\n\n       \n        if (blendMode != null || color != null) {\n\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n            //to do ColorFilter \n            this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, blendMode);\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\n                , x\n                , y\n                , alpha\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\n            );\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n        }\n        else {\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\n                , x\n                , y\n                , alpha\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\n            );\n        }\n    }\n    drawMask(w: number, h: number): any {\n        //return this._nativeObj.drawMask(w, h);\n        this._nativeObj.flushCommand();\n        return this._nativeObj.drawMask(w, h);\n    }\n    drawMasked(x: number, y: number, w: number, h: number): void {\n        //this._nativeObj.drawMasked(x, y, w, h);\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.DRAW_MASKED, x, y, w, h);\n    }\n    drawMaskComposite(rt: any, x: number, y: number, w: number, h: number): void {\n        //this._nativeObj.drawMaskComposite(rt, x, y, w, h);\n        this._nativeObj.flushCommand();\n        this._nativeObj.drawMaskComposite(rt, x, y, w, h);\n    }\n    set asBitmap(value: boolean) {\n        //this._nativeObj.setAsBitmap(value);\n        this.add_ii(CONTEXT2D_FUNCTION_ID.SET_AS_BITMAP, value ? 1 : 0);\n    }\n    size(w: number, h: number): void {\n        //this._nativeObj.size(w, h);\n        this.add_iii(CONTEXT2D_FUNCTION_ID.SIZE, w, h);\n    }\n    setColorFilter(filter: ColorFilter): void {\n        /*if (filter) {\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\n        }\n        else {\n            this._nativeObj.setColorFilter(false, null, null);\n        }*/\n        this._nativeObj.flushCommand();\n        if (filter) {\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\n        }\n        else {\n            this._nativeObj.setColorFilter(false, null, null);\n        }\n    }\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, matrix: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\n        //return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty, blend);\n        this._nativeObj.flushCommand();\n        return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty, blend);\n    }\n    drawTargetBlurFilter(rt: RenderTexture2D, x: number, y: number, width: number, height: number, strength: number): void {\n        //this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\n        this._nativeObj.flushCommand();\n        this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\n    }\n    get _curMat(): Matrix {\n        /*var data: any = this._nativeObj._curMat;\n        var mat: Matrix = Matrix.create();\n        mat.a = data[0];\n        mat.b = data[1];\n        mat.c = data[2];\n        mat.d = data[3];\n        mat.tx = data[4];\n        mat.ty = data[5];*/\n\n        this._nativeObj.flushCommand();\n\n        var data: any = this._nativeObj._curMat;\n        var mat: Matrix = Matrix.create();\n        mat.a = data[0];\n        mat.b = data[1];\n        mat.c = data[2];\n        mat.d = data[3];\n        mat.tx = data[4];\n        mat.ty = data[5];\n\n        return mat;\n    }\n    addRenderObject3D(scene3D: ISubmit): void {\n        //this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\n        this._renderObject3DList.push(scene3D);\n        this._nativeObj.flushCommand();\n        this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\n    }\n    pushRT(): void {\n        //this._nativeObj.pushRT();\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.pushRT();\n    }\n    popRT(): void {\n        //this._nativeObj.popRT();\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.popRT();\n    }\n    useRT(rt: RenderTexture2D): void {\n        //this._nativeObj.useRT(rt);\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.useRT(rt);\n    }\n    drawFilter(out: RenderTexture2D, src: RenderTexture2D, x: number, y: number, width: number, height: number): void {\n        //this._nativeObj.drawFilter(out, src, x, y, width, height);\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.drawFilter(out, src, x, y, width, height);\n    }\n    protected checkTexture(tex: Texture): boolean {\n        // 注意sprite要保存，因为后面会被冲掉\n        var cs = this.sprite;\n        if (!tex._getSource(function (): void {\n            if (cs) {\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\n            }\n        })) { //source内调用tex.active();\n            return false;\n        }\n        return true;\n    }\n    add_i(i: number): void {\n        this._need(4);\n        this._idata[this._idata[0]++] = i;\n    }\n    add_ii(a: number, b: number): void {\n        this._need(8);\n        var i: number = this._idata[0];\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        this._idata[0] = i;\n    }\n    add_if(a: number, b: number): void {\n        this._need(8);\n        var i: number = this._idata[0];\n        this._idata[i++] = a;\n        this._fdata[i++] = b;\n        this._idata[0] = i;\n    }\n    add_iff(a: number, b: number, c: number): void {\n        this._need(12);\n        var i: number = this._idata[0];\n        this._idata[i++] = a;\n        this._fdata[i++] = b;\n        this._fdata[i++] = c;\n        this._idata[0] = i;\n    }\n\n    add_iffif(a: number, b: number, c: number, d: number, e: number) {\n        this._need(20);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        this._idata[i++] = d;\n        fdata[i++] = e;\n        this._idata[0] = i;\n    }\n\n    add_iffff(a: number, b: number, c: number, d: number, e: number): void {\n        this._need(20);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        this._idata[0] = i;\n    }\n    add_iii(a: number, b: number, c: number): void {\n        this._need(12);\n        var idata: Int32Array = this._idata;\n        var i: number = this._idata[0];\n        idata[i++] = a;\n        idata[i++] = b;\n        idata[i++] = c;\n        this._idata[0] = i;\n    }\n    add_iiffff(a: number, b: number, c: number, d: number, e: number, f: number) {\n        this._need(24);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        this._idata[0] = i;\n    }\n    add_ifffff(a: number, b: number, c: number, d: number, e: number, f: number) {\n        this._need(24);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        this._idata[0] = i;\n    }\n    add_iffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void {\n        this._need(28);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        this._idata[0] = i;\n    }\n    add_ifffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\n        this._need(36);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        idata[i++] = e;\n        idata[i++] = f;\n        idata[i++] = g;\n        idata[i++] = h;\n        fdata[i++] = ii;\n        idata[0] = i;\n    }\n    add_ifffffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number): void {\n        this._need(44);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        idata[i++] = g;\n        idata[i++] = h;\n        idata[i++] = ii;\n        idata[i++] = j;\n        fdata[i++] = k;\n        idata[0] = i;\n    }\n    add_iffffffif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\n        this._need(36);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        idata[i++] = h;\n        fdata[i++] = ii;\n        idata[0] = i;\n    }\n    add_String(ab: ArrayBuffer): void {\n        var len: number = ab.byteLength;\n        this._need(len + 4);\n        this._idata[this._idata[0]++] = len;\n        if (len == 0) return;\n        var uint8array: Uint8Array = new Uint8Array(ab);\n        this._byteArray.set(uint8array, this._idata[0] * 4);\n        this._idata[0] += len / 4;\n    }\n    add_iffiiiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number) {\n        this._need(45);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        this._idata[i++] = d;\n        this._idata[i++] = e;\n        this._idata[i++] = f;\n        this._idata[i++] = g;\n        fdata[i++] = h;\n        this._idata[i++] = ii;\n        this._idata[0] = i;\n    }\n    add_iiffiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) {\n        this._need(32);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        this._idata[i++] = e;\n        this._idata[i++] = f;\n        fdata[i++] = g;\n        this._idata[i++] = h;\n        this._idata[0] = i;\n    }\n    add_i_String(a: number, str: string): void {\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\n        this._need(4 + ab.byteLength + 4);\n        this.add_i(a);\n        this.add_String(ab);\n    }\n    add_iiiifff(a: number, b: number, c: number, d: number, e: number, f: number, g: number) {\n        this._need(28);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        this._idata[i++] = c;\n        this._idata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        this._idata[0] = i;\n    }\n    add_iiffiifi_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, str: string): void {\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\n        this._need(32 + ab.byteLength + 4);\n        this.add_iiffiifi(a, b, c, d, e, f, g, h);\n        this.add_String(ab);\n    }\n    add_iiiifff_String_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, str0: string, str1: string): void {\n        var ab0: ArrayBuffer = (window as any).conch.strTobufer(str0);\n        var ab1: ArrayBuffer = (window as any).conch.strTobufer(str1);\n        this._need(28 + (ab0.byteLength + 4) + (ab1.byteLength + 4));\n\n        this.add_iiiifff(a, b, c, d, e, f, g);\n        this.add_String(ab0);\n        this.add_String(ab1);\n    }\n    add_iiffffffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number, l: number, m: number, n: number) {\n        this._need(56);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        fdata[i++] = h;\n        fdata[i++] = ii;\n        fdata[i++] = j;\n        fdata[i++] = k;\n        fdata[i++] = l;\n        fdata[i++] = m;\n        fdata[i++] = n;\n        idata[0] = i;\n    }\n    add_iiffffffffiffffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\n        , k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number\n        , u: number) {\n        this._need(84);\n        var idata: Int32Array = this._idata;\n        var fdata: Float32Array = this._fdata;\n        var i: number = idata[0];\n        idata[i++] = a;\n        idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        fdata[i++] = h;\n        fdata[i++] = ii;\n        fdata[i++] = j;\n        idata[i++] = k;\n        fdata[i++] = l;\n        fdata[i++] = m;\n        fdata[i++] = n;\n        fdata[i++] = o;\n        fdata[i++] = p;\n        fdata[i++] = q;\n        fdata[i++] = r;\n        fdata[i++] = s;\n        fdata[i++] = t;\n        fdata[i++] = u;\n        idata[0] = i;\n    }\n    add_iiifffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\n        , k: number, l: number) {\n        this._need(48);\n        var idata: Int32Array = this._idata;\n        var fdata: Float32Array = this._fdata;\n        var i: number = idata[0];\n        idata[i++] = a;\n        idata[i++] = b;\n        idata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        fdata[i++] = h;\n        fdata[i++] = ii;\n        fdata[i++] = j;\n        fdata[i++] = k;\n        fdata[i++] = l;\n        idata[0] = i;\n    }\n    add_iiifffffffff_ab_ab_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\n        , k: number, l: number, arraybuffer0: any, arraybuffer1: any, arraybuffer2: any) {\n\n        var nAlignLength0 = this.getAlignLength(arraybuffer0);\n        var nAlignLength1 = this.getAlignLength(arraybuffer1);\n        var nAlignLength2 = this.getAlignLength(arraybuffer2);\n        d\n        this._need(48 + (nAlignLength0 + 4) + (nAlignLength1 + 4) + (nAlignLength2 + 4));\n\n        this.add_iiifffffffff(a, b, c, d, e, f, g, h, ii, j, k, l);\n        this.wab(arraybuffer0, arraybuffer0.byteLength, nAlignLength0, 0);\n        this.wab(arraybuffer1, arraybuffer1.byteLength, nAlignLength1, 0);\n        this.wab(arraybuffer2, arraybuffer2.byteLength, nAlignLength2, 0);\n\n    }\n    wab(arraybuffer: any, length: number, nAlignLength: number, offset?: number): void {\n        offset = offset ? offset : 0;\n        this._need(nAlignLength + 4);\n        //写入长度\n        this._idata[this._idata[0]++] = length;\n        //写入数据\n        var uint8array: Uint8Array = null;\n        if (arraybuffer instanceof Float32Array && offset == 0) {\n            this._fdata.set(arraybuffer, this._idata[0]);\n        }\n        else {\n            if (arraybuffer instanceof ArrayBuffer) {\n                uint8array = new Uint8Array(arraybuffer, offset, length);\n            }\n            else if (arraybuffer.buffer) {\n                uint8array = new Uint8Array(arraybuffer.buffer, offset + arraybuffer.byteOffset, length);\n            }\n            else {\n                console.log(\"not arraybuffer/dataview\");\n                return;\n            }\n            this._byteArray.set(uint8array, this._idata[0] * 4);\n        }\n        this._idata[0] += nAlignLength / 4;\n    }\n    getAlignLength(data: any): number {\n        var byteLength = data.byteLength;\n        return (byteLength + 3) & 0xfffffffc;\n    }\n    add_iif_ab(a: number, b: number, c: number, arraybuffer: any) {\n        var nAlignLength = this.getAlignLength(arraybuffer);\n        this._need(12 + nAlignLength + 4);\n        this.add_iff(a, b, c);\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\n    }\n    add_iffif_ab(a: number, b: number, c: number, d: number, e: number, arraybuffer: any) {\n        var nAlignLength = this.getAlignLength(arraybuffer);\n        this._need(20 + nAlignLength + 4);\n        this.add_iffif(a, b, c, d, e);\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\n    }\n    add_iffiiiifi_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, arraybuffer: any) {\n        var nAlignLength = this.getAlignLength(arraybuffer);\n        this._need(45 + nAlignLength + 4);\n        this.add_iffiiiifi(a, b, c, d, e, f, g, h, ii);\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\n    }\n} \n","import { ILaya } from \"../../ILaya\";\nimport { Sprite } from \"../display/Sprite\";\nimport { ColorFilter } from \"../filters/ColorFilter\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Bezier } from \"../maths/Bezier\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\nimport { FontInfo } from \"../utils/FontInfo\";\nimport { HTMLChar } from \"../utils/HTMLChar\";\nimport { WordText } from \"../utils/WordText\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\nimport { Path } from \"../webgl/canvas/Path\";\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\nimport { Earcut } from \"../webgl/shapes/Earcut\";\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\nimport { Submit } from \"../webgl/submit/Submit\";\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\nimport { CharRenderInfo } from \"../webgl/text/CharRenderInfo\";\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\nimport { TextRender } from \"../webgl/text/TextRender\";\nimport { Mesh2D } from \"../webgl/utils/Mesh2D\";\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\nimport { HTMLCanvas } from \"./HTMLCanvas\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\nimport { Texture } from \"./Texture\";\nimport { Texture2D } from \"./Texture2D\";\nimport { NativeContext } from \"./NativeContext\";\nimport { Const } from \"../Const\";\nimport { Color } from \"../maths/Color\";\nimport { RenderTexture } from \"./RenderTexture\";\n\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\n\n/**\n * @private\n * Context扩展类\n */\nexport class Context {\n\n    /**@internal */\n    static _rendercontex: Context;\n    /**@internal */\n    _canvas: HTMLCanvas;\n    /**@internal */\n    _drawingToTexture: boolean;\n\n    static _SUBMITVBSIZE: number = 32000;\n\n    private static _MAXVERTNUM: number = 65535;\n\n    static MAXCLIPRECT: Rectangle = null;\n\n    static _COUNT: number = 0;\n\n    /**@internal */\n    _tmpMatrix: Matrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\n\n    private static SEGNUM: number = 32;\n\n    private static _contextcount: number = 0;\n\n    private _drawTexToDrawTri_Vert: Float32Array = new Float32Array(8);\t\t// 从速度考虑，不做成static了\n    private _drawTexToDrawTri_Index: Uint16Array = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    private _tempUV: Float32Array = new Float32Array(8);\n    private _drawTriUseAbsMatrix: boolean = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\n\n    static __init__(): void {\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\n        ContextParams.DEFAULT = new ContextParams();\n        WebGLCacheAsNormalCanvas;\n    }\n\n    /**@private */\n    drawImage(...args: any[]): void {\n    }\n\n    /**@private */\n    getImageData(...args: any[]): any {\n    }\n\n    /**@private */\n    measureText(text: string): any {\n        return null;\n    }\n\n    /**@private */\n    setTransform(...args: any[]): void {\n    }\n\n\n    /**@private */\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\n    }\n\n\n    /**@private */\n    get lineJoin(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineJoin(value: string) {\n    }\n\n    /**@private */\n    get lineCap(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineCap(value: string) {\n    }\n\n    /**@private */\n    get miterLimit(): string {\n        return '';\n    }\n\n    /**@private */\n    set miterLimit(value: string) {\n    }\n\n    /**@private */\n    clearRect(x: number, y: number, width: number, height: number): void {\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void {\n        style && (this.fillStyle = style);\n        this.fillRect(x, y, width, height, null);\n    }\n\n    ///**@private */\n    //public function transformByMatrix(value:Matrix):void {\n    //this.transform(value.a, value.b, value.c, value.d, value.tx, value.ty);\n    //}\n\n    /**@private */\n    //TODO:coverage\n    //public function setTransformByMatrix(value:Matrix):void {\n    //\tthis.setTransform(value.a, value.b, value.c, value.d, value.tx, value.ty);\n    //}\n\n    /**@private */\n    //TODO:coverage\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void {\n    }\n\n    //=============新增==================\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\n    }\n\n    saveTransform(matrix: Matrix): void {\n        this.save();\n    }\n\n    restoreTransform(matrix: Matrix): void {\n        this.restore();\n    }\n\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\n        var ctx: any = this;\n\n        //填充矩形\n        if (fillColor != null) {\n            ctx.fillStyle = fillColor;\n            ctx.fillRect(x, y, width, height);\n        }\n\n        //绘制矩形边框\n        if (lineColor != null) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.strokeRect(x, y, width, height);\n        }\n    }\n\n    alpha(value: number): void {\n        this.globalAlpha *= value;\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\n        this.translate(pivotX, pivotY);\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\n        this.translate(-pivotX, -pivotY);\n    }\n\n    /**@internal */\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\n        this.translate(pivotX, pivotY);\n        this.rotate(angle);\n        this.translate(-pivotX, -pivotY);\n    }\n\n    /**@internal */\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\n        this.translate(pivotX, pivotY);\n        this.scale(scaleX, scaleY);\n        this.translate(-pivotX, -pivotY);\n    }\n\n    /**@internal */\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\n        this.beginPath();\n        this.strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        this.moveTo(x + fromX, y + fromY);\n        this.lineTo(x + toX, y + toY);\n        this.stroke();\n    }\n\n    /**@internal */\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\n        this.beginPath();\n        //x += args[0], y += args[1];\n        this.strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        //var points:Array = args[2];\n        this.addPath(points.slice(), false, false, x, y);\n        this.stroke();\n    }\n\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\n        this.beginPath();\n        this.strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        //var points:Array = args[2];\n        //x += args[0], y += args[1];\n        this.moveTo(x + points[0], y + points[1]);\n        var i: number = 2, n: number = points.length;\n        while (i < n) {\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\n        }\n        this.stroke();\n    }\n\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon: boolean = false): void {\n        //绘制填充区域\n        if (fillColor != null) {\n            this.fillStyle = fillColor;\n            this.fill();\n        }\n\n        //绘制边框\n        if (strokeColor != null && lineWidth > 0) {\n            this.strokeStyle = strokeColor;\n            this.lineWidth = lineWidth;\n            this.stroke();\n        }\n    }\n    /**Math.PI*2的结果缓存 */\n    static PI2: number = 2 * Math.PI;\n    /**@internal */\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        this.beginPath(true);\n        this.arc(x, y, radius, 0, Context.PI2);\n        this.closePath();\n        //绘制\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\n    }\n\n    //矢量方法\t\n    /**@internal */\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        //移动中心点\n        //ctx.translate(x + args[0], y + args[1]);\n        //形成路径\n        this.beginPath();\n        this.moveTo(x, y);\n        this.arc(x, y, radius, startAngle, endAngle);\n        this.closePath();\n        //绘制\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\n        //恢复中心点\n        //ctx.translate(-x - args[0], -y - args[1]);\n    }\n\n    /**@internal */\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\n        //var points:Array = args[2];\n        this.beginPath();\n        //poly一定是close的\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\n        this.closePath();\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\n    }\n\n    /**@internal */\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\n        //形成路径\n        this.beginPath();\n        //x += args[0], y += args[1];\n\n        //var paths:Array = args[2];\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\n\n            var path: any[] = paths[i];\n            switch (path[0]) {\n                case \"moveTo\":\n                    this.moveTo(x + path[1], y + path[2]);\n                    break;\n                case \"lineTo\":\n                    this.lineTo(x + path[1], y + path[2]);\n                    break;\n                case \"arcTo\":\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\n                    break;\n                case \"closePath\":\n                    this.closePath();\n                    break;\n            }\n        }\n\n        //var brush:Object = args[3];\n        if (brush != null) {\n            this.fillStyle = brush.fillStyle;\n            this.fill();\n        }\n\n        //var pen:Object = args[4];\n        if (pen != null) {\n            this.strokeStyle = pen.strokeStyle;\n            this.lineWidth = pen.lineWidth || 1;\n            this.lineJoin = pen.lineJoin;\n            this.lineCap = pen.lineCap;\n            this.miterLimit = pen.miterLimit;\n            this.stroke();\n        }\n    }\n\n    static const2DRenderCMD: RenderStateCommand;\n    static set2DRenderConfig(): void {\n        if (!Context.const2DRenderCMD) {\n            const cmd = Context.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\n            cmd.addCMD(RenderStateType.BlendType, true);\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\n            //WebGLContext.setDepthTest(gl, false);\n            cmd.addCMD(RenderStateType.DepthTest, false);\n            //WebGLContext.setDepthMask(gl, true);\n            cmd.addCMD(RenderStateType.DepthMask, true);\n            //WebGLContext.setCullFace(gl, false);\n            cmd.addCMD(RenderStateType.CullFace, false);\n            //WebGLContext.setFrontFace(gl, gl.CCW);\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\n        }\n        Context.const2DRenderCMD.applyCMD();\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\n        // WebGLContext.setBlend(gl, true);//还原2D设置\n        // WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\n        // BlendMode.activeBlendFunction = null;// 防止submit不设置blend\n        // WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // WebGLContext.setDepthTest(gl, false);\n        // WebGLContext.setDepthMask(gl, true);\n        // WebGLContext.setCullFace(gl, false);\n        // WebGLContext.setFrontFace(gl, gl.CCW);\n        RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\n        LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\n        LayaGL.renderEngine.scissorTest(true);\n        LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\n    }\n\n    /**@internal */\n    _id: number = ++Context._COUNT;\n\n    private _other: ContextParams | null = null;\n    private _renderNextSubmitIndex: number = 0;\n\n    private _path: Path | null = null;\n    /**@internal */\n    _drawCount: number = 1;\n    private _width: number = Const.MAX_CLIP_SIZE;\n    private _height: number = Const.MAX_CLIP_SIZE;\n    private _renderCount: number = 0;\n    /**@internal */\n    _submits: any = null;\n    /**@internal */\n    _curSubmit: any = null;\n    /**@internal */\n    _submitKey: SubmitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\n\n    /**@internal */\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\n    /**@internal */\n    _pathMesh: MeshVG | null = null;\t\t\t//矢量专用mesh。\n    /**@internal */\n    _triangleMesh: MeshTexture | null = null;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\n\n    meshlist: any[] = [];\t//本context用到的mesh\n\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\n\n    /**@internal */\n    _clipRect: Rectangle = Context.MAXCLIPRECT;\n    //public var _transedClipInfo:Array = [0, 0, Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t//应用矩阵后的clip。ox,oy, xx,xy,yx,yy \txx,xy等是缩放*宽高\n    /**@internal */\n    _globalClipMatrix: Matrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\n    /**@internal */\n    _clipInCache: boolean = false; \t// 当前记录的clipinfo是在cacheas normal后赋值的，因为cacheas normal会去掉当前矩阵的tx，ty，所以需要记录一下，以便在是shader中恢复\n    /**@internal */\n    _clipInfoID: number = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\n    private _clipID_Gen: number = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\n    /**@internal */\n    _curMat: Matrix;\n\n    //计算矩阵缩放的缓存\n    /**@internal */\n    _lastMatScaleX: number = 1.0;\n    /**@internal */\n    _lastMatScaleY: number = 1.0;\n    private _lastMat_a: number = 1.0;\n    private _lastMat_b: number = 0.0;\n    private _lastMat_c: number = 0.0;\n    private _lastMat_d: number = 1.0;\n    /**@internal */\n    _nBlendType: number = 0;\n    /**@internal */\n    _save: ISaveData[] & { _length?: number } = null;\n    /**@internal */\n    _targets: RenderTexture2D | null = null;\n    /**@internal */\n    _charSubmitCache: CharSubmitCache | null = null;\n    /**@internal */\n    _saveMark: SaveMark | null = null;\n    /**@internal */\n    _shader2D: Shader2D = new Shader2D();\t//\n\n    /**\n     * 所cacheAs精灵\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\n     * 加载完成后，调用repaint\n     */\n    sprite: Sprite | null = null;\n\n    /**@internal */\n    public static _textRender: TextRender | null = null;// new TextRender();\n    /**@internal */\n    _italicDeg: number = 0;//文字的倾斜角度\n    /**@internal */\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\n\n    private _fillColor: number = 0;\n    private _flushCnt: number = 0;\n\n    private defTexture: Texture | null = null;\t//给fillrect用\n    /**@internal */\n    _colorFiler: ColorFilter | null = null;\n\n    drawTexAlign: boolean = false;\t\t// 按照像素对齐\n    /**@internal */\n    _incache: boolean = false;\t\t\t// 正处在cacheas normal过程中\n\n    isMain: boolean = false;\t\t\t\t// 是否是主context\n\n    clearColor: Color = new Color();\n\n    constructor() {\n        Context._contextcount++;\n        Context._textRender = Context._textRender || new TextRender();\n        //_ib = IndexBuffer2D.QuadrangleIB;\n        if (!this.defTexture) {\n            var defTex2d: Texture2D = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\n            defTex2d.lock = true;\n            this.defTexture = new Texture(defTex2d);\n        }\n        this._lastTex = this.defTexture;\n        this.clear();\n    }\n\n    clearBG(r: number, g: number, b: number, a: number): void {\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\n        this.clearColor.r = r;\n        this.clearColor.g = g;\n        this.clearColor.b = b;\n        this.clearColor.a = a;\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1);\n        // gl.clearColor(r, g, b, a);\n        // gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    //TODO:coverage\n    /**@internal */\n    _getSubmits(): any[] {\n        return this._submits;\n    }\n\n    /**\n     * 释放占用内存\n     * @param\tkeepRT  是否保留rendertarget\n     */\n    private _releaseMem(keepRT: boolean = false): void {\n        if (!this._submits)\n            return;\n\n        this._curMat && this._curMat.destroy();\n        //@ts-ignore\n        this._curMat = null;\n        this._shader2D.destroy();\n        //@ts-ignore\n        this._shader2D = null;\n        //@ts-ignore\n        this._charSubmitCache.clear();\n\n        for (var i: number = 0, n: number = this._submits._length; i < n; i++) {\n            this._submits[i].releaseRender();\n        }\n        this._submits.length = 0;\n        this._submits._length = 0;\n        this._submits = null;\n        this._curSubmit = null;\n\n        this._path = null;\n        //_other && (_other.font = null);\n        this._save = null;\n\n        var sz: number;\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\n            var curm: Mesh2D = this.meshlist[i];\n            curm.destroy();\n        }\n        this.meshlist.length = 0;\n\n        this.sprite = null;\n        if (!keepRT) {\n            this._targets && (this._targets.destroy());\n            this._targets = null;\n        }\n        //TODO mesh 暂时releaseMem了\n    }\n\n    /**\n     * 释放所有资源\n     * @param\tkeepRT  是否保留rendertarget\n     */\n    destroy(keepRT: boolean = false): void {\n        --Context._contextcount;\n        this.sprite = null;\n        this._releaseMem(keepRT);\n        this._charSubmitCache && this._charSubmitCache.destroy();\n        //_ib && (_ib != IndexBuffer2D.QuadrangleIB) && _ib.releaseResource();\n        this._mesh.destroy();\n        if (!keepRT) {\n            this._targets && this._targets.destroy();//用回收么？可能没什么重复利用的价值\n            this._targets = null;\n        }\n        if (this.defTexture) {\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\n            this.defTexture.destroy();\n        }\n\n    }\n\n    clear(): void {\n        if (!this._submits) {//第一次\n            this._other = ContextParams.DEFAULT;\n            this._curMat = Matrix.create();\n            this._charSubmitCache = new CharSubmitCache();\n            //_vb = _vbs[0] = VertexBuffer2D.create( -1);\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\n            this.meshlist.push(this._mesh);\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\n            this.meshlist.push(this._pathMesh);\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\n            this.meshlist.push(this._triangleMesh);\n            //if(Config.smartCache) _vbs[1] = VertexBuffer2D.create( -1);\n            this._submits = [];\n            this._save = [SaveMark.Create(this)];\n            this._save.length = 10;\n            this._shader2D = new Shader2D();\n        }\n\n        this._submitKey.clear();\n\n        //_vb = _vbs[_renderCount%2];\n        //_vb.clear();\n        this._mesh.clearVB();\n\n        //_targets && (_targets.repaint = true);\n\n        this._drawCount = 1;\n\n        this._other = ContextParams.DEFAULT;\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\n\n        this._nBlendType = 0;\n\n        this._clipRect = Context.MAXCLIPRECT;\n\n        this._curSubmit = SubmitBase.RENDERBASE;\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\n        SubmitBase.RENDERBASE._numEle = 0;\n\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\n\n        for (let i = 0, n = this._submits._length; i < n; i++)\n            this._submits[i].releaseRender();\n\n        this._submits._length = 0;\n\n        this._curMat.identity();\n        this._other.clear();\n\n        this._saveMark = <SaveMark>this._save[0];\n        this._save._length = 1;\n    }\n\n    /**\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\n     * @param\tw\n     * @param\th\n     */\n    size(w: number, h: number): void {\n        if (this._width != w || this._height != h) {\n            this._width = w;\n            this._height = h;\n            //TODO 问题：如果是rendertarget 计算内存会有问题，即canvas算一次，rt又算一次,所以这里要修改\n            //这种情况下canvas应该不占内存\n            if (this._targets) {\n                this._targets.destroy();\n                this._targets = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, -1);\n            }\n            //如果是主画布，要记录窗口大小\n            //如果不是 TODO\n            if (this.isMain) {\n                LayaGL.renderEngine.viewport(0, 0, w, h);\n                RenderState2D.width = w;\n                RenderState2D.height = h;\n            }\n        }\n        if (w === 0 && h === 0) this._releaseMem();\n    }\n\n    /**\n     * 当前canvas请求保存渲染结果。\n     * 实现：\n     * 如果value==true，就要给_target赋值\n     * @param value {Boolean} \n     */\n    set asBitmap(value: boolean) {\n        if (value) {\n            //缺省的RGB没有a，不合理把。况且没必要自定义一个常量。\n            //深度格式为-1表示不用深度缓存。\n            let rt = this._targets;\n            if (!this._width || !this._height)\n                throw Error(\"asBitmap no size!\");\n            if (!rt || rt.width != this._width || rt.height != this._height) {\n                if (rt) {\n                    rt.destroy();\n                }\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTargetFormat.R8G8B8A8);\n            }\n        } else {\n            this._targets && this._targets.destroy();\n            this._targets = null;\n        }\n    }\n\n    /**\n     * 获得当前矩阵的缩放值\n     * 避免每次都计算getScaleX\n     * @return\n     */\n    getMatScaleX(): number {\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\n            return this._lastMatScaleX;\n        this._lastMatScaleX = this._curMat.getScaleX();\n        this._lastMat_a = this._curMat.a;\n        this._lastMat_b = this._curMat.b;\n        return this._lastMatScaleX;\n    }\n\n    getMatScaleY(): number {\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\n            return this._lastMatScaleY;\n        this._lastMatScaleY = this._curMat.getScaleY();\n        this._lastMat_c = this._curMat.c;\n        this._lastMat_d = this._curMat.d;\n        return this._lastMatScaleY;\n    }\n\n    //TODO\n    setFillColor(color: number): void {\n        this._fillColor = color;\n    }\n    getFillColor(): number {\n        return this._fillColor;\n    }\n\n    set fillStyle(value: any) {\n        if (!this._shader2D.fillStyle.equal(value)) {\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\n            this._shader2D.fillStyle = DrawStyle.create(value);\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\n        }\n    }\n\n    get fillStyle(): any {\n        return this._shader2D.fillStyle;\n    }\n\n    set globalAlpha(value: number) {\n        value = Math.floor(value * 1000) / 1000;\n        if (value != this._shader2D.ALPHA) {\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\n            this._shader2D.ALPHA = value;\n        }\n    }\n\n    get globalAlpha(): number {\n        return this._shader2D.ALPHA;\n    }\n\n    set textAlign(value: string) {\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\n    }\n\n    get textAlign(): string {\n        return this._other.textAlign;\n    }\n\n    set textBaseline(value: string) {\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\n    }\n\n    get textBaseline(): string {\n        return this._other.textBaseline;\n    }\n\n    set globalCompositeOperation(value: string) {\n        var n = BlendMode.TOINT[value];\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\n    }\n\n    get globalCompositeOperation(): string {\n        return BlendMode.NAMES[this._nBlendType];\n    }\n\n    set strokeStyle(value: any) {\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\n    }\n\n    get strokeStyle(): any {\n        return this._shader2D.strokeStyle;\n    }\n\n    translate(x: number, y: number): void {\n        if (x !== 0 || y !== 0) {\n            SaveTranslate.save(this);\n            if (this._curMat._bTransform) {\n                SaveTransform.save(this);\n                //_curMat.transformPointN(Point.TEMP.setTo(x, y));\n                //x = Point.TEMP.x;\n                //y = Point.TEMP.y;\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\n            } else {\n                this._curMat.tx = x;\n                this._curMat.ty = y;\n            }\n        }\n    }\n\n    set lineWidth(value: number) {\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\n    }\n\n    get lineWidth(): number {\n        return this._other.lineWidth;\n    }\n\n    save(): void {\n        this._save[this._save._length++] = SaveMark.Create(this);\n    }\n\n    restore(): void {\n        var sz: number = this._save._length;\n        var lastBlend: number = this._nBlendType;\n        if (sz < 1)\n            return;\n        for (var i: number = sz - 1; i >= 0; i--) {\n            var o: ISaveData = this._save[i];\n            o.restore(this);\n            if (o.isSaveMark()) {\n                this._save._length = i;\n                return;\n            }\n        }\n        if (lastBlend != this._nBlendType) {\n            //阻止合并\n            this._curSubmit = SubmitBase.RENDERBASE;\n        }\n    }\n\n    set font(str: string) {\n        //if (str == _other.font.toString())\n        //\treturn;\n        this._other = this._other.make();\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\n        //_other.font === FontInContext.EMPTY ? (_other.font = new FontInContext(str)) : (_other.font.setFont(str));\n    }\n\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\n    }\n    // 与fillText的区别是没有border信息\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\n    }\n    fillWords(words: HTMLChar[], x: number, y: number, fontStr: string, color: string): void {\n        Context._textRender!.fillWords(this, words, x, y, fontStr, color, null, 0);\n    }\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\n    }\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\n    }\n    fillBorderWords(words: HTMLChar[], x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number): void {\n        Context._textRender!.fillWords(this, words, x, y, font, color, borderColor, lineWidth);\n    }\n\n    /**@internal */\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\n        Context._textRender!._fast_filltext(this, data, null, x, y, (<FontInfo>fontObj), color, strokeColor, lineWidth, textAlign, underLine);\n    }\n    fillWords11(data: HTMLChar[], x: number, y: number, fontStr: FontInfo, color: string, strokeColor: string | null, lineWidth: number): void {\n        Context._textRender!.fillWords(this, data, x, y, fontStr, color, strokeColor, lineWidth);\n    }\n\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\n        Context._textRender!.filltext(this, data, x, y, fontStr, color, strokeColor, lineWidth, textAlign);\n    }\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\n        var submit: Submit = this._curSubmit;\n        var sameKey: boolean = submit && (submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && submit._key.blendShader === this._nBlendType);\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(this._mesh);\n            sameKey = false;\n        }\n\n        //clipinfo\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\n\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\n        if (!this.clipedOff(this._transedPoints)) {\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\n            if (!sameKey) {\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n                this._submits[this._submits._length++] = submit;\n                this._copyClipInfo(submit, this._globalClipMatrix);\n                if (!this._lastTex || this._lastTex.destroyed) {\n                    submit.shaderValue.textureHost = this.defTexture;\n                } else {\n                    submit.shaderValue.textureHost = this._lastTex;\n                }\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\n            }\n            this._curSubmit._numEle += 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n        }\n    }\n\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\n        //var rgb = drawstyle.toInt() ;\n        //由于显卡的格式是 rgba，所以需要处理一下\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\n        var rgba: number = this.mixRGBandAlpha(drawstyle.toInt());\n        this._fillRect(x, y, width, height, rgba);\n    }\n\n    //TODO:coverage\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point): void {\n        //test\n        /*\n        var aa = 95 / 274, bb = 136 / 341, cc = (95 + 41) / 274, dd = (136 + 48) / 341;\n        texture.uv = [aa,bb, cc,bb, cc,dd, aa,dd];\n        texture.width = 41;\n        texture.height = 48;\n        */\n        //test\n\n        if (!texture._getSource()) {\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\n            return;\n        }\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y);\n    }\n\n    /**@internal */\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: any[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number): void {\n        var submit: Submit = this._curSubmit;\n        var sameKey: boolean = false;\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\n            this.meshlist.push(this._mesh);\n            sameKey = false;\n        }\n\n        //filltexture相关逻辑。计算rect大小以及对应的uv\n        var repeatx: boolean = true;\n        var repeaty: boolean = true;\n        switch (type) {\n            case \"repeat\": break;\n            case \"repeat-x\": repeaty = false; break;\n            case \"repeat-y\": repeatx = false; break;\n            case \"no-repeat\": repeatx = repeaty = false; break;\n            default: break;\n        }\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\n        var uv: any[] = this._temp4Points;\n        var stu: number = 0; //uv起点\n        var stv: number = 0;\n        var stx: number = 0, sty: number = 0, edx: number = 0, edy: number = 0;\n        if (offsetx < 0) {\n            stx = x;\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\n        } else {\n            stx = x + offsetx;\n        }\n        if (offsety < 0) {\n            sty = y;\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\n        } else {\n            sty = y + offsety;\n        }\n\n        edx = x + width;\n        edy = y + height;\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\n        if (edx < x || edy < y)\n            return;\n        if (stx > edx || sty > edy)\n            return;\n\n        //计算最大uv\n        var edu: number = (edx - x - offsetx) / texw;\n        var edv: number = (edy - y - offsety) / texh;\n\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\n        if (!this.clipedOff(this._transedPoints)) {\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\n            var rgba: number = this._mixRGBandAlpha(0xffffffff, this._shader2D.ALPHA);\n\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\n\n            var sv: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\n            sv.defines.add(ShaderDefines2D.FILLTEXTURE);\n            ((<any>sv)).u_TexRange = texuvRect.concat();\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\n            this._submits[this._submits._length++] = submit;\n            this._copyClipInfo(submit, this._globalClipMatrix);\n            submit.shaderValue.textureHost = texture;\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\n            this._curSubmit._numEle += 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n        }\n        this.breakNextMerge();\t//暂不合并\n    }\n\n\n    /**\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\n     * @param\tvalue\n     */\n    setColorFilter(filter: ColorFilter): void {\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\n        //_shader2D.filters = value;\n        this._colorFiler = filter;\n        this._curSubmit = SubmitBase.RENDERBASE;\n        //_reCalculateBlendShader();\n    }\n\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number): void {\n        this._drawTextureM(tex, x, y, width, height, null, 1, null);\n    }\n\n    drawTextures(tex: Texture, pos: any[], tx: number, ty: number): void {\n        if (!tex._getSource()) //source内调用tex.active();\n        {\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\n            return;\n        }\n\n        //TODO 还没实现\n        var n: number = pos.length / 2;\n        var ipos: number = 0;\n        var bmpid: number = (tex.bitmap as Texture2D).id;\n        for (var i: number = 0; i < n; i++) {\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false);\n        }\n\n        /*\n        var pre:Rectangle = _clipRect;\n        _clipRect = MAXCLIPRECT;\n        if (!_drawTextureM(tex, pos[0], pos[1], tex.width, tex.height,null, 1)) {\n            throw \"drawTextures err\";\n            return;\n        }\n        _clipRect = pre;\n        \n        Stat.drawCall++;//= pos.length / 2;\n        \n        if (pos.length < 4)\n            return;\n        \n        var finalVB:VertexBuffer2D = _curSubmit._vb || _vb;\n        var sx:Number = _curMat.a, sy:Number = _curMat.d;\n        var vpos:int = finalVB._byteLength >> 2;// + Context._RECTVBSIZE;\n        finalVB.byteLength = finalVB._byteLength + (pos.length / 2 - 1) * Context._RECTVBSIZEBYTE;\n        var vbdata:Float32Array = finalVB.getFloat32Array();\n        for (var i:int = 2, sz:int = pos.length; i < sz; i += 2) {\n            GlUtils.copyPreImgVb(finalVB,vpos, (pos[i] - pos[i - 2]) * sx, (pos[i + 1] - pos[i - 1]) * sy,vbdata);\n            _curSubmit._numEle += 6;\n            vpos += Context._RECTVBSIZE;\n        }\n        */\n    }\n\n    /**\n     * 为drawTexture添加一个新的submit。类型是 SubmitTexture\n     * @param\tvbSize\n     * @param\talpha\n     * @param\twebGLImg\n     * @param\ttex\n     */\n    //TODO:coverage\n    private _drawTextureAddSubmit(imgid: number, tex: Texture): void {\n        //var alphaBack:Number = shader.ALPHA;\n        //shader.ALPHA *= alpha;\n\n        var submit: SubmitTexture = null;\n        submit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n        this._submits[this._submits._length++] = submit;\n        submit.shaderValue.textureHost = tex;\n        //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, imgid);\n        submit._key.other = imgid;\n        //submit._key.alpha = shader.ALPHA;\n        submit._renderType = SubmitBase.TYPE_TEXTURE;\n        this._curSubmit = submit;\n\n        //shader.ALPHA = alphaBack;\n    }\n\n    /**@internal */\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null): boolean {\n        // 注意sprite要保存，因为后面会被冲掉\n        var cs = this.sprite;\n        if (!tex._getSource(function (): void {\n            if (cs) {\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\n            }\n        })) { //source内调用tex.active();\n            return false;\n        }\n\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false);\n    }\n\n    /**@internal */\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[]): boolean {\n        return this._inner_drawTexture((<Texture>(tex as any)), -1, x, y, width, height, m, uv, 1.0, false);\n    }\n\n    //TODO:coverage\n    submitDebugger(): void {\n        this._submits[this._submits._length++] = SubmitCMD.create([], function (): void { debugger; }, this);\n    }\n\n    /*\n    private function copyClipInfo(submit:Submit, clipInfo:Array):void {\n        var cd:Array = submit.shaderValue.clipDir;\n        cd[0] = clipInfo[2]; cd[1] = clipInfo[3]; cd[2] = clipInfo[4]; cd[3] = clipInfo[5];\n        var cp:Array = submit.shaderValue.clipRect;\n        cp[0] = clipInfo[0]; cp[1] = clipInfo[1];\n        submit.clipInfoID = this._clipInfoID;\n    }\n    */\n    /**@internal */\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void {\n        var cm: any[] = submit.shaderValue.clipMatDir;\n        cm[0] = clipInfo.a; cm[1] = clipInfo.b; cm[2] = clipInfo.c; cm[3] = clipInfo.d;\n        var cmp: any[] = submit.shaderValue.clipMatPos;\n        cmp[0] = clipInfo.tx; cmp[1] = clipInfo.ty;\n        submit.clipInfoID = this._clipInfoID;\n\n        if (this._clipInCache) {\n            submit.shaderValue.clipOff[0] = 1;\n        }\n    }\n\n\n    private isSameClipInfo(submit: SubmitBase): boolean {\n        return (submit.clipInfoID === this._clipInfoID);\n        /*\n        var cd:Array = submit.shaderValue.clipDir;\n        var cp:Array = submit.shaderValue.clipRect;\n        \n        if (clipInfo[0] != cp[0] || clipInfo[1] != cp[1] || clipInfo[2] != cd[0] || clipInfo[3] != cd[1] || clipInfo[4] != cd[2] || clipInfo[5] != cd[3] ) \n            return false;\n        return true;\n        */\n    }\n\n    /**\n     * @internal\n     * 这个还是会检查是否合并\n     * @param\ttex\n     * @param\tminVertNum\n     */\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void {\n        //var sameKey:Boolean = tex.bitmap.id >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === tex.bitmap.id ;\n\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(this._mesh);\n            //sameKey = false;\n        }\n\n        var submit: SubmitTexture = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n        this._submits[this._submits._length++] = this._curSubmit = submit;\n        submit.shaderValue.textureHost = tex;\n        this._copyClipInfo(submit, this._globalClipMatrix);\n    }\n\n    /**\n     * @internal\n     * 使用上面的设置（texture，submit，alpha，clip），画一个rect\n     */\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void {\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\n        //这个是给文字用的，为了清晰，必须要按照屏幕像素对齐，并且四舍五入。\n        var ops: any[] = this._transedPoints;\n        ops[0] = (ops[0] + 0.5) | 0;\n        ops[1] = (ops[1] + 0.5) | 0;\n        ops[2] = (ops[2] + 0.5) | 0;\n        ops[3] = (ops[3] + 0.5) | 0;\n        ops[4] = (ops[4] + 0.5) | 0;\n        ops[5] = (ops[5] + 0.5) | 0;\n        ops[6] = (ops[6] + 0.5) | 0;\n        ops[7] = (ops[7] + 0.5) | 0;\n\n        if (!this.clipedOff(this._transedPoints)) {\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\n            this._curSubmit._numEle += 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n        }\n    }\n\n    drawCallOptimize(enable: boolean): boolean {\n        this._charSubmitCache.enable(enable, this);\n        return enable;\n    }\n\n    /**\n     * @internal\n     * @param\ttex {Texture | RenderTexture }\n     * @param  imgid 图片id用来比较合并的\n     * @param\tx\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @param\tm\n     * @param\talpha\n     * @param\tuv\n     * @return\n     */\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean): boolean {\n        if (width <= 0 || height <= 0) {\n            return false;\n        }\n        var preKey: SubmitKey = this._curSubmit._key;\n        uv = uv || tex._uv\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\n        //因为好多动画是drawTexture和drawTriangle混用的\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\n            var tv: Float32Array = this._drawTexToDrawTri_Vert;\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\n            this._drawTriUseAbsMatrix = true;\n            var tuv: Float32Array = this._tempUV;\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\n            this._drawTriUseAbsMatrix = false;\n            return true;\n        }\n\n        var mesh = this._mesh;\n        var submit: SubmitTexture = this._curSubmit;\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\n\n        //凡是这个都是在_mesh上操作，不用考虑samekey\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\n\n        if (this.drawTexAlign) {\n            var round: Function = Math.round;\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\n            ops[1] = round(ops[1]);\n            ops[2] = round(ops[2]);\n            ops[3] = round(ops[3]);\n            ops[4] = round(ops[4]);\n            ops[5] = round(ops[5]);\n            ops[6] = round(ops[6]);\n            ops[7] = round(ops[7]);\n            this.drawTexAlign = false;\t//一次性的\n        }\n\n        var rgba: number = this._mixRGBandAlpha(0xffffffff, this._shader2D.ALPHA * alpha);\n\n        //lastRender = false;\n        if (lastRender) {\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\n            return true;\n        }\n\n        this._drawCount++;\n\n        var sameKey: boolean = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid;\n\n        //clipinfo\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\n\n        this._lastTex = tex;\n\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(mesh);\n            sameKey = false;\t//新的mesh不能算samekey了\n        }\n\n        {\n            mesh.addQuad(ops, uv, rgba, true);\n            if (!sameKey) {\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n                submit.shaderValue.textureHost = tex;\n                submit._key.other = imgid;\n                this._copyClipInfo(submit, this._globalClipMatrix);\n            }\n            submit._numEle += 6;\n            mesh.indexNum += 6;\n            mesh.vertNum += 4;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 转换4个顶点。为了效率这个不做任何检查。需要调用者的配合。\n     * @param\ta\t\t输入。8个元素表示4个点\n     * @param\tout\t\t输出\n     */\n    transform4Points(a: any[], m: Matrix, out: any[]): void {\n        /*\n            out[0] = 846;\n            out[1] = 656;\n            out[2] = 881;\n            out[3] = 657;\n            out[4] = 880;\n            out[5] = 732;\n            out[6] = 844;\n            out[7] = 731;\n            return ;\n        */\n        //var m:Matrix = _curMat;\n        var tx: number = m.tx;\n        var ty: number = m.ty;\n        var ma: number = m.a;\n        var mb: number = m.b;\n        var mc: number = m.c;\n        var md: number = m.d;\n        var a0: number = a[0];\n        var a1: number = a[1];\n        var a2: number = a[2];\n        var a3: number = a[3];\n        var a4: number = a[4];\n        var a5: number = a[5];\n        var a6: number = a[6];\n        var a7: number = a[7];\n        if (m._bTransform) {\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\n        } else {\n            out[0] = a0 + tx; out[1] = a1 + ty;\n            out[2] = a2 + tx; out[3] = a3 + ty;\n            out[4] = a4 + tx; out[5] = a5 + ty;\n            out[6] = a6 + tx; out[7] = a7 + ty;\n        }\n    }\n\n    /**\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\n     * @param\tpt\n     * @return\n     */\n    clipedOff(pt: any[]): boolean {\n        //TODO\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\n            return true;\n        return false;\n    }\n\n    /**\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \n     * @param\tx\n     * @param\ty\n     * @param\tw\n     * @param\th\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\n     */\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\n        /*\n        out[0] = 100.1; out[1] = 100.1;\n        out[2] = 101.1; out[3] = 100.1;\n        out[4] = 101.1; out[5] = 101.1;\n        out[6] = 100.1; out[7] = 101.1;\n        return;\n        */\n        var xoff: number = 0;\n        if (italicDeg != 0) {\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\n        }\n        var maxx: number = x + w; var maxy: number = y + h;\n\n        var tx: number = m.tx;\n        var ty: number = m.ty;\n        var ma: number = m.a;\n        var mb: number = m.b;\n        var mc: number = m.c;\n        var md: number = m.d;\n        var a0: number = x + xoff;\n        var a1: number = y;\n        var a2: number = maxx + xoff;\n        var a3: number = y;\n        var a4: number = maxx;\n        var a5: number = maxy;\n        var a6: number = x;\n        var a7: number = maxy;\n        if (m._bTransform) {\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\n            /* 旋转的情况下这个是错的。TODO\n            let dx = out[2] - out[0];\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\n            if (dx < minw) {\n                dx = minw - dx;\n                out[2] += dx;\n            }\n            dx = out[4] - out[6];\n            if (dx < minw) {\n                dx = minw - dx;\n                out[4] += dx;\n            }\n            */\n        } else {\n            out[0] = a0 + tx; out[1] = a1 + ty;\n            out[2] = a2 + tx; out[3] = a3 + ty;\n            out[4] = a4 + tx; out[5] = a5 + ty;\n            out[6] = a6 + tx; out[7] = a7 + ty;\n        }\n    }\n\n    pushRT(): void {\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\n    }\n    popRT(): void {\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\n        this.breakNextMerge();\n    }\n\n    //TODO:coverage\n    useRT(rt: RenderTexture2D): void {\n        //这里并没有做cliprect的保存恢复。因为认为调用这个函数的话，就是完全不走context流程了，完全自己控制。\n        function _use(rt: RenderTexture2D): void {\n            if (!rt) {\n                throw 'error useRT'\n            } else {\n                rt.start();\n                rt.clear(0, 0, 0, 0);\n            }\n        }\n\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\n        this.breakNextMerge();\n    }\n\n    /**\n     * 异步执行rt的restore函数\n     * @param\trt\n     */\n    //TODO:coverage\n    RTRestore(rt: RenderTexture2D): void {\n        function _restore(rt: RenderTexture2D): void {\n            rt.restore();\n        }\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\n        this.breakNextMerge();\n    }\n\n    /**\n     * 强制拒绝submit合并\n     * 例如切换rt的时候\n     */\n    breakNextMerge(): void {\n        this._curSubmit = SubmitBase.RENDERBASE;\n    }\n\n    //TODO:coverage\n    private _repaintSprite(): void {\n        this.sprite && this.sprite.repaint();\n    }\n\n    /**\n     * \n     * @param\ttex\n     * @param\tx\t\t\t\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @param\ttransform\t图片本身希望的矩阵\n     * @param\ttx\t\t\t节点的位置\n     * @param\tty\n     * @param\talpha\n     */\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, colorfilter: ColorFilter | null = null, uv?: number[]): void {\n        var oldcomp: string;\n        var curMat: Matrix = this._curMat;\n        if (blendMode) {\n            oldcomp = this.globalCompositeOperation;\n            this.globalCompositeOperation = blendMode;\n        }\n        var oldColorFilter = this._colorFiler;\n        if (colorfilter) {\n            this.setColorFilter(colorfilter);\n        }\n\n        if (!transform) {\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv);\n            if (blendMode) {\n                this.globalCompositeOperation = oldcomp;\n            }\n            if (colorfilter) {\n                this.setColorFilter(oldColorFilter);\n            }\n            return;\n        }\n        var tmpMat: Matrix = this._tmpMatrix;\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\n        tmpMat._bTransform = transform._bTransform;\n\n        if (transform && curMat._bTransform) {\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\n            Matrix.mul(tmpMat, curMat, tmpMat);\n            transform = tmpMat;\n            transform._bTransform = true;\n        } else {\n            //如果curmat没有旋转。\n            tmpMat.tx += curMat.tx;\n            tmpMat.ty += curMat.ty;\n            transform = tmpMat;\n        }\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv);\n        if (blendMode) {\n            this.globalCompositeOperation = oldcomp;\n        }\n        if (colorfilter) {\n            this.setColorFilter(oldColorFilter);\n        }\n    }\n\n    /**\n     * * 把ctx中的submits提交。结果渲染到target上\n     * @param\tctx\n     * @param\ttarget\n     */\n    private _flushToTarget(context: Context, target: RenderTexture2D): void {\n        //if (target._destroy) return;\n        //var preworldClipRect:Rectangle = RenderState2D.worldClipRect;\n        //裁剪不用考虑，现在是在context内部自己维护，不会乱窜\n        RenderState2D.worldScissorTest = false;\n        LayaGL.renderEngine.scissorTest(false);\n\n        var preAlpha: number = RenderState2D.worldAlpha;\n        var preMatrix4: any[] = RenderState2D.worldMatrix4;\n        var preMatrix: Matrix = RenderState2D.worldMatrix;\n\n        var preShaderDefines: ShaderDefines2D = RenderState2D.worldShaderDefines;\n\n        RenderState2D.worldMatrix = Matrix.EMPTY;\n\n        RenderState2D.restoreTempArray();\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\n        RenderState2D.worldAlpha = 1;\n        //RenderState2D.worldFilters = null;\n        //RenderState2D.worldShaderDefines = null;\n        BaseShader.activeShader = null;\n\n        target.start();\n        // 如果没有命令就不要clear。这么改是因为嵌套cacheas出问题了\n        // 如果一个sprite cacheas normal ，他的子节点有cacheas bitmap的（包括mask等）就会不断的执行 _flushToTarget和drawCamvase,从而把target上的内容清掉\n        // 由于cacheas normal 导致 RenderSprite没有机会执行 _cacheStyle.canvas 存在的分支。在\n        if (context._submits._length > 0)\n            target.clear(0, 0, 0, 0);\n\n        context._curSubmit = SubmitBase.RENDERBASE;\n        context.flush();\n        context.clear();\n        target.restore();\n        context._curSubmit = SubmitBase.RENDERBASE;\n        //context._canvas\n        BaseShader.activeShader = null;\n        RenderState2D.worldAlpha = preAlpha;\n        RenderState2D.worldMatrix4 = preMatrix4;\n        RenderState2D.worldMatrix = preMatrix;\n        //RenderState2D.worldFilters = preFilters;\n        //RenderState2D.worldShaderDefines = preShaderDefines;\n    }\n\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\n        if (!canvas) return;\n        var src: Context = canvas.context as Context;\n        var submit: ISubmit;\n        if (src._targets) {\n            //生成渲染结果到src._targets上\n            /*\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\n            _curSubmit = SubmitBase.RENDERBASE;\n            //画出src._targets\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\n            */\n            //应用并清空canvas中的指令。如果内容需要重画，RenderSprite会给他重新加入submit\n            if (src._submits._length > 0) {\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\n                this._submits[this._submits._length++] = submit;\n            }\n            //在这之前就已经渲染出结果了。\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\n            this._curSubmit = SubmitBase.RENDERBASE;\n            /*\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\n            //src._targets.flush(src);\n            _curSubmit = SubmitBase.RENDERBASE;\n            //src._targets.drawTo(this, x, y, width, height);\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\n            _drawRenderTexture(src._targets, x, y, width, height,null,1.0, RenderTexture.flipyuv);\n            */\n        } else {\n            var canv: WebGLCacheAsNormalCanvas = (<WebGLCacheAsNormalCanvas>(canvas as any));\n            if (canv.touches) {\n                ((<any[]>canv.touches)).forEach(function (v: CharRenderInfo): void { v.touch(); });\n            }\n\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\n            this._submits[this._submits._length++] = submit;\n            ((<SubmitCanvas>submit))._key.clear();\n            //var sx:Number = width / canvas.width;\n            //var sy:Number = height / canvas.height;\n            var mat: Matrix = ((<SubmitCanvas>submit))._matrix;\n            this._curMat.copyTo(mat);\n            //sx != 1 && sy != 1 && mat.scale(sx, sy);\n            // 先加上位置，最后再乘逆\n            var tx: number = mat.tx, ty: number = mat.ty;\n            mat.tx = mat.ty = 0;\n            mat.transformPoint(Point.TEMP.setTo(x, y));\t// 用当前矩阵变换 (x,y)\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\t// 加上原来的 (tx,ty)\n\n            Matrix.mul(canv.invMat, mat, mat);\n\n            this._curSubmit = SubmitBase.RENDERBASE;\n        }\n    }\n\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\n        this._drawCount++;\n        var rgba: number = 0xffffffff;\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(this._mesh);\n        }\n\n        //凡是这个都是在_mesh上操作，不用考虑samekey\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\n        if (!this.clipedOff(this._transedPoints)) {\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, 0xffffffff, true);\n            //if (GlUtils.fillRectImgVb( _mesh._vb, _clipRect, x, y, width , height , uv || Texture.DEF_UV, m || _curMat, rgba, this)) {\n            var submit: SubmitTarget = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\n            this._copyClipInfo((<SubmitBase>(submit as any)), this._globalClipMatrix);\n            submit._numEle = 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n            this._submits[this._submits._length++] = submit;\n            //暂时drawTarget不合并\n            this._curSubmit = SubmitBase.RENDERBASE\n            return true;\n        }\n        //暂时drawTarget不合并\n        this._curSubmit = SubmitBase.RENDERBASE\n        return false;\n    }\n\n    drawTriangles(tex: Texture,\n        x: number, y: number,\n        vertices: Float32Array,\n        uvs: Float32Array,\n        indices: Uint16Array,\n        matrix: Matrix, alpha: number, color: ColorFilter, blendMode: string, colorNum: number = 0xffffffff): void {\n\n        if (!tex._getSource()) { //source内调用tex.active();\n            if (this.sprite) {\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\n            }\n            return;\n        }\n        var oldcomp: string | null = null;\n        if (blendMode) {\n            oldcomp = this.globalCompositeOperation;\n            this.globalCompositeOperation = blendMode;\n        }\n        this._drawCount++;\n\n        // 为了提高效率，把一些变量放到这里\n        var tmpMat = this._tmpMatrix;\n        var triMesh = this._triangleMesh!;\n\n        var oldColorFilter: ColorFilter | null = null;\n        var needRestorFilter: boolean = false;\n        if (color) {\n            oldColorFilter = this._colorFiler;\n            //这个不用save，直接修改就行\n            this._colorFiler = color;\n            this._curSubmit = SubmitBase.RENDERBASE;\n            needRestorFilter = oldColorFilter != color;\n        }\n        var webGLImg = tex.bitmap;\n        var preKey: SubmitKey = this._curSubmit._key;\n        var sameKey: boolean = preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === webGLImg.id && preKey.blendShader == this._nBlendType;\n\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(triMesh);\n            sameKey = false;\t//新的mesh不能算samekey了\n        }\n        if (!sameKey) {\n            //添加一个新的submit\n            var submit: SubmitTexture = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\n            submit.shaderValue.textureHost = tex;\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\n            submit._key.other = webGLImg.id;\n            this._copyClipInfo(submit, this._globalClipMatrix);\n            this._submits[this._submits._length++] = submit;\n        }\n\n        var rgba: number = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\n        if (!this._drawTriUseAbsMatrix) {\n            if (!matrix) {\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\n            } else {\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\n            }\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\n        } else {\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\n        }\n        this._curSubmit._numEle += indices.length;\n\n        if (needRestorFilter) {\n            this._colorFiler = oldColorFilter;\n            this._curSubmit = SubmitBase.RENDERBASE;\n        }\n        if (blendMode) {\n            this.globalCompositeOperation = oldcomp!;\n        }\n        //return true;\n    }\n\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\n        SaveTransform.save(this);\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\n        this._curMat._checkTransform();\n    }\n\n    //TODO:coverage\n    /**@internal */\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\n        matrix.setTranslate(tx, ty);\n        Matrix.mul(matrix, this._curMat, this._curMat);\n        matrix.setTranslate(0, 0);\n        this._curMat._bTransform = true;\n    }\n\n    //TODO:coverage\n    setTransformByMatrix(value: Matrix): void {\n        value.copyTo(this._curMat);\n    }\n\n    rotate(angle: number): void {\n        SaveTransform.save(this);\n        this._curMat.rotateEx(angle);\n    }\n\n    scale(scaleX: number, scaleY: number): void {\n        SaveTransform.save(this);\n        this._curMat.scaleEx(scaleX, scaleY);\n    }\n\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\n        SaveClipRect.save(this);\n        if (this._clipRect == Context.MAXCLIPRECT) {\n            this._clipRect = new Rectangle(x, y, width, height);\n        } else {\n            this._clipRect.width = width;\n            this._clipRect.height = height;\n\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\n            this._clipRect.x = x;\n            this._clipRect.y = y;\n        }\n        this._clipID_Gen++;\n        this._clipID_Gen %= 10000;\n        this._clipInfoID = this._clipID_Gen;\n\n        if (escape) {\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\n            return;\n        }\n\n        var cm: Matrix = this._globalClipMatrix;\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\n        var minx: number = cm.tx;\n        var miny: number = cm.ty;\n        var maxx: number = minx + cm.a;\n        var maxy: number = miny + cm.d;\n        //TEMP end\n\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\n            cm.b = cm.c = cm.tx = cm.ty = 0;\n        } else {\n            //其实就是矩阵相乘\n            if (this._curMat._bTransform) {\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\n                cm.a = this._clipRect.width * this._curMat.a;\n                cm.b = this._clipRect.width * this._curMat.b;\n                cm.c = this._clipRect.height * this._curMat.c;\n                cm.d = this._clipRect.height * this._curMat.d;\n            } else {\n                cm.tx = this._clipRect.x + this._curMat.tx;\n                cm.ty = this._clipRect.y + this._curMat.ty;\n                cm.a = this._clipRect.width;\n                cm.b = cm.c = 0;\n                cm.d = this._clipRect.height;\n            }\n            if (this._incache) {\n                this._clipInCache = true;\n            }\n        }\n\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\n        if (cm.a > 0 && cm.d > 0) {\n            var cmaxx: number = cm.tx + cm.a;\n            var cmaxy: number = cm.ty + cm.d;\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\n                //超出范围了\n                cm.a = -0.1; cm.d = -0.1;\n            } else {\n                if (cm.tx < minx) {\n                    cm.a -= (minx - cm.tx);\n                    cm.tx = minx;\n                }\n                if (cmaxx > maxx) {\n                    cm.a -= (cmaxx - maxx);\n                }\n                if (cm.ty < miny) {\n                    cm.d -= (miny - cm.ty);\n                    cm.ty = miny;\n                }\n                if (cmaxy > maxy) {\n                    cm.d -= (cmaxy - maxy);\n                }\n                if (cm.a <= 0) cm.a = -0.1;\n                if (cm.d <= 0) cm.d = -0.1;\n            }\n        }\n        //TEMP end\n    }\n\n    addRenderObject(o: ISubmit): void {\n        this._submits[this._submits._length++] = o;\n    }\n\n    /**\n     * \n     * @param\tstart\n     * @param\tend\n     */\n    submitElement(start: number, end: number): number {\n        var mainCtx: boolean = this.isMain;\n        var renderList: any[] = this._submits;\n        var ret: number = ((<any>renderList))._length;\n        end < 0 && (end = ((<any>renderList))._length);\n        var submit: Submit = SubmitBase.RENDERBASE;\n        while (start < end) {\n            this._renderNextSubmitIndex = start + 1;\n            if (renderList[start] === SubmitBase.RENDERBASE) {\n                start++;\n                continue;\n            }\n            SubmitBase.preRender = submit;\n            submit = renderList[start];\n            //只有submitscissor才会返回多个\n            start += submit.renderSubmit();\n            //本来做了个优化，如果是主画布，用完立即releaseRender. 但是实际没有什么效果，且由于submit需要用来对比，即使用完也不能修改，所以这个优化又去掉了\n        }\n\n\n        return ret;\n    }\n\n    flush(): number {\n        this._clipID_Gen = 0;\n        var ret: number = this.submitElement(0, this._submits._length);\n        this._path && this._path.reset();\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\n\n        //Stat.mesh2DNum += meshlist.length;\n        this._curSubmit = SubmitBase.RENDERBASE;\n\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\n            var curm: Mesh2D = this.meshlist[i];\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\n        }\n        this.meshlist.length = 0;\n\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\t//TODO 不要这样。\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\n\n        this._flushCnt++;\n        //charbook gc\n        if (this._flushCnt % 60 == 0 && this.isMain) {\n            if (TextRender.textRenderInst) {\n                TextRender.textRenderInst.GC();\n            }\n        }\n        return ret;\n    }\n\n    /*******************************************start矢量绘制***************************************************/\n\n    beginPath(convex: boolean = false): void {\n        var tPath: Path = this._getPath();\n        tPath.beginPath(convex);\n    }\n\n    closePath(): void {\n        //_path.closePath = true;\n        this._path.closePath();\n    }\n\n    /**\n     * 添加一个path。\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\n     * @param\tclose\t是否闭合\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\n     * @param\tdy\n     */\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\n        let sz = points.length;\n        for (let i = 0; i < sz - 1; i += 2) {\n            points[i] += dx;\n            points[i + 1] += dy;\n        }\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\n            points.push(points[0], points[1]);\n        }\n        this._getPath().push(points, convex);\n    }\n\n    fill(): void {\n        var m: Matrix = this._curMat;\n        var tPath: Path = this._getPath();\n        var submit: Submit = this._curSubmit;\n        var sameKey: boolean = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\n        if (!sameKey) {\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\n        }\n        var rgba: number = this.mixRGBandAlpha(this.fillStyle.toInt());\n        var curEleNum: number = 0;\n        var idx: any[];\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\n        for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\n            var p: any = tPath.paths[i];\n            var vertNum: number = p.path.length / 2;\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\n                continue;\n            var cpath: any[] = p.path.concat();\n            // 应用矩阵转换顶点\n            var pi: number = 0;\n            var xp: number, yp: number;\n            var _x: number, _y: number;\n            if (m._bTransform) {\n                for (pi = 0; pi < vertNum; pi++) {\n                    xp = pi << 1;\n                    yp = xp + 1;\n                    _x = cpath[xp];\n                    _y = cpath[yp];\n\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\n                }\n            } else {\n                for (pi = 0; pi < vertNum; pi++) {\n                    xp = pi << 1;\n                    yp = xp + 1;\n                    _x = cpath[xp];\n                    _y = cpath[yp];\n                    cpath[xp] = _x + m.tx;\n                    cpath[yp] = _y + m.ty;\n                }\n            }\n\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\n                //;\n                //顶点数超了，要先提交一次\n                this._curSubmit._numEle += curEleNum;\n                curEleNum = 0;\n                //然后用新的mesh，和新的submit。\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\n            }\n\n            var curvert: number = this._pathMesh.vertNum;\n            //生成 ib\n            if (p.convex) { //convex的ib比较容易\n                var faceNum: number = vertNum - 2;\n                idx = new Array(faceNum * 3);\n                var idxpos: number = 0;\n                for (var fi: number = 0; fi < faceNum; fi++) {\n                    idx[idxpos++] = curvert;\n                    idx[idxpos++] = fi + 1 + curvert;\n                    idx[idxpos++] = fi + 2 + curvert;\n                }\n            }\n            else {\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\n                if (curvert > 0) {\n                    //修改ib\n                    for (var ii: number = 0; ii < idx.length; ii++) {\n                        idx[ii] += curvert;\n                    }\n                }\n            }\n            //填充mesh\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\n            curEleNum += idx.length;\n        }\n        this._curSubmit._numEle += curEleNum;\n    }\n\n    private addVGSubmit(mesh: Mesh2D): Submit {\n        //elenum设为0，后面再加\n        var submit: Submit = Submit.createShape(this, mesh, 0, Value2D.create(ShaderDefines2D.PRIMITIVE, 0));\n        //submit._key.clear();\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\n        submit._key.submitType = SubmitBase.KEY_VG;\n        this._submits[this._submits._length++] = submit;\n        this._copyClipInfo(submit, this._globalClipMatrix);\n        return submit;\n    }\n\n    stroke(): void {\n        if (this.lineWidth > 0) {\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\n            var tPath: Path = this._getPath();\n            var submit: Submit = this._curSubmit;\n            var sameKey: boolean = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\n            sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\n\n            if (!sameKey) {\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\n            }\n            var curEleNum: number = 0;\n            //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\n            for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\n                var p: any = tPath.paths[i];\n                if (p.path.length <= 0)\n                    continue;\n                var idx: any[] = [];\n                var vertex: any[] = [];//x,y\n                //p.path.loop;\n                //填充vbib\n                var maxVertexNum: number = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\n                if (maxVertexNum < 2)\n                    continue;\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\n                    //;\n                    //顶点数超了，要先提交一次\n                    this._curSubmit._numEle += curEleNum;\n                    curEleNum = 0;\n                    //然后用新的mesh，和新的submit。\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\n                    this.meshlist.push(this._pathMesh);\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\n                }\n                //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\n                // 变换所有的点\n                var ptnum: number = vertex.length / 2;\n                var m: Matrix = this._curMat;\n                var pi: number = 0;\n                var xp: number, yp: number;\n                var _x: number, _y: number;\n                if (m._bTransform) {\n                    for (pi = 0; pi < ptnum; pi++) {\n                        xp = pi << 1;\n                        yp = xp + 1;\n                        _x = vertex[xp];\n                        _y = vertex[yp];\n\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\n                    }\n                } else {\n                    for (pi = 0; pi < ptnum; pi++) {\n                        xp = pi << 1;\n                        yp = xp + 1;\n                        _x = vertex[xp];\n                        _y = vertex[yp];\n                        vertex[xp] = _x + m.tx;\n                        vertex[yp] = _y + m.ty;\n                    }\n                }\n\n                //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\n                //填充mesh\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\n                curEleNum += idx.length;\n            }\n            this._curSubmit._numEle += curEleNum;\n        }\n    }\n\n    moveTo(x: number, y: number): void {\n        var tPath: Path = this._getPath();\n        tPath.newPath();\n        tPath._lastOriX = x;\n        tPath._lastOriY = y;\n        tPath.addPoint(x, y);\n    }\n\n    /**\n     * \n     * @param\tx\n     * @param\ty\n     * @param\tb 是否应用矩阵\n     */\n    lineTo(x: number, y: number): void {\n        var tPath: Path = this._getPath();\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\n            return;\n        tPath._lastOriX = x;\n        tPath._lastOriY = y;\n        tPath.addPoint(x, y);\n    }\n    /*\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\n        //setPathId(-1);\n        beginPath();\n        strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        var points:Array = points;\n        //movePath(x, y); TODO 这个被去掉了\n        moveTo(points[0], points[1]);\n        var i:int = 2, n:int = points.length;\n        while (i < n) {\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\n        }\n        stroke();\n    }\n    */\n\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n        /*\n        if (mId != -1) {\n            if (mHaveKey) {\n                return;\n            }\n        }\n        */\n        var i: number = 0;\n        var x: number = 0, y: number = 0;\n        var dx: number = this._path._lastOriX - x1;\n        var dy: number = this._path._lastOriY - y1;\n        var len1: number = Math.sqrt(dx * dx + dy * dy);\n        if (len1 <= 0.000001) {\n            return;\n        }\n        var ndx: number = dx / len1;\n        var ndy: number = dy / len1;\n        var dx2: number = x2 - x1;\n        var dy2: number = y2 - y1;\n        var len22: number = dx2 * dx2 + dy2 * dy2;\n        var len2: number = Math.sqrt(len22);\n        if (len2 <= 0.000001) {\n            return;\n        }\n        var ndx2: number = dx2 / len2;\n        var ndy2: number = dy2 / len2;\n        var odx: number = ndx + ndx2;\n        var ody: number = ndy + ndy2;\n        var olen: number = Math.sqrt(odx * odx + ody * ody);\n        if (olen <= 0.000001) {\n            return;\n        }\n\n        var nOdx: number = odx / olen;\n        var nOdy: number = ody / olen;\n\n        var alpha: number = Math.acos(nOdx * ndx + nOdy * ndy);\n        var halfAng: number = Math.PI / 2 - alpha;\n\n        len1 = r / Math.tan(halfAng);\n        var ptx1: number = len1 * ndx + x1;\n        var pty1: number = len1 * ndy + y1;\n\n        var orilen: number = Math.sqrt(len1 * len1 + r * r);\n        //圆心\n        var orix: number = x1 + nOdx * orilen;\n        var oriy: number = y1 + nOdy * orilen;\n\n        var ptx2: number = len1 * ndx2 + x1;\n        var pty2: number = len1 * ndy2 + y1;\n\n        var dir: number = ndx * ndy2 - ndy * ndx2;\n\n        var fChgAng: number = 0;\n        var sinx: number = 0.0;\n        var cosx: number = 0.0;\n        if (dir >= 0) {\n            fChgAng = halfAng * 2;\n            var fda: number = fChgAng / Context.SEGNUM;\n            sinx = Math.sin(fda);\n            cosx = Math.cos(fda);\n        }\n        else {\n            fChgAng = -halfAng * 2;\n            fda = fChgAng / Context.SEGNUM;\n            sinx = Math.sin(fda);\n            cosx = Math.cos(fda);\n        }\n\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\n        var lastx: number = this._path._lastOriX, lasty: number = this._path._lastOriY;\t//没有矩阵转换的上一个点\n        var _x1: number = ptx1, _y1: number = pty1;\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\n            lastx = _x1;\n            lasty = _y1;\n            this._path._lastOriX = x;\n            this._path._lastOriY = y;\n            this._path.addPoint(x, y);\n        }\n        var cvx: number = ptx1 - orix;\n        var cvy: number = pty1 - oriy;\n        var tx: number = 0.0;\n        var ty: number = 0.0;\n        for (i = 0; i < Context.SEGNUM; i++) {\n            var cx: number = cvx * cosx + cvy * sinx;\n            var cy: number = -cvx * sinx + cvy * cosx;\n            x = cx + orix;\n            y = cy + oriy;\n\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\n            //x = x1;\n            //y = y1;\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\n                //var _tx1:Number = x, _ty1:Number = y;\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\n                this._path._lastOriX = x;\n                this._path._lastOriY = y;\n                this._path.addPoint(x, y);\n                lastx = x;\n                lasty = y;\n            }\n            cvx = cx;\n            cvy = cy;\n        }\n    }\n\n    arc(cx: number, cy: number, r: number, startAngle: number, endAngle: number, counterclockwise: boolean = false, b: boolean = true): void {\n        /* TODO 缓存还没想好\n        if (mId != -1) {\n            var tShape:IShape = VectorGraphManager.getInstance().shapeDic[this.mId];\n            if (tShape) {\n                if (mHaveKey && !tShape.needUpdate(_curMat))\n                    return;\n            }\n            cx = 0;\n            cy = 0;\n        }\n        */\n        var a: number = 0, da: number = 0, hda: number = 0, kappa: number = 0;\n        var dx: number = 0, dy: number = 0, x: number = 0, y: number = 0, tanx: number = 0, tany: number = 0;\n        var px: number = 0, py: number = 0, ptanx: number = 0, ptany: number = 0;\n        var i: number, ndivs: number, nvals: number;\n\n        // Clamp angles\n        da = endAngle - startAngle;\n        if (!counterclockwise) {\n            if (Math.abs(da) >= Math.PI * 2) {\n                da = Math.PI * 2;\n            } else {\n                while (da < 0.0) {\n                    da += Math.PI * 2;\n                }\n            }\n        } else {\n            if (Math.abs(da) >= Math.PI * 2) {\n                da = -Math.PI * 2;\n            } else {\n                while (da > 0.0) {\n                    da -= Math.PI * 2;\n                }\n            }\n        }\n        var sx: number = this.getMatScaleX();\n        var sy: number = this.getMatScaleY();\n        var sr: number = r * (sx > sy ? sx : sy);\n        var cl: number = 2 * Math.PI * sr;\n        ndivs = (Math.max(cl / 10, 10)) | 0;\n\n        hda = (da / ndivs) / 2.0;\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\n        if (counterclockwise)\n            kappa = -kappa;\n\n        nvals = 0;\n        var tPath: Path = this._getPath();\n        var _x1: number, _y1: number;\n        for (i = 0; i <= ndivs; i++) {\n            a = startAngle + da * (i / ndivs);\n            dx = Math.cos(a);\n            dy = Math.sin(a);\n            x = cx + dx * r;\n            y = cy + dy * r;\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\n                //var _tx1:Number = x, _ty1:Number = y;\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\n                tPath.addPoint(x, y);\n            }\n        }\n        dx = Math.cos(endAngle);\n        dy = Math.sin(endAngle);\n        x = cx + dx * r;\n        y = cy + dy * r;\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\n            //var _x2:Number = x, _y2:Number = y;\n            //x = _curMat.a * _x2 + _curMat.c * _y2 + _curMat.tx;\n            //y = _curMat.b * _x2 + _curMat.d * _y2 + _curMat.ty;\n            tPath.addPoint(x, y);\n        }\n    }\n\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\n        var tBezier: Bezier = Bezier.I;\n        var tResultArray: any[] = [];\n        //var _x1:Number = x, _y1:Number = y;\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\n        //_x1 = cpx, _y1 = cpy;\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\n        for (var i: number = 0, n: number = tArray.length / 2; i < n; i++) {\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\n        }\n        this.lineTo(x, y);\n    }\n\n\n    /**\n     * 把颜色跟当前设置的alpha混合\n     * @return\n     */\n    mixRGBandAlpha(color: number): number {\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\n    }\n    /**@internal */\n    _mixRGBandAlpha(color: number, alpha: number): number {\n        if (alpha >= 1) {\n            return color;\n        }\n        var a: number = ((color & 0xff000000) >>> 24);\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\n        if (a != 0) {\n            a *= alpha;\n        } else {\n            a = alpha * 255;\n        }\n        return (color & 0x00ffffff) | (a << 24);\n    }\n\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\n        var tW: number = parameterLineWidth * 0.5;\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\n        /**\n         * p1-------------------------------p2\n         * |  x,y                      x+w,y|\n         * |     p4--------------------p3   |\n         * |     |                     |    |\n         * |     p6--------------------p7   |\n         * |  x,y+h                  x+w,y+h|\n         * p5-------------------------------p8\n         * \n         * 不用了\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\n         */\n        //TODO 这里能不能与下面的stroke合并一下\n        if (this.lineWidth > 0) {\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\n            var hw: number = this.lineWidth / 2;\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\n        }\n    }\n\n    clip(): void {\n    }\n\n    /*******************************************end矢量绘制***************************************************/\n    //TODO:coverage\n    drawParticle(x: number, y: number, pt: any): void {\n        pt.x = x;\n        pt.y = y;\n        this._submits[this._submits._length++] = pt;\n    }\n\n    private _getPath(): Path {\n        return this._path || (this._path = new Path());\n    }\n\n    /**获取canvas*/\n    //注意这个是对外接口\n    get canvas(): HTMLCanvas {\n        return this._canvas;\n    }\n    //=============新增==================\t\n    /* 下面的方式是有bug的。canvas是直接save，restore，现在是为了优化，但是有bug，所以先不重载了\n    public function saveTransform(matrix:Matrix):void {\n        this._curMat.copyTo(matrix);\n    }\n    \n    public function restoreTransform(matrix:Matrix):void {\n        matrix.copyTo(this._curMat);\n    }\n    \n    public function transformByMatrix(matrix:Matrix,tx:Number,ty:Number):void {\n        var mat:Matrix = _curMat;\n        matrix.setTranslate(tx, ty);\n        Matrix.mul(matrix, mat, mat);\n        matrix.setTranslate(0, 0);\n        mat._bTransform = true;\n    }\n    */\n\n    /* 下面的是错误的。位置没有被缩放\n    public function transformByMatrix(matrix:Matrix, tx:Number, ty:Number):void {\n        SaveTransform.save(this);\t\t\t\n        Matrix.mul(matrix, _curMat, _curMat);\t\n        _curMat.tx += tx;\n        _curMat.ty += ty;\n        _curMat._checkTransform();\n    }\n            \n    public function transformByMatrixNoSave(matrix:Matrix, tx:Number, ty:Number):void {\n        Matrix.mul(matrix, _curMat, _curMat);\t\n        _curMat.tx += tx;\n        _curMat.ty += ty;\n        _curMat._checkTransform();\n    }\n    */\n\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\n    /**\n     * 专用函数。通过循环创建来水平填充\n     * @param\ttex\n     * @param\tbmpid\n     * @param\tuv\t\t希望循环的部分的uv\n     * @param\toriw\n     * @param\torih\n     * @param\tx\n     * @param\ty\n     * @param\tw\n     */\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number): void {\n        if (oriw <= 0)\n            console.error('_fillTexture_h error: oriw must>0');\n\n        var stx: number = x;\n        var num: number = Math.floor(w / oriw);\n        var left: number = w % oriw;\n        for (var i: number = 0; i < num; i++) {\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false);\n            stx += oriw;\n        }\n        // 最后剩下的\n        if (left > 0) {\n            var du: number = uv[2] - uv[0];\n            var uvr: number = uv[0] + du * (left / oriw);\n            var tuv: any[] = Context.tmpuv1;\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false);\n        }\n    }\n\n    /**\n     * 专用函数。通过循环创建来垂直填充\n     * @param\ttex\n     * @param\timgid\n     * @param\tuv\n     * @param\toriw\n     * @param\torih\n     * @param\tx\n     * @param\ty\n     * @param\th\n     */\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number): void {\n        if (orih <= 0)\n            console.error('_fillTexture_v error: orih must>0');\n        var sty: number = y;\n        var num: number = Math.floor(h / orih);\n        var left: number = h % orih;\n        for (var i: number = 0; i < num; i++) {\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false);\n            sty += orih;\n        }\n        // 最后剩下的\n        if (left > 0) {\n            var dv: number = uv[7] - uv[1];\n            var uvb: number = uv[1] + dv * (left / orih);\n            var tuv: any[] = Context.tmpuv1;\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false);\n        }\n    }\n\n    private static tmpUV: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number): void {\n        if (!tex._getSource())\n            return;\n        tx += gx;\n        ty += gy;\n\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\n\n        var top: number = sizeGrid[0];\n        var left: number = sizeGrid[3];\n        var right: number = sizeGrid[1];\n        var bottom: number = sizeGrid[2];\n        var repeat: boolean = sizeGrid[4];\n        var needClip: boolean = false;\n\n        if (width == tex.width) {\n            left = right = 0;\n        }\n        if (height == tex.height) {\n            top = bottom = 0;\n        }\n\n        var d_top: number = top / h;\n        var d_left: number = left / w;\n        var d_right: number = right / w;\n        var d_bottom: number = bottom / h;\n\n        //处理进度条不好看的问题\n        // if (left + right > width) {\n        // \tvar clipWidth: number = width;\n        // \tneedClip = true;\n        // \twidth = left + right;\n        // \tthis.save();\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\n        // }\n\n        var imgid: number = (tex.bitmap as Texture2D).id;\n        var mat: Matrix = this._curMat;\n        var tuv = this._tempUV;\n\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\n        var scale_x = 1;\n        var scale_y = 1;\n        if (left + right > width) scale_x = width / (left + right);\n        if (top + bottom > height) scale_y = height / (top + bottom);\n        left *= scale_x;\n        right *= scale_x;\n        top *= scale_y;\n        bottom *= scale_y;\n\n        // 整图的uv\n        // 一定是方的，所以uv只要左上右下就行\n        var uvl = uv[0];\n        var uvt = uv[1];\n        var uvr = uv[4];\n        var uvb = uv[5];\n\n        // 小图的uv\n        var uvl_ = uvl;\n        var uvt_ = uvt;\n        var uvr_ = uvr;\n        var uvb_ = uvb;\n\n        //绘制四个角\n        // 构造uv\n        if (left && top) {\n            uvr_ = uvl + d_left;\n            uvb_ = uvt + d_top;\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false);\n        }\n        if (right && top) {\n            uvl_ = uvr - d_right; uvt_ = uvt;\n            uvr_ = uvr; uvb_ = uvt + d_top;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false);\n        }\n        if (left && bottom) {\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\n            uvr_ = uvl + d_left; uvb_ = uvb;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false);\n        }\n        if (right && bottom) {\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\n            uvr_ = uvr; uvb_ = uvb;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false);\n        }\n        //绘制上下两个边\n        if (top) {\n            uvl_ = uvl + d_left; uvt_ = uvt;\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right);\n            } else {\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false);\n            }\n\n        }\n        if (bottom) {\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\n            uvr_ = uvr - d_right; uvb_ = uvb;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right);\n            } else {\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false);\n            }\n        }\n        //绘制左右两边\n        if (left) {\n            uvl_ = uvl; uvt_ = uvt + d_top;\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom);\n            } else {\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false);\n            }\n        }\n        if (right) {\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom);\n            } else {\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false);\n            }\n        }\n        //绘制中间\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n        if (repeat) {\n            var tuvr: any[] = Context.tmpUVRect;\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0);\n        } else {\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false);\n        }\n\n        if (needClip) this.restore();\n    }\n    addRenderObject3D(scene3D: ISubmit): void {\n        this._curSubmit = SubmitBase.RENDERBASE;//打断2D合并的renderKey\n        this.addRenderObject(scene3D);\n    }\n}\n\n\n/** @internal */\nclass ContextParams {\n    static DEFAULT: ContextParams;\n\n    lineWidth: number = 1;\n    textAlign: string;\n    textBaseline: string;\n\n    clear(): void {\n        this.lineWidth = 1;\n        this.textAlign = this.textBaseline = null;\n    }\n\n    make(): ContextParams {\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\n    }\n}\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n    //@ts-ignore\n    Context = NativeContext;\n}\n","import { Texture } from \"./Texture\";\nimport { Texture2D } from \"./Texture2D\";\nimport { Context } from \"./Context\";\nimport { Browser } from \"../utils/Browser\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\nimport { Resource } from \"./Resource\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * <code>HTMLCanvas</code> 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\n */\nexport class HTMLCanvas extends Resource {\n\n    private _ctx: any;\n    /**@internal */\n    _source: HTMLCanvasElement;\n    /**@internal */\n    _texture: Texture | RenderTexture2D;\n    /**@private */\n    protected _width: number;\n    /**@private */\n    protected _height: number;\n\n    /**\n     * @inheritDoc\n     */\n    get source() {\n        return this._source;\n    }\n\n    /**\n     * 获取宽度。\n     */\n    get width(): number {\n        return this._width;\n    }\n\n    set width(width: number) {\n        this._width = width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get height(): number {\n        return this._height;\n    }\n\n    set height(height: number) {\n        this._height = height;\n    }\n\n    /**@internal \n     * @override\n    */\n    _getSource() {\n        return this._source;\n    }\n    /**\n     * 根据指定的类型，创建一个 <code>HTMLCanvas</code> 实例。\n     */\n    constructor(createCanvas: boolean = false) {\n        super();\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\n            this._source = Browser.createElement(\"canvas\");\n        else {\n            this._source = this as unknown as HTMLCanvasElement;\n        }\n        this.lock = true;\n    }\n\n    /**\n     * 清空画布内容。\n     */\n    clear(): void {\n        if (this._ctx) {\n            if (this._ctx.clear) {\n                this._ctx.clear();\n            } else {\n                this._ctx.clearRect(0, 0, this._width, this._height);\n            }\n        }\n        if (this._texture) {\n            this._texture.destroy();\n            this._texture = null;\n        }\n    }\n\n    /**\n     * 销毁。\n     * @override\n     */\n    destroy(): void {\n        super.destroy();\n        this._setCPUMemory(0);\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\n        this._ctx = null;\n    }\n\n    /**\n     * 释放。\n     */\n    release(): void {\n    }\n\n    /**\n     * Canvas 渲染上下文。\n     */\n    get context(): Context {\n        if (this._ctx) return this._ctx;\n        //@ts-ignore\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\n            // @ts-ignore\n            this._ctx = new Context();\n        } else {\n            //@ts-ignore\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\n        }\n        this._ctx._canvas = this;\n        return this._ctx;\n    }\n\n    /**\n     * @internal\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\n     * @param\tcontext Canvas 渲染上下文。\n     */\n    _setContext(context: Context): void {\n        this._ctx = context;\n    }\n\n    /**\n     * 获取 Canvas 渲染上下文。\n     * @param\tcontextID 上下文ID.\n     * @param\tother\n     * @return  Canvas 渲染上下文 Context 对象。\n     */\n    getContext(contextID: string, other: any = null): Context {\n        return this.context;\n    }\n\n\n    /**\n     * 获取内存大小。\n     * @return 内存大小。\n     */\n    //TODO:coverage\n    getMemSize(): number {\n        return 0;//TODO:待调整\n    }\n\n    /**\n     * 设置宽高。\n     * @param\tw 宽度。\n     * @param\th 高度。\n     */\n    size(w: number, h: number): void {\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\n            this._width = w;\n            this._height = h;\n            this._setCPUMemory(w * h * 4);\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\n                this._source.height = h;\n                this._source.width = w;\n            }\n            if (this._texture) {\n                this._texture.destroy();\n                this._texture = null;\n            }\n        }\n    }\n\n    /**\n     * 获取texture实例\n     */\n    getTexture(): Texture | null | RenderTexture2D {\n        if (!this._texture) {\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\n            bitmap.setImageData(this.source, false, false);\n            this._texture = new Texture(bitmap);\n        }\n        return this._texture;\n    }\n\n    /**\n     * 把图片转换为base64信息\n     * @param\ttype \"image/png\"\n     * @param\tencoderOptions\t质量参数，取值范围为0-1\n     */\n    toBase64(type: string, encoderOptions: number): string | null {\n        if (this._source) {\n            if (LayaEnv.isConch) {\n                var win: any = window as any;\n                var width: number = this._ctx._targets.sourceWidth;\n                var height: number = this._ctx._targets.sourceHeight;\n                var data: any = this._ctx._targets.getData(0, 0, width, height);\n                return win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\n            }\n            else {\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * native多线程转图片\n     * @param type \n     * @param encoderOptions \n     * @param callBack \n     */\n    toBase64Async(type: string, encoderOptions: number, callBack: Function): void {\n        var width: number = this._ctx._targets.sourceWidth;\n        var height: number = this._ctx._targets.sourceHeight;\n        this._ctx._targets.getDataAsync(0, 0, width, height, function (data: Uint8Array): void {\n            let win = window as any;\n            var base64 = win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\n            callBack(base64);\n        });\n    }\n}\n\n","import { Rectangle } from \"../../maths/Rectangle\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * @internal\n * Graphic bounds数据类\n */\nexport class BoundsStyle {\n    /**@private */\n    bounds: Rectangle|null;\n    /**用户设的bounds*/\n    userBounds: Rectangle|null;\n    /**缓存的bounds顶点,sprite计算bounds用*/\n    temBM: any[]|null;\n\n    /**\n     * 重置\n     */\n    reset(): BoundsStyle {\n        if (this.bounds) this.bounds.recover();\n        if (this.userBounds) this.userBounds.recover();\n        this.bounds = null;\n        this.userBounds = null;\n        this.temBM = null;\n        return this;\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        Pool.recover(\"BoundsStyle\", this.reset());\n    }\n\n    /**\n     * 创建\n     */\n    static create(): BoundsStyle {\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\n    }\n}\n\n","import { Sprite } from \"../Sprite\"\nimport { Point } from \"../../maths/Point\"\nimport { Rectangle } from \"../../maths/Rectangle\"\nimport { Context } from \"../../resource/Context\"\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * @internal\n * 存储cache相关\n */\nexport class CacheStyle {\n\n    static EMPTY: CacheStyle = new CacheStyle();\n    /**当前实际的cache状态*/\n    cacheAs: string;\n    /**是否开启canvas渲染*/\n    enableCanvasRender: boolean;\n    /**用户设的cacheAs类型*/\n    userSetCache: string;\n    /**是否需要为滤镜cache*/\n    cacheForFilters: boolean;\n    /**是否为静态缓存*/\n    staticCache: boolean;\n    /**是否需要刷新缓存*/\n    reCache: boolean;\n    /**mask对象*/\n    mask: Sprite;\n    /**作为mask时的父对象*/\n    maskParent: Sprite;\n    /**滤镜数据*/\n    filters: any[];\n    /**当前缓存区域*/\n    cacheRect: Rectangle;\n    /**当前使用的canvas*/\n    canvas: HTMLCanvas;\n    //TODO:webgl是否还需要\n    /**滤镜数据*/\n    filterCache: any;\n    //TODO:webgl是否还需要\n    /**是否有发光滤镜*/\n    hasGlowFilter: boolean;\n\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * 是否需要Bitmap缓存\n     * @return\n     */\n    needBitmapCache(): boolean {\n        return this.cacheForFilters || !!this.mask;\n    }\n\n    /**\n     * 是否需要开启canvas渲染\n     */\n    needEnableCanvasRender(): boolean {\n        return this.userSetCache != \"none\" || this.cacheForFilters || !!this.mask;\n    }\n\n    /**\n     * 释放cache的资源\n     */\n    releaseContext(): void {\n        if (this.canvas && ((<any>this.canvas)).size) {\n            Pool.recover(\"CacheCanvas\", this.canvas);\n            this.canvas.size(0, 0);\n            // 微信在iphone8和mate20上个bug，size存在但是不起作用，可能是canvas对象不是我们的。\n            // 为了避免canvas不消失，再强制设置宽高为0 TODO 没有测试\n            try {\n                ((<any>this.canvas)).width = 0;\n                ((<any>this.canvas)).height = 0;\n            } catch (e) {\n\n            }\n        }\n        this.canvas = null;\n    }\n\n    createContext(): void {\n        if (!this.canvas) {\n            this.canvas = Pool.getItem(\"CacheCanvas\") || new HTMLCanvas(false);\n            var tx: Context = this.canvas.context as Context;\n            if (!tx) {\n                tx = this.canvas.getContext('2d') as Context;\t//如果是webGL的话，这个会返回WebGLContext2D\n            }\n        }\n    }\n    /**\n     * 释放滤镜资源\n     */\n    releaseFilterCache(): void {\n        var fc: any = this.filterCache;\n        if (fc) {\n            fc.destroy();\n            fc.recycle();\n            this.filterCache = null;\n        }\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        if (this === CacheStyle.EMPTY) return;\n        Pool.recover(\"SpriteCache\", this.reset());\n    }\n\n    /**\n     * 重置\n     */\n    reset(): CacheStyle {\n        this.releaseContext();\n        this.releaseFilterCache();\n        this.cacheAs = \"none\";\n        this.enableCanvasRender = false;\n        this.userSetCache = \"none\";\n        this.cacheForFilters = false;\n        this.staticCache = false;\n        this.reCache = true;\n        this.mask = null;\n        this.maskParent = null;\n        this.filterCache = null;\n        this.filters = null;\n        this.hasGlowFilter = false;\n        if (this.cacheRect) this.cacheRect.recover();\n        this.cacheRect = null;\n        return this\n    }\n\n    /**\n     * 创建一个SpriteCache\n     */\n    static create(): CacheStyle {\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\n    }\n\n    private static _scaleInfo: Point = new Point();\n    static CANVAS_EXTEND_EDGE: number = 16;\n    /**\n    * @internal\n    */\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        if (!_cacheStyle.cacheRect)\n            _cacheStyle.cacheRect = Rectangle.create();\n        var tRec: Rectangle;\n\n        //计算显示对象的绘图区域\n        if (tCacheType === \"bitmap\") {\n            tRec = sprite.getSelfBounds();\n            tRec.width = tRec.width + CacheStyle.CANVAS_EXTEND_EDGE * 2;\n            tRec.height = tRec.height + CacheStyle.CANVAS_EXTEND_EDGE * 2;\n            tRec.x = tRec.x - sprite.pivotX;\n            tRec.y = tRec.y - sprite.pivotY;\n            tRec.x = tRec.x - CacheStyle.CANVAS_EXTEND_EDGE;\n            tRec.y = tRec.y - CacheStyle.CANVAS_EXTEND_EDGE;\n            tRec.x = Math.floor(tRec.x + x) - x;\n            tRec.y = Math.floor(tRec.y + y) - y;\n            tRec.width = Math.floor(tRec.width);\n            tRec.height = Math.floor(tRec.height);\n            _cacheStyle.cacheRect.copyFrom(tRec);\n        } else {\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\n        }\n        tRec = _cacheStyle.cacheRect;\n\n\n        //处理显示对象的scrollRect偏移\n        if (sprite._style.scrollRect) {\n            var scrollRect: Rectangle = sprite._style.scrollRect;\n            tRec.x -= scrollRect.x;\n            tRec.y -= scrollRect.y;\n        }\n        CacheStyle._scaleInfo.setTo(1, 1);\n\n        return CacheStyle._scaleInfo;\n    }\n}\n\n","import { Rectangle } from \"../../maths/Rectangle\"\nimport { Dragging } from \"../../utils/Dragging\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 元素样式\n */\nexport class SpriteStyle {\n\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\n\n    /**水平缩放 */\n    scaleX: number;\n    /**垂直缩放 */\n    scaleY: number;\n    /**水平倾斜角度 */\n    skewX: number;\n    /**垂直倾斜角度 */\n    skewY: number;\n    /**X轴心点 */\n    pivotX: number;\n    /**Y轴心点 */\n    pivotY: number;\n    /**旋转角度 */\n    rotation: number;\n    /**透明度 */\n    alpha: number;\n    /**滚动区域 */\n    scrollRect: Rectangle;\n    /**视口 */\n    viewport: Rectangle;\n    /**点击区域 */\n    hitArea: any;\n    /**滑动 */\n    dragging: Dragging;\n    /**混合模式 */\n    blendMode: string;\n\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * 重置，方便下次复用\n     */\n    reset(): SpriteStyle {\n        this.scaleX = this.scaleY = 1;\n        this.skewX = this.skewY = 0;\n        this.pivotX = this.pivotY = this.rotation = 0;\n        this.alpha = 1;\n        if (this.scrollRect) this.scrollRect.recover();\n        this.scrollRect = null;\n        if (this.viewport) this.viewport.recover();\n        this.viewport = null;\n        this.hitArea = null;\n        this.dragging = null;\n        this.blendMode = null;\n        return this\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        if (this === SpriteStyle.EMPTY) return;\n        Pool.recover(\"SpriteStyle\", this.reset());\n    }\n\n    /**\n     * 从对象池中创建\n     */\n    static create(): SpriteStyle {\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\n    }\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 透明命令\n */\nexport class AlphaCmd {\n    static ID: string = \"Alpha\";\n\n    /**\n     * 透明度\n     */\n    alpha: number;\n\n    /**@private */\n    static create(alpha: number): AlphaCmd {\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\n        cmd.alpha = alpha;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        Pool.recover(\"AlphaCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.alpha(this.alpha);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return AlphaCmd.ID;\n    }\n}\n\n","import { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制圆形\n */\nexport class DrawCircleCmd {\n    static ID: string = \"DrawCircle\";\n\n    /**\n     * 圆点X 轴位置。\n     */\n    x: number;\n    /**\n     * 圆点Y 轴位置。\n     */\n    y: number;\n    /**\n     * 半径。\n     */\n    radius: number;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\n        var offset = (lineWidth >= 1 && lineColor) ? lineWidth / 2 : 0;\n        cmd.x = x;\n        cmd.y = y;\n        cmd.radius = radius - offset;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawCircleCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * w, this.fillColor, this.lineColor, this.lineWidth, 0);\n        }\n        else\n            context._drawCircle(this.x + gx, this.y + gy, this.radius, this.fillColor, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawCircleCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\n    }\n}\n\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\n","import { Bezier } from \"../../maths/Bezier\";\nimport { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制曲线\n */\nexport class DrawCurvesCmd {\n    static ID: string = \"DrawCurves\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\n     */\n    points: number[] | null;\n    /**\n     * 线段颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）线段宽度。\n     */\n    lineWidth: number;\n\n    /**@private */\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.points = points;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.points = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawCurvesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.points)\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawCurvesCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Bezier.I.getBezierPoints(this.points);\n    }\n}\n\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制图片\n */\nexport class DrawImageCmd {\n    static ID: string = \"DrawImage\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture | null;\n    /**\n     * （可选）X轴偏移量。\n     */\n    x: number;\n    /**\n     * （可选）Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number): DrawImageCmd {\n        if (!width) width = texture.sourceWidth;\n        if (!height) height = texture.sourceHeight;\n        if (texture.bitmap) {\n            var wRate = width / texture.sourceWidth;\n            var hRate = height / texture.sourceHeight;\n            width = texture.width * wRate;\n            height = texture.height * hRate;\n\n            x += texture.offsetX * wRate;\n            y += texture.offsetY * hRate;\n        }\n\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture && this.texture._removeReference();\n        this.texture = null;\n        Pool.recover(\"DrawImageCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.texture)\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawImageCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制单条曲线\n */\nexport class DrawLineCmd {\n    static ID: string = \"DrawLine\";\n\n    /**\n     * X轴开始位置。\n     */\n    fromX: number;\n    /**\n     * Y轴开始位置。\n     */\n    fromY: number;\n    /**\n     * X轴结束位置。\n     */\n    toX: number;\n    /**\n     * Y轴结束位置。\n     */\n    toY: number;\n    /**\n     * 颜色。\n     */\n    lineColor: string;\n    /**\n     * （可选）线条宽度。\n     */\n    lineWidth: number;\n\n    /**\n     * 位置是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\n        var offset = (lineWidth < 1 || lineWidth % 2 === 0) ? 0 : 0.5;\n\n        cmd.fromX = fromX + offset;\n        cmd.fromY = fromY + offset;\n        cmd.toX = toX + offset;\n        cmd.toY = toY + offset;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        Pool.recover(\"DrawLineCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context._drawLine(gx, gy, this.fromX * w, this.fromY * h, this.toX * w, this.toY * h, this.lineColor, this.lineWidth, 0);\n        }\n        else\n            context._drawLine(gx, gy, this.fromX, this.fromY, this.toX, this.toY, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawLineCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        _tempPoints.length = 0;\n        let lineWidth: number;\n        lineWidth = this.lineWidth * 0.5;\n\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\n        if (this.percent) {\n            fromX *= sp.width;\n            fromY *= sp.height;\n            toX *= sp.width;\n            toY *= sp.height;\n        }\n\n        if (fromX == toX) {\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\n        } else if (fromY == toY) {\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\n        } else {\n            _tempPoints.push(fromX, fromY, toX, toY);\n        }\n\n        return _tempPoints;\n    }\n}\nconst _tempPoints: any[] = [];\n\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制连续曲线\n */\nexport class DrawLinesCmd {\n    static ID: string = \"DrawLines\";\n\n    /**\n     * 开始绘制的X轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的Y轴位置。\n     */\n    y: number;\n    /**\n     * 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\n     */\n    points: number[] | null;\n    /**\n     * 线段颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）线段宽度。\n     */\n    lineWidth: number;\n\n    /**@private */\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\n        var offset = (lineWidth < 1 || lineWidth % 2 === 0) ? 0 : 0.5;\n        //TODO 线段需要缓存\n        cmd.x = x + offset;\n        cmd.y = y + offset;\n        cmd.points = points;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.points = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawLinesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        this.points && context._drawLines(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawLinesCmd.ID;\n    }\n\n}\n\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 根据路径绘制矢量图形\n */\nexport class DrawPathCmd {\n    static ID: string = \"DrawPath\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\n     */\n    paths: any[] | null;\n    /**\n     * （可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\n     */\n    brush: any;\n    /**\n     * （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\n     */\n    pen: any;\n\n    /**@private */\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.paths = paths;\n        cmd.brush = brush;\n        cmd.pen = pen;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.paths = null;\n        this.brush = null;\n        this.pen = null;\n        Pool.recover(\"DrawPathCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawPathCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let rst: any[] = _tempPoints;\n        rst.length = 0;\n        let paths = this.paths;\n        let len = paths.length;\n        for (let i = 0; i < len; i++) {\n            let tCMD = paths[i];\n            if (tCMD.length > 1) {\n                rst.push(tCMD[1], tCMD[2]);\n                if (tCMD.length > 3) {\n                    rst.push(tCMD[3], tCMD[4]);\n                }\n            }\n        }\n        return rst;\n    }\n}\n\nconst _tempPoints: any[] = [];\n\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制扇形\n */\nexport class DrawPieCmd {\n    static ID: string = \"DrawPie\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 扇形半径。\n     */\n    radius: number;\n    \n    private _startAngle: number;\n    private _endAngle: number;\n\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number;\n\n    /**@private */\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\n        var offset = (lineWidth >= 1 && lineColor) ? lineWidth / 2 : 0;\n        var lineOffset = lineColor ? lineWidth : 0;\n        cmd.x = x + offset;\n        cmd.y = y + offset;\n        cmd.radius = radius - lineOffset;\n        cmd._startAngle = startAngle;\n        cmd._endAngle = endAngle;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawPieCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._drawPie(this.x + gx, this.y + gy, this.radius, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawPieCmd.ID;\n    }\n\n    /**\n     * 开始角度。\n     */\n    get startAngle(): number {\n        return this._startAngle * 180 / Math.PI;\n    }\n\n    set startAngle(value: number) {\n        this._startAngle = value * Math.PI / 180;\n    }\n\n    /**\n     * 结束角度。\n     */\n    get endAngle(): number {\n        return this._endAngle * 180 / Math.PI;\n    }\n\n    set endAngle(value: number) {\n        this._endAngle = value * Math.PI / 180;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let rst: any[] = _tempPoints;\n        _tempPoints.length = 0;\n        let k: number = Math.PI / 180;\n        let d1: number = this.endAngle - this.startAngle;\n        let x = this.x, y = this.y, radius = this.radius;\n        if (d1 >= 360 || d1 <= -360) {\n            // 如果满了一圈了\n            rst.push(x - radius, y - radius);\n            rst.push(x + radius, y - radius);\n            rst.push(x + radius, y + radius);\n            rst.push(x - radius, y + radius);\n            return rst;\n        }\n        // \n        rst.push(x, y);\t// 中心\n\n        var delta: number = d1 % 360;\n        if (delta < 0) delta += 360;\n\n        // 一定增加，且在360以内的end\n        var end1: number = this.startAngle + delta;\n\n        // 转成弧度\n        var st: number = this.startAngle * k;\n        var ed: number = end1 * k;\n\n        // 起点\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\n        // 终点\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\n\n        // 圆形的四个边界点\n        // 按照90度对齐，看看会经历几个90度\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\n        for (var cs: number = s1; cs <= s2; cs += 90) {\n            var csr: number = cs * k;\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\n        }\n        return rst;\n    }\n}\n\nconst _tempPoints: any[] = [];\n\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制多边形\n */\nexport class DrawPolyCmd {\n    static ID: string = \"DrawPoly\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 多边形的点集合。\n     */\n    points: number[] | null;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * 可选）边框宽度。\n     */\n    lineWidth: number;\n    /**@private */\n    isConvexPolygon: boolean;\n\n    /**@private */\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\n        var tIsConvexPolygon = false;\n        //这里加入多加形是否是凸边形\n        if (points.length > 6) {\n            tIsConvexPolygon = false;\n        } else {\n            tIsConvexPolygon = true;\n        }\n        var offset = (lineWidth >= 1 && lineColor) ? (lineWidth % 2 === 0 ? 0 : 0.5) : 0;\n        //TODO 非凸多边形需要缓存\n        cmd.x = x + offset;\n        cmd.y = y + offset;\n        cmd.points = points;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        cmd.isConvexPolygon = tIsConvexPolygon;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.points = null;\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawPolyCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        this.points && context._drawPoly(this.x + gx, this.y + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, this.isConvexPolygon, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawPolyCmd.ID;\n    }\n}\n\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制矩形\n */\nexport class DrawRectCmd {\n    static ID: string = \"DrawRect\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 矩形宽度。\n     */\n    width: number;\n    /**\n     * 矩形高度。\n     */\n    height: number;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\n        var offset = (lineWidth >= 1 && lineColor) ? lineWidth / 2 : 0;\n        var lineOffset = lineColor ? lineWidth : 0;\n        cmd.x = x + offset;\n        cmd.y = y + offset;\n        cmd.width = width - lineOffset;\n        cmd.height = height - lineOffset;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        cmd.percent = percent;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawRectCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context.drawRect(this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.fillColor, this.lineColor, this.lineWidth);\n        }\n        else\n            context.drawRect(this.x + gx, this.y + gy, this.width, this.height, this.fillColor, this.lineColor, this.lineWidth);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawRectCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\n    }\n}\n\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\n\n","import { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制单个贴图\n */\nexport class DrawTextureCmd {\n    static ID: string = \"DrawTexture\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture | null;\n    /**\n     * （可选）X轴偏移量。\n     */\n    x: number;\n    /**\n     * （可选）Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n    /**\n     * （可选）矩阵信息。\n     */\n    matrix: Matrix | null;\n    /**\n     * （可选）透明度。\n     */\n    alpha: number;\n    /**\n     * （可选）颜色滤镜。\n     */\n    color: string | null;\n\n    colorFlt: ColorFilter | null = null;\n    /**\n     * （可选）混合模式。\n     */\n    blendMode: string | null;\n\n    uv: number[] | null = null;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\n        if (!width) width = texture.sourceWidth;\n        if (!height) height = texture.sourceHeight;\n\n        let wRate = width / texture.sourceWidth;\n        let hRate = height / texture.sourceHeight;\n        width = texture.width * wRate;\n        height = texture.height * hRate;\n\n        x += texture.offsetX * wRate;\n        y += texture.offsetY * hRate;\n\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.matrix = matrix;\n        cmd.alpha = alpha;\n        cmd.color = color;\n        cmd.blendMode = blendMode;\n        cmd.uv = uv || null;\n        if (color) {\n            cmd.colorFlt = new ColorFilter();\n            cmd.colorFlt.setColor(color);\n        }\n        else\n            cmd.colorFlt = null;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture && this.texture._removeReference();\n        this.texture = null;\n        this.matrix = null;\n        Pool.recover(\"DrawTextureCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.colorFlt, this.uv);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawTextureCmd.ID;\n    }\n}\n\n","import { Point } from \"../../maths/Point\"\nimport { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\";\n\n/**\n * 填充贴图\n */\nexport class FillTextureCmd {\n    static ID: string = \"FillTexture\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture;\n    /**\n     * X轴偏移量。\n     */\n    x: number;\n    /**\n     * Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n    /**\n     * （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\n     */\n    type: string;\n    /**\n     * （可选）贴图纹理偏移\n     */\n    offset: Point;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point): FillTextureCmd {\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\n        cmd.texture = texture;\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.type = type;\n        cmd.offset = offset;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture = null;\n        this.offset = null;\n        Pool.recover(\"FillTextureCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.texture) {\n            if (this.percent && context.sprite) {\n                let w = context.sprite.width;\n                let h = context.sprite.height;\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY);\n            }\n            else\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY);\n        }\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return FillTextureCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        if (this.width && this.height)\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\n        else\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\n    }\n}\n\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 恢复命令，和save配套使用\n */\nexport class RestoreCmd {\n    static ID: string = \"Restore\";\n\n\n\n    /**@private */\n    static create(): RestoreCmd {\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\n\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"RestoreCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.restore();\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return RestoreCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 旋转命令\n */\nexport class RotateCmd {\n    static ID: string = \"Rotate\";\n\n    /**\n     * 旋转角度，以弧度计。\n     */\n    angle: number;\n    /**\n     * （可选）水平方向轴心点坐标。\n     */\n    pivotX: number;\n    /**\n     * （可选）垂直方向轴心点坐标。\n     */\n    pivotY: number;\n\n    /**@private */\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\n        cmd.angle = angle;\n        cmd.pivotX = pivotX;\n        cmd.pivotY = pivotY;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"RotateCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return RotateCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n/**\n * 缩放命令\n */\nexport class ScaleCmd {\n    static ID: string = \"Scale\";\n\n    /**\n     * 水平方向缩放值。\n     */\n    scaleX: number;\n    /**\n     * 垂直方向缩放值。\n     */\n    scaleY: number;\n    /**\n     * （可选）水平方向轴心点坐标。\n     */\n    pivotX: number;\n    /**\n     * （可选）垂直方向轴心点坐标。\n     */\n    pivotY: number;\n\n    /**@private */\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\n        cmd.scaleX = scaleX;\n        cmd.scaleY = scaleY;\n        cmd.pivotX = pivotX;\n        cmd.pivotY = pivotY;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"ScaleCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return ScaleCmd.ID;\n    }\n\n}\n\n","import { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 矩阵命令\n */\nexport class TransformCmd {\n    static ID: string = \"Transform\";\n\n    /**\n     * 矩阵。\n     */\n    matrix: Matrix;\n    /**\n     * （可选）水平方向轴心点坐标。\n     */\n    pivotX: number;\n    /**\n     * （可选）垂直方向轴心点坐标。\n     */\n    pivotY: number;\n\n    /**@private */\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\n        cmd.matrix = matrix;\n        cmd.pivotX = pivotX;\n        cmd.pivotY = pivotY;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.matrix = null;\n        Pool.recover(\"TransformCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return TransformCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n/**\n * 位移命令\n */\nexport class TranslateCmd {\n    static ID: string = \"Translate\";\n\n    /**\n     * 添加到水平坐标（x）上的值。\n     */\n    tx: number;\n    /**\n     * 添加到垂直坐标（y）上的值。\n     */\n    ty: number;\n\n    /**@private */\n    static create(tx: number, ty: number): TranslateCmd {\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\n        cmd.tx = tx;\n        cmd.ty = ty;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"TranslateCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.translate(this.tx, this.ty);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return TranslateCmd.ID;\n    }\n\n}\n\n","import { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\"\nimport { ColorUtils } from \"../../utils/ColorUtils\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制三角形命令\n */\nexport class DrawTrianglesCmd {\n    static ID: string = \"DrawTriangles\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture | null;\n    /**\n     * X轴偏移量。\n     */\n    x: number;\n    /**\n     * Y轴偏移量。\n     */\n    y: number;\n    /**\n     * 顶点数组。\n     */\n    vertices: Float32Array;\n    /**\n     * UV数据。\n     */\n    uvs: Float32Array;\n    /**\n     * 顶点索引。\n     */\n    indices: Uint16Array;\n    /**\n     * 缩放矩阵。\n     */\n    matrix: Matrix | null;\n    /**\n     * alpha\n     */\n    alpha: number;\n    //public var color:String;\n    /**\n     * blend模式\n     */\n    blendMode: string | null;\n    /**\n     * 颜色变换\n     */\n    color: ColorFilter;\n\n    colorNum: number | null;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\n        matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, colorNum: number | null): DrawTrianglesCmd {\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\n        cmd.texture = texture;\n        cmd.x = x;\n        cmd.y = y;\n        cmd.vertices = vertices;\n        cmd.uvs = uvs;\n        cmd.indices = indices;\n        cmd.matrix = matrix;\n        cmd.alpha = alpha;\n        if (color) {\n            cmd.color = new ColorFilter();\n            var c: any[] = ColorUtils.create(color).arrColor;\n            cmd.color.color(c[0] * 255, c[1] * 255, c[2] * 255, c[3] * 255);\t//TODO 这个好像设置的是加色，这样并不合理\n        }\n        cmd.blendMode = blendMode;\n        cmd.colorNum = colorNum;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture = null;\n        //@ts-ignore\n        this.vertices = null;\n        //@ts-ignore\n        this.uvs = null;\n        //@ts-ignore\n        this.indices = null;\n        this.matrix = null;\n        Pool.recover(\"DrawTrianglesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.color, this.blendMode, this.colorNum);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawTrianglesCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let vert = this.vertices;\n        var vnum = vert.length;\n        if (vnum < 2) return [];\n        var minx = vert[0];\n        var miny = vert[1];\n        var maxx = minx;\n        var maxy = miny;\n        for (var i = 2; i < vnum;) {\n            var cx = vert[i++];\n            var cy = vert[i++];\n            if (minx > cx) minx = cx;\n            if (miny > cy) miny = cy;\n            if (maxx < cx) maxx = cx;\n            if (maxy < cy) maxy = cy;\n        }\n\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\n    }\n}\n\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制带九宫格信息的图片\n * @internal\n */\nexport class Draw9GridTextureCmd {\n    static ID: string = \"Draw9GridTexture\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture;\n    /**\n     * （可选）X轴偏移量。\n     */\n    x: number;\n    /**\n     * （可选）Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n\n    sizeGrid: number[];\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent?: boolean): Draw9GridTextureCmd {\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.sizeGrid = sizeGrid;\n        cmd.percent = percent;\n\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture._removeReference();\n        Pool.recover(\"Draw9GridTextureCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.texture) {\n            if (this.percent && context.sprite) {\n                let w = context.sprite.width;\n                let h = context.sprite.height;\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, this.sizeGrid || EMPTY_SIZE_GRID, gx, gy);\n            }\n            else\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, this.sizeGrid || EMPTY_SIZE_GRID, gx, gy);\n        }\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return Draw9GridTextureCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let minx = this.x;\n        let miny = this.y;\n        let maxx = this.width;\n        let maxy = this.height;\n        if (this.percent) {\n            minx *= sp.width;\n            miny *= sp.height;\n            maxx *= sp.width;\n            maxy *= sp.height;\n        }\n\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\n    }\n}\n\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 存储命令，和restore配套使用\n */\nexport class SaveCmd {\n    static ID: string = \"Save\";\n\n\n\n    /**@private */\n    static create(): SaveCmd {\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\n\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"SaveCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.save();\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return SaveCmd.ID;\n    }\n\n}\n\n","import { AlphaCmd } from \"./cmd/AlphaCmd\"\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\nimport { RotateCmd } from \"./cmd/RotateCmd\"\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\nimport { TransformCmd } from \"./cmd/TransformCmd\"\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\nimport { GrahamScan } from \"../maths/GrahamScan\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Pool } from \"../utils/Pool\"\nimport { Utils } from \"../utils/Utils\"\nimport { Graphics } from \"./Graphics\";\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\nimport { SaveCmd } from \"./cmd/SaveCmd\"\n\nconst _tempMatrix: Matrix = new Matrix();\nconst _initMatrix: Matrix = new Matrix();\nconst _tempMatrixArrays: any[] = [];\n\n/**\n * @private\n * Graphic bounds数据类\n */\nexport class GraphicsBounds {\n    /**@private */\n    private _temp: any[];\n    /**@private */\n    private _bounds: Rectangle;\n    /**@private */\n    private _rstBoundPoints: any[];\n    /**@private */\n    private _cacheBoundsType: boolean = false;\n    /**@internal */\n    _graphics: Graphics;\n\n    /**\n     * 销毁\n     */\n    destroy(): void {\n        this._graphics = null;\n        this._cacheBoundsType = false;\n        if (this._temp) this._temp.length = 0;\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\n        if (this._bounds) this._bounds.recover();\n        this._bounds = null;\n        Pool.recover(\"GraphicsBounds\", this);\n    }\n\n    /**\n     * 创建\n     */\n    static create(): GraphicsBounds {\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\n    }\n\n    /**\n     * 重置数据\n     */\n    reset(): void {\n        this._temp && (this._temp.length = 0);\n    }\n\n    /**\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\n     */\n    getBounds(realSize: boolean = false): Rectangle {\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\n        }\n        this._cacheBoundsType = realSize;\n        return this._bounds;\n    }\n\n    /**\n     * @private\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * 获取端点列表。\n     */\n    getBoundPoints(realSize: boolean = false): any[] {\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\n            this._temp = this._getCmdPoints(realSize);\n        this._cacheBoundsType = realSize;\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\n    }\n\n    private _getCmdPoints(realSize: boolean = false): any[] {\n        let cmds = this._graphics.cmds;\n        let sp = this._graphics._sp;\n        let rst: any[];\n        rst = this._temp || (this._temp = []);\n        rst.length = 0;\n        if (cmds.length == 0) return rst;\n\n        let matrixs: any[] = _tempMatrixArrays;\n        matrixs.length = 0;\n        let tMatrix: Matrix = _initMatrix;\n        tMatrix.identity();\n        let tempMatrix: Matrix = _tempMatrix;\n        for (let i = 0, n = cmds.length; i < n; i++) {\n            let cmd = cmds[i];\n            switch (cmd.cmdID) {\n                case AlphaCmd.ID:\n                case SaveCmd.ID:\n                    matrixs.push(tMatrix);\n                    tMatrix = tMatrix.clone();\n                    break;\n                case RestoreCmd.ID: //restore\n                    tMatrix = matrixs.pop();\n                    break;\n                case ScaleCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case RotateCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\n                    tempMatrix.rotate(cmd.angle);\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case TranslateCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(cmd.tx, cmd.ty);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case TransformCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\n                    tempMatrix.concat(cmd.matrix);\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case DrawImageCmd.ID:\n                case FillTextureCmd.ID:\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\n                    break;\n                case DrawTextureCmd.ID:\n                    tMatrix.copyTo(tempMatrix);\n                    if (cmd.matrix)\n                        tempMatrix.concat(cmd.matrix);\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\n                    break;\n                // case DrawImageCmd.ID:\n                //     {\n                //         let tex = cmd.texture;\n                //         if (realSize) {\n                //             if (cmd.width && cmd.height) {\n                //                 addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\n                //             } else {\n                //                 addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, tex.width, tex.height), tMatrix);\n                //             }\n                //         } else {\n                //             var wRate: number = (cmd.width || tex.sourceWidth) / tex.width;\n                //             var hRate: number = (cmd.height || tex.sourceHeight) / tex.height;\n                //             var oWidth: number = wRate * tex.sourceWidth;\n                //             var oHeight: number = hRate * tex.sourceHeight;\n\n                //             var offX: number = tex.offsetX > 0 ? tex.offsetX : 0;\n                //             var offY: number = tex.offsetY > 0 ? tex.offsetY : 0;\n\n                //             offX *= wRate;\n                //             offY *= hRate;\n\n                //             addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x - offX, cmd.y - offY, oWidth, oHeight), tMatrix);\n                //         }\n                //     }\n                //     break;\n                // case FillTextureCmd.ID:\n                //     addPointArrToRst(rst, (<FillTextureCmd>cmd).getBoundPoints(sp), tMatrix);\n                //     break;\n                // case DrawTextureCmd.ID:\n                //     {\n                //         let drawMatrix: Matrix;\n                //         if (cmd.matrix) {\n                //             tMatrix.copyTo(tempMatrix);\n                //             tempMatrix.concat(cmd.matrix);\n                //             drawMatrix = tempMatrix;\n                //         } else {\n                //             drawMatrix = tMatrix;\n                //         }\n                //         if (realSize) {\n                //             if (cmd.width && cmd.height) {\n                //                 addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), drawMatrix);\n                //             } else {\n                //                 let tex = cmd.texture;\n                //                 addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, tex.width, tex.height), drawMatrix);\n                //             }\n                //         } else {\n                //             let tex = cmd.texture;\n                //             wRate = (cmd.width || tex.sourceWidth) / tex.width;\n                //             hRate = (cmd.height || tex.sourceHeight) / tex.height;\n                //             oWidth = wRate * tex.sourceWidth;\n                //             oHeight = hRate * tex.sourceHeight;\n\n                //             offX = tex.offsetX > 0 ? tex.offsetX : 0;\n                //             offY = tex.offsetY > 0 ? tex.offsetY : 0;\n\n                //             offX *= wRate;\n                //             offY *= hRate;\n\n                //             addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x - offX, cmd.y - offY, oWidth, oHeight), drawMatrix);\n                //         }\n                //     }\n                //     break;\n                case DrawRectCmd.ID:\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawCircleCmd.ID:\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawLineCmd.ID:\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawCurvesCmd.ID:\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\n                    break;\n                case DrawLinesCmd.ID:\n                case DrawPolyCmd.ID:\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\n                    break;\n                case DrawPathCmd.ID:\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\n                    break;\n                case DrawPieCmd.ID:\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawTrianglesCmd.ID:\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case Draw9GridTextureCmd.ID:\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n            }\n        }\n        if (rst.length > 200) {\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\n        } else if (rst.length > 8)\n            rst = GrahamScan.scanPList(rst);\n        return rst;\n    }\n\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\n        tempMatrix.concat(tMatix);\n        tempMatrix.copyTo(tMatix);\n    }\n}\n\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\n    let len = points.length;\n    for (let i = 0; i < len; i += 2) {\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\n    }\n}\n\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\n    var _tempPoint: Point = Point.TEMP;\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\n    matrix.transformPoint(_tempPoint);\n    rst.push(_tempPoint.x, _tempPoint.y);\n}","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 裁剪命令\n */\nexport class ClipRectCmd {\n    static ID: string = \"ClipRect\";\n\n\n    /**\n     * X 轴偏移量。\n     */\n    x: number;\n    /**\n     * Y 轴偏移量。\n     */\n    y: number;\n    /**\n     * 宽度。\n     */\n    width: number;\n    /**\n     * 高度。\n     */\n    height: number;\n\n    /**@private */\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"ClipRectCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return ClipRectCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 根据坐标集合绘制多个贴图\n */\nexport class DrawTexturesCmd {\n    static ID: string = \"DrawTextures\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture;\n    /**\n     * 绘制次数和坐标。\n     */\n    pos: any[];\n\n    /**@private */\n    static create(texture: Texture, pos: any[]): DrawTexturesCmd {\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.pos = pos;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture._removeReference();\n        this.texture = null;\n        this.pos = null;\n        Pool.recover(\"DrawTexturesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.drawTextures(this.texture, this.pos, gx, gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawTexturesCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { ColorUtils } from \"../../utils/ColorUtils\"\nimport { FontInfo } from \"../../utils/FontInfo\"\nimport { Pool } from \"../../utils/Pool\"\nimport { WordText } from \"../../utils/WordText\"\nimport { ILaya } from \"../../../ILaya\";\nimport { HTMLChar } from \"../../utils/HTMLChar\";\nimport { Const } from \"../../Const\"\n\n/**\n * 绘制文字\n */\nexport class FillTextCmd {\n    static ID: string = \"FillText\";\n    private _text: string | WordText | null;\n    /**@internal */\n    _textIsWorldText = false;\n    _words: HTMLChar[] | null;\n    /**\n     * 开始绘制文本的 x 坐标位置（相对于画布）。\n     */\n    x: number;\n    /**\n     * 开始绘制文本的 y 坐标位置（相对于画布）。\n     */\n    y: number;\n    private _font: string;\n    private _color: string;\n    private _borderColor: string | null;\n    private _lineWidth: number;\n    private _textAlign: string;\n    private _fontColor = 0xffffffff;\n    private _strokeColor = 0;\n    private static _defFontObj = new FontInfo(null);\n    private _fontObj = FillTextCmd._defFontObj;\n    private _nTexAlign = 0;\n\n    /**@private */\n    static create(text: string | WordText | null, words: HTMLChar[] | null, x: number, y: number, font: string, color: string | null, textAlign: string, lineWidth: number, borderColor: string | null): FillTextCmd {\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\n        cmd.text = text;\n        cmd._textIsWorldText = text instanceof WordText;\n        cmd._words = words;\n        cmd.x = x;\n        cmd.y = y;\n        cmd.font = font;\n        cmd.color = color;\n        cmd.textAlign = textAlign;\n        cmd._lineWidth = lineWidth;\n        cmd._borderColor = borderColor;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"FillTextCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (ILaya.stage.isGlobalRepaint()) {\n            this._textIsWorldText && ((<WordText>this._text)).cleanCache();\n        }\n        if (this._words) {\n            context.fillWords11(this._words, this.x + gx, this.y + gy, this._fontObj, this._color, this._borderColor, this._lineWidth);\n        } else {\n            if (this._textIsWorldText) {// 快速通道\n                context._fast_filltext(((<WordText>this._text)), this.x + gx, this.y + gy, this._fontObj, this._color, this._borderColor, this._lineWidth, this._nTexAlign, 0);\n            } else {\n                context.filltext11(this._text!, this.x + gx, this.y + gy, this.font, this.color, this._borderColor, this._lineWidth, this._textAlign);\n            }\n        }\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return FillTextCmd.ID;\n    }\n\n    /**\n     * 在画布上输出的文本。\n     */\n    get text(): string | WordText | null {\n        return this._text;\n    }\n\n    set text(value: string | WordText | null) {\n        //TODO 问题。 怎么通知native\n        this._text = value;\n        this._textIsWorldText = value instanceof WordText;\n        this._textIsWorldText && ((<WordText>this._text)).cleanCache();\n    }\n\n    /**\n     * 定义字号和字体，比如\"20px Arial\"。\n     */\n    get font(): string {\n        return this._font;\n    }\n\n    set font(value: string) {\n        this._font = value;\n        this._fontObj = FontInfo.Parse(value);\n        this._textIsWorldText && ((<WordText>this._text)).cleanCache();\n    }\n\n    /**\n     * 定义文本颜色，比如\"#ff0000\"。\n     */\n    get color(): string {\n        return this._color;\n    }\n\n    set color(value: string) {\n        this._color = value;\n        this._fontColor = ColorUtils.create(value).numColor;\n        this._textIsWorldText && ((<WordText>this._text)).cleanCache();\n    }\n\n    /**\n     * 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     */\n    get textAlign(): string {\n        return this._textAlign;\n    }\n\n    set textAlign(value: string) {\n        this._textAlign = value;\n        switch (value) {\n            case 'center':\n                this._nTexAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                this._nTexAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n            default:\n                this._nTexAlign = Const.ENUM_TEXTALIGN_DEFAULT;\n        }\n        this._textIsWorldText && ((<WordText>this._text)).cleanCache();\n    }\n}\n\n","import { ILaya } from \"./../../ILaya\";\n/**\n * @private\n * 对象缓存统一管理类\n */\nexport class CacheManger {\n    //TODO:\n    /**\n     * 单次清理检测允许执行的时间，单位ms。\n     */\n    static loopTimeLimit: number = 2;\n    /**\n     * @private\n     */\n    private static _cacheList: any[] = [];\n    /**\n     * @private\n     * 当前检测的索引\n     */\n    private static _index: number = 0;\n\n    constructor() {\n\n    }\n\n    /**\n     * 注册cache管理函数\n     * @param disposeFunction 释放函数 fun(force:Boolean)\n     * @param getCacheListFunction 获取cache列表函数fun():Array\n     *\n     */\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\n        var cache: any;\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\n        CacheManger._cacheList.push(cache);\n    }\n\n    /**\n     * 移除cache管理函数\n     * @param disposeFunction 释放函数 fun(force:Boolean)\n     * @param getCacheListFunction 获取cache列表函数fun():Array\n     *\n     */\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\n        var i: number, len: number;\n        len = CacheManger._cacheList.length;\n        for (i = 0; i < len; i++) {\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\n                CacheManger._cacheList.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    /**\n     * 强制清理所有管理器\n     *\n     */\n    //TODO:coverage\n    static forceDispose(): void {\n        var i: number, len: number = CacheManger._cacheList.length;\n        for (i = 0; i < len; i++) {\n            CacheManger._cacheList[i].tryDispose(true);\n        }\n    }\n\n    /**\n     * 开始检测循环\n     * @param waitTime 检测间隔时间\n     *\n     */\n    static beginCheck(waitTime: number = 15000): void {\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\n    }\n\n    /**\n     * 停止检测循环\n     *\n     */\n    //TODO:coverage\n    static stopCheck(): void {\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\n    }\n\n    /**\n     * @private\n     * 检测函数\n     */\n    private static _checkLoop(): void {\n        var cacheList: any[] = CacheManger._cacheList;\n        if (cacheList.length < 1) return;\n        var tTime: number = ILaya.Browser.now();\n        var count: number;\n        var len: number;\n        len = count = cacheList.length;\n        while (count > 0) {\n            CacheManger._index++;\n            CacheManger._index = CacheManger._index % len;\n            cacheList[CacheManger._index].tryDispose(false);\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\n            count--;\n        }\n    }\n}\n\n\n","import { CacheManger } from \"./CacheManger\"\n\n/**\n * @private\n * TODO:\n */\nexport class VectorGraphManager {\n    //TODO:\n    static instance: VectorGraphManager;\n\n    useDic: any = {};\n    shapeDic: any = {};\n    shapeLineDic: any = {};\n\n    private _id: number = 0;\n    private _checkKey: boolean = false;\n    private _freeIdArray: any[] = [];\n\n    constructor() {\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\n    }\n\n    static getInstance(): VectorGraphManager {\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\n    }\n\n    /**\n     * 得到个空闲的ID\n     * @return\n     */\n    getId(): number {\n        //if (_freeIdArray.length > 0) {\n        //return _freeIdArray.pop();\n        //}\n        return this._id++;\n    }\n\n    /**\n     * 添加一个图形到列表中\n     * @param\tid\n     * @param\tshape\n     */\n    addShape(id: number, shape: any): void {\n        this.shapeDic[id] = shape;\n        if (!this.useDic[id]) {\n            this.useDic[id] = true;\n        }\n    }\n\n    /**\n     * 添加一个线图形到列表中\n     * @param\tid\n     * @param\tLine\n     */\n    addLine(id: number, Line: any): void {\n        this.shapeLineDic[id] = Line;\n        if (!this.shapeLineDic[id]) {\n            this.shapeLineDic[id] = true;\n        }\n    }\n\n    /**\n     * 检测一个对象是否在使用中\n     * @param\tid\n     */\n    getShape(id: number): void {\n        if (this._checkKey) {\n            if (this.useDic[id] != null) {\n                this.useDic[id] = true;\n            }\n        }\n    }\n\n    /**\n     * 删除一个图形对象\n     * @param\tid\n     */\n    deleteShape(id: number): void {\n        if (this.shapeDic[id]) {\n            this.shapeDic[id] = null;\n            delete this.shapeDic[id];\n        }\n        if (this.shapeLineDic[id]) {\n            this.shapeLineDic[id] = null;\n            delete this.shapeLineDic[id];\n        }\n        if (this.useDic[id] != null) {\n            delete this.useDic[id];\n        }\n        //_freeIdArray.push(id);\n    }\n\n    /**\n     * 得到缓存列表\n     * @return\n     */\n    getCacheList(): any[] {\n        var str: any;\n        var list: any[] = [];\n        for (str in this.shapeDic) {\n            list.push(this.shapeDic[str]);\n        }\n        for (str in this.shapeLineDic) {\n            list.push(this.shapeLineDic[str]);\n        }\n        return list;\n    }\n\n    /**\n     * 开始清理状态，准备销毁\n     */\n    startDispose(key: boolean): void {\n        var str: any;\n        for (str in this.useDic) {\n            this.useDic[str] = false;\n        }\n        this._checkKey = true;\n    }\n\n    /**\n     * 确认销毁\n     */\n    endDispose(): void {\n        if (this._checkKey) {\n            var str: any;\n            for (str in this.useDic) {\n                if (!this.useDic[str]) {\n                    this.deleteShape(str);\n                }\n            }\n            this._checkKey = false;\n        }\n\n    }\n\n}\n\n\n","import { Sprite } from \"./Sprite\";\nimport { GraphicsBounds } from \"./GraphicsBounds\";\nimport { SpriteConst } from \"./SpriteConst\";\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\nimport { RotateCmd } from \"./cmd/RotateCmd\"\nimport { SaveCmd } from \"./cmd/SaveCmd\"\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\nimport { TransformCmd } from \"./cmd/TransformCmd\"\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Context } from \"../resource/Context\"\nimport { Texture } from \"../resource/Texture\"\nimport { Utils } from \"../utils/Utils\"\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\nimport { ILaya } from \"../../ILaya\";\nimport { Config } from \"../../Config\";\n\n/**\n * <code>Graphics</code> 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\n * @see laya.display.Sprite#graphics\n */\nexport class Graphics {\n    /**@internal */\n    _sp: Sprite | null = null;\n    /**@internal */\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\n    /**@private */\n    private _cmds: any[] = [];\n    /**@private */\n    protected _vectorgraphArray: any[] | null = null;\n    /**@private */\n    private _graphicBounds: GraphicsBounds | null = null;\n\n    constructor() {\n        this._createData();\n    }\n\n    /**@internal */\n    _createData(): void {\n\n    }\n\n    /**@internal */\n    _clearData(): void {\n\n    }\n\n    /**@internal */\n    _destroyData(): void {\n\n    }\n\n    /**\n     * <p>销毁此对象。</p>\n     */\n    destroy(): void {\n        this.clear(true);\n        if (this._graphicBounds) this._graphicBounds.destroy();\n        this._graphicBounds = null;\n        this._vectorgraphArray = null;\n        if (this._sp) {\n            this._sp._renderType = 0;\n            this._sp._setRenderType(0);\n            this._sp = null;\n        }\n        this._destroyData();\n    }\n\n    /**\n     * <p>清空绘制命令。</p>\n     * @param recoverCmds 是否回收绘图指令数组，设置为true，则对指令数组进行回收以节省内存开销，建议设置为true进行回收，但如果手动引用了数组，不建议回收\n     */\n    clear(recoverCmds: boolean = true): void {\n        //TODO:内存回收all\n        if (recoverCmds) {\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\n                this._cmds[i].recover();\n            }\n        }\n\n        this._cmds.length = 0;\n        this._render = this._renderEmpty;\n        this._clearData();\n        if (this._sp) {\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\n            this._sp._setRenderType(this._sp._renderType);\n        }\n        this._repaint();\n        if (this._vectorgraphArray) {\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\n            }\n            this._vectorgraphArray.length = 0;\n        }\n    }\n\n    /**@private */\n    private _clearBoundsCache(): void {\n        if (this._graphicBounds) this._graphicBounds.reset();\n    }\n\n    /**@private */\n    private _initGraphicBounds(): void {\n        if (!this._graphicBounds) {\n            this._graphicBounds = GraphicsBounds.create();\n            this._graphicBounds._graphics = this;\n        }\n    }\n\n    /**\n     * @internal\n     * 重绘此对象。\n     */\n    _repaint(): void {\n        this._clearBoundsCache();\n        this._sp && this._sp.repaint();\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _isOnlyOne(): boolean {\n        return this._cmds.length === 1;\n    }\n\n    /**\n     * 命令流。存储了所有绘制命令。\n     */\n    get cmds() {\n        return this._cmds;\n    }\n\n    set cmds(value) {\n        if (this._sp) {\n            this._sp._renderType |= SpriteConst.GRAPHICS;\n            this._sp._setRenderType(this._sp._renderType);\n        }\n\n        this._cmds = value;\n\n        let len = value.length;\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\n        this._repaint();\n    }\n\n    /**\n     * 保存到命令流。\n     */\n    addCmd(cmd: any): any {\n        if (cmd == null) {\n            console.warn(\"null cmd\");\n            return;\n        }\n\n        if (this._sp) {\n            this._sp._renderType |= SpriteConst.GRAPHICS;\n            this._sp._setRenderType(this._sp._renderType);\n        }\n        this._cmds.push(cmd);\n        if (this._cmds.length == 1)\n            this._render = this._renderOne;\n        else\n            this._render = this._renderAll;\n        this._repaint();\n        return cmd;\n    }\n\n    removeCmd(cmd: any) {\n        let i = this.cmds.indexOf(cmd);\n        if (i != -1) {\n            this._cmds.splice(i, 1);\n\n            if (this._sp) {\n                this._sp._renderType |= SpriteConst.GRAPHICS;\n                this._sp._setRenderType(this._sp._renderType);\n            }\n\n            let len = this._cmds.length;\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\n            this._repaint();\n        }\n    }\n\n    /**\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\n     */\n    getBounds(realSize: boolean = false): Rectangle {\n        this._initGraphicBounds();\n        return this._graphicBounds!.getBounds(realSize);\n    }\n\n    /**\n     * @private\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * 获取端点列表。\n     */\n    getBoundPoints(realSize: boolean = false): any[] {\n        this._initGraphicBounds();\n        return this._graphicBounds!.getBoundPoints(realSize);\n    }\n\n    /**\n     * 绘制单独图片\n     * @param texture\t\t纹理。\n     * @param x \t\t（可选）X轴偏移量。\n     * @param y \t\t（可选）Y轴偏移量。\n     * @param width\t\t（可选）宽度。\n     * @param height\t（可选）高度。\n     */\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0): DrawImageCmd | null {\n        if (!texture) return null;\n        if (!texture.bitmap) return null;\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height));\n    }\n\n    /**\n     * 绘制纹理，相比drawImage功能更强大，性能会差一些\n     * @param texture\t\t纹理。\n     * @param x \t\t（可选）X轴偏移量。\n     * @param y \t\t（可选）Y轴偏移量。\n     * @param width\t\t（可选）宽度。\n     * @param height\t（可选）高度。\n     * @param matrix\t（可选）矩阵信息。\n     * @param alpha\t\t（可选）透明度。\n     * @param color\t\t（可选）颜色滤镜。\n     * @param blendMode （可选）混合模式。\n     */\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = 0, height: number = 0, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\n        if (!texture || alpha < 0.01) return null;\n        if (!texture.bitmap) return null;\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\n    }\n\n    /**\n     * 批量绘制同样纹理。\n     * @param texture 纹理。\n     * @param pos 绘制次数和坐标。\n     */\n    drawTextures(texture: Texture, pos: any[]): DrawTexturesCmd | null {\n        if (!texture) return null;\n        return this.addCmd(DrawTexturesCmd.create(texture, pos));\n    }\n\n    /**\n     * 绘制一组三角形\n     * @param texture\t纹理。\n     * @param x\t\t\tX轴偏移量。\n     * @param y\t\t\tY轴偏移量。\n     * @param vertices  顶点数组。\n     * @param indices\t顶点索引。\n     * @param uvData\tUV数据。\n     * @param matrix\t缩放矩阵。\n     * @param alpha\t\talpha\n     * @param color\t\t颜色变换\n     * @param blendMode\tblend模式\n     */\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\n        alpha: number = 1, color: string | null = null, blendMode: string | null = null, colorNum: number = 0xffffffff): DrawTrianglesCmd {\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode, colorNum));\n    }\n\n    /**\n     * 用texture填充。\n     * @param texture\t\t纹理。\n     * @param x\t\t\tX轴偏移量。\n     * @param y\t\t\tY轴偏移量。\n     * @param width\t\t（可选）宽度。\n     * @param height\t（可选）高度。\n     * @param type\t\t（可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\n     * @param offset\t（可选）贴图纹理偏移\n     *\n     */\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null): FillTextureCmd | null {\n        if (texture && texture.bitmap)\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY));\n        else\n            return null;\n    }\n\n    /**\n     * 设置剪裁区域，超出剪裁区域的坐标不显示。\n     * @param x X 轴偏移量。\n     * @param y Y 轴偏移量。\n     * @param width 宽度。\n     * @param height 高度。\n     */\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\n    }\n\n    /**\n     * 在画布上绘制文本。\n     * @param text 在画布上输出的文本。\n     * @param x 开始绘制文本的 x 坐标位置（相对于画布）。\n     * @param y 开始绘制文本的 y 坐标位置（相对于画布）。\n     * @param font 定义字号和字体，比如\"20px Arial\"。\n     * @param color 定义文本颜色，比如\"#ff0000\"。\n     * @param textAlign 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     */\n    fillText(text: string, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(text, null, x, y, font || Config.defaultFontStr(), color, textAlign, 0, \"\"));\n    }\n\n    /**\n     * 在画布上绘制“被填充且镶边的”文本。\n     * @param text\t\t\t在画布上输出的文本。\n     * @param x\t\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\n     * @param y\t\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\n     * @param font\t\t\t定义字体和字号，比如\"20px Arial\"。\n     * @param fillColor\t\t定义文本颜色，比如\"#ff0000\"。\n     * @param textAlign\t\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     * @param lineWidth\t\t镶边线条宽度。\n     * @param borderColor\t定义镶边文本颜色。\n     */\n\n    fillBorderText(text: string, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(text, null, x, y, font || Config.defaultFontStr(), fillColor, textAlign, lineWidth, borderColor));\n    }\n\n    /*** @private */\n    fillWords(words: any[], x: number, y: number, font: string, color: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(null, words, x, y, font || Config.defaultFontStr(), color, '', 0, null));\n    }\n\n    /*** @private */\n    fillBorderWords(words: any[], x: number, y: number, font: string, fillColor: string, borderColor: string, lineWidth: number): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(null, words, x, y, font || Config.defaultFontStr(), fillColor, \"\", lineWidth, borderColor));\n    }\n\n    /**\n     * 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\n     * @param text\t\t在画布上输出的文本。\n     * @param x\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\n     * @param y\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\n     * @param font\t\t定义字体和字号，比如\"20px Arial\"。\n     * @param color\t\t定义文本颜色，比如\"#ff0000\"。\n     * @param lineWidth\t线条宽度。\n     * @param textAlign\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     */\n    strokeText(text: string, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(text, null, x, y, font || Config.defaultFontStr(), null, textAlign, lineWidth, color));\n    }\n\n    /**\n     * 设置透明度。\n     * @param value 透明度。\n     */\n    alpha(alpha: number): AlphaCmd {\n        return this.addCmd(AlphaCmd.create(alpha));\n    }\n\n    /**\n     * 替换绘图的当前转换矩阵。\n     * @param mat 矩阵。\n     * @param pivotX\t（可选）水平方向轴心点坐标。\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\n     */\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\n    }\n\n    /**\n     * 旋转当前绘图。(推荐使用transform，性能更高)\n     * @param angle\t\t旋转角度，以弧度计。\n     * @param pivotX\t（可选）水平方向轴心点坐标。\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\n     */\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\n    }\n\n    /**\n     * 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\n     * @param scaleX\t水平方向缩放值。\n     * @param scaleY\t垂直方向缩放值。\n     * @param pivotX\t（可选）水平方向轴心点坐标。\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\n     */\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\n    }\n\n    /**\n     * 重新映射画布上的 (0,0) 位置。\n     * @param x 添加到水平坐标（x）上的值。\n     * @param y 添加到垂直坐标（y）上的值。\n     */\n    translate(tx: number, ty: number): TranslateCmd {\n        return this.addCmd(TranslateCmd.create(tx, ty));\n    }\n\n    /**\n     * 保存当前环境的状态。\n     */\n    save(): SaveCmd {\n        return this.addCmd(SaveCmd.create());\n    }\n\n    /**\n     * 返回之前保存过的路径状态和属性。\n     */\n    restore(): RestoreCmd {\n        return this.addCmd(RestoreCmd.create());\n    }\n\n    /**\n     * @private\n     * 替换文本内容。\n     * @param text 文本内容。\n     * @return 替换成功则值为true，否则值为flase。\n     */\n    replaceText(text: string): boolean {\n        this._repaint();\n        //todo 该函数现在加速器应该不对\n        var cmds = this._cmds;\n        for (let i = cmds.length - 1; i > -1; i--) {\n            if (this._isTextCmd(cmds[i])) {\n                cmds[i].text = text;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**@private */\n    private _isTextCmd(cmd: any): boolean {\n        var cmdID: string = cmd.cmdID;\n        return cmdID == FillTextCmd.ID;\n    }\n\n    /**\n     * @private\n     * 替换文本颜色。\n     * @param color 颜色。\n     */\n    replaceTextColor(color: string): void {\n        this._repaint();\n        let cmds = this._cmds;\n        for (let i = cmds.length - 1; i > -1; i--) {\n            if (this._isTextCmd(cmds[i])) {\n                this._setTextCmdColor(cmds[i], color);\n            }\n        }\n    }\n\n    /**@private */\n    private _setTextCmdColor(cmdO: any, color: string): void {\n        var cmdID: string = cmdO.cmdID;\n        switch (cmdID) {\n            case FillTextCmd.ID:\n                (cmdO as FillTextCmd).color = color;\n                break;\n        }\n    }\n\n    /**\n     * 加载并显示一个图片。\n     * @param url\t\t图片地址。\n     * @param x\t\t\t（可选）显示图片的x位置。\n     * @param y\t\t\t（可选）显示图片的y位置。\n     * @param width\t\t（可选）显示图片的宽度，设置为0表示使用图片默认宽度。\n     * @param height\t（可选）显示图片的高度，设置为0表示使用图片默认高度。\n     * @param complete\t（可选）加载完成回调。\n     */\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = 0, height: number = 0, complete: Function | null = null): void {\n        let tex: Texture = ILaya.loader.getRes(url);\n        if (tex) {\n            this.drawImage(tex, x, y, width, height);\n            complete && complete.call(this._sp);\n        }\n        else {\n            ILaya.loader.load(url).then((tex: Texture) => {\n                this.drawImage(tex, x, y, width, height);\n                complete && complete.call(this._sp);\n            });\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\n    }\n\n    /**\n     * @internal\n     */\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\n        context.sprite = sprite;\n        var cmds = this._cmds!;\n        for (let i = 0, n = cmds.length; i < n; i++) {\n            cmds[i].run(context, x, y);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\n        context.sprite = sprite;\n        this._cmds[0].run(context, x, y);\n    }\n\n    /**\n     * 绘制一条线。\n     * @param fromX\t\tX轴开始位置。\n     * @param fromY\t\tY轴开始位置。\n     * @param toX\t\tX轴结束位置。\n     * @param toY\t\tY轴结束位置。\n     * @param lineColor\t颜色。\n     * @param lineWidth\t（可选）线条宽度。\n     */\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制一系列线段。\n     * @param x\t\t\t开始绘制的X轴位置。\n     * @param y\t\t\t开始绘制的Y轴位置。\n     * @param points\t线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）线段宽度。\n     */\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\n        if (!points || points.length < 4) return null;\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制一系列曲线。\n     * @param x\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t开始绘制的 Y 轴位置。\n     * @param points\t线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）线段宽度。\n     */\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制矩形。\n     * @param x\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t开始绘制的 Y 轴位置。\n     * @param width\t\t矩形宽度。\n     * @param height\t矩形高度。\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）边框宽度。\n     * @param percent 位置和大小是否是百分比值。\n     */\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\n    }\n\n    /**\n     * 绘制圆形。\n     * @param x\t\t\t圆点X 轴位置。\n     * @param y\t\t\t圆点Y 轴位置。\n     * @param radius\t半径。\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）边框宽度。\n     */\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制扇形。\n     * @param x\t\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t\t开始绘制的 Y 轴位置。\n     * @param radius\t\t扇形半径。\n     * @param startAngle\t开始角度。\n     * @param endAngle\t\t结束角度。\n     * @param fillColor\t\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t\t（可选）边框宽度。\n     */\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制多边形。\n     * @param x\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t开始绘制的 Y 轴位置。\n     * @param points\t多边形的点集合。\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）边框宽度。\n     */\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制路径。\n     * @param x\t\t开始绘制的 X 轴位置。\n     * @param y\t\t开始绘制的 Y 轴位置。\n     * @param paths\t路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\n     * @param brush\t（可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\n     * @param pen\t（可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\n     */\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\n    }\n\n    /**\n     * @private\n     * 绘制带九宫格的图片\n     * @param\ttexture\n     * @param\tx\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @param\tsizeGrid\n     */\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[]): void {\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid));\n    }\n}","import { NodeFlags } from \"../Const\"\nimport { Component } from \"../components/Component\"\nimport { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Pool } from \"../utils/Pool\"\nimport { Stat } from \"../utils/Stat\"\nimport { Timer } from \"../utils/Timer\"\nimport { ILaya } from \"../../ILaya\";\nimport { ComponentDriver } from \"../components/ComponentDriver\";\n\nconst ARRAY_EMPTY: any[] = [];\n\n/**\n * 添加到父对象后调度。\n * @eventType Event.ADDED\n */\n/*[Event(name = \"added\", type = \"laya.events.Event\")]*/\n/**\n * 被父对象移除后调度。\n * @eventType Event.REMOVED\n */\n/*[Event(name = \"removed\", type = \"laya.events.Event\")]*/\n/**\n * 加入节点树时调度。\n * @eventType Event.DISPLAY\n */\n/*[Event(name = \"display\", type = \"laya.events.Event\")]*/\n/**\n * 从节点树移除时调度。\n * @eventType Event.UNDISPLAY\n */\n/*[Event(name = \"undisplay\", type = \"laya.events.Event\")]*/\n\n/**\n *  <code>Node</code> 类是可放在显示列表中的所有对象的基类。该显示列表管理 Laya 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\n */\nexport class Node extends EventDispatcher {\n    /**@private */\n    private _bits: number = 0;\n    /**@private */\n    private _hideFlags: number = 0;\n\n    /**@internal 子对象集合，请不要直接修改此对象。*/\n    _children: Node[] = ARRAY_EMPTY;\n    /**@internal 仅仅用来处理输入事件的,并不是真正意义上的子对象 */\n    _extUIChild: Node[] = ARRAY_EMPTY;\n    /**@internal 父节点对象*/\n    _parent: Node = null;\n    /**@internal */\n    _destroyed: boolean = false;\n    /**@internal */\n    _conchData: any;\n    /**@internal */\n    _componentDriver?: ComponentDriver;\n    /**@internal */\n    _is3D?: boolean;\n    _url?: string;\n    _extra?: INodeExtra;\n\n    /**节点名称。*/\n    name: string = \"\";\n\n    /**\n     * 如果节点从资源中创建，这里记录是他的url\n     */\n    get url(): string {\n        return this._url;\n    }\n\n    /**\n     * 设置资源的URL\n     */\n    set url(path: string) {\n        this._url = path;\n    }\n\n    get hideFlags(): number {\n        return this._hideFlags;\n    }\n\n    set hideFlags(value: number) {\n        this._hideFlags = value;\n    }\n\n    /** 是否3D节点，即Scene3D和Sprite3D及其衍生类 */\n    get is3D(): boolean {\n        return this._is3D;\n    }\n\n    /** 是否已经销毁。对象销毁后不能再使用。*/\n    get destroyed(): boolean {\n        return this._destroyed;\n    }\n\n    constructor() {\n        super();\n\n        this._initialize();\n    }\n\n    //@internal\n    _initialize(): void {\n        this._extra = {};\n    }\n\n    /**@internal */\n    _setBit(type: number, value: boolean): void {\n        if (type === NodeFlags.DISPLAY) {\n            var preValue: boolean = this._getBit(type);\n            if (preValue != value) this._updateDisplayedInstage();\n        }\n        if (value) this._bits |= type;\n        else this._bits &= ~type;\n    }\n\n    /**@internal */\n    _getBit(type: number): boolean {\n        return (this._bits & type) != 0;\n    }\n\n    /**@internal */\n    _setUpNoticeChain(): void {\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\n    }\n\n    /**@internal */\n    _setBitUp(type: number): void {\n        var ele: Node = this;\n        ele._setBit(type, true);\n        ele = ele._parent;\n        while (ele) {\n            if (ele._getBit(type)) return;\n            ele._setBit(type, true);\n            ele = ele._parent;\n        }\n    }\n\n    protected onStartListeningToType(type: string) {\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\n        }\n    }\n\n    hasHideFlag(flag: number): boolean {\n        return (this._hideFlags & flag) != 0;\n    }\n\n    /**\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._destroyed = true;\n        this.destroyAllComponent();\n        this._parent && this._parent.removeChild(this);\n\n        //销毁子节点\n        if (this._children) {\n            if (destroyChild) this.destroyChildren();\n            else this.removeChildren();\n        }\n        this.onDestroy();\n\n        this._children = null;\n\n        //移除所有事件监听\n        this.offAll();\n    }\n\n    /**\n     * 销毁时执行\n     * 此方法为虚方法，使用时重写覆盖即可\n     */\n    onDestroy(): void {\n        //trace(\"onDestroy node\", this.name);\n    }\n\n    /**\n     * 销毁所有子对象，不销毁自己本身。\n     */\n    destroyChildren(): void {\n        //销毁子节点\n        if (this._children) {\n            //为了保持销毁顺序，所以需要正序销毁\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[0] && this._children[0].destroy(true);\n            }\n        }\n    }\n\n\n    /**\n     * 添加子节点。\n     * @param\tnode 节点对象\n     * @return\t返回添加的节点\n     */\n    addChild<T extends Node>(node: T): T {\n        if (!node || this._destroyed || node as any === this) return node;\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\n        if (node._parent === this) {\n            var index: number = this.getChildIndex(node);\n            if (index !== this._children.length - 1) {\n                this._children.splice(index, 1);\n                this._children.push(node);\n                this._childChanged();\n            }\n        } else {\n            node._parent && node._parent.removeChild(node);\n            this._children === ARRAY_EMPTY && (this._children = []);\n            this._children.push(node);\n            node._setParent(this);\n        }\n\n        return node;\n    }\n\n    addInputChild(node: Node): Node {\n        if (this._extUIChild == ARRAY_EMPTY) {\n            this._extUIChild = [node];\n        } else {\n            if (this._extUIChild.indexOf(node) >= 0) {\n                return null;\n            }\n            this._extUIChild.push(node);\n        }\n        return null;\n    }\n\n    removeInputChild(node: Node): void {\n        var idx: number = this._extUIChild.indexOf(node);\n        if (idx >= 0) {\n            this._extUIChild.splice(idx, 1);\n        }\n    }\n\n    /**\n     * 批量增加子节点\n     * @param\t...args 无数子节点。\n     */\n    addChildren(...args: any[]): void {\n        var i: number = 0, n: number = args.length;\n        while (i < n) {\n            this.addChild(args[i++]);\n        }\n    }\n\n    /**\n     * 添加子节点到指定的索引位置。\n     * @param\tnode 节点对象。\n     * @param\tindex 索引位置。\n     * @return\t返回添加的节点。\n     */\n    addChildAt(node: Node, index: number): Node {\n        if (!node || this._destroyed || node === this) return node;\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\n        if (index >= 0 && index <= this._children.length) {\n            if (node._parent === this) {\n                var oldIndex: number = this.getChildIndex(node);\n                this._children.splice(oldIndex, 1);\n                this._children.splice(index, 0, node);\n                this._childChanged();\n            } else {\n                node._parent && node._parent.removeChild(node);\n                this._children === ARRAY_EMPTY && (this._children = []);\n                this._children.splice(index, 0, node);\n                node._setParent(this);\n            }\n            return node;\n        } else {\n            throw new Error(\"appendChildAt:The index is out of bounds\");\n        }\n    }\n\n    /**\n     * 根据子节点对象，获取子节点的索引位置。\n     * @param\tnode 子节点。\n     * @return\t子节点所在的索引位置。\n     */\n    getChildIndex(node: Node): number {\n        return this._children.indexOf(node);\n    }\n\n    /**\n     * 根据子节点的名字，获取子节点对象。\n     * @param\tname 子节点的名字。\n     * @return\t节点对象。\n     */\n    getChildByName(name: string): Node {\n        for (let child of this._children) {\n            if (child && child.name === name)\n                return child;\n        }\n        return null;\n    }\n\n    /**\n     * 根据子节点的索引位置，获取子节点对象。\n     * @param\tindex 索引位置\n     * @return\t子节点\n     */\n    getChildAt(index: number): Node {\n        return this._children[index] || null;\n    }\n\n    /**\n     * 设置子节点的索引位置。\n     * @param\tnode 子节点。\n     * @param\tindex 新的索引。\n     * @return\t返回子节点本身。\n     */\n    setChildIndex(node: Node, index: number): Node {\n        var childs: any[] = this._children;\n        if (index < 0 || index >= childs.length) {\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\n        }\n\n        var oldIndex: number = this.getChildIndex(node);\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\n        childs.splice(oldIndex, 1);\n        childs.splice(index, 0, node);\n        this._childChanged();\n        return node;\n    }\n\n    /**\n     * 子节点发生改变。\n     * @private\n     * @param\tchild 子节点。\n     */\n    protected _childChanged(child: Node = null): void {\n\n    }\n\n    /**\n     * 删除子节点。\n     * @param\tnode 子节点\n     * @return\t被删除的节点\n     */\n    removeChild(node: Node): Node {\n        if (!this._children) return node;\n        var index: number = this._children.indexOf(node);\n        return this.removeChildAt(index);\n    }\n\n    /**\n     * 从父容器删除自己，如已经被删除不会抛出异常。\n     * @return 当前节点（ Node ）对象。\n     */\n    removeSelf(): Node {\n        this._parent && this._parent.removeChild(this);\n        return this;\n    }\n\n    /**\n     * 根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。\n     * @param\tname 对象名字。\n     * @return 查找到的节点（ Node ）对象。\n     */\n    removeChildByName(name: string): Node {\n        var node: Node = this.getChildByName(name);\n        node && this.removeChild(node);\n        return node;\n    }\n\n    /**\n     * 根据子节点索引位置，删除对应的子节点对象。\n     * @param\tindex 节点索引位置。\n     * @return\t被删除的节点。\n     */\n    removeChildAt(index: number): Node {\n        var node: Node = this.getChildAt(index);\n        if (node) {\n            this._children.splice(index, 1);\n            node._setParent(null);\n        }\n        return node;\n    }\n\n    /**\n     * 删除指定索引区间的所有子对象。\n     * @param\tbeginIndex 开始索引。\n     * @param\tendIndex 结束索引。\n     * @return 当前节点对象。\n     */\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\n        if (this._children && this._children.length > 0) {\n            var childs: any[] = this._children;\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\n                var arr: any[] = childs;\n                this._children = ARRAY_EMPTY;\n            } else {\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\n            }\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\n                arr[i]._setParent(null);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * 替换子节点。\n     * 将传入的新节点对象替换到已有子节点索引位置处。\n     * @param\tnewNode 新节点。\n     * @param\toldNode 老节点。\n     * @return\t返回新节点。\n     */\n    replaceChild(newNode: Node, oldNode: Node): Node {\n        var index: number = this._children.indexOf(oldNode);\n        if (index > -1) {\n            this._children.splice(index, 1, newNode);\n            oldNode._setParent(null);\n            newNode._setParent(this);\n            return newNode;\n        }\n        return null;\n    }\n\n    /**\n     * 子对象数量。\n     */\n    get numChildren(): number {\n        return this._children?this._children.length:0;\n    }\n\n    /**父节点。*/\n    get parent(): Node {\n        return this._parent;\n    }\n\n    /**检查本节点是否是某个节点的上层节点\n     * @param node\n     * @return\n     */\n    isAncestorOf(node: Node): boolean {\n        let p = node.parent;\n        while (p) {\n            if (p == this)\n                return true;\n\n            p = p.parent;\n        }\n        return false;\n    };\n\n    /**@private */\n    protected _setParent(value: Node): void {\n        if (this._parent !== value) {\n            if (value) {\n                this._parent = value;\n                //如果父对象可见，则设置子对象可见\n                this._onAdded();\n                this.event(Event.ADDED);\n                if (this._getBit(NodeFlags.DISPLAY)) {\n                    this._setUpNoticeChain();\n                    value.displayedInStage && this._displayChild(this, true);\n                }\n                value._childChanged(this);\n            } else {\n                //设置子对象不可见\n                this._onRemoved();\n                this.event(Event.REMOVED);\n                let p = this._parent;\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\n                this._parent = value;\n                p._childChanged(this);\n            }\n        }\n    }\n\n    /**表示是否在显示列表中显示。*/\n    get displayedInStage(): boolean {\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\n        this._setBitUp(NodeFlags.DISPLAY);\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\n    }\n\n    /**@private */\n    private _updateDisplayedInstage(): void {\n        var ele: Node;\n        ele = this;\n        var stage: Node = ILaya.stage;\n        var displayedInStage: boolean = false;\n        while (ele) {\n            if (ele._getBit(NodeFlags.DISPLAY)) {\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\n                break;\n            }\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\n                displayedInStage = true;\n                break;\n            }\n            ele = ele._parent;\n        }\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\n    }\n\n    /**@internal */\n    _setDisplay(value: boolean): void {\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\n            if (value) this.event(Event.DISPLAY);\n            else this.event(Event.UNDISPLAY);\n        }\n    }\n\n    /**\n     * 设置指定节点对象是否可见(是否在渲染列表中)。\n     * @private\n     * @param\tnode 节点。\n     * @param\tdisplay 是否可见。\n     */\n    private _displayChild(node: Node, display: boolean): void {\n        var childs: any[] = node._children;\n        if (childs) {\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\n                var child: Node = childs[i];\n                if (!child) continue;\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\n                if (child._children.length > 0) {\n                    this._displayChild(child, display);\n                } else {\n                    child._setDisplay(display);\n                }\n            }\n        }\n        node._setDisplay(display);\n    }\n\n    /**\n     * 当前容器是否包含指定的 <code>Node</code> 节点对象 。\n     * @param\tnode  指定的 <code>Node</code> 节点对象 。\n     * @return\t一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。\n     */\n    contains(node: Node): boolean {\n        if (node === this) return true;\n        while (node) {\n            if (node._parent === this) return true;\n            node = node._parent;\n        }\n        return false;\n    }\n\n    /**\n     * 定时重复执行某函数。功能同Laya.timer.timerLoop()。\n     * @param\tdelay\t\t间隔时间(单位毫秒)。\n     * @param\tcaller\t\t执行域(this)。\n     * @param\tmethod\t\t结束时的回调方法。\n     * @param\targs\t\t（可选）回调参数。\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\n     */\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\n    }\n\n    /**\n     * 定时执行某函数一次。功能同Laya.timer.timerOnce()。\n     * @param\tdelay\t\t延迟时间(单位毫秒)。\n     * @param\tcaller\t\t执行域(this)。\n     * @param\tmethod\t\t结束时的回调方法。\n     * @param\targs\t\t（可选）回调参数。\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\n     */\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。\n     * @param\tdelay\t\t间隔几帧(单位为帧)。\n     * @param\tcaller\t\t执行域(this)。\n     * @param\tmethod\t\t结束时的回调方法。\n     * @param\targs\t\t（可选）回调参数。\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\n     */\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。\n     * @param\tdelay\t\t延迟几帧(单位为帧)。\n     * @param\tcaller\t\t执行域(this)\n     * @param\tmethod\t\t结束时的回调方法\n     * @param\targs\t\t（可选）回调参数\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true\n     */\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 清理定时器。功能同Laya.timer.clearTimer()。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 结束时的回调方法。\n     */\n    clearTimer(caller: any, method: Function): void {\n        this.timer.clear(caller, method);\n    }\n\n    /**\n     * <p>延迟运行指定的函数。</p>\n     * <p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>\n     * @param method 要执行的函数的名称。例如，functionName。\n     * @param args 传递给 <code>method</code> 函数的可选参数列表。\n     *\n     * @see #runCallLater()\n     */\n    callLater(method: Function, args: any[] = null): void {\n        this.timer.callLater(this, method, args);\n    }\n\n    /**\n     * <p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>\n     * @param method 要执行的函数名称。例如，functionName。\n     * @see #callLater()\n     */\n    runCallLater(method: Function): void {\n        this.timer.runCallLater(this, method);\n    }\n\n    //============================组件化支持==============================\n    /** @private */\n    protected _components: Component[];\n    /**@private */\n    private _activeChangeScripts: Component[];\n\n\n    _scene: Node;\n\n    /**\n     * 获得所属场景。\n     * @return\t场景。\n     */\n    get scene(): any {\n        return this._scene;\n    }\n\n    /**\n     * 获取自身是否激活。\n     *   @return\t自身是否激活。\n     */\n    get active(): boolean {\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\n    }\n\n    /**\n     * 设置是否激活。\n     * @param\tvalue 是否激活。\n     */\n    set active(value: boolean) {\n        value = !!value;\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\n                if (value)\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\n                else\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\n            } else {\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\n                if (this._parent) {\n                    if (this._parent.activeInHierarchy) {\n                        this._processActive(value, true);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 获取在场景中是否激活。\n     *   @return\t在场景中是否激活。\n     */\n    get activeInHierarchy(): boolean {\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\n    }\n\n    /**\n     * @private\n     */\n    protected _onActive(): void {\n        Stat.spriteCount++;\n    }\n\n    /**\n     * @private\n     */\n    protected _onInActive(): void {\n        Stat.spriteCount--;\n    }\n\n    /**\n     * @private\n     */\n    protected _onActiveInScene(): void {\n        //override it.\n    }\n\n    /**\n     * @private\n     */\n    protected _onInActiveInScene(): void {\n        //override it.\n    }\n\n    /**\n    * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\n    * 此方法为虚方法，使用时重写覆盖即可\n    */\n    onAwake(): void {\n        //this.name  && trace(\"onAwake node \", this.name);\n    }\n\n    /**\n     * 组件被启用后执行，比如节点被添加到舞台后\n     * 此方法为虚方法，使用时重写覆盖即可\n     */\n    onEnable(): void {\n        //this.name  && trace(\"onEnable node \", this.name);\n    }\n\n    /**\n     * 组件被禁用时执行，比如从节点从舞台移除后\n     * 此方法为虚方法，使用时重写覆盖即可\n     */\n    onDisable(): void {\n        //trace(\"onDisable node\", this.name);\n    }\n\n    /**\n     * @internal\n     */\n    _parse(data: any, spriteMap: any): void {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _setBelongScene(scene: Node): void {\n        if (!this._scene || this.scene != scene) {\n            this._scene = scene;\n            this._onActiveInScene();\n            for (let i = 0, n = this._children.length; i < n; i++)\n                this._children[i]._setBelongScene(scene);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _setUnBelongScene(): void {\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\n            this._onInActiveInScene();\n            this._scene = null;\n            for (let i = 0, n = this._children.length; i < n; i++)\n                this._children[i]._setUnBelongScene();\n        }\n    }\n\n    _processActive(active: boolean, fromSetter?: boolean) {\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\n        let arr = this._activeChangeScripts;\n\n        if (active)\n            this._activeHierarchy(arr, fromSetter);\n        else\n            this._inActiveHierarchy(arr, fromSetter);\n\n        for (let i = 0, n = arr.length; i < n; i++) {\n            let comp = arr[i];\n            comp.owner && comp._setActive(active);\n        }\n\n        arr.length = 0;\n    }\n\n    /**\n     * @internal\n     */\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp._isScript())\n                    (comp._enabled) && (activeChangeScripts.push(comp));\n                else\n                    comp._setActive(true);\n            }\n        }\n\n        this._onActive();\n        for (let i = 0, n = this._children.length; i < n; i++) {\n            let child = this._children[i];\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\n        }\n        if (!this._getBit(NodeFlags.AWAKED)) {\n            this._setBit(NodeFlags.AWAKED, true);\n            this.onAwake();\n        }\n        this.onEnable();\n    }\n\n    /**\n     * @internal\n     */\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\n        this._onInActive();\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp._isScript())\n                    comp._enabled && (activeChangeScripts.push(comp));\n                else\n                    comp._setActive(false);\n            }\n        }\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\n\n        for (let i = 0, n = this._children.length; i < n; i++) {\n            let child = this._children[i];\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\n        }\n        this.onDisable();\n    }\n\n    /**\n     * @private\n     */\n    protected _onAdded(): void {\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\n        } else {\n            let parentScene = this._parent.scene;\n            parentScene && this._setBelongScene(parentScene);\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\n        }\n    }\n\n    /**\n     * @private\n     */\n    protected _onRemoved(): void {\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\n        } else {\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\n            this._parent.scene && this._setUnBelongScene();\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _addComponentInstance(comp: Component): void {\n        if (!this._components)\n            this._components = [];\n        this._components.push(comp);\n\n        comp._setOwner(this);\n        if (this.activeInHierarchy)\n            comp._setActive(true);\n        this._componentsChanged?.(comp, 0);\n    }\n\n    /**\n     * @internal\n     */\n    _destroyComponent(comp: Component) {\n        if (!this._components)\n            return;\n\n        let i = this._components.indexOf(comp);\n        if (i != -1) {\n            this._components.splice(i, 1);\n            comp._destroy();\n            this._componentsChanged?.(comp, 1);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    private destroyAllComponent(): void {\n        if (!this._components)\n            return;\n\n        for (let i = 0, n = this._components.length; i < n; i++) {\n            let item = this._components[i];\n            item && !item.destroyed && item._destroy();\n        }\n        this._components.length = 0;\n        this._componentsChanged?.(null, 2);\n    }\n\n    /**\n     * 组件列表发生改变。\n     * @private\n     */\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\n\n    /**\n     * @internal 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\n        var destNode: Node = (<Node>destObject);\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\n                this._components[i]._cloneTo(destComponent);\n            }\n        }\n    }\n\n\n    /**\n     * 添加组件实例。\n     * @param\tcomponent 组建实例。\n     * @return\t组件。\n     */\n    addComponentInstance(component: Component): Component {\n        if (component.owner)\n            throw \"Node:the component has belong to other node.\";\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\n            throw \"Node:the component is singleton, can't add the second one.\";\n        this._addComponentInstance(component);\n        return component;\n    }\n\n    /**\n     * 添加组件。\n     * @param\tcomponentType 组件类型。\n     * @return\t组件。\n     */\n    addComponent<T extends Component>(componentType: new () => T): T {\n        let comp: T = Pool.createByClass(componentType);\n        if (!comp) {\n            throw componentType.toString() + \"组件不存在\";\n        }\n\n        if (comp._singleton && this.getComponent(componentType))\n            throw \"无法实例\" + componentType + \"组件\" + \"，\" + componentType + \"组件已存在！\";\n        this._addComponentInstance(comp);\n        return comp;\n    }\n\n    /**\n     * 获得组件实例，如果没有则返回为null\n     * @param\tcomponentType 组建类型\n     * @return\t返回组件\n     */\n    getComponent<T extends Component>(componentType: new () => T): T {\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp instanceof componentType)\n                    return comp;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 返回所有组件实例。\n     * @return 返回组件实例数组。\n     */\n    get components(): ReadonlyArray<Component> {\n        return this._components || ARRAY_EMPTY;\n    }\n\n    /**\n     * 获得组件实例，如果没有则返回为null\n     * @param\tcomponentType 组件类型\n     * @return\t返回组件数组\n     */\n    getComponents(componentType: typeof Component): Component[] {\n        var arr: any[];\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp instanceof componentType) {\n                    arr = arr || [];\n                    arr.push(comp);\n                }\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * 获取timer\n     */\n    get timer(): Timer {\n        return this._scene ? this._scene.timer : ILaya.timer;\n    }\n\n    /**\n     * 反序列化后会调用\n     */\n    onAfterDeserialize() { }\n}\n\nexport interface INodeExtra { }","\nconst HALF_PI = Math.PI * 0.5;\nconst PI2 = Math.PI * 2;\n\n/**\n* <code>Ease</code> 类定义了缓动函数，以便实现 <code>Tween</code> 动画的缓动效果。\n*/\nexport class Ease {\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearNone(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearIn(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearInOut(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearOut(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static bounceIn(t: number, b: number, c: number, d: number): number {\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static bounceOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\n    }\n\n    /**\n     * 开始时往后运动，然后反向朝目标移动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\n     * @return 指定时间的插补属性的值。\n     */\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    }\n\n    /**\n     * 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\n     * @return 指定时间的插补属性的值。\n     */\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n    }\n\n    /**\n     * 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\n     * @return 指定时间的插补属性的值。\n     */\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ta 指定正弦波的幅度。\n     * @param\tp 指定正弦波的周期。\n     * @return 指定时间的插补属性的值。\n     */\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\n\n        var s: number;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / PI2 * Math.asin(c / a);\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ta 指定正弦波的幅度。\n     * @param\tp 指定正弦波的周期。\n     * @return 指定时间的插补属性的值。\n     */\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\n\n        var s: number;\n        if (t == 0) return b;\n        if ((t /= d * 0.5) == 2) return b + c;\n        if (!p) p = d * (.3 * 1.5);\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / PI2 * Math.asin(c / a);\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ta 指定正弦波的幅度。\n     * @param\tp 指定正弦波的周期。\n     * @return 指定时间的插补属性的值。\n     */\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\n\n        var s: number;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / PI2 * Math.asin(c / a);\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\n    }\n\n    /**\n     * 以零速率开始运动，然后在执行时加快运动速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static strongIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static strongInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static strongOut(t: number, b: number, c: number, d: number): number {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static sineInOut(t: number, b: number, c: number, d: number): number {\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n\n    /**\n     * 以零速率开始运动，然后在执行时加快运动速度。\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static sineIn(t: number, b: number, c: number, d: number): number {\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static sineOut(t: number, b: number, c: number, d: number): number {\n        return c * Math.sin(t / d * HALF_PI) + b;\n    }\n\n    /**\n     * 以零速率开始运动，然后在执行时加快运动速度。\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quintIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quintInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quintOut(t: number, b: number, c: number, d: number): number {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quartIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quartInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quartOut(t: number, b: number, c: number, d: number): number {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static cubicIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static cubicOut(t: number, b: number, c: number, d: number): number {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quadIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quadInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quadOut(t: number, b: number, c: number, d: number): number {\n        return -c * (t /= d) * (t - 2) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static expoIn(t: number, b: number, c: number, d: number): number {\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static expoInOut(t: number, b: number, c: number, d: number): number {\n        if (t == 0) return b;\n        if (t == d) return b + c;\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static expoOut(t: number, b: number, c: number, d: number): number {\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 缓动方程的运动加速会产生突然的速率变化。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static circIn(t: number, b: number, c: number, d: number): number {\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 缓动方程的运动加速会产生突然的速率变化。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static circInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 缓动方程的运动加速会产生突然的速率变化。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static circOut(t: number, b: number, c: number, d: number): number {\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    }\n\n}\n\n","/**\n * <p><code>Handler</code> 是事件处理器类。</p>\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\n */\nexport class Handler {\n\n    /**@private handler对象池*/\n    protected static _pool: Handler[] = [];\n    /**@private */\n    private static _gid: number = 1;\n\n    /** 执行域(this)。*/\n    caller: Object | null;\n    /** 处理方法。*/\n    method: Function | null;\n    /** 参数。*/\n    args: any[] | null;\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\n    once = false;\n\n    /**@private */\n    protected _id = 0;\n\n    /**\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\n     * @param\tcaller 执行域。\n     * @param\tmethod 处理函数。\n     * @param\targs 函数参数。\n     * @param\tonce 是否只执行一次。\n     */\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\n        this.setTo(caller, method, args, once);\n    }\n\n    /**\n     * 设置此对象的指定属性值。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 回调方法。\n     * @param\targs 携带的参数。\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\n     * @return  返回 handler 本身。\n     */\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\n        this._id = Handler._gid++;\n        this.caller = caller;\n        this.method = method;\n        this.args = args;\n        this.once = once;\n        return this;\n    }\n\n    /**\n     * 执行处理器。\n     */\n    run(): any {\n        if (this.method == null) return null;\n        var id: number = this._id;\n        var result: any = this.method.apply(this.caller, this.args);\n        this._id === id && this.once && this.recover();\n        return result;\n    }\n\n    /**\n     * 执行处理器，并携带额外数据。\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\n     */\n    runWith(data: any): any {\n        if (this.method == null) return null;\n        var id: number = this._id;\n        if (data == null)\n            var result: any = this.method.apply(this.caller, this.args);\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\n        else result = this.method.apply(this.caller, data);\n        this._id === id && this.once && this.recover();\n        return result;\n    }\n\n    /**\n     * 清理对象引用。\n     */\n    clear(): Handler {\n        this.caller = null;\n        this.method = null;\n        this.args = null;\n        return this;\n    }\n\n    /**\n     * 清理并回收到 Handler 对象池内。\n     */\n    recover(): void {\n        if (this._id > 0) {\n            this._id = 0;\n            Handler._pool.push(this.clear());\n        }\n    }\n\n    /**\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 回调方法。\n     * @param\targs 携带的参数。\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\n     * @return  返回创建的handler实例。\n     */\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\n        if (Handler._pool.length)\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\n        return new Handler(caller, method, args, once);\n    }\n}\n\n","import { Handler } from \"./Handler\";\nimport { Pool } from \"./Pool\";\nimport { Browser } from \"./Browser\";\nimport { Utils } from \"./Utils\";\nimport { ILaya } from \"./../../ILaya\";\n\n/**\n * <code>Tween</code>  是一个缓动类。使用此类能够实现对目标对象属性的渐变。\n */\nexport class Tween {\n    /**@private */\n    private static tweenMap: any[] = [];\n    /**@private */\n    private _complete: Handler;\n    /**@private */\n    private _target: any;\n    /**@private */\n    private _ease: Function;\n    /**@private */\n    private _props: any[];\n    /**@private */\n    private _duration: number;\n    /**@private */\n    private _delay: number;\n    /**@private */\n    private _startTimer: number;\n    /**@private */\n    private _usedTimer: number;\n    /**@private */\n    private _usedPool: boolean;\n    /**@private */\n    private _delayParam: any[];\n    /**@private 唯一标识，TimeLintLite用到*/\n    gid: number = 0;\n    /**更新回调，缓动数值发生变化时，回调变化的值*/\n    update: Handler;\n    /**重播次数，如果repeat=0，则表示无限循环播放*/\n    repeat: number = 1;\n    /**当前播放次数*/\n    private _count: number = 0;\n\n    /**\n     * 缓动对象的props属性到目标值。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\n     * @return\t返回Tween对象。\n     */\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\n    }\n\n    /**\n     * 从props属性，缓动到当前状态。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\n     * @return\t返回Tween对象。\n     */\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\n    }\n\n    /**\n     * 缓动对象的props属性到目标值。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @return\t返回Tween对象。\n     */\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\n    }\n\n    /**\n     * 从props属性，缓动到当前状态。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @return\t返回Tween对象。\n     */\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\n    }\n\n    /** @internal */\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\n        if (!target) throw new Error(\"Tween:target is null\");\n        this._target = target;\n        this._duration = duration;\n        this._ease = ease || props.ease || Tween.easeNone;\n        this._complete = complete || props.complete;\n        this._delay = delay;\n        this._props = [];\n        this._usedTimer = 0;\n        this._startTimer = Browser.now();\n        this._usedPool = usePool;\n        this._delayParam = null;\n        this.update = props.update;\n\n        //判断是否覆盖\t\t\t\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\n        if (!Tween.tweenMap[gid]) {\n            Tween.tweenMap[gid] = [this];\n        } else {\n            if (coverBefore) Tween.clearTween(target);\n            Tween.tweenMap[gid].push(this);\n        }\n\n        if (runNow) {\n            if (delay <= 0) this.firstStart(target, props, isTo);\n            else {\n                this._delayParam = [target, props, isTo];\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\n            }\n        } else {\n            this._initProps(target, props, isTo);\n        }\n        return this;\n    }\n\n    private firstStart(target: any, props: any, isTo: boolean): void {\n        this._delayParam = null;\n        if (target.destroyed) {\n            this.clear();\n            return;\n        }\n        this._initProps(target, props, isTo);\n        this._beginLoop();\n    }\n\n    private _initProps(target: any, props: any, isTo: boolean): void {\n        //初始化属性\n        for (var p in props) {\n            if (typeof (target[p]) == 'number') {\n                var start: number = isTo ? target[p] : props[p];\n                var end: number = isTo ? props[p] : target[p];\n                this._props.push([p, start, end - start]);\n                if (!isTo) target[p] = start;\n            }\n        }\n    }\n\n    private _beginLoop(): void {\n        ILaya.timer.frameLoop(1, this, this._doEase);\n    }\n\n    /**执行缓动**/\n    private _doEase(): void {\n        this._updateEase(Browser.now());\n    }\n\n    /**@internal */\n    _updateEase(time: number): void {\n        var target: any = this._target;\n        if (!target) return;\n\n        //如果对象被销毁，则立即停止缓动\n        if (target.destroyed) return Tween.clearTween(target);\n\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\n        if (usedTimer < 0) return;\n        if (usedTimer >= this._duration) return this.complete();\n\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\n        var props: any[] = this._props;\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\n            var prop: any[] = props[i];\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\n        }\n        if (this.update) this.update.run();\n    }\n\n    /**设置当前执行比例**/\n    set progress(v: number) {\n        var uTime: number = v * this._duration;\n        this._startTimer = Browser.now() - this._delay - uTime;\n    }\n\n    /**\n     * 立即结束缓动并到终点。\n     */\n    complete(): void {\n        if (!this._target) return;\n\n        //立即执行初始化\n        ILaya.timer.runTimer(this, this.firstStart);\n\n        //缓存当前属性\n        var target: any = this._target;\n        var props: any = this._props;\n        var handler: Handler = this._complete;\n        //设置终点属性\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\n            var prop: any[] = props[i];\n            target[prop[0]] = prop[1] + prop[2];\n        }\n        if (this.update) this.update.run();\n\n        this._count++;\n        if (this.repeat != 0 && this._count >= this.repeat) {\n            //清理\n            this.clear();\n            //回调\n            handler && handler.run();\n        } else {\n            this.restart();\n        }\n    }\n\n    /**\n     * 暂停缓动，可以通过resume或restart重新开始。\n     */\n    pause(): void {\n        ILaya.timer.clear(this, this._beginLoop);\n        ILaya.timer.clear(this, this._doEase);\n        ILaya.timer.clear(this, this.firstStart);\n        var time: number = Browser.now();\n        var dTime: number;\n        dTime = time - this._startTimer - this._delay;\n        if (dTime < 0) {\n            this._usedTimer = dTime;\n        }\n    }\n\n    /**\n     * 设置开始时间。\n     * @param\tstartTime 开始时间。\n     */\n    setStartTime(startTime: number): void {\n        this._startTimer = startTime;\n    }\n\n    /**\n     * 清理指定目标对象上的所有缓动。\n     * @param\ttarget 目标对象。\n     */\n    static clearAll(target: any): void {\n        if (!target || !target.$_GID) return;\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\n        if (tweens) {\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\n                tweens[i]._clear();\n            }\n            tweens.length = 0;\n        }\n    }\n\n    /**\n     * 清理某个缓动。\n     * @param\ttween 缓动对象。\n     */\n    static clear(tween: Tween): void {\n        tween.clear();\n    }\n\n    /**@private 同clearAll，废弃掉，尽量别用。*/\n    static clearTween(target: any): void {\n        Tween.clearAll(target);\n    }\n\n    /**\n     * 停止并清理当前缓动。\n     */\n    clear(): void {\n        if (this._target) {\n            this._remove();\n            this._clear();\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _clear(): void {\n        this.pause();\n        ILaya.timer.clear(this, this.firstStart);\n        this._complete = null;\n        this._target = null;\n        this._ease = null;\n        this._props = null;\n        this._delayParam = null;\n    this.repeat = 1;\n\n        if (this._usedPool) {\n            this.update = null;\n            Pool.recover(\"tween\", this);\n        }\n    }\n\n    /** 回收到对象池。*/\n    recover(): void {\n        this._usedPool = true;\n        this._clear();\n    }\n\n    private _remove(): void {\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\n        if (tweens) {\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\n                if (tweens[i] === this) {\n                    tweens.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 重新开始暂停的缓动。\n     */\n    restart(): void {\n        this.pause();\n        this._usedTimer = 0;\n        this._startTimer = Browser.now();\n        if (this._delayParam) {\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\n            return;\n        }\n        var props: any[] = this._props;\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\n            var prop: any[] = props[i];\n            this._target[prop[0]] = prop[1];\n        }\n        ILaya.timer.once(this._delay, this, this._beginLoop);\n    }\n\n    /**\n     * 恢复暂停的缓动。\n     */\n    resume(): void {\n        if (this._usedTimer >= this._duration) return;\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\n        if (this._delayParam) {\n            if (this._usedTimer < 0) {\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\n            } else {\n                this.firstStart.apply(this, <any>this._delayParam);\n            }\n        } else {\n            this._beginLoop();\n        }\n    }\n\n    private static easeNone(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n}\n\n","import { Sprite } from \"../display/Sprite\";\nimport { Event } from \"../events/Event\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { ILaya } from \"./../../ILaya\";\nimport { Ease } from \"./Ease\";\nimport { Handler } from \"./Handler\";\nimport { Tween } from \"./Tween\";\n\n/**\n * @private\n * <code>Dragging</code> 类是触摸滑动控件。\n */\nexport class Dragging {\n    /** 被拖动的对象。*/\n    target: Sprite;\n    /** 缓动衰减系数。*/\n    ratio: number = 0.92;\n    /** 单帧最大偏移量。*/\n    maxOffset: number = 60;\n    /** 滑动范围。*/\n    area: Rectangle;\n    /** 表示拖动是否有惯性。*/\n    hasInertia: boolean;\n    /** 橡皮筋最大值。*/\n    elasticDistance: number;\n    /** 橡皮筋回弹时间，单位为毫秒。*/\n    elasticBackTime: number;\n    /** 事件携带数据。*/\n    data: any;\n\n    private _dragging: boolean = false;\n    private _clickOnly: boolean = true;\n    private _elasticRateX: number;\n    private _elasticRateY: number;\n    private _lastX: number;\n    private _lastY: number;\n    private _offsetX: number;\n    private _offsetY: number;\n    private _offsets: any[];\n    private _tween: Tween;\n    private _parent: Sprite;\n\n    /**\n     * 开始拖拽。\n     * @param\ttarget 待拖拽的 <code>Sprite</code> 对象。\n     * @param\tarea 滑动范围。\n     * @param\thasInertia 拖动是否有惯性。\n     * @param\telasticDistance 橡皮筋最大值。\n     * @param\telasticBackTime 橡皮筋回弹时间，单位为毫秒。\n     * @param\tdata 事件携带数据。\n     * @param\tratio 惯性阻尼系数\n     */\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\n        this.clearTimer();\n\n        this.target = target;\n        this.area = area;\n        this.hasInertia = hasInertia;\n        this.elasticDistance = area ? elasticDistance : 0;\n        this.elasticBackTime = elasticBackTime;\n        this.data = data;\n        this.ratio = ratio;\n\n        this._parent = (target.parent as Sprite);\n\n        this._clickOnly = true;\n        this._dragging = true;\n        this._elasticRateX = this._elasticRateY = 1;\n        this._lastX = this._parent.mouseX;\n        this._lastY = this._parent.mouseY;\n\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\n    }\n\n    /**\n     * 清除计时器。\n     */\n    private clearTimer(): void {\n        ILaya.systemTimer.clear(this, this.loop);\n        ILaya.systemTimer.clear(this, this.tweenMove);\n        if (this._tween) {\n            this._tween.recover();\n            this._tween = null;\n        }\n    }\n\n    /**\n     * 停止拖拽。\n     */\n    stop(): void {\n        if (this._dragging) {\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\n            this._dragging = false;\n            this.target && this.area && this.backToArea();\n            this.clear();\n        }\n    }\n\n    /**\n     * 拖拽的循环处理函数。\n     */\n    private loop(): void {\n        var point: Point = this._parent.getMousePoint();\n        var mouseX: number = point.x;\n        var mouseY: number = point.y;\n        var offsetX: number = mouseX - this._lastX;\n        var offsetY: number = mouseY - this._lastY;\n\n        if (this._clickOnly) {\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\n                this._clickOnly = false;\n                this._offsets || (this._offsets = []);\n                this._offsets.length = 0;\n                this.target.event(Event.DRAG_START, this.data);\n                //TODO:\n                //target._set$P(\"$_MOUSEDOWN\", false);\n            } else return;\n        } else {\n            this._offsets.push(offsetX, offsetY);\n        }\n        if (offsetX === 0 && offsetY === 0) return;\n\n        this._lastX = mouseX;\n        this._lastY = mouseY;\n        this.target.x += offsetX * this._elasticRateX;\n        this.target.y += offsetY * this._elasticRateY;\n\n        this.area && this.checkArea();\n\n        this.target.event(Event.DRAG_MOVE, this.data);\n    }\n\n    /**\n     * 拖拽区域检测。\n     */\n    private checkArea(): void {\n        if (this.elasticDistance <= 0) {\n            this.backToArea();\n        } else {\n            if (this.target._x < this.area.x) {\n                var offsetX: number = this.area.x - this.target._x;\n            } else if (this.target._x > this.area.x + this.area.width) {\n                offsetX = this.target._x - this.area.x - this.area.width;\n            } else {\n                offsetX = 0;\n            }\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\n\n            if (this.target._y < this.area.y) {\n                var offsetY: number = this.area.y - this.target.y;\n            } else if (this.target._y > this.area.y + this.area.height) {\n                offsetY = this.target._y - this.area.y - this.area.height;\n            } else {\n                offsetY = 0;\n            }\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\n        }\n    }\n\n    /**\n     * 移动至设定的拖拽区域。\n     */\n    private backToArea(): void {\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\n    }\n\n    /**\n     * 舞台的抬起事件侦听函数。\n     * @param\te Event 对象。\n     */\n    private onStageMouseUp(e: Event): void {\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\n        ILaya.systemTimer.clear(this, this.loop);\n\n        if (this._clickOnly || !this.target) return;\n        //target.mouseEnabled = true;\n\n        if (this.hasInertia) {\n            //计算平均值\n            if (this._offsets.length < 1) {\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\n            }\n\n            this._offsetX = this._offsetY = 0;\n            var len: number = this._offsets.length;\n            var n: number = Math.min(len, 6);\n            var m: number = this._offsets.length - n;\n            for (var i: number = len - 1; i > m; i--) {\n                this._offsetY += this._offsets[i--];\n                this._offsetX += this._offsets[i];\n            }\n\n            this._offsetX = this._offsetX / n * 2;\n            this._offsetY = this._offsetY / n * 2;\n\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\n        } else if (this.elasticDistance > 0) {\n            this.checkElastic();\n        } else {\n            this.clear();\n        }\n    }\n\n    /**\n     * 橡皮筋效果检测。\n     */\n    private checkElastic(): void {\n        var tx: number = NaN;\n        var ty: number = NaN;\n        if (this.target.x < this.area.x) tx = this.area.x;\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\n\n        if (this.target.y < this.area.y) ty = this.area.y;\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\n\n        if (!isNaN(tx) || !isNaN(ty)) {\n            var obj: any = {};\n            if (!isNaN(tx)) obj.x = tx;\n            if (!isNaN(ty)) obj.y = ty;\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\n        } else {\n            this.clear();\n        }\n    }\n\n    /**\n     * 移动。\n     */\n    private tweenMove(): void {\n        this._offsetX *= this.ratio * this._elasticRateX;\n        this._offsetY *= this.ratio * this._elasticRateY;\n\n        this.target.x += this._offsetX;\n        this.target.y += this._offsetY;\n\n        this.area && this.checkArea();\n\n        this.target.event(Event.DRAG_MOVE, this.data);\n\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\n            ILaya.systemTimer.clear(this, this.tweenMove);\n            if (this.elasticDistance > 0) this.checkElastic();\n            else this.clear();\n        }\n    }\n\n    /**\n     * 结束拖拽。\n     */\n    private clear(): void {\n        if (this.target) {\n            this.clearTimer();\n            var sp = this.target;\n            this.target = null;\n            this._parent = null;\n            sp.event(Event.DRAG_END, this.data);\n        }\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Utils } from \"./Utils\";\n\nexport class SpriteUtils {\n    /**\n     * @private\n     * 根据传入的显示对象 <code>Sprite</code> 和此显示对象上的 两个点，返回此对象上的两个点在舞台坐标系上组成的最小的矩形区域对象。\n     * @param\tsprite 显示对象 <code>Sprite</code>。\n     * @param\tx0\t点一的 X 轴坐标点。\n     * @param\ty0\t点一的 Y 轴坐标点。\n     * @param\tx1\t点二的 X 轴坐标点。\n     * @param\ty1\t点二的 Y 轴坐标点。\n     * @return 两个点在舞台坐标系组成的矩形对象 <code>Rectangle</code>。\n     */\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\n        var newLTPoint: Point;\n        newLTPoint = Point.create().setTo(x0, y0);\n        newLTPoint = sprite.localToGlobal(newLTPoint);\n        var newRBPoint: Point;\n        newRBPoint = Point.create().setTo(x1, y1);\n        newRBPoint = sprite.localToGlobal(newRBPoint);\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\n        newLTPoint.recover();\n        newRBPoint.recover();\n        return rst;\n    }\n\n    /**\n     * 计算传入的显示对象 <code>Sprite</code> 的全局坐标系的坐标和缩放值，返回 <code>Rectangle</code> 对象存放计算出的坐标X值、Y值、ScaleX值、ScaleY值。\n     * @param\tsprite <code>Sprite</code> 对象。\n     * @return  矩形对象 <code>Rectangle</code>\n     */\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\n    }\n\n    /**\n    * 获取指定区域内相对于窗口左上角的transform。\n    * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\n    * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\n    * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\n    * @return\n    */\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\n        var stage = ILaya.stage;\n\n        // coordinateSpace的全局缩放、坐标\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\n        // canvas的transform矩阵\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\n        // 在矩阵变化前前记录的canvas的坐标\n        var canvasLeft: number = canvasMatrix.tx;\n        var canvasTop: number = canvasMatrix.ty;\n\n        // 把矩阵转回0度，得到正确的画布缩放比\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\n        // 组合画布缩放和舞台适配缩放\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\n        // 画布是否处于正常角度的垂直角度，-90或90度\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\n        var tx: number, ty: number;\n\n        if (perpendicular) {\n            // 在舞台上的坐标\n            tx = y + globalTransform.y;\n            ty = x + globalTransform.x;\n\n            // 在画布上的坐标\n            tx *= canvasMatrix.d;\n            ty *= canvasMatrix.a;\n\n            // 设置了screenMode = horizontal\n            if (stage.canvasDegree == 90) {\n                // 在浏览器窗口上的坐标\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\n                tx = canvasLeft - tx;\n                ty += canvasTop;\n            }\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\n            else {\n                // 在浏览器窗口上的坐标\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\n                tx += canvasLeft;\n                ty = canvasTop - ty;\n            }\n        }\n        // 没有canvas旋转\n        else {\n            // 在舞台上的坐标\n            tx = x + globalTransform.x;\n            ty = y + globalTransform.y;\n\n            // 在画布上的坐标\n            tx *= canvasMatrix.a;\n            ty *= canvasMatrix.d;\n\n            // 在浏览器窗口上的坐标\n            tx += canvasLeft;\n            ty += canvasTop;\n        }\n\n        // Safari兼容\n        ty += stage['_safariOffsetY'];\n\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\n        var domScaleX: number, domScaleY: number;\n        if (perpendicular) {\n            domScaleX = canvasMatrix.d * globalTransform.height;\n            domScaleY = canvasMatrix.a * globalTransform.width;\n        } else {\n            domScaleX = canvasMatrix.a * globalTransform.width;\n            domScaleY = canvasMatrix.d * globalTransform.height;\n        }\n\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\n    }\n\n    /**\n     * 使DOM元素使用舞台内的某块区域内。\n     * @param\tdom\t\t\t\tDOM元素引用\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\n     * @param\twidth\t\t\t宽度\n     * @param\theight\t\t\t高度\n     */\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\n        if (!dom._fitLayaAirInitialized) {\n            dom._fitLayaAirInitialized = true;\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\n            dom.style.position = \"absolute\"\n        }\n\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\n\n        // 设置dom样式\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\n        dom.style.width = width + 'px';\n        dom.style.height = height + 'px';\n        dom.style.left = transform.x + 'px';\n        dom.style.top = transform.y + 'px';\n    }\n\n\n    /**\n     * @private\n     * 对传入的数组列表，根据子项的属性 Z 值进行重新排序。返回是否已重新排序的 Boolean 值。\n     * @param\tarray 子对象数组。\n     * @return\tBoolean 值，表示是否已重新排序。\n     */\n    static updateOrder(array: any[]): boolean {\n        if (!array || array.length < 2) return false;\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\n        while (i < len) {\n            j = i;\n            c = array[j];\n            key = array[j]._zOrder;\n            while (--j > -1) {\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\n                else break;\n            }\n            array[j + 1] = c;\n            i++;\n        }\n        return true;\n    }\n}","import { ILaya } from \"../../ILaya\";\nimport { NodeFlags } from \"../Const\";\nimport { ColorFilter } from \"../filters/ColorFilter\";\nimport { Filter } from \"../filters/Filter\";\nimport { GrahamScan } from \"../maths/GrahamScan\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { RenderSprite } from \"../renders/RenderSprite\";\nimport { Context } from \"../resource/Context\";\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\nimport { Texture } from \"../resource/Texture\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { Handler } from \"../utils/Handler\";\nimport { Utils } from \"../utils/Utils\";\nimport { BoundsStyle } from \"./css/BoundsStyle\";\nimport { CacheStyle } from \"./css/CacheStyle\";\nimport { SpriteStyle } from \"./css/SpriteStyle\";\nimport { Graphics } from \"./Graphics\";\nimport { Node } from \"./Node\";\nimport { SpriteConst } from \"./SpriteConst\";\nimport { Stage } from \"./Stage\";\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\nimport { Event } from \"../events/Event\";\nimport { Dragging } from \"../utils/Dragging\";\nimport { URL } from \"../net/URL\";\nimport { Scene } from \"./Scene\";\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\n\n/**在显示对象上按下后调度。\n * @eventType Event.MOUSE_DOWN\n * */\n/*[Event(name = \"mousedown\", type = \"laya.events.Event\")]*/\n/**在显示对象抬起后调度。\n * @eventType Event.MOUSE_UP\n * */\n/*[Event(name = \"mouseup\", type = \"laya.events.Event\")]*/\n/**鼠标在对象身上进行移动后调度\n * @eventType Event.MOUSE_MOVE\n * */\n/*[Event(name = \"mousemove\", type = \"laya.events.Event\")]*/\n/**鼠标经过对象后调度。\n * @eventType Event.MOUSE_OVER\n * */\n/*[Event(name = \"mouseover\", type = \"laya.events.Event\")]*/\n/**鼠标离开对象后调度。\n * @eventType Event.MOUSE_OUT\n * */\n/*[Event(name = \"mouseout\", type = \"laya.events.Event\")]*/\n/**鼠标点击对象后调度。\n * @eventType Event.CLICK\n * */\n/*[Event(name = \"click\", type = \"laya.events.Event\")]*/\n/**开始拖动后调度。\n * @eventType Event.DRAG_START\n * */\n/*[Event(name = \"dragstart\", type = \"laya.events.Event\")]*/\n/**拖动中调度。\n * @eventType Event.DRAG_MOVE\n * */\n/*[Event(name = \"dragmove\", type = \"laya.events.Event\")]*/\n/**拖动结束后调度。\n * @eventType Event.DRAG_END\n * */\n/*[Event(name = \"dragend\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Sprite</code> 是基本的显示图形的显示列表节点。 <code>Sprite</code> 默认没有宽高，默认不接受鼠标事件。通过 <code>graphics</code> 可以绘制图片或者矢量图，支持旋转，缩放，位移等操作。<code>Sprite</code>同时也是容器类，可用来添加多个子节点。</p>\n * <p>注意： <code>Sprite</code> 默认没有宽高，可以通过<code>getBounds</code>函数获取；也可手动设置宽高；还可以设置<code>autoSize=true</code>，然后再获取宽高。<code>Sprite</code>的宽高一般用于进行碰撞检测和排版，并不影响显示图像大小，如果需要更改显示图像大小，请使用 <code>scaleX</code> ， <code>scaleY</code> ， <code>scale</code>。</p>\n * <p> <code>Sprite</code> 默认不接受鼠标事件，即<code>mouseEnabled=false</code>，但是只要对其监听任意鼠标事件，会自动打开自己以及所有父对象的<code>mouseEnabled=true</code>。所以一般也无需手动设置<code>mouseEnabled</code>。</p>\n * <p>LayaAir引擎API设计精简巧妙。核心显示类只有一个<code>Sprite</code>。<code>Sprite</code>针对不同的情况做了渲染优化，所以保证一个类实现丰富功能的同时，又达到高性能。</p>\n *\n * @example <caption>创建了一个 <code>Sprite</code> 实例。</caption>\n * package\n * {\n * \timport laya.display.Sprite;\n * \timport laya.events.Event;\n *\n * \tpublic class Sprite_Example\n * \t{\n * \t\tprivate var sprite:Sprite;\n * \t\tprivate var shape:Sprite\n * \t\tpublic function Sprite_Example()\n * \t\t{\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * \t\t\tonInit();\n * \t\t}\n * \t\tprivate function onInit():void\n * \t\t{\n * \t\t\tsprite = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\n * \t\t\tsprite.loadImage(\"resource/ui/bg.png\");//加载并显示图片。\n * \t\t\tsprite.x = 200;//设置 sprite 对象相对于父容器的水平方向坐标值。\n * \t\t\tsprite.y = 200;//设置 sprite 对象相对于父容器的垂直方向坐标值。\n * \t\t\tsprite.pivotX = 0;//设置 sprite 对象的水平方法轴心点坐标。\n * \t\t\tsprite.pivotY = 0;//设置 sprite 对象的垂直方法轴心点坐标。\n * \t\t\tLaya.stage.addChild(sprite);//将此 sprite 对象添加到显示列表。\n * \t\t\tsprite.on(Event.CLICK, this, onClickSprite);//给 sprite 对象添加点击事件侦听。\n\t\n * \t\t\tshape = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\n * \t\t\tshape.graphics.drawRect(0, 0, 100, 100, \"#ccff00\", \"#ff0000\", 2);//绘制一个有边框的填充矩形。\n * \t\t\tshape.x = 400;//设置 shape 对象相对于父容器的水平方向坐标值。\n * \t\t\tshape.y = 200;//设置 shape 对象相对于父容器的垂直方向坐标值。\n * \t\t\tshape.width = 100;//设置 shape 对象的宽度。\n * \t\t\tshape.height = 100;//设置 shape 对象的高度。\n * \t\t\tshape.pivotX = 50;//设置 shape 对象的水平方法轴心点坐标。\n * \t\t\tshape.pivotY = 50;//设置 shape 对象的垂直方法轴心点坐标。\n * \t\t\tLaya.stage.addChild(shape);//将此 shape 对象添加到显示列表。\n * \t\t\tshape.on(Event.CLICK, this, onClickShape);//给 shape 对象添加点击事件侦听。\n * \t\t}\n * \t\tprivate function onClickSprite():void\n * \t\t{\n * \t\t\ttrace(\"点击 sprite 对象。\");\n * \t\t\tsprite.rotation += 5;//旋转 sprite 对象。\n * \t\t}\n * \t\tprivate function onClickShape():void\n * \t\t{\n * \t\t\ttrace(\"点击 shape 对象。\");\n * \t\t\tshape.rotation += 5;//旋转 shape 对象。\n * \t\t}\n * \t}\n * }\n *\n * @example\n * var sprite;\n * var shape;\n * Sprite_Example();\n * function Sprite_Example()\n * {\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *     onInit();\n * }\n * function onInit()\n * {\n *     sprite = new laya.display.Sprite();//创建一个 Sprite 类的实例对象 sprite 。\n *     sprite.loadImage(\"resource/ui/bg.png\");//加载并显示图片。\n *     sprite.x = 200;//设置 sprite 对象相对于父容器的水平方向坐标值。\n *     sprite.y = 200;//设置 sprite 对象相对于父容器的垂直方向坐标值。\n *     sprite.pivotX = 0;//设置 sprite 对象的水平方法轴心点坐标。\n *     sprite.pivotY = 0;//设置 sprite 对象的垂直方法轴心点坐标。\n *     Laya.stage.addChild(sprite);//将此 sprite 对象添加到显示列表。\n *     sprite.on(Event.CLICK, this, onClickSprite);//给 sprite 对象添加点击事件侦听。\n\t\n *     shape = new laya.display.Sprite();//创建一个 Sprite 类的实例对象 sprite 。\n *     shape.graphics.drawRect(0, 0, 100, 100, \"#ccff00\", \"#ff0000\", 2);//绘制一个有边框的填充矩形。\n *     shape.x = 400;//设置 shape 对象相对于父容器的水平方向坐标值。\n *     shape.y = 200;//设置 shape 对象相对于父容器的垂直方向坐标值。\n *     shape.width = 100;//设置 shape 对象的宽度。\n *     shape.height = 100;//设置 shape 对象的高度。\n *     shape.pivotX = 50;//设置 shape 对象的水平方法轴心点坐标。\n *     shape.pivotY = 50;//设置 shape 对象的垂直方法轴心点坐标。\n *     Laya.stage.addChild(shape);//将此 shape 对象添加到显示列表。\n *     shape.on(laya.events.Event.CLICK, this, onClickShape);//给 shape 对象添加点击事件侦听。\n * }\n * function onClickSprite()\n * {\n *     console.log(\"点击 sprite 对象。\");\n *     sprite.rotation += 5;//旋转 sprite 对象。\n * }\n * function onClickShape()\n * {\n *     console.log(\"点击 shape 对象。\");\n *     shape.rotation += 5;//旋转 shape 对象。\n * }\n *\n * @example\n * import Sprite = laya.display.Sprite;\n * class Sprite_Example {\n *     private sprite: Sprite;\n *     private shape: Sprite\n *     public Sprite_Example() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         this.sprite = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\n *         this.sprite.loadImage(\"resource/ui/bg.png\");//加载并显示图片。\n *         this.sprite.x = 200;//设置 sprite 对象相对于父容器的水平方向坐标值。\n *         this.sprite.y = 200;//设置 sprite 对象相对于父容器的垂直方向坐标值。\n *         this.sprite.pivotX = 0;//设置 sprite 对象的水平方法轴心点坐标。\n *         this.sprite.pivotY = 0;//设置 sprite 对象的垂直方法轴心点坐标。\n *         Laya.stage.addChild(this.sprite);//将此 sprite 对象添加到显示列表。\n *         this.sprite.on(laya.events.Event.CLICK, this, this.onClickSprite);//给 sprite 对象添加点击事件侦听。\n\t\n *         this.shape = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\n *         this.shape.graphics.drawRect(0, 0, 100, 100, \"#ccff00\", \"#ff0000\", 2);//绘制一个有边框的填充矩形。\n *         this.shape.x = 400;//设置 shape 对象相对于父容器的水平方向坐标值。\n *         this.shape.y = 200;//设置 shape 对象相对于父容器的垂直方向坐标值。\n *         this.shape.width = 100;//设置 shape 对象的宽度。\n *         this.shape.height = 100;//设置 shape 对象的高度。\n *         this.shape.pivotX = 50;//设置 shape 对象的水平方法轴心点坐标。\n *         this.shape.pivotY = 50;//设置 shape 对象的垂直方法轴心点坐标。\n *         Laya.stage.addChild(this.shape);//将此 shape 对象添加到显示列表。\n *         this.shape.on(laya.events.Event.CLICK, this, this.onClickShape);//给 shape 对象添加点击事件侦听。\n *     }\n *     private onClickSprite(): void {\n *         console.log(\"点击 sprite 对象。\");\n *         this.sprite.rotation += 5;//旋转 sprite 对象。\n *     }\n *     private onClickShape(): void {\n *         console.log(\"点击 shape 对象。\");\n *         this.shape.rotation += 5;//旋转 shape 对象。\n *     }\n * }\n */\nexport class Sprite extends Node {\n    /**@internal */\n    _x: number = 0;\n    /**@internal */\n    _y: number = 0;\n    /**@internal */\n    _width: number = 0;\n    /**@internal */\n    _height: number = 0;\n    /**@internal */\n    _visible: boolean = true;\n    /**@internal 鼠标状态，0:auto,1:mouseEnabled=false,2:mouseEnabled=true。*/\n    _mouseState: number = 0;\n    /**@internal z排序，数值越大越靠前。*/\n    _zOrder: number = 0;\n    /**@internal */\n    _renderType: number = 0;\n    /**@internal */\n    _transform: Matrix | null = null;\n    /**@internal */\n    protected _tfChanged: boolean = false;\n    /**@internal */\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\n    /**@internal */\n    private _texture: Texture | null = null;\n\n    //以下变量为系统调用，请不要直接使用\n    /**@internal */\n    _style: SpriteStyle = SpriteStyle.EMPTY;\n    /**@internal */\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\n    /**@internal */\n    _boundStyle: BoundsStyle | null = null;\n    /**@internal */\n    _graphics: Graphics | null = null;\n\n    _ownGraphics: boolean = false;\n\n    /**\n     * <p>鼠标事件与此对象的碰撞检测是否可穿透。碰撞检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\n     * <p>穿透表示鼠标事件发生的位置处于本对象绘图区域内时，才算命中，而与对象宽高和值为Rectangle对象的hitArea属性无关。如果sprite.hitArea值是HitArea对象，表示显式声明了此对象的鼠标事件响应区域，而忽略对象的宽高、mouseThrough属性。</p>\n     * <p>影响对象鼠标事件响应区域的属性为：width、height、hitArea，优先级顺序为：hitArea(type:HitArea)>hitArea(type:Rectangle)>width/height。</p>\n     * @default false\t不可穿透，此对象的鼠标响应区域由width、height、hitArea属性决定。</p>\n     */\n    mouseThrough: boolean = false;\n    /**\n     * <p>指定是否自动计算宽高数据。默认值为 false 。</p>\n     * <p>Sprite宽高默认为0，并且不会随着绘制内容的变化而变化，如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取。设置为true，对性能有一定影响。</p>\n     */\n    autoSize: boolean = false;\n    /**\n     * <p>指定鼠标事件检测是优先检测自身，还是优先检测其子对象。鼠标事件检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\n     * <p>如果为false，优先检测子对象，当有子对象被命中时，中断检测，获得命中目标。如果未命中任何子对象，最后再检测此对象；如果为true，则优先检测本对象，如果本对象没有被命中，直接中断检测，表示没有命中目标；如果本对象被命中，则进一步递归检测其子对象，以确认最终的命中目标。</p>\n     * <p>合理使用本属性，能减少鼠标事件检测的节点，提高性能。可以设置为true的情况：开发者并不关心此节点的子节点的鼠标事件检测结果，也就是以此节点作为其子节点的鼠标事件检测依据。</p>\n     * <p>Stage对象和UI的View组件默认为true。</p>\n     * @default false\t优先检测此对象的子对象，当递归检测完所有子对象后，仍然没有找到目标对象，最后再检测此对象。\n     */\n    hitTestPrior: boolean = false;\n\n    /** 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置 **/\n    _skinBaseUrl: string;\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._style && this._style.recover();\n        this._cacheStyle && this._cacheStyle.recover();\n        this._boundStyle && this._boundStyle.recover();\n        this._transform && this._transform.recover();\n        this._style = null;\n        this._cacheStyle = null;\n        this._boundStyle = null;\n        this._transform = null;\n        this._graphics && this._ownGraphics && this._graphics.destroy();\n        this._graphics = null;\n        this.texture = null;\n    }\n\n    constructor() {\n        super();\n    }\n\n    get scene(): Scene {\n        return <Scene>this._scene;\n    }\n\n    /**根据zOrder进行重新排序。*/\n    updateZOrder(): void {\n        SpriteUtils.updateOrder(this._children) && this.repaint();\n    }\n\n    /**\n     * @internal\n     */\n    _getBoundsStyle(): BoundsStyle {\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\n        return this._boundStyle;\n    }\n\n    /**@internal */\n    _setCustomRender(): void {\n\n    }\n\n    /**\n     * 设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。\n     */\n    set customRenderEnable(b: boolean) {\n        if (b) {\n            this._renderType |= SpriteConst.CUSTOM;\n            this._setRenderType(this._renderType);\n            this._setCustomRender();\n        }\n    }\n\n    /**\n     * 指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有\"none\"，\"normal\"和\"bitmap\"三个值可选。\n     * 默认为\"none\"，不做任何缓存。\n     * 当值为\"normal\"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。\n     * 当值为\"bitmap\"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。\n     * webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。\n     * webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。\n     */\n    get cacheAs(): string {\n        return this._cacheStyle.userSetCache;\n    }\n\n    /**@internal */\n    _setCacheAs(value: string): void {\n        //_dataf32[SpriteConst.POSCACHE] = value == \"bitmap\"?2:(value == \"normal\"?1:0);\n    }\n\n    set cacheAs(value: string) {\n        if (value === this._cacheStyle.userSetCache) return;\n\n        this._getCacheStyle().userSetCache = value;\n\n        if (this.mask && value === 'normal') return;\n        this._setCacheAs(value);\n        this._checkCanvasEnable();\n        this.repaint();\n    }\n\n    /**\n     * 更新_cnavas相关的状态\n     */\n    private _checkCanvasEnable(): void {\n        var tEnable: boolean = this._cacheStyle.needEnableCanvasRender();\n        this._getCacheStyle().enableCanvasRender = tEnable;\n        if (tEnable) {\n            if (this._cacheStyle.needBitmapCache()) {\n                this._cacheStyle.cacheAs = \"bitmap\";\n            } else {\n                this._cacheStyle.cacheAs = this._cacheStyle.userSetCache;\n            }\n            this._cacheStyle.reCache = true;\n            this._renderType |= SpriteConst.CANVAS;\n        } else {\n            this._cacheStyle.cacheAs = \"none\";\n            this._cacheStyle.releaseContext();\n            this._renderType &= ~SpriteConst.CANVAS;\n        }\n        this._setCacheAs(this._cacheStyle.cacheAs);\n        this._setRenderType(this._renderType);\n    }\n\n    /**设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。*/\n    get staticCache(): boolean {\n        return this._cacheStyle.staticCache;\n    }\n\n    set staticCache(value: boolean) {\n        this._getCacheStyle().staticCache = value;\n        if (!value) this.reCache();\n    }\n\n    /**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/\n    reCache(): void {\n        this._cacheStyle.reCache = true;\n        this._repaint |= SpriteConst.REPAINT_CACHE;\n    }\n\n    getRepaint(): number {\n        return this._repaint;\n    }\n\n    /**@internal */\n    _setX(value: number): void {\n        this._x = value;\n    }\n\n    /**@internal */\n    _setY(value: number): void {\n        this._y = value;\n    }\n\n    /**@internal */\n    _setWidth(texture: Texture, value: number): void {\n    }\n\n    /**@internal */\n    _setHeight(texture: Texture, value: number): void {\n    }\n\n    /**表示显示对象相对于父容器的水平方向坐标值。*/\n    get x(): number {\n        return this._x;\n    }\n\n    set x(value: number) {\n        if (this._destroyed) return;\n        if (this._x !== value) {\n            this._setX(value);\n            //_setTranformChange();\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\n            var p: Sprite = this._cacheStyle.maskParent;\n            if (p) {\n                p.repaint(SpriteConst.REPAINT_CACHE);\n            }\n        }\n    }\n\n    /**表示显示对象相对于父容器的垂直方向坐标值。*/\n    get y(): number {\n        return this._y;\n    }\n\n    set y(value: number) {\n        if (this._destroyed) return;\n        if (this._y !== value) {\n            this._setY(value);\n            //_setTranformChange();\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\n            var p: Sprite = this._cacheStyle.maskParent;\n            if (p) {\n                p.repaint(SpriteConst.REPAINT_CACHE);\n            }\n        }\n    }\n\n    /**\n     * <p>显示对象的宽度，单位为像素，默认为0。</p>\n     * <p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\n     * <p>可以通过getbounds获取显示对象图像的实际宽度。</p>\n     */\n    get width(): number {\n        return this.get_width();\n    }\n\n    set width(value: number) {\n        this.set_width(value);\n    }\n\n    // for ts\n    set_width(value: number): void {\n        if (this._width !== value) {\n            this._width = 0 == value ? 0.0000001 : value;\n            this._setWidth(this.texture, value);\n            this._setTranformChange();\n            //repaint();\n        }\n    }\n    get_width(): number {\n        if (!this.autoSize) return 0.0000001 == this._width ? 0 : (this._width ? this._width : (this.texture ? this.texture.width : 0));\n        if (this.texture) return this.texture.width;\n        if (!this._graphics && this._children.length === 0) return 0;\n        return this.getSelfBounds().width;\n    }\n\n    /**\n     * <p>显示对象的高度，单位为像素，默认为0。</p>\n     * <p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\n     * <p>可以通过getbounds获取显示对象图像的实际高度。</p>\n     */\n    get height(): number {\n        return this.get_height();\n    }\n\n    set height(value: number) {\n        this.set_height(value);\n    }\n\n    // for ts\n    set_height(value: number): void {\n        if (this._height !== value) {\n            this._height = 0 == value ? 0.0000001 : value;\n            this._setHeight(this.texture, value);\n            this._setTranformChange();\n            //repaint();\n        }\n    }\n    get_height(): number {\n        if (!this.autoSize) return 0.0000001 == this._height ? 0 : (this._height ? this._height : (this.texture ? this.texture.height : 0));\n        if (this.texture) return this.texture.height;\n        if (!this._graphics && this._children.length === 0) return 0;\n        return this.getSelfBounds().height;\n    }\n\n    /**\n     * <p>对象的显示宽度（以像素为单位）。</p>\n     */\n    get displayWidth(): number {\n        return this.width * this.scaleX;\n    }\n\n    /**\n     * <p>对象的显示高度（以像素为单位）。</p>\n     */\n    get displayHeight(): number {\n        return this.height * this.scaleY;\n    }\n\n    /**\n     * 设置对象bounds大小，如果有设置，则不再通过getBounds计算，合理使用能提高性能。\n     * @param\tbound bounds矩形区域\n     */\n    setSelfBounds(bound: Rectangle): void {\n        this._getBoundsStyle().userBounds = bound;\n    }\n\n    /**\n     * <p>获取本对象在父容器坐标系的矩形显示区域。</p>\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\n     * @return 矩形区域。\n     */\n    getBounds(): Rectangle {\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\n    }\n\n    /**\n     * 获取本对象在自己坐标系的矩形显示区域。\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\n     * @return 矩形区域。\n     */\n    getSelfBounds(): Rectangle {\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\n        if (!this._graphics && this._children.length === 0 && !this._texture)\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\n    }\n\n    /**\n     * @internal\n     * 获取本对象在父容器坐标系的显示区域多边形顶点列表。\n     * 当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。\n     * @param ifRotate\t（可选）之前的对象链中是否有旋转。\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\n     */\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\n        var pX: number = 0, pY: number = 0;\n        if (this._style) {\n            pX = this.pivotX;\n            pY = this.pivotY;\n            ifRotate = ifRotate || (this._style.rotation !== 0);\n            if (this._style.scrollRect) {\n                pX += this._style.scrollRect.x;\n                pY += this._style.scrollRect.y;\n            }\n        }\n        var pList: any[] = this._getBoundPointsM(ifRotate);\n        if (!pList || pList.length < 1) return pList;\n\n        if (pList.length != 8) {\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\n        }\n\n        if (!this.transform) {\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\n            return pList;\n        }\n        var tPoint: Point = Point.TEMP;\n        var i: number, len: number = pList.length;\n        for (i = 0; i < len; i += 2) {\n            tPoint.x = pList[i];\n            tPoint.y = pList[i + 1];\n            this.toParentPoint(tPoint);\n            pList[i] = tPoint.x;\n            pList[i + 1] = tPoint.y;\n        }\n        return pList;\n    }\n\n    /**\n     * 返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * @return 一个 Rectangle 对象，表示获取到的显示区域。\n     */\n    getGraphicBounds(realSize: boolean = false): Rectangle {\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\n        return this._graphics.getBounds(realSize);\n    }\n\n    /**\n     * @internal\n     * 获取自己坐标系的显示区域多边形顶点列表\n     * @param ifRotate\t（可选）当前的显示对象链是否由旋转\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\n     */\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\n        if (!this._boundStyle) this._getBoundsStyle();\n        let rst = this._boundStyle.temBM;\n        if (!rst) rst = this._boundStyle.temBM = [];\n        if (this._style.scrollRect) {\n            rst.length = 0;\n            var rec: Rectangle = Rectangle.TEMP;\n            rec.copyFrom(this._style.scrollRect);\n            rst.push(...rec._getBoundPoints());\n            return rst;\n        }\n        var pList: any[];\n        if (this._graphics) {\n            pList = this._graphics.getBoundPoints();\n        } else {\n            rst.length = 0;\n            pList = rst;\n        }\n        if (this._texture) {\n            rec = Rectangle.TEMP;\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\n            pList.push(...rec._getBoundPoints());\n        }\n        //处理子对象区域\n        let child: Sprite;\n        let cList: any[];\n        let __childs: any[];\n        __childs = this._children;\n        for (let i: number = 0, n: number = __childs.length; i < n; i++) {\n            //child = getChildAt(i) as Sprite; \n            child = __childs[i];\n            if (child instanceof Sprite && child._visible === true) {\n                cList = child._boundPointsToParent(ifRotate);\n                if (cList) {\n                    if (pList)\n                        pList.push(...cList);\n                    else\n                        pList = cList;\n                }\n            }\n        }\n        return pList;\n    }\n\n    /**\n     * @internal\n     * 获取cache数据。\n     * @return  cache数据 CacheStyle 。\n     */\n    _getCacheStyle(): CacheStyle {\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\n        return this._cacheStyle;\n    }\n\n    /**\n     * @private\n     * 获取样式。\n     * @return  样式 Style 。\n     */\n    getStyle(): SpriteStyle {\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\n        return this._style;\n    }\n\n    /**\n     * @private\n     * 设置样式。\n     * @param\tvalue 样式。\n     */\n    setStyle(value: SpriteStyle): void {\n        this._style = value;\n    }\n\n    /**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/\n    get scaleX(): number {\n        return this._style.scaleX;\n    }\n\n    set scaleX(value: number) {\n        this.set_scaleX(value);\n    }\n\n    /**@internal */\n    _setScaleX(value: number): void {\n        this._style.scaleX = value;\n    }\n\n    /**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/\n    get scaleY(): number {\n        return this._style.scaleY;\n    }\n\n    set scaleY(value: number) {\n        this.set_scaleY(value);\n    }\n\n    /**@internal */\n    _setScaleY(value: number): void {\n        this._style.scaleY = value;\n    }\n\n\n    set_scaleX(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        if (style.scaleX !== value) {\n            this._setScaleX(value);\n            this._setTranformChange();\n        }\n    }\n    get_scaleX(): number {\n        return this._style.scaleX;\n    }\n\n    set_scaleY(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        if (style.scaleY !== value) {\n            this._setScaleY(value);\n            this._setTranformChange();\n        }\n    }\n    get_scaleY(): number {\n        return this._style.scaleY;\n    }\n\n    /**旋转角度，默认值为0。以角度为单位。*/\n    get rotation(): number {\n        return this._style.rotation;\n    }\n\n    set rotation(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.rotation !== value) {\n            this._setRotation(value);\n            this._setTranformChange();\n        }\n    }\n\n    /**@internal */\n    _setRotation(value: number): void {\n        this._style.rotation = value;\n    }\n\n    /**水平倾斜角度，默认值为0。以角度为单位。*/\n    get skewX(): number {\n        return this._style.skewX;\n    }\n\n    set skewX(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.skewX !== value) {\n            this._setSkewX(value);\n            this._setTranformChange();\n        }\n    }\n\n    /**@internal */\n    _setSkewX(value: number): void {\n        this._style.skewX = value;\n    }\n\n    /**垂直倾斜角度，默认值为0。以角度为单位。*/\n    get skewY(): number {\n        return this._style.skewY;\n    }\n\n    set skewY(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.skewY !== value) {\n            this._setSkewY(value);\n            this._setTranformChange();\n        }\n    }\n\n    /**@internal */\n    _setSkewY(value: number): void {\n        this._style.skewY = value;\n    }\n\n    /**@internal */\n    _createTransform(): Matrix {\n        return Matrix.create();\n    }\n\n    /**@private */\n    protected _adjustTransform(): Matrix {\n        this._tfChanged = false;\n        var style: SpriteStyle = this._style;\n        var sx: number = style.scaleX, sy: number = style.scaleY;\n        var sskx: number = style.skewX;\n        var ssky: number = style.skewY;\n        var rot: number = style.rotation;\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\n            m._bTransform = true;\n            var skx: number = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\n            var sky: number = (rot + ssky) * 0.0174532922222222;\n            var cx: number = Math.cos(sky);\n            var ssx: number = Math.sin(sky);\n            var cy: number = Math.sin(skx);\n            var ssy: number = Math.cos(skx);\n            m.a = sx * cx;\n            m.b = sx * ssx;\n            m.c = -sy * cy;\n            m.d = sy * ssy;\n            m.tx = m.ty = 0;\n        } else {\n            m.identity();\n            this._renderType &= ~SpriteConst.TRANSFORM;\n            this._setRenderType(this._renderType);\n        }\n        return m;\n    }\n\n    /**@internal */\n    _setTransform(value: Matrix): void {\n\n    }\n\n    /**\n     * <p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>\n     * <p>矩阵更多信息请参考 <code>Matrix</code></p>\n     */\n    get transform(): Matrix {\n        return this._tfChanged ? this._adjustTransform() : this._transform;\n    }\n\n    set transform(value: Matrix) {\n        this.set_transform(value);\n    }\n\n    get_transform(): Matrix {\n        return this._tfChanged ? this._adjustTransform() : this._transform;\n    }\n\n    set_transform(value: Matrix): void {\n        this._tfChanged = false;\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\n        value.copyTo(m);\n        this._setTransform(m);\n        //设置transform时重置x,y\n        if (value) {\n            this._x = m.tx;\n            this._y = m.ty;\n            m.tx = m.ty = 0;\n        }\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\n        else {\n            this._renderType &= ~SpriteConst.TRANSFORM;\n        }\n        this._setRenderType(this._renderType);\n        this.parentRepaint();\n    }\n\n    /**@internal */\n    _setPivotX(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        style.pivotX = value;\n    }\n\n    /**@internal */\n    _getPivotX(): number {\n        return this._style.pivotX;\n    }\n\n    /**@internal */\n    _setPivotY(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        style.pivotY = value;\n    }\n\n    /**@internal */\n    _getPivotY(): number {\n        return this._style.pivotY;\n    }\n\n    /**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\n    get pivotX(): number {\n        return this._getPivotX();\n    }\n\n    set pivotX(value: number) {\n        this._setPivotX(value);\n        this.repaint();\n    }\n\n    /**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\n    get pivotY(): number {\n        return this._getPivotY();\n    }\n\n    set pivotY(value: number) {\n        this._setPivotY(value);\n        this.repaint();\n    }\n\n    /**@internal */\n    _setAlpha(value: number): void {\n        if (this._style.alpha !== value) {\n            var style: SpriteStyle = this.getStyle();\n            style.alpha = value;\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\n            else this._renderType &= ~SpriteConst.ALPHA;\n            this._setRenderType(this._renderType);\n            this.parentRepaint();\n        }\n    }\n\n    /**@internal */\n    _getAlpha(): number {\n        return this._style.alpha;\n    }\n\n    /**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/\n    get alpha(): number {\n        return this._getAlpha();\n    }\n\n    set alpha(value: number) {\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\n        this._setAlpha(value);\n    }\n\n    /**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/\n    get visible(): boolean {\n        return this.get_visible();\n    }\n\n    set visible(value: boolean) {\n        this.set_visible(value);\n    }\n\n    get_visible(): boolean {\n        return this._visible;\n    }\n\n    set_visible(value: boolean): void {\n        if (this._visible !== value) {\n            this._visible = value;\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\n        }\n    }\n\n    /**@internal */\n    _setBlendMode(value: string): void {\n\n    }\n\n    /**指定要使用的混合模式。目前只支持\"lighter\"。*/\n    get blendMode(): string {\n        return this._style.blendMode;\n    }\n\n    set blendMode(value: string) {\n        this._setBlendMode(value);\n        this.getStyle().blendMode = value;\n        if (value && value != \"source-over\") this._renderType |= SpriteConst.BLEND;\n        else this._renderType &= ~SpriteConst.BLEND;\n        this._setRenderType(this._renderType);\n        this.parentRepaint();\n    }\n\n    /**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/\n    get graphics(): Graphics {\n        if (!this._graphics) {\n            this.graphics = new Graphics();\n            this._ownGraphics = true;\n        }\n        return this._graphics;\n    }\n\n    /**@internal */\n    _setGraphics(value: Graphics): void {\n    }\n\n    set graphics(value: Graphics) {\n        if (this._graphics) this._graphics._sp = null;\n        this._graphics = value;\n        if (value) {\n            this._setGraphics(value);\n            this._renderType |= SpriteConst.GRAPHICS;\n            value._sp = this;\n        } else {\n            this._renderType &= ~SpriteConst.GRAPHICS;\n        }\n        this._setRenderType(this._renderType);\n        this.repaint();\n    }\n\n    /**\n     * <p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)</p>\n     * <p> srollRect和viewport的区别：<br/>\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\n     */\n    get scrollRect(): Rectangle {\n        return this._style.scrollRect;\n    }\n\n    /**@internal */\n    _setScrollRect(value: Rectangle): void {\n\n    }\n\n    set scrollRect(value: Rectangle) {\n        this.getStyle().scrollRect = value;\n        this._setScrollRect(value);\n        //viewport = value;\n        if (value) {\n            this._renderType |= SpriteConst.CLIP;\n        } else {\n            this._renderType &= ~SpriteConst.CLIP;\n        }\n        this._setRenderType(this._renderType);\n        this.repaint();\n    }\n\n    /**\n     * <p>设置坐标位置。相当于分别设置x和y属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>\n     * @param\tx\t\t\tX轴坐标。\n     * @param\ty\t\t\tY轴坐标。\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。\n     * @return\t返回对象本身。\n     */\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\n        if (this._x !== x || this._y !== y) {\n            if (this._destroyed) return this;\n            if (speedMode) {\n                this._setX(x);\n                this._setY(y);\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\n                var p: Sprite = this._cacheStyle.maskParent;\n                if (p) {\n                    p.repaint(SpriteConst.REPAINT_CACHE);\n                }\n            } else {\n                this.x = x;\n                this.y = y;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * <p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);</p>\n     * @param\tx X轴心点。\n     * @param\ty Y轴心点。\n     * @return\t返回对象本身。\n     */\n    pivot(x: number, y: number): Sprite {\n        this.pivotX = x;\n        this.pivotY = y;\n        return this;\n    }\n\n    /**\n     * <p>设置宽高。相当于分别设置width和height属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);</p>\n     * @param\twidth 宽度值。\n     * @param\thegiht 高度值。\n     * @return\t返回对象本身。\n     */\n    size(width: number, height: number): Sprite {\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n\n    /**\n     * <p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);</p>\n     * @param\tscaleX\t\tX轴缩放比例。\n     * @param\tscaleY\t\tY轴缩放比例。\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。\n     * @return\t返回对象本身。\n     */\n    scale(scaleX: number, scaleY: number, speedMode: boolean = false): Sprite {\n        var style: SpriteStyle = this.getStyle();\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\n            if (this._destroyed) return this;\n            if (speedMode) {\n                this._setScaleX(scaleX);\n                this._setScaleY(scaleY);\n                this._setTranformChange();\n            } else {\n                this.scaleX = scaleX;\n                this.scaleY = scaleY;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * <p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);</p>\n     * @param\tskewX 水平倾斜角度。\n     * @param\tskewY 垂直倾斜角度。\n     * @return\t返回对象本身\n     */\n    skew(skewX: number, skewY: number): Sprite {\n        this.skewX = skewX;\n        this.skewY = skewY;\n        return this;\n    }\n\n    /**\n     * 更新、呈现显示对象。由系统调用。\n     * @param\tcontext 渲染的上下文引用。\n     * @param\tx X轴坐标。\n     * @param\ty Y轴坐标。\n     */\n    render(ctx: Context, x: number, y: number): void {\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\n        /*\n        var rt:int = _renderType;\n        var style:SpriteStyle = _style;\n        var oldAlpha:Number = ctx.globalAlpha;\n        var save:Boolean = false;\n        if (rt & SpriteConst.TRANSFORM ) {\n            ctx.save();\n            save = true;\n            ctx.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x+_x, transform.ty + y+_y);\n        }\n    \t\n        if ( rt & SpriteConst.ALPHA) {\n            var alpha:Number = style.alpha;\n            if (alpha > 0.01 || _needRepaint()) {\n                //var temp:Number = context.globalAlpha;\n                ctx.globalAlpha *= alpha;\n                //context.globalAlpha = temp;\n            }\t\t\t\t\n        }\n    \t\n        if ( rt & SpriteConst.TEXTURE ) {\n            var tex:Texture = texture;\n            ctx.drawTexture(tex, x-pivotX+_x, y-pivotY+_y, tex.width, tex.height);\n        }\n    \t\n        if ( rt & SpriteConst.GRAPHICS) {\n            _graphics && _graphics._render(this, ctx, x-pivotX+_x, y-pivotY+_y);\n        }\n    \t\n        if (_children.length) {\n            _children.forEach(function(c:Sprite) {\n                c._visible && c.render(ctx, x - pivotX+_x, y - pivotY+_y);\n            } );\n        }\n        ctx.globalAlpha = oldAlpha;//TODO 可能慢\n        if (save) {\n            ctx.restore();\n        }\n        */\n        this._repaint = 0;\n    }\n\n    /**\n     * <p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>\n     * <p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>\n     *\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\n     * var sp:Sprite = new Sprite();//创建精灵\n     * sp.graphics.drawTexture(htmlCanvas.getTexture());//把截图绘制到精灵上\n     * Laya.stage.addChild(sp);//把精灵显示到舞台\n     *\n     * <p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>\n     *\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\n     * htmlCanvas.toBase64(\"image/png\",0.9);//打印图片base64信息，可以发给服务器或者保存为图片\n     *\n     * @param\tcanvasWidth 画布宽度。\n     * @param\tcanvasHeight 画布高度。\n     * @param\tx 绘制的 X 轴偏移量。\n     * @param\ty 绘制的 Y 轴偏移量。\n     * @return  HTMLCanvas 对象。\n     */\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\n        return Sprite.drawToCanvas(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY);\n    }\n\n    /**\n     * 绘制到一个Texture对象\n     * @param canvasWidth \n     * @param canvasHeight \n     * @param offsetX \n     * @param offsetY \n     */\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null, invertY: boolean = false): Texture | RenderTexture2D {\n        RenderState2D.InvertY = invertY;\n        let res = Sprite.drawToTexture(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY, rt);\n        RenderState2D.InvertY = false;\n        return res;\n    }\n\n    /**\n     * 把当前对象渲染到指定的贴图上。贴图由外部指定，避免每次都创建。\n     * @param offx \n     * @param offy \n     * @param tex 输出渲染结果\n     */\n    drawToTexture3D(offx: number, offy: number, tex: Texture2D) {\n        throw 'not implement'\n    }\n\n\n    /**\n     * @private\n     * 绘制到画布。\n     */\n    static drawToCanvas(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\n        offsetX -= sprite.x;\n        offsetY -= sprite.y;\n        offsetX |= 0;\n        offsetY |= 0;\n        canvasWidth |= 0;\n        canvasHeight |= 0;\n        var ctx: Context = new Context();\n        ctx.size(canvasWidth, canvasHeight);\n        ctx.asBitmap = true;\n        ctx._targets.start();\n        ctx._targets.clear(0, 0, 0, 0);\n        RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\n        ctx.flush();\n        ctx._targets.end();\n        ctx._targets.restore();\n        var dt: Uint8Array = ctx._targets.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\n        ctx.destroy();\n        var imgdata: any = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\n        //翻转getData的结果。\n        var lineLen: number = canvasWidth * 4;\n        var temp: Uint8Array = new Uint8Array(lineLen);\n        var dst: Uint8Array = imgdata.data;\n        var y: number = canvasHeight - 1;\n        var off: number = y * lineLen;\n        var srcoff: number = 0;\n        for (; y >= 0; y--) {\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\n            off -= lineLen;\n            srcoff += lineLen;\n        }\n        //imgdata.data.set(dt);\n        //画到2d画布上\n        var canv: HTMLCanvas = new HTMLCanvas(true);\n        canv.size(canvasWidth, canvasHeight);\n        var ctx2d: CanvasRenderingContext2D = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\n        ctx2d.putImageData(imgdata, 0, 0);;\n        return canv;\n    }\n\n    static drawtocanvCtx: Context;\n    /**\n     * @private \n     * \n     */\n    static drawToTexture(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\n        if (!Sprite.drawtocanvCtx) {\n            Sprite.drawtocanvCtx = new Context();\n        }\n        offsetX -= sprite.x;\n        offsetY -= sprite.y;\n        offsetX |= 0;\n        offsetY |= 0;\n        canvasWidth |= 0;\n        canvasHeight |= 0;\n        var ctx = rt ? Sprite.drawtocanvCtx : new Context();\n        ctx.clear();\n        ctx.size(canvasWidth, canvasHeight);\n        if (rt) {\n            ctx._targets = rt;\n        } else {\n            ctx.asBitmap = true;\n        }\n        if (ctx._targets) {\n            ctx._targets.start();\n            let color = RenderTexture2D._clearColor;\n            ctx._targets.clear(color.r, color.g, color.b, color.a);\n            ctx._drawingToTexture = true;\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\n            ctx._drawingToTexture = false;\n            ctx.flush();\n            ctx._targets.end();\n            ctx._targets.restore();\n            ctx._targets = null;//IDE闪\n        }\n        if (!rt) {\n            var rtex: Texture = new Texture(((<Texture2D>(ctx._targets as any))), Texture.INV_UV);\n            ctx.destroy(true);// 保留 _targets\n            return rtex;\n        }\n        sprite._repaint = 0;\n        return rt;\n    }\n\n    /**\n     * <p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>\n     * <p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>\n     * @param\tcontext  渲染的上下文引用。\n     * @param\tx X轴坐标。\n     * @param\ty Y轴坐标。\n     */\n    customRender(context: Context, x: number, y: number): void {\n        //_renderType |= SpriteConst.CUSTOM;\n        //_setRenderType(_renderType);\n        this._repaint = SpriteConst.REPAINT_ALL;\n    }\n\n    /**\n     * @internal\n     * 应用滤镜。\n     */\n    _applyFilters(): void {\n        // canvas 模式不支持\n    }\n\n    /**滤镜集合。可以设置多个滤镜组合。*/\n    get filters(): any[] {\n        return this._cacheStyle.filters;\n    }\n\n    set filters(value: any[]) {\n        value && value.length === 0 && (value = null);\n        this._getCacheStyle().filters = value ? value.slice() : null;\n        if (value)\n            this._renderType |= SpriteConst.FILTERS;\n        else\n            this._renderType &= ~SpriteConst.FILTERS;\n        this._setRenderType(this._renderType);\n\n        if (value && value.length > 0) {\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\n            if (!(value.length == 1 && (value[0] instanceof ColorFilter))) {\n                this._getCacheStyle().cacheForFilters = true;\n                this._checkCanvasEnable();\n            }\n        } else {\n            if (this._cacheStyle.cacheForFilters) {\n                this._cacheStyle.cacheForFilters = false;\n                this._checkCanvasEnable();\n            }\n        }\n        this._getCacheStyle().hasGlowFilter = this._isHaveGlowFilter();\n        this.repaint();\n    }\n\n    /**\n     * @internal\n     * 查看当前原件中是否包含发光滤镜。\n     * @return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。\n     */\n    _isHaveGlowFilter(): boolean {\n        var i: number, len: number;\n        if (this.filters) {\n            for (i = 0; i < this.filters.length; i++) {\n                if (this.filters[i].type == Filter.GLOW) {\n                    return true;\n                }\n            }\n        }\n        for (i = 0, len = this._children.length; i < len; i++) {\n            if ((<Sprite>this._children[i])._isHaveGlowFilter()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 把本地坐标转换为相对stage的全局坐标。\n     * @param point\t\t\t\t本地坐标点。\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\n     * @return 转换后的坐标的点。\n     */\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\n        //if (!_displayedInStage || !point) return point;\n        if (createNewPoint === true) {\n            point = new Point(point.x, point.y);\n        }\n        var ele: Sprite = this;\n        globalNode = globalNode || ILaya.stage;\n        while (ele && !ele._destroyed) {\n            if (ele == globalNode) break;\n            point = ele.toParentPoint(point);\n            ele = (<Sprite>ele.parent);\n        }\n\n        return point;\n    }\n\n    /**\n     * 把stage的全局坐标转换为本地坐标。\n     * @param point\t\t\t\t全局坐标点。\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\n     * @return 转换后的坐标的点。\n     */\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\n        //if (!_displayedInStage || !point) return point;\n        if (createNewPoint) {\n            point = new Point(point.x, point.y);\n        }\n        var ele: Sprite = this;\n        var list: any[] = [];\n        globalNode = globalNode || ILaya.stage;\n        while (ele && !ele._destroyed) {\n            if (ele == globalNode) break;\n            list.push(ele);\n            ele = (<Sprite>ele.parent);\n        }\n        var i: number = list.length - 1;\n        while (i >= 0) {\n            ele = list[i];\n            point = ele.fromParentPoint(point);\n            i--;\n        }\n        return point;\n    }\n\n    /**\n     * 将本地坐标系坐标转转换到父容器坐标系。\n     * @param point 本地坐标点。\n     * @return  转换后的点。\n     */\n    toParentPoint(point: Point): Point {\n        if (!point) return point;\n        point.x -= this.pivotX;\n        point.y -= this.pivotY;\n        if (this.transform) {\n            this._transform.transformPoint(point);\n        }\n        point.x += this._x;\n        point.y += this._y;\n        var scroll: Rectangle = this._style.scrollRect;\n        if (scroll) {\n            point.x -= scroll.x;\n            point.y -= scroll.y;\n        }\n        return point;\n    }\n\n    /**\n     * 将父容器坐标系坐标转换到本地坐标系。\n     * @param point 父容器坐标点。\n     * @return  转换后的点。\n     */\n    fromParentPoint(point: Point): Point {\n        if (!point) return point;\n        point.x -= this._x;\n        point.y -= this._y;\n        var scroll: Rectangle = this._style.scrollRect;\n        if (scroll) {\n            point.x += scroll.x;\n            point.y += scroll.y;\n        }\n        if (this.transform) {\n            //_transform.setTranslate(0,0);\n            this._transform.invertTransformPoint(point);\n        }\n        point.x += this.pivotX;\n        point.y += this.pivotY;\n        return point;\n    }\n\n    protected onStartListeningToType(type: string) {\n        super.onStartListeningToType(type);\n\n        //如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\n            this.mouseEnabled = true;\n            this._setBit(NodeFlags.HAS_MOUSE, true);\n            if (this._parent) {\n                this._onDisplay();\n            }\n        }\n    }\n\n    /** @private */\n    protected _onDisplay(v?: boolean): void {\n        if (this._mouseState !== 1) {\n            var ele: Sprite = this;\n            ele = (<Sprite>ele.parent);\n            while (ele && ele._mouseState !== 1) {\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\n                ele.mouseEnabled = true;\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\n                ele = (<Sprite>ele.parent);\n            }\n        }\n    }\n\n    /**@private \n     * @override\n    */\n    protected _setParent(value: Node): void {\n        super._setParent(value);\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\n            this._onDisplay();\n        }\n    }\n\n    /**\n     * <p>加载并显示一个图片。相当于加载图片后，设置texture属性</p>\n     * <p>注意：2.0改动：多次调用，只会显示一个图片（1.0会显示多个图片）,x,y,width,height参数取消。</p>\n     * @param url\t\t图片地址。\n     * @param complete\t（可选）加载完成回调。\n     * @return\t返回精灵对象本身。\n     */\n    loadImage(url: string, complete: Handler = null): Sprite {\n        if (!url) {\n            this.texture = null;\n            this.repaint(SpriteConst.REPAINT_ALL);\n            complete && complete.run();\n        } else {\n            let tex = ILaya.loader.getRes(url);\n            if (tex) {\n                this.texture = tex;\n                this.repaint(SpriteConst.REPAINT_ALL);\n                complete && complete.run();\n            }\n            else {\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n                ILaya.loader.load(url).then((tex: Texture) => {\n                    this.texture = tex;\n                    this.repaint(SpriteConst.REPAINT_ALL);\n                    complete && complete.run();\n                });\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * 根据图片地址创建一个新的 <code>Sprite</code> 对象用于加载并显示此图片。\n     * @param\turl 图片地址。\n     * @return\t返回新的 <code>Sprite</code> 对象。\n     */\n    static fromImage(url: string): Sprite {\n        return new Sprite().loadImage(url);\n    }\n\n    /**cacheAs后，设置自己和父对象缓存失效。*/\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\n        if (!(this._repaint & type)) {\n            this._repaint |= type;\n            this.parentRepaint(type);\n        }\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\n            this._cacheStyle.maskParent.repaint(type);\n        }\n    }\n\n\n    /**\n     * @internal\n     * 获取是否重新缓存。\n     * @return 如果重新缓存值为 true，否则值为 false。\n     */\n    _needRepaint(): boolean {\n        return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\n    }\n\n    /**@private\t\n     * @override\n    */\n    protected _childChanged(child: Node = null): void {\n        super._childChanged(child);\n\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\n        else this._renderType &= ~SpriteConst.CHILDS;\n        this._setRenderType(this._renderType);\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\n        this.repaint(SpriteConst.REPAINT_ALL);\n    }\n\n    /**cacheAs时，设置所有父对象缓存失效。 */\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\n        var p: Sprite = (<Sprite>this._parent);\n        if (p && !(p._repaint & type)) {\n            p._repaint |= type;\n            p.parentRepaint(type);\n        }\n    }\n\n    /**对舞台 <code>stage</code> 的引用。*/\n    get stage(): Stage {\n        return ILaya.stage;\n    }\n\n    /**\n     * <p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>\n     * <p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>\n     */\n    get hitArea(): any {\n        return this._style.hitArea;\n    }\n\n    set hitArea(value: any) {\n        this.getStyle().hitArea = value;\n    }\n\n    /**@internal */\n    _setMask(value: Sprite): void {\n\n    }\n\n    /**\n     * <p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>\n     * <p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>\n     */\n    get mask(): Sprite {\n        return this._cacheStyle.mask;\n    }\n\n    set mask(value: Sprite) {\n        if (value && this.mask == value && value._cacheStyle.maskParent == this)\n            return;\n\n        if (this.mask)\n            this.mask._getCacheStyle().maskParent = null;\n\n        this._getCacheStyle().mask = value;\n        this._setMask(value);\n        this._checkCanvasEnable();\n\n        if (value) {\n            value._getCacheStyle().maskParent = this;\n            this._renderType |= SpriteConst.MASK;\n        }\n        else\n            this._renderType &= ~SpriteConst.MASK;\n\n        this._setRenderType(this._renderType);\n        this.repaint();\n    }\n\n    /**\n     * 是否接受鼠标事件。\n     * 默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。\n     * */\n    get mouseEnabled(): boolean {\n        return this._mouseState > 1;\n    }\n\n    set mouseEnabled(value: boolean) {\n        this._mouseState = value ? 2 : 1;\n    }\n\n    /**\n     * 开始拖动此对象。\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false，可选。\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。\n     * @param data\t\t\t\t（可选）拖动事件携带的数据，可选。\n     * @param disableMouseEvent\t（可选）禁用其他对象的鼠标检测，默认为false，设置为true能提高性能。\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\n     */\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\n    }\n\n    /**停止拖动此对象。*/\n    stopDrag(): void {\n        this._style.dragging && this._style.dragging.stop();\n    }\n\n    /**\n     * @internal \n     * @override\n    */\n    _setDisplay(value: boolean): void {\n        if (!value) {\n            if (this._cacheStyle) {\n                this._cacheStyle.releaseContext();\n                this._cacheStyle.releaseFilterCache();\n                if (this._cacheStyle.hasGlowFilter) {\n                    this._cacheStyle.hasGlowFilter = false;\n                }\n            }\n        }\n        super._setDisplay(value);\n    }\n\n    /**\n     * 检测某个点是否在此对象内。\n     * @param\tx 全局x坐标。\n     * @param\ty 全局y坐标。\n     * @return  表示是否在对象内。\n     */\n    hitTestPoint(x: number, y: number): boolean {\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\n        x = point.x;\n        y = point.y;\n        var rect: Rectangle = this._style.hitArea ? this._style.hitArea : (this._width > 0 && this._height > 0) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\n        return rect.contains(x, y);\n    }\n\n    /**获得相对于本对象上的鼠标坐标信息。*/\n    getMousePoint(): Point {\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\n    }\n\n    /**\n     * 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\n     */\n    get globalScaleX(): number {\n        var scale: number = 1;\n        var ele: Sprite = this;\n        while (ele) {\n            if (ele === ILaya.stage) break;\n            scale *= ele.scaleX;\n            ele = (<Sprite>ele.parent);\n        }\n        return scale;\n    }\n\n    /**\n     * 获得相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\n     */\n    get globalRotation(): number {\n        var angle: number = 0;\n        var ele: Sprite = this;\n        while (ele) {\n            if (ele === ILaya.stage) break;\n            angle += ele.rotation;\n            ele = (<Sprite>ele.parent);\n        }\n        return angle;\n    }\n\n    /**\n     * 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\n     */\n    get globalScaleY(): number {\n        var scale: number = 1;\n        var ele: Sprite = this;\n        while (ele) {\n            if (ele === ILaya.stage) break;\n            scale *= ele.scaleY;\n            ele = (<Sprite>ele.parent);\n        }\n        return scale;\n    }\n\n    /**\n     * 返回鼠标在此对象坐标系上的 X 轴坐标信息。\n     */\n    get mouseX(): number {\n        return this.getMousePoint().x;\n    }\n\n    /**\n     * 返回鼠标在此对象坐标系上的 Y 轴坐标信息。\n     */\n    get mouseY(): number {\n        return this.getMousePoint().y;\n    }\n\n    /**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/\n    get zOrder(): number {\n        return this._zOrder;\n    }\n\n    set zOrder(value: number) {\n        if (this._zOrder != value) {\n            this._zOrder = value;\n            if (this._parent) {\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\n            }\n        }\n    }\n\n    /**\n     * 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示\n     */\n    get texture(): Texture {\n        return this._texture;\n    }\n\n    /**@internal */\n    _setTexture(value: Texture | string): void {\n\n    }\n\n    set texture(value: Texture) {\n        if (typeof (value) == 'string') {\n            this.loadImage((<string>((<any>value))));\n        } else if (this._texture != value) {\n            this._texture && this._texture._removeReference();\n            this._texture = value;\n            value && value._addReference();\n            this._setTexture(value);\n            this._setWidth(this._texture, this.width);\n            this._setHeight(this._texture, this.height);\n            if (value) this._renderType |= SpriteConst.TEXTURE;\n            else this._renderType &= ~SpriteConst.TEXTURE;\n            this._setRenderType(this._renderType);\n            this.repaint();\n        }\n    }\n\n\n    /**\n     * <p>视口大小，视口外的子对象，将不被渲染(如果想实现裁剪效果，请使用srollRect)，合理使用能提高渲染性能。比如由一个个小图片拼成的地图块，viewport外面的小图片将不渲染</p>\n     * <p>srollRect和viewport的区别：<br/>\n     * 1. srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\n     * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\n     * @default null\n     */\n    get viewport(): Rectangle {\n        return this._style.viewport;\n    }\n\n    set viewport(value: Rectangle) {\n        if (typeof (value) == 'string') {\n            var recArr: any[];\n            recArr = ((<string>((<any>value)))).split(\",\");\n            if (recArr.length > 3) {\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\n            }\n        }\n        this.getStyle().viewport = value;\n    }\n\n    /**@internal */\n    _setRenderType(type: number): void {\n\n    }\n\n    /**@internal */\n    _setTranformChange(): void {\n        this._tfChanged = true;\n        this._renderType |= SpriteConst.TRANSFORM;\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\n    }\n\n    /**@internal */\n    _setBgStyleColor(x: number, y: number, width: number, height: number, fillColor: any): void {\n\n    }\n\n    /**@internal */\n    _setBorderStyleColor(x: number, y: number, width: number, height: number, fillColor: any, borderWidth: number): void {\n\n    }\n\n    set drawCallOptimize(value: boolean) {\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\n    }\n\n    get drawCallOptimize(): boolean {\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n\n        if (LayaEnv.isPlaying) {\n            if ((<any>this)._gcmds) {\n                this.graphics.cmds = (<any>this)._gcmds;\n                delete (<any>this)._gcmds;\n            }\n\n            if ((<any>this)._filters) {\n                this.filters = (<any>this)._filters;\n                delete (<any>this)._filters;\n            }\n        }\n    }\n}","import { Sprite } from \"./Sprite\";\nimport { Config } from \"./../../Config\";\nimport { NodeFlags } from \"../Const\"\nimport { Event } from \"../events/Event\"\n\n/**\n * 动画播放完毕后调度。\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n\n/**\n * 播放到某标签后调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n\n/**\n * <p>动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。</p>\n * <p>可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。</p>\n */\nexport class AnimationBase extends Sprite {\n    /**动画播放顺序类型：正序播放。 */\n    static WRAP_POSITIVE: number = 0;\n    /**动画播放顺序类型：逆序播放。 */\n    static WRAP_REVERSE: number = 1;\n    /**动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。 */\n    static WRAP_PINGPONG: number = 2;\n\n    /**是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。*/\n    loop: boolean;\n    /**播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。*/\n    wrapMode: number = 0;\n    /**@private 播放间隔(单位：毫秒)。*/\n    protected _interval: number = Config.animationInterval;\n    /**@private */\n    protected _index: number;\n    /**@private */\n    protected _count: number;\n    /**@private */\n    protected _isPlaying: boolean;\n    /**@private */\n    protected _labels: any;\n    /**是否是逆序播放*/\n    protected _isReverse: boolean = false;\n    /**@private */\n    protected _frameRateChanged: boolean = false;\n    /**@private */\n    protected _actionName: string;\n    /**@private */\n    private _controlNode: Sprite;\n\n    /**\n     * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\n     */\n    constructor() {\n        super();\n        this._setBitUp(NodeFlags.DISPLAY);\n    }\n\n    /**\n     * <p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\n     * @param\tloop\t（可选）是否循环播放。\n     * @param\tname\t（可选）动画名称。\n     */\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\n        this._isPlaying = true;\n        this._actionName = name;\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\n        this.loop = loop;\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\n        if (this.index == 0 && this._isReverse) {\n            this.index = this.count - 1;\n        }\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\n    }\n\n    /**\n     * <p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>\n     * <p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>\n     */\n    get interval(): number {\n        return this._interval;\n    }\n\n    set interval(value: number) {\n        if (this._interval != value) {\n            this._frameRateChanged = true;\n            this._interval = value;\n            if (this._isPlaying && value > 0) {\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\n            }\n        }\n    }\n\n    /**@private */\n    protected _getFrameByLabel(label: string): number {\n        for (var i: number = 0; i < this._count; i++) {\n            var item: any = this._labels[i];\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\n        }\n        return 0;\n    }\n\n    /**@private */\n    protected _frameLoop(): void {\n        if (!this._controlNode || this._controlNode._destroyed) {\n            this.clearTimer(this, this._frameLoop);\n            return;\n        }\n        if (this._isReverse) {\n            this._index--;\n            if (this._index < 0) {\n                if (this.loop) {\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\n                        this._index = this._count > 0 ? 1 : 0;\n                        this._isReverse = false;\n                    } else {\n                        this._index = this._count - 1;\n                    }\n                    this.event(Event.COMPLETE);\n                } else {\n                    this._index = 0;\n                    this.stop();\n                    this.event(Event.COMPLETE);\n                    return;\n                }\n            }\n        } else {\n            this._index++;\n            if (this._index >= this._count) {\n                if (this.loop) {\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\n                        this._isReverse = true;\n                    } else {\n                        this._index = 0;\n                    }\n                    this.event(Event.COMPLETE);\n                } else {\n                    this._index--;\n                    this.stop();\n                    this.event(Event.COMPLETE);\n                    return;\n                }\n            }\n        }\n        this.index = this._index;\n    }\n\n    /**@internal */\n    _setControlNode(node: Sprite): void {\n        if (this._controlNode) {\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\n        }\n        this._controlNode = node;\n        if (node && node != this) {\n            node.on(Event.DISPLAY, this, this._resumePlay);\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\n        }\n    }\n\n    /**@internal \n     * @override\n    */\n    _setDisplay(value: boolean): void {\n        super._setDisplay(value);\n        this._resumePlay();\n    }\n\n    /**@private */\n    protected _resumePlay(): void {\n        if (this._isPlaying) {\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\n            else this.clearTimer(this, this._frameLoop);\n        }\n    }\n\n    /**\n     * 停止动画播放。\n     */\n    stop(): void {\n        this._isPlaying = false;\n        this.clearTimer(this, this._frameLoop);\n    }\n\n    /**\n     * 是否正在播放中。\n     */\n    get isPlaying(): boolean {\n        return this._isPlaying;\n    }\n\n    /**\n     * 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\n     * @param\tlabel\t帧标签名称\n     * @param\tindex\t帧索引\n     */\n    addLabel(label: string, index: number): void {\n        if (!this._labels) this._labels = {};\n        if (!this._labels[index]) this._labels[index] = [];\n        this._labels[index].push(label);\n    }\n\n    /**\n     * 删除指定的帧标签。\n     * @param\tlabel 帧标签名称。注意：如果为空，则删除所有帧标签！\n     */\n    removeLabel(label: string): void {\n        if (!label) this._labels = null;\n        else if (this._labels) {\n            for (var name in this._labels) {\n                this._removeLabelFromList(this._labels[name], label);\n            }\n        }\n    }\n\n    /**@private */\n    private _removeLabelFromList(list: any[], label: string): void {\n        if (!list) return;\n        for (var i: number = list.length - 1; i >= 0; i--) {\n            if (list[i] == label) {\n                list.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * 将动画切换到指定帧并停在那里。\n     * @param\tposition 帧索引或帧标签\n     */\n    gotoAndStop(position: any): void {\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\n        this.stop();\n    }\n\n    /**\n     * 动画当前帧的索引。\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    set index(value: number) {\n        this._index = value;\n        this._displayToIndex(value);\n        if (this._labels && this._labels[value]) {\n            var tArr: any[] = this._labels[value];\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\n                this.event(Event.LABEL, tArr[i]);\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 显示到某帧\n     * @param value 帧索引\n     */\n    protected _displayToIndex(value: number): void {\n    }\n\n    /**\n     * 当前动画中帧的总数。\n     */\n    get count(): number {\n        return this._count;\n    }\n\n    /**\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\n     * @return 返回对象本身\n     */\n    clear(): AnimationBase {\n        this.stop();\n        this._labels = null;\n        return this;\n    }\n}","import { Handler } from \"../utils/Handler\";\nimport { ILaya } from \"./../../ILaya\";\nimport { URL } from \"./URL\";\n\n/**\n * @private\n */\nexport class AtlasInfoManager {\n\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\n\n    static enable(infoFile: string, callback: Handler | null = null): void {\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\n            if (!data)\n                return;\n\n            AtlasInfoManager.addToDict(data);\n            callback && callback.run();\n        });\n    }\n\n    static addToDict(data: any) {\n        for (let tKey in data) {\n            let tArr = data[tKey];\n            let tPrefix = URL.formatURL(tArr[0]);\n            tArr = tArr[1];\n            let len = tArr.length;\n            let entry = { url: tKey };\n            for (let i = 0; i < len; i++) {\n                AtlasInfoManager._fileLoadDic[tPrefix + tArr[i]] = entry;\n            }\n        }\n    }\n\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\n        return AtlasInfoManager._fileLoadDic[file];\n    }\n}\n\n\n","import { EventDispatcher } from \"../events/EventDispatcher\"\n\n/**\n * @private\n * Worker Image加载器\n */\nexport class WorkerLoader extends EventDispatcher {\n\n    /**单例*/\n    static I: WorkerLoader;\n    /**worker.js的路径 */\n    static workerPath: string = \"libs/workerloader.js\";\n\n    /**@private */\n    private static _enable: boolean = false;\n\n    /**使用的Worker对象。*/\n    worker: Worker;\n    /**@private */\n    protected _useWorkerLoader: boolean;\n\n    constructor() {\n        super();\n        this.worker = new Worker(WorkerLoader.workerPath);\n        this.worker.onmessage = (evt: any) => {\n            //接收worker传过来的数据函数\n            this.workerMessage(evt.data);\n        }\n    }\n\n    /**\n     * @internal\n     * 尝试使用Work加载Image\n     * @return 是否启动成功\n     */\n    static __init__() {\n        if (WorkerLoader.I) return;\n        if (!Worker) return;\n\n        WorkerLoader.I = new WorkerLoader();\n    }\n\n    /**\n     * 是否支持worker\n     * @return 是否支持worker\n     */\n    static workerSupported(): boolean {\n        return Worker ? true : false;\n    }\n\n    /**\n     * 尝试启用WorkerLoader,只有第一次调用有效\n     */\n    static enableWorkerLoader(): void {\n        WorkerLoader.enable = true;\n    }\n\n    /**\n     * 是否启用。\n     */\n    static set enable(value: boolean) {\n        if (WorkerLoader._enable != value) {\n            WorkerLoader._enable = value;\n            if (value) {\n                if (WorkerLoader.I == null)\n                    WorkerLoader.__init__();\n                if (WorkerLoader.I.worker == null)\n                    WorkerLoader._enable = false;\n            }\n        }\n    }\n\n    static get enable(): boolean {\n        return WorkerLoader._enable;\n    }\n\n    /**\n     * @private\n     */\n    private workerMessage(data: any): void {\n        if (data) {\n            switch (data.type) {\n                case \"Image\":\n                    this.imageLoaded(data);\n                    break;\n                case \"Disable\":\n                    WorkerLoader.enable = false;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * @private\n     */\n    private imageLoaded(data: any): void {\n        if (!data.dataType || data.dataType != \"imageBitmap\") {\n            this.event(data.url, null);\n            return;\n        }\n\n        var imageData: ImageBitmap = data.imageBitmap;\n        console.log(\"load:\", data.url);\n        this.event(data.url, imageData);\n    }\n}\n\n","import { Resource } from \"./Resource\";\nimport { Texture } from \"./Texture\";\n/**\n * 大图合集资源\n */\nexport class AtlasResource extends Resource {\n    readonly dir: string;\n    readonly textures: Array<Texture>;\n    readonly frames: Array<Texture>;\n\n    /**\n     * 实例化体格大图合集资源\n     * @param dir \n     * @param textures \n     * @param frames \n     */\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\n        super();\n\n        this.dir = dir;\n        this.textures = textures;\n        this.frames = frames;\n        this.lock = true;\n    }\n\n    /**\n     * @internal\n     */\n    protected _disposeResource(): void {\n        for (let tex of this.textures) {\n            if (tex)\n                tex.destroy();\n        }\n\n        for (let tex of this.frames)\n            tex.destroy();\n\n        this.frames.length = 0;\n        this.textures.length = 0;\n    }\n}","export type ProgressCallback = (progress: number) => void;\n\nexport interface IBatchProgress {\n    readonly itemCount: number;\n    createCallback(weight?: number): ProgressCallback;\n    update(index: number, progress: number): void;\n}\n\nexport class BatchProgress implements IBatchProgress {\n    private _callback: ProgressCallback;\n    private _items: Array<number>;\n    private _weights: Array<number>;\n    private _progress: number;\n\n    constructor(callback: ProgressCallback) {\n        this._callback = callback;\n        this._items = [];\n        this._weights = [];\n        this._progress = 0;\n    }\n\n    get itemCount() {\n        return this._items.length;\n    }\n\n    reset() {\n        this._items.length = 0;\n        this._weights.length = 0;\n        this._progress = 0;\n    }\n\n    createCallback(weight?: number): ProgressCallback {\n        let index = this._items.length;\n        this._items.push(0);\n        if (weight == null)\n            this._weights.push(null);\n        else\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\n\n        return (progress: number) => this.update(index, progress);\n    }\n\n    update(index: number, value: number) {\n        if (index != -1) {\n            this._items[index] = Math.max(0, Math.min(value, 1));\n\n            let np = 0;\n            let col = this._items;\n            let ws = this._weights;\n            let perc = 1 / col.length;\n            for (let i = 0; i < col.length; i++) {\n                let p = col[i];\n                let w = ws[i];\n                if (p != null)\n                    np += p * (w != null ? w : perc);\n            }\n            value = np;\n        }\n\n        if (value > this._progress) {\n            this._progress = value;\n            this._callback(value);\n        }\n    }\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n* 图片二进制处理类\r\n* @ author:xs\r\n* @ data: 2021-11-03 10:54\r\n*/\r\nexport class ImgUtils {\r\n\r\n    /**存储数据池*/\r\n    static data: any = {};\r\n    /**是否保存使用的数据*/\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否支持数据预处理\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser.onMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过二进制获取URL对象\r\n     * @param url \r\n     * @param arrayBuffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser.onMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser.onMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * 销毁指定URL的二进制内存数据\r\n     * @param url \r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser.onMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","import { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Utils } from \"../utils/Utils\"\nimport { Browser } from \"../utils/Browser\";\n\n/**\n * 请求进度改变时调度。\n * @eventType Event.PROGRESS\n * */\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\n/**\n * 请求结束后调度。\n * @eventType Event.COMPLETE\n * */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n/**\n * 请求出错时调度。\n * @eventType Event.ERROR\n * */\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\n */\nexport class HttpRequest extends EventDispatcher {\n    /**@private */\n    protected _http = new XMLHttpRequest();\n    /**@private */\n    private static _urlEncode: Function = encodeURI;\n    /**@private */\n    protected _responseType: string;\n    /**@private */\n    protected _data: any;\n    /**@private */\n    protected _url: string;\n\n    /**\n     * 发送 HTTP 请求。\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\n     * @param\tdata\t\t\t(default = null)发送的数据。\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\n     */\n    send(url: string, data: any = null,\n        method: \"get\" | \"post\" | \"head\" = \"get\",\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\n        headers: any[] | null = null): void {\n        this._responseType = responseType;\n        this._data = null;\n\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\n            url = HttpRequest._urlEncode(url);\n        }\n        this._url = url;\n\n        let http = this._http;\n        http.open(method, url, true);\n\n        if (headers) {\n            for (let i: number = 0; i < headers.length; i++) {\n                http.setRequestHeader(headers[i++], headers[i]);\n            }\n        }\n\n        if (data) {\n            if (typeof (data) == 'string') {\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            }\n            else {\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\n                if (!(data instanceof ArrayBuffer))\n                    data = JSON.stringify(data);\n            }\n        }\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\n            data = {};\n\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\n        http.responseType = restype;\n        if ((http as any).dataType) {//for Ali\n            (http as any).dataType = restype;\n        }\n        http.onerror = (e: any) => {\n            this._onError(e);\n        }\n        http.onabort = (e: any) => {\n            this._onAbort(e);\n        }\n        http.onprogress = (e: any) => {\n            this._onProgress(e);\n        }\n        http.onload = (e: any) => {\n            this._onLoad(e);\n        }\n\n        http.send(data);\n    }\n\n    /**\n     * @private\n     * 请求进度的侦听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onProgress(e: any): void {\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\n    }\n\n    /**\n     * @private\n     * 请求中断的侦听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onAbort(e: any): void {\n        this.error(\"Request was aborted by user\");\n    }\n\n    /**\n     * @private\n     * 请求出错侦的听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onError(e: any): void {\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\n    }\n\n    /**\n     * @private\n     * 请求消息返回的侦听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onLoad(e: any): void {\n        var http: any = this._http;\n        var status: number = http.status !== undefined ? http.status : 200;\n\n        if (status === 200 || status === 204 || status === 0) {\n            this.complete();\n        } else {\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\n        }\n    }\n\n    /**\n     * @private\n     * 请求错误的处理函数。\n     * @param\tmessage 错误信息。\n     */\n    protected error(message: string): void {\n        this.clear();\n        //console.warn(this.url, message);\n        this.event(Event.ERROR, message);\n    }\n\n    /**\n     * @private\n     * 请求成功完成的处理函数。\n     */\n    protected complete(): void {\n        this.clear();\n        var flag: boolean = true;\n        try {\n            if (this._responseType === \"json\") {\n                this._data = JSON.parse(this._http.responseText);\n            } else if (this._responseType === \"xml\") {\n                this._data = Utils.parseXMLFromString(this._http.responseText);\n            } else {\n                this._data = this._http.response || this._http.responseText;\n            }\n        } catch (e: any) {\n            flag = false;\n            this.error(e.message);\n        }\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\n    }\n\n    /**\n     * @private\n     * 清除当前请求。\n     */\n    protected clear(): void {\n        var http: any = this._http;\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\n    }\n\n    /** 请求的地址。*/\n    get url(): string {\n        return this._url;\n    }\n\n    /** 返回的数据。*/\n    get data(): any {\n        return this._data;\n    }\n\n    /**\n     * 本对象所封装的原生 XMLHttpRequest 引用。\n     */\n    get http(): any {\n        return this._http;\n    }\n\n    reset() {\n        this.offAll();\n        this._data = null;\n    }\n}\n\n","import { Event } from \"../events/Event\";\nimport { Browser } from \"../utils/Browser\";\nimport { ImgUtils } from \"../utils/ImgUtils\";\nimport { HttpRequest } from \"./HttpRequest\";\nimport { WorkerLoader } from \"./WorkerLoader\";\n\nexport class Downloader {\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        let http = this.getRequestInst();\n        http.on(Event.COMPLETE, () => {\n            let data = http.data;\n            this.returnRequestInst(http);\n\n            onComplete(data);\n        });\n        http.on(Event.ERROR, null, (error: string) => {\n            this.returnRequestInst(http);\n\n            onComplete(null, error);\n        });\n        if (onProgress)\n            http.on(Event.PROGRESS, onProgress);\n        http.send(url, null, \"get\", <any>contentType);\n        owner.$ref = http; //保持引用避免gc掉\n    }\n\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        let image: HTMLImageElement = new Browser.window.Image();\n        image.crossOrigin = \"\";\n        image.onload = () => {\n            image.onload = null;\n            image.onerror = null;\n            onComplete(image);\n        };\n        image.onerror = () => {\n            image.onload = null;\n            image.onerror = null;\n            onComplete(null, \"\");\n        };\n        image.src = url;\n        owner.$ref = image; //保持引用避免gc掉\n    }\n\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\n        this.image(owner, url, originalUrl, onProgress, onComplete);\n    }\n\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        WorkerLoader.enableWorkerLoader();\n        if (WorkerLoader.enable) {\n            let workerLoader = WorkerLoader.I;\n            workerLoader.once(url, null, (imageData: any) => {\n                if (imageData)\n                    onComplete(imageData);\n                else\n                    onComplete(null, \"workerloader failed!\");\n            });\n            workerLoader.worker.postMessage(url);\n        }\n        else\n            this.image(owner, url, originalUrl, onProgress, onComplete);\n    }\n\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n        audio.crossOrigin = \"\";\n        audio.oncanplaythrough = () => {\n            audio.oncanplaythrough = null;\n            audio.onerror = null;\n            onComplete(audio);\n        };\n        audio.onerror = () => {\n            audio.oncanplaythrough = null;\n            audio.onerror = null;\n            onComplete(null, \"\");\n        };\n        audio.src = url;\n        owner.$ref = audio; //保持引用避免gc掉\n    }\n\n    httpRequestPool: Array<HttpRequest> = [];\n    protected getRequestInst() {\n        if (this.httpRequestPool.length == 0\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\n            return new HttpRequest();\n        } else {\n            return this.httpRequestPool.pop();\n        }\n    }\n\n    protected returnRequestInst(inst: HttpRequest) {\n        inst.reset();\n        if (this.httpRequestPool.length < 10)\n            this.httpRequestPool.push(inst);\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\nimport { Event } from \"../events/Event\";\nimport { URL } from \"../net/URL\";\nimport { Texture } from \"../resource/Texture\";\nimport { Delegate } from \"../utils/Delegate\";\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\nimport { WorkerLoader } from \"./WorkerLoader\";\nimport { Utils } from \"../utils/Utils\";\nimport { AtlasResource } from \"../resource/AtlasResource\";\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\nimport { Handler } from \"../utils/Handler\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { Node } from \"../display/Node\";\nimport { Resource } from \"../resource/Resource\";\nimport { Downloader } from \"./Downloader\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { BaseTexture } from \"../resource/BaseTexture\";\n\nexport interface ILoadTask {\n    readonly type: string;\n    readonly url: string;\n    readonly uuid: string;\n    readonly ext: string;\n    readonly loader: Loader;\n    readonly obsoluteInst: Resource;\n    readonly options: Readonly<ILoadOptions>;\n    readonly progress: IBatchProgress;\n}\n\nexport interface IResourceLoader {\n    load(task: ILoadTask): Promise<any>;\n}\n\nexport interface ILoadOptions {\n    type?: string;\n    priority?: number;\n    group?: string;\n    cache?: boolean;\n    noRetry?: boolean;\n    silent?: boolean;\n    useWorkerLoader?: boolean;\n    constructParams?: TextureConstructParams;\n    propertyParams?: TexturePropertyParams;\n    blob?: ArrayBuffer;\n    noMetaFile?: boolean;\n    [key: string]: any;\n}\n\nexport interface ILoadURL extends ILoadOptions {\n    url: string;\n}\n\ninterface ContentTypeMap {\n    \"text\": string,\n    \"json\": any,\n    \"xml\": XMLDocument,\n    \"arraybuffer\": ArrayBuffer,\n    \"image\": HTMLImageElement | ImageBitmap,\n    \"sound\": HTMLAudioElement\n}\n\nvar typeIdCounter = 0;\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader };\n\ninterface URLInfo {\n    ext: string,\n    typeId: number,\n    main: boolean,\n    loaderType: new () => IResourceLoader,\n}\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\n\n/**\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\n */\nexport class Loader extends EventDispatcher {\n    /**文本类型，加载完成后返回string。*/\n    static TEXT = \"text\";\n    /**JSON 类型，加载完成后返回json数据。*/\n    static JSON = \"json\";\n    /**XML 类型，加载完成后返回domXML。*/\n    static XML = \"xml\";\n    /**二进制类型，加载完成后返回arraybuffer。*/\n    static BUFFER = \"arraybuffer\";\n    /**纹理类型，加载完成后返回Texture。*/\n    static IMAGE = \"image\";\n    /**声音类型，加载完成后返回Sound。*/\n    static SOUND = \"sound\";\n    /**视频类型，加载完成后返回VideoTexture。*/\n    static VIDEO = \"video\";\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\n    static ATLAS = \"atlas\";\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\n    static FONT = \"font\";\n    /** TTF字体类型，加载完成后返回一个对象。*/\n    static TTF = \"ttf\";\n    /**Hierarchy资源。*/\n    static HIERARCHY = \"HIERARCHY\";\n    /**Mesh资源。*/\n    static MESH = \"MESH\";\n    /**Material资源。*/\n    static MATERIAL = \"MATERIAL\";\n    /**Texture2D资源。*/\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\n    /**TextureCube资源。*/\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\n    /**AnimationClip资源。*/\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\n    /**Terrain资源。*/\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\n    /**Terrain资源。*/\n    static TERRAINRES = \"TERRAIN\";\n    /** Spine 资源 */\n    static SPINE = \"SPINE\";\n\n    /** 加载出错后的重试次数，默认重试一次*/\n    retryNum: number = 1;\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\n    retryDelay: number = 0;\n    /** 最大下载线程，默认为5个*/\n    maxLoader: number = 5;\n\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\n\n    static downloader = new Downloader();\n\n    /**\n     * 注册一种资源装载器。\n     * @param exts 扩展名\n     * @param cls\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\n     */\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string) {\n        let typeEntry: TypeMapEntry;\n        if (type) {\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\n            if (!typeEntry)\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\n            else if (typeEntry.loaderType != cls)\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\n        }\n        else\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\n\n        for (let ext of exts) {\n            let entry = Loader.extMap[ext];\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\n                if (i == -1) //注册为次类型\n                    entry.push(typeEntry);\n                else //覆盖旧的设置\n                    entry[i].loaderType = cls;\n            }\n            else {\n                Loader.extMap[ext] = [typeEntry];\n            }\n        }\n    }\n\n    /**资源分组对应表。*/\n    static groupMap: { [name: string]: Set<string> } = {};\n    /**已加载的资源池。*/\n    static loadedMap: { [url: string]: Array<any> } = {};\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\n    static preLoadedMap: { [url: string]: any } = {};\n\n    /**@private */\n    private _loadings: Map<string, LoadTask>;\n    /**@private */\n    private _queue: Array<DownloadItem>;\n    /**@private */\n    private _downloadings: Set<DownloadItem>;\n\n    /**\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\n     */\n    constructor() {\n        super();\n\n        this._loadings = new Map();\n        this._queue = [];\n        this._downloadings = new Set();\n    }\n\n    /**\n     * 是否有任何的加载任务在进行\n     */\n    public get loading(): boolean {\n        return this._loadings.size > 0;\n    }\n\n    /**\n     * <p>加载资源。</p>\n     * @param url 要加载的单个资源地址或资源地址数组。\n     * @return 加载成功返回资源对象，加载失败返回null。\n     */\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\n    /**\n     * <p>这是兼容2.0引擎的加载接口</p>\n     * <p>加载资源。</p>\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，指定了一组要加载的资源，如果全部加载成功，则回调参数值为true，否则为false。\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\n     * @param cache\t\t是否缓存。\n     * @param group\t\t分组，方便对资源进行管理。\n     * @param ignoreCache\t参数已废弃。\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\n     * @return Promise对象\n     */\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\n        let complete: Handler;\n        let type: string;\n        let options: ILoadOptions = dummyOptions;\n        if (arg1 instanceof Handler) {\n            complete = arg1;\n            type = arg3;\n        }\n        else if (typeof (arg1) === \"string\")\n            type = arg1;\n        else if (arg1 != null) {\n            type = arg1.type;\n            options = arg1;\n        }\n\n        if (priority != null || cache != null || group != null || useWorkerLoader != null) {\n            if (options === dummyOptions)\n                options = { priority, cache, group, useWorkerLoader };\n            else\n                options = Object.assign(options, { priority, cache, group, useWorkerLoader });\n        }\n\n        let onProgress: ProgressCallback;\n        if (arg2 instanceof Handler)\n            onProgress = (value: number) => arg2.runWith(value);\n        else\n            onProgress = arg2;\n\n        let promise: Promise<any>;\n        if (Array.isArray(url)) {\n            let pd: BatchProgress;\n            if (onProgress)\n                pd = new BatchProgress(onProgress);\n\n            let promises: Array<Promise<any>> = [];\n            for (let i = 0; i < url.length; i++) {\n                let url2 = url[i];\n                if (!url2)\n                    continue;\n\n                if (typeof (url2) === \"string\") {\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\n                }\n                else {\n                    promises.push(this._load1(url2.url, url2.type || type,\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\n                }\n            }\n\n            promise = Promise.all(promises);\n        }\n        else if (typeof (url) === \"string\")\n            promise = this._load1(url, type, options, onProgress);\n        else\n            promise = this._load1(url.url, url.type || type,\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\n\n        if (complete)\n            return promise.then(result => {\n                complete.runWith(result);\n                return result;\n            });\n        else\n            return promise;\n    }\n\n    private _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\n        let uuid: string = null;\n        if (url.startsWith(\"res://\")) {\n            uuid = url.substring(6);\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\n            if (!url2) {\n                let promise = AssetDb.inst.UUID_to_URL_async(uuid);\n                if (!promise) {\n                    !options.silent && Loader.warn(url);\n                    return Promise.resolve(null);\n                }\n\n                return promise.then(url2 => {\n                    if (url2)\n                        return this._load2(url2, uuid, type, options, onProgress);\n                    else {\n                        !options.silent && Loader.warn(url);\n                        return null;\n                    }\n                });\n            }\n            else\n                url = url2;\n        }\n        else {\n            let promise = AssetDb.inst.URL_to_UUID_async(url);\n            if (promise) {\n                return promise.then(uuid => {\n                    return this._load2(url, uuid, type, options, onProgress);\n                });\n            }\n        }\n\n        return this._load2(url, uuid, type, options, onProgress);\n    }\n\n    private _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\n        if (!loaderType) {\n            !options.silent && Loader.warn(url);\n            return Promise.resolve(null);\n        }\n        let formattedUrl = URL.formatURL(url);\n\n        if (options.group) {\n            let set = Loader.groupMap[options.group];\n            if (!set)\n                set = Loader.groupMap[options.group] = new Set();\n            set.add(formattedUrl);\n        }\n\n        let obsoluteRes: Resource;\n        if (options.cache == null || options.cache) {\n            let cacheRes = Loader._getRes(formattedUrl, type);\n            if (cacheRes !== undefined) {\n                if (cacheRes == null)\n                    return Promise.resolve(null);\n                else {\n                    if (!(cacheRes instanceof Resource))\n                        return Promise.resolve(cacheRes);\n\n                    if (cacheRes.obsolute)\n                        obsoluteRes = cacheRes;\n\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\n                        return Promise.resolve(cacheRes);\n                }\n            }\n        }\n\n        let loadingKey = formattedUrl;\n        if (!main)\n            loadingKey += \"@\" + typeId;\n        let task = this._loadings.get(loadingKey);\n        if (task) {\n            if (onProgress)\n                task.onProgress.add(onProgress);\n            return new Promise((resolve) => task.onComplete.add(resolve));\n        }\n\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\n        if (atlasInfo) {\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\n                return Loader.getRes(url, type);\n            });\n        }\n\n        if (loadTaskPool.length > 0)\n            task = loadTaskPool.pop();\n        else\n            task = new LoadTask();\n        task.type = type;\n        task.url = url;\n        task.uuid = uuid;\n        task.ext = ext;\n        options = Object.assign(task.options, options);\n        delete options.type;\n        if (options.priority == null)\n            options.priority = 0;\n        if (options.useWorkerLoader == null)\n            options.useWorkerLoader = WorkerLoader.enable;\n        if (onProgress)\n            task.onProgress.add(onProgress);\n        task.loader = this;\n        task.obsoluteInst = obsoluteRes;\n\n        let assetLoader = new loaderType();\n        this._loadings.set(loadingKey, task);\n\n        let promise: Promise<any>;\n        try {\n            promise = assetLoader.load(task);\n        }\n        catch (err: any) {\n            !options.silent && Loader.warn(url, err);\n\n            promise = Promise.resolve(null);\n        }\n\n        return promise.then(content => {\n            if (content instanceof Resource) {\n                content._setCreateURL(url, uuid);\n            }\n\n            if (task.options.cache == null || task.options.cache)\n                Loader._cacheRes(formattedUrl, content, typeId, main);\n\n            task.progress.update(-1, 1);\n\n            //console.log(\"Loaded \" + url);\n            task.onComplete.invoke(content);\n            return content;\n        }).catch(error => {\n            !options.silent && Loader.warn(url, error);\n\n            if (task.options.cache == null || task.options.cache)\n                Loader._cacheRes(formattedUrl, null, typeId, main);\n\n            task.onComplete.invoke(null);\n            return null;\n        }).then((result: any) => {\n            this._loadings.delete(loadingKey);\n            task.reset();\n            loadTaskPool.push(task);\n            if (this._loadings.size == 0)\n                this.event(Event.COMPLETE);\n            return result;\n        });\n    }\n\n    /**\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\n     * 成功则返回下载的数据，失败返回null。\n     */\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: (progress: number) => void, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\n        options = options || dummyOptions;\n        let task: DownloadItem = {\n            originalUrl: url,\n            url: url,\n            contentType: contentType,\n            priority: options.priority ?? 1,\n            retryCnt: 0,\n            onProgress: onProgress,\n            onComplete: null,\n        };\n        if (options.useWorkerLoader)\n            task.useWorkerLoader = true;\n        if (options.blob)\n            task.blob = options.blob;\n        if (options.noRetry)\n            task.retryCnt = -1;\n        if (options.silent)\n            task.silent = true;\n\n        return new Promise((resolve) => {\n            AssetDb.inst.resolveURL(url, url => {\n                task.url = URL.formatURL(url);\n                task.onComplete = resolve;\n                this.queueToDownload(task);\n            });\n        });\n    }\n\n    private queueToDownload(item: DownloadItem) {\n        if (this._downloadings.size < this.maxLoader) {\n            this.download(item);\n            return;\n        }\n\n        let priority = item.priority;\n        if (priority == 0)\n            this._queue.push(item);\n        else {\n            let i = this._queue.findIndex(e => e.priority < priority);\n            if (i != -1)\n                this._queue.splice(i, 0, item);\n            else\n                this._queue.push(item);\n        }\n    }\n\n    private download(item: DownloadItem) {\n        this._downloadings.add(item);\n        let url = URL.postFormatURL(item.url);\n\n        if (item.contentType == \"image\") {\n            let preloadedContent = Loader.preLoadedMap[item.url];\n            if (preloadedContent) {\n                if (!(preloadedContent instanceof ArrayBuffer)) {\n                    this.completeItem(item, preloadedContent);\n                    return;\n                }\n\n                //cache as arraybuffer\n                item.blob = preloadedContent;\n            }\n\n            if (item.blob) {\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\n                    if (!data)\n                        item.retryCnt = -1; //失败无需重试\n                    this.completeItem(item, data, error);\n                });\n            }\n            else if (item.useWorkerLoader) {\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\n                    if (!data)\n                        item.useWorkerLoader = false; //重试不用worker\n                    this.completeItem(item, data, error);\n                });\n            }\n            else {\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\n                    this.completeItem(item, data, error));\n            }\n        }\n        else if (item.contentType == \"sound\") {\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\n                this.completeItem(item, data, error));\n        }\n        else {\n            let preloadedContent = Loader.preLoadedMap[item.url];\n            if (preloadedContent) {\n                this.completeItem(item, preloadedContent);\n                return;\n            }\n\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\n                this.completeItem(item, data, error));\n        }\n    }\n\n    private completeItem(item: DownloadItem, content: any, error?: string) {\n        this._downloadings.delete(item);\n        if (content) {\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\n                this.download(this._queue.shift());\n\n            if (item.onProgress)\n                item.onProgress(1);\n\n            item.onComplete(content);\n        }\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\n            item.retryCnt++;\n            if (!item.silent)\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\n        }\n        else {\n            !item.silent && Loader.warn(item.url);\n            if (item.onProgress)\n                item.onProgress(1);\n\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\n                this.download(this._queue.shift());\n\n            item.onComplete(null);\n        }\n    }\n\n    private static getURLInfo(url: string, type?: string): URLInfo {\n        //先根据扩展名获得注册信息A\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\n        let extEntry: Array<TypeMapEntry>;\n        if (ext.length > 0)\n            extEntry = Loader.extMap[ext];\n\n        let typeId: number;\n        let main: boolean;\n        let loaderType: new () => IResourceLoader;\n\n        if (type) { //指定了类型\n            let typeEntry = Loader.typeMap[type];\n            if (!typeEntry) {\n                console.warn(`not recognize type: '${type}'`);\n                return NullURLInfo;\n            }\n            typeId = typeEntry.typeId;\n\n            let i: number = 0;\n            if (extEntry) {\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\n                    main = i == 0;\n                    loaderType = extEntry[i].loaderType;\n                }\n                else {\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\n                    main = false;\n                    loaderType = typeEntry.loaderType;\n                }\n            }\n            else { //扩展名没有注册的情况\n                main = type != Loader.TEXTURE2D;\n                loaderType = typeEntry.loaderType;\n            }\n        }\n        else {\n            if (!extEntry) {\n                console.warn(`not recognize the resource suffix: '${url}'`);\n                return NullURLInfo;\n            }\n\n            //没有自定类型，则认为是主资源\n            main = true;\n            typeId = extEntry[0].typeId;\n            loaderType = extEntry[0].loaderType;\n        }\n\n        return { ext, main, typeId, loaderType };\n    }\n\n    private static warn(url: string, err?: any) {\n        console.warn(`Failed to load ${url}` + (err ? (\":\" + err) : \"\"));\n    }\n\n    /**\n     * 获取指定资源地址的资源。\n     * @param url 资源地址。\n     * @return 返回资源。\n     */\n    static getRes(url: string, type?: string): any {\n        url = URL.formatURL(url);\n        let ret = Loader._getRes(url, type);\n        return ret || null;\n    }\n\n    private static _getRes(url: string, type?: string): any {\n        let resArr = Loader.loadedMap[url];\n        if (!resArr)\n            return undefined;\n\n        let ret: any;\n        if (type) {\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\n            if (!typeEntry)\n                return undefined;\n\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\n                if (resArr[0] == typeEntry.typeId)\n                    ret = resArr[1];\n            }\n            else {\n                let i = resArr.indexOf(typeEntry.typeId);\n                if (i != -1)\n                    ret = resArr[i + 1];\n            }\n        }\n        else\n            ret = resArr[1]; //主资源\n\n        if ((ret instanceof Resource) && ret.destroyed)\n            return undefined;\n        else\n            return ret;\n    }\n\n    /**\n     * \n     */\n    static getTexture2D(url: string): Texture2D {\n        return Loader.getRes(url, Loader.TEXTURE2D);\n    }\n\n    /**\n     * \n     */\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\n        return Loader.getRes(url, Loader.TEXTURE2D);\n    }\n\n    /**\n     * 获取指定资源地址的图集地址列表。\n     * @param url 图集地址。\n     * @return 返回地址集合。\n     */\n    static getAtlas(url: string): AtlasResource {\n        return Loader.getRes(url, Loader.ATLAS);\n    }\n\n    getRes(url: string, type?: string): any {\n        return Loader.getRes(url, type);\n    }\n\n    static createNodes<T extends Node>(url: string): T {\n        return <T>(<Prefab>Loader.getRes(url))?.create();\n    }\n\n    /**\n     * 缓存资源。\n     * @param url 资源地址。\n     * @param data 要缓存的内容。\n     */\n    static cacheRes(url: string, data: any, type?: string): void {\n        url = URL.formatURL(url);\n        let urlInfo = Loader.getURLInfo(url, type);\n        if (urlInfo.typeId != null)\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\n    }\n\n    /**\n     * @private\n     */\n    private static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\n        let entry: Array<any> = Loader.loadedMap[url];\n        if (main) {\n            if (entry) {\n                entry[0] = typeId;\n                entry[1] = data;\n            }\n            else\n                entry = Loader.loadedMap[url] = [typeId, data];\n        }\n        else {\n            if (entry) {\n                let i = entry.findIndex(e => e === typeId);\n                if (i != -1)\n                    entry[i + 1] = data;\n                else\n                    entry.push(typeId, data);\n            }\n            else\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\n        }\n    }\n\n    cacheRes(url: string, data: any, type?: string): void {\n        Loader.cacheRes(url, data, type);\n    }\n\n    /**\n     * 清理指定资源地址缓存。\n     * @param url 资源地址。\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\n     */\n    static clearRes(url: string, checkObj?: any): void {\n        url = URL.formatURL(url);\n        Loader._clearRes(url, checkObj);\n    }\n\n    /**\n     * 清理指定资源地址缓存。\n     * @param url 资源地址。\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\n     */\n    clearRes(url: string, checkObj?: any): void {\n        url = URL.formatURL(url);\n        Loader._clearRes(url, checkObj);\n    }\n\n    /**\n     * @private\n     */\n    private static _clearRes(url: string, checkObj?: any) {\n        let entry = Loader.loadedMap[url];\n        if (!entry)\n            return;\n\n        if (checkObj) {\n            if (entry[1] == checkObj) {\n                if (entry.length == 2)\n                    delete Loader.loadedMap[url];\n                else\n                    entry[1] = undefined;\n            }\n            else {\n                let i = entry.indexOf(checkObj);\n                if (i == -1)\n                    return;\n\n                if (entry.length == 4 && entry[0] == null)\n                    delete Loader.loadedMap[url];\n                else\n                    entry.splice(i - 1, 2);\n            }\n\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\n                checkObj.destroy();\n            }\n        }\n        else {\n            delete Loader.loadedMap[url];\n\n            if (entry.length > 2) {\n                for (let i = 1; i < entry.length; i += 2) {\n                    let obj = entry[i];\n                    if ((obj instanceof Resource) && !obj.destroyed) {\n                        obj.destroy();\n                    }\n                }\n            }\n            else {\n                let obj = entry[1];\n                if ((obj instanceof Resource) && !obj.destroyed) {\n                    obj.destroy();\n                }\n            }\n        }\n    }\n\n    /**\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\n     */\n    clearTextureRes(url: string): void {\n        url = URL.formatURL(url);\n        let entry = Loader.loadedMap[url];\n        if (!entry)\n            return;\n        let res = entry[0];\n        if (res instanceof Texture) {\n            res.disposeBitmap();\n        }\n        else if (res instanceof AtlasResource) {\n            for (let tex of res.textures)\n                tex.disposeBitmap();\n        }\n    }\n\n    /**\n     * 设置资源分组。\n     * @param url 资源地址。\n     * @param group 分组名。\n     */\n    static setGroup(url: string, group: string): void {\n        url = URL.formatURL(url);\n        let set = Loader.groupMap[group];\n        if (!set)\n            set = Loader.groupMap[group] = new Set();\n        set.add(url);\n    }\n\n    /**\n     * 根据分组清理资源。\n     * @param group 分组名\n     */\n    static clearResByGroup(group: string): void {\n        let set = Loader.groupMap[group];\n        if (set) {\n            for (let k of set)\n                Loader._clearRes(k);\n        }\n    }\n\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\n    clearUnLoaded(): void {\n        if (this._queue.length == 0)\n            return;\n\n        let arr = this._queue.concat();\n        this._queue.length = 0;\n        for (let item of arr)\n            item.onComplete(null);\n    }\n\n    /**\n     * 根据地址集合清理掉未加载的内容\n     * @param urls 资源地址集合\n     */\n    cancelLoadByUrls(urls: any[]): void {\n        if (!urls) return;\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\n            this.cancelLoadByUrl(urls[i]);\n        }\n    }\n\n    /**\n     * 根据地址清理掉未加载的内容\n     * @param url 资源地址\n     */\n    cancelLoadByUrl(url: string): void {\n        url = URL.formatURL(url);\n        let i = this._queue.findIndex(item => item.url == url);\n        if (i != -1) {\n            let item = this._queue[i];\n            this._queue.splice(i, 1);\n            item.onComplete(null);\n        }\n    }\n}\n\nclass LoadTask implements ILoadTask {\n    type: string;\n    url: string;\n    uuid: string;\n    ext: string;\n    options: ILoadOptions;\n    loader: Loader;\n    progress: BatchProgress;\n    obsoluteInst: Resource;\n\n    onProgress: Delegate;\n    onComplete: Delegate;\n\n    constructor() {\n        this.options = {};\n        this.onProgress = new Delegate();\n        this.onComplete = new Delegate();\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\n    }\n\n    public reset() {\n        for (let k in this.options)\n            delete this.options[k];\n        this.onProgress.clear();\n        this.onComplete.clear();\n        this.progress.reset();\n        this.obsoluteInst = null;\n    }\n}\n\nconst loadTaskPool: Array<LoadTask> = [];\nconst dummyOptions: ILoadOptions = {};\n\ninterface DownloadItem {\n    url: string;\n    originalUrl: string;\n    contentType: string;\n    priority: number;\n    useWorkerLoader?: boolean;\n    blob?: ArrayBuffer;\n    retryCnt?: number;\n    silent?: boolean;\n    onComplete: (content: any) => void;\n    onProgress: (progress: number) => void;\n}","/**\n\t * @private\n\t * <code>MathUtil</code> 是一个数据处理工具类。\n\t */\nexport class MathUtil {\n\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\n        o[0] = l[0] - r[0];\n        o[1] = l[1] - r[1];\n        o[2] = l[2] - r[2];\n    }\n\n    static lerp(left: number, right: number, amount: number): number {\n        return left * (1 - amount) + right * amount;\n    }\n\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\n        e[0] = f[0] * b;\n        e[1] = f[1] * b;\n        e[2] = f[2] * b;\n    }\n\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\n        o[0] = ax + t * (r[0] - ax);\n        o[1] = ay + t * (r[1] - ay);\n        o[2] = az + t * (r[2] - az);\n    }\n\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\n        o[0] = ax + t * (r[0] - ax);\n        o[1] = ay + t * (r[1] - ay);\n        o[2] = az + t * (r[2] - az);\n        o[3] = aw + t * (r[3] - aw);\n    }\n\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\n\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\n\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\n\n        // calc cosine \n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary) \n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n        // calculate coefficients \n        if ((1.0 - cosom) > 0.000001) {\n            // standard case (slerp) \n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            // \"from\" and \"to\" quaternions are very close  \n            //  ... so we can do a linear interpolation \n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n        // calculate final values \n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\n\n        return out;\n\n    }\n\n    /**\n     * 获取指定的两个点组成的线段的角度值。\n     * @param\tx0 点一的 X 轴坐标值。\n     * @param\ty0 点一的 Y 轴坐标值。\n     * @param\tx1 点二的 X 轴坐标值。\n     * @param\ty1 点二的 Y 轴坐标值。\n     * @return 角度值。\n     */\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\n    }\n\n    /**\n     * 一个用来确定数组元素排序顺序的比较函数。\n     * @param\ta 待比较数字。\n     * @param\tb 待比较数字。\n     * @return 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\n     */\n    static sortBigFirst(a: number, b: number): number {\n        if (a == b) return 0;\n        return b > a ? 1 : -1;\n    }\n\n    /**\n     * 一个用来确定数组元素排序顺序的比较函数。\n     * @param\ta 待比较数字。\n     * @param\tb 待比较数字。\n     * @return 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\n     */\n    static sortSmallFirst(a: number, b: number): number {\n        if (a == b) return 0;\n        return b > a ? -1 : 1;\n    }\n\n    /**\n     * 将指定的元素转为数字进行比较。\n     * @param\ta 待比较元素。\n     * @param\tb 待比较元素。\n     * @return b、a转化成数字的差值 (b-a)。\n     */\n    static sortNumBigFirst(a: any, b: any): number {\n        return parseFloat(b) - parseFloat(a);\n    }\n\n    /**\n     * 将指定的元素转为数字进行比较。\n     * @param\ta 待比较元素。\n     * @param\tb 待比较元素。\n     * @return a、b转化成数字的差值 (a-b)。\n     */\n    static sortNumSmallFirst(a: any, b: any): number {\n        return parseFloat(a) - parseFloat(b);\n    }\n\n    /**\n     * 返回根据对象指定的属性进行排序的比较函数。\n     * @param\tkey 排序要依据的元素属性名。\n     * @param\tbigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\n     * @param\tforceNum 如果值为true，则将排序的元素转为数字进行比较。\n     * @return 排序函数。\n     */\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\n        var _sortFun: Function;\n        if (bigFirst) {\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\n        } else {\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\n        }\n        return function (a: any, b: any): number {\n            return _sortFun(a[key], b[key]);\n        }\n    }\n}\n\n\n","import { AnimationBase } from \"./AnimationBase\";\nimport { MathUtil } from \"../maths/MathUtil\"\nimport { Ease } from \"../utils/Ease\"\n\n/**\n * 动画播放完毕后调度。\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n\n/**\n * 播放到某标签后调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n/**\n * 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\n */\nexport class FrameAnimation extends AnimationBase {\n\n    /**@private */\n    private static _sortIndexFun(objpre: any, objnext: any) {\n        return objpre.index - objnext.index\n    }\n\n    /**@internal id对象表*/\n    _targetDic: any;\n    /**@internal 动画数据*/\n    _animationData: any;\n    /**@private */\n    protected _usedFrames: any[];\n\n    constructor() {\n        super();\n        if (FrameAnimation._sortIndexFun === undefined) {\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\n        }\n    }\n\n    /**\n     * @internal\n     * 初始化动画数据\n     * @param targetDic 节点ID索引\n     * @param animationData 动画数据\n     */\n    _setUp(targetDic: any, animationData: any): void {\n        this._targetDic = targetDic;\n        this._animationData = animationData;\n        this.interval = 1000 / animationData.frameRate;\n        if (animationData.parsed) {\n            this._count = animationData.count;\n            this._labels = animationData.labels;\n            this._usedFrames = animationData.animationNewFrames;\n        } else {\n            this._usedFrames = [];\n            this._calculateDatas();\n\n            animationData.parsed = true;\n            animationData.labels = this._labels;\n            animationData.count = this._count;\n            animationData.animationNewFrames = this._usedFrames;\n        }\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    clear(): AnimationBase {\n        super.clear();\n        this._targetDic = null;\n        this._animationData = null;\n        return this;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected _displayToIndex(value: number): void {\n        if (!this._animationData) return;\n        if (value < 0) value = 0;\n        if (value > this._count) value = this._count;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\n        for (i = 0; i < len; i++) {\n            this._displayNodeToFrame(nodes[i], value);\n        }\n    }\n\n    /**\n     * @private\n     * 将节点设置到某一帧的状态\n     * @param node 节点ID\n     * @param frame\n     * @param targetDic 节点表\n     */\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\n        if (!targetDic) targetDic = this._targetDic;\n        var target: any = targetDic[node.target];\n        if (!target) {\n            //trace(\"loseTarget:\",node.target);\n            return;\n        }\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\n        for (i = 0; i < len; i++) {\n            key = keys[i];\n            propFrames = frames[key];\n            if (propFrames.length > frame) {\n                value = propFrames[frame];\n            } else {\n                value = propFrames[propFrames.length - 1];\n            }\n            target[key] = value;\n        }\n        var funkeys: any[] = node.funkeys;\n        len = funkeys.length;\n        var funFrames: any;\n        if (len == 0) return;\n        for (i = 0; i < len; i++) {\n            key = funkeys[i];\n            funFrames = frames[key];\n            if (funFrames[frame] !== undefined) {\n                target[key] && target[key].apply(target, funFrames[frame]);\n            }\n        }\n\n    }\n\n    /**\n     * @private\n     * 计算帧数据\n     */\n    private _calculateDatas(): void {\n        if (!this._animationData) return;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\n        this._count = 0;\n        for (i = 0; i < len; i++) {\n            tNode = nodes[i];\n            this._calculateKeyFrames(tNode);\n        }\n        this._count += 1;\n    }\n\n    /**\n     * @private\n     * 计算某个节点的帧数据\n     */\n    protected _calculateKeyFrames(node: any): void {\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\n        if (!node.frames) node.frames = {};\n        if (!node.keys) node.keys = [];\n        else node.keys.length = 0;\n\n        if (!node.funkeys) node.funkeys = [];\n        else node.funkeys.length = 0;\n\n        if (!node.initValues) node.initValues = {};\n        for (key in keyFrames) {\n            var isFun: boolean = key.indexOf(\"()\") != -1;\n            tKeyFrames = keyFrames[key];\n            if (isFun) key = key.substr(0, key.length - 2);\n            if (!node.frames[key]) {\n                node.frames[key] = [];\n            }\n            if (!isFun) {\n                if (this._targetDic && this._targetDic[target]) {\n                    node.initValues[key] = this._targetDic[target][key];\n                }\n\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\n                node.keys.push(key);\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\n            }\n            else {\n                node.funkeys.push(key);\n                var map: any[] = node.frames[key];\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\n                    var temp: any = tKeyFrames[i];\n                    map[temp.index] = temp.value;\n                    if (temp.index > this._count) this._count = temp.index;\n                }\n            }\n\n        }\n    }\n\n    /**\n     * 重置节点，使节点恢复到动画之前的状态，方便其他动画控制\n     */\n    resetNodes(): void {\n        if (!this._targetDic) return;\n        if (!this._animationData) return;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\n        var tNode: any;\n        var initValues: any;\n        for (i = 0; i < len; i++) {\n            tNode = nodes[i];\n            initValues = tNode.initValues;\n            if (!initValues) continue;\n            var target: any = this._targetDic[tNode.target];\n            if (!target) continue;\n            var key: string;\n            for (key in initValues) {\n                target[key] = initValues[key];\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 计算节点某个属性的帧数据\n     */\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\n        var i: number, len: number = keyframes.length - 1;\n        frames.length = keyframes[len].index + 1;\n        for (i = 0; i < len; i++) {\n            this._dealKeyFrame(keyframes[i]);\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\n        }\n        if (len == 0) {\n            frames[0] = keyframes[0].value;\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\n        }\n        this._dealKeyFrame(keyframes[i]);\n    }\n\n    /**\n     * @private\n     */\n    private _dealKeyFrame(keyFrame: any): void {\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\n    }\n\n    /**\n     * @private\n     * 计算两个关键帧直接的帧数据\n     */\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\n        var i: number, easeFun: Function;\n        var start: number = startFrame.index, end: number = endFrame.index;\n        var startValue: number = startFrame.value;\n        var dValue: number = endFrame.value - startFrame.value;\n        var dLen: number = end - start;\n        var frames: any[] = this._usedFrames;\n        if (end > this._count) this._count = end;\n        if (startFrame.tween) {\n            easeFun = (Ease as any)[startFrame.tweenMethod];\n            if (easeFun == null) easeFun = Ease.linearNone;\n            for (i = start; i < end; i++) {\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\n                if (frames) frames[i] = true;\n            }\n        } else {\n            for (i = start; i < end; i++) {\n                result[i] = startValue;\n            }\n        }\n        if (frames) {\n            frames[startFrame.index] = true;\n            frames[endFrame.index] = true;\n        }\n        result[endFrame.index] = endFrame.value;\n    }\n}\n","import { FrameAnimation } from \"./FrameAnimation\"\nimport { Graphics } from \"./Graphics\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\n\n/**\n * Graphics动画解析器\n * @private\n */\nexport class GraphicAnimation extends FrameAnimation {\n    /**@private */\n    animationList: any[];\n    /**@private */\n    animationDic: any;\n    /**@private */\n    protected _nodeList: any[];\n    /**@private */\n    protected _nodeDefaultProps: any;\n    /**@private */\n    protected _gList: any[];\n    /**@private */\n    protected _nodeIDAniDic: any = {};\n\n    /**@private */\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\n    /**@private */\n    protected static _temParam: any[] = [];\n    /**@private */\n    private static _I: GraphicAnimation;\n    /**@private */\n    private static _rootMatrix: Matrix;\n    /**@private */\n    private _rootNode: any;\n    /**@private */\n    protected _nodeGDic: any;\n\n    /**@private */\n    private _parseNodeList(uiView: any): void {\n        if (!this._nodeList) this._nodeList = [];\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\n        if (uiView.compId) this._nodeList.push(uiView.compId);\n        var childs: any[] = uiView.child;\n        if (childs) {\n            var i: number, len: number = childs.length;\n            for (i = 0; i < len; i++) {\n                this._parseNodeList(childs[i]);\n            }\n        }\n    }\n\n    /**@private */\n    private _calGraphicData(aniData: any): void {\n        this._setUp(null, aniData);\n        this._createGraphicData();\n        if (this._nodeIDAniDic) {\n            var key: string;\n            for (key in this._nodeIDAniDic) {\n                this._nodeIDAniDic[key] = null;\n            }\n        }\n    }\n\n    /**@private */\n    private _createGraphicData(): void {\n        var gList: any[] = [];\n        var i: number, len: number = this.count;\n        var animationDataNew: any[] = this._usedFrames;\n        if (!animationDataNew) animationDataNew = [];\n        var preGraphic: Graphics;\n        for (i = 0; i < len; i++) {\n            if (animationDataNew[i] || !preGraphic) {\n                preGraphic = this._createFrameGraphic(i);\n            }\n            gList.push(preGraphic);\n        }\n        this._gList = gList;\n    }\n\n    /**@private */\n    protected _createFrameGraphic(frame: number): any {\n        var g: Graphics = new Graphics();\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\n        //_updateNodeGraphic2(_rootNode, frame, g);\n        return g;\n    }\n\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\n        var tNodeG: GraphicNode;\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\n        if (!tNodeG.resultTransform)\n            tNodeG.resultTransform = new Matrix();\n        var tResultTransform: Matrix;\n        tResultTransform = tNodeG.resultTransform;\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\n        var tTex: Texture;\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\n        if (tGraphicAlpha < 0.01) return;\n        if (tNodeG.skin) {\n            tTex = this._getTextureByUrl(tNodeG.skin);\n            if (tTex) {\n                if (tResultTransform._checkTransform()) {\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\n                    tNodeG.resultTransform = null;\n                } else {\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\n                }\n            }\n        }\n        var childs: any[] = node.child;\n        if (!childs) return;\n        var i: number, len: number;\n        len = childs.length;\n        for (i = 0; i < len; i++) {\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\n        }\n    }\n    /**\n     * @internal\n     * @param tNodeG \n     * @param g \n     */\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\n        if (!tNodeG.skin) return;\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\n        if (!tTex) return;\n        var tTransform: Matrix = tNodeG.transform;\n        tTransform._checkTransform();\n        var onlyTranslate: boolean;\n        onlyTranslate = !tTransform._bTransform;\n        if (!onlyTranslate) {\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\n        } else {\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\n        }\n    }\n\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\n        var tNodeG: GraphicNode;\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\n        if (!node.child) {\n            this._updateNoChilds(tNodeG, g);\n            return;\n        }\n        var tTransform: Matrix = tNodeG.transform;\n        tTransform._checkTransform();\n        var onlyTranslate: boolean;\n        onlyTranslate = !tTransform._bTransform;\n        var hasTrans: boolean;\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\n        var ifSave: boolean;\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\n        if (ifSave) g.save();\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\n        if (!onlyTranslate) g.transform(tTransform.clone());\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\n\n        var childs: any[] = node.child;\n        var tTex: Texture;\n        if (tNodeG.skin) {\n            tTex = this._getTextureByUrl(tNodeG.skin);\n            if (tTex) {\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\n            }\n        }\n\n        if (childs) {\n            var i: number, len: number;\n            len = childs.length;\n            for (i = 0; i < len; i++) {\n                this._updateNodeGraphic2(childs[i], frame, g);\n            }\n        }\n\n        if (ifSave) {\n            g.restore();\n        } else {\n            if (!onlyTranslate) {\n                g.transform(tTransform.clone().invert());\n            } else if (hasTrans) {\n                g.translate(-tTransform.tx, -tTransform.ty);\n            }\n        }\n    }\n\n    /**\n     * @private \n     * @override\n    */\n    protected _calculateKeyFrames(node: any): void {\n        super._calculateKeyFrames(node);\n        this._nodeIDAniDic[node.target] = node;\n    }\n\n    /**@private */\n    protected getNodeDataByID(nodeID: number): any {\n        return this._nodeIDAniDic[nodeID];\n    }\n\n    /**@private */\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\n        var rst: any[] = GraphicAnimation._temParam;\n        rst.length = params.length;\n        var i: number, len: number = params.length;\n        for (i = 0; i < len; i++) {\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\n        }\n        return rst;\n    }\n\n    /**@private */\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\n        if (key in obj) {\n            var vArr: any[] = obj[key];\n            if (frame >= vArr.length) frame = vArr.length - 1;\n            return obj[key][frame];\n        }\n        if (key in obj2) {\n            return obj2[key];\n        }\n        return noValue;\n    }\n    /**\n     * @internal\n     * @param nodeID \n     * @param frame \n     * @param rst \n     */\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\n        if (!rst)\n            rst = new GraphicNode();\n        if (!rst.transform) {\n            rst.transform = new Matrix();\n        } else {\n            rst.transform.identity();\n        }\n\n        var node: any = this.getNodeDataByID(nodeID);\n        if (!node) return rst;\n        var frameData: any = node.frames;\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\n        var url: string = params[0];\n        var width: number, height: number;\n        var px: number = params[5], py: number = params[6];\n        var aX: number = params[13], aY: number = params[14];\n        var sx: number = params[7], sy: number = params[8];\n        var rotate: number = params[9];\n        var skewX: number = params[11], skewY: number = params[12]\n        width = params[3];\n        height = params[4];\n        if (width == 0 || height == 0) url = null;\n        if (width == -1) width = 0;\n        if (height == -1) height = 0;\n        var tex: Texture;\n        rst.skin = url;\n        rst.width = width;\n        rst.height = height;\n        if (url) {\n            tex = this._getTextureByUrl(url);\n            if (tex) {\n                if (!width)\n                    width = tex.sourceWidth;\n                if (!height)\n                    height = tex.sourceHeight;\n            } else {\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\n            }\n        }\n\n        rst.alpha = params[10];\n\n        var m: Matrix = rst.transform;\n        if (aX != 0) {\n            px = aX * width;\n        }\n        if (aY != 0) {\n            py = aY * height;\n        }\n        if (px != 0 || py != 0) {\n            m.translate(-px, -py);\n        }\n        var tm: Matrix = null;\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\n            tm = GraphicAnimation._tempMt;\n            tm.identity();\n            tm._bTransform = true;\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\n            var cx: number = Math.cos(sky);\n            var ssx: number = Math.sin(sky);\n            var cy: number = Math.sin(skx);\n            var ssy: number = Math.cos(skx);\n            tm.a = sx * cx;\n            tm.b = sx * ssx;\n            tm.c = -sy * cy;\n            tm.d = sy * ssy;\n            tm.tx = tm.ty = 0;\n        }\n        if (tm) {\n            m = Matrix.mul(m, tm, m);\n        }\n\n        m.translate(params[1], params[2]);\n\n        return rst;\n    }\n    private static _tempMt: Matrix = new Matrix();\n\n    /**@private */\n    protected _getTextureByUrl(url: string): any {\n        return Loader.getRes(url);\n    }\n\n    /**@private */\n    setAniData(uiView: any, aniName: string = null): void {\n        if (uiView.animations) {\n            this._nodeDefaultProps = {};\n            this._nodeGDic = {};\n            if (this._nodeList) this._nodeList.length = 0;\n            this._rootNode = uiView;\n            this._parseNodeList(uiView);\n            var aniDic: any = {};\n            var anilist: any[] = [];\n            var animations: any[] = uiView.animations;\n            var i: number, len: number = animations.length;\n            var tAniO: any;\n            for (i = 0; i < len; i++) {\n                tAniO = animations[i];\n                this._labels = null;\n                if (aniName && aniName != tAniO.name) {\n                    continue;\n                }\n                if (!tAniO)\n                    continue;\n                try {\n                    this._calGraphicData(tAniO);\n                } catch (e) {\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\n                    this._gList = [];\n                }\n                var frameO: any = {};\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\n                frameO.frames = this._gList;\n                frameO.labels = this._labels;\n                frameO.name = tAniO.name;\n                anilist.push(frameO);\n                aniDic[tAniO.name] = frameO;\n            }\n            this.animationList = anilist;\n            this.animationDic = aniDic;\n        }\n        GraphicAnimation._temParam.length = 0;\n\n    }\n\n    parseByData(aniData: any): any {\n        var rootNode: any, aniO: any;\n        rootNode = aniData.nodeRoot;\n        aniO = aniData.aniO;\n        delete aniData.nodeRoot;\n        delete aniData.aniO;\n        this._nodeDefaultProps = {};\n        this._nodeGDic = {};\n        if (this._nodeList) this._nodeList.length = 0;\n        this._rootNode = rootNode;\n        this._parseNodeList(rootNode);\n        this._labels = null;\n        try {\n            this._calGraphicData(aniO);\n        } catch (e) {\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\n            this._gList = [];\n        }\n        var frameO: any = aniData;\n        frameO.interval = 1000 / aniO[\"frameRate\"];\n        frameO.frames = this._gList;\n        frameO.labels = this._labels;\n        frameO.name = aniO.name;\n        return frameO;\n    }\n\n    /**@private */\n    setUpAniData(uiView: any): void {\n        if (uiView.animations) {\n            var aniDic: any = {};\n            var anilist: any[] = [];\n            var animations: any[] = uiView.animations;\n            var i: number, len: number = animations.length;\n            var tAniO: any;\n            for (i = 0; i < len; i++) {\n                tAniO = animations[i];\n                if (!tAniO) continue;\n                var frameO: any = {};\n                frameO.name = tAniO.name;\n                frameO.aniO = tAniO;\n                frameO.nodeRoot = uiView;\n                anilist.push(frameO);\n                aniDic[tAniO.name] = frameO;\n            }\n            this.animationList = anilist;\n            this.animationDic = aniDic;\n        }\n    }\n\n    /**@private */\n    protected _clear(): void {\n        this.animationList = null;\n        this.animationDic = null;\n        this._gList = null;\n        this._nodeGDic = null;\n    }\n\n    static parseAnimationByData(animationObject: any): any {\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\n        var rst: any;\n        rst = GraphicAnimation._I.parseByData(animationObject);\n        GraphicAnimation._I._clear();\n        return rst;\n    }\n\n    static parseAnimationData(aniData: any): any {\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\n        GraphicAnimation._I.setUpAniData(aniData);\n        var rst: any;\n        rst = {};\n        rst.animationList = GraphicAnimation._I.animationList;\n        rst.animationDic = GraphicAnimation._I.animationDic;\n        GraphicAnimation._I._clear();\n        return rst;\n    }\n}\n\n\n/**@internal */\nclass GraphicNode {\n    skin: string;\n    transform: Matrix;\n    resultTransform: Matrix;\n    width: number;\n    height: number;\n    alpha: number = 1;\n}\n","import { AnimationBase } from \"./AnimationBase\";\nimport { Graphics } from \"./Graphics\";\nimport { Loader } from \"../net/Loader\"\nimport { GraphicAnimation } from \"./GraphicAnimation\"\nimport { Handler } from \"../utils/Handler\"\nimport { Utils } from \"../utils/Utils\"\nimport { ILaya } from \"../../ILaya\";\nimport { AtlasResource } from \"../resource/AtlasResource\";\n\n/**\n * 动画播放完毕后调度。\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n\n/**\n * 播放到某标签后调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Animation</code> 是Graphics动画类。实现了基于Graphics的动画创建、播放、控制接口。</p>\n * <p>本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\n * <p>使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\n * @example <caption>以下示例代码，创建了一个 <code>Text</code> 实例。</caption>\n * package\n * {\n * \timport laya.display.Animation;\n * \timport laya.net.Loader;\n * \timport laya.utils.Handler;\n * \tpublic class Animation_Example\n * \t{\n * \t\tpublic function Animation_Example()\n * \t\t{\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * \t\t\tinit();//初始化\n * \t\t}\n * \t\tprivate function init():void\n * \t\t{\n * \t\t\tvar animation:Animation = new Animation();//创建一个 Animation 类的实例对象 animation 。\n * \t\t\tanimation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\n * \t\t\tanimation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n * \t\t\tanimation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n * \t\t\tanimation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\n * \t\t\tanimation.play();//播放动画。\n * \t\t\tLaya.stage.addChild(animation);//将 animation 对象添加到显示列表。\n * \t\t}\n * \t}\n * }\n *\n * @example\n * Animation_Example();\n * function Animation_Example(){\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *     init();//初始化\n * }\n * function init()\n * {\n *     var animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\n *     animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\n *     animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *     animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *     animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\n *     animation.play();//播放动画。\n *     Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\n * }\n *\n * @example\n * import Animation = laya.display.Animation;\n * class Animation_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.init();\n *     }\n *     private init(): void {\n *         var animation:Animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\n *         animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\n *         animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *         animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *         animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\n *         animation.play();//播放动画。\n *         Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\n *     }\n * }\n * new Animation_Example();\n */\nexport class Animation extends AnimationBase {\n    /**\n     * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\n     * <p>使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\n     */\n    static framesMap: any = {};\n    /**@private */\n    protected _frames: any[];\n\n\n    /**\n     * 创建一个新的 <code>Animation</code> 实例。\n     */\n    constructor() {\n        super();\n        this._setControlNode(this);\n    }\n\n    /** @inheritDoc\n     *  @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this.stop();\n        super.destroy(destroyChild);\n        this._frames = null;\n        this._labels = null;\n    }\n\n    /**\n     * <p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>\n     * <p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\n     * @param\tloop\t（可选）是否循环播放。\n     * @param\tname\t（可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\n     * @override\n     */\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\n        if (name) this._setFramesFromCache(name, true);\n        super.play(start, loop, name);\n    }\n\n    /**@private */\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\n        if (this._url) name = this._url + \"#\" + name;\n        if (name && Animation.framesMap[name]) {\n            var tAniO: any = Animation.framesMap[name];\n            if (tAniO instanceof Array) {\n                this._frames = Animation.framesMap[name];\n                this._count = this._frames.length;\n            } else {\n                if (tAniO.nodeRoot) {\n                    //如果动画数据未解析过,则先进行解析\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\n                    tAniO = Animation.framesMap[name];\n                }\n                this._frames = tAniO.frames;\n                this._count = this._frames.length;\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\n                this._labels = this._copyLabels(tAniO.labels);\n            }\n            return true;\n        } else {\n            if (showWarn) console.log(\"ani not found:\", name);\n        }\n        return false;\n    }\n\n    /**@private */\n    private _copyLabels(labels: any): any {\n        if (!labels) return null;\n        var rst: any;\n        rst = {};\n        var key: string;\n        for (key in labels) {\n            rst[key] = Utils.copyArray([], labels[key]);\n        }\n        return rst;\n    }\n\n    /**@private \n    *  @override\n    */\n    protected _frameLoop(): void {\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\n            super._frameLoop();\n        }\n    }\n\n    /**@private \n     * @override\n    */\n    protected _displayToIndex(value: number): void {\n        if (this._frames) this.graphics = this._frames[value];\n    }\n\n    /**\n     * 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\n     */\n    get frames(): any[] {\n        return this._frames;\n    }\n\n    set frames(value: any[]) {\n        this._frames = value;\n        if (value) {\n            this._count = value.length;\n            //if (_isPlaying) play(_index, loop, _actionName);\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\n            this.index = this._index;\n        }\n    }\n\n    /**\n     * <p>动画数据源。</p>\n     * <p>类型如下：<br/>\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>\n     * @param value\t数据源。比如：图集：\"xx/a1.atlas\"；图片集合：\"a1.png,a2.png,a3.png\"；LayaAir IDE动画\"xx/a1.ani\"。\n     */\n    set source(value: string) {\n        if (value.indexOf(\".ani\") > -1) this.loadAnimation(value);\n        else if (value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1) this.loadAtlas(value);\n        else this.loadImages(value.split(\",\"));\n    }\n\n    /**\n     * 设置自动播放的动画名称，在LayaAir IDE中可以创建的多个动画组成的动画集合，选择其中一个动画名称进行播放。\n     */\n    set autoAnimation(value: string) {\n        this.play(0, true, value);\n    }\n\n    /**\n     * 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\n     */\n    set autoPlay(value: boolean) {\n        if (value) this.play();\n        else this.stop();\n    }\n\n    /**\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\n     * @override\n     */\n    clear(): AnimationBase {\n        super.clear();\n        this.stop();\n        this.graphics = null;\n        this._frames = null;\n        this._labels = null;\n        return this;\n    }\n\n    /**\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。</p>\n     * @param\turls\t\t图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\n     * @return \t返回Animation对象本身。\n     */\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\n        this._url = \"\";\n        if (!this._setFramesFromCache(cacheName)) {\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\n        }\n        return this;\n    }\n\n    /**\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>\n     * <p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。</p>\n     * @param\turl\t\t\t图集路径。需要创建动画模版时，会以此为数据源。\n     * @param\tloaded\t\t（可选）使用指定图集初始化动画完毕的回调。\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\n     * @return \t返回动画本身。\n     */\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\n        this._url = \"\";\n        var _this: Animation = this;\n        if (!_this._setFramesFromCache(cacheName)) {\n            function onLoaded(loadUrl: string): void {\n                if (url === loadUrl) {\n                    _this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\n                    if (loaded) loaded.run();\n                }\n            }\n            if (Loader.getAtlas(url)) onLoaded(url);\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\n        }\n        return this;\n    }\n\n    /**\n     * <p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。</p>\n     * <p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。</p>\n     * @param\turl \t动画文件路径。可由LayaAir IDE创建并发布。\n     * @param\tloaded\t（可选）使用指定动画资源初始化动画完毕的回调。\n     * @param\tatlas\t（可选）动画用到的图集地址（可选）。\n     * @return \t返回动画本身。\n     */\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\n        this._url = url;\n        var _this: Animation = this;\n        if (!this._actionName) this._actionName = \"\";\n        if (!_this._setFramesFromCache(this._actionName)) {\n            if (!atlas || Loader.getAtlas(atlas)) {\n                this._loadAnimationData(url, loaded, atlas);\n            } else {\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\n            }\n        } else {\n            _this._setFramesFromCache(this._actionName, true);\n            this.index = 0;\n            if (loaded) loaded.run();\n        }\n        return this;\n    }\n\n    /**@private */\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\n        if (atlas && !Loader.getAtlas(atlas)) {\n            console.warn(\"atlas load fail:\" + atlas);\n            return;\n        }\n\n        ILaya.loader.fetch(url, \"json\").then(data => {\n            if (this._url !== url)\n                return;\n\n            if (!data) {\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\n                if (Animation.framesMap[url + \"#\"]) {\n                    this._setFramesFromCache(this._actionName, true);\n                    this.index = 0;\n                    this._resumePlay();\n                    if (loaded) loaded.run();\n                }\n                return;\n            }\n\n            let tAniO: any;\n            if (!Animation.framesMap[url + \"#\"]) {\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\n                if (!aniData) return;\n                //缓存动画数据\n                let aniList: any[] = aniData.animationList;\n                let len: number = aniList.length;\n                let defaultO: any;\n                for (let i = 0; i < len; i++) {\n                    tAniO = aniList[i];\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\n                    if (!defaultO) defaultO = tAniO;\n                }\n                if (defaultO) {\n                    Animation.framesMap[url + \"#\"] = defaultO;\n                    this._setFramesFromCache(this._actionName, true);\n                    this.index = 0;\n                }\n                this._resumePlay();\n            } else {\n                this._setFramesFromCache(this._actionName, true);\n                this.index = 0;\n                this._resumePlay();\n            }\n            if (loaded) loaded.run();\n        });\n    }\n\n    /**\n     * <p>创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。</p>\n     * @param\turl\t\t\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\n     * @param\tname\t\t动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\n     * @return\t动画模板。\n     */\n    static createFrames(url: string | string[], name: string): any[] {\n        var arr: any[];\n        if (typeof (url) == 'string') {\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\n            if (atlas && atlas.frames.length) {\n                let frames = atlas.frames;\n                arr = [];\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\n                    var g: Graphics = new Graphics();\n                    g.drawImage(frames[i], 0, 0);\n                    arr.push(g);\n                }\n            }\n        } else if (url instanceof Array) {\n            arr = [];\n            for (i = 0, n = url.length; i < n; i++) {\n                g = new Graphics();\n                g.loadImage(url[i], 0, 0);\n                arr.push(g);\n            }\n        }\n        if (name) Animation.framesMap[name] = arr;\n        return arr;\n    }\n\n    /**\n     * <p>从动画模版缓存池中清除指定key值的动画数据。</p>\n     * <p>开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。</p>\n     * @param key 动画模板在动画模版缓存池中的key。\n     */\n    static clearCache(key: string): void {\n        var cache: any = Animation.framesMap;\n        var val: string;\n        var key2: string = key + \"#\";\n        for (val in cache) {\n            if (val === key || val.indexOf(key2) === 0) {\n                delete Animation.framesMap[val];\n            }\n        }\n    }\n}\n\n","import { Sprite } from \"./Sprite\";\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Texture } from \"../resource/Texture\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { Resource } from \"../resource/Resource\";\n\n/**\n * <code>BitmapFont</code> 是位图字体类，用于定义位图字体信息。\n * 字体制作及使用方法，请参考文章\n * @see http://ldc2.layabox.com/doc/?nav=ch-js-1-2-5\n */\nexport class BitmapFont {\n    private _texture: Texture;\n    private _fontCharDic: any = {};\n    private _fontWidthMap: any = {};\n    private _path: string;\n    private _maxWidth: number = 0;\n    private _spaceWidth: number = 10;\n    private _padding: any[];\n\n    /**当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。*/\n    fontSize: number = 12;\n    /**表示是否根据实际使用的字体大小缩放位图字体大小。*/\n    autoScaleSize: boolean = false;\n    /**字符间距（以像素为单位）。*/\n    letterSpacing: number = 0;\n\n    /**\n     * 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\n     * @param\tpath\t\t位图字体文件的路径。\n     * @param\tcomplete\t加载并解析完成的回调。\n     */\n    loadFont(path: string, complete: Handler): void {\n        this._path = path;\n\n        if (!path || path.indexOf(\".fnt\") === -1) {\n            console.error('Bitmap font configuration information must be a \".fnt\" file');\n            return;\n        }\n\n        ILaya.loader.load([path, path.replace(\".fnt\", \".png\")]).then((contents: Array<any>) => {\n            this.parseFont(contents[0].data, contents[1]);\n            complete && complete.run();\n        });\n    }\n\n    /**\n     * 解析字体文件。\n     * @param\txml\t\t\t字体文件XML。\n     * @param\ttexture\t\t字体的纹理。\n     */\n    parseFont(xml: XMLDocument, texture: Texture): void {\n        if (xml == null || texture == null) return;\n        this._texture = texture;\n        texture._addReference();\n        let tX: number = 0;\n        let tScale: number = 1;\n\n        let tInfo: any = xml.getElementsByTagName(\"info\");\n        if (!tInfo[0].getAttributeNode) {\n            return this.parseFont2(xml, texture);\n        }\n        this.fontSize = parseInt(tInfo[0].getAttributeNode(\"size\").nodeValue);\n\n        let tPadding: string = tInfo[0].getAttributeNode(\"padding\").nodeValue;\n        let tPaddingArray: any[] = tPadding.split(\",\");\n        this._padding = [parseInt(tPaddingArray[0]), parseInt(tPaddingArray[1]), parseInt(tPaddingArray[2]), parseInt(tPaddingArray[3])];\n\n        let chars = xml.getElementsByTagName(\"char\");\n        for (let i = 0; i < chars.length; i++) {\n            let tAttribute: any = chars[i];\n            let tId: number = parseInt(tAttribute.getAttributeNode(\"id\").nodeValue);\n\n            let xOffset: number = parseInt(tAttribute.getAttributeNode(\"xoffset\").nodeValue) / tScale;\n            let yOffset: number = parseInt(tAttribute.getAttributeNode(\"yoffset\").nodeValue) / tScale;\n            let xAdvance: number = parseInt(tAttribute.getAttributeNode(\"xadvance\").nodeValue) / tScale;\n\n            let region: Rectangle = new Rectangle();\n            region.x = parseInt(tAttribute.getAttributeNode(\"x\").nodeValue);\n            region.y = parseInt(tAttribute.getAttributeNode(\"y\").nodeValue);\n            region.width = parseInt(tAttribute.getAttributeNode(\"width\").nodeValue);\n            region.height = parseInt(tAttribute.getAttributeNode(\"height\").nodeValue);\n\n            let tTexture: Texture = Texture.create(texture, region.x, region.y, region.width, region.height, xOffset, yOffset);\n            this._maxWidth = Math.max(this._maxWidth, xAdvance + this.letterSpacing);\n            this._fontCharDic[tId] = tTexture;\n            this._fontWidthMap[tId] = xAdvance;\n        }\n    }\n\n    /**\n     * 解析字体文件。\n     * @param\txml\t\t\t字体文件XML。\n     * @param\ttexture\t\t字体的纹理。\n     */\n    protected parseFont2(xml: XMLDocument, texture: Texture): void {\n        if (xml == null || texture == null) return;\n        this._texture = texture;\n        let tX: number = 0;\n        let tScale: number = 1;\n\n        let tInfo: any = xml.getElementsByTagName(\"info\");\n        this.fontSize = parseInt(tInfo[0].attributes[\"size\"].nodeValue);\n\n        let tPadding: string = tInfo[0].attributes[\"padding\"].nodeValue;\n        let tPaddingArray: any[] = tPadding.split(\",\");\n        this._padding = [parseInt(tPaddingArray[0]), parseInt(tPaddingArray[1]), parseInt(tPaddingArray[2]), parseInt(tPaddingArray[3])];\n\n        let chars = xml.getElementsByTagName(\"char\");\n        for (let i = 0; i < chars.length; i++) {\n            let tAttribute = chars[i].attributes;\n            let tId: number = parseInt((tAttribute as any)[\"id\"].nodeValue);\n\n            let xOffset: number = parseInt((tAttribute as any)[\"xoffset\"].nodeValue) / tScale;\n            let yOffset: number = parseInt((tAttribute as any)[\"yoffset\"].nodeValue) / tScale;\n\n            let xAdvance: number = parseInt((tAttribute as any)[\"xadvance\"].nodeValue) / tScale;\n\n            let region: Rectangle = new Rectangle();\n            region.x = parseInt((tAttribute as any)[\"x\"].nodeValue);\n            region.y = parseInt((tAttribute as any)[\"y\"].nodeValue);\n            region.width = parseInt((tAttribute as any)[\"width\"].nodeValue);\n            region.height = parseInt((tAttribute as any)[\"height\"].nodeValue);\n\n            let tTexture: Texture = Texture.create(texture, region.x, region.y, region.width, region.height, xOffset, yOffset);\n            this._maxWidth = Math.max(this._maxWidth, xAdvance + this.letterSpacing);\n            this._fontCharDic[tId] = tTexture;\n            this._fontWidthMap[tId] = xAdvance;\n        }\n    }\n    /**\n     * 获取指定字符的字体纹理对象。\n     * @param\tchar 字符。\n     * @return 指定的字体纹理对象。\n     */\n    getCharTexture(char: string): Texture {\n        return this._fontCharDic[char.charCodeAt(0)];\n    }\n\n    /**\n     * 销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。\n     */\n     destroy(): void {\n        if (this._texture) {\n            for (let k in this._fontCharDic) {\n                this._fontCharDic[k].destroy();\n            }\n            this._texture._removeReference();\n            this._fontCharDic = null;\n            this._fontWidthMap = null;\n            this._texture = null;\n            this._padding = null;\n        }\n    }\n\n    /**\n     * 设置空格的宽（如果字体库有空格，这里就可以不用设置了）。\n     * @param\tspaceWidth 宽度，单位为像素。\n     */\n    setSpaceWidth(spaceWidth: number): void {\n        this._spaceWidth = spaceWidth;\n    }\n\n    /**\n     * 获取指定字符的宽度。\n     * @param\tchar 字符。\n     * @return  宽度。\n     */\n    getCharWidth(char: string): number {\n        let code: number = char.charCodeAt(0);\n        if (this._fontWidthMap[code]) return this._fontWidthMap[code] + this.letterSpacing;\n        if (char === \" \") return this._spaceWidth + this.letterSpacing;\n        return 0;\n    }\n\n    /**\n     * 获取指定文本内容的宽度。\n     * @param\ttext 文本内容。\n     * @return  宽度。\n     */\n    getTextWidth(text: string): number {\n        let tWidth: number = 0;\n        for (let i: number = 0, n: number = text.length; i < n; i++) {\n            tWidth += this.getCharWidth(text.charAt(i));\n        }\n        return tWidth;\n    }\n\n    /**\n     * 获取最大字符宽度。\n     */\n    getMaxWidth(): number {\n        return this._maxWidth;\n    }\n\n    /**\n     * 获取最大字符高度。\n     */\n    getMaxHeight(): number {\n        return this.fontSize;\n    }\n\n    /**\n     * @internal\n     * 将指定的文本绘制到指定的显示对象上。\n     */\n    _drawText(text: string, sprite: Sprite, drawX: number, drawY: number, align: string, width: number): void {\n        let tWidth: number = this.getTextWidth(text);\n        let tTexture: Texture;\n        let dx: number = 0;\n        align === \"center\" && (dx = (width - tWidth) / 2);\n        align === \"right\" && (dx = (width - tWidth));\n        let tx: number = 0;\n        for (let i: number = 0, n: number = text.length; i < n; i++) {\n            tTexture = this.getCharTexture(text.charAt(i));\n            if (tTexture) {\n                sprite.graphics.drawImage(tTexture, drawX + tx + dx, drawY);\n                tx += this.getCharWidth(text.charAt(i));\n            }\n        }\n    }\n}","import { FrameAnimation } from \"./FrameAnimation\";\nimport { ClassUtils } from \"../utils/ClassUtils\"\nimport { Ease } from \"../utils/Ease\"\n\n/**\n * <p> 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。 当一个动效开始播放时，其他动效会自动停止播放。</p>\n * <p> 可以通过LayaAir IDE创建。 </p>\n */\nexport class EffectAnimation extends FrameAnimation {\n    /**\n     * @private\n     * 动效开始事件。\n     */\n    private static EFFECT_BEGIN: string = \"effectbegin\";\n\n    /**@internal */\n    private _target: any;\n    /**@internal */\n    private _playEvent: string;\n    /**@internal */\n    private _initData: any = {};\n    /**@internal */\n    private _aniKeys: any[];\n    /**@internal */\n    private _effectClass: new () => any;\n\n    /**\n     * 本实例的目标对象。通过本实例控制目标对象的属性变化。\n     * @param v 指定的目标对象。\n     */\n    set target(v: any) {\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\n        this._target = v;\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\n        this._addEvent();\n    }\n\n    get target(): any {\n        return this._target;\n    }\n\n    /**@private */\n    private _onOtherBegin(effect: any): void {\n        if (effect === this) return;\n        this.stop();\n    }\n\n    /**\n     * 设置开始播放的事件。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\n     * @param event\n     */\n    set playEvent(event: string) {\n        this._playEvent = event;\n        if (!event) return;\n        this._addEvent();\n    }\n\n    /**@internal */\n    private _addEvent(): void {\n        if (!this._target || !this._playEvent) return;\n        this._setControlNode(this._target);\n        this._target.on(this._playEvent, this, this._onPlayAction);\n    }\n\n    /**@internal */\n    private _onPlayAction(): void {\n        this.play(0, false);\n    }\n    /**\n     * @param start \n     * @param loop \n     * @param name \n     * @override\n     */\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\n        if (!this._target)\n            return;\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\n        this._recordInitData();\n        super.play(start, loop, name);\n    }\n\n    /**@private */\n    private _recordInitData(): void {\n        if (!this._aniKeys) return;\n        var i: number, len: number;\n        len = this._aniKeys.length;\n        var key: string;\n        for (i = 0; i < len; i++) {\n            key = this._aniKeys[i];\n            this._initData[key] = this._target[key];\n        }\n    }\n\n    /**\n     * 设置提供数据的类。\n     * @param classStr 类路径\n     */\n    set effectClass(classStr: string) {\n        this._effectClass = ClassUtils.getClass(classStr);\n        if (this._effectClass) {\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\n            if (uiData) {\n                var aniData: any[] = uiData[\"animations\"];\n                if (aniData && aniData[0]) {\n                    var data: any = aniData[0];\n                    this._setUp({}, data);\n                    if (data.nodes && data.nodes[0]) {\n                        this._aniKeys = data.nodes[0].keys;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 设置动画数据。\n     * @param uiData\n     */\n    set effectData(uiData: any) {\n        if (uiData) {\n            var aniData: any[] = uiData[\"animations\"];\n            if (aniData && aniData[0]) {\n                var data: any = aniData[0];\n                this._setUp({}, data);\n                if (data.nodes && data.nodes[0]) {\n                    this._aniKeys = data.nodes[0].keys;\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n    */\n    protected _displayToIndex(value: number): void {\n        if (!this._animationData) return;\n        if (value < 0) value = 0;\n        if (value > this._count) value = this._count;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\n        len = len > 1 ? 1 : len;\n        for (i = 0; i < len; i++) {\n            this._displayNodeToFrame(nodes[i], value);\n        }\n    }\n\n    /**\n     * @override\n    */\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\n        if (!this._target) return;\n        var target: any = this._target;\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\n        var secondFrames: any = node.secondFrames;\n        var tSecondFrame: number;\n        var easeFun: Function;\n        var tKeyFrames: any[];\n        var startFrame: any;\n        var endFrame: any;\n        for (i = 0; i < len; i++) {\n            key = keys[i];\n            propFrames = frames[key];\n            tSecondFrame = secondFrames[key];\n            if (tSecondFrame == -1) {\n                value = this._initData[key];\n            } else {\n                if (frame < tSecondFrame) {\n                    tKeyFrames = node.keyframes[key];\n                    startFrame = tKeyFrames[0];\n                    if (startFrame.tween) {\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\n                        if (easeFun == null) easeFun = Ease.linearNone;\n                        endFrame = tKeyFrames[1];\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\n                    } else {\n                        value = this._initData[key];\n                    }\n\n                } else {\n                    if (propFrames.length > frame) value = propFrames[frame];\n                    else value = propFrames[propFrames.length - 1];\n                }\n            }\n            target[key] = value;\n        }\n    }\n\n    /**\n     * @internal\n    */\n    protected _calculateKeyFrames(node: any): void {\n        super._calculateKeyFrames(node);\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\n\n        var secondFrames: any = {};\n        node.secondFrames = secondFrames;\n        for (key in keyFrames) {\n            tKeyFrames = keyFrames[key];\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\n            else secondFrames[key] = tKeyFrames[1].index;\n        }\n    }\n}","import { SpriteStyle } from \"./SpriteStyle\";\nimport { BitmapFont } from \"../BitmapFont\"\nimport { Sprite } from \"../Sprite\"\nimport { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 文本的样式类\n */\nexport class TextStyle extends SpriteStyle {\n    /**\n    * 一个已初始化的 <code>TextStyle</code> 实例。\n    */\n    static EMPTY: TextStyle = new TextStyle();\n    /**\n     * 表示使用此文本格式的文本是否为斜体。\n     * @default false\n     */\n    italic: boolean = false;\n    /**\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\n     * @default  \"left\"\n     */\n    align: string;\n    /**\n     * <p>表示使用此文本格式的文本字段是否自动换行。</p>\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\n     * @default false。\n     */\n    wordWrap: boolean;\n    /**\n     * <p>垂直行间距（以像素为单位）</p>\n     */\n    leading: number;\n    /**\n     * <p>默认边距信息</p>\n     * <p>[左边距，上边距，右边距，下边距]（边距以像素为单位）</p>\n     */\n    padding: any[];\n    /**\n     * 文本背景颜色，以字符串表示。\n     */\n    bgColor: string|null;\n    /**\n     * 文本边框背景颜色，以字符串表示。\n     */\n    borderColor: string|null;\n    /**\n     * <p>指定文本字段是否是密码文本字段。</p>\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\n     */\n    asPassword: boolean;\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * 默认值0，表示不描边。\n     * @default 0\n     */\n    stroke: number;\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * @default \"#000000\";\n     */\n    strokeColor: string;\n    /**是否为粗体*/\n    bold: boolean;\n    /**是否显示下划线*/\n    underline: boolean;\n    /**下划线颜色*/\n    underlineColor: string|null;\n    /**当前使用的位置字体。*/\n    currBitmapFont: BitmapFont|null;\n    /**\n     * @override\n     */\n    reset(): SpriteStyle {\n        super.reset();\n        this.italic = false;\n        this.align = \"left\";\n        this.wordWrap = false;\n        this.leading = 0;\n        this.padding = [0, 0, 0, 0];\n        this.bgColor = null;\n        this.borderColor = null;\n        this.asPassword = false;\n        this.stroke = 0;\n        this.strokeColor = \"#000000\";\n        this.bold = false;\n        this.underline = false;\n        this.underlineColor = null;\n        this.currBitmapFont = null;\n        return this;\n    }\n    /**\n     * @override\n     */\n    recover(): void {\n        if (this === TextStyle.EMPTY)\n            return;\n        Pool.recover(\"TextStyle\", this.reset());\n    }\n\n    /**\n     * 从对象池中创建\n     */\n    static create(): TextStyle {\n        return Pool.getItemByClass(\"TextStyle\", TextStyle);\n    }\n\n    /**@inheritDoc\t */\n    render(sprite: Sprite, context: Context, x: number, y: number): void {\n\t\t(this.bgColor || this.borderColor) && context.drawRect(x-this.pivotX, y-this.pivotY, sprite.width, sprite.height, this.bgColor, this.borderColor, 1);\n    }\n}\n\n","import { Sprite } from \"./Sprite\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { SpriteConst } from \"./SpriteConst\";\nimport { SpriteStyle } from \"./css/SpriteStyle\"\nimport { TextStyle } from \"./css/TextStyle\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { WordText } from \"../utils/WordText\"\nimport { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { Config } from \"../../Config\";\n\n/**\n * 文本内容发生改变后调度。\n * @eventType Event.CHANGE\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Text</code> 类用于创建显示对象以显示文本。</p>\n * <p>\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\n * </p>\n * @example\n * package\n * {\n * \timport laya.display.Text;\n * \tpublic class Text_Example\n * \t{\n * \t\tpublic function Text_Example()\n * \t\t{\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * \t\t\tonInit();\n * \t\t}\n * \t\tprivate function onInit():void\n * \t\t{\n * \t\t\tvar text:Text = new Text();//创建一个 Text 类的实例对象 text 。\n * \t\t\ttext.text = \"这个是一个 Text 文本示例。\";\n * \t\t\ttext.color = \"#008fff\";//设置 text 的文本颜色。\n * \t\t\ttext.font = \"Arial\";//设置 text 的文本字体。\n * \t\t\ttext.bold = true;//设置 text 的文本显示为粗体。\n * \t\t\ttext.fontSize = 30;//设置 text 的字体大小。\n * \t\t\ttext.wordWrap = true;//设置 text 的文本自动换行。\n * \t\t\ttext.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\n * \t\t\ttext.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\n * \t\t\ttext.width = 300;//设置 text 的宽度。\n * \t\t\ttext.height = 200;//设置 text 的高度。\n * \t\t\ttext.italic = true;//设置 text 的文本显示为斜体。\n * \t\t\ttext.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\n * \t\t\tLaya.stage.addChild(text);//将 text 添加到显示列表。\n * \t\t}\n * \t}\n * }\n * @example\n * Text_Example();\n * function Text_Example()\n * {\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *     onInit();\n * }\n * function onInit()\n * {\n *     var text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\n *     text.text = \"这个是一个 Text 文本示例。\";\n *     text.color = \"#008fff\";//设置 text 的文本颜色。\n *     text.font = \"Arial\";//设置 text 的文本字体。\n *     text.bold = true;//设置 text 的文本显示为粗体。\n *     text.fontSize = 30;//设置 text 的字体大小。\n *     text.wordWrap = true;//设置 text 的文本自动换行。\n *     text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\n *     text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\n *     text.width = 300;//设置 text 的宽度。\n *     text.height = 200;//设置 text 的高度。\n *     text.italic = true;//设置 text 的文本显示为斜体。\n *     text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\n *     Laya.stage.addChild(text);//将 text 添加到显示列表。\n * }\n * @example\n * class Text_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         var text: laya.display.Text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\n *         text.text = \"这个是一个 Text 文本示例。\";\n *         text.color = \"#008fff\";//设置 text 的文本颜色。\n *         text.font = \"Arial\";//设置 text 的文本字体。\n *         text.bold = true;//设置 text 的文本显示为粗体。\n *         text.fontSize = 30;//设置 text 的字体大小。\n *         text.wordWrap = true;//设置 text 的文本自动换行。\n *         text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\n *         text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\n *         text.width = 300;//设置 text 的宽度。\n *         text.height = 200;//设置 text 的高度。\n *         text.italic = true;//设置 text 的文本显示为斜体。\n *         text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\n *         Laya.stage.addChild(text);//将 text 添加到显示列表。\n *     }\n * }\n */\nexport class Text extends Sprite {\n\n    /**visible不进行任何裁切。*/\n    static VISIBLE: string = \"visible\";\n    /**scroll 不显示文本域外的字符像素，并且支持 scroll 接口。*/\n    static SCROLL: string = \"scroll\";\n    /**hidden 不显示超出文本域的字符。*/\n    static HIDDEN: string = \"hidden\";\n\n    /**语言包，是一个包含key:value的集合，用key索引，替换为目标value语言*/\n    static langPacks: any;\n    /**@internal 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可*/\n    static _testWord: string = \"游\";\n    /**@private 位图字体字典。*/\n    private static _bitmapFonts: any;\n    //TODO:\n    static CharacterCache: boolean = true;\n    /**是否是从右向左的显示顺序*/\n    static RightToLeft: boolean = false;\n\n    /**@private */\n    private _clipPoint: Point | null;\n    /**@private 表示文本内容字符串。*/\n    protected _text: string;\n    /**@private 表示文本内容是否发生改变。*/\n    protected _isChanged: boolean;\n    /**@private 表示文本的宽度，以像素为单位。*/\n    protected _textWidth: number = 0;\n    /**@private 表示文本的高度，以像素为单位。*/\n    protected _textHeight: number = 0;\n    /**@private 存储文字行数信息。*/\n    protected _lines: string[] | null = [];\n    /**@private 保存每行宽度*/\n    protected _lineWidths: number[] | null = [];\n    /**@private 文本的内容位置 X 轴信息。*/\n    protected _startX: number = 0;\n    /**@private 文本的内容位置X轴信息。 */\n    protected _startY: number = 0;\n    /**@private */\n    protected _words: WordText[] | null;\n    /**@private */\n    protected _charSize: any = {};\n    /**@private */\n    protected _valign: string = \"top\";\n    /**@internal */\n    _fontSize: number = Config.defaultFontSize;\n    /**@internal */\n    _font: string = Config.defaultFont;\n    /**@internal */\n    _color: string = \"#000000\";\n\n    /**@private */\n    private _singleCharRender: boolean = false;\t// 拆分渲染\n\n    /**\n     * <p>overflow 指定文本超出文本域后的行为。其值为\"hidden\"、\"visible\"和\"scroll\"之一。</p>\n     * <p>性能从高到低依次为：hidden > visible > scroll。</p>\n     */\n    overflow: string = Text.VISIBLE;\n\n    /**\n     * 创建一个新的 <code>Text</code> 实例。\n     */\n    constructor() {\n        super();\n        this._style = TextStyle.EMPTY;\n    }\n\n    /**\n     * @private\n     * 获取样式。\n     * @return  样式 Style 。\n     * @override\n     */\n    getStyle(): SpriteStyle {\n        this._style === TextStyle.EMPTY && (this._style = TextStyle.create());\n        return this._style;\n    }\n\n    protected _getTextStyle(): TextStyle {\n        if (this._style === TextStyle.EMPTY) {\n            this._style = TextStyle.create();\n        }\n        return (<TextStyle>this._style);\n    }\n\n    /**\n     * 注册位图字体。\n     * @param\tname\t\t位图字体的名称。\n     * @param\tbitmapFont\t位图字体文件。\n     */\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\n        Text._bitmapFonts || (Text._bitmapFonts = {});\n        Text._bitmapFonts[name] = bitmapFont;\n    }\n\n    /**\n     * 移除注册的位图字体文件。\n     * @param\tname\t\t位图字体的名称。\n     * @param\tdestroy\t\t是否销毁指定的字体文件。\n     */\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\n        if (Text._bitmapFonts && Text._bitmapFonts[name]) {\n            var tBitmapFont: BitmapFont = Text._bitmapFonts[name];\n            if (destroy) tBitmapFont.destroy();\n            delete Text._bitmapFonts[name];\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._clipPoint = null;\n        this._lines = null;\n        this._lineWidths = null;\n\n        // 注意_words是一个数组（例如有换行）\n        this._words && this._words.forEach(function (w: WordText): void {\n            w.cleanCache();\n        });\n        this._words = null;\n\n        this._charSize = null;\n    }\n\n    /**\n     * @internal\n     * @inheritDoc\n     * @override\n     */\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\n        var rec: Rectangle = Rectangle.TEMP;\n        rec.setTo(0, 0, this.width, this.height);\n        return rec._getBoundPoints();\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    getGraphicBounds(realSize: boolean = false): Rectangle {\n        var rec: Rectangle = Rectangle.TEMP;\n        rec.setTo(0, 0, this.width, this.height);\n        return rec;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get width(): number {\n        if (this._width) return this._width;\n        return this.textWidth + this.padding[1] + this.padding[3];\n    }\n    /**\n     * @override\n     */\n    set width(value: number) {\n        if (value != this._width) {\n            super.set_width(value);\n            this.isChanged = true;\n            if (this.borderColor) {\n                this._setBorderStyleColor(0, 0, this.width, this.height, this.borderColor, 1);\n            }\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _getCSSStyle(): TextStyle {\n        return (<TextStyle>this._style);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get height(): number {\n        if (this._height) return this._height;\n        return this.textHeight;\n    }\n    /**\n     * @override\n     */\n    set height(value: number) {\n        if (value != this._height) {\n            super.set_height(value);\n            this.isChanged = true;\n            if (this.borderColor) {\n                this._setBorderStyleColor(0, 0, this.width, this.height, this.borderColor, 1);\n            }\n        }\n    }\n\n    /**\n     * 表示文本的宽度，以像素为单位。\n     */\n    get textWidth(): number {\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this.typeset);\n        return this._textWidth;\n    }\n\n    /**\n     * 表示文本的高度，以像素为单位。\n     */\n    get textHeight(): number {\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this.typeset);\n        return this._textHeight;\n    }\n\n    /** 当前文本的内容字符串。*/\n    get text(): string {\n        return this._text || \"\";\n    }\n\n    // 为了转ts。ts不支持super.get set\n    get_text(): string {\n        return this._text || \"\";\n    }\n    set_text(value: string): void {\n        if (this._text !== value) {\n            this.lang(value + \"\");\n            this.isChanged = true;\n            this.event(Event.CHANGE);\n            if (this.borderColor) {\n                this._setBorderStyleColor(0, 0, this.width, this.height, this.borderColor, 1);\n            }\n        }\n    }\n\n    set text(value: string) {\n        this.set_text(value);\n    }\n\n    /**\n     * <p>根据指定的文本，从语言包中取当前语言的文本内容。并对此文本中的{i}文本进行替换。</p>\n     * <p>设置Text.langPacks语言包后，即可使用lang获取里面的语言</p>\n     * <p>例如：\n     * <li>（1）text 的值为“我的名字”，先取到这个文本对应的当前语言版本里的值“My name”，将“My name”设置为当前文本的内容。</li>\n     * <li>（2）text 的值为“恭喜你赢得{0}个钻石，{1}经验。”，arg1 的值为100，arg2 的值为200。\n     * \t\t\t则先取到这个文本对应的当前语言版本里的值“Congratulations on your winning {0} diamonds, {1} experience.”，\n     * \t\t\t然后将文本里的{0}、{1}，依据括号里的数字从0开始替换为 arg1、arg2 的值。\n     * \t\t\t将替换处理后的文本“Congratulations on your winning 100 diamonds, 200 experience.”设置为当前文本的内容。\n     * </li>\n     * </p>\n     * @param\ttext 文本内容。\n     * @param\t...args 文本替换参数。\n     */\n    lang(text: string, arg1: any = null, arg2: any = null, arg3: any = null, arg4: any = null, arg5: any = null, arg6: any = null, arg7: any = null, arg8: any = null, arg9: any = null, arg10: any = null): void {\n        text = Text.langPacks && Text.langPacks[text] ? Text.langPacks[text] : text;\n        if (arguments.length < 2) {\n            this._text = text;\n        } else {\n            for (var i: number = 0, n: number = arguments.length; i < n; i++) {\n                text = text.replace(\"{\" + i + \"}\", arguments[i + 1]);\n            }\n            this._text = text;\n        }\n    }\n\n    /**\n     * <p>文本的字体名称，以字符串形式表示。</p>\n     * <p>默认值为：\"Arial\"，可以通过Text.defaultFont设置默认字体。</p>\n     * <p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>\n     */\n    get font(): string {\n        return this._font;\n    }\n\n    set font(value: string) {\n        if (((<TextStyle>this._style)).currBitmapFont) {\n            this._getTextStyle().currBitmapFont = null;\n            this.scale(1, 1);\n        }\n        if (Text._bitmapFonts && Text._bitmapFonts[value]) {\n            this._getTextStyle().currBitmapFont = Text._bitmapFonts[value];\n        }\n\n        this._font = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>指定文本的字体大小（以像素为单位）。</p>\n     * <p>默认为20像素，可以通过 <code>Text.defaultFontSize</code> 设置默认大小。</p>\n     */\n    get fontSize(): number {\n        return this._fontSize;\n    }\n\n    set fontSize(value: number) {\n        if (this._fontSize != value) {\n            this._fontSize = value;\n            this.isChanged = true;\n        }\n    }\n\n    /**\n     * <p>指定文本是否为粗体字。</p>\n     * <p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>\n     */\n    get bold(): boolean {\n        return ((<TextStyle>this._style)).bold;\n    }\n\n    set bold(value: boolean) {\n        this._getTextStyle().bold = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>\n     * <p>默认值为黑色。</p>\n     */\n    get color(): string {\n        return this._color;\n    }\n\n    set color(value: string) {\n        this.set_color(value);\n    }\n\n    // for转ts。 ts不支持 super.get/set\n    get_color(): string {\n        return this._color;\n    }\n    set_color(value: string): void {\n        if (this._color != value) {\n            this._color = value;\n            //如果仅仅更新颜色，无需重新排版\n            if (!this._isChanged && this._graphics) {\n                this._graphics.replaceTextColor(this.color)\n            } else {\n                this.isChanged = true;\n            }\n        }\n    }\n\n    /**\n     * <p>表示使用此文本格式的文本是否为斜体。</p>\n     * <p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>\n     */\n    get italic(): boolean {\n        return ((<TextStyle>this._style)).italic;\n    }\n\n    set italic(value: boolean) {\n        this._getTextStyle().italic = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>表示文本的水平显示方式。</p>\n     * <p><b>取值：</b>\n     * <li>\"left\"： 居左对齐显示。</li>\n     * <li>\"center\"： 居中对齐显示。</li>\n     * <li>\"right\"： 居右对齐显示。</li>\n     * </p>\n     */\n    get align(): string {\n        return ((<TextStyle>this._style)).align;\n    }\n\n    set align(value: string) {\n        this._getTextStyle().align = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>表示文本的垂直显示方式。</p>\n     * <p><b>取值：</b>\n     * <li>\"top\"： 居顶部对齐显示。</li>\n     * <li>\"middle\"： 居中对齐显示。</li>\n     * <li>\"bottom\"： 居底部对齐显示。</li>\n     * </p>\n     */\n    get valign(): string {\n        return this._valign;\n    }\n\n    set valign(value: string) {\n        this._valign = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>表示文本是否自动换行，默认为false。</p>\n     * <p>若值为true，则自动换行；否则不自动换行。</p>\n     */\n    get wordWrap(): boolean {\n        return ((<TextStyle>this._style)).wordWrap;\n    }\n\n    set wordWrap(value: boolean) {\n        this._getTextStyle().wordWrap = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * 垂直行间距（以像素为单位）。\n     */\n    get leading(): number {\n        return ((<TextStyle>this._style)).leading;\n    }\n\n    set leading(value: number) {\n        this._getTextStyle().leading = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>边距信息。</p>\n     * <p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>\n     */\n    get padding(): any[] {\n        return ((<TextStyle>this._style)).padding;\n    }\n\n    set padding(value: any[]) {\n        if (typeof (value) == 'string') {\n            var arr: any[];\n            arr = ((<string>(value as any))).split(\",\");\n            var i: number, len: number;\n            len = arr.length;\n            while (arr.length < 4) {\n                arr.push(0);\n            }\n            for (i = 0; i < len; i++) {\n                arr[i] = parseFloat(arr[i]) || 0;\n            }\n            value = arr;\n        }\n        this._getTextStyle().padding = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * 文本背景颜色，以字符串表示。\n     */\n    get bgColor(): string {\n        return ((<TextStyle>this._style)).bgColor;\n    }\n\n    set bgColor(value: string) {\n        this.set_bgColor(value);\n    }\n\n    // fot ts\n    set_bgColor(value: string): void {\n        this._getTextStyle().bgColor = value;\n        this._renderType |= SpriteConst.STYLE;\n        this._setBgStyleColor(0, 0, this.width, this.height, value);\n        this._setRenderType(this._renderType);\n        this.isChanged = true;\n    }\n    get_bgColor(): string {\n        return ((<TextStyle>this._style)).bgColor;\n    }\n\n    /**\n     * 文本边框背景颜色，以字符串表示。\n     */\n    get borderColor(): string {\n        return ((<TextStyle>this._style)).borderColor;\n    }\n\n    set borderColor(value: string) {\n        this._getTextStyle().borderColor = value;\n        this._renderType |= SpriteConst.STYLE;\n        this._setBorderStyleColor(0, 0, this.width, this.height, value, 1);\n        this._setRenderType(this._renderType);\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * <p>默认值0，表示不描边。</p>\n     */\n    get stroke(): number {\n        return ((<TextStyle>this._style)).stroke;\n    }\n\n    set stroke(value: number) {\n        this._getTextStyle().stroke = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * <p>默认值为 \"#000000\"（黑色）;</p>\n     */\n    get strokeColor(): string {\n        return ((<TextStyle>this._style)).strokeColor;\n    }\n\n    set strokeColor(value: string) {\n        this._getTextStyle().strokeColor = value;\n        this.isChanged = true;\n    }\n\n    /**\n     * @private\n     * 一个布尔值，表示文本的属性是否有改变。若为true表示有改变。\n     */\n    protected set isChanged(value: boolean) {\n        if (this._isChanged !== value) {\n            this._isChanged = value;\n            value && ILaya.systemTimer.callLater(this, this.typeset);\n        }\n    }\n\n    /**\n     * @private\n     */\n    protected _getContextFont(): string {\n        return (this.italic ? \"italic \" : \"\") + (this.bold ? \"bold \" : \"\") + this.fontSize + \"px \" + (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[this.font] || this.font) : this.font);\n    }\n\n    /**\n     * @private\n     */\n    protected _isPassWordMode(): boolean {\n        var style: TextStyle = (<TextStyle>this._style);\n        var password: boolean = style.asPassword;\n        if ((\"prompt\" in (this as any)) && (this as any)['prompt'] == this._text)\n            password = false;\n        return password;\n    }\n\n    /**\n     * @private\n     */\n    protected _getPassWordTxt(txt: string): string {\n        var len: number = txt.length;\n        var word: string;\n        word = \"\";\n        for (var j: number = len; j > 0; j--) {\n            word += \"●\";\n        }\n        return word;\n    }\n\n    /**\n     * @private\n     * 渲染文字。\n     * @param\tbegin 开始渲染的行索引。\n     * @param\tvisibleLineCount 渲染的行数。\n     */\n    protected _renderText(): void {\n        var padding = this.padding;\n        var visibleLineCount = this._lines.length;\n        // overflow为scroll或visible时会截行\n        if (this.overflow != Text.VISIBLE) {\n            visibleLineCount = Math.min(visibleLineCount, Math.floor((this.height - padding[0] - padding[2]) / (this.leading + this._charSize.height)) + 1);\n        }\n\n        var beginLine = this.scrollY / (this._charSize.height + this.leading) | 0;\n\n        var graphics = this.graphics;\n        graphics.clear(true);\n\n        var ctxFont = this._getContextFont();\n        ILaya.Browser.context.font = ctxFont;\n\n        //处理垂直对齐\n        var startX = padding[3];\n        var textAlgin = \"left\";\n        var lines = this._lines;\n        var lineHeight = this.leading + this._charSize.height;\n        var tCurrBitmapFont = ((<TextStyle>this._style)).currBitmapFont;\n        if (tCurrBitmapFont) {\n            lineHeight = this.leading + tCurrBitmapFont.getMaxHeight();\n        }\n        var startY = padding[0];\n\n        //处理水平对齐\n        if ((!tCurrBitmapFont) && this._width > 0 && this._textWidth <= this._width) {\n            if (this.align == \"right\") {\n                textAlgin = \"right\";\n                startX = this._width - padding[1];\n            } else if (this.align == \"center\") {\n                textAlgin = \"center\";\n                startX = this._width * 0.5 + padding[3] - padding[1];\n            }\n        }\n\n        //drawBg(style);\n        let bitmapScale = 1;\n        if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize) {\n            bitmapScale = tCurrBitmapFont.fontSize / this.fontSize;\n        }\n\n        if (this._height > 0) {\n            var tempVAlign = (this._textHeight > this._height) ? \"top\" : this.valign;\n            if (tempVAlign === \"middle\")\n                startY = (this._height - visibleLineCount / bitmapScale * lineHeight) * 0.5 + padding[0] - padding[2];\n            else if (tempVAlign === \"bottom\")\n                startY = this._height - visibleLineCount / bitmapScale * lineHeight - padding[2];\n        }\n\n        //渲染\n        if (this._clipPoint) {\n            graphics.save();\n            if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize) {\n                var tClipWidth: number;\n                var tClipHeight: number;\n\n                this._width ? tClipWidth = (this._width - padding[3] - padding[1]) : tClipWidth = this._textWidth;\n                this._height ? tClipHeight = (this._height - padding[0] - padding[2]) : tClipHeight = this._textHeight;\n\n                tClipWidth *= bitmapScale;\n                tClipHeight *= bitmapScale;\n\n                graphics.clipRect(padding[3], padding[0], tClipWidth, tClipHeight);\n            } else {\n                graphics.clipRect(padding[3], padding[0], this._width ? (this._width - padding[3] - padding[1]) : this._textWidth, this._height ? (this._height - padding[0] - padding[2]) : this._textHeight);\n            }\n            this.repaint();\n        }\n\n        var style = <TextStyle>this._style;\n        var password = style.asPassword;\n        // 输入框的prompt始终显示明文\n        if ((\"prompt\" in (this as any)) && (this as any)['prompt'] == this._text)\n            password = false;\n\n        var x = 0, y = 0;\n        var end = Math.min(this._lines.length, visibleLineCount + beginLine) || 1;\n        for (var i = beginLine; i < end; i++) {\n            var word = lines[i];\n            var _word: any;\n            if (password) {\n                let len = word.length;\n                word = \"\";\n                for (var j = len; j > 0; j--) {\n                    word += \"●\";\n                }\n            }\n\n            if (word == null) word = \"\";\n            x = startX - (this._clipPoint ? this._clipPoint.x : 0);\n            y = startY + lineHeight * i - (this._clipPoint ? this._clipPoint.y : 0);\n\n            this.underline && this._drawUnderline(textAlgin, x, y, i);\n\n            if (tCurrBitmapFont) {\n                var tWidth = this.width;\n                if (tCurrBitmapFont.autoScaleSize) {\n                    tWidth = this.width * bitmapScale;\n                    x *= bitmapScale;\n                    y *= bitmapScale;\n                }\n                tCurrBitmapFont._drawText(word, this, x, y, this.align, tWidth);\n            } else {\n                this._words || (this._words = []);\n                if (this._words.length > (i - beginLine)) {\n                    _word = this._words[i - beginLine];\n                } else {\n                    _word = new WordText();\n                    this._words.push(_word);\n                }\n                _word.setText(word);\n                ((<WordText>_word)).splitRender = this._singleCharRender;\n                style.stroke ? graphics.fillBorderText(_word, x, y, ctxFont, this.color, textAlgin, style.stroke, style.strokeColor) : graphics.fillText(_word, x, y, ctxFont, this.color, textAlgin);\n            }\n        }\n        if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize) {\n            var tScale = 1 / bitmapScale;\n            this.scale(tScale, tScale);\n        }\n\n        if (this._clipPoint) graphics.restore();\n\n        this._startX = startX;\n        this._startY = startY;\n    }\n\n    /**\n     * @private\n     * 绘制下划线\n     * @param\tx 本行坐标\n     * @param\ty 本行坐标\n     * @param\tlineIndex 本行索引\n     */\n    private _drawUnderline(align: string, x: number, y: number, lineIndex: number): void {\n        var lineWidth: number = this._lineWidths[lineIndex];\n        switch (align) {\n            case 'center':\n                x -= lineWidth / 2;\n                break;\n            case 'right':\n                x -= lineWidth;\n                break;\n            case 'left':\n            default:\n                break;\n        }\n\n        y += this._charSize.height;\n        this._graphics.drawLine(x, y, x + lineWidth, y, this.underlineColor || this.color, 1);\n    }\n\n    /**\n     * <p>排版文本。</p>\n     * <p>进行宽高计算，渲染、重绘文本。</p>\n     */\n    typeset(): void {\n        this._isChanged = false;\n\n        if (!this._text) {\n            this._clipPoint = null;\n            this._textWidth = this._textHeight = 0;\n            this.graphics.clear(true);\n            return;\n        }\n\n        if (LayaEnv.isConch) {\n            (window as any).conchTextCanvas.font = this._getContextFont();;\n        } else {\n            ILaya.Browser.context.font = this._getContextFont();\n        }\n\n        this._lines.length = 0;\n        this._lineWidths.length = 0;\n        if (this._isPassWordMode())//如果是password显示状态应该使用密码符号计算\n        {\n            this._parseLines(this._getPassWordTxt(this._text));\n        } else\n            this._parseLines(this._text);\n\n        this._evalTextSize();\n        //启用Viewport\n        if (this._checkEnabledViewportOrNot()) this._clipPoint || (this._clipPoint = new Point(0, 0));\n        //否则禁用Viewport\n        else this._clipPoint = null;\n\n        this._renderText();\n    }\n\n    /**@private */\n    private _evalTextSize(): void {\n        var nw: number, nh: number;\n        nw = Math.max.apply(this, this._lineWidths);\n\n        //计算textHeight\n        let bmpFont = (this._style as TextStyle).currBitmapFont;\n        if (bmpFont) {\n            let h = bmpFont.getMaxHeight();\n            if (bmpFont.autoScaleSize) {\n                h = this.fontSize;\n            }\n            nh = this._lines.length * (h + this.leading) + this.padding[0] + this.padding[2];\n        }\n        else {\n            nh = this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2];\n            if (this._lines.length) {\n                nh -= this.leading; \t// 去掉最后一行的leading，否则多算了。\n            }\n        }\n        if (nw != this._textWidth || nh != this._textHeight) {\n            this._textWidth = nw;\n            this._textHeight = nh;\n            //TODO:\n            //if (!_width || !_height)\n            //conchModel && conchModel.size(_width || _textWidth, _height || _textHeight);\n        }\n    }\n\n    /**@private */\n    private _checkEnabledViewportOrNot(): boolean {\n        return this.overflow == Text.SCROLL && ((this._width > 0 && this._textWidth > this._width) || (this._height > 0 && this._textHeight > this._height)); // 设置了宽高并且超出了\n    }\n\n    /**\n     * <p>快速更改显示文本。不进行排版计算，效率较高。</p>\n     * <p>如果只更改文字内容，不更改文字样式，建议使用此接口，能提高效率。</p>\n     * @param text 文本内容。\n     */\n    changeText(text: string): void {\n        if (this._text !== text) {\n            this.lang(text + \"\");\n            if (this._graphics && this._graphics.replaceText(this._text)) {\n                //repaint();\n            } else {\n                this.typeset();\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 分析文本换行。\n     */\n    protected _parseLines(text: string): void {\n        //自动换行和HIDDEN都需要计算换行位置或截断位置\n        var needWordWrapOrTruncate = this.wordWrap || this.overflow == Text.HIDDEN;\n        if (needWordWrapOrTruncate) {\n            var wordWrapWidth = this._getWordWrapWidth();\n        }\n\n        var bitmapFont = ((<TextStyle>this._style)).currBitmapFont;\n        if (bitmapFont) {\n            this._charSize.width = bitmapFont.getMaxWidth();\n            this._charSize.height = bitmapFont.getMaxHeight();\n        } else {\n            var measureResult: any = null;\n            if (LayaEnv.isConch) {\n                measureResult = (window as any).conchTextCanvas.measureText(Text._testWord);\n            } else {\n                measureResult = ILaya.Browser.context.measureText(Text._testWord);\n            }\n            if (!measureResult) measureResult = { width: 100 };\n            this._charSize.width = measureResult.width;\n            this._charSize.height = (measureResult.height || this.fontSize);\n        }\n\n        var lines: any[] = text.replace(/\\r\\n/g, \"\\n\").split(\"\\n\");\n        for (var i = 0, n = lines.length; i < n; i++) {\n            var line = lines[i];\n            // 开启了自动换行需要计算换行位置\n            // overflow为hidden需要计算截断位置\n            if (needWordWrapOrTruncate)\n                this._parseLine(line, wordWrapWidth);\n            else {\n                this._lineWidths.push(this._getTextWidth(line));\n                this._lines.push(line);\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 解析行文本。\n     * @param\tline 某行的文本。\n     * @param\twordWrapWidth 文本的显示宽度。\n     */\n    protected _parseLine(line: string, wordWrapWidth: number): void {\n        var lines = this._lines;\n\n        var maybeIndex = 0;\n        var charsWidth = 0;\n        var wordWidth = 0;\n        var startIndex = 0;\n\n        charsWidth = this._getTextWidth(line);\n        //优化1，如果一行小于宽度，则直接跳过遍历\n        if (charsWidth <= wordWrapWidth) {\n            lines.push(line);\n            this._lineWidths.push(charsWidth);\n            return;\n        }\n\n        charsWidth = this._charSize.width;\n        //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\n        maybeIndex = Math.floor(wordWrapWidth / charsWidth);\n        (maybeIndex == 0) && (maybeIndex = 1);\n        charsWidth = this._getTextWidth(line.substring(0, maybeIndex));\n        wordWidth = charsWidth;\n        for (var j = maybeIndex, m = line.length; j < m; j++) {\n            // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\n            // 目前已知在全是字符1的自动换行就会出现这种情况。\n            // 考虑性能，保留这种非方式。\n            charsWidth = this._getTextWidth(line.charAt(j));\n            wordWidth += charsWidth;\n            // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\n            if (wordWidth > wordWrapWidth) {\n                if (this.wordWrap) {\n                    //截断换行单词\n                    var newLine = line.substring(startIndex, j);\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\n                    var ccode = newLine.charCodeAt(newLine.length - 1)\n                    if (ccode < 0x4e00 || ccode > 0x9fa5) {\n                        //if (newLine.charCodeAt(newLine.length - 1) < 255) {\n                        //按照英文单词字边界截取 因此将会无视中文\n                        //var execResult = /(?:\\w|-)+$/.exec(newLine);\n                        var execResult = /(?:[^\\s\\!-\\/])+$/.exec(newLine);// 找不是 空格和标点符号的\n                        if (execResult) {\n                            j = execResult.index + startIndex;\n                            //此行只够容纳这一个单词 强制换行\n                            if (execResult.index == 0)\n                                j += newLine.length;\n                            //此行有多个单词 按单词分行\n                            else\n                                newLine = line.substring(startIndex, j);\n                        }\n                    }\n\n                    //如果自动换行，则另起一行\n                    lines.push(newLine);\n                    this._lineWidths.push(wordWidth - charsWidth);\n                    //如果非自动换行，则只截取字符串\n\n                    startIndex = j;\n                    if (j + maybeIndex < m) {\n                        j += maybeIndex;\n\n                        charsWidth = this._getTextWidth(line.substring(startIndex, j));\n                        wordWidth = charsWidth;\n                        j--;\n                    } else {\n                        //此处执行将不会在循环结束后再push一次\n                        lines.push(line.substring(startIndex, m));\n                        this._lineWidths.push(this._getTextWidth(lines[lines.length - 1]));\n                        startIndex = -1;\n                        break;\n                    }\n                } else if (this.overflow == Text.HIDDEN) {\n                    lines.push(line.substring(0, j));\n                    this._lineWidths.push(this._getTextWidth(lines[lines.length - 1]));\n                    return;\n                }\n            }\n        }\n        if (this.wordWrap && startIndex != -1) {\n            lines.push(line.substring(startIndex, m));\n            this._lineWidths.push(this._getTextWidth(lines[lines.length - 1]));\n        }\n    }\n\n    /**@private */\n    private _getTextWidth(text: string): number {\n        var bitmapFont: BitmapFont = ((<TextStyle>this._style)).currBitmapFont;\n        if (bitmapFont) return bitmapFont.getTextWidth(text);\n        else {\n            if (LayaEnv.isConch) {\n                return (window as any).conchTextCanvas.measureText(text).width;;\n            }\n            else {\n                let ret = ILaya.Browser.context.measureText(text) || { width: 100 };\n                return ret.width;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 获取换行所需的宽度。\n     */\n    private _getWordWrapWidth(): number {\n        var p: any[] = this.padding;\n        var w: number;\n        var bitmapFont: BitmapFont = ((<TextStyle>this._style)).currBitmapFont;\n        if (bitmapFont && bitmapFont.autoScaleSize) w = this._width * (bitmapFont.fontSize / this.fontSize);\n        else w = this._width;\n\n        if (w <= 0) {\n            w = this.wordWrap ? 100 : ILaya.Browser.width;\n        }\n        w <= 0 && (w = 100);\n        return w - p[3] - p[1];\n    }\n\n    /**\n     * 返回字符在本类实例的父坐标系下的坐标。\n     * @param charIndex\t索引位置。\n     * @param out\t\t（可选）输出的Point引用。\n     * @return Point 字符在本类实例的父坐标系下的坐标。如果out参数不为空，则将结果赋值给指定的Point对象，否则创建一个新的Point对象返回。建议使用Point.TEMP作为out参数，可以省去Point对象创建和垃圾回收的开销，尤其是在需要频繁执行的逻辑中，比如帧循环和MOUSE_MOVE事件回调函数里面。\n     */\n    getCharPoint(charIndex: number, out: Point = null): Point {\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this.typeset);\n        var len: number = 0, lines: any[] = this._lines, startIndex: number = 0;\n        for (var i: number = 0, n: number = lines.length; i < n; i++) {\n            len += lines[i].length;\n            if (charIndex < len) {\n                var line: number = i;\n                break;\n            }\n            startIndex = len;\n        }\n        //计算字符的宽度\n        var ctxFont: string = (this.italic ? \"italic \" : \"\") + (this.bold ? \"bold \" : \"\") + this.fontSize + \"px \" + this.font;\n        ILaya.Browser.context.font = ctxFont;\n        var width: number = this._getTextWidth(this._text.substring(startIndex, charIndex));\n        var point: Point = out || new Point();\n        return point.setTo(this._startX + width - (this._clipPoint ? this._clipPoint.x : 0), this._startY + line * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));\n    }\n\n    /**\n     * <p>设置横向滚动量。</p>\n     * <p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>\n     */\n    set scrollX(value: number) {\n        if (this.overflow != Text.SCROLL || (this.textWidth < this._width || !this._clipPoint)) return;\n\n        value = value < this.padding[3] ? this.padding[3] : value;\n        var maxScrollX: number = this._textWidth - this._width;\n        value = value > maxScrollX ? maxScrollX : value;\n\n        this._clipPoint.x = value;\n        this._renderText();\n    }\n\n    /**\n     * 获取横向滚动量。\n     */\n    get scrollX(): number {\n        if (!this._clipPoint) return 0;\n        return this._clipPoint.x;\n    }\n\n    /**\n     * 设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\n     */\n    set scrollY(value: number) {\n        if (this.overflow != Text.SCROLL || (this.textHeight < this._height || !this._clipPoint)) return;\n\n        value = value < this.padding[0] ? this.padding[0] : value;\n        var maxScrollY: number = this._textHeight - this._height;\n        value = value > maxScrollY ? maxScrollY : value;\n\n        this._clipPoint.y = value;\n        this._renderText();\n    }\n\n    /**\n     * 获取纵向滚动量。\n     */\n    get scrollY(): number {\n        if (!this._clipPoint) return 0;\n        return this._clipPoint.y;\n    }\n\n    /**\n     * 获取横向可滚动最大值。\n     */\n    get maxScrollX(): number {\n        return (this.textWidth < this._width) ? 0 : this._textWidth - this._width;\n    }\n\n    /**\n     * 获取纵向可滚动最大值。\n     */\n    get maxScrollY(): number {\n        return (this.textHeight < this._height) ? 0 : this._textHeight - this._height;\n    }\n\n    /**返回文字行信息*/\n    get lines(): any[] {\n        if (this._isChanged) this.typeset();\n        return this._lines;\n    }\n\n    /**下划线的颜色，为null则使用字体颜色。*/\n    get underlineColor(): string {\n        return ((<TextStyle>this._style)).underlineColor;\n    }\n\n    set underlineColor(value: string) {\n        this._getTextStyle().underlineColor = value;\n        if (!this._isChanged) this._renderText();\n    }\n\n    /**是否显示下划线。*/\n    get underline(): boolean {\n        return ((<TextStyle>this._style)).underline;\n    }\n\n    set underline(value: boolean) {\n        this._getTextStyle().underline = value;\n    }\n\n    /** 设置是否单个字符渲染，如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 */\n    set singleCharRender(value: boolean) {\n        this._singleCharRender = value;\n    }\n    get singleCharRender(): boolean {\n        return this._singleCharRender;\n    }\n    /*\t\n        scale(scaleX: number, scaleY: number, speedMode: boolean = false): Sprite {\n            super.scale(scaleX,scaleY, speedMode);\n            // 注意_words是一个数组（例如有换行）\n            this._words && this._words.forEach(function (w: WordText): void {\n                w.cleanCache();\n            });\n            this.repaint();\n            return this;\n        }\t\n    */\n}","import { LayaEnv } from \"../../LayaEnv\";\nimport { HideFlags, NodeFlags } from \"../Const\";\nimport { Node } from \"../display/Node\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Stage } from \"../display/Stage\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Browser } from \"../utils/Browser\";\nimport { Event, ITouchInfo } from \"./Event\";\n\nvar _isFirstTouch = true;\nconst _tempPoint = new Point();\nconst _tempRect = new Rectangle();\nconst _rollOverChain: Array<Node> = [];\nconst _rollOutChain: Array<Node> = [];\nconst _bubbleChain: Array<Node> = [];\nvar _inst: InputManager;\n\nexport class InputManager {\n\n    /**是否开启多点触控*/\n    static multiTouchEnabled: boolean = true;\n    /**是否开启鼠标/触摸事件，默认为true*/\n    static mouseEventsEnabled: boolean = true;\n    /**是否开启键盘事件，默认为true*/\n    static keyEventsEnabled: boolean = true;\n    /**如果鼠标按下的位置和弹起的位置距离超过这个阀值，则不视为一次点击*/\n    static clickTestThreshold = 10;\n\n    /** canvas 上的鼠标X坐标。*/\n    static mouseX: number = 0;\n    /** canvas 上的鼠标Y坐标。*/\n    static mouseY: number = 0;\n    /** 当前是否正在输入文字 */\n    static isTextInputting = false;\n    static isiOSWKwebView: boolean = false;\n    protected _stage: Stage;\n    protected _mouseTouch: TouchInfo;\n    protected _touches: TouchInfo[];\n    protected _touchPool: TouchInfo[];\n    protected _touchTarget: Node;\n\n    //用于IDE处理\n    protected _eventType: number;\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\n\n    protected _pressKeys: Set<string | number>;\n    protected _keyEvent: Event;\n\n    private _touchInput: boolean;\n\n    constructor() {\n        this._touches = [];\n        this._touchPool = [];\n        this._mouseTouch = new TouchInfo(this._touches);\n        this._pressKeys = new Set();\n        this._keyEvent = new Event();\n        this._keyEvent._touches = this._touches;\n    }\n\n    static get inst() {\n        return _inst;\n    }\n\n    static getTouchPos(touchId?: number): Readonly<Point> {\n        if (touchId == null)\n            return _inst._touches[0]?.pos || Point.EMPTY;\n        else\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\n    }\n\n    static get touchTarget(): Node {\n        return _inst._touchTarget;\n    }\n\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\n        return _inst._touches;\n    }\n\n    static get touchCount(): number {\n        return _inst._touches.length;\n    }\n\n    static cancelClick(touchId?: number): void {\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\n        if (touch)\n            touch.clickCancelled = true;\n    }\n\n    /**\n     * 返回指定键是否被按下。\n     * @param\tkey 键值。参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n     * @return 是否被按下。\n     */\n    static hasKeyDown(key: string | number): boolean {\n        return _inst._pressKeys.has(key);\n    }\n\n    /**\n     * @private\n     * 初始化。\n     */\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\n        let inst = _inst = new InputManager();\n        inst._stage = stage;\n\n        canvas.oncontextmenu = () => {\n            return false;\n        };\n        canvas.addEventListener(\"mousedown\", ev => {\n            if (!Browser.onIE)\n                (ev.cancelable) && (ev.preventDefault());\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 0);\n        }, { passive: false });\n        canvas.addEventListener(\"mouseup\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 1);\n        }, { passive: false });\n        canvas.addEventListener(\"mousemove\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 2);\n        }, { passive: false });\n        canvas.addEventListener(\"mouseout\", ev => {\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 3);\n        }, { passive: false });\n        // canvas.addEventListener(\"mouseover\", ev => {\n        // });\n\n        canvas.addEventListener(\"touchstart\", ev => {\n            inst._touchInput = true;\n            if (!_isFirstTouch && !InputManager.isTextInputting)\n                (ev.cancelable) && (ev.preventDefault());\n            inst.handleTouch(ev, 0);\n        }, { passive: false });\n        canvas.addEventListener(\"touchend\", ev => {\n            if (!_isFirstTouch && !InputManager.isTextInputting)\n                (ev.cancelable) && (ev.preventDefault());\n            _isFirstTouch = false;\n            inst.handleTouch(ev, 1);\n        }, { passive: false });\n        canvas.addEventListener(\"touchmove\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            inst.handleTouch(ev, 2);\n        }, { passive: false });\n        canvas.addEventListener(\"touchcancel\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            inst.handleTouch(ev, 3);\n        }, { passive: false });\n\n        canvas.addEventListener(\"wheel\", ev => {\n            inst.handleMouse(ev, 4);\n        }, { passive: false });\n\n        canvas.addEventListener(\"pointerdown\", ev => {\n            canvas.setPointerCapture(ev.pointerId);\n        });\n        canvas.addEventListener(\"pointerup\", ev => {\n            canvas.releasePointerCapture(ev.pointerId);\n        }, true);\n\n        let document = <Document>Browser.document;\n        document.addEventListener(\"keydown\", ev => {\n            inst.handleKeys(ev);\n        }, true);\n        document.addEventListener(\"keypress\", ev => {\n            inst.handleKeys(ev);\n        }, true);\n        document.addEventListener(\"keyup\", ev => {\n            inst.handleKeys(ev);\n        }, true);\n    }\n\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\n        this._eventType = type;\n        this._nativeEvent = ev;\n\n        //console.log(\"handleMouse\", type);\n        let touch: TouchInfo = this._mouseTouch;\n\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\n        if (this._stage._canvasTransform)\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\n        let x = InputManager.mouseX = _tempPoint.x;\n        let y = InputManager.mouseY = _tempPoint.y;\n\n        touch.event.nativeEvent = ev;\n        if (type == 3 || !InputManager.mouseEventsEnabled)\n            touch.target = this._touchTarget = null;\n        else {\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\n\n            if (x != touch.pos.x || y != touch.pos.y) {\n                this._stage._mouseMoveTime = Browser.now();\n\n                touch.pos.setTo(x, y);\n                touch.move();\n\n                if (InputManager.mouseEventsEnabled) {\n                    this.bubbleEvent(Event.MOUSE_MOVE, touch.event, touch.target);\n\n                    for (let t of touch.downTargets)\n                        t.event(Event.MOUSE_DRAG, touch.event);\n                }\n            }\n        }\n\n        if (touch.lastRollOver != touch.target)\n            this.handleRollOver(touch);\n\n        if (type == 0) {\n            if (!touch.began) {\n                touch.begin();\n                this._touches[0] = touch;\n\n                if (InputManager.mouseEventsEnabled) {\n                    this.handleFocus();\n\n                    if (ev.button == 0)\n                        this.bubbleEvent(Event.MOUSE_DOWN, touch.event, touch.target);\n                    else\n                        this.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event, touch.target);\n                }\n            }\n        }\n        else if (type == 1) {\n            if (touch.began) {\n                touch.end();\n                this._touches.length = 0;\n\n                if (InputManager.mouseEventsEnabled) {\n                    if (ev.button == 0)\n                        this.bubbleEvent(Event.MOUSE_UP, touch.event, touch.target);\n                    else\n                        this.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event, touch.target);\n\n                    if (touch.moved) {\n                        for (let t of touch.downTargets)\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\n                    }\n\n                    let clickTarget = touch.clickTest();\n                    if (clickTarget) {\n                        if (ev.button == 0) {\n                            this.bubbleEvent(Event.CLICK, touch.event, clickTarget);\n\n                            if (touch.clickCount == 2)\n                                this.bubbleEvent(Event.DOUBLE_CLICK, touch.event, clickTarget);\n                        }\n                        else\n                            this.bubbleEvent(Event.RIGHT_CLICK, touch.event, clickTarget);\n                    }\n                }\n            }\n        }\n        else if (type == 4) {\n            if (InputManager.mouseEventsEnabled) {\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\n                this.bubbleEvent(Event.MOUSE_WHEEL, touch.event, touch.target);\n                touch.event.delta = 0;\n            }\n        }\n    }\n\n    handleTouch(ev: TouchEvent, type: number) {\n        this._eventType = type;\n        this._nativeEvent = ev;\n\n        let touches = ev.changedTouches;\n        for (let i = 0; i < touches.length; ++i) {\n            let uTouch: Touch = touches[i];\n\n            if (!InputManager.multiTouchEnabled\n                && this._touches.length > 0\n                && this._touches[0].touchId != uTouch.identifier)\n                continue;\n\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\n            if (this._stage._canvasTransform)\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\n            let x = InputManager.mouseX = _tempPoint.x;\n            let y = InputManager.mouseY = _tempPoint.y;\n\n            let touch = this.getTouch(uTouch.identifier, type == 0);\n            if (!touch)\n                continue;\n\n            touch.event.nativeEvent = ev;\n            touch.event.touchId = touch.touchId;\n            if (type == 3 || !InputManager.mouseEventsEnabled)\n                touch.target = this._touchTarget = null;\n            else {\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\n                this._stage._mouseMoveTime = Browser.now();\n\n                if (Math.abs(x - touch.pos.x) > 1.5 || Math.abs(y - touch.pos.y) > 1.5) {\n                    touch.pos.setTo(x, y);\n                    touch.move();\n\n                    if (InputManager.mouseEventsEnabled) {\n\n                        this.bubbleEvent(Event.MOUSE_MOVE, touch.event, touch.target);\n\n                        for (let t of touch.downTargets)\n                            t.event(Event.MOUSE_DRAG, touch.event);\n                    }\n                }\n            }\n\n            if (touch.lastRollOver != touch.target)\n                this.handleRollOver(touch);\n\n            if (type == 0) {\n                if (!touch.began) {\n                    touch.begin();\n\n                    if (InputManager.mouseEventsEnabled) {\n                        this.handleFocus();\n                        this.bubbleEvent(Event.MOUSE_DOWN, touch.event, touch.target);\n                    }\n                }\n            }\n            else if (type == 1 || type == 3) {\n                if (touch.began) {\n                    touch.end();\n\n                    if (InputManager.mouseEventsEnabled) {\n                        this.bubbleEvent(Event.MOUSE_UP, touch.event, touch.target);\n\n                        if (touch.moved) {\n                            for (let t of touch.downTargets)\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\n                        }\n\n                        if (type != 3) {\n                            let clickTarget = touch.clickTest();\n                            if (clickTarget != null) {\n                                this.bubbleEvent(Event.CLICK, touch.event, clickTarget);\n\n                                if (touch.clickCount == 2)\n                                    this.bubbleEvent(Event.DOUBLE_CLICK, touch.event, clickTarget);\n                            }\n                        }\n                    }\n\n                    touch.target = null;\n                    this.handleRollOver(touch);\n\n                    touch.reset();\n                    this._touches.splice(this._touches.indexOf(touch), 1);\n                    this._touchPool.push(touch);\n                }\n            }\n        }\n    }\n\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\n        let touch = this._touches.find(e => e.touchId == touchId);\n        if (touch || !shouldCreate)\n            return touch;\n\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\n        touch.touchId = touchId;\n        this._touches.push(touch);\n\n        return touch;\n    }\n\n    private handleFocus() {\n        if (InputManager.isTextInputting\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\n            && !this._stage.focus.contains(this._touchTarget)) {\n            // 从UI Input组件中取得Input引用\n            // _tf 是TextInput的属性\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\n\n            // 新的焦点是Input的情况下，不需要blur；\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\n                pre_input['_focusOut']();\n            else\n                pre_input.focus = false;\n        }\n    }\n\n    handleKeys(ev: KeyboardEvent): void {\n        let type = ev.type;\n        let keyCode = ev.keyCode;\n        //判断同时按下的键\n        if (type === \"keydown\") {\n            if (keyCode != 0)\n                this._pressKeys.add(keyCode);\n            this._pressKeys.add(ev.key);\n        }\n        else if (type === \"keyup\") {\n            if (keyCode != 0)\n                this._pressKeys.delete(keyCode);\n            this._pressKeys.delete(ev.key);\n        }\n\n        this._keyEvent.nativeEvent = ev;\n\n        if (InputManager.keyEventsEnabled) {\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\n            let ct = target;\n            while (ct) {\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\n                ct = ct.parent;\n            }\n        }\n\n        this._keyEvent.nativeEvent = null;\n    }\n\n    getNodeUnderPoint(x: number, y: number): Node {\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\n        if (target == this._stage) {\n            target = this.getSprite3DUnderPoint(x, y);\n            if (!target)\n                return this._stage;\n        }\n        return target;\n    }\n\n    /**\n     * 获取指定坐标下的sprite。x/y值是sp所在容器的坐标\n     * @param sp\n     * @param x\n     * @param y\n     */\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\n        let editor = !LayaEnv.isPlaying;\n        if (sp == this._stage) {\n            _tempPoint.setTo(x, y);\n            sp.fromParentPoint(_tempPoint);\n            x = _tempPoint.x;\n            y = _tempPoint.y;\n\n            for (let i = sp._children.length - 1; i > -1; i--) {\n                let child = <Sprite>sp._children[i];\n                if (!child._is3D\n                    && !child._destroyed\n                    && (editor && !child.hasHideFlag(HideFlags.HideInHierarchy) || child._mouseState > 1)\n                    && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\n                    let ret = this._getSpriteUnderPoint(child, x, y, editor);\n                    if (ret)\n                        return ret;\n                }\n            }\n\n            return sp;\n        }\n        else\n            return this._getSpriteUnderPoint(sp, x, y, editor);\n    }\n\n    private _getSpriteUnderPoint(sp: Sprite, x: number, y: number, editor: boolean): Sprite {\n        _tempPoint.setTo(x, y);\n        sp.fromParentPoint(_tempPoint);\n        x = _tempPoint.x;\n        y = _tempPoint.y;\n\n        //如果有裁剪，则先判断是否在裁剪范围内\n        let scrollRect = sp._style.scrollRect;\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\n            if (!_tempRect.contains(x, y))\n                return null;\n        }\n\n        //先判定子对象是否命中\n        //优先判断父对象\n        //默认情况下，hitTestPrior=mouseThrough=false，也就是优先check子对象\n        //$NEXTBIG:下个重大版本将sp.mouseThrough从此逻辑中去除，从而使得sp.mouseThrough只负责目标对象的穿透\n        if (!editor && sp.hitTestPrior && !sp.mouseThrough && !this.hitTest(sp, x, y, editor)) {\n            return null;\n        }\n        for (let i = sp._children.length - 1; i > -1; i--) {\n            let child = <Sprite>sp._children[i];\n            //只有接受交互事件的，才进行处理\n            if (!child._destroyed\n                && (editor ? (!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) : child._mouseState > 1)\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY)\n                    && !child._getBit(NodeFlags.HIDE_BY_EDITOR))) {\n                let ret = this._getSpriteUnderPoint(child, x, y, editor);\n                if (ret)\n                    return ret;\n            }\n        }\n        // 检查逻辑子对象\n        for (let i = sp._extUIChild.length - 1; i >= 0; i--) {\n            let child = <Sprite>sp._extUIChild[i];\n            if (!child._destroyed\n                && (editor ? (!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) : child._mouseState > 1)\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\n                let ret = this._getSpriteUnderPoint(child, x, y, editor);\n                if (ret)\n                    return ret;\n            }\n        }\n\n        if (editor) {\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\n                && this.hitTest(sp, x, y, editor))\n                return sp;\n        }\n        else {\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y, editor))\n                return sp;\n        }\n\n        return null;\n    }\n\n    getSprite3DUnderPoint(x: number, y: number): Node {\n        return null;\n    }\n\n    hitTest(sp: Sprite, x: number, y: number, editor?: boolean): boolean {\n        let isHit: boolean = false;\n        if (sp.scrollRect) {\n            x -= sp._style.scrollRect.x;\n            y -= sp._style.scrollRect.y;\n        }\n        let hitArea: any = sp._style.hitArea;\n        let mouseThrough = sp.mouseThrough;\n        if (editor) {\n            hitArea = null;\n            mouseThrough = false;\n        }\n\n        if (hitArea) {\n            return hitArea.contains(x, y, sp);\n        }\n\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\n            //判断是否在矩形区域内\n            if (!mouseThrough)\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y);\n            else //如果可穿透，则根据子对象实际大小进行碰撞\n                isHit = sp.getGraphicBounds().contains(x, y);\n        }\n        return isHit;\n    }\n\n    private handleRollOver(touch: TouchInfo) {\n        if (!InputManager.mouseEventsEnabled) {\n            touch.lastRollOver = touch.target;\n            return;\n        }\n\n        _rollOverChain.length = 0;\n        _rollOutChain.length = 0;\n\n        let ele = touch.lastRollOver;\n        while (ele) {\n            _rollOutChain.push(ele);\n            ele = ele.parent;\n        }\n        touch.lastRollOver = touch.target;\n\n        ele = touch.target;\n        while (ele) {\n            let i = _rollOutChain.indexOf(ele);\n            if (i != -1) {\n                _rollOutChain.splice(i, _rollOutChain.length - i);\n                break;\n            }\n\n            _rollOverChain.push(ele);\n\n            ele = ele.parent;\n        }\n\n        let cnt = _rollOutChain.length;\n        if (cnt > 0) {\n            for (let i = 0; i < cnt; i++) {\n                ele = _rollOutChain[i];\n                if (!ele._destroyed)\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\n            }\n            _rollOutChain.length = 0;\n        }\n\n        cnt = _rollOverChain.length;\n        if (cnt > 0) {\n            for (let i = 0; i < cnt; i++) {\n                ele = _rollOverChain[i];\n                if (ele.activeInHierarchy)\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\n            }\n            _rollOverChain.length = 0;\n        };\n    }\n\n    protected bubbleEvent(type: string, ev: Event, initiator: Node) {\n        _bubbleChain.length = 0;\n\n        let obj = initiator;\n        while (obj) {\n            if (obj.activeInHierarchy)\n                _bubbleChain.push(obj);\n            obj = obj.parent;\n        }\n\n        ev._stopped = false;\n        for (let obj of _bubbleChain) {\n            ev.setTo(type, obj, initiator);\n            obj.event(type, ev);\n            if (ev._stopped)\n                break;\n        }\n    }\n}\n\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\n\nclass TouchInfo implements ITouchInfo {\n    readonly event: Event;\n    readonly pos: Point;\n    touchId: number;\n    clickCount: number;\n    began: boolean;\n    target: Node;\n    lastRollOver: Node;\n    clickCancelled: boolean;\n    moved: boolean;\n    readonly downTargets: Node[];\n\n    private downPos: Point;\n\n    constructor(touches: Array<TouchInfo>) {\n        this.downPos = new Point();\n        this.downTargets = [];\n        this.event = new Event();\n        this.event._touches = touches;\n        this.pos = this.event.touchPos;\n        this.reset();\n    }\n\n    begin() {\n        this.began = true;\n        this.clickCancelled = false;\n        this.moved = false;\n        this.downPos.copy(this.pos);\n\n        this.downTargets.length = 0;\n        if (this.target) {\n            let ele = this.target;\n            while (ele) {\n                this.downTargets.push(ele);\n                ele = ele.parent;\n            }\n        }\n    }\n\n    move() {\n        this.moved = true;\n\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\n            this.clickCancelled = true;\n    }\n\n    end() {\n        this.began = false;\n        let now = performance.now();\n\n        let lastClick = clickTrack[this.touchId];\n        if (!lastClick) {\n            lastClick = { pos: new Point(), time: 0, button: 0 };\n            clickTrack[this.touchId] = lastClick;\n        }\n\n        if (this.downTargets.length == 0\n            || this.clickCancelled\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\n            this.clickCancelled = true;\n            lastClick.time = 0;\n            this.clickCount = 1;\n        }\n        else {\n            if (now - lastClick.time < 350\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\n                && lastClick.button == this.event.button) {\n                this.clickCount = 2;\n            }\n            else\n                this.clickCount = 1;\n            lastClick.time = now;\n            lastClick.pos.copy(this.pos);\n            lastClick.button = this.event.button;\n        }\n    }\n\n    clickTest(): Node {\n        if (this.clickCancelled) {\n            this.downTargets.length = 0;\n            return null;\n        }\n\n        let obj = this.downTargets[0];\n        if (obj.activeInHierarchy) {\n            this.downTargets.length = 0;\n            return obj;\n        }\n\n        obj = this.target;\n        while (obj) {\n            let i = this.downTargets.indexOf(obj);\n            if (i != -1 && obj.activeInHierarchy)\n                break;\n\n            obj = obj.parent;\n        }\n\n        this.downTargets.length = 0;\n\n        return obj;\n    }\n\n    reset() {\n        this.pos.setTo(0, 0);\n        this.touchId = 0;\n        this.clickCount = 0;\n        this.began = false;\n        this.moved = false;\n        this.target = null;\n        this.downTargets.length = 0;\n        this.lastRollOver = null;\n        this.clickCancelled = false;\n    }\n}\n","/**\n * WebGL mode.\n */\n export enum WebGLMode {\n    /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\n    Auto = 0,\n    /** WebGL2.0. */\n    WebGL2 = 1,\n    /** WebGL1.0, */\n    WebGL1 = 2\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderState2D } from \"./utils/RenderState2D\"\n\n/**\n * @private\n */\nexport class WebGL {\n    static _isWebGL2: boolean = false;\n    static isNativeRender_enable: boolean = false;\n\n    static _nativeRender_enable(): void {\n    }\n\n    //使用webgl渲染器\n    static enable(): boolean {\n        return true;\n    }\n\n    static onStageResize(width: number, height: number): void {\n        LayaGL.renderEngine.viewport(0, 0, width, height);\n        RenderState2D.width = width;\n        RenderState2D.height = height;\n    }\n}\n\n\n\n","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderStateType } from \"./RenderEnum/RenderStateType\";\n\n/**\n * 渲染状态设置命令流\n */\nexport class RenderStateCommand{\n    cmdArray:Map<RenderStateType,any> = new Map();\n    constructor(){\n\n    }\n    addCMD(renderstate:RenderStateType,value:number|boolean|Array<number>){\n        this.cmdArray.set(renderstate,value);\n    }\n\n    applyCMD(){\n        LayaGL.renderEngine.applyRenderStateCMD(this);\n    }\n\n    clear(){\n        this.cmdArray.clear();\n    }\n}","export enum WebGLExtension{\n    OES_vertex_array_object,\n    ANGLE_instanced_arrays,\n    OES_texture_half_float,\n    OES_texture_half_float_linear,\n    OES_texture_float,\n    OES_element_index_uint,\n    OES_texture_float_linear,//allows linear filtering with floating-point pixel types for textures.\n    EXT_color_buffer_half_float,//Render BufferHalf float color\n    EXT_shader_texture_lod,\n    WEBGL_depth_texture,\n    EXT_sRGB,\n    EXT_color_buffer_float,\n    EXT_texture_filter_anisotropic,\n    WEBGL_compressed_texture_s3tc,\n    WEBGL_compressed_texture_s3tc_srgb,\n    WEBGL_compressed_texture_pvrtc,\n    WEBGL_compressed_texture_etc1,\n    WEBGL_compressed_texture_etc,\n    WEBGL_compressed_texture_astc\n}","import { WebGLEngine } from \"./WebGLEngine\";\n\n/**\n * WebglObject 基类\n */\nexport class GLObject{\n    protected _engine:WebGLEngine;\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\n    protected _id:number;\n    protected _destroyed: boolean = false;\n\n    constructor(engine: WebGLEngine){\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._id = this._engine._IDCounter++;\n    }\n\n    get destroyed():boolean{\n        return this._destroyed;\n    }\n\n\n    /**\n     * @override\n     */\n    setResourceManager():void{\n    };\n\n    destroy():void{\n        if (this._destroyed) return;\n        this._destroyed = true;\n    }\n\n}","import { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { WrapMode } from \"../../RenderEnum/WrapMode\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n\nexport class WebGLInternalTex extends GLObject implements InternalTexture {\n\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    readonly resource: WebGLTexture;\n    _resourceTarget: number;\n\n    readonly width: number;\n    readonly height: number;\n    readonly isPotSize: boolean;\n\n    private _mipmap: boolean;\n    /**\n     * 是否存在 mipmap 数据\n     */\n    get mipmap(): boolean {\n        return this._mipmap;\n    }\n\n    private _mipmapCount: number;\n    public get mipmapCount(): number {\n        return this._mipmapCount;\n    }\n\n    readonly useSRGBLoad: boolean;\n    readonly gammaCorrection: number;\n\n    // webgl param\n    readonly target: number;\n    internalFormat: number;\n    format: number;\n    type: number;\n    /**bytelength */\n    _gpuMemory: number = 0;\n\n    get gpuMemory(): number {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value: number) {\n        \n        this._gpuMemory = value;\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory,this._gpuMemory);\n    }\n\n    constructor(engine: WebGLEngine, target: number, width: number, height: number, dimension: TextureDimension, mipmap: boolean, useSRGBLoader: boolean, gammaCorrection: number) {\n        super(engine);\n\n        this.resource = this._gl.createTexture();\n\n        this.width = width;\n        this.height = height;\n\n        const isPot = (value: number): boolean => {\n            return (value & (value - 1)) === 0;\n        }\n\n        this.isPotSize = isPot(width) && isPot(height);\n\n        this._mipmap = mipmap && this.isPotSize;\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\n\n        this.useSRGBLoad = useSRGBLoader;\n        this.gammaCorrection = gammaCorrection;\n\n        this.target = target;\n\n        // default value\n        // this._filterMode = FilterMode.Bilinear;\n        // this._warpU = WrapMode.Repeat;\n        // this._warpV = WrapMode.Repeat;\n        // this._warpW = WrapMode.Repeat;\n        // this._anisoLevel = 4;\n\n        this.filterMode = FilterMode.Bilinear;\n        this.wrapU = WrapMode.Repeat;\n        // todo\n        this.wrapV = WrapMode.Repeat;\n        this.wrapW = WrapMode.Repeat;\n        this.anisoLevel = 4;\n    }\n\n    private _filterMode: FilterMode;\n    public get filterMode(): FilterMode {\n        return this._filterMode;\n    }\n    public set filterMode(value: FilterMode) {\n        if (this._filterMode != value && this.resource) {\n            let gl = this._gl;\n            let mipmap = this.mipmap;\n            let min = this.getFilteMinrParam(value, mipmap);\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\n            let mag = this.getFilterMagParam(value);\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\n\n            this._filterMode = value;\n        }\n    }\n\n    private _warpU: WrapMode;\n    public get wrapU(): WrapMode {\n        return this._warpU;\n    }\n    public set wrapU(value: WrapMode) {\n        if (this._warpU != value && this.resource) {\n            let gl = this._gl;\n            let warpParam = this.getWrapParam(value);\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\n            this._warpU = value;\n        }\n    }\n\n    private _warpV: WrapMode;\n    \n    public get wrapV(): WrapMode {\n        return this._warpV;\n    }\n\n    public set wrapV(value: WrapMode) {\n        if (this._warpV != value && this.resource) {\n            let gl = this._gl;\n            let warpParam = this.getWrapParam(value);\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\n            this._warpV = value;\n        }\n    }\n\n    private _warpW: WrapMode;\n    public get wrapW(): WrapMode {\n        return this._warpW;\n    }\n    public set wrapW(value: WrapMode) {\n        // todo\n        // webgl1 unsupported \n        this._warpW = value;\n    }\n\n    private _anisoLevel: number;\n    public get anisoLevel(): number {\n        return this._anisoLevel;\n    }\n    public set anisoLevel(value: number) {\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\n        if (anisoExt) {\n            let gl = this._gl;\n            let maxAnisoLevel = gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n            this._anisoLevel = level;\n        }\n        else {\n            this._anisoLevel = 1;\n        }\n    }\n\n    private _baseMipmapLevel: number = 0;\n    public set baseMipmapLevel(value: number) {\n        if (this._engine.isWebGL2) {\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_BASE_LEVEL, value);\n        }\n    }\n\n    public get baseMipmapLevel() {\n        return this._baseMipmapLevel;\n    }\n\n    private _maxMipmapLevel: number = 0;\n    public set maxMipmapLevel(value: number) {\n        if (this._engine.isWebGL2) {\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_MAX_LEVEL, value);\n        }\n    }\n\n    public get maxMipmapLevel() {\n        return this._maxMipmapLevel;\n    }\n\n\n    private _compareMode: TextureCompareMode;\n    public get compareMode(): TextureCompareMode {\n        return this._compareMode;\n    }\n    public set compareMode(value: TextureCompareMode) {\n        this._compareMode = value;\n    }\n\n    // todo 设置参数函数 放在 context 里面? \n    public _setTexParameteri(pname: number, param: number) {\n        let gl = this._gl;\n        let target = this.target\n        this._engine._bindTexture(target, this.resource);\n        gl.texParameteri(target, pname, param);\n        this._engine._bindTexture(target, null);\n    }\n\n    public _setTexParametexf(pname: number, param: number) {\n        let gl = this._gl;\n        let target = this.target\n        this._engine._bindTexture(target, this.resource);\n        gl.texParameterf(target, pname, param);\n        this._engine._bindTexture(target, null);\n    }\n\n    protected getFilteMinrParam(filterMode: FilterMode, mipmap: boolean) {\n        let gl = this._gl;\n        switch (filterMode) {\n            case FilterMode.Point:\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\n            case FilterMode.Bilinear:\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\n            case FilterMode.Trilinear:\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\n            default:\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\n        }\n    }\n\n    protected getFilterMagParam(filterMode: FilterMode) {\n        let gl = this._gl;\n        switch (filterMode) {\n            case FilterMode.Point:\n                return gl.NEAREST;\n            case FilterMode.Bilinear:\n                return gl.LINEAR;\n            case FilterMode.Trilinear:\n                return gl.LINEAR;\n            default:\n                return gl.LINEAR;\n        }\n    }\n\n    protected getWrapParam(wrapMode: WrapMode) {\n        let gl = this._gl;\n        switch (wrapMode) {\n            case WrapMode.Repeat:\n                return gl.REPEAT;\n            case WrapMode.Clamp:\n                return gl.CLAMP_TO_EDGE;\n            case WrapMode.Mirrored:\n                return gl.MIRRORED_REPEAT;\n            default:\n                return gl.REPEAT;\n        }\n    }\n\n    protected _setWrapMode(pname: number, param: number) {\n        let gl = this._gl;\n        if (!this.isPotSize) {\n            param = gl.CLAMP_TO_EDGE;\n        }\n        this._setTexParameteri(pname, param);\n    }\n\n    dispose(): void {\n        let gl = this._gl;\n        gl.deleteTexture(this.resource);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory,-this._gpuMemory);\n        this._gpuMemory = 0;\n    }\n}","import { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class WebGLInternalRT extends GLObject implements InternalRenderTarget {\n\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    _framebuffer: WebGLFramebuffer;\n\n    _depthbuffer: WebGLRenderbuffer;\n\n    _msaaFramebuffer: WebGLFramebuffer;\n    _msaaRenderbuffer: WebGLRenderbuffer;\n\n    _isCube: boolean;\n    _samples: number;\n\n    _generateMipmap: boolean;\n\n    _textures: InternalTexture[];\n    _depthTexture: InternalTexture;\n\n    colorFormat: RenderTargetFormat;\n    depthStencilFormat: RenderTargetFormat;\n\n    /**bytelength */\n    _gpuMemory: number = 0;\n\n    get gpuMemory(): number {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value: number) {\n\n        this._gpuMemory = value;\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory, this._gpuMemory);\n    }\n\n\n    constructor(engine: WebGLEngine, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, isCube: boolean, generateMipmap: boolean, samples: number) {\n        super(engine);\n\n        this.colorFormat = colorFormat;\n        this.depthStencilFormat = depthStencilFormat;\n        this._isCube = isCube;\n        this._generateMipmap = generateMipmap;\n        this._samples = samples;\n\n        this._textures = [];\n        this._depthTexture = null;\n\n        this._framebuffer = this._gl.createFramebuffer();\n        if (samples > 1) {\n            this._msaaFramebuffer = this._gl.createFramebuffer();\n        }\n    }\n\n\n    dispose(): void {\n        this._textures.forEach(tex => {\n            tex && tex.dispose();\n        });\n        this._textures = null;\n        this._depthTexture && this._depthTexture.dispose();\n        this._depthTexture = null;\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\n        this._framebuffer = null;\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\n        this._depthbuffer = null;\n\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\n        this._msaaFramebuffer = null;\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\n        this._msaaRenderbuffer = null;\n\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory,-this._gpuMemory);\n        this._gpuMemory = 0;\n    }\n}","export enum TextureCompareMode {\n    None,\n    LEQUAL,\n    GEQUAL,\n    LESS,\n    GREATER,\n    EQUAL,\n    NOTEQUAL,\n    ALWAYS,\n    NEVER\n}","\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\n\nexport class GLTextureContext extends GLObject implements ITextureContext {\n    protected _sRGB: any;\n    protected _oesTextureHalfFloat: any;\n    protected _compressdTextureS3tc_srgb: any;\n    protected _compressedTextureEtc1: any;\n    protected _compressedTextureS3tc: any;\n    protected _compressedTextureETC: any;\n    protected _compressedTextureASTC: any;\n    protected _webgl_depth_texture: any;\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB)\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float)\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb)\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1)\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc)\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc)\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc)\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\n    }\n\n    _glParam: {\n        internalFormat: number,\n        format: number,\n        type: number,\n    } = {\n            internalFormat: 0,\n            format: 0,\n            type: 0,\n        };\n\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\n        let gl = this._gl;\n\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R5G6B5:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\n                break;\n            case TextureFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case TextureFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case TextureFormat.DXT1:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT3:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT5:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC1RGB:\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGBA:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha8:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC4x4:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC8x8:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC10x10:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC12x12:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC4x4SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC8x8SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC10x10SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC12x12SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            default:\n                throw \"Unknown Texture Format.\";\n        }\n\n        return this._glParam;\n    }\n\n    // todo srgb ?\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\n        let gl = this._gl;\n\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case RenderTargetFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_SHORT;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n            default:\n                throw \"render texture format wrong.\"\n        }\n\n        return this._glParam;\n    }\n\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean) {\n        // todo\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.DEPTH_32:\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.STENCIL_8:\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n            default:\n                return null;\n        }\n    }\n\n    glRenderTargetAttachment(format: RenderTargetFormat) {\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return gl.DEPTH_ATTACHMENT;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return gl.DEPTH_STENCIL_ATTACHMENT;\n            case RenderTargetFormat.DEPTH_32:\n                return gl.DEPTH_ATTACHMENT;\n            case RenderTargetFormat.STENCIL_8:\n                return gl.STENCIL_ATTACHMENT;\n            case RenderTargetFormat.R8G8B8:\n            case RenderTargetFormat.R8G8B8A8:\n            case RenderTargetFormat.R16G16B16:\n            case RenderTargetFormat.R16G16B16A16:\n            case RenderTargetFormat.R32G32B32:\n            case RenderTargetFormat.R32G32B32A32:\n                return gl.COLOR_ATTACHMENT0;\n            default:\n                throw \"render format.\"\n        }\n    }\n\n    protected getTarget(dimension: TextureDimension) {\n        let gl = this._gl;\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n                return gl.TEXTURE_2D;\n            case TextureDimension.Cube:\n                return gl.TEXTURE_CUBE_MAP;\n            default:\n                throw \"texture dimension wrong in WebGL1.\"\n        }\n    }\n\n    public getFormatPixelsParams(format: TextureFormat) {\n\n        let formatParams: { channels: number, bytesPerPixel: number, dataTypedCons: any, typedSize: number } = {\n            channels: 0,\n            bytesPerPixel: 0,\n            dataTypedCons: Uint8Array,\n            typedSize: 1\n        }\n        switch (format) {\n            case TextureFormat.R8G8B8A8:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 4;\n                formatParams.dataTypedCons = Uint8Array\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R8G8B8:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 3;\n                formatParams.dataTypedCons = Uint8Array\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R5G6B5:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 2;\n                formatParams.dataTypedCons = Uint16Array\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 6;\n                formatParams.dataTypedCons = Uint16Array\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16A16:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 8;\n                formatParams.dataTypedCons = Uint16Array\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R32G32B32:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 12;\n                formatParams.dataTypedCons = Float32Array\n                formatParams.typedSize = 4;\n                return formatParams;\n            case TextureFormat.R32G32B32A32:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 16;\n                formatParams.dataTypedCons = Float32Array\n                formatParams.typedSize = 4;\n                return formatParams;\n            default:\n                return formatParams;\n        }\n\n    }\n\n    /**\n     * caculate texture memory\n     * @param tex \n     * @returns \n     */\n    getGLtexMemory(tex: WebGLInternalTex): number {\n        let gl = this._gl;\n        let channels = 0;\n        let singlebyte = 0;\n        let bytelength = 0;\n\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\n\n        switch (tex.internalFormat) {\n            case srgb:\n            case gl.RGB:\n                channels = 3;\n                break;\n            case srgb_alpha:\n            case gl.RGBA:\n                channels = 4;\n                break;\n            default:\n                channels = 0;\n                break;\n        }\n        switch (tex.type) {\n            case gl.UNSIGNED_BYTE:\n                singlebyte = 1;\n                break;\n            case gl.UNSIGNED_SHORT_5_6_5:\n                singlebyte = 2 / 3;\n                break;\n            case gl.FLOAT:\n                singlebyte = 4;\n                break;\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\n                singlebyte = 2;\n                break;\n            default:\n                singlebyte = 0;\n                break;\n        }\n        bytelength = channels * singlebyte * tex.width * tex.height;\n        if (tex.mipmap) {\n            bytelength *= 1.333;\n        }\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\n            bytelength *= 6;\n        else if (tex.target == gl.TEXTURE_2D)\n            bytelength *= 1;\n\n        return bytelength;\n    }\n\n    getGLRTTexMemory(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number, cube: boolean) {\n        let getpixelbyte = (rtFormat: RenderTargetFormat) => {\n            let pixelByte = 0;\n            switch (rtFormat) {\n                case RenderTargetFormat.R8G8B8:\n                    pixelByte = 3;\n                    break;\n                case RenderTargetFormat.R8G8B8A8:\n                    pixelByte = 4;\n                    break;\n                case RenderTargetFormat.R16G16B16A16:\n                    pixelByte = 8;\n                    break;\n                case RenderTargetFormat.R32G32B32:\n                    pixelByte = 12;\n                    break;\n                case RenderTargetFormat.R32G32B32A32:\n                    pixelByte = 16;\n                    break;\n                case RenderTargetFormat.R16G16B16:\n                    pixelByte = 6;\n                    break;\n                case RenderTargetFormat.DEPTH_16:\n                    pixelByte = 2;\n                    break;\n                case RenderTargetFormat.STENCIL_8:\n                    pixelByte = 1;\n                    break;\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                    pixelByte = 4;\n                    break;\n                case RenderTargetFormat.DEPTH_32:\n                    pixelByte = 4;\n                    break;\n            }\n            return pixelByte;\n        }\n        let colorPixelbyte = getpixelbyte(colorFormat);\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\n        if (multiSamples > 1)//多重采样\n            colorPixelbyte *= 2;\n        if (cube)//box\n            colorPixelbyte *= 6;\n        if (generateMipmap)//mipmap\n            colorPixelbyte *= 1.333;\n        let colorMemory = colorPixelbyte * width * height;\n        let depthMemory = depthPixelbyte * width * height;\n        return colorMemory + depthMemory;\n    }\n\n    // protected getRenderTargetDepthFormat(format: RenderTargetDepthFormat): { internalFormat: number, attachment: number } {\n    //     let gl = this.gl;\n    //     switch (format) {\n    //         case RenderTargetDepthFormat.DEPTH_16:\n    //             return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_24_8:\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n    //         case RenderTargetDepthFormat.DEPTH_32:\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n    //         case RenderTargetDepthFormat.STENCIL_8:\n    //             return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_NONE:\n    //             return null;\n    //         default:\n    //             throw \"RenderTargetDepthFormat wrong.\"\n    //     }\n    // }\n\n    /**\n     * 根据 format 判断是否支持 SRGBload\n     * @param format \n     * @returns \n     */\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\n            default:\n                return false;\n        }\n    }\n\n    supportGenerateMipmap(format: TextureFormat | RenderTargetFormat) {\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n            case RenderTargetFormat.DEPTH_32:\n            case RenderTargetFormat.STENCIL_8:\n                return false;\n            default:\n                return true;\n        }\n    }\n\n    /**\n     * 判断 纹理格式 本身是否是 SRGB格式\n     * @param format \n     * @returns \n     */\n    isSRGBFormat(format: TextureFormat | RenderTargetFormat) {\n        switch (format) {\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12SRGB:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, gengerateMipmap: boolean, sRGB: boolean): InternalTexture {\n\n        // todo  一些format 不支持自动生成mipmap\n\n        // todo  这个判断, 若纹理本身格式不支持？\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, gengerateMipmap));\n\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        // let dimension = TextureDimension.Tex2D;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, dimension, gengerateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        //Resource:\n        //internalTex.gpuMemory = this.getGLtexMemory(format, width, height, dimension, gengerateMipmap);\n\n        return internalTex;\n    }\n\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n\n        if (texture.width != source.width || texture.height != source.height) {\n            // todo ?\n            console.warn(\"setTextureImageData: size not match\");\n        }\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        //texture.\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        //resource TODO\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTexturebySubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = source.width;\n        let height = source.height;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texSubImage2D(target,0,x,y,format,type,source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        //texture.\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        //resource TODO\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    initVideoTextureData(texture: WebGLInternalTex) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let gl = texture._gl;\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n    }\n\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        // todo check pixels size\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        // gl.texImage2D(target, 0, internalFormat, format, type, source);\n\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n\n        // todo check pixels size\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        // let width = texture.width;\n        // let height = texture.height;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\n\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = ddsInfo.mipmapCount;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let memory = 0;\n        for (let index = 0; index < mipmapCount; index++) {\n\n            // todo  size 计算 方式\n            let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\n            let sourceData = new Uint8Array(source, dataOffset, dataLength);\n\n            gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n            memory += sourceData.length;\n            dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n\n            mipmapWidth *= 0.5;\n            mipmapHeight *= 0.5;\n            mipmapWidth = Math.max(1.0, mipmapWidth);\n            mipmapHeight = Math.max(1.0, mipmapHeight);\n        }\n        texture.gpuMemory = memory;//TODO 不太准\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n            // todo  cube 在一起？\n\n            let sourceData = new Uint8Array(source, dataOffset, imageSize);\n\n            compressed && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n            !compressed && gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n            memory += sourceData.length;\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.gpuMemory = memory;//TODO 不太准\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\n        let hdrPixelData = hdrInfo.readScanLine();\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\n    }\n\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\n\n        let gl = texture._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\n        }\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\n        let gl = texture._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        if (source) {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        else {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeSubPixelData(texture: WebGLInternalTex, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n\n        let gl = texture._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ];\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\n        }\n\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n\n    setCubeDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        // let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = ddsInfo.mipmapCount;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        fourSize = true;\n        let gl = texture._gl;\n\n\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\n\n        let dataTypeConstur = ddsInfo.format == TextureFormat.R32G32B32A32 ? Float32Array : Uint16Array;\n        let memory = 0;\n        if (!ddsInfo.compressed) {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                let mipmapWidth = width;\n                let mipmapHeight = height;\n                for (let index = 0; index < mipmapCount; index++) {\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                    dataOffset += dataLength * channelsByte;\n                    mipmapWidth *= 0.5;\n                    mipmapHeight *= 0.5;\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\n                }\n            }\n        }\n        else {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                let mipmapWidth = width;\n                let mipmapHeight = height;\n                for (let index = 0; index < mipmapCount; index++) {\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\n\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\n\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n\n                    mipmapWidth *= 0.5;\n                    mipmapHeight *= 0.5;\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\n                }\n            }\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        // let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = ktxInfo.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n\n        // ktx 标准顺序\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n            // todo  cube 在一起？\n\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                else {\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = memory;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\n        return TextureCompareMode.None;\n    }\n\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\n        let gl = this._gl;\n        let framebuffer = renderTarget._framebuffer;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n        if (renderTarget._isCube) {\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\n        }\n\n    }\n\n    bindoutScreenTarget(): void {\n        let gl = this._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\n        let gl = renderTarget._gl;\n\n        if (renderTarget._generateMipmap) {\n            renderTarget._textures.forEach(tex => {\n                let target = (<WebGLInternalTex>tex).target;\n                this._engine._bindTexture(target, tex.resource);\n                gl.generateMipmap(target);\n                this._engine._bindTexture(target, null);\n            });\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n        let useSRGBExt = false;\n\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        // let dimension = TextureDimension.Tex2D;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = internalTex._gl;\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\n        this._engine._bindTexture(internalTex.target, null);\n\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n\n        return internalTex;\n    }\n\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n        let useSRGBExt = false;\n\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = internalTex._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\n        }\n        this._engine._bindTexture(internalTex.target, null);\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n\n        return internalTex;\n    }\n\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        multiSamples = 1;\n\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\n        renderTarget.colorFormat = colorFormat;\n        renderTarget.depthStencilFormat = depthStencilFormat;\n        renderTarget._textures.push(texture);\n\n        let framebuffer = renderTarget._framebuffer;\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        // color\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n        // depth\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n        if (depthBufferParam) {\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n            renderTarget._depthbuffer = depthbuffer;\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return renderTarget;\n    }\n\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        multiSamples = 1;\n\n        // let texture = this.createRenderTextureInternal(dimension, size, size, colorFormat, gengerateMipmap, sRGB);\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\n        renderTarget._textures.push(texture);\n\n        let framebuffer = renderTarget._framebuffer;\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n        if (depthBufferParam) {\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n            renderTarget._depthbuffer = depthbuffer;\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return renderTarget;\n    }\n\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number) {\n\n        // todo  多个 gl\n        let gl = this._gl;\n\n        let renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n        return renderbuffer;\n    }\n\n    // todo  color 0, 1, 2, 3 ?\n    setupRendertargetTextureAttachment(renderTarget: WebGLInternalRT, texture: WebGLInternalTex) {\n        let gl = renderTarget._gl;\n\n        renderTarget._depthTexture = texture;\n\n        let depthbuffer = renderTarget._depthbuffer;\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\n        renderTarget._depthbuffer = null;\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\n\n        let framebuffer = renderTarget._framebuffer;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n\n    readRenderTargetPixelData(renderTarget: WebGLInternalRT, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\n\n        let gl = renderTarget._gl;\n\n        this.bindRenderTarget(renderTarget);\n\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n\n        if (!frameState) {\n            this.unbindRenderTarget(renderTarget);\n            return null;\n        }\n        switch (renderTarget.colorFormat) {\n            case RenderTargetFormat.R8G8B8:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\n                break;\n            case RenderTargetFormat.R16G16B16:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R32G32B32:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\n                break;\n        }\n        this.unbindRenderTarget(renderTarget);\n        return out;\n    }\n\n    updateVideoTexture(texture: WebGLInternalTex, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\n\n        let gl = texture._gl;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        // todo 用 sub 会慢\n        //gl.texSubImage2D(target, 0, 0, 0, format, type, video);\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    getRenderTextureData(internalTex: WebGLInternalRT, x: number, y: number, width: number, height: number): ArrayBufferView {\n        if (internalTex.colorFormat == RenderTargetFormat.None)\n            return null;\n        let gl = internalTex._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalTex._framebuffer);\n        var canRead: boolean = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\n        if (!canRead) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            return null;\n        }\n        let size = width * height;\n        let format, type;\n        var pixels;\n        switch (internalTex.colorFormat) {\n            case RenderTargetFormat.R8G8B8:\n                format = gl.RGB;\n                type = gl.UNSIGNED_BYTE;\n                pixels = new Uint8Array(size * 3);\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                format = gl.RGBA;\n                type = gl.UNSIGNED_BYTE;\n                pixels = new Uint8Array(size * 4);\n                break;\n            case RenderTargetFormat.R16G16B16:\n                format = gl.RGB;\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\n                pixels = new Uint16Array(size * 3);\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                format = gl.RGBA;\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\n                pixels = new Uint16Array(size * 4);\n                break;\n            case RenderTargetFormat.R32G32B32:\n                format = gl.RGB;\n                type = gl.FLOAT;\n                pixels = new Float32Array(size * 3);\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                format = gl.RGBA;\n                type = gl.FLOAT;\n                pixels = new Float32Array(size * 4);\n                break;\n            default:\n                return null;\n        }\n        gl.readPixels(x, y, width, height, format, type, pixels);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return pixels;\n    }\n\n}","import { GLTextureContext } from \"./GLTextureContext\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\n\n/**\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\n */\nexport class GL2TextureContext extends GLTextureContext {\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n    }\n\n    protected getTarget(dimension: TextureDimension): number {\n        let target: number = -1;\n        switch (dimension) {\n            case TextureDimension.Cube:\n                target = this._gl.TEXTURE_CUBE_MAP;\n                break;\n            case TextureDimension.Tex2D:\n                target = this._gl.TEXTURE_2D;\n                break;\n            case TextureDimension.Texture2DArray:\n                target = (<WebGL2RenderingContext>this._gl).TEXTURE_2D_ARRAY;\n                break;\n            case TextureDimension.Tex3D:\n                target = (<WebGL2RenderingContext>this._gl).TEXTURE_3D;\n                break;\n            default:\n                throw \"Unknow Texture Target\";\n        }\n        return target;\n    }\n\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\n        let gl = <WebGL2RenderingContext>this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R5G6B5:\n                this._glParam.internalFormat = gl.RGB565;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\n                break;\n            case TextureFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA32F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB32F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB16F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case TextureFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA16F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case TextureFormat.DXT1:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                // this._glParam.format = gl.RGBA;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT3:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT5:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC1RGB:\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGBA:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha8:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC4x4:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC8x8:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC10x10:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC12x12:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC4x4SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC8x8SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC10x10SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC12x12SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            default:\n                throw \"Unknown Texture Format.\";\n        }\n\n        return this._glParam;\n    }\n\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\n        let gl = <WebGL2RenderingContext>this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.DEPTH_32:\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.STENCIL_8:\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n            case RenderTargetFormat.R8G8B8:\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R8G8B8A8:\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R16G16B16:\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R16G16B16A16:\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R32G32B32:\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R32G32B32A32:\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\n            default:\n                return null;\n        }\n    }\n\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\n        let gl = <WebGL2RenderingContext>this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB16F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA16F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB32F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA32F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\n                this._glParam.format = gl.DEPTH_COMPONENT;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n                break;\n            default:\n                throw \"depht texture format wrong.\"\n        }\n\n        return this._glParam;\n    }\n\n    getGLtexMemory(tex: WebGLInternalTex): number {\n        let gl = <WebGL2RenderingContext>this._gl;\n        let channels = 0;\n        let singlebyte = 0;\n        let bytelength = 0;\n        switch (tex.internalFormat) {\n            case gl.SRGB8:\n            case gl.RGB8:\n            case gl.RGB565:\n            case gl.RGB32F:\n            case gl.RGB16F:\n                channels = 3;\n                break;\n            case gl.SRGB8_ALPHA8:\n            case gl.RGBA8:\n            case gl.RGBA32F:\n            case gl.RGBA16F:\n                channels = 4;\n                break;\n            default:\n                channels = 0;\n                break;\n        }\n        switch (tex.type) {\n            case gl.UNSIGNED_BYTE:\n                singlebyte = 1;\n                break;\n            case gl.UNSIGNED_SHORT_5_6_5:\n                singlebyte = 2 / 3;\n                break;\n            case gl.FLOAT:\n                singlebyte = 4;\n                break;\n            case gl.HALF_FLOAT:\n                singlebyte = 2;\n                break;\n            default:\n                singlebyte = 0;\n                break;\n        }\n        bytelength = channels * singlebyte * tex.width * tex.height;\n        if (tex.mipmap) {\n            bytelength *= 1.333;\n        }\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\n            bytelength *= 6;\n        else if (tex.target == gl.TEXTURE_2D)\n            bytelength *= 1;\n        return bytelength;\n    }\n\n    // todo webgl2 srgb 判断\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\n            default:\n                return false;\n        }\n    }\n\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n        if (texture.width != source.width || texture.height != source.height) {\n            // todo ?\n            console.warn(\"setTextureImageData: size not match\");\n        }\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let gl = <WebGL2RenderingContext>this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTexturebySubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let gl = <WebGL2RenderingContext>this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texStorage2D(target, mipmapCount, internalFormat, source.width, source.height);\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = <WebGL2RenderingContext>this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (source) {\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\n        let sourceData = hdrInfo.readScanLine();\n\n        this.setTexturePixelsData(texture, sourceData, false, false);\n    }\n\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size \n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = <WebGL2RenderingContext>this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n\n            if (compressed) {\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                memory += sourceData.length;\n            }\n            else {\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                memory += sourceData.length;\n            }\n\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = memory;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\n        let gl = <WebGL2RenderingContext>this._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        for (let index = 0; index < cubeFace.length; index++) {\n            let t = cubeFace[index];\n            // gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\n        }\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\n        let gl = <WebGL2RenderingContext>this._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ];\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        if (source) {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n\n\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo): void {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let gl = <WebGL2RenderingContext>this._gl;\n\n        // ktx 标准顺序\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n\n            for (let face = 0; face < 6; face++) {\n                let t = cubeFace[face];\n\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                else {\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n\n    }\n\n\n    //TODO miner\n    getCubeKTXRGBMData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n        let rightFaceData = [];\n        let leftFaceData = [];\n        let upFaceData = [];\n        let downFaceData = [];\n        let backFaceData = [];\n        let frontFaceData = [];\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let gl = <WebGL2RenderingContext>this._gl;\n\n        // ktx 标准顺序\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n\n            for (let face = 0; face < 6; face++) {\n                let t = cubeFace[face];\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                memory += sourceData.byteLength;\n            }\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n        }\n\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\n        let gl = <WebGL2RenderingContext>this._gl;\n        switch (compareMode) {\n            case TextureCompareMode.LEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.GEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.LESS:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.GREATER:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.EQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.NOTEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.ALWAYS:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.NEVER:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.None:\n            default:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\n                break;\n        }\n        return compareMode;\n\n    }\n\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number): WebGLRenderbuffer {\n        // todo  多个 gl\n        let gl = <WebGL2RenderingContext>this._gl;\n\n        let renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n\n        if (samples > 1) {\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\n        }\n        else {\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        }\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n        return renderbuffer;\n    }\n\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n\n\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = <WebGL2RenderingContext>internalTex._gl;\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\n\n        this._engine._bindTexture(internalTex.target, null);\n\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n\n        return internalTex;\n    }\n\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\n        renderTarget._textures.push(texture);\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        if (renderTarget._samples > 1) {\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            // color\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            // color\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n\n        return renderTarget;\n\n    }\n\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\n        renderTarget.colorFormat = colorFormat;\n        renderTarget.depthStencilFormat = depthStencilFormat;\n        renderTarget._textures.push(texture);\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        if (renderTarget._samples > 1) {\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n\n\n        return renderTarget;\n    }\n\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = <WebGL2RenderingContext>internalTex._gl;\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\n\n        this._engine._bindTexture(internalTex.target, null);\n\n        return internalTex;\n\n    }\n\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\n        let gl = <WebGL2RenderingContext>renderTarget._gl;\n\n        if (renderTarget._isCube) {\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\n        }\n\n        if (renderTarget._samples > 1) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        }\n    }\n\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\n        let gl = <WebGL2RenderingContext>renderTarget._gl;\n        if (renderTarget._samples > 1) {\n\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\n\n            let texture = renderTarget._textures[0];\n\n            // todo 不用clear ?\n            // gl.clearBufferfv(gl.COLOR, 0, [0, 0, 0, 0]);\n            // gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\n\n            // todo  blit mask\n            let biltMask = gl.COLOR_BUFFER_BIT;\n            if (renderTarget._depthTexture) {\n                biltMask |= gl.DEPTH_BUFFER_BIT;\n            }\n\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\n        }\n        if (renderTarget._generateMipmap) {\n            renderTarget._textures.forEach(tex => {\n                let target = (<WebGLInternalTex>tex).target;\n                this._engine._bindTexture(target, tex.resource);\n                gl.generateMipmap(target);\n                this._engine._bindTexture(target, null);\n            });\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class GLBuffer extends GLObject implements IRenderBuffer {\n    //GLParams\n    _glBuffer: WebGLBuffer;\n    _glTarget: number;\n    _glUsage: number;\n    //Common Enum\n    _glTargetType: BufferTargetType;\n    _glBufferUsageType: BufferUsage;\n    //size\n    _byteLength: number = 0;\n\n    constructor(engine: WebGLEngine, targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n        super(engine)\n        this._glTargetType = targetType;\n        this._glBufferUsageType = bufferUsageType;\n        this._getGLTarget(this._glTargetType);\n        this._getGLUsage(this._glBufferUsageType);\n        this._glBuffer = this._gl.createBuffer();\n    }\n\n    private _getGLUsage(usage: BufferUsage) {\n        switch (usage) {\n            case BufferUsage.Static:\n                this._glUsage = this._gl.STATIC_DRAW;\n                break;\n            case BufferUsage.Dynamic:\n                this._glUsage = this._gl.DYNAMIC_DRAW;\n                break;\n            case BufferUsage.Stream:\n                this._glUsage = this._gl.STREAM_DRAW;\n                break;\n            default:\n                console.error(\"usage is not standard\");\n                break;\n        }\n    }\n\n    private _getGLTarget(target: BufferTargetType) {\n        switch (target) {\n            case BufferTargetType.ARRAY_BUFFER:\n                this._glTarget = this._gl.ARRAY_BUFFER\n                break;\n            case BufferTargetType.UNIFORM_BUFFER:\n                this._glTarget = (<WebGL2RenderingContext>this._gl).UNIFORM_BUFFER;\n                break;\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _memorychange(bytelength: number) {\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.BufferMemory, bytelength);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, bytelength);\n    }\n\n    bindBuffer(): boolean {\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\n            this._engine._setbindBuffer(this._glTargetType, this);\n            return true;\n        }\n        return false;\n    }\n\n    unbindBuffer() {\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\n            this._gl.bindBuffer(this._glTarget, null);\n            this._engine._setbindBuffer(this._glTargetType, null);\n        }\n    }\n\n    orphanStorage() {\n        this.bindBuffer();\n        this.setDataLength(this._byteLength);\n    }\n\n    setDataLength(srcData: number): void {\n        let gl = this._gl;\n        this.bindBuffer();\n        this._memorychange(-this._byteLength);\n        this._byteLength = srcData;\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n        this.unbindBuffer();\n        this._memorychange(this._byteLength);\n    }\n\n\n\n\n    setData(srcData: ArrayBuffer | ArrayBufferView, offset: number): void {\n        let gl = this._gl;\n        this.bindBuffer();\n        gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\n        this.unbindBuffer();\n    }\n    setDataEx(srcData: ArrayBuffer | ArrayBufferView, offset: number, length: number): void {\n        let gl = this._gl;\n        this.bindBuffer();\n        gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\n        this.unbindBuffer();\n    }\n    // setData(srcData: ArrayBuffer | ArrayBufferView | number, offset?: number, length?: number): void {\n    //     let gl = this._gl;\n    //     this.bindBuffer();\n    //     if (typeof srcData == \"number\") {\n    //         this._byteLength = srcData as number;\n    //         gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n    //     }\n    //     if (offset != undefined && length == undefined) {\n    //         gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\n    //     }\n    //     if(offset != undefined && length != undefined) {\n    //         gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\n    //     }\n    //     this.unbindBuffer();\n    // }\n\n\n    //TODO:\n    bindBufferBase(glPointer: number) {\n        if (this._engine._getBindUBOBuffer(glPointer) != this) {\n            const gl = <WebGL2RenderingContext>this._gl;\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\n            this._engine._setBindUBOBuffer(glPointer, this);\n        }\n    }\n\n    //TODO:\n    bindBufferRange(glPointer: number, offset: number, byteCount: number) {\n        const gl = <WebGL2RenderingContext>this._gl;\n        gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\n    }\n\n    resizeBuffer(dataLength: number) {\n        this.bindBuffer();\n        const gl = this._gl;\n        this._byteLength = dataLength;\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n    }\n\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        gl.deleteBuffer(this._glBuffer);\n        this._memorychange(-this._byteLength);\n        this._byteLength = 0;\n        this._engine = null;\n        this._glBuffer = null;\n        this._glTarget = null;\n        this._glUsage = null;\n        this._gl = null;\n\n    }\n}","// @ts-nocheck\nexport class VertexArrayObject {\n    constructor() {\n    }\n}\n\n\n(function () {\n    \"use strict\";\n\n    var glErrorShadow = {};\n\n    function error(msg) {\n        if (window.console && window.console.error) {\n            window.console.error(msg);\n        }\n    }\n\n    function log(msg) {\n        if (window.console && window.console.log) {\n            window.console.log(msg);\n        }\n    }\n\n    function synthesizeGLError(err, opt_msg) {\n        glErrorShadow[err] = true;\n        if (opt_msg !== undefined) {\n            error(opt_msg)\n        }\n    }\n\n    function wrapGLError(gl) {\n        var f = gl.getError;\n        gl.getError = function () {\n            var err;\n            do {\n                err = f.apply(gl);\n                if (err != gl.NO_ERROR) {\n                    glErrorShadow[err] = true;\n                }\n            } while (err != gl.NO_ERROR);\n\n            for (var err1 in glErrorShadow) {\n                if (glErrorShadow[err1]) {\n                    delete glErrorShadow[err1];\n                    return parseInt(err1);\n                }\n            }\n            return gl.NO_ERROR;\n        };\n    }\n\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n        var gl = ext.gl;\n\n        this.ext = ext;\n        this.isAlive = true;\n        this.hasBeenBound = false;\n\n        this.elementArrayBuffer = null;\n        this.attribs = new Array(ext.maxVertexAttribs);\n        for (var n = 0; n < this.attribs.length; n++) {\n            var attrib = new (WebGLVertexArrayObjectOES as any).VertexAttrib(gl);\n            this.attribs[n] = attrib;\n        }\n\n        this.maxAttrib = 0;\n    };\n\n    (WebGLVertexArrayObjectOES as any).VertexAttrib = function VertexAttrib(gl) {\n        this.enabled = false;\n        this.buffer = null;\n        this.size = 4;\n        this.type = gl.FLOAT;\n        this.normalized = false;\n        this.stride = 16;\n        this.offset = 0;\n\n        this.cached = \"\";\n        this.recache();\n    };\n    (WebGLVertexArrayObjectOES as any).VertexAttrib.prototype.recache = function recache() {\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\n    };\n\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\n        var self = this;\n        this.gl = gl;\n\n        wrapGLError(gl);\n\n        var original = this.original = {\n            getParameter: gl.getParameter,\n            enableVertexAttribArray: gl.enableVertexAttribArray,\n            disableVertexAttribArray: gl.disableVertexAttribArray,\n            bindBuffer: gl.bindBuffer,\n            getVertexAttrib: gl.getVertexAttrib,\n            vertexAttribPointer: gl.vertexAttribPointer\n        };\n\n        gl.getParameter = function getParameter(pname) {\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\n                    return null;\n                } else {\n                    return self.currentVertexArrayObject;\n                }\n            }\n            return original.getParameter.apply(this, arguments);\n        };\n\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\n            var attrib = vao.attribs[index];\n            attrib.enabled = true;\n            return original.enableVertexAttribArray.apply(this, arguments);\n        };\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\n            var attrib = vao.attribs[index];\n            attrib.enabled = false;\n            return original.disableVertexAttribArray.apply(this, arguments);\n        };\n\n        gl.bindBuffer = function bindBuffer(target, buffer) {\n            switch (target) {\n                case gl.ARRAY_BUFFER:\n                    self.currentArrayBuffer = buffer;\n                    break;\n                case gl.ELEMENT_ARRAY_BUFFER:\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\n                    break;\n            }\n            return original.bindBuffer.apply(this, arguments);\n        };\n\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\n            var vao = self.currentVertexArrayObject;\n            var attrib = vao.attribs[index];\n            switch (pname) {\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\n                    return attrib.buffer;\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\n                    return attrib.enabled;\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\n                    return attrib.size;\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\n                    return attrib.stride;\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\n                    return attrib.type;\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\n                    return attrib.normalized;\n                default:\n                    return original.getVertexAttrib.apply(this, arguments);\n            }\n        };\n\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\n            var attrib = vao.attribs[indx];\n            attrib.buffer = self.currentArrayBuffer;\n            attrib.size = size;\n            attrib.type = type;\n            attrib.normalized = normalized;\n            attrib.stride = stride;\n            attrib.offset = offset;\n            attrib.recache();\n            return original.vertexAttribPointer.apply(this, arguments);\n        };\n\n        if (gl.instrumentExtension) {\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\n        }\n\n        gl.canvas.addEventListener('webglcontextrestored', function () {\n            log(\"OESVertexArrayObject emulation library context restored\");\n            self.reset_();\n        }, true);\n\n        this.reset_();\n    };\n\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\n\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\n        var contextWasLost = this.vertexArrayObjects !== undefined;\n        if (contextWasLost) {\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\n                this.vertexArrayObjects.isAlive = false;\n            }\n        }\n        var gl = this.gl;\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n        this.currentVertexArrayObject = null;\n        this.currentArrayBuffer = null;\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\n\n        this.bindVertexArrayOES(null);\n    };\n\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\n        this.vertexArrayObjects.push(arrayObject);\n        return arrayObject;\n    };\n\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n        arrayObject.isAlive = false;\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n        if (this.currentVertexArrayObject == arrayObject) {\n            this.bindVertexArrayOES(null);\n        }\n    };\n\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n            if ((arrayObject as any).hasBeenBound && (arrayObject as any).ext == this) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n        var gl = this.gl;\n        if (arrayObject && !arrayObject.isAlive) {\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\n            return;\n        }\n        var original = this.original;\n\n        var oldVAO = this.currentVertexArrayObject;\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n        this.currentVertexArrayObject.hasBeenBound = true;\n        var newVAO = this.currentVertexArrayObject;\n\n        if (oldVAO == newVAO) {\n            return;\n        }\n\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\n        }\n\n        var currentBinding = this.currentArrayBuffer;\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n        for (var n = 0; n <= maxAttrib; n++) {\n            var attrib = newVAO.attribs[n];\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\n                if (attrib.enabled) {\n                    original.enableVertexAttribArray.call(gl, n);\n                } else {\n                    original.disableVertexAttribArray.call(gl, n);\n                }\n            }\n\n            if (attrib.enabled) {\n                var bufferChanged = false;\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\n                    if (currentBinding != attrib.buffer) {\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\n                        currentBinding = attrib.buffer;\n                    }\n                    bufferChanged = true;\n                }\n\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n                }\n            }\n        }\n\n        if (this.currentArrayBuffer != currentBinding) {\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\n        }\n    };\n\n    (window as any)._setupVertexArrayObject = function (gl) {\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\n        gl.getSupportedExtensions = function getSupportedExtensions() {\n            var list = original_getSupportedExtensions.call(this) || [];\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\n                list.push(\"OES_vertex_array_object\");\n            }\n            return list;\n        };\n\n        var original_getExtension = gl.getExtension;\n\n        gl.getExtension = function getExtension(name) {\n            var ext = original_getExtension.call(this, name);\n            if (ext) {\n                return ext;\n            }\n            if (name !== \"OES_vertex_array_object\") {\n                return null;\n            }\n\n            if (!this.__OESVertexArrayObject) {\n                console.log(\"Setup OES_vertex_array_object polyfill\");\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\n            }\n            return this.__OESVertexArrayObject;\n        };\n    };\n}());\n","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { VertexArrayObject } from \"./VertexArrayObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class GlCapable {\n    /**@internal */\n    private _extentionVendorPrefixes: string[] = [\"\", \"WEBKIT_\", \"MOZ_\"];\n    /**@internal */\n    private _gl: any;\n    /**@internal */\n    private _extensionMap: Map<WebGLExtension, any>;\n    /**@internal */\n    private _capabilityMap: Map<RenderCapable, boolean>;\n\n\n    constructor(glEngine: WebGLEngine) {\n        this._gl = glEngine.gl;\n        this.initExtension(glEngine.isWebGL2);\n        this.initCapable(glEngine.isWebGL2);\n    }\n\n    private initCapable(isWebgl2: boolean) {\n        this._capabilityMap = new Map();\n        //Index Uint32\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\n        //FLoat32Texture\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\n        //halfFloatTexture\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\n        //anistropic\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\n        if (isWebgl2) {\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float);\n        } else {\n            value = (!!this.getExtension(WebGLExtension.OES_texture_half_float)) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\n        }\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\n        value = isWebgl2;\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB))\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\n        value = isWebgl2;\n        this._capabilityMap.set(RenderCapable.MSAA, value);\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\n        this._capabilityMap.set(RenderCapable.GRAPHICS_API_GLES3, value);\n    }\n\n    private initExtension(isWebgl2: boolean) {\n        this._extensionMap = new Map();\n        const setExtensionMap = (extension: WebGLExtension, value: any, map: Map<WebGLExtension, any>) => {\n            value && map.set(extension, value);\n        }\n        const _extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\n        const _compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\n        const _compressdTextureS3tc_srgb = this._getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\n        const _compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\n        const _compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\n        const _compressedTextureETC = this._getExtension(\"WEBGL_compressed_texture_etc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\n        const _compressedTextureASTC = this._getExtension(\"WEBGL_compressed_texture_astc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\n        const _oesTextureFloatLinear = this._getExtension(\"OES_texture_float_linear\");\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\n        if (isWebgl2) {\n            const _extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\n            const _extColorBufferHalfFloat = this._getExtension(\"EXT_color_buffer_half_float\");\n            setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\n        } else {\n            VertexArrayObject;//强制引用\n            if ((window as any)._setupVertexArrayObject) //兼容VAO\n                (window as any)._setupVertexArrayObject(this._gl);\n            const _vaoExt = this._getExtension(\"OES_vertex_array_object\");\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\n            const _angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\n            const _oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\n            const _oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\n            const _oesTextureFloat = this._getExtension(\"OES_texture_float\");\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\n\n            const _oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\n            const _extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\n            const _webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\n            const _sRGB = this._getExtension(\"EXT_sRGB\");\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\n\n\n        }\n    }\n\n    getCapable(type: RenderCapable): boolean {\n        return this._capabilityMap.get(type);\n    }\n\n    getExtension(type: WebGLExtension): any {\n        if (this._extensionMap.has(type))\n            return this._extensionMap.get(type);\n        else\n            return null;\n    }\n\n    /**\n     * @internal\n     */\n    private _getExtension(name: string) {\n        const prefixes: string[] = this._extentionVendorPrefixes;\n        for (const k in prefixes) {\n            var ext = this._gl.getExtension(prefixes[k] + name);\n            if (ext)\n                return ext;\n        }\n        return null;\n    }\n\n\n}","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n/**\n * \n */\nexport class GLParams{\n    _engine: WebGLEngine;\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n    _glParamsData:Map<RenderParams,number>;\n    constructor(engine: WebGLEngine){\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._initParams();\n    }\n\n    private _initParams(){\n        const gl = this._gl;\n        this._glParamsData = new Map();\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count,gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\n        const maxVertexUniform:number = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        const maxFragUniform:number = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        this._glParamsData.set(RenderParams.Max_Uniform_Count,Math.min(maxVertexUniform,maxFragUniform));\n        this._glParamsData.set(RenderParams.MAX_Texture_Size,gl.getParameter(gl.MAX_TEXTURE_SIZE));\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint,gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n        if(this._engine.getCapable(RenderCapable.Texture_anisotropic)){\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count,gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n        }\n        if(this._engine.isWebGL2)\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,35);\n        else\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,30);\n        this._glParamsData.set(RenderParams.FLOAT,gl.FLOAT);\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE,gl.UNSIGNED_BYTE);\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT,gl.UNSIGNED_SHORT);\n        this._glParamsData.set(RenderParams.BYTE,gl.BYTE);\n\n    }\n\n    getParams(params:RenderParams):number{\n        return this._glParamsData.get(params);\n    }\n}","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { GLObject } from \"./GLObject\";\nimport { GLShaderInstance } from \"./GLShaderInstance\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n\nexport class GLRender2DContext extends GLObject implements IRender2DContext {\n    private shaderInstance:GLShaderInstance;\n    private cacheShaderProgram:any;\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        //this.shaderInstance = new GLShaderInstance(engine, null, null, null);\n    }\n\n    activeTexture(textureID: number): void {\n        if (this._engine._activedTextureID !== textureID) {\n            this._gl.activeTexture(textureID);\n            this._engine._activedTextureID = textureID;\n        }\n    }\n\n    bindTexture(target: number, texture: WebGLTexture): void {\n        this._engine._bindTexture(target, texture);\n    }\n\n    bindUseProgram(webglProgram: any):boolean {\n        if(this.cacheShaderProgram==webglProgram)\n            return false;\n        this._gl.useProgram(webglProgram);\n        this._engine._glUseProgram = null;;\n        return true;\n    }\n\n}","export enum DrawType {\n    DrawArray,\n    DrawArrayInstance,\n    DrawElement,\n    DrawElementInstance\n}","import { DrawType } from \"../../RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\"\n\n//TODO\nexport class GLRenderDrawContext extends GLObject implements IRenderDrawContext {\n    private _angleInstancedArrays: any;\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        if (!this._engine.isWebGL2) {\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\n        }\n    }\n\n    //TODO 优化\n    getMeshTopology(mode: MeshTopology): number {\n        switch (mode) {\n            case MeshTopology.Points:\n                return this._gl.POINTS;\n            case MeshTopology.Lines:\n                return this._gl.LINES;\n            case MeshTopology.LineLoop:\n                return this._gl.LINE_LOOP;\n            case MeshTopology.LineStrip:\n                return this._gl.LINE_STRIP;\n            case MeshTopology.Triangles:\n                return this._gl.TRIANGLES;\n            case MeshTopology.TriangleStrip:\n                return this._gl.TRIANGLE_STRIP;\n            case MeshTopology.TriangleFan:\n                return this._gl.TRIANGLE_FAN;\n        }\n    }\n\n    getIndexType(type: IndexFormat): number {\n        switch (type) {\n            case IndexFormat.UInt8:\n                return this._gl.UNSIGNED_BYTE;\n            case IndexFormat.UInt16:\n                return this._gl.UNSIGNED_SHORT;\n            case IndexFormat.UInt32:\n                return this._gl.UNSIGNED_INT;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\n        const glmode = this.getMeshTopology(mode);\n        const gltype = this.getIndexType(type);\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).drawElementsInstanced(glmode, count, gltype, offset, instanceCount);\n        else\n            this._angleInstancedArrays.drawElementsInstancedANGLE(glmode, count, gltype, offset, instanceCount);\n        \n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall,1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall,1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle,count/3*instanceCount);\n\n    }\n\n    /**\n     * @internal\n     */\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\n        const glmode = this.getMeshTopology(mode);\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).drawArraysInstanced(glmode, first, count, instanceCount);\n        else\n            this._angleInstancedArrays.drawArraysInstancedANGLE(glmode, first, count, instanceCount);\n        \n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall,1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall,1);\n        //TODO glmode\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle,(count-2)*instanceCount);\n    }\n\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\n        const glmode = this.getMeshTopology(mode);\n        this._gl.drawArrays(glmode, first, count);\n\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall,1);\n        //TODO glmode\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle,(count-2));\n        \n    }\n\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\n        const glmode = this.getMeshTopology(mode);\n        const gltype = this.getIndexType(type);\n        this._gl.drawElements(glmode, count, gltype, offset);\n\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall,1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle,count/3);\n        \n    }\n\n\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\n        geometryElement.bufferState.bind();\n        let element = geometryElement.drawParams.elements;\n        let length = geometryElement.drawParams.length;\n        switch (geometryElement.drawType) {\n            case DrawType.DrawArray:\n                for(let i = 0;i<length;i+=2){\n                    this.drawArrays(geometryElement.mode,element[i],element[i+1]);\n                }\n                break;\n            case DrawType.DrawElement:\n                for(let i = 0;i<length;i+=2){\n                    this.drawElements(geometryElement.mode,element[i+1],geometryElement.indexFormat,element[i]);\n                }\n                break;\n            case DrawType.DrawArrayInstance:\n                for(let i = 0;i<length;i+=2){\n                    this.drawArraysInstanced(geometryElement.mode,element[i],element[i+1],geometryElement.instanceCount);\n                }\n                break;\n            case DrawType.DrawElementInstance:\n                for(let i = 0;i<length;i+=2){\n                    this.drawElementsInstanced(geometryElement.mode,element[i+1],geometryElement.indexFormat,element[i],geometryElement.instanceCount);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n\n}","export enum CompareFunction {\n    /** never pass. */\n    Never,\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\n    Less,\n    /** pass if the incoming value equals the depth/stencil buffer value. */\n    Equal,\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\n    LessEqual,\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\n    Greater,\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\n    NotEqual,\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\n    GreaterEqual,\n    /** always pass. */\n    Always\n  }\n  ","export enum StencilOperation {\n    /** Keeps the current value. */\n    Keep,\n    /** Sets the stencil buffer value to 0. */\n    Zero,\n    /** Sets the stencil buffer value to the reference value. */\n    Replace,\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\n    IncrementSaturate,\n    /** Decrements the current stencil buffer value. Clamps to 0. */\n    DecrementSaturate,\n    /** Inverts the current stencil buffer value bitwise. */\n    Invert,\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\n    IncrementWrap,\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\n    DecrementWrap\n  }\n  ","import { BlendEquationSeparate } from \"../../RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../../RenderEnum/BlendFactor\";\nimport { BlendType } from \"../../RenderEnum/BlendType\";\nimport { CompareFunction } from \"../../RenderEnum/CompareFunction\";\nimport { CullMode } from \"../../RenderEnum/CullMode\";\nimport { RenderStateType } from \"../../RenderEnum/RenderStateType\";\nimport { StencilOperation } from \"../../RenderEnum/StencilOperation\";\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class GLRenderState {\n    //Depth\n    /**@internal */\n    private _depthTest: boolean = true;\n    /**@internal */\n    private _depthMask: boolean = true;\n    /**@internal */\n    private _depthFunc: number;\n    //stencil\n    /**@internal */\n    private _stencilTest: boolean = false;\n    /**@internal */\n    private _stencilFunc: number;\n    /**@internal */\n    private _stencilMask: boolean;\n    /**@internal */\n    private _stencilRef: number\n    /**@internal */\n    private _stencilOp_fail: number;\n    /**@internal */\n    private _stencilOp_zfail: number;\n    /**@internal */\n    private _stencilOp_zpass: number;\n    //blender\n    /**@internal */\n    private _blend: boolean = false;\n    /**@internal */\n    private _blendEquation: number;\n    /**@internal */\n    private _blendEquationRGB: number;\n    /**@internal */\n    private _blendEquationAlpha: number;\n    /**@internal */\n    private _sFactor: number;\n    /**@internal */\n    private _dFactor: number;\n    /**@internal */\n    private _sFactorRGB: number;\n    /**@internal */\n    private _dFactorRGB: number;\n    /**@internal */\n    private _sFactorAlpha: number;\n    /**@internal */\n    private _dFactorAlpha: number;\n    //cull\n    /**@internal */\n    private _cullFace: boolean = false;\n    /**@internal */\n    private _frontFace: number;\n\n    _engine: WebGLEngine;\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    constructor(engine: WebGLEngine) {\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._initState();\n    }\n\n    private _initState() {\n        //TODO:并不完全\n        const gl = this._gl;\n        this.setDepthFunc(gl.LESS);\n        this.setBlendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n        this._blendEquation = gl.FUNC_ADD;\n        this._sFactor = gl.ONE;\n        this._dFactor = gl.ZERO;\n        this._sFactorAlpha = gl.ONE;\n        this._dFactorAlpha = gl.ONE;\n\n    }\n\n    //TODO 性能优化\n    _getBlendFactor(factor: BlendFactor) {\n        const gl = this._gl;\n        switch (factor) {\n            case BlendFactor.Zero:\n                return gl.ZERO;\n            case BlendFactor.One:\n                return gl.ONE;\n            case BlendFactor.SourceColor:\n                return gl.SRC_COLOR;\n            case BlendFactor.OneMinusSourceColor:\n                return gl.ONE_MINUS_SRC_COLOR;\n            case BlendFactor.DestinationColor:\n                return gl.DST_COLOR;\n            case BlendFactor.OneMinusDestinationColor:\n                return gl.ONE_MINUS_DST_COLOR;\n            case BlendFactor.SourceAlpha:\n                return gl.SRC_ALPHA;\n            case BlendFactor.OneMinusSourceAlpha:\n                return gl.ONE_MINUS_SRC_ALPHA;\n            case BlendFactor.DestinationAlpha:\n                return gl.DST_ALPHA;\n            case BlendFactor.OneMinusDestinationAlpha:\n                return gl.ONE_MINUS_DST_ALPHA;\n            case BlendFactor.SourceAlphaSaturate:\n                return gl.SRC_ALPHA_SATURATE;\n            case BlendFactor.BlendColor:\n                return gl.CONSTANT_COLOR;\n            case BlendFactor.OneMinusBlendColor:\n                return gl.ONE_MINUS_CONSTANT_COLOR;\n        }\n    }\n    //TODO:性能优化\n    _getBlendOperation(factor: BlendEquationSeparate) {\n        const gl = this._gl;\n        switch (factor) {\n            case BlendEquationSeparate.ADD:\n                return gl.FUNC_ADD;\n            case BlendEquationSeparate.SUBTRACT:\n                return gl.FUNC_SUBTRACT;\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\n                return gl.FUNC_REVERSE_SUBTRACT;\n            // case BlendEquationSeparate.MIN:\n            //     return -1;\n            // case BlendEquationSeparate.MAX:\n            //     return -1;\n            default:\n                throw \"Unknow type\"\n        }\n    }\n\n    //TODO 性能优化\n    _getGLCompareFunction(compareFunction: CompareFunction): number {\n        const gl = this._gl;\n        switch (compareFunction) {\n            case CompareFunction.Never:\n                return gl.NEVER;\n            case CompareFunction.Less:\n                return gl.LESS;\n            case CompareFunction.Equal:\n                return gl.EQUAL;\n            case CompareFunction.LessEqual:\n                return gl.LEQUAL;\n            case CompareFunction.Greater:\n                return gl.GREATER;\n            case CompareFunction.NotEqual:\n                return gl.NOTEQUAL;\n            case CompareFunction.GreaterEqual:\n                return gl.GEQUAL;\n            case CompareFunction.Always:\n                return gl.ALWAYS;\n        }\n    }\n\n    //性能优化\n    _getGLStencilOperation(compareFunction: StencilOperation): number {\n        const gl = this._gl;\n        switch (compareFunction) {\n            case StencilOperation.Keep:\n                return gl.KEEP;\n            case StencilOperation.Zero:\n                return gl.ZERO;\n            case StencilOperation.Replace:\n                return gl.REPLACE;\n            case StencilOperation.IncrementSaturate:\n                return gl.INCR;\n            case StencilOperation.DecrementSaturate:\n                return gl.DECR;\n            case StencilOperation.Invert:\n                return gl.INVERT;\n            case StencilOperation.IncrementWrap:\n                return gl.INCR_WRAP;\n            case StencilOperation.DecrementWrap:\n                return gl.DECR_WRAP;\n        }\n    }\n\n    //\n    _getGLFrontfaceFactor(cullmode: CullMode) {\n        if (cullmode == CullMode.Front)\n            return this._gl.CCW;\n        else\n            return this._gl.CW;\n    }\n\n    //Depth\n    /**\n     * @internal\n     */\n    setDepthTest(value: boolean): void {\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\n    }\n\n    /**\n     * @internal\n     */\n    setDepthMask(value: boolean): void {\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\n    }\n\n    /**\n     * @internal\n     * value {CompareType}\n     */\n    setDepthFunc(value: number): void {\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(value));\n    }\n\n\n    //stencil\n    /**\n     * @internal\n     */\n    setStencilTest(value: boolean): void {\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\n    }\n\n    /**\n     * 模板写入开关\n     * @param value \n     */\n    setStencilMask(value: boolean): void {\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\n    }\n\n    /**\n     * @internal\n     */\n    setStencilFunc(fun: number, ref: number): void {\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\n            this._stencilFunc = fun;\n            this._stencilRef = ref;\n            this._gl.stencilFunc(fun, ref, 0xff);\n        }\n    }\n\n    /**\n    * @internal\n    */\n    setstencilOp(fail: number, zfail: number, zpass: number) {\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\n            this._stencilOp_fail = fail;\n            this._stencilOp_zfail = zfail;\n            this._stencilOp_zpass = zpass;\n            this._gl.stencilOp(fail, zfail, zpass);\n        }\n    }\n\n    //blend()\n    /**\n     * @internal\n     */\n    setBlend(value: boolean): void {\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\n    }\n\n    /**\n     * @internal\n     */\n    setBlendEquation(blendEquation: number): void {\n        if (blendEquation !== this._blendEquation) {\n            this._blendEquation = blendEquation;\n            this._blendEquationRGB = this._blendEquationAlpha = null;\n            this._gl.blendEquation(blendEquation);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    setBlendEquationSeparate(blendEquationRGB: number, blendEquationAlpha: number): void {\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\n            this._blendEquationRGB = blendEquationRGB;\n            this._blendEquationAlpha = blendEquationAlpha;\n            this._blendEquation = null;\n            this._gl.blendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    setBlendFunc(sFactor: number, dFactor: number, force: boolean = false): void {\n        // 有个iOS的bug，用原来的写法有时候会出错\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\n            this._sFactor = sFactor;\n            this._dFactor = dFactor;\n            this._sFactorRGB = null;\n            this._dFactorRGB = null;\n            this._sFactorAlpha = null;\n            this._dFactorAlpha = null;\n            this._gl.blendFunc(sFactor, dFactor);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    setBlendFuncSeperate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void {\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\n            this._sFactorRGB = srcRGB;\n            this._dFactorRGB = dstRGB;\n            this._sFactorAlpha = srcAlpha;\n            this._dFactorAlpha = dstAlpha;\n            this._sFactor = null;\n            this._dFactor = null;\n            this._gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n        }\n    }\n\n    //cull\n    /**\n     * @internal\n     */\n    setCullFace(value: boolean): void {\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\n    }\n\n    /**\n     * @internal\n     */\n    setFrontFace(value: number): void {\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(value));\n    }\n\n    applyRenderStateCommand(cmd: RenderStateCommand) {\n        let cmdArray = cmd.cmdArray;\n        cmdArray.forEach((value, key) => {\n            switch (key) {\n                case RenderStateType.DepthTest:\n                    this.setDepthTest(value);\n                    break;\n                case RenderStateType.DepthMask:\n                    this.setDepthMask(value);\n                    break;\n                case RenderStateType.DepthFunc:\n                    this.setDepthFunc(this._getGLCompareFunction(value));\n                    break;\n                case RenderStateType.StencilTest:\n                    this.setStencilTest(value);\n                    break;\n                case RenderStateType.StencilMask:\n                    this.setStencilMask(value);\n                    break;\n                case RenderStateType.StencilFunc:\n                    this.setStencilFunc(this._getGLCompareFunction(value[0]), value[1]);\n                    break;\n                case RenderStateType.StencilOp:\n                    this.setstencilOp(this._getGLStencilOperation(value[0]), this._getGLStencilOperation(value[1]), this._getGLStencilOperation(value[2]));//TODO\n                    break;\n                case RenderStateType.BlendType:\n                    this.setBlend(value != BlendType.BLEND_DISABLE);\n                    break;\n                case RenderStateType.BlendEquation:\n                    this.setBlendEquation(this._getBlendOperation(value));\n                    break;\n                case RenderStateType.BlendEquationSeparate:\n                    this.setBlendEquationSeparate(this._getBlendOperation(value[0]), this._getBlendOperation(value[1]));//TODO\n                    break;\n                case RenderStateType.BlendFunc:\n                    this.setBlendFunc(this._getBlendFactor(value[0]), this._getBlendFactor(value[1]));\n                    break;\n                case RenderStateType.BlendFuncSeperate:\n                    this.setBlendFuncSeperate(this._getBlendFactor(value[0]), this._getBlendFactor(value[1]), this._getBlendFactor(value[2]), this._getBlendFactor(value[3]));\n                    break;\n                case RenderStateType.CullFace:\n                    this.setCullFace(value);\n                    break;\n                case RenderStateType.FrontFace:\n                    this.setFrontFace(this._getGLFrontfaceFactor(value));\n                    break;\n                default:\n                    throw \"unknow type of renderStateType\";\n                    break;\n            }\n        })\n    }\n}","/**\n\t * @internal\n\t *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\n\t */\n\texport class ShaderVariable {\n\t\t/**@internal */\n\t\t name:string;\n\t\t/**@internal */\n\t\t type:number;\n\t\t/**@internal */\n\t\t location:WebGLUniformLocation;\n\t\t/**@internal */\n\t\t isArray:boolean;\n\t\t/**@internal */\n\t\t textureID:number;\n\t\t/**@internal */\n\t\t dataOffset:number;\n\t\t\n\t\t/**@internal */\n\t\t caller:any;\n\t\t/**@internal */\n\t\t fun:any;\n\t\t/**@internal */\n\t\t uploadedValue:any[];\n\t\t\n\t\t/**\n\t\t * 创建一个 <code>shaderVariable</code> 实例。\n\t\t */\n\t\tconstructor(){\n\t\t\t\n\t\t\tthis.textureID = -1;\n\t\t}\n\t\n\t}\n\n\n","import { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\nimport { UniformBufferObject } from \"../../UniformBufferObject\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n\nexport class GLShaderInstance extends GLObject implements IRenderShaderInstance {\n\n    _engine: WebGLEngine;\n\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    /**@internal */\n    private _vs: string;\n    /**@internal */\n    private _ps: string;\n    /**@internal TextureId*/\n    private _curActTexIndex: number;\n    /**@internal */\n    private _vshader: WebGLShader;\n    /**@internal */\n    private _pshader: WebGLShader;\n    /**@internal */\n    private _program: WebGLProgram;\n    /**@internal */\n    private _attributeMap: { [name: string]: [number, ShaderDataType] };\n    /**@internal */\n    private _uniformMap: ShaderVariable[];\n    /**@internal */\n    // todo 没用到\n    private _uniformObjectMap: { [key: string]: ShaderVariable };\n    /**@internal */\n    _complete:boolean = true;\n\n    constructor(engine: WebGLEngine, vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }) {\n        super(engine);\n        this._vs = vs;\n        this._ps = ps;\n        this._attributeMap = attributeMap;\n        this._uniformMap = [];\n        this._create();\n    }\n\n    private _create(): void {\n        const gl: WebGLRenderingContext = this._gl;\n        this._program = gl.createProgram();\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\n        gl.attachShader(this._program, this._vshader);\n        gl.attachShader(this._program, this._pshader);\n        for (var k in this._attributeMap)//根据声明调整location,便于VAO使用\n            gl.bindAttribLocation(this._program, this._attributeMap[k][0], k);\n        gl.linkProgram(this._program);\n        const bo = gl.getProgramParameter(this._program, gl.LINK_STATUS);\n        if (!bo) {\n            var info = gl.getProgramInfoLog(this._program);\n            console.error(new Error('Could not compile WebGL program. \\n\\n' + info));\n            this._complete = false;\n            return;\n        }\n        //Uniform\n        //Unifrom Objcet\n        const nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\n        this.useProgram();\n        this._curActTexIndex = 0;\n        let one: ShaderVariable, i: number;\n        for (i = 0; i < nUniformNum; i++) {\n            var uniformData: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\n            var uniName: string = uniformData.name;\n            let location: WebGLUniformLocation = gl.getUniformLocation(this._program, uniName);\n            if (!location && location != 0)\n                continue;\n            one = new ShaderVariable();\n            one.location = location;\n            if (uniName.indexOf('[0]') > 0) {\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\n                one.isArray = true;\n            } else {\n                one.name = uniName;\n                one.isArray = false;\n            }\n            one.type = uniformData.type;\n            this._addShaderUnifiormFun(one);\n            this._uniformMap.push(one);\n            one.dataOffset = this._engine.propertyNameToID(uniName);\n        }\n        if (this._engine.isWebGL2) {\n            this._uniformObjectMap = {};\n            var nUniformBlock: number = gl.getProgramParameter(this._program, (gl as WebGL2RenderingContext).ACTIVE_UNIFORM_BLOCKS);\n            for (i = 0; i < nUniformBlock; i++) {\n                let gl2 = (gl as WebGL2RenderingContext);\n                var uniformBlockName: string = gl2.getActiveUniformBlockName(this._program, i);\n                one = new ShaderVariable();\n                one.name = uniformBlockName;\n                one.isArray = false;\n                one.type = (gl as WebGL2RenderingContext).UNIFORM_BUFFER;\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\n                let location = one.location = gl2.getUniformBlockIndex(this._program, uniformBlockName);\n                gl2.uniformBlockBinding(this._program, location, this._engine.getUBOPointer(uniformBlockName));\n                this._uniformObjectMap[one.name] = one;\n                this._uniformMap.push(one);\n                this._addShaderUnifiormFun(one);\n            }\n        }\n    }\n\n    private _legalUBObyteLength(bytelength: number): number {\n        return Math.ceil(bytelength / 16) * 16;\n    }\n\n    /**\n    * @internal\n    */\n    private _createShader(gl: WebGLRenderingContext, str: string, type: number): any {\n        var shader: WebGLShader = gl.createShader(type);\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n        if (this._engine._isShaderDebugMode && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.warn(gl.getShaderInfoLog(shader));\n        }\n        return shader;\n    }\n\n\n    /**\n     * @internal\n     */\n    private _addShaderUnifiormFun(one: ShaderVariable): void {\n        var gl: WebGLRenderingContext = this._gl;\n        one.caller = this;\n        var isArray: boolean = one.isArray;\n        switch (one.type) {\n            case gl.BOOL:\n                one.fun = this._uniform1i;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.INT:\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;//TODO:优化\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.FLOAT:\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.FLOAT_VEC2:\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\n                one.uploadedValue = new Array(2);\n                break;\n            case gl.FLOAT_VEC3:\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\n                one.uploadedValue = new Array(3);\n                break;\n            case gl.FLOAT_VEC4:\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\n                one.uploadedValue = new Array(4);\n                break;\n            case gl.FLOAT_MAT2:\n                one.fun = this._uniformMatrix2fv;\n                break;\n            case gl.FLOAT_MAT3:\n                one.fun = this._uniformMatrix3fv;\n                break;\n            case gl.FLOAT_MAT4:\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\n                break;\n            case gl.SAMPLER_2D:\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_SHADOW:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler2D;\n                break;\n            case 0x8b5f://sampler3D\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler3D;\n                break;\n            case gl.SAMPLER_CUBE:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_samplerCube;\n                break;\n            case (gl as WebGL2RenderingContext).UNIFORM_BUFFER:\n                one.fun = this._uniform_UniformBuffer;\n                break;\n            default:\n                throw new Error(\"compile shader err!\");\n        }\n    }\n\n\n    getUniformMap(): ShaderVariable[] {\n        return this._uniformMap;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    bind(): boolean {\n        return this.useProgram();\n    }\n\n    /**\n     * @internal\n     */\n    useProgram(): boolean {\n        if (this._engine._glUseProgram === this)\n            return false;\n        this._gl.useProgram(this._program);\n        this._engine._glUseProgram = this;\n        return true;\n    }\n\n    /**\n    * @internal\n    */\n    _uniform1f(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n    * @internal\n    */\n    _uniform1fv(one: any, value: any): number {\n        if (value.length < 4) {\n            var uploadedValue: any[] = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                this._gl.uniform1fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        } else {\n            this._gl.uniform1fv(one.location, value);\n            return 1;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec2(one: any, v: Vector2): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec2v(one: any, value: Float32Array): number {\n        if (value.length < 2) {\n            var uploadedValue: any[] = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                this._gl.uniform2fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        } else {\n            this._gl.uniform2fv(one.location, value);\n            return 1;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3(one: any, v: Vector3): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3v(one: any, v: Float32Array): number {\n        this._gl.uniform3fv(one.location, v);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4(one: any, v: Vector4): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4v(one: any, v: Float32Array): number {\n        this._gl.uniform4fv(one.location, v);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix2fv(one: any, value: any): number {\n        this._gl.uniformMatrix2fv(one.location, false, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix3fv(one: any, value: any): number {\n        this._gl.uniformMatrix3fv(one.location, false, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix4f(one: any, m: Matrix4x4): number {\n        var value: Float32Array = m.elements;\n        this._gl.uniformMatrix4fv(one.location, false, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix4fv(one: any, m: Float32Array): number {\n        this._gl.uniformMatrix4fv(one.location, false, m);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform1i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform1iv(one: any, value: any): number {\n        this._gl.uniform1iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_ivec2(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_ivec2v(one: any, value: any): number {\n        this._gl.uniform2iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3vi(one: any, value: any): number {\n        this._gl.uniform3iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4vi(one: any, value: any): number {\n        this._gl.uniform4iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_sampler2D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\n        var value: any = texture._getSource() || texture.defaultTexture._getSource();\n        var gl: WebGLRenderingContext = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\n        return 0;\n    }\n\n    _uniform_sampler3D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\n        var value: any = texture._getSource() || texture.defaultTexture._getSource();\n        this._bindTexture(one.textureID, WebGL2RenderingContext.TEXTURE_3D, value);\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_samplerCube(one: any, texture: BaseTexture): number {//TODO:TEXTURTECUBE ARRAY\n        var value: any = texture._getSource() || texture.defaultTexture._getSource();\n        var gl: WebGLRenderingContext = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\n        return 0;\n    }\n\n    /**\n     * @internal\n     * @param one \n     * @param value \n     * @returns \n     */\n    _uniform_UniformBuffer(one: any, value: UniformBufferObject) {\n        value._bindUniformBufferBase();\n    }\n\n    /**\n     * @internal\n     */\n    _bindTexture(textureID: number, target: number, texture: WebGLTexture): void {\n        const gl = this._gl;\n        if (this._engine._activedTextureID !== textureID) {\n            gl.activeTexture(textureID);\n            this._engine._activedTextureID = textureID;\n        }\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\n        if (this._engine._activeTextures[texID] !== texture) {\n            gl.bindTexture(target, texture);\n            this._engine._activeTextures[texID] = texture;\n        }\n    }\n\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        gl.deleteShader(this._vshader);\n        gl.deleteShader(this._pshader);\n        gl.deleteProgram(this._program);\n        this._vshader = null;\n        this._pshader = null;\n        this._program = null;\n        this._attributeMap = null;\n        this._uniformMap = null;\n        this._uniformObjectMap = null;\n        this._gl = null;\n        this._engine = null;\n    }\n\n}","import { IndexBuffer } from \"../../IndexBuffer\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { VertexBuffer } from \"../../VertexBuffer\";\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n\nexport class GLVertexState extends GLObject implements IRenderVertexState {\n    private _angleInstancedArrays: any;\n    private _vaoExt: any | null;\n    private _vao: WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\n\n    _vertexDeclaration: VertexDeclaration[] = [];\n    _bindedIndexBuffer: IndexBuffer;\n    _vertexBuffers: VertexBuffer[];\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        if (!engine.isWebGL2)\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\n        this._vao = this.createVertexArray();\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\n    }\n\n    /**\n     * @internal\n     */\n    private createVertexArray(): any {\n        if (this._engine.isWebGL2)\n            return (<WebGL2RenderingContext>this._gl).createVertexArray();\n        else\n            return this._vaoExt.createVertexArrayOES();\n    }\n\n    /**\n     * @internal\n     */\n    private deleteVertexArray(): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).deleteVertexArray(this._vao);\n        else\n            this._vaoExt.deleteVertexArrayOES(this._vao);\n    }\n\n    /**\n     * @internal\n     */\n    bindVertexArray(): void {\n        if (this._engine._GLBindVertexArray == this)\n            return;\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(this._vao);\n        else\n            this._vaoExt.bindVertexArrayOES(this._vao);\n        this._engine._GLBindVertexArray = this;\n    }\n\n    /**\n     * @internal\n     */\n    unbindVertexArray(): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(null);\n        else\n            this._vaoExt.bindVertexArrayOES(null);\n        this._engine._GLBindVertexArray = null;\n    }\n\n    /**\n     * @internal\n     */\n    isVertexArray(): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).isVertexArray(this._vao);\n        else\n            this._vaoExt.isVertexArrayOES(this._vao);\n    }\n\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\n        //Clear front VAO\n        this.clearVAO();\n        this._vertexBuffers = vertexBuffer;\n        if (this._engine._GLBindVertexArray == this) {\n            this._vertexDeclaration.length = vertexBuffer.length;\n            var i = 0;\n            vertexBuffer.forEach(element => {\n                var verDec: VertexDeclaration = element.vertexDeclaration;\n                this._vertexDeclaration[i++] = element.vertexDeclaration;\n                var valueData: any = verDec._shaderValues;\n                element.bind();\n                for (var k in valueData) {\n                    var loc: number = parseInt(k);\n                    var attribute: any[] = valueData[k];\n                    this._gl.enableVertexAttribArray(loc);\n                    this._gl.vertexAttribPointer(loc, attribute[0], attribute[1], !!attribute[2], attribute[3], attribute[4]);\n                    if (element.instanceBuffer)\n                        this.vertexAttribDivisor(loc, 1);\n                }\n            });\n        } else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n\n    }\n\n    //绑定之前需要先处理了前面的\n    clearVAO(){\n        for(let i = 0,n=this._vertexDeclaration.length;i<n;i++){\n            var verDec: VertexDeclaration = this._vertexDeclaration[i];\n            var valueData: any = verDec._shaderValues;\n            for (var k in valueData) {\n                var loc: number = parseInt(k);\n                this._gl.disableVertexAttribArray(loc);\n            }\n        }\n    }\n\n    applyIndexBuffer(indexBuffer: IndexBuffer | null): void {\n        //需要强制更新IndexBuffer\n\n        if (indexBuffer == null) {\n            return;\n        }\n        if (this._engine._GLBindVertexArray == this) {\n            if (this._bindedIndexBuffer !== indexBuffer) {\n                indexBuffer.bind();//TODO:可和vao合并bind\n                this._bindedIndexBuffer = indexBuffer;\n            }\n        } else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n    }\n\n    /**\n         * @internal\n         */\n    vertexAttribDivisor(index: number, divisor: number): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).vertexAttribDivisor(index, divisor);\n        else\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\n    }\n\n\n    /**\n     * @internal\n     */\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        this.deleteVertexArray();\n        this._gl = null;\n        this._engine = null;\n    }\n} ","import { LayaEnv } from \"../../../../LayaEnv\";\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\nimport { IRenderOBJCreate } from \"../../RenderInterface/IRenderOBJCreate\";\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\nimport { GL2TextureContext } from \"./GL2TextureContext\";\nimport { GLBuffer } from \"./GLBuffer\";\nimport { GlCapable } from \"./GlCapable\";\nimport { WebGLMode } from \"./GLEnum/WebGLMode\";\nimport { GLParams } from \"./GLParams\";\nimport { GLRender2DContext } from \"./GLRender2DContext\";\nimport { GLRenderDrawContext } from \"./GLRenderDrawContext\";\nimport { GLRenderState } from \"./GLRenderState\";\nimport { GLShaderInstance } from \"./GLShaderInstance\";\nimport { GLTextureContext } from \"./GLTextureContext\";\nimport { GLVertexState } from \"./GLVertexState\";\nimport { WebGlConfig } from \"./WebGLConfig\";\n\n/**\n * @private 封装Webgl\n */\nexport class WebGLEngine implements IRenderEngine {\n\n    private _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    private _config: WebGlConfig;\n\n    private _isWebGL2: boolean;\n\n    private _webglMode: WebGLMode;\n\n    /**@internal */\n    private _propertyNameMap: any = {};\n    /**@internal */\n    private _propertyNameCounter: number = 0;\n    /**@internal */\n    _renderOBJCreateContext:IRenderOBJCreate;\n\n    /**@internal */\n    _IDCounter: number = 0;\n\n    /**@internal ShaderDebugMode*/\n    _isShaderDebugMode: boolean = true;\n\n    /**@internal gl.TextureID*/\n    _glTextureIDParams: Array<number>;\n\n\n\n    /**@internal bind active Texture*/\n    _activedTextureID: number;\n\n    /**@internal bindTexture */\n    //RenderTexture TODO\n    _activeTextures: WebGLTexture[];\n\n    /**\n    * @internal\n    * bind GLVertexArray\n    */\n    _GLBindVertexArray: GLVertexState;\n\n    /**\n    * @internal\n    * 支持功能\n    */\n    _supportCapatable: GlCapable;\n\n    /**\n     * @internal\n     * bind Program\n     */\n    _glUseProgram: GLShaderInstance;\n\n    //bind glBuffer by glBuffer target\n    //key BufferTargetType\n    private _GLBufferBindMap: { [key: number]: GLBuffer | null };\n\n    private _curUBOPointer: number = 0;\n    //记录绑定UBO的glPointer\n    private _GLUBOPointerMap: Map<string, number> = new Map();\n    //记录绑定Pointer的UBO\n    private _GLBindPointerUBOMap: Map<number, GLBuffer> = new Map();\n    //bind viewport\n    private _lastViewport: Vector4;\n    private _lastScissor: Vector4;\n\n    //bind clearColor\n    private _lastClearColor: Color = new Color;\n    private _lastClearDepth: number = 1;\n\n    //GL参数\n    private _GLParams: GLParams;\n\n    //GL纹理生成\n    private _GLTextureContext: GLTextureContext;\n    //Gl Draw\n    private _GLRenderDrawContext: GLRenderDrawContext;\n\n    private _GL2DRenderContext: GLRender2DContext;\n\n    //GLRenderState\n    private _GLRenderState: GLRenderState;\n\n    // //TODO:管理Buffer\n    // private _bufferResourcePool: any;\n    // //TODO:管理Texture\n    // private _textureResourcePool: any;\n    // //TODO:管理FrameBuffer\n    // private _RenderBufferResource: any;\n\n    //GPU统计数据\n    private _GLStatisticsInfo: Map<RenderStatisticsInfo, number> = new Map();\n\n    constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\n        this._config = config;\n        this._isWebGL2 = false;\n        //init data\n        this._lastViewport = new Vector4(0, 0, 0, 0);\n        this._lastClearColor = new Color(0, 0, 0, 0);\n        this._lastScissor = new Vector4(0, 0, 0, 0);\n        this._webglMode = webglMode;\n        this._initStatisticsInfo();\n\n\n    }\n\n    /**\n     * GL Context\n     * @member {WebGLRenderingContext}\n     */\n    get gl() {\n        return this._gl;\n    }\n\n    get isWebGL2() {\n        return this._isWebGL2;\n    }\n\n    get webglConfig() {\n        return this._config;\n    }\n\n    private _initStatisticsInfo() {\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.DrawCall, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.InstanceDrawCall, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.Triangle, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.UniformUpload, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.TextureMemeory, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.GPUMemory, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.RenderTextureMemory, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.BufferMemory, 0);\n    }\n\n    /**\n     * @internal\n     * @param info \n     * @param value \n     */\n    _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\n        this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\n    }\n\n    /**\n     * 清除\n     * @internal\n     * @param info \n     */\n    clearStatisticsInfo(info: RenderStatisticsInfo) {\n        this._GLStatisticsInfo.set(info, 0);\n    }\n\n    /**\n     * @internal\n     * @param info \n     * @returns \n     */\n    getStatisticsInfo(info: RenderStatisticsInfo): number {\n        return this._GLStatisticsInfo.get(info);\n    }\n\n    /**\n     * @internal\n     * @param glPointer \n     * @returns \n     */\n    _getBindUBOBuffer(glPointer: number): GLBuffer {\n        return this._GLBindPointerUBOMap.get(glPointer);\n    }\n\n    /**\n     * @internal\n     * @param glPointer \n     * @param buffer \n     */\n    _setBindUBOBuffer(glPointer: number, buffer: GLBuffer): void {\n        this._GLBindPointerUBOMap.set(glPointer, buffer);\n    }\n\n    /**\n     * create GL\n     * @param canvas \n     */\n    initRenderEngine(canvas: any) {\n        let names;\n        let gl;\n        switch (this._webglMode) {\n            case WebGLMode.Auto:\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\n                break;\n            case WebGLMode.WebGL1:\n                names = [\"webgl\", \"experimental-webgl\"];\n                break;\n            case WebGLMode.WebGL2:\n                names = [\"webgl2\", \"experimental-webgl2\"];\n                break;\n        }\n        for (var i: number = 0; i < names.length; i++) {\n            try {\n                gl = canvas.getContext(names[i], this._config);\n            } catch (e) {\n            }\n            if (gl) {\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\n                    this._isWebGL2 = true;\n                }\n                break;\n            }\n        }\n        this._gl = gl;\n\n        //init Other\n        this._initBindBufferMap();\n        this._supportCapatable = new GlCapable(this);\n        this._GLParams = new GLParams(this);\n        this._GLRenderState = new GLRenderState(this);\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\n        this._activedTextureID = gl.TEXTURE0;//默认激活纹理区为0;\n        this._activeTextures = [];\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\n        this._GL2DRenderContext = new GLRender2DContext(this);\n    }\n\n    private _initBindBufferMap() {\n        this._GLBufferBindMap = {};\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\n    }\n\n\n    _getbindBuffer(target: BufferTargetType) {\n        return this._GLBufferBindMap[target];\n    }\n\n    _setbindBuffer(target: BufferTargetType, buffer: GLBuffer | null) {\n        this._GLBufferBindMap[target] = buffer;\n    }\n\n    /**\n     * @internal\n     * @param target \n     * @param texture \n     */\n    _bindTexture(target: number, texture: WebGLTexture) {\n        const texID = this._activedTextureID - this._gl.TEXTURE0;\n        if (this._activeTextures[texID] !== texture) {\n            this._gl.bindTexture(target, texture);\n            this._activeTextures[texID] = texture;\n        }\n    }\n\n    bindTexture(texture: BaseTexture) {\n        this._bindTexture(texture._texture.target, texture._getSource());\n    }\n\n    applyRenderStateCMD(cmd: RenderStateCommand): void {\n        this._GLRenderState.applyRenderStateCommand(cmd);\n    }\n\n    //get capable of webgl\n    getCapable(capatableType: RenderCapable): boolean {\n        return this._supportCapatable.getCapable(capatableType);\n    }\n\n    viewport(x: number, y: number, width: number, height: number): void {\n        // gl.enable(gl.SCISSOR_TEST);\n        // gl.scissor(x, transformY, width, height);\n        const gl = this._gl;\n        const lv = this._lastViewport;\n        if (LayaEnv.isConch) {\n            gl.viewport(x, y, width, height);\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n            gl.viewport(x, y, width, height);\n            lv.setValue(x, y, width, height);\n        }\n    }\n\n    scissor(x: number, y: number, width: number, height: number) {\n        const gl = this._gl;\n        const lv = this._lastScissor;\n        if (LayaEnv.isConch) {\n            gl.scissor(x, y, width, height);\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n            gl.scissor(x, y, width, height);\n            lv.setValue(x, y, width, height);\n        }\n    }\n\n    scissorTest(value: boolean) {\n        if (value)\n            this._gl.enable(this._gl.SCISSOR_TEST);\n        else\n            this._gl.disable(this._gl.SCISSOR_TEST);\n    }\n\n\n\n    clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\n        var flag: number;\n        //this.gl.enable(this._gl.SCISSOR_TEST)\n        if (clearFlag & RenderClearFlag.Color) {\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\n                this._gl.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\n                clearcolor.cloneTo(this._lastClearColor);\n            }\n            flag |= this.gl.COLOR_BUFFER_BIT;\n        }\n        if (clearFlag & RenderClearFlag.Depth) {\n            if (this._lastClearDepth != clearDepth) {\n                this._gl.clearDepth(clearDepth);\n                this._lastClearDepth = clearDepth;\n            }\n            this._GLRenderState.setDepthMask(true);\n            flag |= this._gl.DEPTH_BUFFER_BIT;\n        }\n        if (clearFlag & RenderClearFlag.Stencil) {\n            this._gl.clearStencil(0);\n            this._GLRenderState.setStencilMask(true);\n            flag |= this._gl.STENCIL_BUFFER_BIT;\n        }\n        this._gl.clear(flag);\n        //this._gl.disable(this._gl.SCISSOR_TEST);\n    }\n\n    copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\n        this._bindTexture(texture._texture.target, texture._getSource());\n        this._gl.copyTexSubImage2D(texture._texture.target, level, xoffset, yoffset, x, y, width, height);\n    }\n\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\n        this._gl.colorMask(r, g, b, a);\n    }\n\n    getParams(params: RenderParams): number {\n        return this._GLParams.getParams(params);\n    }\n\n\n    createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\n        //TODO SourceManager\n        return new GLBuffer(this, targetType, bufferUsageType);\n    }\n\n    createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\n        //TODO SourceManager\n        return new GLShaderInstance(this, vs, ps, attributeMap);\n    }\n\n    createVertexState(): IRenderVertexState {\n        return new GLVertexState(this);\n    }\n\n    getUBOPointer(name: string): number {\n        if (!this._GLUBOPointerMap.has(name))\n            this._GLUBOPointerMap.set(name, this._curUBOPointer++);\n        return this._GLUBOPointerMap.get(name);\n    }\n\n\n\n    getTextureContext(): ITextureContext {\n        return this._GLTextureContext;\n    }\n\n    //TODO 先写完测试，这种封装过于死板\n    getDrawContext(): IRenderDrawContext {\n        return this._GLRenderDrawContext;\n    }\n\n    get2DRenderContext(): IRender2DContext {\n        return this._GL2DRenderContext;\n    }\n\n    getCreateRenderOBJContext(): IRenderOBJCreate {\n        return this._renderOBJCreateContext;\n    }\n\n    // //TODO:\n    // propertyNameToID(name: string): number {\n    //   return this.propertyNameToID(name);\n    // }\n\n    /**\n   * 通过Shader属性名称获得唯一ID。\n   * @param name Shader属性名称。\n   * @return 唯一ID。\n   */\n    propertyNameToID(name: string): number {\n        if (this._propertyNameMap[name] != null) {\n            return this._propertyNameMap[name];\n        } else {\n            var id: number = this._propertyNameCounter++;\n            this._propertyNameMap[name] = id;\n            this._propertyNameMap[id] = name;\n            return id;\n        }\n    }\n\n    propertyIDToName(id: number): string {\n        return this._propertyNameMap[id];\n    }\n\n    /**\n     * @internal\n     */\n    uploadUniforms(shader: GLShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\n        shader.bind();\n        var data: any = shaderData._data;\n        var shaderUniform: any[] = commandEncoder.getArrayData();\n        var shaderCall: number = 0;\n        for (var i: number = 0, n: number = shaderUniform.length; i < n; i++) {\n            var one: any/*ShaderVariable*/ = shaderUniform[i];\n            if (uploadUnTexture || one.textureID !== -1) {//如uniform为纹理切换Shader时需要重新上传\n                var value: any = data[one.dataOffset];\n                if (value != null)\n                    shaderCall += one.fun.call(one.caller, one, value);\n            }\n        }\n        return shaderCall;\n    }\n\n    /**\n     * @internal\n     */\n    uploadCustomUniforms(shader: GLShaderInstance, custom: any[], index: number, data: any): number {\n        shader.bind();\n        var shaderCall: number = 0;\n        var one: ShaderVariable = custom[index];\n        if (one && data != null)\n            shaderCall += one.fun.call(one.caller, one, data);\n        return shaderCall;\n    }\n\n    createRenderStateComand():RenderStateCommand{\n        return new RenderStateCommand();\n    }\n\n}\n\n\n","import { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n/**\n * WebglObject 基类\n */\nexport class NativeGLObject{\n    protected _engine:NativeWebGLEngine;\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\n    protected _id:number;\n    protected _destroyed: boolean = false;\n\n    constructor(engine: NativeWebGLEngine){\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._id = this._engine._IDCounter++;\n    }\n\n    get destroyed():boolean{\n        return this._destroyed;\n    }\n\n\n    /**\n     * @override\n     */\n    setResourceManager():void{\n    };\n\n    destroy():void{\n        if (this._destroyed) return;\n        this._destroyed = true;\n    }\n\n}","\nimport { WebGLExtension } from \"../WebGLEngine/GLEnum/WebGLExtension\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\n\nexport class NativeGLTextureContext extends NativeGLObject implements ITextureContext {\n    protected _native: any;\n\n    constructor(engine: NativeWebGLEngine, native: any) {\n        super(engine);\n        this._native = native;\n    }\n\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, gengerateMipmap: boolean, sRGB: boolean): InternalTexture {\n        return this._native.createTextureInternal(dimension, width, height, format, gengerateMipmap, sRGB);\n    }\n\n    setTextureImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n        this._native.setTextureImageData(texture, (source as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\n    }\n\n    setTexturePixelsData(texture: InternalTexture, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        this._native.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    initVideoTextureData(texture: InternalTexture): void{\n        //TODO\n    }\n\n    setTextureSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n    setTexturebySubImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean): void{\n        //TODO\n    }\n\n    setTextureHDRData(texture: InternalTexture, hdrInfo: HDRTextureInfo): void {\n        let sourceData = hdrInfo.readScanLine();\n\n        this.setTexturePixelsData(texture, sourceData, false, false);\n    }\n    setTextureDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\n        throw new Error(\"setTextureDDSData Method not implemented.\");\n    }\n\n    setTextureKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\n        throw new Error(\"setTextureKTXData Method not implemented.\");\n    }\n    setCubeImageData(texture: InternalTexture, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\n        var images: any[] = [];\n        var length = sources.length;\n        for (let index = 0; index < length; index++) {\n            images.push((sources[index] as any)._nativeObj);\n        }\n        this._native.setCubeImageData(texture, images, premultiplyAlpha, invertY);\n    }\n\n    setCubePixelsData(texture: InternalTexture, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n    setCubeSubPixelData(texture: InternalTexture, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n\n    setCubeDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\n        throw new Error(\"setCubeDDSData Method not implemented.\");\n    }\n\n    setCubeKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\n        throw new Error(\"setCubeKTXData Method not implemented.\");\n    }\n\n    setTextureCompareMode(texture: InternalTexture, compareMode: TextureCompareMode): TextureCompareMode {\n        return this._native.setTextureCompareMode(texture, compareMode);\n    }\n\n    bindRenderTarget(renderTarget: InternalRenderTarget): void {\n        this._native.bindRenderTarget(renderTarget);\n    }\n\n    bindoutScreenTarget(): void {\n        this._native.bindoutScreenTarget();\n    }\n\n    unbindRenderTarget(renderTarget: InternalRenderTarget): void {\n        this._native.unbindRenderTarget(renderTarget);\n    }\n\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\n        return this._native.createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\n    }\n\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\n        return this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples);\n    }\n\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\n        return this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples);\n    }\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\n        throw new Error(\"createRenderTextureCubeInternal Method not implemented.\");\n    }\n    // todo  color 0, 1, 2, 3 ?\n    setupRendertargetTextureAttachment(renderTarget: InternalRenderTarget, texture: InternalTexture) {\n        this._native.setupRendertargetTextureAttachment(renderTarget, texture);\n    }\n\n    // todo 不同 格式\n    readRenderTargetPixelData(renderTarget: InternalRenderTarget, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\n        return this._native.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out);\n    }\n\n    updateVideoTexture(texture: InternalTexture, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.updateVideoTexture(texture, (video as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\n    }\n\n    getRenderTextureData(internalTex: InternalRenderTarget, x: number, y: number, width: number, height: number): ArrayBufferView {\n        return this._native.getRenderTextureData(internalTex, x, y, width, height);\n    }\n}","import { NativeGLTextureContext } from \"./NativeGLTextureContext\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\n\n/**\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\n */\nexport class NativeGL2TextureContext extends NativeGLTextureContext {\n\n    constructor(engine: NativeWebGLEngine, native: any) {\n        super(engine, native);\n    }\n}","import { IndexBuffer } from \"../../IndexBuffer\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { VertexBuffer } from \"../../VertexBuffer\";\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n\nexport class NativeGLVertexState extends NativeGLObject implements IRenderVertexState {\n\n    _vertexDeclaration: VertexDeclaration[] = [];\n    _bindedIndexBuffer: IndexBuffer;\n    _vertexBuffers: VertexBuffer[];\n    _nativeVertexBuffers:any[];\n    _nativeObj: any;\n    constructor(engine: NativeWebGLEngine) {\n        super(engine);\n        this._nativeObj = new (window as any).conchGLVertexState(engine._nativeObj);\n        this._nativeVertexBuffers=[];\n    }\n\n    /**\n     * @internal\n     */\n    bindVertexArray(): void {\n        this._nativeObj.bindVertexArray();\n    }\n\n    /**\n     * @internal\n     */\n    unbindVertexArray(): void {\n        this._nativeObj.unbindVertexArray();\n    }\n\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\n        this._vertexBuffers = vertexBuffer;\n        this._nativeVertexBuffers.length = 0;\n        vertexBuffer.forEach((element) => {\n            this._nativeVertexBuffers.push((element as any)._conchVertexBuffer3D);\n        });\n        this._nativeObj.applyVertexBuffer(this._nativeVertexBuffers);\n    }\n\n    applyIndexBuffer(indexBuffer: IndexBuffer|null): void {\n        //需要强制更新IndexBuffer\n        \n        if(indexBuffer==null){\n            return;\n        }\n        this._bindedIndexBuffer = indexBuffer;\n        this._nativeObj.applyIndexBuffer((indexBuffer as any)._conchIndexBuffer3D);\n    }\n    /**\n     * @internal\n     */\n    destroy() {\n        this._vertexBuffers = null;\n        this._nativeVertexBuffers=[];\n        this._bindedIndexBuffer = null;\n        super.destroy();\n        this._nativeObj.destroy()\n    }\n} ","import { DrawType } from \"../../RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n//TODO\nexport class NativeGLRenderDrawContext extends NativeGLObject implements IRenderDrawContext {\n    _nativeObj: any;\n    constructor(engine: NativeWebGLEngine) {\n        super(engine);\n        this._nativeObj = new (window as any).conchGLRenderDrawContext((engine as any)._nativeObj);\n    }\n\n    /**\n     * @internal\n     */\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\n        this._nativeObj.drawElementsInstanced(mode, count, type, offset, instanceCount);\n    }\n\n    /**\n     * @internal\n     */\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\n        this._nativeObj.drawArraysInstanced(mode, first, count, instanceCount);\n    }\n\n    /**\n     * @internal \n     */\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\n        this._nativeObj.drawArrays(mode, first, count);\n    }\n\n    /**\n     * @internal\n     */\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\n        this._nativeObj.drawElements(mode, count, type, offset);\n    }\n\n    /**\n     * @internal\n     */\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\n        this._nativeObj.drawGeometryElement((geometryElement as any)._nativeObj);\n    }\n\n\n}","import { LayaGL } from \"../../../layagl/LayaGL\";\nimport { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\nimport { RenderStateType } from \"../../../RenderEngine/RenderEnum/RenderStateType\";\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\n\n\n/**\n * 渲染状态设置命令流\n */\nexport class NativeRenderStateCommand extends RenderStateCommand {\n    private _nativeObj: any;\n    constructor(){\n        super();\n        this._nativeObj = new (window as any).conchRenderStateCommand();\n    }\n\n    addCMD(renderstate:RenderStateType,value:any){\n        switch (renderstate) {\n            case RenderStateType.DepthTest:\n            case RenderStateType.DepthMask:\n            case RenderStateType.DepthFunc:\n            case RenderStateType.StencilTest:\n            case RenderStateType.StencilMask:\n            case RenderStateType.BlendEquation:\n            case RenderStateType.CullFace:\n            case RenderStateType.FrontFace:\n                this._nativeObj.addCMDInt1(renderstate, value);\n                break;\n            case RenderStateType.StencilFunc:         \n            case RenderStateType.BlendFunc:            \n            case RenderStateType.BlendEquationSeparate:\n                this._nativeObj.addCMDInt2(renderstate, value[0], value[1]);\n                break;\n            case RenderStateType.StencilOp:\n                this._nativeObj.addCMDInt3(renderstate, value[0],value[1], value[2]);//TODO\n                break;\n            case RenderStateType.BlendType:\n                this._nativeObj.addCMDInt1(renderstate, value != BlendType.BLEND_DISABLE ? 1 : 0);\n                break;\n            case RenderStateType.BlendFuncSeperate:\n                this._nativeObj.addCMDInt4(renderstate, value[0], value[1], value[2], value[3]);\n                break;\n            default:\n                throw \"unknow type of renderStateType\";\n                break;\n        }\n    }\n\n    applyCMD(){\n        LayaGL.renderEngine.applyRenderStateCMD(this);\n    }\n\n    clear(){\n        this._nativeObj.clear();\n    }\n}","import { CommandEncoder } from \"../../../layagl/CommandEncoder\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\nimport { NativeGL2TextureContext } from \"./NativeGL2TextureContext\";\nimport { WebGLMode } from \"../WebGLEngine/GLEnum/WebGLMode\";\nimport { NativeGLRender2DContext } from \"./NativeGLRender2DContext\";\nimport { NativeGLTextureContext } from \"./NativeGLTextureContext\";\nimport { NativeGLVertexState } from \"./NativeGLVertexState\";\nimport { WebGlConfig } from \"../WebGLEngine/WebGLConfig\";\nimport { IRenderOBJCreate } from \"../../RenderInterface/IRenderOBJCreate\";\nimport { NativeGLRenderDrawContext } from \"./NativeGLRenderDrawContext\";\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { Color } from \"../../../maths/Color\";\nimport { NativeRenderStateCommand } from \"./NativeRenderStateCommand\";\n\n\n/**\n * @private 封装Webgl\n */\nexport class NativeWebGLEngine implements IRenderEngine {\n\n  private _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n  private _config: WebGlConfig;\n\n  /**@internal ShaderDebugMode*/\n  _isShaderDebugMode: boolean = true;\n\n  private _GLTextureContext: NativeGLTextureContext;\n  //Gl Draw\n  private _GLRenderDrawContext: NativeGLRenderDrawContext;\n\n  private _GL2DRenderContext: NativeGLRender2DContext;\n\n  /**@internal */\n  _renderOBJCreateContext:IRenderOBJCreate;\n\n  _nativeObj: any;\n\n  /**@internal */\n  _IDCounter: number;\n\n  constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\n    this._nativeObj = new (window as any).conchWebGLEngine(webglMode);\n  }\n  \n  createRenderStateComand(): RenderStateCommand {\n    return new NativeRenderStateCommand();\n  }\n  getUBOPointer(name: string): number {\n    return this._nativeObj.getUBOPointer(name);\n  }\n\n  _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\n    this._nativeObj.addStatisticsInfo(info, value);\n  }\n  /**\n * 清除\n * @internal\n * @param info \n */\n  clearStatisticsInfo(info: RenderStatisticsInfo) {\n    this._nativeObj.clearStatisticsInfo(info);\n  }\n\n  /**\n   * @internal\n   * @param info \n   * @returns \n   */\n  getStatisticsInfo(info: RenderStatisticsInfo): number {\n    return this._nativeObj.getStatisticsInfo(info);\n  }\n  /**\n   * GL Context\n   * @member {WebGLRenderingContext}\n   */\n  get gl() {\n    return this._gl;\n  }\n\n  get isWebGL2() {\n    return this._nativeObj.isWebGL2;\n  }\n\n  get webglConfig() {\n    return this._config;\n  }\n\n  /**\n   * create GL\n   * @param canvas \n   */\n  initRenderEngine(canvas: any) {\n    this._nativeObj.initRenderEngine();\n    this._GLRenderDrawContext = new NativeGLRenderDrawContext(this);\n\n    if (this.isWebGL2) {\n      this._GLTextureContext = new NativeGL2TextureContext(this, new (window as any).conchGL2TextureContext(this._nativeObj));\n    }\n    else {\n      this._GLTextureContext = new NativeGLTextureContext(this, new (window as any).conchGLTextureContext(this._nativeObj));\n    }\n  }\n\n  bindTexture(texture: BaseTexture) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  applyRenderStateCMD(cmd: RenderStateCommand): void {\n    this._nativeObj.applyRenderStateCommand((cmd as any)._nativeObj);\n  }\n\n  //get capable of webgl\n  getCapable(capatableType: RenderCapable): boolean {\n    return this._nativeObj.getCapable(capatableType);\n  }\n\n  viewport(x: number, y: number, width: number, height: number): void {\n    this._nativeObj.viewport(x, y, width, height);\n  }\n\n  scissor(x: number, y: number, width: number, height: number) {\n    this._nativeObj.scissor(x, y, width, height);\n  }\n\n  scissorTest(value: boolean) {\n    this._nativeObj.scissorTest(value);\n  }\n\n  clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\n    if (clearcolor)\n      this._nativeObj.clearRenderTexture(clearFlag, true, clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a, clearDepth);\n    else\n      this._nativeObj.clearRenderTexture(clearFlag, false, Color.BLACK.r, Color.BLACK.g, Color.BLACK.b, Color.BLACK.a, clearDepth);\n  }\n\n  copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\n    this._nativeObj.copySubFrameBuffertoTex(texture._texture, level, xoffset, yoffset, x, y, width, height);\n  }\n\n  colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\n    this._nativeObj.colorMask(r, g, b, a);\n  }\n\n  getParams(params: RenderParams): number {\n    return this._nativeObj.getParams(params);\n  }\n\n\n  createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\n    //TODO SourceManager\n    return new (window as any).conchGLBuffer(this._nativeObj, targetType, bufferUsageType);\n  }\n\n  createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  createVertexState(): IRenderVertexState {\n    return new NativeGLVertexState(this);\n  }\n\n  getTextureContext(): ITextureContext {\n    return this._GLTextureContext;\n  }\n\n  //TODO 先写完测试，这种封装过于死板\n  getDrawContext(): IRenderDrawContext {\n    return this._GLRenderDrawContext;\n  }\n\n  get2DRenderContext(): IRender2DContext {\n    return this._GL2DRenderContext;\n  }\n\n  getCreateRenderOBJContext(): IRenderOBJCreate {\n    return this._renderOBJCreateContext;\n  }\n\n  propertyNameToID(name: string): number {\n    return this._nativeObj.propertyNameToID(name);\n  }\n\n  propertyIDToName(id: number): string {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  uploadUniforms(shader: IRenderShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\n    throw new Error(\"Method not implemented.\");\n  }\n  uploadCustomUniforms(shader: IRenderShaderInstance, custom: any[], index: number, data: any): number {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\n\n","import { ILaya } from \"./../../ILaya\";\nimport { Config } from \"./../../Config\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { WebGLMode } from \"../RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode\";\nimport { WebGlConfig } from \"../RenderEngine/RenderEngine/WebGLEngine/WebGLConfig\";\nimport { RenderStateContext } from \"../RenderEngine/RenderStateContext\";\nimport { Context } from \"../resource/Context\";\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\nimport { WebGL } from \"../webgl/WebGL\";\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\nimport { WebGLEngine } from \"../RenderEngine/RenderEngine/WebGLEngine/WebGLEngine\";\nimport { NativeWebGLEngine } from \"../RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { VertexElementFormat } from \"./VertexElementFormat\";\n\n/**\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\n */\nexport class Render {\n    /** @internal */\n    static _context: Context;\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\n    static _mainCanvas: HTMLCanvas;\n    /** 表示是否是 3D 模式。*/\n    static is3DMode: boolean;\n    /**自定义帧循环 */\n    static _customRequestAnimationFrame: any;\n    /**帧循环函数 */\n    static _loopFunction: any;\n\n    /** 当前的帧数 */\n    private static lastFrm = 0;\n    /** 第一次运行标记 */\n    private _first = true;\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\n    private _startTm = 0;\n\n    /** @internal */\n    private static ifps = 1000 / 60;\n\n    static _Render: Render;\n\n    static customRequestAnimationFrame(value: any, loopFun: any) {\n        Render._customRequestAnimationFrame = value;\n        Render._loopFunction = loopFun;\n    }\n\n    private static _customEngine: IRenderEngine;\n    static set customRenderEngine(engine: IRenderEngine) {\n        Render._customEngine = engine;\n    }\n    static get customRenderEngine() {\n        return Render._customEngine;\n    }\n\n\n    /**\n     * 初始化引擎。\n     * @param\twidth 游戏窗口宽度。\n     * @param\theight\t游戏窗口高度。\n     */\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\n        Render._Render = this;\n        Render._mainCanvas = mainCanv;\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\n        source.id = \"layaCanvas\";\n        source.width = width;\n        source.height = height;\n        if (LayaEnv.isConch) {\n            document.body.appendChild(source);\n        }\n\n        this.initRender(Render._mainCanvas, width, height);\n        window.requestAnimationFrame(loop);\n        let me = this;\n        let lastFrmTm = performance.now();\n        let fps = Config.FPS;\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\n        function loop(stamp: number) {\n            //let perf = PerfHUD.inst;\n            let sttm = performance.now();\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\n            lastFrmTm = sttm;\n            if (me._first) {\n                // 把starttm转成帧对齐\n                me._startTm = Math.floor(stamp / ifps) * ifps;\n                me._first = false;\n            }\n            // 与第一帧开始时间的delta\n            stamp -= me._startTm;\n            // 计算当前帧数\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\n            // 是否已经跨帧了\n            let dfrm = frm - Render.lastFrm;\n            if (dfrm > 0 || LayaEnv.isConch) {\n                Render.lastFrm = frm;\n                ILaya.stage._loop();\n            }\n            //perf && perf.updateValue(1, performance.now()-sttm);\n\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\n                Render._customRequestAnimationFrame(Render._loopFunction);\n            }\n            else\n                window.requestAnimationFrame(loop);\n        }\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\n    }\n\n    /**@private */\n    private _timeId: number = 0;\n\n    /**@private */\n    private _onVisibilitychange(): void {\n        if (!ILaya.stage.isVisibility) {\n            this._timeId = window.setInterval(this._enterFrame, 1000);\n        } else if (this._timeId != 0) {\n            window.clearInterval(this._timeId);\n        }\n    }\n\n    /**\n     * 获取帧对齐的时间。\n     * 用这个做动画的时间参数会更平滑。\n     * 从render构造开始算起。\n     * @returns \n     */\n    static vsyncTime() {\n        return Render.lastFrm * Render.ifps;\n    }\n\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\n        let glConfig: WebGlConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\n\n        //TODO  other engine\n        const webglMode: WebGLMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\n\n        let engine: IRenderEngine;\n        if (!Render.customRenderEngine) {\n            if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\n                engine = new NativeWebGLEngine(glConfig, webglMode);\n                engine.initRenderEngine(Render._mainCanvas.source);\n                WebGL._isWebGL2 = engine.isWebGL2;\n                new LayaGL();\n            }\n            else {\n                engine = new WebGLEngine(glConfig, webglMode);\n                engine.initRenderEngine(Render._mainCanvas.source);\n                var gl: WebGLRenderingContext = RenderStateContext.mainContext = engine.gl;\n                if (Config.printWebglOrder)\n                    this._replaceWebglcall(gl);\n\n                if (!gl)\n                    return false;\n                if (gl) {\n                    WebGL._isWebGL2 = engine.isWebGL2;\n                    new LayaGL();\n                }\n            }\n        }\n        else {\n            engine = Render.customRenderEngine;\n            engine.initRenderEngine(Render._mainCanvas.source);\n        }\n\n        LayaGL.renderEngine = engine;\n        //LayaGL.instance = gl;\n        //native TODO\n        LayaGL.textureContext = engine.getTextureContext();\n        LayaGL.renderDrawContext = engine.getDrawContext();\n        LayaGL.render2DContext = engine.get2DRenderContext();\n        //LayaGL.renderOBJCreate = engine.getCreateRenderOBJContext();\n\n        canvas.size(w, h);\t//在ctx之后调用。\n        VertexElementFormat.__init__();\n        Context.__init__();\n        SubmitBase.__init__();\n\n        var ctx: Context = new Context();\n        Context._rendercontex = ctx;\n        ctx.isMain = true;\n        Render._context = ctx;\n        canvas._setContext(ctx);\n\n        //TODO 现在有个问题是 gl.deleteTexture并没有走WebGLContex封装的\n        ShaderDefines2D.__init__();\n        Value2D.__init__();\n        Shader2D.__init__();\n        BlendMode._init_();\n\n        return true;\n    }\n\n    /**@private */\n    private _replaceWebglcall(gl: any) {\n        var tempgl: { [key: string]: any } = {};\n        for (const key in gl) {\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\n                tempgl[key] = gl[key];\n                gl[key] = function () {\n                    let arr: IArguments[] = [];\n                    for (let i = 0; i < arguments.length; i++) {\n                        arr.push(arguments[i]);\n                    }\n                    let result = tempgl[key].apply(gl, arr);\n\n                    //console.log(RenderInfo.loopCount + \":gl.\" + key + \":\" + arr);\n                    let err = gl.getError();\n                    if (err) {\n                        //console.log(err);\n                        debugger;\n                    }\n                    return result;\n                }\n            }\n        }\n    }\n\n    /**@private */\n    private _enterFrame(e: any = null): void {\n        ILaya.stage._loop();\n    }\n\n    /** 目前使用的渲染器。*/\n    static get context(): Context {\n        return Render._context;\n    }\n\n    /** 渲染使用的原生画布引用。 */\n    static get canvas(): any {\n        return Render._mainCanvas.source;\n    }\n}\n","import { Text } from \"./Text\";\nimport { Event } from \"../events/Event\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { InputManager } from \"../events/InputManager\";\nimport { Render } from \"../renders/Render\";\nimport { Config } from \"../../Config\";\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\n\n/**\n * 用户输入一个或多个文本字符时后调度。\n * @eventType Event.INPUT\n * */\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\n/**\n * 文本发生变化后调度。\n * @eventType Event.CHANGE\n * */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n/**\n * 用户在输入框内敲回车键后，将会调度 <code>enter</code> 事件。\n * @eventType Event.ENTER\n * */\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\n/**\n * 显示对象获得焦点后调度。\n * @eventType Event.FOCUS\n * */\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\n/**\n * 显示对象失去焦点后调度。\n * @eventType Event.BLUR\n * */\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\n\n/**\n * <p><code>Input</code> 类用于创建显示对象以显示和输入文本。</p>\n * <p>Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。</p>\n */\nexport class Input extends Text {\n    /** 常规文本域。*/\n    static TYPE_TEXT: string = \"text\";\n    /** password 类型用于密码域输入。*/\n    static TYPE_PASSWORD: string = \"password\";\n    /** email 类型用于应该包含 e-mail 地址的输入域。*/\n    static TYPE_EMAIL: string = \"email\";\n    /** url 类型用于应该包含 URL 地址的输入域。*/\n    static TYPE_URL: string = \"url\";\n    /** number 类型用于应该包含数值的输入域。*/\n    static TYPE_NUMBER: string = \"number\";\n    /**\n     * <p>range 类型用于应该包含一定范围内数字值的输入域。</p>\n     * <p>range 类型显示为滑动条。</p>\n     * <p>您还能够设定对所接受的数字的限定。</p>\n     */\n    static TYPE_RANGE: string = \"range\";\n    /**  选取日、月、年。*/\n    static TYPE_DATE: string = \"date\";\n    /** month - 选取月、年。*/\n    static TYPE_MONTH: string = \"month\";\n    /** week - 选取周和年。*/\n    static TYPE_WEEK: string = \"week\";\n    /** time - 选取时间（小时和分钟）。*/\n    static TYPE_TIME: string = \"time\";\n    /** datetime - 选取时间、日、月、年（UTC 时间）。*/\n    static TYPE_DATE_TIME: string = \"datetime\";\n    /** datetime-local - 选取时间、日、月、年（本地时间）。*/\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\n    /**\n     * <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>\n     * <p>search 域显示为常规的文本域。</p>\n     */\n    static TYPE_SEARCH: string = \"search\";\n\n    /**@private */\n    protected static input: HTMLInputElement;\n    /**@private */\n    protected static area: HTMLTextAreaElement;\n    /**@private */\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\n    /**@private */\n    protected static inputContainer: HTMLDivElement;\n    /**@private */\n    protected static confirmButton: any;\n    /**@private */\n    protected static promptStyleDOM: any;\n\n    /**@private */\n    protected _focus: boolean;\n    /**@private */\n    protected _multiline: boolean = false;\n    /**@private */\n    protected _editable: boolean = true;\n    /**@private */\n    protected _restrictPattern: any;\n    /**@private */\n    protected _maxChars: number = 1E5;\n\n    private _type: string = \"text\";\n\n    /**输入提示符。*/\n    private _prompt: string = '';\n    /**输入提示符颜色。*/\n    private _promptColor: string = \"#A9A9A9\";\n    private _originColor: string = \"#000000\";\n    private _content: string = '';\n\n    /**@private */\n    static IOS_IFRAME: boolean = false;\n\n    static isAppUseNewInput: boolean = false;\n\n    /**创建一个新的 <code>Input</code> 类实例。*/\n    constructor() {\n        super();\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\n        this._width = 100;\n        this._height = 20;\n\n        this.multiline = false;\n        this.overflow = Text.SCROLL;\n\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\n    }\n\n    /**@internal */\n    static __init__(): void {\n        Input._createInputElement();\n\n        // 移动端通过画布的touchend调用focus\n        if (ILaya.Browser.onMobile) {\n            var isTrue: boolean = false;\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\n                isTrue = true;\n            }\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\n        }\n    }\n\n    // 移动平台在单击事件触发后弹出输入法\n    private static _popupInputMethod(e: any): void {\n        //e.preventDefault();\n        if (!InputManager.isTextInputting) return;\n\n        var input: any = Input.inputElement;\n\n        // 弹出输入法。\n        input.focus();\n    }\n\n    private static _createInputElement(): void {\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\n\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\n        Input.inputContainer.style.position = \"absolute\";\n        Input.inputContainer.style.zIndex = '1E5';\n        ILaya.Browser.container.appendChild(Input.inputContainer);\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\n            Input.inputContainer.style.left = x + 'px';\n            Input.inputContainer.style.top = y + 'px';\n        };\n    }\n\n    private static _initInput(input: HTMLInputElement): void {\n        var style = input.style;\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\n        style.resize = 'none';\n        style.backgroundColor = 'transparent';\n        style.border = 'none';\n        style.outline = 'none';\n        style.zIndex = '1';\n\n        input.addEventListener('input', Input._processInputting);\n\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\n\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\n        }\n    }\n\n    private static _processInputting(e: any): void {\n        var input: Input = (Input.inputElement as any).target;\n        if (!input) return;\n\n        var value = Input.inputElement.value;\n\n        // 对输入字符进行限制\n        if (input._restrictPattern) {\n            // 部分输入法兼容\n            value = value.replace(/\\u2006|\\x27/g, \"\");\n\n            if (input._restrictPattern.test(value)) {\n                value = value.replace(input._restrictPattern, \"\");\n                Input.inputElement.value = value;\n            }\n        }\n\n        input._text = value;\n        input.event(Event.INPUT);\n    }\n\n    private static _stopEvent(e: any): void {\n        if (e.type == 'touchmove')\n            e.preventDefault();\n        e.stopPropagation && e.stopPropagation();\n    }\n\n    /**\n     * 设置光标位置和选取字符。\n     * @param\tstartIndex\t光标起始位置。\n     * @param\tendIndex\t光标结束位置。\n     */\n    setSelection(startIndex: number, endIndex: number): void {\n        this.focus = true;\n        Input.inputElement.selectionStart = startIndex;\n        Input.inputElement.selectionEnd = endIndex;\n    }\n\n    /**表示是否是多行输入框。*/\n    get multiline(): boolean {\n        return this._multiline;\n    }\n\n    set multiline(value: boolean) {\n        this._multiline = value;\n        this.valign = value ? \"top\" : \"middle\";\n    }\n\n    /**\n     * 获取对输入框的引用实例。\n     */\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\n        return this._multiline ? Input.area : Input.input;\n    }\n\n    private _onUnDisplay(e: Event = null): void {\n        this.focus = false;\n    }\n\n    private _onMouseDown(e: Event): void {\n        this.focus = true;\n    }\n\n    private static stageMatrix: Matrix;\n\n    /**\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\n     */\n    private _syncInputTransform(): void {\n        var inputElement = this.nativeInput;\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]);\n        var inputWid = this._width - this.padding[1] - this.padding[3];\n        var inputHei = this._height - this.padding[0] - this.padding[2];\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\n            (inputElement as any).setSize(inputWid, inputHei);\n            (inputElement as any).setPos(transform.x, transform.y);\n        } else {\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\n            inputElement.style.width = inputWid + 'px';\n            inputElement.style.height = inputHei + 'px';\n            Input.inputContainer.style.left = transform.x + 'px';\n            Input.inputContainer.style.top = transform.y + 'px';\n        }\n    }\n\n    /**选中当前实例的所有文本。*/\n    select(): void {\n        this.nativeInput.select();\n    }\n\n    /**\n     * 表示焦点是否在此实例上。\n     */\n    get focus(): boolean {\n        return this._focus;\n    }\n\n    // 移动平台最后单击画布才会调用focus\n    // 因此 调用focus接口是无法都在移动平台立刻弹出键盘的\n    set focus(value: boolean) {\n        var input = this.nativeInput;\n\n        if (this._focus !== value) {\n            if (value) {\n                if ((input as any).target) {\n                    (input as any).target._focusOut();\n                } else {\n                    this._setInputMethod();\n                }\n                input = this.nativeInput;\n                (input as any).target = this;\n                this._focusIn();\n            } else {\n                (input as any).target = null;\n                this._focusOut();\n                ILaya.Browser.document.body.scrollTop = 0;\n                input.blur();\n\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\n            }\n        }\n    }\n\n    private _setInputMethod(): void {\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\n\n        // 安卓的安全键盘的问题；\n        // 如果设置type='password' 则会弹安全键盘\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\n        if (ILaya.Browser.onAndroid) {\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\n            Input._initInput(Input.input);\n        }\n\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\n        Input.inputContainer.appendChild(Input.inputElement);\n        if (Text.RightToLeft) {\n            Input.inputElement.style.direction = \"rtl\";\n        }\n    }\n\n    private _focusIn(): void {\n        InputManager.isTextInputting = true;\n        var input = this.nativeInput;\n\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\n\n        this._focus = true;\n\n        var cssStyle = input.style;\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\n        this._setPromptColor();\n\n        input.readOnly = !this._editable;\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (input as any).setType(this._type);\n            (input as any).setForbidEdit(!this._editable);\n        }\n        input.maxLength = this._maxChars;\n\n        //var padding: any[] = this.padding;\n\n        //input.type = this._type;      不知道为什么说这个是只读的。但是as项目就没问题\n        input.value = this._content;\n        input.placeholder = this._prompt;\n\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\n        ILaya.stage.focus = this;\n        this.event(Event.FOCUS);\n\n        // PC端直接调用focus进入焦点。\n        if (ILaya.Browser.onPC) input.focus();\n\n        // PC浏览器隐藏文字\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\n            //var temp: string = this._text;\n            this._text = null;\n        }\n        this.typeset();\n\n        // PC同步输入框外观。\n        (input as any).setColor(this._originColor);\n        (input as any).setFontSize(this.fontSize);\n        (input as any).setFontFace(ILaya.Browser.onIPhone ? (Config.fontFamilyMap[this.font] || this.font) : this.font);\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\n        }\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\n        cssStyle.textAlign = this.align;\n        cssStyle.padding = \"0 0\";\n\n        // 输入框重定位。\n        this._syncInputTransform();\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\n    }\n\n    // 设置DOM输入框提示符颜色。\n    private _setPromptColor(): void {\n        // 创建style标签\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\n        if (!Input.promptStyleDOM) {\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\n        }\n\n        // 设置style标签\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\n    }\n\n    /**@private */\n    private _focusOut(): void {\n        if (!InputManager.isTextInputting) return;\n        if (!InputManager.isiOSWKwebView)\n            InputManager.isTextInputting = false;\n        this._focus = false;\n\n        this._text = null;\n        this._content = this.nativeInput.value;\n        if (!this._content) {\n            super.set_text(this._prompt);\n            super.set_color(this._promptColor);\n        } else {\n            super.set_text(this._content);\n            super.set_color(this._originColor);\n        }\n\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\n        ILaya.stage.focus = null;\n        this.event(Event.BLUR);\n        this.event(Event.CHANGE);\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\n        // 只有PC会注册此事件。\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\n    }\n\n    /**@private */\n    private _onKeyDown(e: any): void {\n        if (e.keyCode === 13) {\n            // 移动平台单行输入状态下点击回车收回输入法。 \n            if (ILaya.Browser.onMobile && !this._multiline)\n                this.focus = false;\n\n            this.event(Event.ENTER);\n        }\n    }\n\n    /**\n     * 小游戏专用(解决键盘输入框内容和游戏输入框内容不同步的bug)\n     * @param value \n     */\n    miniGameTxt(value: string) {\n        super.set_color(this._originColor);\n        value += '';\n        if (!this._multiline)\n            value = value.replace(/\\r?\\n/g, '');\n        this._content = value;\n        if (value)\n            super.set_text(value);\n        else {\n            super.set_text(this._prompt);\n            super.set_color(this.promptColor);\n        }\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    set text(value: string) {\n        super.set_color(this._originColor);\n\n        value += '';\n\n        if (this._focus) {\n            this.nativeInput.value = value || '';\n            this.event(Event.CHANGE);\n        } else {\n            // 单行时不允许换行\n            if (!this._multiline)\n                value = value.replace(/\\r?\\n/g, '');\n\n            this._content = value;\n\n            if (value)\n                super.set_text(value);\n            else {\n                super.set_text(this._prompt);\n                super.set_color(this.promptColor);\n            }\n        }\n    }\n    /**\n     * @override\n     */\n    get text(): string {\n        if (this._focus)\n            return this.nativeInput.value;\n        else\n            return this._content || \"\";\n    }\n    /**\n     * \n     * @param text \n     * @override\n     */\n    changeText(text: string): void {\n        this._content = text;\n\n        if (this._focus) {\n            this.nativeInput.value = text || '';\n            this.event(Event.CHANGE);\n        } else\n            super.changeText(text);\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    set color(value: string) {\n        if (this._focus)\n            (this.nativeInput as any).setColor(value);\n\n        super.set_color(this._content ? value : this._promptColor);\n        this._originColor = value;\n    }\n\n    get color() {\n        return super.color;\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    set bgColor(value: string) {\n        super.set_bgColor(value);\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\n            (this.nativeInput as any).setBgColor(value);\n    }\n\n    get bgColor() {\n        return super.bgColor;\n    }\n\n    /**限制输入的字符。*/\n    get restrict(): string {\n        if (this._restrictPattern) {\n            return this._restrictPattern.source;\n        }\n        return \"\";\n    }\n\n    set restrict(pattern: string) {\n        // H5保存RegExp\n        if (pattern) {\n            pattern = \"[^\" + pattern + \"]\";\n\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\n            if (pattern.indexOf(\"^^\") > -1)\n                pattern = pattern.replace(\"^^\", \"\");\n\n            this._restrictPattern = new RegExp(pattern, \"g\");\n        } else\n            this._restrictPattern = null;\n    }\n\n    /**\n     * 是否可编辑。\n     */\n    set editable(value: boolean) {\n        this._editable = value;\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (Input.input as any).setForbidEdit(!value);\n        }\n    }\n\n    get editable(): boolean {\n        return this._editable;\n    }\n\n    /**\n     * <p>字符数量限制，默认为10000。</p>\n     * <p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>\n     */\n    get maxChars(): number {\n        return this._maxChars;\n    }\n\n    set maxChars(value: number) {\n        if (value <= 0)\n            value = 1E5;\n        this._maxChars = value;\n    }\n\n    /**\n     * 设置输入提示符。\n     */\n    get prompt(): string {\n        return this._prompt;\n    }\n\n    set prompt(value: string) {\n        if (!this._text && value)\n            super.set_color(this._promptColor);\n\n        this.promptColor = this._promptColor;\n\n        if (this._text)\n            super.set_text((this._text == this._prompt) ? value : this._text);\n        else\n            super.set_text(value);\n\n        this._prompt = Text.langPacks && Text.langPacks[value] ? Text.langPacks[value] : value;\n    }\n\n    /**\n     * 设置输入提示符颜色。\n     */\n    get promptColor(): string {\n        return this._promptColor;\n    }\n\n    set promptColor(value: string) {\n        this._promptColor = value;\n        if (!this._content) super.set_color(value);\n    }\n\n    /**\n     * <p>输入框类型为Input静态常量之一。</p>\n     * <ul>\n     * <li>TYPE_TEXT</li>\n     * <li>TYPE_PASSWORD</li>\n     * <li>TYPE_EMAIL</li>\n     * <li>TYPE_URL</li>\n     * <li>TYPE_NUMBER</li>\n     * <li>TYPE_RANGE</li>\n     * <li>TYPE_DATE</li>\n     * <li>TYPE_MONTH</li>\n     * <li>TYPE_WEEK</li>\n     * <li>TYPE_TIME</li>\n     * <li>TYPE_DATE_TIME</li>\n     * <li>TYPE_DATE_TIME_LOCAL</li>\n     * </ul>\n     * <p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>\n     */\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        if (value === \"password\") this._getTextStyle().asPassword = true;\n        else this._getTextStyle().asPassword = false;\n        this._type = value;\n    }\n}","import { Component } from \"./Component\"\nimport { HideFlags } from \"../Const\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\n\n/**\n * 相对布局插件\n */\nexport class Widget extends Component {\n    /**一个已初始化的 <code>Widget</code> 实例。*/\n    static EMPTY: Widget = null;// new Widget();\n\n    private _top: number = null;\n    private _bottom: number = null;\n    private _left: number = null;\n    private _right: number = null;\n    private _centerX: number = null;\n    private _centerY: number = null;\n\n    constructor() {\n        super();\n\n        this.runInEditor = true;\n        this.hideFlags |= HideFlags.HideAndDontSave;\n    }\n\n    onReset(): void {\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\n    }\n\n    protected _onEnable(): void {\n        if (this.owner.parent) this._onAdded();\n        else this.owner.once(Event.ADDED, this, this._onAdded);\n    }\n\n    protected _onDisable(): void {\n        this.owner.off(Event.ADDED, this, this._onAdded);\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\n    }\n\n    protected _onAdded(): void {\n        if (this.owner.parent)\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\n        this.resetLayoutX();\n        this.resetLayoutY();\n    }\n\n    /**\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\n     */\n    protected _onParentResize(): void {\n        var flagX = this.resetLayoutX();\n        var flagY = this.resetLayoutY();\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\n    }\n\n    /**\n     * <p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>\n     * @private\n     */\n    resetLayoutX(): boolean {\n        var owner: Sprite = (<Sprite>this.owner);\n        if (!owner) return false;\n        var parent: Sprite = (<Sprite>owner.parent);\n        if (parent) {\n            if (this._centerX != null) {\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\n            } else if (this._left != null) {\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\n                if (this._right != null) {\n                    if (!parent._width) return false;\n                    //TODO:如果用width，会死循环\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\n                    if (temp != owner._width) {\n                        owner.width = temp;\n                        return true;\n                    }\n                }\n            } else if (this._right != null) {\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>\n     * @private\n     */\n    resetLayoutY(): boolean {\n        var owner: Sprite = (<Sprite>this.owner);\n        if (!owner) return false;\n        var parent: Sprite = (<Sprite>owner.parent);\n        if (parent) {\n            if (this._centerY != null) {\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\n            } else if (this._top != null) {\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\n                if (this._bottom != null) {\n                    if (!parent._height) return false;\n                    //TODO:\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\n                    if (temp != owner._height) {\n                        owner.height = temp;\n                        return true;\n                    }\n                }\n            } else if (this._bottom != null) {\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 重新计算布局\n     */\n    resetLayout(): void {\n        if (this.owner) {\n            this.resetLayoutX();\n            this.resetLayoutY();\n        }\n    }\n\n    /**表示距顶边的距离（以像素为单位）。*/\n    get top(): number {\n        return this._top;\n    }\n\n    set top(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._top != value) {\n            this._top = value;\n            this.resetLayoutY();\n        }\n    }\n\n    /**表示距底边的距离（以像素为单位）。*/\n    get bottom(): number {\n        return this._bottom;\n    }\n\n    set bottom(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._bottom != value) {\n            this._bottom = value;\n            this.resetLayoutY();\n        }\n    }\n\n    /**表示距左边的距离（以像素为单位）。*/\n    get left(): number {\n        return this._left;\n    }\n\n    set left(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._left != value) {\n            this._left = value;\n            this.resetLayoutX();\n        }\n    }\n\n    /**表示距右边的距离（以像素为单位）。*/\n    get right(): number {\n        return this._right;\n    }\n\n    set right(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._right != value) {\n            this._right = value;\n            this.resetLayoutX();\n        }\n    }\n\n    /**表示距水平方向中心轴的距离（以像素为单位）。*/\n    get centerX(): number {\n        return this._centerX;\n    }\n\n    set centerX(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._centerX != value) {\n            this._centerX = value;\n            this.resetLayoutX();\n        }\n    }\n\n    /**表示距垂直方向中心轴的距离（以像素为单位）。*/\n    get centerY(): number {\n        return this._centerY;\n    }\n\n    set centerY(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._centerY != value) {\n            this._centerY = value;\n            this.resetLayoutY();\n        }\n    }\n}\n\nWidget.EMPTY = new Widget();\n","import { LayaEnv } from \"../../LayaEnv\";\nimport { Graphics } from \"../display/Graphics\"\nimport { Sprite } from \"../display/Sprite\";\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { ClassUtils } from \"./ClassUtils\";\n\nconst _rect: Rectangle = new Rectangle();\nconst _ptPoint: Point = new Point();\n\n/**\n * 鼠标点击区域，可以设置绘制一系列矢量图作为点击区域和非点击区域（目前只支持圆形，矩形，多边形）\n *\n */\nexport class HitArea {\n    _hit: Graphics;\n    _unHit: Graphics;\n\n    /**\n     * 检测对象是否包含指定的点。\n     * @param\tx\t点的 X 轴坐标值（水平位置）。\n     * @param\ty\t点的 Y 轴坐标值（垂直位置）。\n     * @return\t如果包含指定的点，则值为 true；否则为 false。\n     */\n    contains(x: number, y: number, sp: Sprite): boolean {\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\n            return false;\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\n    }\n\n    /**\n     * @internal\n     * 是否击中Graphic\n     */\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\n        if (!graphic) return false;\n        let cmds = graphic.cmds;\n        if (cmds.length == 0) return false;\n        let len = cmds.length;\n        for (let i = 0; i < len; i++) {\n            let cmd = cmds[i];\n            if (!cmd) continue;\n            switch (cmd.cmdID) {\n                case \"Translate\":\n                    x -= cmd.tx;\n                    y -= cmd.ty;\n            }\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\n        }\n        return false;\n    }\n\n    /**\n     * @internal\n     * 是否击中绘图指令\n     */\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\n        if (!cmd) return false;\n        var rst: boolean = false;\n        switch (cmd.cmdID) {\n            case \"DrawRect\":\n                if (cmd.percent)\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\n                else\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\n                rst = _rect.contains(x, y);\n                break;\n            case \"DrawCircle\":\n                let r = cmd.radius;\n                var d: number;\n                if (cmd.percent) {\n                    x -= cmd.x * sp.width;\n                    y -= cmd.y * sp.height;\n                    r *= sp.width;\n                }\n                else {\n                    x -= cmd.x;\n                    y -= cmd.y;\n                }\n                d = x * x + y * y;\n                rst = d < r * r;\n                break;\n            case \"DrawPoly\":\n                x -= cmd.x;\n                y -= cmd.y;\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\n                break;\n        }\n        return rst;\n    }\n\n    /**\n     * @internal\n     * 坐标是否在多边形内\n     */\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\n        var p: Point = _ptPoint;\n        p.setTo(x, y);\n        // 交点个数\n        var nCross: number = 0;\n        var p1x: number, p1y: number, p2x: number, p2y: number;\n        var len: number;\n        len = areaPoints.length;\n        for (var i: number = 0; i < len; i += 2) {\n            p1x = areaPoints[i];\n            p1y = areaPoints[i + 1];\n            p2x = areaPoints[(i + 2) % len];\n            p2y = areaPoints[(i + 3) % len];\n            //var p1:Point = areaPoints[i];\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\n            if (p1y == p2y) continue;\n            if (p.y < Math.min(p1y, p2y)) continue;\n            if (p.y >= Math.max(p1y, p2y)) continue;\n            // 求交点的x坐标\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\n            // 只统计p1p2与p向右射线的交点\n            if (tx > p.x) nCross++;\n        }\n        // 交点为偶数，点在多边形之外\n        return (nCross % 2 == 1);\n    }\n\n    /**\n     * 可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）\n     */\n    get hit(): Graphics {\n        if (!this._hit) this._hit = new Graphics();\n        return this._hit;\n    }\n\n    set hit(value: Graphics) {\n        this._hit = value;\n    }\n\n    /**\n     * 不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）\n     */\n    get unHit(): Graphics {\n        if (!this._unHit) this._unHit = new Graphics();\n        return this._unHit;\n    }\n\n    set unHit(value: Graphics) {\n        this._unHit = value;\n    }\n\n    onAfterDeserialize() {\n        if (LayaEnv.isPlaying) {\n            if ((<any>this)._hitCmds) {\n                this.hit.cmds = (<any>this)._hitCmds;\n                delete (<any>this)._hitCmds;\n            }\n\n            if ((<any>this)._unHitCmds) {\n                this.unHit.cmds = (<any>this)._unHitCmds;\n                delete (<any>this)._unHitCmds;\n            }\n        }\n    }\n}\n\nClassUtils.regClass(\"HitArea\", HitArea);\n\n","import { Utils } from \"./Utils\";\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * 封装弱引用WeakMap\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\n * \n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\n */\nexport class WeakObject {\n    /**是否支持WeakMap*/\n    static supportWeakMap = false;\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\n    static delInterval = 10 * 60 * 1000;\n    /**全局WeakObject单例*/\n    static I: WeakObject;\n    /**@private */\n    private static _maps: any[] = [];\n    /**@internal */\n    _obj: any;\n\n    /**@internal */\n    static __init__(): void {\n        WeakObject.I = new WeakObject();\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\n        //如果不支持，10分钟回收一次\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\n    }\n\n    /**清理缓存，回收内存*/\n    static clearCache(): void {\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\n            var obj = WeakObject._maps[i];\n            obj._obj = {};\n        }\n    }\n\n    constructor() {\n        this._obj = {};\n        WeakObject._maps.push(this);\n    }\n\n\t/**\n\t * 设置缓存\n\t * @param\tkey kye对象，可被回收\n\t * @param\tvalue object对象，可被回收\n\t */\n    set(key: any, value: any): void {\n        if (key == null) return;\n        if (WeakObject.supportWeakMap) {\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\n                this._obj[key as any] = value;\n            } else {\n                key.$_GID || (key.$_GID = Utils.getGID());\n                this._obj[key.$_GID] = value;\n            }\n        }\n    }\n\n\t/**\n\t * 获取缓存\n\t * @param\tkey kye对象，可被回收\n\t */\n    get(key: any): any {\n        if (key == null) return null;\n        if (WeakObject.supportWeakMap) {\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\n            return this._obj[key.$_GID];\n        }\n    }\n\n\t/**\n\t * 删除缓存\n\t */\n    del(key: any): void {\n        if (key == null) return;\n        if (WeakObject.supportWeakMap) {\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\n            else delete this._obj[this._obj.$_GID];\n        }\n    }\n\n\t/**\n\t * 是否有缓存\n\t */\n    has(key: any): boolean {\n        if (key == null) return false;\n        if (WeakObject.supportWeakMap) {\n            return false;\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\n            return this._obj[this._obj.$_GID] != null;\n        }\n    }\n}\n\n//WeakObject.__init__();","import { LayaEnv } from \"../../LayaEnv\";\nimport { Node } from \"../display/Node\";\nimport { Scene } from \"../display/Scene\";\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\nimport { Resource } from \"./Resource\";\n\nexport class Prefab extends Resource {\n    public readonly version: number;\n    protected _deps: Array<Resource>;\n\n    /**@private */\n    json: any; //兼容2.0\n\n    constructor(version?: number) {\n        super();\n\n        this.version = version;\n        this._deps = [];\n    }\n\n    /**\n     * 创建实例\n     */\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\n        if (this.json) //兼容2.0\n            return LegacyUIParser.createByData(null, this.json);\n        else\n            return null;\n    }\n\n    get deps(): ReadonlyArray<Resource> {\n        return this._deps;\n    }\n\n    addDep(res: Resource) {\n        if (res instanceof Resource) {\n            res._addReference();\n            this._deps.push(res);\n\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\n                res.on(\"obsolute\", this, this.onDepObsolute);\n        }\n    }\n\n    addDeps(resArr: Array<Resource>) {\n        for (let res of resArr) {\n            if (res instanceof Resource) {\n                res._addReference();\n                this._deps.push(res);\n\n                if (!LayaEnv.isPlaying && (res instanceof Prefab))\n                    res.on(\"obsolute\", this, this.onDepObsolute);\n            }\n        }\n    }\n\n    protected _disposeResource(): void {\n        for (let res of this._deps) {\n            res._removeReference();\n\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\n                res.off(\"obsolute\", this, this.onDepObsolute);\n        }\n    }\n\n    public get obsolute(): boolean {\n        return this._obsolute;\n    }\n\n    public set obsolute(value: boolean) {\n        if (this._obsolute != value) {\n            this._obsolute = value;\n            if (value && !LayaEnv.isPlaying)\n                this.event(\"obsolute\");\n        }\n    }\n\n    private onDepObsolute() {\n        this.obsolute = true;\n    }\n}\n\n//旧版本兼容\nexport type HierarchyResource = Prefab;\nexport var HierarchyResource = Prefab;","import { Node } from \"../display/Node\";\nimport { ILoadURL } from \"../net/Loader\";\nimport { Prefab } from \"./HierarchyResource\";\n\n/**\n * 层次结构分析器API\n */\nexport interface IHierarchyParserAPI {\n    /**收集资源链接 */\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\n    /**解析 */\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\n}\n\n/**\n * 预制体导入\n */\nexport class PrefabImpl extends Prefab {\n    /**数据 */\n    data: any;\n    /**层次结构API */\n    api: IHierarchyParserAPI;\n\n    /**\n     * 实例化一个预制体\n     * @param api 层次结构API\n     * @param data 数据\n     * @param version 版本\n     */\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\n        super(version);\n\n        this.api = api;\n        this.data = data;\n    }\n\n    /**\n     * 创建一个\n     * @param options \n     * @param errors \n     * @returns \n     */\n    create(options?: Record<string, any>, errors?: any[]): Node {\n        let ret = this.api.parse(this.data, options, errors);\n        if (Array.isArray(ret)) {\n            if (ret.length == 1) {\n                ret[0].url = this.url;\n            }\n            return ret[0];\n        }\n        else {\n            ret.url = this.url;\n            return ret;\n        }\n    }\n}\n","import { Component } from \"../components/Component\"\nimport { FrameAnimation } from \"../display/FrameAnimation\"\nimport { Node } from \"../display/Node\"\nimport { ILaya } from \"../../ILaya\";\nimport { Graphics } from \"../display/Graphics\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Loader } from \"../net/Loader\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { HitArea } from \"../utils/HitArea\";\nimport { Pool } from \"../utils/Pool\";\nimport { WeakObject } from \"../utils/WeakObject\";\nimport { Handler } from \"laya/utils/Handler\";\nimport { NodeFlags } from \"../Const\";\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\nimport { Scene } from \"../display/Scene\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\nvar _listClass: any;\nvar _viewClass: any;\n\n/**\n * @private 场景辅助类\n */\nexport class LegacyUIParser {\n    /**@private */\n    private static _funMap: WeakObject;\n    /**@private */\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\n    /**@private */\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\n    /**@internal */\n    static _sheet: any;\n\n    static parse(data: any, options: any) {\n        let root: Sprite = options?.root;\n        if (!root) {\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\n            let clas = ClassUtils.getClass(runtime);\n\n            if (data.props.renderType == \"instance\")\n                root = clas.instance || (clas.instance = new clas());\n            else\n                root = new clas();\n        }\n\n        if (root && (<any>root)._viewCreated)\n            return root;\n\n        return LegacyUIParser.createByData(root, data);\n    }\n\n    /**\n     * @private 根据字符串，返回函数表达式\n     */\n    //TODO:coverage\n    static getBindFun(value: string): Function {\n        let map = LegacyUIParser._funMap;\n        if (!map)\n            map = LegacyUIParser._funMap = new WeakObject();\n        var fun: Function = LegacyUIParser._funMap.get(value);\n        if (fun == null) {\n            var temp: string = \"\\\"\" + value + \"\\\"\";\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\n            fun = (window as any).Laya._runScript(str);\n            LegacyUIParser._funMap.set(value, fun);\n        }\n        return fun;\n    }\n\n    /**\n     * @private\n     * 通过视图数据创建视图。\n     * @param uiView 视图数据信息。\n     */\n    //TODO:coverage\n    static createByData(root: Sprite, uiView: any): Sprite {\n        var tInitTool: InitTool = InitTool.create();\n\n        //递归创建节点\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\n        if (\"_idMap\" in root) {\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\n        }\n\n        //处理动画信息\n        if (uiView.animations) {\n            var anilist: any[] = [];\n            var animations: any[] = uiView.animations;\n            var i: number, len: number = animations.length;\n            var tAni: FrameAnimation;\n            var tAniO: any;\n            for (i = 0; i < len; i++) {\n                tAni = new FrameAnimation();\n                tAniO = animations[i];\n                tAni._setUp(tInitTool._idMap, tAniO);\n                (<any>root)[tAniO.name] = tAni;\n                tAni._setControlNode(root);\n                switch (tAniO.action) {\n                    case 1:\n                        tAni.play(0, false);\n                        break;\n                    case 2:\n                        tAni.play(0, true);\n                        break;\n                }\n                anilist.push(tAni);\n            }\n            (<any>root)._aniList = anilist;\n        }\n\n        //设置页面穿透\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\n            root.hitTestPrior = true;\n\n        //设置组件\n        tInitTool.finish();\n        root._setBit(NodeFlags.NOT_READY, false);\n        if (root.parent && root.parent.activeInHierarchy && root.active)\n            root._processActive(true);\n        return root;\n    }\n\n    static createInitTool(): InitTool {\n        return InitTool.create();\n    }\n\n    /**\n     * 根据UI数据实例化组件。\n     * @param uiView UI数据。\n     * @param comp 组件本体，如果为空，会新创建一个。\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\n     * @return 一个 Component 对象。\n     */\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\n        if (!comp) {\n            if (uiView.props && uiView.props.runtime)\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\n            else\n                console.warn(\"can not create:\" + uiView.type);\n            return null;\n        }\n\n        var child: any[] = uiView.child;\n        if (child) {\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\n                var node: any = child[i];\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\n                    //如果list的itemRender\n                    (<any>comp)[\"itemRender\"] = node;\n                } else if (node.type == \"Graphic\") {\n                    //绘制矢量图\n                    this._addGraphicsToSprite(node, comp);\n                } else if (this._isDrawType(node.type)) {\n                    this._addGraphicToSprite(node, comp, true);\n                } else {\n                    if (isList) {\n                        //收集数据绑定信息\n                        var arr: any[] = [];\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\n                        if (arr.length)\n                            tChild[\"_$bindData\"] = arr;\n                    } else {\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\n                    }\n\n                    //处理脚本\n                    if (node.type == \"Script\") {\n                        if (tChild instanceof Component) {\n                            comp.addComponentInstance(tChild);\n                        } else {\n                            //兼容老版本\n                            if (\"owner\" in tChild) {\n                                tChild[\"owner\"] = comp;\n                            } else if (\"target\" in tChild) {\n                                tChild[\"target\"] = comp;\n                            }\n                        }\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\n                        comp.mask = tChild;\n                    } else {\n                        tChild instanceof Node && comp.addChild(tChild);\n                    }\n                }\n            }\n        }\n\n        var props: any = uiView.props;\n        for (var prop in props) {\n            var value: any = props[prop];\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\n                if (initTool) {\n                    initTool.addNodeRef(comp, prop, <string>value);\n                }\n            } else\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\n        }\n\n        if ((<any>comp)._afterInited) {\n            //if (initTool) {\n            //initTool.addInitItem(comp);\n            //} else {\n            (<any>comp)._afterInited();\n            //}\n        }\n\n        if (uiView.compId && initTool && initTool._idMap) {\n            initTool._idMap[uiView.compId] = comp;\n        }\n\n        return comp;\n    }\n\n    /**\n     * @private\n     * 设置组件的属性值。\n     * @param comp 组件实例。\n     * @param prop 属性名称。\n     * @param value 属性值。\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\n     */\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\n        //处理数据绑定\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\n            if (!LegacyUIParser._sheet) {\n                console.warn(\"Can not find class Sheet\");\n                return;\n            }\n            //list的item处理\n            if (dataMap) {\n                dataMap.push(comp, prop, value);\n            } else if (view) {\n                if (value.indexOf(\"].\") == -1) {\n                    //TODO\n                    value = value.replace(\".\", \"[0].\");\n                }\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\n\n                //执行第一次数据赋值\n                watcher.exe(view);\n                var one: any[], temp: any[];\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\n                    var key1: string = one[1];\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\n                        var key2: string = temp[0];\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\n                        arr.push(watcher);\n                        //监听数据变化\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\n                    }\n                    //TODO\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\n                    arr.push(watcher);\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\n                }\n                //trace(view._watchMap);\n            }\n            return;\n        }\n\n        if (prop === \"var\" && view) {\n            view[value] = comp;\n        } else {\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\n        }\n    }\n\n    /**\n     * @private\n     * 通过组建UI数据，获取组件实例。\n     * @param json UI数据。\n     * @return Component 对象。\n     */\n    static getCompInstance(json: any): any {\n        if (json.type == \"UIView\") {\n            if (json.props && json.props.pageData) {\n                return LegacyUIParser.createByData(null, json.props.pageData);\n            }\n        }\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\n        var compClass = ClassUtils.getClass(runtime);\n        if (!compClass) throw \"Can not find class \" + runtime;\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\n            var comp: any = Pool.createByClass(compClass);\n            comp._destroyed = false;\n            return comp;\n        }\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\n            return (compClass as any)[\"instance\"];\n        }\n\n        let ret = new compClass();\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\n            (<any>ret)._scene = ret;\n        return ret;\n    }\n\n    public static collectResourceLinks(uiView: any) {\n        let test = new Set();\n        let innerUrls: string[] = [];\n\n        function addInnerUrl(url: string) {\n            if (!test.has(url)) {\n                test.add(url);\n                innerUrls.push(url);\n            }\n        }\n\n        function check(uiView: any) {\n            let props: any = uiView.props;\n            for (let prop in props) {\n                let value: any = props[prop];\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\n                    let url = value.replace(\"@Prefab:\", \"\");\n                    addInnerUrl(url);\n                }\n            }\n\n            let child: any[] = uiView.child;\n            if (child) {\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\n                    let node: any = child[i];\n                    check(node);\n                }\n            }\n        }\n\n        if (uiView.loadList) {\n            for (let url of uiView.loadList)\n                addInnerUrl(url);\n        }\n\n        if (uiView.loadList3D) {\n            for (let url of uiView.loadList3D)\n                addInnerUrl(url);\n        }\n\n        check(uiView);\n        return innerUrls;\n    }\n\n    /**\n     * 根据指定的 json 数据创建节点对象。\n     * 比如:\n     * {\n     * \t\"type\":\"Sprite\",\n     * \t\"props\":{\n     * \t\t\"x\":100,\n     * \t\t\"y\":50,\n     * \t\t\"name\":\"item1\",\n     * \t\t\"scale\":[2,2]\n     * \t},\n     * \t\"customProps\":{\n     * \t\t\"x\":100,\n     * \t\t\"y\":50,\n     * \t\t\"name\":\"item1\",\n     * \t\t\"scale\":[2,2]\n     * \t},\n     * \t\"child\":[\n     * \t\t{\n     * \t\t\t\"type\":\"Text\",\n     * \t\t\t\"props\":{\n     * \t\t\t\t\"text\":\"this is a test\",\n     * \t\t\t\t\"var\":\"label\",\n     * \t\t\t\t\"rumtime\":\"\"\n     * \t\t\t}\n     * \t\t}\n     * \t]\n     * }\n     * @param\tjson json字符串或者Object对象。\n     * @param\tnode node节点，如果为空，则新创建一个。\n     * @param\troot 根节点，用来设置var定义。\n     * @return\t生成的节点。\n     */\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\n        var props: any = json.props;\n\n        if (!node) {\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\n            if (!node) return null;\n        }\n\n        var child: any[] = json.child;\n        if (child) {\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\n                var data: any = child[i];\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\n                    node.itemRender = data;\n                else {\n                    if (data.type == \"Graphic\") {\n                        this._addGraphicsToSprite(data, node);\n                    } else if (this._isDrawType(data.type)) {\n                        this._addGraphicToSprite(data, node, true);\n                    } else {\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\n                        if (data.type === \"Script\") {\n                            if (\"owner\" in tChild) {\n                                tChild[\"owner\"] = node;\n                            } else if (\"target\" in tChild) {\n                                tChild[\"target\"] = node;\n                            }\n                        } else if (data.props.renderType == \"mask\") {\n                            node.mask = tChild;\n                        } else {\n                            node.addChild(tChild);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (props) {\n            for (var prop in props) {\n                var value: any = props[prop];\n                if (prop === \"var\" && root) {\n                    (root as any)[value] = node;\n                } else if (value instanceof Array && node[prop] instanceof Function) {\n                    node[prop].apply(node, value);\n                } else {\n                    node[prop] = value;\n                }\n            }\n        }\n\n        if (customHandler && json.customProps) {\n            customHandler.runWith([node, json]);\n        }\n\n        if (node[\"created\"]) node.created();\n\n        return node;\n    }\n\n    /**\n     * @internal\n     * 将graphic对象添加到Sprite上\n     * @param graphicO graphic对象描述\n     */\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\n        var graphics: any[] = graphicO.child;\n        if (!graphics || graphics.length < 1) return;\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\n        var ox: number = 0;\n        var oy: number = 0;\n        if (graphicO.props) {\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\n        }\n        if (ox != 0 && oy != 0) {\n            g.translate(ox, oy);\n        }\n        var i: number, len: number;\n        len = graphics.length;\n        for (i = 0; i < len; i++) {\n            this._addGraphicToGraphics(graphics[i], g);\n        }\n        if (ox != 0 && oy != 0) {\n            g.translate(-ox, -oy);\n        }\n    }\n\n    /**\n     * @internal\n     * 将graphic绘图指令添加到sprite上\n     * @param graphicO 绘图指令描述\n     */\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\n        this._addGraphicToGraphics(graphicO, g);\n    }\n\n    /**\n     * @private\n     */\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\n        if (!dataO || !dataO.props) return sprite.graphics;\n        var propsName: string = dataO.props.renderType;\n        if (propsName === \"hit\" || propsName === \"unHit\") {\n            var hitArea: HitArea = sprite._style.hitArea || (sprite.hitArea = new HitArea());\n            if (!hitArea[propsName]) {\n                hitArea[propsName] = new Graphics();\n            }\n            var g: Graphics = hitArea[propsName];\n        }\n        if (!g) g = sprite.graphics;\n        return g;\n    }\n\n    /**\n     * @private\n     */\n    private static _getTransformData(propsO: any): Matrix {\n        var m: Matrix;\n\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\n            m = m || new Matrix();\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\n        }\n\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\n\n        if (sx != 1 || sy != 1 || rotate != 0) {\n            m = m || new Matrix();\n            m.scale(sx, sy);\n            m.rotate(rotate * 0.0174532922222222);\n        }\n\n        return m;\n    }\n\n    /**\n     * @private\n     */\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\n        var propsO: any;\n        propsO = graphicO.props;\n        if (!propsO) return;\n        var drawConfig: any;\n        drawConfig = this.DrawTypeDic[graphicO.type];\n        if (!drawConfig) return;\n\n        var g: Graphics = graphic;\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\n        var m: Matrix = this._tM;\n        if (m || this._alpha != 1) {\n            g.save();\n            if (m) g.transform(m);\n            if (this._alpha != 1) g.alpha(this._alpha);\n        }\n        (g as any)[drawConfig[0]].apply(g, params);\n        if (m || this._alpha != 1) {\n            g.restore();\n        }\n    }\n\n    /**\n     * @private\n     */\n    private static _adptLineData(params: any[]): any[] {\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\n        return params;\n    }\n\n    /**\n     * @private\n     */\n    private static _adptTextureData(params: any[]): any[] {\n        params[0] = ILaya.Loader.getRes(params[0]);\n        return params;\n    }\n\n    /**\n     * @private\n     */\n    private static _adptLinesData(params: any[]): any[] {\n        params[2] = this._getPointListByStr(params[2]);\n        return params;\n    }\n\n    /**\n     * @internal\n     */\n    static _isDrawType(type: string): boolean {\n        if (type === \"Image\") return false;\n        return type in this.DrawTypeDic;\n    }\n\n    /**\n     * @private\n     */\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\n        var rst: any = this._temParam;\n        rst.length = params.length;\n        var i: number, len: number;\n        len = params.length;\n        for (i = 0; i < len; i++) {\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\n        }\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\n        var m: Matrix;\n        m = this._getTransformData(obj);\n        if (m) {\n            if (!xPos) xPos = 0;\n\n            m.translate(rst[xPos], rst[xPos + 1]);\n            rst[xPos] = rst[xPos + 1] = 0;\n            this._tM = m;\n        } else {\n            this._tM = null;\n        }\n        if (adptFun && (this as any)[adptFun]) {\n            rst = (this as any)[adptFun](rst);\n        }\n        return rst;\n    }\n    /**@private */\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\n    /**@private */\n    private static _temParam: any[] = [];\n    /**@private */\n    private static _tM: Matrix;\n    /**@private */\n    private static _alpha: number;\n\n    /**\n     * @internal\n     */\n    static _getPointListByStr(str: string): any[] {\n        var pointArr: any[] = str.split(\",\");\n        var i: number, len: number;\n        len = pointArr.length;\n        for (i = 0; i < len; i++) {\n            pointArr[i] = parseFloat(pointArr[i]);\n        }\n        return pointArr;\n    }\n\n    /**\n     * @private\n     */\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\n        if (key in obj) {\n            return obj[key];\n        }\n        return noValue;\n    }\n}\n\n/**\n * @private 场景辅助类\n */\nclass DataWatcher {\n    comp: any;\n    prop: string;\n    value: string;\n\n    //TODO:coverage\n    constructor(comp: any, prop: string, value: string) {\n        this.comp = comp;\n        this.prop = prop;\n        this.value = value;\n    }\n\n    exe(view: any): void {\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\n        this.comp[this.prop] = fun.call(this, view);\n    }\n}\n\n/**\n * @private 场景辅助类\n */\nclass InitTool {\n    /**@private */\n    private _nodeRefList: any[];\n    /**@private */\n    private _initList: any[];\n    /**@internal */\n    _idMap: { [key: string]: Sprite };\n\n    //TODO:coverage\n    reset(): void {\n        this._nodeRefList = null;\n        this._initList = null;\n        this._idMap = null;\n    }\n\n    //TODO:coverage\n    recover(): void {\n        this.reset();\n        Pool.recover(\"InitTool\", this);\n    }\n\n    static create(): InitTool {\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\n        tool._idMap = {};\n        return tool;\n    }\n\n    /**@private */\n    //TODO:coverage\n    addNodeRef(node: any, prop: string, referStr: string): void {\n        if (!this._nodeRefList) this._nodeRefList = [];\n        this._nodeRefList.push([node, prop, referStr]);\n    }\n\n    /**@private */\n    //TODO:coverage\n    setNodeRef(): void {\n        if (!this._nodeRefList) return;\n        if (!this._idMap) {\n            this._nodeRefList = null;\n            return;\n        }\n        var i: number, len: number;\n        len = this._nodeRefList.length;\n        var tRefInfo: any[];\n        for (i = 0; i < len; i++) {\n            tRefInfo = this._nodeRefList[i];\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\n        }\n        this._nodeRefList = null;\n    }\n\n    /**@private */\n    //TODO:coverage\n    getReferData(referStr: string): any {\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\n            referStr = referStr.replace(\"@arr:\", \"\");\n            var list: string[];\n            list = referStr.split(\",\");\n            var i: number, len: number;\n            var tStr: string;\n            len = list.length;\n            var list2: Sprite[] = [];\n            for (i = 0; i < len; i++) {\n                tStr = list[i];\n                if (tStr) {\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\n                } else {\n                    list2.push(null);\n                }\n            }\n            return list2;\n        } else {\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\n        }\n    }\n\n    /**@private */\n    //TODO:coverage\n    addInitItem(item: any): void {\n        if (!this._initList) this._initList = [];\n        this._initList.push(item);\n    }\n\n    /**@private */\n    //TODO:coverage\n    doInits(): void {\n        if (!this._initList) return;\n        this._initList = null;\n    }\n\n    /**@private */\n    //TODO:coverage\n    finish(): void {\n        this.setNodeRef();\n        this.doInits();\n        this.recover();\n    }\n}","import { Sprite } from \"./Sprite\";\nimport { Widget } from \"../components/Widget\";\nimport { Event } from \"../events/Event\"\nimport { Resource } from \"../resource/Resource\"\nimport { Handler } from \"../utils/Handler\"\nimport { Timer } from \"../utils/Timer\"\nimport { ILaya } from \"../../ILaya\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\nimport { NodeFlags } from \"../Const\";\n\n/**\n * 场景类，负责场景创建，加载，销毁等功能\n * 场景被从节点移除后，并不会被自动垃圾机制回收，如果想回收，请调用destroy接口，可以通过unDestroyedScenes属性查看还未被销毁的场景列表\n */\nexport class Scene extends Sprite {\n    /**创建后，还未被销毁的场景列表，方便查看还未被销毁的场景列表，方便内存管理，本属性只读，请不要直接修改*/\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\n    /**获取根节点*/\n    private static _root: Sprite;\n    /**@private */\n    private static _loadPage: Sprite;\n\n    /**场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为false*/\n    autoDestroyAtClosed: boolean = false;\n    /**@internal */\n    _idMap?: any;\n    _scene3D:any;\n\n    /**@private 相对布局组件*/\n    protected _widget: Widget;\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\n    protected _anchorX: number = null;\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\n    protected _anchorY: number = null;\n\n    /**场景时钟*/\n    private _timer: Timer;\n    /**@private */\n    private _viewCreated: boolean = false;\n\n    constructor(createChildren = true) {\n        super();\n\n        this._timer = ILaya.timer;\n        this._widget = Widget.EMPTY;\n\n        this._scene = this;\n        if (createChildren)\n            this.createChildren();\n    }\n\n    /**\n     * @private 兼容老项目\n     */\n    protected createChildren(): void {\n    }\n\n    /**\n     * 兼容加载模式\n     * 加载模式设置uimap\n     * @param url uimapJosn的url\n     */\n    static setUIMap(url: string): void {\n        let uimap = ILaya.loader.getRes(url);\n        if (uimap) {\n            for (let key in uimap) {\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\n            }\n        } else {\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\n        }\n    }\n\n    /**\n     * @private 兼容老项目\n     * 装载场景视图。用于加载模式。\n     * @param path 场景地址。\n     */\n    loadScene(path: string): void {\n        Scene.unDestroyedScenes.add(this);\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\n        let content: Prefab = ILaya.loader.getRes(url);\n        if (content) {\n            if (!this._viewCreated) {\n                content.create({ root: this });\n                this._viewCreated = true;\n                Scene.unDestroyedScenes.add(this);\n            }\n        } else {\n            this._setBit(NodeFlags.NOT_READY, true);\n            ILaya.loader.load(url, null, value => {\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\n            }).then((content: Prefab) => {\n                if (!content) throw \"Can not find scene:\" + path;\n                if (!this._viewCreated) {\n                    this.url = url;\n                    Scene.hideLoadingPage();\n\n                    content.create({ root: this });\n                    this._viewCreated = true;\n                    Scene.unDestroyedScenes.add(this);\n                }\n                else\n                    this._setBit(NodeFlags.NOT_READY, false);\n            });\n        }\n    }\n\n    /**\n     * @private 兼容老项目\n     * 通过视图数据创建视图。\n     * @param uiView 视图数据信息。\n     */\n    createView(view: any): void {\n        if (view && !this._viewCreated) {\n            this._viewCreated = true;\n            LegacyUIParser.createByData(this, view);\n        }\n    }\n\n    /**\n    * 根据IDE内的节点id，获得节点实例\n    */\n    getNodeByID(id: number): any {\n        if (this._idMap) return this._idMap[id];\n        return null;\n    }\n\n    /**\n     * 打开场景。【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选）\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\n     */\n    open(closeOther: boolean = true, param: any = null): void {\n        if (closeOther) Scene.closeAll();\n        Scene.root.addChild(this);\n        if (this._scene3D)\n            ILaya.stage.addChildAt(this._scene3D, 0);\n        this.onOpened(param);\n    }\n\n    /**场景打开完成后，调用此方法（如果有弹出动画，则在动画完成后执行）*/\n    onOpened(param: any): void {\n        //trace(\"onOpened\");\n    }\n\n    /**\n     * 关闭场景\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     * @param type 关闭的原因，会传递给onClosed函数\n     */\n    close(type: string = null): void {\n        this.onClosed(type);\n        if (this.autoDestroyAtClosed) {\n            this.destroy();\n            if (this._scene3D)\n                this._scene3D.destroy();\n        }\n        else {\n            this.removeSelf();\n            if (this._scene3D)\n                this._scene3D.removeSelf();\n        }\n    }\n\n    /**\n     * 关闭完成后，调用此方法（如果有关闭动画，则在动画完成后执行）\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\n     */\n    onClosed(type: string = null): void {\n        //trace(\"onClosed\");\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        if (this._scene3D) {\n            this._scene3D.destroy();\n            this._scene3D = null;\n        }\n\n        this._idMap = null;\n        Scene.unDestroyedScenes.delete(this);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set scaleX(value: number) {\n        if (super.get_scaleX() == value) return;\n        super.set_scaleX(value);\n        this.event(Event.RESIZE);\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get scaleX() {\n        return super.scaleX;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set scaleY(value: number) {\n        if (super.get_scaleY() == value) return;\n        super.set_scaleY(value);\n        this.event(Event.RESIZE);\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get scaleY() {\n        return super.scaleY;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get width(): number {\n        if (this._width) return this._width;\n        var max: number = 0;\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set width(value: number) {\n        if (super.get_width() == value) return;\n        super.set_width(value);\n        this.callLater(this._sizeChanged);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get height(): number {\n        if (this._height) return this._height;\n        var max: number = 0;\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set height(value: number) {\n        if (super.get_height() == value) return;\n        super.set_height(value);\n        this.callLater(this._sizeChanged);\n    }\n\n    /**\n     * 场景时钟\n     * @override\n     */\n    get timer(): Timer {\n        return this._timer;\n    }\n\n    set timer(value: Timer) {\n        this._timer = value;\n    }\n\n    get scene3D() {\n        return this._scene3D;\n    }\n\n    /**\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\n     */\n    get top(): number {\n        return this._widget.top;\n    }\n\n    set top(value: number) {\n        if (value != this._widget.top) {\n            this._getWidget().top = value;\n        }\n    }\n\n    /**\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\n     */\n    get bottom(): number {\n        return this._widget.bottom;\n    }\n\n    set bottom(value: number) {\n        if (value != this._widget.bottom) {\n            this._getWidget().bottom = value;\n        }\n    }\n\n    /**\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\n     */\n    get left(): number {\n        return this._widget.left;\n    }\n\n    set left(value: number) {\n        if (value != this._widget.left) {\n            this._getWidget().left = value;\n        }\n    }\n\n    /**\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\n     */\n    get right(): number {\n        return this._widget.right;\n    }\n\n    set right(value: number) {\n        if (value != this._widget.right) {\n            this._getWidget().right = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerX(): number {\n        return this._widget.centerX;\n    }\n\n    set centerX(value: number) {\n        if (value != this._widget.centerX) {\n            this._getWidget().centerX = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerY(): number {\n        return this._widget.centerY;\n    }\n\n    set centerY(value: number) {\n        if (value != this._widget.centerY) {\n            this._getWidget().centerY = value;\n        }\n    }\n\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\n    get anchorX(): number {\n        return this._anchorX;\n    }\n\n    set anchorX(value: number) {\n        if (this._anchorX != value) {\n            this._anchorX = value;\n            this.callLater(this._sizeChanged);\n        }\n    }\n\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\n    get anchorY(): number {\n        return this._anchorY;\n    }\n\n    set anchorY(value: number) {\n        if (this._anchorY != value) {\n            this._anchorY = value\n            this.callLater(this._sizeChanged);\n        }\n    }\n\n    /**\n     * @private \n     * @override\n    */\n    protected _sizeChanged(): void {\n        if (this._anchorX != null) this.pivotX = this.anchorX * this.width;\n        if (this._anchorY != null) this.pivotY = this.anchorY * this.height;\n        this.event(Event.RESIZE);\n        if (this._widget != Widget.EMPTY) {\n            this._widget.resetLayout();\n        }\n    }\n\n    /**\n     * 重新排版\n     */\n    freshLayout() {\n        if (this._widget != Widget.EMPTY) {\n            this._widget.resetLayout();\n        }\n    }\n\n    /**\n     * @private\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\n     */\n    private _getWidget(): Widget {\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\n        return this._widget;\n    }\n\n    //////////////////////////////////////静态方法//////////////////////////////////////////\n\n    /**获取场景根容器*/\n    static get root(): Sprite {\n        let root = Scene._root;\n        if (!root) {\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\n            root.name = \"root\";\n            root.mouseThrough = true;\n            ILaya.stage.on(\"resize\", null, () => {\n                root.size(ILaya.stage.width, ILaya.stage.height);\n                root.event(Event.RESIZE);\n            });\n            root.size(ILaya.stage.width, ILaya.stage.height);\n            root.event(Event.RESIZE);\n        }\n        return root;\n    }\n\n    /**\n     * 加载场景及场景使用到的资源\n     * @param\turl\t\t\t场景地址\n     * @param\tcomplete\t加载完成回调，返回场景实例（可选）\n     * @param\tprogress\t加载进度回调（可选）\n     */\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\n        return ILaya.loader.load(url, null, value => {\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\n            progress && progress.runWith(value);\n        }).then((content: Prefab) => {\n            if (!content) throw \"Can not find scene:\" + url;\n\n            let scene: Scene;\n            let errors: Array<any> = [];\n            let ret = content.create(null, errors);\n            if (errors.length > 0)\n                console.warn(`Error loading ${url}: \\n${errors}`);\n\n            if (ret instanceof Scene)\n                scene = ret;\n            else if (ret._is3D) {\n                scene = new Scene();\n                scene.left = scene.right = scene.top = scene.bottom = 0;\n                scene._scene3D = ret;\n            }\n            else\n                throw \"Not a scene:\" + url;\n\n            scene._viewCreated = true;\n            Scene.hideLoadingPage();\n            complete && complete.runWith(scene);\n\n            return scene;\n        });\n    }\n\n    /**\n     * 加载并打开场景\n     * @param\turl\t\t\t场景地址\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选），【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\n     * @param\tcomplete\t打开完成回调，返回场景实例（可选）\n     * @param\tprogress\t加载进度回调（可选）\n     */\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\n        //兼容处理\n        if (param instanceof Handler) {\n            var temp: any = complete;\n            complete = param;\n            param = temp;\n        }\n        Scene.showLoadingPage();\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\n    }\n\n    /**@private */\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\n        scene.open(closeOther, param);\n        if (complete) complete.runWith(scene);\n    }\n\n    /**\n     * 根据地址，关闭场景（包括对话框）\n     * @param\turl\t\t场景地址\n     * @param\tname\t如果name不为空，name必须相同才能关闭\n     * @return\t返回是否关闭成功，如果url找不到，则不成功\n     */\n    static close(url: string, name?: string): boolean {\n        let flag: boolean = false;\n        for (let scene of Scene.unDestroyedScenes) {\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\n                scene.close();\n                flag = true;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    /**\n     * 关闭所有场景，不包括对话框，如果关闭对话框，请使用Dialog.closeAll()\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     */\n    static closeAll(): void {\n        let root: Sprite = Scene.root;\n        for (let i = 0, n = root.numChildren; i < n; i++) {\n            var scene = root.getChildAt(0);\n            if (scene instanceof Scene)\n                scene.close();\n            else\n                scene.removeSelf();\n        }\n    }\n\n    /**\n     * 根据地址，销毁场景（包括对话框）\n     * @param\turl\t\t场景地址\n     * @param\tname\t如果name不为空，name必须相同才能关闭\n     * @return\t返回是否销毁成功，如果url找不到，则不成功\n     */\n    static destroy(url: string, name?: string): boolean {\n        let flag: boolean = false;\n        for (let scene of Scene.unDestroyedScenes) {\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\n                scene.destroy();\n                flag = true;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    /**\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\n     */\n    static gc(): void {\n        Resource.destroyUnusedResources();\n    }\n\n    /**\n     * 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面\n     * @param\tloadPage \tload界面实例\n     */\n    static setLoadingPage(loadPage: Sprite): void {\n        Scene._loadPage = loadPage;\n    }\n\n    /**\n     * 显示loading界面\n     * @param\tparam 打开参数，如果是scene，则会传递给onOpened方法\n     * @param\tdelay 延迟打开时间，默认500毫秒\n     */\n    static showLoadingPage(param: any = null, delay: number = 500): void {\n        if (Scene._loadPage) {\n            ILaya.systemTimer.clear(null, Scene._showLoading);\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\n        }\n    }\n\n    private static _showLoading(param: any): void {\n        ILaya.stage.addChild(Scene._loadPage);\n        if (Scene._loadPage instanceof Scene)\n            Scene._loadPage.onOpened(param);\n    }\n\n    private static _hideLoading(): void {\n        if (Scene._loadPage instanceof Scene)\n            Scene._loadPage.close();\n        else\n            Scene._loadPage.removeSelf();\n    }\n\n    /**\n     * 隐藏loading界面\n     * @param\tdelay 延迟关闭时间，默认500毫秒\n     */\n    static hideLoadingPage(delay: number = 500): void {\n        if (Scene._loadPage) {\n            ILaya.systemTimer.clear(null, Scene._showLoading);\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\n        }\n    }\n}","import { CallLater } from \"./CallLater\";\nimport { Utils } from \"./Utils\";\n\n/**\n * <code>Timer</code> 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\n */\nexport class Timer {\n    /**@private */\n    static gSysTimer: Timer = null;\n\n    /**@private */\n    private static _pool: any[] = [];\n    /**@private */\n    static _mid: number = 1;\n\n\n    /** 时针缩放。*/\n    scale: number = 1;\n    /** 当前帧开始的时间。*/\n    currTimer: number;\n    /** 当前的帧数。*/\n    currFrame: number = 0;\n    /**@internal 两帧之间的时间间隔,单位毫秒。*/\n    _delta: number = 0;\n    /**@internal */\n    _lastTimer: number;\n    /**@private */\n    private _map: { [key: string]: TimerHandler } = {};\n    /**@private */\n    private _handlers: any[] = [];\n    /**@private */\n    private _temp: any[] = [];\n    /**@private */\n    private _count: number = 0;\n\n    /**\n     * 创建 <code>Timer</code> 类的一个实例。\n     */\n    constructor(autoActive: boolean = true) {\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\n        this.currTimer = this._getNowData();\n        this._lastTimer = this._getNowData();\n    }\n\n    /**两帧之间的时间间隔,单位毫秒。*/\n    get delta(): number {\n        return this._delta;\n    }\n\n\n    /**\n     * @internal\n     * 帧循环处理函数。\n     */\n    _update(): void {\n        if (this.scale <= 0) {\n            this._lastTimer = this._getNowData();\n            this._delta = 0;\n            return;\n        }\n        var frame: number = this.currFrame = this.currFrame + this.scale;\n        var now: number = this._getNowData();\n        var awake: boolean = (now - this._lastTimer) > 30000;\n        this._delta = (now - this._lastTimer) * this.scale;\n        var timer: number = this.currTimer = this.currTimer + this._delta;\n        this._lastTimer = now;\n\n        //处理handler\n        var handlers: any[] = this._handlers;\n        this._count = 0;\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\n            var handler: TimerHandler = handlers[i];\n            if (handler.method !== null) {\n                var t: number = handler.userFrame ? frame : timer;\n                if (t >= handler.exeTime) {\n                    if (handler.repeat) {\n                        if (!handler.jumpFrame || awake) {\n                            handler.exeTime += handler.delay;\n                            handler.run(false);\n                            if (t > handler.exeTime) {\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\n                            }\n                        } else {\n                            while (t >= handler.exeTime) {\n                                handler.exeTime += handler.delay;\n                                handler.run(false);\n                            }\n                        }\n                    } else {\n                        handler.run(true);\n                    }\n                }\n            } else {\n                this._count++;\n            }\n        }\n\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\n    }\n\n    /** @private */\n    private _clearHandlers(): void {\n        var handlers: any[] = this._handlers;\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\n            var handler: TimerHandler = handlers[i];\n            if (handler.method !== null) this._temp.push(handler);\n            else this._recoverHandler(handler);\n        }\n        this._handlers = this._temp;\n        handlers.length = 0;\n        this._temp = handlers;\n    }\n\n    /** @private */\n    private _recoverHandler(handler: TimerHandler): void {\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\n        handler.clear();\n        Timer._pool.push(handler);\n    }\n\n    /**\n     * @private\n     * get now time data\n     * @returns \n     */\n    public _getNowData(): number {\n        return Date.now();\n    }\n\n    /** @internal */\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\n        //如果延迟为0，则立即执行\n        if (!delay) {\n            method.apply(caller, args);\n            return null;\n        }\n\n        //先覆盖相同函数的计时\n        if (coverBefore) {\n            var handler: TimerHandler = this._getHandler(caller, method);\n            if (handler) {\n                handler.repeat = repeat;\n                handler.userFrame = useFrame;\n                handler.delay = delay;\n                handler.caller = caller;\n                handler.method = method;\n                handler.args = args;\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\n                return handler;\n            }\n        }\n\n        //找到一个空闲的timerHandler\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\n        handler.repeat = repeat;\n        handler.userFrame = useFrame;\n        handler.delay = delay;\n        handler.caller = caller;\n        handler.method = method;\n        handler.args = args;\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\n\n        //索引handler\n        this._indexHandler(handler);\n\n        //插入数组\n        this._handlers.push(handler);\n\n        return handler;\n    }\n\n    /** @private */\n    private _indexHandler(handler: TimerHandler): void {\n        var caller: any = handler.caller;\n        var method: any = handler.method;\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\n        handler.key = cid + \"_\" + mid;\n        this._map[handler.key] = handler;\n    }\n\n    /**\n     * 定时执行一次。\n     * @param\tdelay\t延迟时间(单位为毫秒)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     */\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this._create(false, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时重复执行。\n     * @param\tdelay\t间隔时间(单位毫秒)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\n     */\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\n        if (handler) handler.jumpFrame = jumpFrame;\n    }\n\n    /**\n     * 定时执行一次(基于帧率)。\n     * @param\tdelay\t延迟几帧(单位为帧)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     */\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this._create(true, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时重复执行(基于帧率)。\n     * @param\tdelay\t间隔几帧(单位为帧)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     */\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this._create(true, true, delay, caller, method, args, coverBefore);\n    }\n\n    /** 返回统计信息。*/\n    toString(): string {\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\n    }\n\n    /**\n     * 清理定时器。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    clear(caller: any, method: Function): void {\n        var handler: TimerHandler = this._getHandler(caller, method);\n        if (handler) {\n            handler.clear();\n        }\n    }\n\n    /**\n     * 清理对象身上的所有定时器。\n     * @param\tcaller 执行域(this)。\n     */\n    clearAll(caller: any): void {\n        if (!caller) return;\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\n            var handler: TimerHandler = this._handlers[i];\n            if (handler.caller === caller) {\n                handler.clear();\n            }\n        }\n    }\n\n    /** @private */\n    private _getHandler(caller: any, method: any): TimerHandler {\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\n        var key: any = cid + \"_\" + mid;\n        return this._map[key];\n    }\n\n    /**\n     * 延迟执行。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     * @param\targs 回调参数。\n     */\n    callLater(caller: any, method: Function, args: any[] = null): void {\n        CallLater.I.callLater(caller, method, args);\n    }\n\n    /**\n     * 立即执行 callLater 。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    runCallLater(caller: any, method: Function): void {\n        CallLater.I.runCallLater(caller, method);\n    }\n\n    /**\n     * 立即提前执行定时器，执行之后从队列中删除\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    runTimer(caller: any, method: Function): void {\n        var handler: TimerHandler = this._getHandler(caller, method);\n        if (handler && handler.method != null) {\n            this._map[handler.key] = null;\n            handler.run(true);\n        }\n    }\n\n    /**\n     * 暂停时钟\n     */\n    pause(): void {\n        this.scale = 0;\n    }\n\n    /**\n     * 恢复时钟\n     */\n    resume(): void {\n        this.scale = 1;\n    }\n\n\n    destroy() {\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\n            var handler = this._handlers[i];\n            handler.clear();\n        }\n        this._handlers.length = 0;\n        this._map = {};\n        this._temp.length = 0;\n    }\n}\n\n\n\n/** @private */\nclass TimerHandler {\n    key: string;\n    repeat: boolean;\n    delay: number;\n    userFrame: boolean;\n    exeTime: number;\n    caller: any\n    method: Function;\n    args: any[];\n    jumpFrame: boolean;\n\n    clear(): void {\n        this.caller = null;\n        this.method = null;\n        this.args = null;\n    }\n\n    run(withClear: boolean): void {\n        var caller: any = this.caller;\n        if (caller && caller.destroyed) return this.clear();\n        var method: Function = this.method;\n        var args: any[] = this.args;\n        withClear && this.clear();\n        if (method == null) return;\n        args ? method.apply(caller, args) : method.call(caller);\n    }\n}\n","import { Timer } from \"./Timer\";\nimport { Utils } from \"./Utils\";\n\n/**\n * @private\n */\nexport class CallLater {\n    static I = new CallLater();\n    /**@private */\n    private _pool: LaterHandler[] = [];\n    /**@private */\n    private _map: { [key: string]: LaterHandler } = {};\n    /**@private */\n    private _laters: LaterHandler[] = [];\n\n    /**\n     * @internal\n     * 帧循环处理函数。\n     */\n    _update(): void {\n        let laters = this._laters;\n        let len = laters.length;\n        if (len > 0) {\n            for (let i = 0, n = len - 1; i <= n; i++) {\n                let handler = laters[i];\n                this._map[handler.key] = null;\n                if (handler.method !== null) {\n                    handler.run();\n                    handler.clear();\n                }\n                this._pool.push(handler);\n                i === n && (n = laters.length - 1);\n            }\n            laters.length = 0;\n        }\n    }\n\n    /** @private */\n    private _getHandler(caller: any, method: any): LaterHandler {\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\n        return this._map[cid + '.' + mid]\n    }\n\n    /**\n     * 延迟执行。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     * @param\targs 回调参数。\n     */\n    callLater(caller: any, method: Function, args: any[] = null): void {\n        if (this._getHandler(caller, method) == null) {\n            let handler: LaterHandler;\n            if (this._pool.length)\n                handler = this._pool.pop();\n            else\n                handler = new LaterHandler();\n            //设置属性\n            handler.caller = caller;\n            handler.method = method;\n            handler.args = args;\n            //索引handler\n            var cid: number = caller ? caller.$_GID : 0;\n            var mid: number = (method as any)[\"$_TID\"];\n            handler.key = cid + '.' + mid;\n            this._map[handler.key] = handler\n            //插入队列\n            this._laters.push(handler);\n        }\n    }\n\n    /**\n     * 立即执行 callLater 。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    runCallLater(caller: any, method: Function): void {\n        var handler = this._getHandler(caller, method);\n        if (handler && handler.method != null) {\n            this._map[handler.key] = null;\n            handler.run();\n            handler.clear();\n        }\n    }\n\n    clear(caller: any, method: Function) {\n        var handler = this._getHandler(caller, method);\n        if (handler) {\n            this._map[handler.key] = null;\n            handler.key = \"\";\n            handler.clear();\n            return true;\n        }\n        return false;\n    }\n\n    clearAll(caller: any) {\n        if (!caller) return;\n        for (var i = 0, n = this._laters.length; i < n; i++) {\n            var handler = this._laters[i];\n            if (handler.caller === caller) {\n                this._map[handler.key] = null;\n                handler.key = \"\";\n                handler.clear();\n            }\n        }\n    }\n}\n\n\n\n/** @private */\nclass LaterHandler {\n    key: string;\n    caller: any\n    method: Function;\n    args: any[];\n\n    clear(): void {\n        this.caller = null;\n        this.method = null;\n        this.args = null;\n    }\n\n    run(): void {\n        var caller = this.caller;\n        if (caller && caller.destroyed) return this.clear();\n        var method = this.method;\n        var args = this.args;\n        if (method == null) return;\n        args ? method.apply(caller, args) : method.call(caller);\n    }\n}\n","import { WebGL } from \"../webgl/WebGL\"\n\n\n/**\n * @private\n */\nexport class RunDriver {\n    //TODO:coverage\n    static createShaderCondition: Function = function (conditionScript: string): Function {\n        var fn: string = \"(function() {return \" + conditionScript + \";})\";\n        return (window as any).Laya._runScript(fn);//生成条件判断函数\n    }\n\n\n    /**\n     * 用于改变 WebGL宽高信息。\n     */\n    static changeWebGLSize: Function = function (w: number, h: number): void {\n        WebGL.onStageResize(w, h);\n    }\n}\n\n\n","import { Component } from \"./Component\";\n\nexport class ComponentDriver {\n    private _onUpdates: Set<Component> = new Set();\n    private _onLateUpdates: Set<Component> = new Set();\n    private _onPreRenders: Set<Component> = new Set();\n    private _onPostRenders: Set<Component> = new Set();\n\n    private _toStarts: Set<Component> = new Set();\n    readonly _toDestroys: Set<Component> = new Set();\n    /**\n     * @internal\n     * 调用组件Onstart\n     */\n    callStart() {\n        for (let ele of this._toStarts) {\n            if (ele._status == 2) {\n                ele._status = 3;\n\n                try {\n                    ele.onStart();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n        this._toStarts.clear();\n    }\n    /**\n     * @internal\n     * 调用组件OnUpdate\n     */\n    callUpdate() {\n        for (let ele of this._onUpdates) {\n            if (ele._status == 3) {\n                try {\n                    ele.onUpdate();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用组件LayeUpdate\n     */\n    callLateUpdate() {\n        for (let ele of this._onLateUpdates) {\n            if (ele._status == 3) {\n                try {\n                    ele.onLateUpdate();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用组件onPreRender\n     */\n    callPreRender() {\n        for (let ele of this._onPreRenders) {\n            if (ele._status == 3) {\n                try {\n                    ele.onPreRender();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用组件onPostRender\n     */\n    callPostRender() {\n        for (let ele of this._onPostRenders) {\n            if (ele._status == 3) {\n                try {\n                    ele.onPostRender();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用销毁\n     */\n    callDestroy(): void {\n        for (let ele of this._toDestroys) {\n            try {\n                ele._destroy(true);\n            }\n            catch (err: any) {\n                console.log(err);\n            }\n        }\n        this._toDestroys.clear();\n    }\n\n    /**\n     * @internal\n     * 添加一个组件\n     * @param comp 组件\n     */\n    add(comp: Component) {\n        if (comp._status == 1) {\n            if (comp.onStart) {\n                comp._status = 2;\n                this._toStarts.add(comp);\n            }\n            else\n                comp._status = 3;\n        }\n\n        if (comp.onUpdate)\n            this._onUpdates.add(comp);\n        if (comp.onLateUpdate)\n            this._onLateUpdates.add(comp);\n\n        if (comp.onPreRender)\n            this._onPreRenders.add(comp);\n        if (comp.onPostRender)\n            this._onPostRenders.add(comp);\n    }\n\n    /**\n     * @internal\n     * 移除一个组件\n     * @param comp 组件\n     */\n    remove(comp: Component) {\n        if (comp._status == 2) //starting\n            comp._status = 1; //cancel start\n\n        if (comp.onUpdate)\n            this._onUpdates.delete(comp);\n        if (comp.onLateUpdate)\n            this._onLateUpdates.delete(comp);\n\n        if (comp.onPreRender)\n            this._onPreRenders.delete(comp);\n        if (comp.onPostRender)\n            this._onPostRenders.delete(comp);\n    }\n\n    /**\n     * @internal\n     * 删除组件Driver\n     */\n    destroy() {\n        //TODO:\n    }\n}","import { Sprite } from \"./Sprite\";\nimport { Node } from \"./Node\";\nimport { Config } from \"./../../Config\";\nimport { Input } from \"./Input\";\nimport { SpriteConst } from \"./SpriteConst\";\nimport { NodeFlags } from \"../Const\"\nimport { Event } from \"../events/Event\"\nimport { InputManager } from \"../events/InputManager\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Render } from \"../renders/Render\"\nimport { RenderInfo } from \"../renders/RenderInfo\"\nimport { Context } from \"../resource/Context\"\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\nimport { Browser } from \"../utils/Browser\"\nimport { CallLater } from \"../utils/CallLater\"\nimport { ColorUtils } from \"../utils/ColorUtils\"\nimport { RunDriver } from \"../utils/RunDriver\"\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\nimport { Stat } from \"../utils/Stat\";\nimport { ILaya } from \"../../ILaya\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { ComponentDriver } from \"../components/ComponentDriver\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * stage大小经过重新调整时进行调度。\n * @eventType Event.RESIZE\n */\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\n/**\n * 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\n * @eventType Event.FOCUS\n */\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\n/**\n * 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\n * @eventType Event.BLUR\n */\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\n/**\n * 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\n * @eventType Event.FOCUS_CHANGE\n */\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\n/**\n * 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\n * @eventType Event.VISIBILITY_CHANGE\n */\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\n/**\n * 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\n * @eventType Event.FULL_SCREEN_CHANGE\n */\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Stage</code> 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。</p>\n * <p>Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。</p>\n * <p>Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。</p>\n */\nexport class Stage extends Sprite {\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于设计宽高。*/\n    static SCALE_NOSCALE: string = \"noscale\";\n    /**应用根据屏幕大小铺满全屏，非等比缩放会变形，stage的宽高等于设计宽高。*/\n    static SCALE_EXACTFIT: string = \"exactfit\";\n    /**应用显示全部内容，按照最小比率缩放，等比缩放不变形，一边可能会留空白，stage的宽高等于设计宽高。*/\n    static SCALE_SHOWALL: string = \"showall\";\n    /**应用按照最大比率缩放显示，宽或高方向会显示一部分，等比缩放不变形，stage的宽高等于设计宽高。*/\n    static SCALE_NOBORDER: string = \"noborder\";\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于屏幕宽高。*/\n    static SCALE_FULL: string = \"full\";\n    /**应用保持设计宽度不变，高度根据屏幕比缩放，stage的宽度等于设计高度，高度根据屏幕比率大小而变化*/\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\n    /**应用保持设计高度不变，宽度根据屏幕比缩放，stage的高度等于设计宽度，宽度根据屏幕比率大小而变化*/\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\n    /**应用保持设计比例不变，全屏显示全部内容(类似showall，但showall非全屏，会有黑边)，根据屏幕长宽比，自动选择使用SCALE_FIXED_WIDTH或SCALE_FIXED_HEIGHT*/\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\n\n    static SCALE_FIXED_AUTO_LAYAME: string = \"fixedauto_layame\";\n    static SCALE_FIXED_AUTO_LAYAVERSE: string = \"fixedauto_layaverse\";\n\n    /**画布水平居左对齐。*/\n    static ALIGN_LEFT: string = \"left\";\n    /**画布水平居右对齐。*/\n    static ALIGN_RIGHT: string = \"right\";\n    /**画布水平居中对齐。*/\n    static ALIGN_CENTER: string = \"center\";\n    /**画布垂直居上对齐。*/\n    static ALIGN_TOP: string = \"top\";\n    /**画布垂直居中对齐。*/\n    static ALIGN_MIDDLE: string = \"middle\";\n    /**画布垂直居下对齐。*/\n    static ALIGN_BOTTOM: string = \"bottom\";\n\n    /**不更改屏幕。*/\n    static SCREEN_NONE: string = \"none\";\n    /**自动横屏。*/\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\n    /**自动竖屏。*/\n    static SCREEN_VERTICAL: string = \"vertical\";\n\n    /**全速模式，以60的帧率运行。*/\n    static FRAME_FAST: string = \"fast\";\n    /**慢速模式，以30的帧率运行。*/\n    static FRAME_SLOW: string = \"slow\";\n    /**自动模式，以30的帧率运行，但鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗。*/\n    static FRAME_MOUSE: string = \"mouse\";\n    /**休眠模式，以1的帧率运行*/\n    static FRAME_SLEEP: string = \"sleep\";\n\n    /**当前焦点对象，此对象会影响当前键盘事件的派发主体。*/\n    focus: Node;\n    /**@private 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。*/\n    offset: Point = new Point();\n    /**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/\n    private _frameRate: string = \"fast\";\n    /**设计宽度（初始化时设置的宽度Laya.init(width,height)）*/\n    designWidth: number = 0;\n    /**设计高度（初始化时设置的高度Laya.init(width,height)）*/\n    designHeight: number = 0;\n    /**画布是否发生翻转。*/\n    canvasRotation: boolean = false;\n    /**画布的旋转角度。*/\n    canvasDegree: number = 0;\n    /**\n     * <p>设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。</p>\n     * <p>比如非激活状态，可以设置renderingEnabled=false以节省消耗。</p>\n     * */\n    renderingEnabled: boolean = true;\n    /**是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变*/\n    screenAdaptationEnabled: boolean = true;\n    /**@internal */\n    _canvasTransform: Matrix = new Matrix();\n    /**@private */\n    private _screenMode: string = \"none\";\n    /**@private */\n    private _scaleMode: string = \"noscale\";\n    /**@private */\n    private _alignV: string = \"top\";\n    /**@private */\n    private _alignH: string = \"left\";\n    /**@private */\n    private _bgColor: string = \"black\";\n    /**@internal */\n    _mouseMoveTime: number = 0;\n    /**@private */\n    private _renderCount: number = 0;\n    /**@private */\n    private _safariOffsetY: number = 0;\n    /**@private */\n    private _frameStartTime: number = 0;\n    /**@private */\n    private _previousOrientation: number = Browser.window.orientation;\n    /**@private */\n    private _isFocused: boolean;\n    /**@private */\n    private _isVisibility: boolean;\n    /**@internal webgl Color*/\n    _wgColor: number[] | null = [0, 0, 0, 1];\n    /**@internal */\n    _scene3Ds: Node[] = [];\n\n    /**@private */\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\n    /**@private */\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\n\n    /**使用物理分辨率作为canvas大小，会改进渲染效果，但是会降低性能*/\n    useRetinalCanvas: boolean = false;\n\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\n    constructor() {\n        super();\n        super.set_transform(this._createTransform());\n        //重置默认值，请不要修改\n        this.mouseEnabled = true;\n        this.hitTestPrior = true;\n        this.autoSize = false;\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\n        this._isFocused = true;\n        this._isVisibility = true;\n\n        //this.drawCallOptimize=true;\n        this.useRetinalCanvas = Config.useRetinalCanvas;\n\n        var window: any = Browser.window;\n        //var _me = this;\t\n\n        window.addEventListener(\"focus\", () => {\n            this._isFocused = true;\n            this.event(Event.FOCUS);\n            this.event(Event.FOCUS_CHANGE);\n        });\n        window.addEventListener(\"blur\", () => {\n            this._isFocused = false;\n            this.event(Event.BLUR);\n            this.event(Event.FOCUS_CHANGE);\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\n        });\n\n        // 各种浏览器兼容\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\n        var document: any = window.document;\n        if (typeof document.hidden !== \"undefined\") {\n            visibilityChange = \"visibilitychange\";\n            state = \"visibilityState\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            visibilityChange = \"mozvisibilitychange\";\n            state = \"mozVisibilityState\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            visibilityChange = \"msvisibilitychange\";\n            state = \"msVisibilityState\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            visibilityChange = \"webkitvisibilitychange\";\n            state = \"webkitVisibilityState\";\n        }\n\n        window.document.addEventListener(visibilityChange, () => {\n            if (Browser.document[state] == \"hidden\") {\n                this._isVisibility = false;\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\n            } else {\n                this._isVisibility = true;\n            }\n            this.renderingEnabled = this._isVisibility;\n            this.event(Event.VISIBILITY_CHANGE);\n        });\n        window.addEventListener(\"resize\", () => {\n            // 处理屏幕旋转。旋转后收起输入法。\n            var orientation: any = Browser.window.orientation;\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\n                (Input[\"inputElement\"] as any).target.focus = false;\n            }\n            this._previousOrientation = orientation;\n\n            // 弹出输入法不应对画布进行resize。\n            if (this._isInputting()) return;\n\n            // Safari横屏工具栏偏移\n            if (Browser.onSafari)\n                this._safariOffsetY = (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\n\n            if (this.screenAdaptationEnabled) {\n                this.event(Event.WILL_RESIZE);\n                this.updateCanvasSize();\n            }\n        });\n\n        // 微信的iframe不触发orientationchange。\n        window.addEventListener(\"orientationchange\", (e: any) => {\n            if (this.screenAdaptationEnabled) {\n                this.event(Event.WILL_RESIZE);\n                this.updateCanvasSize();\n            }\n        });\n\n        this._componentDriver = new ComponentDriver();\n    }\n\n    /**\n     * @private\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\n     */\n    private _isInputting(): boolean {\n        return (Browser.onMobile && InputManager.isTextInputting);\n    }\n\n    /**@inheritDoc @override*/\n    set width(value: number) {\n        this.designWidth = value;\n        super.set_width(value);\n        this.updateCanvasSize(true);\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get width(): number {\n        this.needUpdateCanvasSize();\n        return super.get_width();\n    }\n\n    /**@inheritDoc @override */\n    set height(value: number) {\n        this.designHeight = value;\n        super.set_height(value);\n        this.updateCanvasSize(true);\n    }\n\n    /** @override*/\n    get height(): number {\n        this.needUpdateCanvasSize();\n        return super.get_height();\n    }\n\n    /**@override*/\n    set transform(value: Matrix) {\n        super.set_transform(value);\n    }\n    /**@inheritDoc @override*/\n    get transform(): Matrix {\n        if (this._tfChanged) this._adjustTransform();\n        return (this._transform = this._transform || this._createTransform());\n    }\n\n    /**\n     * 舞台是否获得焦点。\n     */\n    get isFocused(): boolean {\n        return this._isFocused;\n    }\n\n    /**\n     * 舞台是否处于可见状态(是否进入后台)。\n     */\n    get isVisibility(): boolean {\n        return this._isVisibility;\n    }\n\n    private _needUpdateCanvasSize: boolean = false;\n    updateCanvasSize(delay?: boolean): void {\n        if (delay) {\n            if (!this._needUpdateCanvasSize) {\n                this._needUpdateCanvasSize = true;\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\n            }\n        }\n        else {\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\n        }\n    }\n\n    needUpdateCanvasSize() {\n        if (this._needUpdateCanvasSize)\n            this.updateCanvasSize();\n    }\n\n    /**\n     * 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\n     * @param\tscreenWidth\t\t屏幕宽度。\n     * @param\tscreenHeight\t屏幕高度。\n     */\n    setScreenSize(screenWidth: number, screenHeight: number): void {\n        this._needUpdateCanvasSize = false;\n\n        //计算是否旋转\n        var rotation: boolean = false;\n        if (this._screenMode !== Stage.SCREEN_NONE) {\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\n            rotation = screenType !== this._screenMode;\n            if (rotation) {\n                //宽高互换\n                var temp: number = screenHeight;\n                screenHeight = screenWidth;\n                screenWidth = temp;\n            }\n        }\n        this.canvasRotation = rotation;\n\n        var canvas: HTMLCanvas = Render._mainCanvas;\n        var canvasStyle: any = canvas.source.style;\n        var mat: Matrix = this._canvasTransform.identity();\n        var scaleMode: string = this._scaleMode;\n        var scaleX: number = screenWidth / this.designWidth;\n        var scaleY: number = screenHeight / this.designHeight;\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\n        var realWidth: number = screenWidth;\n        var realHeight: number = screenHeight;\n        var pixelRatio: number = Browser.pixelRatio;\n        this._width = this.designWidth;\n        this._height = this.designHeight;\n\n        //处理缩放模式\n        switch (scaleMode) {\n            case Stage.SCALE_NOSCALE:\n                scaleX = scaleY = 1;\n                realWidth = this.designWidth;\n                realHeight = this.designHeight;\n                break;\n            case Stage.SCALE_SHOWALL:\n                scaleX = scaleY = Math.min(scaleX, scaleY);\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\n                break;\n            case Stage.SCALE_NOBORDER:\n                scaleX = scaleY = Math.max(scaleX, scaleY);\n                realWidth = Math.round(this.designWidth * scaleX);\n                realHeight = Math.round(this.designHeight * scaleY);\n                break;\n            // case Stage.SCALE_FULL:\n            //     scaleX = scaleY = 1;\n            //     this._width = canvasWidth = screenWidth;\n            //     this._height = canvasHeight = screenHeight;\n            //     break;\n            case Stage.SCALE_FULL:\n                scaleX = scaleY = pixelRatio;\n                canvasWidth = screenWidth;\n                canvasHeight = screenHeight;\n                this._width = screenWidth / pixelRatio;\n                this._height = screenHeight / pixelRatio;\n                break;\n            case Stage.SCALE_FIXED_WIDTH:\n                scaleY = scaleX;\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\n                break;\n            case Stage.SCALE_FIXED_HEIGHT:\n                scaleX = scaleY;\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\n                break;\n            case Stage.SCALE_FIXED_AUTO:\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\n                    scaleY = scaleX;\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\n                } else {\n                    scaleX = scaleY;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\n                }\n                break;\n            case Stage.SCALE_FIXED_AUTO_LAYAME:\n                if (screenWidth < screenHeight) {\n                    scaleY = scaleX;\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\n                } else {\n                    scaleX = screenHeight / this.designWidth;\n                    scaleY = scaleX;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\n                }\n                break;\n            case Stage.SCALE_FIXED_AUTO_LAYAVERSE:\n                if (screenWidth > screenHeight) {\n                    scaleX = scaleY;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\n                }\n                else {\n                    scaleX = screenWidth / this.designHeight;\n                    scaleY = scaleX;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\n                }\n                break;\n        }\n\n        if (this.useRetinalCanvas) {\n            realWidth = canvasWidth = screenWidth;\n            realHeight = canvasHeight = screenHeight;\n        }\n\n        //根据不同尺寸缩放stage画面\n        scaleX *= this.scaleX;\n        scaleY *= this.scaleY;\n        if (scaleX === 1 && scaleY === 1) {\n            this.transform.identity();\n        } else {\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\n        }\n\n        //处理canvas大小\n        canvas.size(canvasWidth, canvasHeight);\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\n\n        //处理水平对齐\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\n\n        //处理垂直对齐\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\n\n        //处理用户自行设置的画布偏移\n        this.offset.x = Math.round(this.offset.x);\n        this.offset.y = Math.round(this.offset.y);\n        mat.translate(this.offset.x, this.offset.y);\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\n\n        //处理横竖屏\n        this.canvasDegree = 0;\n        if (rotation) {\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\n                mat.rotate(Math.PI / 2);\n                mat.translate(screenHeight / pixelRatio, 0);\n                this.canvasDegree = 90;\n            } else {\n                mat.rotate(-Math.PI / 2);\n                mat.translate(0, screenWidth / pixelRatio);\n                this.canvasDegree = -90;\n            }\n        }\n\n        mat.a = this._formatData(mat.a);\n        mat.d = this._formatData(mat.d);\n        mat.tx = this._formatData(mat.tx);\n        mat.ty = this._formatData(mat.ty);\n\n        super.set_transform(this.transform);\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\n        canvasStyle.width = canvasWidth;\n        canvasStyle.height = canvasHeight;\n        //修正用户自行设置的偏移\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\n        this.visible = true;\n        this._repaint |= SpriteConst.REPAINT_CACHE;\n\n        this.event(Event.RESIZE);\n    }\n\n    /**\n     * 屏幕旋转用layaverse 需要\n     * @param screenWidth \n     * @param screenHeight \n     * @param _screenMode \n     * @returns \n     */\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, _screenMode: string) {\n\t\t//计算是否旋转\n\t\tvar rotation: boolean = false;\n\t\tif (/**this.*/_screenMode !== Stage.SCREEN_NONE) {\n\t\t\tvar screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\n\t\t\trotation = screenType !== /**this.*/_screenMode;\n\t\t\tif (rotation) {\n\t\t\t\t//宽高互换\n\t\t\t\tvar temp: number = screenHeight;\n\t\t\t\tscreenHeight = screenWidth;\n\t\t\t\tscreenWidth = temp;\n\t\t\t}\n\t\t}\n\t\tthis.canvasRotation = rotation;\n\n\t\tvar canvas: HTMLCanvas = Render._mainCanvas;\n\t\tvar canvasStyle: any = canvas.source.style;\n\t\tvar mat: Matrix = this._canvasTransform/**add */.clone().identity();\n\t\tvar scaleMode: string = this._scaleMode;\n\t\tvar scaleX: number = screenWidth / this.designWidth\n\t\tvar scaleY: number = screenHeight / this.designHeight;\n\t\tvar canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\n\t\tvar canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\n\t\tvar realWidth: number = screenWidth;\n\t\tvar realHeight: number = screenHeight;\n\t\tvar pixelRatio: number = Browser.pixelRatio;\n\t\tlet /**this.*/_width = this.designWidth;\n\t\tlet /**this.*/_height = this.designHeight;\n\n\t\t//处理缩放模式\n\t\tswitch (scaleMode) {\n\t\t\tcase Stage.SCALE_NOSCALE:\n\t\t\t\tscaleX = scaleY = 1;\n\t\t\t\trealWidth = this.designWidth;\n\t\t\t\trealHeight = this.designHeight;\n\t\t\t\tbreak;\n\t\t\tcase Stage.SCALE_SHOWALL:\n\t\t\t\tscaleX = scaleY = Math.min(scaleX, scaleY);\n\t\t\t\tcanvasWidth = realWidth = Math.round(this.designWidth * scaleX);\n\t\t\t\tcanvasHeight = realHeight = Math.round(this.designHeight * scaleY);\n\t\t\t\tbreak;\n\t\t\tcase Stage.SCALE_NOBORDER:\n\t\t\t\tscaleX = scaleY = Math.max(scaleX, scaleY);\n\t\t\t\trealWidth = Math.round(this.designWidth * scaleX);\n\t\t\t\trealHeight = Math.round(this.designHeight * scaleY);\n\t\t\t\tbreak;\n\t\t\tcase Stage.SCALE_FULL:\n\t\t\t\tscaleX = scaleY = 1;\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\n\t\t\t\tbreak;\n\t\t\tcase Stage.SCALE_FIXED_WIDTH:\n\t\t\t\tscaleY = scaleX;\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\n\t\t\t\tbreak;\n\t\t\tcase Stage.SCALE_FIXED_HEIGHT:\n\t\t\t\tscaleX = scaleY;\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\n\t\t\t\tbreak;\n\t\t\tcase Stage.SCALE_FIXED_AUTO:\n\t\t\t\tif ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\n\t\t\t\t\tscaleY = scaleX;\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\n\t\t\t\t} else {\n\t\t\t\t\tscaleX = scaleY;\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (this.useRetinalCanvas) {\n\t\t\trealWidth =  canvasWidth = screenWidth;\n\t\t\trealHeight = canvasHeight = screenHeight;\n\t\t}\n\n\t\treturn {\n\t\t\tstageWidth: _width,\n\t\t\tstageHeight: _height,\n\t\t\tcanvasWidth:canvasWidth,\n\t\t\tcanvasHeight:canvasHeight,\n\t\t\tscaleX: scaleX / (realWidth / canvasWidth),\n\t\t\tscaleY: scaleY / (realHeight / canvasHeight),\n\t\t}\n\t}\n\n    /**@private */\n    private _formatData(value: number): number {\n        if (Math.abs(value) < 0.000001) return 0;\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\n        return value;\n    }\n\n    /**\n     * <p>缩放模式。默认值为 \"noscale\"。</p>\n     * <p><ul>取值范围：\n     * <li>\"noscale\" ：不缩放；</li>\n     * <li>\"exactfit\" ：全屏不等比缩放；</li>\n     * <li>\"showall\" ：最小比例缩放；</li>\n     * <li>\"noborder\" ：最大比例缩放；</li>\n     * <li>\"full\" ：不缩放，stage的宽高等于屏幕宽高；</li>\n     * <li>\"fixedwidth\" ：宽度不变，高度根据屏幕比缩放；</li>\n     * <li>\"fixedheight\" ：高度不变，宽度根据屏幕比缩放；</li>\n     * <li>\"fixedauto\" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>\n     * </ul></p>\n     */\n    get scaleMode(): string {\n        return this._scaleMode;\n    }\n\n    set scaleMode(value: string) {\n        this._scaleMode = value;\n        this.updateCanvasSize(true);\n    }\n\n    /**\n     * <p>水平对齐方式。默认值为\"left\"。</p>\n     * <p><ul>取值范围：\n     * <li>\"left\" ：居左对齐；</li>\n     * <li>\"center\" ：居中对齐；</li>\n     * <li>\"right\" ：居右对齐；</li>\n     * </ul></p>\n     */\n    get alignH(): string {\n        this.needUpdateCanvasSize();\n        return this._alignH;\n    }\n\n    set alignH(value: string) {\n        this._alignH = value;\n        this.updateCanvasSize(true);\n    }\n\n    /**\n     * <p>垂直对齐方式。默认值为\"top\"。</p>\n     * <p><ul>取值范围：\n     * <li>\"top\" ：居顶部对齐；</li>\n     * <li>\"middle\" ：居中对齐；</li>\n     * <li>\"bottom\" ：居底部对齐；</li>\n     * </ul></p>\n     */\n    get alignV(): string {\n        this.needUpdateCanvasSize();\n        return this._alignV;\n    }\n\n    set alignV(value: string) {\n        this._alignV = value;\n        this.updateCanvasSize(true);\n    }\n\n    /**舞台的背景颜色，默认为黑色，null为透明。*/\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        if (value)\n            this._wgColor = ColorUtils.create(value).arrColor;\n        else\n            this._wgColor = null;\n\n        if (value) {\n            Render.canvas.style.background = value;\n        } else {\n            Render.canvas.style.background = \"none\";\n        }\n    }\n\n    /**鼠标在 Stage 上的 X 轴坐标。@override*/\n    get mouseX(): number {\n        return Math.round(InputManager.mouseX / this.clientScaleX);\n    }\n\n    /**鼠标在 Stage 上的 Y 轴坐标。@override*/\n    get mouseY(): number {\n        return Math.round(InputManager.mouseY / this.clientScaleY);\n    }\n\n    /**@inheritDoc @override*/\n    getMousePoint(): Point {\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\n    }\n\n    /**当前视窗由缩放模式导致的 X 轴缩放系数。*/\n    get clientScaleX(): number {\n        this.needUpdateCanvasSize();\n        return this._transform ? this._transform.getScaleX() : 1;\n    }\n\n    /**当前视窗由缩放模式导致的 Y 轴缩放系数。*/\n    get clientScaleY(): number {\n        this.needUpdateCanvasSize();\n        return this._transform ? this._transform.getScaleY() : 1;\n    }\n\n    /**\n     * <p>场景布局类型。</p>\n     * <p><ul>取值范围：\n     * <li>\"none\" ：不更改屏幕</li>\n     * <li>\"horizontal\" ：自动横屏</li>\n     * <li>\"vertical\" ：自动竖屏</li>\n     * </ul></p>\n     */\n    get screenMode(): string {\n        return this._screenMode;\n    }\n\n    set screenMode(value: string) {\n        this._screenMode = value;\n    }\n\n    /**@inheritDoc @override*/\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\n        this._repaint |= type;\n    }\n\n    /**@inheritDoc @override*/\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\n    }\n\n    /**@internal */\n    _loop(): boolean {\n        this._globalRepaintGet = this._globalRepaintSet;\n        this._globalRepaintSet = false;\n        this.render(Render._context, 0, 0);\n        return true;\n    }\n\n    /**@private */\n    getFrameTm(): number {\n        return this._frameStartTime;\n    }\n\n    /**\n     * <p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>\n     * <p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>\n     */\n    getTimeFromFrameStart(): number {\n        return Browser.now() - this._frameStartTime;\n    }\n\n    /**@inheritDoc @override*/\n    set visible(value: boolean) {\n        if (this.visible !== value) {\n            super.set_visible(value);\n            var style: any = Render._mainCanvas.source.style;\n            style.visibility = value ? \"visible\" : \"hidden\";\n        }\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get visible() {\n        return super.visible;\n    }\n\n    /** @private */\n    static clear: Function = function (value: string): void {\n        //修改需要同步到上面的native实现中\n        Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\n        RenderState2D.worldScissorTest && LayaGL.renderEngine.scissorTest(false);\n        var ctx: Context = Render.context;\n        //兼容浏览器\n        var c: any[] = (ctx._submits._length == 0 || Config.preserveDrawingBuffer) ? ColorUtils.create(value).arrColor : ILaya.stage._wgColor;\n        if (c)\n            ctx.clearBG(c[0], c[1], c[2], c[3]);\n        else\n            ctx.clearBG(0, 0, 0, 0);\n        RenderState2D.clear();\n    };\n\n    /**@inheritDoc @override*/\n    render(context: Context, x: number, y: number): void {\n        if (LayaEnv.isConch) {\n            this.renderToNative(context, x, y);\n            return;\n        }\n\n        let delta: number = ILaya.timer._delta / 1000;\n        if (this._frameRate === Stage.FRAME_SLEEP) {\n            var now: number = Browser.now();\n            if (now - this._frameStartTime < 1000)\n                return;\n            this._frameStartTime = now;\n        } else {\n            if (!this._visible) {\n                this._renderCount++;\n                if (this._renderCount % 5 === 0) {\n                    CallLater.I._update();\n                    Stat.loopCount++;\n                    RenderInfo.loopCount = Stat.loopCount;\n                    this._runComponents();\n                    this._updateTimers();\n                }\n                return;\n            }\n            this._frameStartTime = Browser.now();\n            RenderInfo.loopStTm = this._frameStartTime;\n        }\n\n        this._renderCount++;\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\n\n        Stat.renderSlow = !isFastMode;\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\n            return;\n\n        CallLater.I._update();\n        Stat.loopCount++;\n        RenderInfo.loopCount = Stat.loopCount;\n\n        if (this.renderingEnabled) {\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\n                (<any>this._scene3Ds[i])._update(delta);\n            this._runComponents();\n\n            context.clear();\n\n            this._componentDriver.callPreRender();\n\n            super.render(context, x, y);\n\n            Stat._StatRender.renderNotCanvas(context, x, y);\n\n            Stage.clear(this._bgColor);\n\n            context.flush();\n\n            this._componentDriver.callPostRender();\n\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\n        }\n        else\n            this._runComponents();\n\n        this._updateTimers();\n    }\n\n    renderToNative(context: Context, x: number, y: number): void {\n        this._renderCount++;\n\n        if (!this._visible) {\n            if (this._renderCount % 5 === 0) {\n                CallLater.I._update();\n                Stat.loopCount++;\n                RenderInfo.loopCount = Stat.loopCount;\n                this._runComponents();\n                this._updateTimers();\n            }\n            return;\n        }\n        this._frameStartTime = Browser.now();\n        //update\n        CallLater.I._update();\n        Stat.loopCount++;\n        RenderInfo.loopCount = Stat.loopCount;\n\n        //render\n        if (this.renderingEnabled) {\n            for (let i: number = 0, n: number = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\n                (<any>this._scene3Ds[i])._update();\n\n            this._runComponents();\n\n            this._componentDriver.callPreRender();\n\n            context.clear();\n            super.render(context, x, y);\n            Stat._StatRender.renderNotCanvas(context, x, y);\n\n            this._componentDriver.callPostRender();\n        }\n        else\n            this._runComponents();\n\n        //commit submit\n        if (this.renderingEnabled) {\n            Stage.clear(this._bgColor);\n            context.flush();\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\n        }\n        this._updateTimers();\n    }\n\n    private _runComponents() {\n        this._componentDriver.callStart();\n        this._componentDriver.callUpdate();\n        this._componentDriver.callLateUpdate();\n        this._componentDriver.callDestroy();\n    }\n\n    private _updateTimers(): void {\n        ILaya.systemTimer._update();\n        ILaya.physicsTimer._update();\n        ILaya.timer._update();\n    }\n\n    /**\n     * <p>是否开启全屏，用户点击后进入全屏。</p>\n     * <p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>\n     */\n    set fullScreenEnabled(value: boolean) {\n        var document: any = Browser.document;\n        var canvas: any = Render.canvas;\n        if (value) {\n            canvas.addEventListener('mousedown', this._requestFullscreen);\n            canvas.addEventListener('touchstart', this._requestFullscreen);\n            document.addEventListener(\"fullscreenchange\", this._fullScreenChanged);\n            document.addEventListener(\"mozfullscreenchange\", this._fullScreenChanged);\n            document.addEventListener(\"webkitfullscreenchange\", this._fullScreenChanged);\n            document.addEventListener(\"msfullscreenchange\", this._fullScreenChanged);\n        } else {\n            canvas.removeEventListener('mousedown', this._requestFullscreen);\n            canvas.removeEventListener('touchstart', this._requestFullscreen);\n            document.removeEventListener(\"fullscreenchange\", this._fullScreenChanged);\n            document.removeEventListener(\"mozfullscreenchange\", this._fullScreenChanged);\n            document.removeEventListener(\"webkitfullscreenchange\", this._fullScreenChanged);\n            document.removeEventListener(\"msfullscreenchange\", this._fullScreenChanged);\n        }\n    }\n\n    get frameRate(): string {\n        if (!LayaEnv.isConch) {\n            return this._frameRate;\n        } else {\n            return ((<any>this))._frameRateNative;\n        }\n    }\n\n    set frameRate(value: string) {\n        if (!LayaEnv.isConch) {\n            this._frameRate = value;\n        } else {\n            var c: any = ((<any>window)).conch;\n            switch (value) {\n                case Stage.FRAME_FAST:\n                    c.config.setLimitFPS(60);\n                    break;\n                case Stage.FRAME_MOUSE:\n                    c.config.setMouseFrame(2000);\n                    break;\n                case Stage.FRAME_SLOW:\n                    c.config.setSlowFrame(true);\n                    break;\n                case Stage.FRAME_SLEEP:\n                    c.config.setLimitFPS(1);\n                    break;\n            }\n            ((<any>this))._frameRateNative = value;\n        }\n    }\n\n    /**@private */\n    private _requestFullscreen(): void {\n        var element: any = Browser.document.documentElement;\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        }\n    }\n\n    /**@private */\n    private _fullScreenChanged(): void {\n        this.event(Event.FULL_SCREEN_CHANGE);\n    }\n\n    /**退出全屏模式*/\n    exitFullscreen(): void {\n        var document: any = Browser.document;\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    /**@private */\n    isGlobalRepaint(): boolean {\n        return this._globalRepaintGet;\n    }\n\n    /**@private */\n    setGlobalRepaint(): void {\n        this._globalRepaintSet = true;\n    }\n}\n","import { Filter } from \"./Filter\";\nimport { Matrix } from \"../maths/Matrix\"\nimport { Context } from \"../resource/Context\"\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { BlurFilter } from \"./BlurFilter\";\n/**\n * @private\n */\nexport class BlurFilterGLRender {\n    private static blurinfo: any[] = new Array(2);\n    render(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: BlurFilter): void {\n        var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n        this.setShaderInfo(shaderValue, filter, rt.width, rt.height);\n        ctx.drawTarget(rt, 0, 0, width, height, Matrix.EMPTY.identity(), shaderValue);\n    }\n\n    setShaderInfo(shader: Value2D, filter: BlurFilter, w: number, h: number): void {\n        shader.defines.add(Filter.BLUR);\n        var sv: any = (<any>shader);\n        BlurFilterGLRender.blurinfo[0] = w; BlurFilterGLRender.blurinfo[1] = h;\n        sv.blurInfo = BlurFilterGLRender.blurinfo;\n        var sigma: number = filter.strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\n        var sigma2: number = sigma * sigma;\n        filter.strength_sig2_2sig2_gauss1[0] = filter.strength;\n        filter.strength_sig2_2sig2_gauss1[1] = sigma2;\t\t\t//做一些预计算传给shader，提高效率\n        filter.strength_sig2_2sig2_gauss1[2] = 2.0 * sigma2;\n        filter.strength_sig2_2sig2_gauss1[3] = 1.0 / (2.0 * Math.PI * sigma2);\n        sv.strength_sig2_2sig2_gauss1 = filter.strength_sig2_2sig2_gauss1;\n    }\n}\n\n","import { Filter } from \"./Filter\";\nimport { BlurFilterGLRender } from \"./BlurFilterGLRender\";\n\n/**\n * 模糊滤镜\n */\nexport class BlurFilter extends Filter {\n\n    /**模糊滤镜的强度(值越大，越不清晰 */\n    strength: number;\n    strength_sig2_2sig2_gauss1: any[] = [];//给shader用的。避免创建对象\n    strength_sig2_native: Float32Array;//给native用的\n    renderFunc: any;//\n\n    /**\n     * 模糊滤镜\n     * @param\tstrength\t模糊滤镜的强度值\n     */\n    constructor(strength: number = 4) {\n        super();\n        this.strength = strength;\n        this._glRender = new BlurFilterGLRender();\n    }\n\n    /**\n     * @private\n     * 当前滤镜的类型\n     * @override\n     */\n    get type(): number {\n        return Filter.BLUR;\n    }\n\n    getStrenth_sig2_2sig2_native(): Float32Array {\n        if (!this.strength_sig2_native) {\n            this.strength_sig2_native = new Float32Array(4);\n        }\n        //TODO James 不要每次进行计算\n        var sigma: number = this.strength / 3.0;\n        var sigma2: number = sigma * sigma;\n        this.strength_sig2_native[0] = this.strength;\n        this.strength_sig2_native[1] = sigma2;\n        this.strength_sig2_native[2] = 2.0 * sigma2;\n        this.strength_sig2_native[3] = 1.0 / (2.0 * Math.PI * sigma2);\n        return this.strength_sig2_native;\n    }\n}\n\n","import { Matrix } from \"../maths/Matrix\"\nimport { Context } from \"../resource/Context\"\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { GlowFilter } from \"./GlowFilter\";\n/**\n * @private\n */\nexport class GlowFilterGLRender {\n\tprivate setShaderInfo(shader: Value2D, w: number, h: number, data: GlowFilter): void {\n\t\tshader.defines.add(data.type);\n\t\tvar sv: any = (<any>shader);\n\t\tsv.u_blurInfo1 = data._sv_blurInfo1;// [data.blur, data.blur, data.offX, -data.offY];\n\t\tvar info2: any = data._sv_blurInfo2;\n\t\tinfo2[0] = w; info2[1] = h;\n\t\tsv.u_blurInfo2 = info2;\n\t\tsv.u_color = data.getColor();\n\t}\n\trender(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: GlowFilter): void {\n\t\tvar w: number = width, h: number = height;\n\t\tvar svBlur: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n\t\tthis.setShaderInfo(svBlur, w, h, filter);\n\t\tvar svCP: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n\t\tvar matI: Matrix = Matrix.TEMP.identity();\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svBlur);\t//先画模糊的底\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svCP);\t\t//再画原始图片\n\n\t}\n}\n\n","import { Filter } from \"./Filter\";\nimport { GlowFilterGLRender } from \"./GlowFilterGLRender\";\nimport { ColorUtils } from \"../utils/ColorUtils\"\nimport { BlurFilter } from \"./BlurFilter\";\n\n/**\n *  发光滤镜(也可以当成阴影滤使用）\n */\nexport class GlowFilter extends Filter {\n\n    /**数据的存储，顺序R,G,B,A,blurWidth,offX,offY;*/\n    private _elements: Float32Array = new Float32Array(9);\n    /**@internal */\n    _sv_blurInfo1: any[] = new Array(4);\t//给shader用\n    /**@internal */\n    _sv_blurInfo2: any[] = [0, 0, 1, 0];\n    /**滤镜的颜色*/\n    private _color: ColorUtils;\n    /**@internal */\n    _color_native: Float32Array;\n    /**@internal */\n    _blurInof1_native: Float32Array;\n    /**@internal */\n    _blurInof2_native: Float32Array;\n\n    /**\n     * 创建发光滤镜\n     * @param\tcolor\t滤镜的颜色\n     * @param\tblur\t边缘模糊的大小\n     * @param\toffX\tX轴方向的偏移\n     * @param\toffY\tY轴方向的偏移\n     */\n    constructor(color: string, blur: number = 4, offX: number = 6, offY: number = 6) {\n        super();\n        this._color = new ColorUtils(color || \"#000\");\n        //限制最大效果为20\n        this.blur = Math.min(blur, 20);\n        this.offX = offX;\n        this.offY = offY;\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = this.blur; this._sv_blurInfo1[2] = offX; this._sv_blurInfo1[3] = -offY;\n        this._glRender = new GlowFilterGLRender();\n    }\n\n    /**\n     * @private\n     * 滤镜类型\n     * @override\n     */\n    get type(): number {\n        return BlurFilter.GLOW;\n    }\n\n    /**@private */\n    get offY(): number {\n        return this._elements[6];\n    }\n\n    /**@private */\n    set offY(value: number) {\n        this._elements[6] = value;\n        this._sv_blurInfo1[3] = -value;\n    }\n\n    /**@private */\n    get offX(): number {\n        return this._elements[5];\n    }\n\n    /**@private */\n    set offX(value: number) {\n        this._elements[5] = value;\n        this._sv_blurInfo1[2] = value;\n    }\n\n    /**@private */\n    get color(): string {\n        return this._color.strColor;\n    }\n\n    /**@private */\n    set color(value: string) {\n        this._color = new ColorUtils(value);\n    }\n\n    /**@private */\n    getColor(): any[] {\n        return this._color.arrColor;\n    }\n\n    /**@private */\n    get blur(): number {\n        return this._elements[4];\n    }\n\n    /**@private */\n    set blur(value: number) {\n        this._elements[4] = value;\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\n    }\n\n    getColorNative(): Float32Array {\n        if (!this._color_native) {\n            this._color_native = new Float32Array(4);\n        }\n        //TODO James 不用每次赋值\n        var color: any[] = this.getColor();\n        this._color_native[0] = color[0];\n        this._color_native[1] = color[1];\n        this._color_native[2] = color[2];\n        this._color_native[3] = color[3];\n        return this._color_native;\n    }\n    getBlurInfo1Native(): Float32Array {\n        if (!this._blurInof1_native) {\n            this._blurInof1_native = new Float32Array(4);\n        }\n        //TODO James 不用每次赋值\n        this._blurInof1_native[0] = this._blurInof1_native[1] = this.blur;\n        this._blurInof1_native[2] = this.offX;\n        this._blurInof1_native[3] = this.offY;\n        return this._blurInof1_native;\n    }\n    getBlurInfo2Native(): Float32Array {\n        if (!this._blurInof2_native) {\n            this._blurInof2_native = new Float32Array(4);\n        }\n        //TODO James 不用每次赋值\n        this._blurInof2_native[2] = 1;\n        return this._blurInof2_native;\n    }\n}\n\n","import { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Handler } from \"../utils/Handler\"\n\n/**\n * <p> <code>SoundChannel</code> 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。</p>\n * <p> <code>SoundChannel</code> 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。</p>\n */\nexport class SoundChannel extends EventDispatcher {\n    /**\n     * 声音地址。\n     */\n    url: string;\n    /**\n     * 循环次数。\n     */\n    loops: number;\n    /**\n     * 播放声音开始时间。\n     */\n    startTime: number;\n    /**\n     * 表示声音是否已暂停。\n     */\n    isStopped: boolean = false;\n    /**\n     * 播放完成处理器。\n     */\n    completeHandler: Handler;\n\n    /**\n     * 音量范围从 0（静音）至 1（最大音量）。\n     */\n    set volume(v: number) {\n\n    }\n\n    get volume(): number {\n        return 1;\n    }\n\n    /**\n     * 获取当前播放时间，单位是秒。\n     */\n    get position(): number {\n        return 0;\n    }\n\n    /**\n     * 获取总时间，单位是秒。\n     */\n    get duration(): number {\n        return 0;\n    }\n\n    /**\n     * 播放声音。\n     */\n    play(): void {\n\n    }\n\n    /**\n     * 停止播放。\n     */\n    stop(): void {\n        if (this.completeHandler) this.completeHandler.runWith(false);\n    }\n\n    /**\n     * 暂停播放。\n     */\n    pause(): void {\n    }\n\n    /**\n     * 继续播放。\n     */\n    resume(): void {\n    }\n\n    /**\n     * private\n     */\n    protected __runComplete(handler: Handler): void {\n        if (handler) {\n            handler.runWith(true);\n        }\n    }\n}\n\n","import { Event as LayaEvent } from \"../../events/Event\"\nimport { SoundChannel } from \"../SoundChannel\"\n//import { SoundManager } from \"../SoundManager\"\nimport { Browser } from \"../../utils/Browser\"\nimport { ILaya } from \"../../../ILaya\";\nimport { Pool } from \"../../utils/Pool\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { SoundManager } from \"../SoundManager\";\nimport { AudioSound } from \"./AudioSound\";\n\n/**\n * @private\n * audio标签播放声音的音轨控制\n */\nexport class AudioSoundChannel extends SoundChannel {\n\n    /**\n     * 播放用的audio标签\n     */\n    private _audio: HTMLAudioElement = null;\n    private _onEnd: (evt: Event) => void;\n    private _resumePlay: (evt: Event) => void;\n    private _src: string;\n\n    constructor(audio: HTMLAudioElement) {\n        super();\n        this._onEnd = this.__onEnd.bind(this);\n        this._resumePlay = this.__resumePlay.bind(this);\n        audio.addEventListener(\"ended\", this._onEnd);\n        this._audio = audio;\n        this._src = audio.src;\n    }\n\n    private __onEnd(evt: Event): void {\n        if (this.loops == 1) {\n            if (this.completeHandler) {\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\n                this.completeHandler = null;\n            }\n            this.stop();\n            this.event(LayaEvent.COMPLETE);\n            return;\n        }\n        if (this.loops > 0) {\n            this.loops--;\n        }\n        this.startTime = 0;\n        this.play();\n    }\n\n    private __resumePlay(): void {\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\n        if (this.isStopped) return;\n        try {\n            this._audio.currentTime = this.startTime;\n            Browser.container.appendChild(this._audio);\n            this._audio.play();\n        } catch (e) {\n            //this.audio.play();\n            this.event(LayaEvent.ERROR);\n        }\n    }\n\n    /**\n     * 播放\n     * @override\n     */\n    play(): void {\n        this.isStopped = false;\n        try {\n            this._audio.playbackRate = SoundManager.playbackRate;\n            this._audio.currentTime = this.startTime;\n        } catch (e) {\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\n            return;\n        }\n        SoundManager.addChannel(this);\n        Browser.container.appendChild(this._audio);\n        if (\"play\" in this._audio)\n            this._audio.play();\n    }\n\n    /**\n     * 当前播放到的位置\n     * @return\n     * @override\n     *\n     */\n    get position(): number {\n        if (!this._audio)\n            return 0;\n        return this._audio.currentTime;\n    }\n\n    /**\n     * 获取总时间。\n     * @override\n     */\n    get duration(): number {\n        if (!this._audio)\n            return 0;\n        return this._audio.duration;\n    }\n\n    /**\n     * 停止播放\n     * @override\n     */\n    stop(): void {\n        //trace(\"stop and remove event\");\n        super.stop();\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        this.completeHandler = null;\n        if (!this._audio)\n            return;\n        if (\"pause\" in this._audio)\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\n            if (LayaEnv.isConch) {\n                (this._audio as any).stop();\n            }\n        this._audio.pause();\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\n        //ie下使用对象池可能会导致后面的声音播放不出来\n        if (!ILaya.Browser.onIE) {\n            if (this._audio != AudioSound._musicAudio) {\n                Pool.recover(\"audio:\" + this.url, this._audio);\n            }\n        }\n        Browser.removeElement(this._audio);\n        this._audio = null;\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    pause(): void {\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        if (!this._audio)\n            return;\n        if (\"pause\" in this._audio)\n            this._audio.pause();\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    resume(): void {\n        var audio = this._audio;\n        if (!audio)\n            return;\n        this.isStopped = false;\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\n            audio.src = this._src;\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\n            audio.load();\n        }\n        SoundManager.addChannel(this);\n        if (\"play\" in audio) {\n            audio.play();\n        }\n    }\n\n    /**\n     * 设置音量\n     * @param v\n     * @override\n     *\n     */\n    set volume(v: number) {\n        if (!this._audio) return;\n        this._audio.volume = v;\n    }\n\n    /**\n     * 获取音量\n     * @return\n     * @override\n     *\n     */\n    get volume(): number {\n        if (!this._audio) return 1;\n        return this._audio.volume;\n    }\n\n}\n\n\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\nimport { Event } from \"../../events/Event\"\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\nimport { SoundChannel } from \"../SoundChannel\"\nimport { URL } from \"../../net/URL\"\nimport { Browser } from \"../../utils/Browser\"\nimport { Pool } from \"../../utils/Pool\"\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { SoundManager } from \"../SoundManager\";\nimport { AssetDb } from \"../../resource/AssetDb\";\n\n/**\n * @private\n * 使用Audio标签播放声音\n */\nexport class AudioSound extends EventDispatcher {\n\n    /**@private */\n    private static _audioCache: any = {};\n    /**\n     * 声音URL\n     */\n    url: string;\n    /**\n     * 播放用的audio标签\n     */\n    audio: HTMLAudioElement;\n    /**\n     * 是否已加载完成\n     */\n    loaded: boolean = false;\n    /**@internal */\n    static _musicAudio: HTMLAudioElement;\n    /**\n     * 释放声音\n     *\n     */\n    dispose(): void {\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\n        Pool.clearBySign(\"audio:\" + this.url);\n        if (ad) {\n            if (!LayaEnv.isConch) {\n                ad.src = \"\";\n            }\n            delete AudioSound._audioCache[this.url];\n        }\n    }\n\n    /**@internal */\n    static _initMusicAudio(): void {\n        if (AudioSound._musicAudio) return;\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n        if (!LayaEnv.isConch) {\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\n        }\n    }\n\n    /**@private */\n    private static _makeMusicOK(): void {\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\n        if (!AudioSound._musicAudio.src) {\n            AudioSound._musicAudio.src = \"\";\n            AudioSound._musicAudio.load();\n        } else {\n            AudioSound._musicAudio.play();\n        }\n    }\n\n\n    /**\n     * 加载声音\n     * @param url\n     *\n     */\n    load(url: string): void {\n        this.url = url;\n        var ad: HTMLAudioElement;\n        if (url == SoundManager._bgMusic) {\n            AudioSound._initMusicAudio();\n            ad = AudioSound._musicAudio;\n            if ((<any>ad).originalUrl != url) {\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\n                ad = null;\n            }\n        } else {\n            ad = AudioSound._audioCache[url];\n        }\n        if (ad && ad.readyState >= 2) {\n            this.event(Event.COMPLETE);\n            return;\n        }\n        if (!ad) {\n            if (url == SoundManager._bgMusic) {\n                AudioSound._initMusicAudio();\n                ad = AudioSound._musicAudio;\n            } else {\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n            }\n            AudioSound._audioCache[url] = ad;\n            AssetDb.inst.resolveURL(url, url => {\n                ad.src = URL.postFormatURL(URL.formatURL(url));\n            });\n        }\n        (<any>ad).originalUrl = url;\n\n        ad.addEventListener(\"canplaythrough\", onLoaded);\n        ad.addEventListener(\"error\", onErr);\n        var me: AudioSound = this;\n        function onLoaded(): void {\n            offs();\n            me.loaded = true;\n            me.event(Event.COMPLETE);\n        }\n\n        function onErr(): void {\n            ad.load = null;\n            offs();\n            me.event(Event.ERROR);\n        }\n\n        function offs(): void {\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\n            ad.removeEventListener(\"error\", onErr);\n        }\n\n        this.audio = ad;\n        if (ad.load) {\n            ad.load();\n        } else {\n            onErr();\n        }\n\n    }\n\n    /**\n     * 播放声音\n     * @param startTime 起始时间\n     * @param loops 循环次数\n     * @return\n     *\n     */\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\n        //trace(\"playAudioSound\");\n        if (!this.url)\n            return null;\n\n        var ad: HTMLAudioElement;\n        if (this.url == SoundManager._bgMusic) {\n            ad = AudioSound._musicAudio;\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\n                AudioSound._audioCache[this.url] = ad;\n            }\n        } else {\n            ad = AudioSound._audioCache[this.url];\n        }\n\n        if (!ad) return null;\n        var tAd: HTMLAudioElement;\n\n        tAd = Pool.getItem(\"audio:\" + this.url);\n\n        if (LayaEnv.isConch) {\n            if (!tAd) {\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n                AssetDb.inst.resolveURL(this.url, url => {\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\n                });\n            }\n        }\n        else {\n            if (this.url == SoundManager._bgMusic) {\n                AudioSound._initMusicAudio();\n                tAd = AudioSound._musicAudio;\n                AssetDb.inst.resolveURL(this.url, url => {\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\n                });\n            } else {\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\n            }\n        }\n        (<any>tAd).originalUrl = this.url;\n\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\n        channel.url = this.url;\n        channel.loops = loops;\n        channel.startTime = startTime;\n        channel.play();\n        SoundManager.addChannel(channel);\n        return channel;\n    }\n\n    /**\n     * 获取总时间。\n     */\n    get duration(): number {\n        var ad: HTMLAudioElement;\n        ad = AudioSound._audioCache[this.url];\n        if (!ad)\n            return 0;\n        return ad.duration;\n    }\n}\n\n\n","import { Event } from \"../../events/Event\"\nimport { SoundChannel } from \"../SoundChannel\"\nimport { Browser } from \"../../utils/Browser\"\nimport { ILaya } from \"../../../ILaya\";\nimport { SoundManager } from \"../SoundManager\";\nimport { WebAudioSound } from \"./WebAudioSound\";\n\n/**\n * @private\n * web audio api方式播放声音的音轨控制\n */\nexport class WebAudioSoundChannel extends SoundChannel {\n    /**\n     * 声音原始文件数据\n     */\n    audioBuffer: any;\n\n    /**\n     * gain节点\n     */\n    private gain: any;\n\n    /**\n     * 播放用的数据\n     */\n    private bufferSource: any = null;\n    /**\n     * 当前时间\n     */\n    private _currentTime: number = 0;\n\n    /**\n     * 当前音量\n     */\n    private _volume: number = 1;\n\n    /**\n     * 播放开始时的时间戳\n     */\n    private _startTime: number = 0;\n\n    private _pauseTime: number = 0;\n\n    /**\n     * 播放设备\n     */\n    private context: AudioContext;\n\n    private _onPlayEnd: Function;\n    private static _tryCleanFailed: boolean = false;\n    static SetTargetDelay: number = 0.001;\n\n    constructor() {\n        super();\n\n        this.context = WebAudioSound.ctx;\n\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\n        if (this.context[\"createGain\"]) {\n            this.gain = this.context[\"createGain\"]();\n        } else {\n            this.gain = (<any>this.context)[\"createGainNode\"]();\n        }\n    }\n    /**\n     * 播放声音\n     * @override\n     */\n    play(): void {\n        SoundManager.addChannel(this);\n        this.isStopped = false;\n        this._clearBufferSource();\n        if (!this.audioBuffer) return;\n        if (this.startTime >= this.duration) return this.stop();\n        var context: any = this.context;\n        var gain: any = this.gain;\n        var bufferSource: any = context.createBufferSource();\n        this.bufferSource = bufferSource;\n        bufferSource.buffer = this.audioBuffer;\n        bufferSource.connect(gain);\n        if (gain)\n            gain.disconnect();\n        gain.connect(context.destination);\n        bufferSource.onended = this._onPlayEnd;\n        // if (this.startTime >= this.duration) this.startTime = 0;\n        this._startTime = Browser.now();\n        if (this.gain.gain.setTargetAtTime) {\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\n        } else\n            this.gain.gain.value = this._volume;\n        if (this.loops == 0) {\n            bufferSource.loop = true;\n        }\n        if (bufferSource.playbackRate.setTargetAtTime) {\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\n        } else\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\n        bufferSource.start(0, this.startTime);\n        this._currentTime = 0;\n    }\n\n\n\n    private __onPlayEnd(): void {\n        if (this.loops == 1) {\n\n            if (this.completeHandler) {\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\n                this.completeHandler = null;\n            }\n            this.stop();\n            this.event(Event.COMPLETE);\n            return;\n        }\n        if (this.loops > 0) {\n            this.loops--;\n        }\n        this.startTime = 0;\n        this.play();\n    }\n\n    /**\n     * 获取当前播放位置\n     * @override\n     */\n    get position(): number {\n        if (this.bufferSource) {\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\n        }\n        return 0;\n    }\n    /**\n     * @override\n     */\n    get duration(): number {\n        if (this.audioBuffer) {\n            return this.audioBuffer.duration;\n        }\n        return 0;\n    }\n\n    private _clearBufferSource(): void {\n        if (this.bufferSource) {\n            var sourceNode: any = this.bufferSource;\n            if (sourceNode.stop) {\n                sourceNode.stop(0);\n            } else {\n                sourceNode.noteOff(0);\n            }\n            sourceNode.disconnect(0);\n            sourceNode.onended = null;\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\n            this.bufferSource = null;\n        }\n    }\n\n    private _tryClearBuffer(sourceNode: any): void {\n        try {//已经支持buffer=null\n            sourceNode.buffer = null;\n        } catch (e) {\n            WebAudioSoundChannel._tryCleanFailed = true;\n        }\n    }\n\n    /**\n     * 停止播放\n     * @override\n     */\n    stop(): void {\n        super.stop();\n        this._clearBufferSource();\n        this.audioBuffer = null;\n        if (this.gain)\n            this.gain.disconnect();\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        this.completeHandler = null;\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    pause(): void {\n        if (!this.isStopped) {\n            this._pauseTime = this.position;\n        }\n        this._clearBufferSource();\n        if (this.gain)\n            this.gain.disconnect();\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    resume(): void {\n        this.startTime = this._pauseTime;\n        this.play();\n    }\n\n    /**\n     * 设置音量\n     * @override\n     */\n    set volume(v: number) {\n        this._volume = v;\n        if (this.isStopped) {\n            return;\n        }\n        if (this.gain.gain.setTargetAtTime) {\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\n        } else\n            this.gain.gain.value = v;\n    }\n\n    /**\n     * 获取音量\n     * @override\n     */\n    get volume(): number {\n        return this._volume;\n    }\n\n}\n\n\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\nimport { Event } from \"../../events/Event\"\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\nimport { SoundChannel } from \"../SoundChannel\"\nimport { SoundManager } from \"../SoundManager\";\nimport { ILaya } from \"../../../ILaya\";\nimport { Loader } from \"../../net/Loader\";\n\n/**\n * @private\n * web audio api方式播放声音\n */\nexport class WebAudioSound extends EventDispatcher {\n\n    /**\n     * 播放设备\n     */\n    static ctx: AudioContext;\n\n    /**\n     * 用于播放解锁声音以及解决Ios9版本的内存释放\n     */\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\n\n    /**\n     * 是否已解锁声音播放\n     */\n    private static _unlocked: boolean = false;\n\n    /**\n     * 声音URL\n     */\n    url: string;\n    /**\n     * 是否已加载完成\n     */\n    loaded: boolean = false;\n    /**\n     * 声音原始文件数据\n     */\n    audioBuffer: AudioBuffer;\n    /**\n     * 待播放的声音列表\n     */\n    private __toPlays: any[];\n    /**\n     * @private\n     */\n    private _disposed: boolean = false;\n\n\n    /**\n     * 播放声音以解锁IOS的声音\n     *\n     */\n    private static _playEmptySound(): void {\n        if (WebAudioSound.ctx == null) {\n            return;\n        }\n        var source: any = WebAudioSound.ctx.createBufferSource();\n        source.buffer = WebAudioSound._miniBuffer;\n        source.connect(WebAudioSound.ctx.destination);\n        source.start(0, 0, 0);\n    }\n\n    /**\n     * 尝试解锁声音\n     *\n     */\n    private static _unlock(): void {\n        if (WebAudioSound._unlocked) {\n            return;\n        }\n        WebAudioSound._playEmptySound();\n        if (WebAudioSound.ctx.state == \"running\") {\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\n            WebAudioSound._unlocked = true;\n        }\n    }\n    /*;*/\n\n    static initWebAudio(): void {\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\n\n        if (WebAudioSound.ctx.state != \"running\") {\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\n        }\n    }\n\n    /**\n     * 加载声音\n     * @param url\n     *\n     */\n    load(url: string): void {\n        this.url = url;\n        this.audioBuffer = ILaya.loader.getRes(url);\n        if (this.audioBuffer) {\n            this._loaded(this.audioBuffer);\n            return;\n        }\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\n    }\n\n    private _loaded(audioBuffer: any): void {\n        if (this._disposed)\n            return;\n\n        this.audioBuffer = audioBuffer;\n        this.loaded = true;\n        this.event(Event.COMPLETE);\n    }\n\n    private __playAfterLoaded(): void {\n        if (!this.__toPlays) return;\n        var i: number, len: number;\n        var toPlays: any[];\n        toPlays = this.__toPlays;\n        len = toPlays.length;\n        var tParams: any[];\n        for (i = 0; i < len; i++) {\n            tParams = toPlays[i];\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\n                this.play(tParams[0], tParams[1], tParams[2]);\n            }\n        }\n        this.__toPlays.length = 0;\n    }\n\n    /**\n     * 播放声音\n     * @param startTime 起始时间\n     * @param loops 循环次数\n     * @return\n     *\n     */\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\n        channel = channel ? channel : new WebAudioSoundChannel();\n        if (!this.audioBuffer) {\n            if (this.url) {\n                if (!this.__toPlays) this.__toPlays = [];\n                this.__toPlays.push([startTime, loops, channel]);\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\n                this.load(this.url);\n            }\n        }\n        channel.url = this.url;\n        channel.loops = loops;\n        channel.audioBuffer = this.audioBuffer;\n        channel.startTime = startTime;\n        channel.play();\n        SoundManager.addChannel(channel);\n        return channel;\n    }\n\n    get duration(): number {\n        if (this.audioBuffer) {\n            return this.audioBuffer.duration;\n        }\n        return 0;\n    }\n\n    dispose(): void {\n        this._disposed = true;\n        if (this.audioBuffer) {\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\n            this.audioBuffer = null;\n        }\n        this.__toPlays = [];\n    }\n}\n\n\n","import { SoundChannel } from \"./SoundChannel\";\nimport { Event } from \"../events/Event\"\nimport { AudioSound } from \"./h5audio/AudioSound\"\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\nimport { URL } from \"../net/URL\"\nimport { Handler } from \"../utils/Handler\"\nimport { Sound } from \"./Sound\";\nimport { ILaya } from \"../../ILaya\";\nimport { Browser } from \"../utils/Browser\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * <code>SoundManager</code> 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\n * 引擎默认有两套声音方案：WebAudio和H5Audio\n * 播放音效，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\n * 播放背景音乐，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）\n * 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\n * 详细教程及声音格式请参考：http://ldc2.layabox.com/doc/?nav=ch-as-1-7-0\n */\nexport class SoundManager {\n    /**\n     * 背景音乐音量。\n     * @default 1\n     */\n    static musicVolume: number = 1;\n    /**\n     * 音效音量。\n     * @default 1\n     */\n    static soundVolume: number = 1;\n    /**\n     * 声音播放速率。\n     * @default 1\n     */\n    static playbackRate: number = 1;\n    /**\n     * 背景音乐使用Audio标签播放。\n     * @default true\n     */\n    private static _useAudioMusic: boolean = true;\n    /**@private 是否静音，默认为false。*/\n    private static _muted: boolean = false;\n    /**@private 是否音效静音，默认为false。*/\n    private static _soundMuted: boolean = false;\n    /**@private 是否背景音乐静音，默认为false。*/\n    private static _musicMuted: boolean = false;\n    /**@internal 当前背景音乐url。*/\n    static _bgMusic: string = null;\n    /**@private 当前背景音乐声道。*/\n    static _musicChannel: SoundChannel = null;\n    /**@private 当前播放的Channel列表。*/\n    private static _channels: any[] = [];\n    /**@private */\n    private static _autoStopMusic: boolean;\n    /**@private */\n    private static _blurPaused: boolean = false;\n    /**@private */\n    private static _isActive: boolean = true;\n    /**@internal */\n    static _soundClass: new () => any;\n    /**@internal */\n    static _musicClass: new () => any;\n    /**@private */\n    private static _lastSoundUsedTimeDic: any = {};\n    /**@private */\n    private static _isCheckingDispose: boolean = false;\n    /**@private */\n    private static _soundCache: Record<string, Sound> = {};\n\n    /**@internal */\n    static __init__(): boolean {\n        var win: any = ILaya.Browser.window;\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\n        if (supportWebAudio)\n            WebAudioSound.initWebAudio();\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\n\n        if (!Browser.onTBMiniGame) {\n            AudioSound._initMusicAudio();\n        }\n        SoundManager._musicClass = AudioSound;\n\n        return supportWebAudio;\n    }\n\n    /**\n     * 音效播放后自动删除。\n     * @default true\n     */\n    static autoReleaseSound: boolean = true;\n\n    /**\n     * 添加播放的声音实例。\n     * @param channel <code>SoundChannel</code> 对象。\n     */\n    static addChannel(channel: SoundChannel): void {\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\n        SoundManager._channels.push(channel);\n    }\n\n    /**\n     * 移除播放的声音实例。\n     * @param channel <code>SoundChannel</code> 对象。\n     */\n    static removeChannel(channel: SoundChannel): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            if (SoundManager._channels[i] == channel) {\n                SoundManager._channels.splice(i, 1);\n            }\n        }\n    }\n\n    /**@private */\n    static disposeSoundLater(url: string): void {\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\n        if (!SoundManager._isCheckingDispose) {\n            SoundManager._isCheckingDispose = true;\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\n        }\n    }\n\n    /**@private */\n    private static _checkDisposeSound(): void {\n        let tTime: number = ILaya.Browser.now();\n        let hasCheck: boolean = false;\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\n                delete SoundManager._lastSoundUsedTimeDic[key];\n                SoundManager.disposeSoundIfNotUsed(key);\n            } else {\n                hasCheck = true;\n            }\n        }\n        if (!hasCheck) {\n            SoundManager._isCheckingDispose = false;\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\n        }\n    }\n\n    /**@private */\n    static disposeSoundIfNotUsed(url: string): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            if (SoundManager._channels[i].url == url) {\n                return;\n            }\n        }\n        SoundManager.destroySound(url);\n    }\n\n    /**\n     * 失去焦点后是否自动停止背景音乐。\n     * @param v Boolean 失去焦点后是否自动停止背景音乐。\n     *\n     */\n    static set autoStopMusic(v: boolean) {\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\n        SoundManager._autoStopMusic = v;\n        if (v) {\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\n        }\n    }\n\n    /**\n     * 失去焦点后是否自动停止背景音乐。\n     */\n    static get autoStopMusic(): boolean {\n        return SoundManager._autoStopMusic;\n    }\n\n    private static _visibilityChange(): void {\n        if (ILaya.stage.isVisibility) {\n            SoundManager._stageOnFocus();\n        } else {\n            SoundManager._stageOnBlur();\n        }\n    }\n\n    private static _stageOnBlur(): void {\n        SoundManager._isActive = false;\n        if (SoundManager._musicChannel) {\n            if (!SoundManager._musicChannel.isStopped) {\n                SoundManager._blurPaused = true;\n                SoundManager._musicChannel.pause();\n\n            }\n\n        }\n        SoundManager.stopAllSound();\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\n    }\n\n    private static _recoverWebAudio(): void {\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\n            WebAudioSound.ctx.resume();\n    }\n\n    private static _stageOnFocus(): void {\n        SoundManager._isActive = true;\n        SoundManager._recoverWebAudio();\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\n        if (SoundManager._blurPaused) {\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\n                SoundManager._blurPaused = false;\n                SoundManager._musicChannel.resume();\n            }\n        }\n    }\n\n    /**\n     * 背景音乐和所有音效是否静音。\n     */\n    static set muted(value: boolean) {\n        if (value == SoundManager._muted) return;\n        if (value) {\n            SoundManager.stopAllSound();\n        }\n        SoundManager.musicMuted = value;\n        SoundManager._muted = value;\n    }\n\n    static get muted(): boolean {\n        return SoundManager._muted;\n    }\n\n    /**\n     * 所有音效（不包括背景音乐）是否静音。\n     */\n    static set soundMuted(value: boolean) {\n        SoundManager._soundMuted = value;\n    }\n\n    static get soundMuted(): boolean {\n        return SoundManager._soundMuted;\n    }\n\n    /**\n     * 背景音乐（不包括音效）是否静音。\n     */\n    static set musicMuted(value: boolean) {\n        if (value == SoundManager._musicMuted) return;\n        if (value) {\n            if (SoundManager._bgMusic) {\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\n                    if (LayaEnv.isConch) {\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\n                    }\n                    else {\n                        SoundManager._musicChannel.pause();\n                    }\n                } else {\n                    SoundManager._musicChannel = null;\n                }\n            } else {\n                SoundManager._musicChannel = null;\n            }\n\n            SoundManager._musicMuted = value;\n        } else {\n            SoundManager._musicMuted = value;\n            if (SoundManager._bgMusic) {\n                if (SoundManager._musicChannel) {\n                    if (LayaEnv.isConch) {\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\n                    }\n                    else {\n                        SoundManager._musicChannel.resume();\n                    }\n                }\n            }\n        }\n\n    }\n\n    static get musicMuted(): boolean {\n        return SoundManager._musicMuted;\n    }\n\n    static get useAudioMusic(): boolean {\n        return SoundManager._useAudioMusic;\n    }\n\n    static set useAudioMusic(value: boolean) {\n        SoundManager._useAudioMusic = value;\n        if (value) {\n            SoundManager._musicClass = AudioSound;\n        } else {\n            SoundManager._musicClass = null;\n        }\n    }\n\n    /**\n     * 播放音效。音效可以同时播放多个。\n     * @param url\t\t\t声音文件地址。\n     * @param loops\t\t\t循环次数,0表示无限循环。\n     * @param complete\t\t声音播放完成回调  Handler对象。\n     * @param soundClass\t使用哪个声音类进行播放，null表示自动选择。\n     * @param startTime\t\t声音播放起始时间。\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\n     */\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\n        if (!SoundManager._isActive || !url) return null;\n        if (SoundManager._muted) return null;\n        SoundManager._recoverWebAudio();\n        if (url == SoundManager._bgMusic) {\n            if (SoundManager._musicMuted) return null;\n        } else {\n            if (SoundManager._soundMuted) return null;\n        }\n        let tSound: Sound;\n        if (!Browser._isMiniGame) {\n            tSound = SoundManager._soundCache[url];\n        }\n        if (!soundClass) soundClass = SoundManager._soundClass;\n        if (!tSound) {\n            tSound = new soundClass();\n            tSound.load(url);\n            if (!Browser._isMiniGame) {\n                SoundManager._soundCache[url] = tSound;\n            }\n        }\n        let channel = tSound.play(startTime, loops);\n        if (!channel) return null;\n        channel.url = url;\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\n        channel.completeHandler = complete;\n        return channel;\n    }\n\n    /**\n     * 释放声音资源。\n     * @param url\t声音播放地址。\n     */\n    static destroySound(url: string): void {\n        let tSound = SoundManager._soundCache[url];\n        if (tSound) {\n            delete SoundManager._soundCache[url];\n            tSound.dispose();\n        }\n    }\n\n    /**\n     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\n     * @param url\t\t声音文件地址。\n     * @param loops\t\t循环次数,0表示无限循环。\n     * @param complete\t声音播放完成回调,complete 结果参数 true: 播放完成, false/undefined ：stop触发的complete。\n     * @param startTime\t声音播放起始时间。\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\n     */\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\n        SoundManager._bgMusic = url;\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\n    }\n\n    /**\n     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\n     * @param url  声音文件地址。\n     */\n    static stopSound(url: string): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            let channel = SoundManager._channels[i];\n            if (channel.url == url) {\n                channel.stop();\n            }\n        }\n    }\n\n    /**\n     * 停止播放所有声音（包括背景音乐和音效）。\n     */\n    static stopAll(): void {\n        SoundManager._bgMusic = null;\n        var i: number;\n        var channel: SoundChannel;\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\n            channel = SoundManager._channels[i];\n            channel.stop();\n        }\n    }\n\n    /**\n     * 停止播放所有音效（不包括背景音乐）。\n     */\n    static stopAllSound(): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            let channel = SoundManager._channels[i];\n            if (channel.url != SoundManager._bgMusic) {\n                channel.stop();\n            }\n        }\n    }\n\n    /**\n     * 停止播放背景音乐（不包括音效）。\n     * @param url  声音文件地址。\n     */\n    static stopMusic(): void {\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\n        SoundManager._bgMusic = null;\n    }\n\n    /**\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\n     * @param url\t\t(default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\n     */\n    static setSoundVolume(volume: number, url: string = null): void {\n        if (url) {\n            SoundManager._setVolume(url, volume);\n        } else {\n            SoundManager.soundVolume = volume;\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n                let channel = SoundManager._channels[i];\n                if (channel.url != SoundManager._bgMusic) {\n                    channel.volume = volume;\n                }\n            }\n        }\n    }\n\n    /**\n     * 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\n     */\n    static setMusicVolume(volume: number): void {\n        SoundManager.musicVolume = volume;\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\n    }\n\n    /**\n     * 设置指定声音的音量。\n     * @param url\t\t声音文件url\n     * @param volume\t音量。初始值为1。\n     */\n    private static _setVolume(url: string, volume: number): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            let channel = SoundManager._channels[i];\n            if (channel.url == url) {\n                channel.volume = volume;\n            }\n        }\n    }\n}\n\n","import { SoundChannel } from \"./SoundChannel\";\nimport { SoundManager } from \"./SoundManager\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Handler } from \"../utils/Handler\"\n\n/**\n */\nexport class SoundNode extends Sprite {\n    private _channel: SoundChannel;\n    private _tar: Sprite;\n    private _playEvents: string;\n    private _stopEvents: string;\n    private _source: string;\n\n    constructor() {\n        super();\n        this.visible = false;\n        this.on(Event.ADDED, this, this._onParentChange);\n        this.on(Event.REMOVED, this, this._onParentChange);\n    }\n\n    get source() {\n        return this._source;\n    }\n\n    set source(value: string) {\n        this._source = value;\n        if (!value)\n            this.stop();\n    }\n\n    /**@private */\n    private _onParentChange(): void {\n        this.target = (<Sprite>this.parent);\n    }\n\n    /**\n     * 播放\n     * @param loops 循环次数\n     * @param complete 完成回调\n     *\n     */\n    play(loops: number = 1, complete: Handler = null): void {\n        if (isNaN(loops)) {\n            loops = 1;\n        }\n        if (!this._source) return;\n        this.stop();\n        this._channel = SoundManager.playSound(this._source, loops, complete);\n    }\n\n    /**\n     * 停止播放\n     *\n     */\n    stop(): void {\n        if (this._channel && !this._channel.isStopped) {\n            this._channel.stop();\n        }\n        this._channel = null;\n    }\n\n    /**@private */\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\n        if (!(this as any)[action]) return;\n        if (!tar) return;\n        if (add) {\n            tar.on(event, this, (this as any)[action]);\n        } else {\n            tar.off(event, this, (this as any)[action]);\n        }\n\n    }\n\n    /**@private */\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\n        if (!tar) return;\n        if (!events) return;\n        var eventArr: any[] = events.split(\",\");\n        var i: number, len: number;\n        len = eventArr.length;\n        for (i = 0; i < len; i++) {\n            this._setPlayAction(tar, eventArr[i], action, add);\n        }\n    }\n\n    /**\n     * 设置触发播放的事件\n     * @param events\n     *\n     */\n    set playEvent(events: string) {\n        this._playEvents = events;\n        if (!events) return;\n        if (this._tar) {\n            this._setPlayActions(this._tar, events, \"play\");\n        }\n    }\n\n    /**\n     * 设置控制播放的对象\n     * @param tar\n     *\n     */\n    set target(tar: Sprite) {\n        if (this._tar) {\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\n        }\n        this._tar = tar;\n        if (this._tar) {\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\n        }\n    }\n\n    /**\n     * 设置触发停止的事件\n     * @param events\n     *\n     */\n    set stopEvent(events: string) {\n        this._stopEvents = events;\n        if (!events) return;\n        if (this._tar) {\n            this._setPlayActions(this._tar, events, \"stop\");\n        }\n    }\n}\n","import { BaseTexture } from \"../resource/BaseTexture\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { ILaya } from \"../../ILaya\";\nimport { Delegate } from \"../utils/Delegate\";\nimport { Utils } from \"../utils/Utils\";\nimport { URL } from \"../net/URL\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Event as LayaEvent } from \"../events/Event\";\n\nexport const enum VideoType {\n    MP4 = 1,\n    OGG = 2,\n    CAMERA = 4,\n    WEBM = 8,\n}\n\n/**\n * <code>VideoTexture</code> 多媒体纹理\n */\nexport class VideoTexture extends BaseTexture {\n    public readonly element: HTMLVideoElement;\n\n    private _source: string;\n    private _listeningEvents: Record<string, (evt: Event) => void>;\n    private immediatelyPlay: boolean;\n    /**\n     * 是否开发者自己调用Render\n     */\n    private _frameRender: boolean;\n    /** @inernal 避免重复的加载 */\n    _isLoaded: boolean;\n    _needUpdate: boolean = false;\n    /**\n     * 创建VideoTexture对象，\n     */\n    constructor() {\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\n        this._frameRender = true;\n        this._isLoaded = false;\n        this.immediatelyPlay = false;\n        this.element = ele;\n\n        this._listeningEvents = {};\n\n        this._dimension = TextureDimension.Tex2D;\n\n\n        // ele.setAttribute('crossorigin', 'Anonymous');\n\n        var style: any = this.element.style;\n        style.position = 'absolute';\n        style.top = '0px';\n        style.left = '0px';\n\n        // 默认放开webGL对纹理数据的跨域限制\n        ele.setAttribute('crossorigin', 'anonymous');\n        if (ILaya.Browser.onMobile) {\n            //@ts-ignore\n            ele[\"x5-playsInline\"] = true;\n            //@ts-ignore\n            ele[\"x5-playsinline\"] = true;\n            //@ts-ignore\n            ele.x5PlaysInline = true;\n            //@ts-ignore\n            ele.playsInline = true;\n            //@ts-ignore\n            ele[\"webkit-playsInline\"] = true;\n            //@ts-ignore\n            ele[\"webkit-playsinline\"] = true;\n            //@ts-ignore\n            ele.webkitPlaysInline = true;\n            //@ts-ignore\n            ele.playsinline = true;\n            //@ts-ignore\n            ele.style.playsInline = true;\n            ele.crossOrigin = \"anonymous\";\n            ele.setAttribute('playsinline', 'true');\n            ele.setAttribute('x5-playsinline', 'true');\n            ele.setAttribute('webkit-playsinline', 'true');\n            ele.autoplay = true;\n        }\n\n        ele.addEventListener(\"loadedmetadata\", () => {\n            this.loadedmetadata();\n        });\n        const scope = this;\n        function updateVideo() {\n            scope._needUpdate = true;\n            ele.requestVideoFrameCallback(updateVideo);\n\n        }\n        if ('requestVideoFrameCallback' in ele) {\n            ele.requestVideoFrameCallback(updateVideo);\n        }\n        //ios微信浏览器环境下默认不触发loadedmetadata，在主动调用play方法的时候才会触发loadedmetadata事件\n        if (ILaya.Browser.onWeiXin) {\n            this.loadedmetadata();\n        }\n    }\n\n    private isNeedUpdate() {\n        return this._needUpdate;\n    }\n\n    loadedmetadata() {\n        if (this._isLoaded)\n            return;\n        //flag only TODO\n        this._width = this.element.videoWidth;\n        this._height = this.element.videoHeight;\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false);\n        this.wrapModeU = WrapMode.Clamp;\n        this.wrapModeV = WrapMode.Clamp;\n        this.filterMode = FilterMode.Bilinear;\n        LayaGL.textureContext.initVideoTextureData(this._texture);\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\n        if (this.immediatelyPlay) {\n            this.play();\n        }\n        this._isLoaded = true;\n        this.event(LayaEvent.READY, this);\n    }\n\n    get source(): string {\n        return this._source;\n    }\n\n    get gammaCorrection() {\n        return 2.2;\n    }\n\n    /**\n    * 设置播放源路径\n    * @param url 播放源路径\n    */\n    set source(url: string) {\n        this._source = url;\n        if (!url)\n            return;\n\n        AssetDb.inst.resolveURL(url, url => {\n            while (this.element.childElementCount)\n                this.element.firstChild.remove();\n\n            if (url.startsWith(\"blob:\"))\n                this.element.src = url;\n            else\n                this.appendSource(url);\n        });\n    }\n\n    private appendSource(source: string): void {\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\n        sourceElement.type = \"video/\" + Utils.getFileExtension(source);\n        this.element.appendChild(sourceElement);\n    }\n\n    /**\n     * @internal\n     */\n    render() {\n\n        if (this.element.readyState == 0)\n            return;\n        if (this.isNeedUpdate()) {\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\n            this._needUpdate = false;\n        }\n    }\n\n    /**\n     * 是否每一帧都渲染\n     */\n    set frameRender(value: boolean) {\n        if (this._frameRender && !value) {\n            ILaya.timer.clear(this, this.render);\n        }\n        if (!this._frameRender && value) {\n            ILaya.timer.frameLoop(1, this, this.render);\n        }\n        this._frameRender = value;\n    }\n\n    get frameRender() {\n        return this._frameRender;\n    }\n\n\n    /**\n     * 开始播放视频\n     */\n    play() {\n        if (!this._texture) {\n            this.immediatelyPlay = true;\n        } else {\n            this.element.play();\n            if (this._frameRender) {\n                ILaya.timer.frameLoop(1, this, this.render);\n            }\n        }\n\n    }\n\n    _getSource() {\n        return this._texture ? this._texture.resource : null;\n    }\n\n    get defaultTexture() {\n        return Texture2D.whiteTexture;\n    }\n\n    /**\n     * 暂停播放视频\n     */\n    pause() {\n        this.element.pause();\n        if (this._frameRender) {\n            ILaya.timer.clear(this, this.render);\n        }\n\n    }\n\n    /**\n     * 重新加载视频。\n     */\n    load(): void {\n        this.element.load();\n    }\n\n    /**\n     * 检测是否支持播放指定格式视频。\n     * @param type\t参数为Video.MP4 / Video.OGG / Video.WEBM之一。\n     * @return 表示支持的级别。可能的值：\n     * <ul>\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\n     * </ul>\n     */\n    canPlayType(type: number): CanPlayTypeResult {\n        var typeString: string;\n        switch (type) {\n            case VideoType.MP4:\n                typeString = \"video/mp4\";\n                break;\n            case VideoType.OGG:\n                typeString = \"video/ogg\";\n                break;\n            case VideoType.WEBM:\n                typeString = \"video/webm\";\n                break;\n        }\n        return this.element.canPlayType(typeString);\n    }\n\n    /**\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\n     * @return TimeRanges(JS)对象\n     */\n    get buffered(): any {\n        return this.element.buffered;\n    }\n\n    /**\n     * 获取当前播放源路径。\n     */\n    get currentSrc(): string {\n        return this.element.currentSrc;\n    }\n\n    /**\n     * 设置和获取当前播放头位置。\n     */\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    set currentTime(value: number) {\n        if (!this.element)\n            return;\n\n        this.element.currentTime = value;\n        this.render();\n    }\n\n    /**\n     * 设置和获取当前音量。\n     */\n    set volume(value: number) {\n        if (!this.element)\n            return;\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    /**\n     * 表示视频元素的就绪状态：\n     * <ul>\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\n     * </ul>\n     */\n    get readyState(): any {\n        return this.element.readyState;\n    }\n\n    /**\n     * 获取视频源尺寸。ready事件触发后可用。\n     */\n    get videoWidth(): number {\n        return this.element.videoWidth;\n    }\n\n    get videoHeight(): number {\n        return this.element.videoHeight;\n    }\n\n    /**\n     * 获取视频长度（秒）。ready事件触发后可用。\n     */\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    /**\n     * 返回音频/视频的播放是否已结束\n     */\n    get ended(): boolean {\n        return this.element.ended;\n    }\n\n    /**\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\n     */\n    get error(): MediaError {\n        return this.element.error;\n    }\n\n    /**\n     * 设置或返回音频/视频是否应在结束时重新播放。\n     */\n    get loop(): boolean {\n        return this.element.loop;\n    }\n\n    set loop(value: boolean) {\n        if (!this.element)\n            return;\n        this.element.loop = value;\n    }\n\n    /**\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\n     * <ul>\n     * <li>1.0 正常速度</li>\n     * <li>0.5 半速（更慢）</li>\n     * <li>2.0 倍速（更快）</li>\n     * <li>-1.0 向后，正常速度</li>\n     * <li>-0.5 向后，半速</li>\n     * </ul>\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\n     */\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set playbackRate(value: number) {\n        if (!this.element)\n            return;\n        this.element.playbackRate = value;\n    }\n\n    /**\n     * 获取和设置静音状态。\n     */\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set muted(value: boolean) {\n        if (!this.element)\n            return;\n        this.element.muted = value;\n    }\n\n    /**\n     * 返回视频是否暂停\n     */\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    /**\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\n     * <ul>\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\n     * </ul>\n     */\n    get preload(): string {\n        return this.element.preload;\n    }\n\n    set preload(value: string) {\n        if (!this.element)\n            return;\n        //@ts-ignore\n        this.element.preload = value;\n    }\n\n    /**\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\n     */\n    get seekable(): any {\n        return this.element.seekable;\n    }\n\n    /**\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\n     */\n    get seeking(): boolean {\n        return this.element.seeking;\n    }\n\n    protected onStartListeningToType(type: string): void {\n        if (videoEvents.has(type)) {\n            let func = this._listeningEvents[type];\n            if (!func)\n                func = this._listeningEvents[type] = () => {\n                    this.event(type);\n                };\n\n            this.element.addEventListener(type, func);\n        }\n    }\n\n    destroy() {\n        var isConchApp: boolean = LayaEnv.isConch;\n        if (isConchApp) {\n            (<any>this.element)._destroy();\n        }\n\n        ILaya.timer.clear(this, this.render);\n        super.destroy();\n    }\n}\n\nconst videoEvents = new Set([\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\"\n]);","import { Sprite } from \"../display/Sprite\";\nimport { Texture } from \"../resource/Texture\";\nimport { ILaya } from \"../../ILaya\";\nimport { Browser } from \"../utils/Browser\";\nimport { VideoTexture } from \"./VideoTexture\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\nimport { Event } from \"../events/Event\";\n\n/**\n * <code>VideoNode</code>将视频显示到Canvas上。<code>Video</code>可能不会在所有浏览器有效。\n * <p>关于Video支持的所有事件参见：<i>http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</i>。</p>\n * <p>\n * <b>注意：</b><br/>\n * 在PC端可以在任何时机调用<code>play()</code>因此，可以在程序开始运行时就使Video开始播放。但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\n * </p>\n *\n * <p>MDN Video链接： <i>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video</i></p>\n */\nexport class VideoNode extends Sprite {\n    private _videoTexture: VideoTexture;\n    private _internalTex: Texture;\n\n    constructor() {\n        super();\n\n        this.texture = this._internalTex = new Texture();\n\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile) {\n            let func = () => {\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\n\n                if (!this._videoTexture)\n                    return;\n\n                if (Browser.onIOS) {\n                    this._videoTexture.load();\n                } else {\n                    this._videoTexture.play();\n                    this._videoTexture.pause();\n                }\n            }\n\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\n        }\n    }\n\n    get videoTexture(): VideoTexture {\n        return this._videoTexture;\n    }\n\n    set videoTexture(value: VideoTexture) {\n        if (this._videoTexture) {\n            this._videoTexture._removeReference();\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\n        }\n\n        this._videoTexture = value;\n        if (value) {\n            this._videoTexture._addReference();\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\n            if (this._videoTexture._isLoaded)\n                this._internalTex.setTo(this._videoTexture);\n        }\n        else {\n            this._internalTex.setTo(null);\n        }\n    }\n\n    get source() {\n        return this._videoTexture?.source;\n    }\n\n    set source(value: string) {\n        if (value) {\n            if (!this._videoTexture)\n                this.videoTexture = new VideoTexture();\n            this._videoTexture.source = value;\n        }\n        else if (this._videoTexture)\n            this._videoTexture.source = value;\n    }\n\n    /**\n     * 设置播放源。\n     * @param url\t播放源路径。\n     */\n    load(url: string): void {\n        this.source = url;\n    }\n\n    /**\n     * 开始播放视频。\n     */\n    play(): void {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.play();\n    }\n\n    /**\n     * 暂停视频播放。\n     */\n    pause(): void {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.pause();\n    }\n\n    /**\n     * 重新加载视频。\n     */\n    reload(): void {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.load();\n    }\n\n    /**\n     * 检测是否支持播放指定格式视频。\n     * @param type\t参数为Video.MP4 / Video.OGG / Video.WEBM之一。\n     * @return 表示支持的级别。可能的值：\n     * <ul>\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\n     * </ul>\n     */\n    canPlayType(type: number): CanPlayTypeResult {\n        if (!this._videoTexture)\n            this.videoTexture = new VideoTexture();\n        return this._videoTexture.canPlayType(type);\n    }\n\n    private onVideoMetaLoaded(): void {\n        this._internalTex.setTo(this._videoTexture);\n    }\n\n    /**\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\n     * @return TimeRanges(JS)对象\n     */\n    get buffered(): any {\n        return this._videoTexture?.buffered;\n    }\n\n    /**\n     * 获取当前播放源路径。\n     */\n    get currentSrc(): string {\n        return this._videoTexture?.currentSrc;\n    }\n\n    /**\n     * 设置和获取当前播放头位置。\n     */\n    get currentTime(): number {\n        return this._videoTexture?.currentTime;\n    }\n\n    set currentTime(value: number) {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.currentTime = value;\n    }\n\n    /**\n     * 设置和获取当前音量。\n     */\n    set volume(value: number) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.volume = value;\n    }\n\n    get volume(): number {\n        return this._videoTexture?.volume;\n    }\n\n    /**\n     * 表示视频元素的就绪状态：\n     * <ul>\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\n     * </ul>\n     */\n    get readyState(): any {\n        return this._videoTexture?.readyState;\n    }\n\n    /**\n     * 获取视频源尺寸。ready事件触发后可用。\n     */\n    get videoWidth(): number {\n        return this._videoTexture?.videoWidth;\n    }\n\n    get videoHeight(): number {\n        return this._videoTexture?.videoHeight;\n    }\n\n    /**\n     * 获取视频长度（秒）。ready事件触发后可用。\n     */\n    get duration(): number {\n        return this._videoTexture?.duration;\n    }\n\n    /**\n     * 返回音频/视频的播放是否已结束\n     */\n    get ended(): boolean {\n        return this._videoTexture?.ended;\n    }\n\n    /**\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\n     */\n    get error(): MediaError {\n        return this._videoTexture?.error;\n    }\n\n    /**\n     * 设置或返回音频/视频是否应在结束时重新播放。\n     */\n    get loop(): boolean {\n        return this._videoTexture?.loop;\n    }\n\n    set loop(value: boolean) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.loop = value;\n    }\n\n    /**\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\n     * <ul>\n     * <li>1.0 正常速度</li>\n     * <li>0.5 半速（更慢）</li>\n     * <li>2.0 倍速（更快）</li>\n     * <li>-1.0 向后，正常速度</li>\n     * <li>-0.5 向后，半速</li>\n     * </ul>\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\n     */\n    get playbackRate(): number {\n        return this._videoTexture?.playbackRate;\n    }\n\n    set playbackRate(value: number) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.playbackRate = value;\n    }\n\n    /**\n     * 获取和设置静音状态。\n     */\n    get muted(): boolean {\n        return this._videoTexture?.muted;\n    }\n\n    set muted(value: boolean) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.muted = value;\n    }\n\n    /**\n     * 返回视频是否暂停\n     */\n    get paused(): boolean {\n        return this._videoTexture?.paused;\n    }\n\n    /**\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\n     * <ul>\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\n     * </ul>\n     */\n    get preload(): string {\n        return this._videoTexture?.preload;\n    }\n\n    set preload(value: string) {\n        if (!this._videoTexture)\n            return;\n        //@ts-ignore\n        this._videoTexture.preload = value;\n    }\n\n    /**\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\n     */\n    get seekable(): any {\n        return this._videoTexture?.seekable;\n    }\n\n    /**\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\n     */\n    get seeking(): boolean {\n        return this._videoTexture?.seeking;\n    }\n\n    /**\n    * @override\n    */\n    _setX(value: number): void {\n        super._setX(value);\n        if (this._videoTexture && LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.style.left = transform.x;\n        }\n    }\n\n    /**\n     * @override\n     */\n    _setY(value: number): void {\n        super._setY(value);\n        if (this._videoTexture && LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.style.top = transform.y;\n        }\n    }\n\n    /**\n     * @override\n     */\n    set_width(value: number): void {\n        super.set_width(value);\n\n        if (!this._videoTexture)\n            return;\n        if (LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.width = value * transform.scaleX;\n        }\n        else {\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\n        }\n    }\n\n    /**\n     * @override\n     */\n    set_height(value: number) {\n        super.set_height(value);\n\n        if (!this._videoTexture)\n            return;\n        if (LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.height = value * transform.scaleY;\n\n        }\n        else {\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\n        }\n    }\n\n    /**\n     * 销毁内部事件绑定。\n     * @override\n     */\n    destroy(detroyChildren: boolean = true): void {\n        this.videoTexture = null;\n        super.destroy(detroyChildren);\n    }\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\n\nexport class AnimatorPlayState2D {\n\t_finish: boolean;\n\t/**@internal */\n\t_startPlayTime: number;\n\t/**@internal */\n\t_lastElapsedTime: number;\n\t/**@internal 动画播放时间*/\n\t_elapsedTime: number;\n\t/**@internal 播放的次数*/\n\t_playNum: number;\n\n\t/**播放总时间，不受speed为负数的影响 */\n\t_playAllTime: number;\n\n\t/**@internal 单词播放归一化时间 */\n\t_normalizedPlayTime: number;\n\t/**@internal */\n\t_duration: number;\n\t/**@internal */\n\t_playEventIndex: number;\n\t/**@internal */\n\t_lastIsFront: boolean;\n\t/**@internal */\n\t_currentState: AnimatorState2D | null = null;\n\n\t/**是为正向播放 */\n\t_frontPlay = true;\n\n\n\t/**\n\t * 当前动画的持续时间，以秒为单位。\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n\n\t// checkPlayNext(): Animation2DNext {\n\t//     var nexts = this._currentState.nexts;\n\t//     if (nexts) {\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\n\t//             var no = nexts[i];\n\t//             //TODO 需要检测next的条件\n\t//             return no;\n\t//         }\n\t//     }\n\t//     return null;\n\t// }\n\n\t/**\n\t * 动画状态机。\n\t */\n\tget animatorState(): AnimatorState2D {\n\t\treturn this._currentState!;\n\t}\n\n\t/**\n\t * 创建一个 <code>AnimatorPlayState</code> 实例。\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_resetPlayState(startTime: number, clipDuration: number): void {\n\t\tthis._finish = false;\n\t\tthis._startPlayTime = startTime;\n\t\tthis._elapsedTime = startTime;\n\t\tthis._playEventIndex = 0;\n\t\tthis._lastIsFront = true;\n\t\tthis._playNum = 0;\n\t\tthis._playAllTime = 0;\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n\t\tthis._frontPlay = true;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_cloneTo(dest: AnimatorPlayState2D): void {\n\t\tdest._finish = this._finish;\n\t\tdest._startPlayTime = this._startPlayTime;\n\t\tdest._elapsedTime = this._elapsedTime;\n\t\tdest._playNum = this._playNum;\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\n\t\tdest._playEventIndex = this._playEventIndex;\n\t\tdest._lastIsFront = this._lastIsFront;\n\t\tdest._frontPlay = this._frontPlay;\n\t\tdest._playAllTime = this._playAllTime;\n\t}\n\n}","import { IClone } from \"../utils/IClone\";\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\n\nexport class AnimatorControllerLayer2D implements IClone {\n\n    /**混合模式_覆盖。 */\n    static BLENDINGMODE_OVERRIDE: number = 0;\n\n    /**混合模式_叠加。 */\n    static BLENDINGMODE_ADDTIVE: number = 1;\n\n    /**@internal */\n    private _defaultState: AnimatorState2D | null;\n\n    /**@internal */\n    private _referenceCount = 0;\n\n    /**@internal */\n    private _defaultStateNameCatch: string;\n\n    /**@internal*/\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\n\n    /**@internal*/\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\n\n    /**@internal*/\n    _crossMark: number = 0;\n\n    /**@internal */\n    _crossNodesOwnersCount: number = 0;\n\n    /**@internal */\n    _crossNodesOwnersIndicesMap: any = {};\n\n    /**@internal */\n    _srcCrossClipNodeIndices: number[] = [];\n\n    /**@internal */\n    _destCrossClipNodeIndices: number[] = [];\n\n    /**\n     * 层的名字\n     */\n    name: string;\n\n    /**\n     * 是否开始时播放\n     */\n    playOnWake = true;\n\n    /**\n     * 默认权重\n     */\n    defaultWeight = 1.0;\n\n    /**\n     * 混合模式\n     */\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\n\n    /**\n     * 是否开启\n     */\n    enable = true;\n\n    /**\n     * @internal\n     */\n    _states: AnimatorState2D[] = [];\n\n    /**\n     * @internal \n     * 0:常规播放、1:动态融合播放、2:固定融合播放\n     */\n    _playType = -1;\n\n    /**\n     * 实例化一个2D动画控制器\n     * @param name \n     */\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    /**\n     * 设置状态机\n     */\n    set states(states: ReadonlyArray<AnimatorState2D>) {\n        if (this._states === states)\n            return;\n        for (let i = this.states.length - 1; i >= 0; i--) {\n            this.removeState(this.states[i]);\n        }\n        for (let i = states.length - 1; i >= 0; i--) {\n            this.addState(states[i]);\n        }\n    }\n\n    get states(): ReadonlyArray<AnimatorState2D> {\n        return this._states;\n    }\n\n    /**\n     * 默认状态名称\n     */\n    set defaultStateName(str: string) {\n        this._defaultState = this.getStateByName(str);\n        if (null == this._defaultState) {\n            if (0 == this._states.length) {\n                this._defaultStateNameCatch = str;\n            } else {\n                for (var i = this._states.length - 1; i >= 0; i--) {\n                    if (this._states[i].name == str) {\n                        this._defaultState = this._states[i];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    get defaultStateName() {\n        if (!this._defaultState) {\n            return null;\n        }\n        return this._defaultState.name;\n    }\n\n    /**\n     * 默认动画状态机。\n     */\n    get defaultState(): AnimatorState2D {\n        return this._defaultState!;\n    }\n\n    set defaultState(value: AnimatorState2D) {\n        this._defaultState = value;\n        //this._statesMap[value.name] = value;\n    }\n\n    /**\n     * 移除Clip\n     * @param clipStateInfos \n     * @param index \n     * @param state \n     */\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\n        clipStateInfos.splice(index, 1);\n    }\n\n\n    /**\n     * @internal\n     * @returns \n     */\n    _getReferenceCount(): number {\n        return this._referenceCount;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _addReference(count: number): void {\n        for (var i = 0, n = this._states.length; i < n; i++)\n            this._states[i]._addReference(count);\n        this._referenceCount += count;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _removeReference(count = 1): void {\n        for (var i = 0, n = this._states.length; i < n; i++)\n            this._states[i]._removeReference(count);\n        this._referenceCount -= count;\n    }\n\n    /**\n     * @internal\n     */\n    _clearReference(): void {\n        this._removeReference(-this._referenceCount);\n    }\n\n\n    /**\n    * 获取当前的播放状态。\n    * @return 动画播放状态。\n    */\n    getCurrentPlayState(): AnimatorPlayState2D {\n        return this._playStateInfo!;\n    }\n\n    /**\n     * 状态机名称\n     * @param str \n     * @returns \n     */\n    getStateByName(str: string) {\n        for (let i = this._states.length - 1; i >= 0; i--) {\n            if (this._states[i].name == str) {\n                return this._states[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 添加动画状态。\n     * @param\tstate 动画状态。\n     * @param   layerIndex 层索引。\n     */\n    addState(state: AnimatorState2D): void {\n        var stateName = state.name;\n        if (this.getStateByName(stateName)) {\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\n        } else {\n            this._states.push(state);\n            if (stateName == this._defaultStateNameCatch) {\n                this._defaultState = state;\n                this._defaultStateNameCatch = null;\n            }\n        }\n    }\n\n    /**\n     * 移除动画状态。\n     * @param\tstate 动画状态。\n     * @param   layerIndex 层索引。\n     */\n    removeState(state: AnimatorState2D): void {\n        var states = this._states;\n        var index = -1;\n        for (var i = 0, n = states.length; i < n; i++) {\n            if (states[i] === state) {\n                index = i;\n                break;\n            }\n        }\n        if (-1 != index)\n            this._removeClip(states, index, state);\n    }\n\n    /**\n         * 克隆。\n         * @return\t 克隆副本。\n         */\n    clone() {\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\n        this.cloneTo(dest);\n        return dest;\n    }\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\n        dest.name = this.name;\n\n\n    }\n\n    /**\n     * 销毁\n     */\n    destroy() {\n        this._removeReference();\n        for (var i = 0, n = this._states.length; i < n; i++) {\n            this._states[i].destroy();\n        }\n        this._states.length = 0;\n    }\n}","export interface TypeAnimatorControllerData {\n    layerW: number,\n    controllerLayers: TypeAnimatorLayer[];\n    cullingMode?: number,\n    enable?: boolean,\n    animatorParams?: TypeAnimatorParams[],\n}\nexport interface TypeAnimatorParams {\n    id: number,\n    name: string,\n    type: AniParmType,\n    val: number | boolean,\n}\nexport interface TypeAnimatorLayer {\n    defaultStateName?: string,\n    name: string,\n    blendingMode: number,\n    states: TypeAnimatorState[],\n    playOnWake: boolean,\n    defaultWeight: number,\n\n    stageX?: number,\n    stageY?: number,\n    stageScale?: number,\n}\n\nexport enum AniParmType {\n    Float,\n    Bool,\n    Trigger,\n}\n\n/**\n * 动画状态条件类型\n */\nexport enum AniStateConditionType {\n    Number,\n    Bool,\n    Trigger\n}\n\nexport interface TypeAnimatorState {\n    x: number,\n    y: number,\n    id: string,\n    name: string,\n    speed?: number,\n    clipStart?: number,\n    clipEnd?: number,\n    loop?: number,\n    yoyo?: boolean,\n    soloTransitions?: TypeAnimatorTransition[],\n    clip?: { _$uuid: string, },\n    scripts?: string[],\n\n\n    states?: TypeAnimatorState[],\n    defaultStateName?: string,\n    stageX?: number,\n    stageY?: number,\n    stageScale?: number,\n}\nexport interface TypeAnimatorTransition {\n    id: string,\n    name?: string,\n    mute?: boolean,\n    solo?: boolean,\n    exitTime?: number,\n    transduration?: number,\n    transstartoffset?: number,\n    exitByTime?: boolean,\n    conditions?: TypeAnimatorConditions[],\n}\nexport interface TypeAnimatorConditions {\n    id?: number,\n    type?: AniStateConditionNumberCompressType,\n    checkValue?: number | boolean,\n    name?: string,\n}\n\nexport enum AniStateConditionNumberCompressType {\n    Less,\n    Greater\n}\n\nexport class AnimatorControllerParse {\n    static parse(data: TypeAnimatorControllerData) {\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\n        let ret = data;\n        let layers = ret.controllerLayers;\n        if (null == layers) {\n            layers = [];\n        }\n\n        let clipsID: string[] = [];\n\n\n        for (let i = layers.length - 1; i >= 0; i--) {\n            let l = layers[i];\n            let states = l.states;\n            if (!states) {\n                states = [];\n                l.states = states;\n            }\n\n            l.defaultStateName = null;\n            let retobj = this.checkStates(states, clipsID, ret);\n            if (retobj) {\n                l.defaultStateName = retobj.enterName;\n            } else {\n                layers.splice(i, 1);\n            }\n        }\n        return { ret: ret, clipsID: clipsID };\n    }\n\n\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\n        let clipState: TypeAnimatorState[] = null;\n        let enterState: TypeAnimatorState = null;\n        for (let j = states.length - 1; j >= 0; j--) {\n            let state = states[j];\n            if (state.states) {\n                if (null == this.checkStates(state.states, clipsID, data)) {\n                    states.splice(j, 1);\n                } else {\n                    if (null == clipState) {\n                        clipState = [];\n                    }\n                    clipState.push(state);\n                }\n            } else if (\"-1\" == state.id) {\n                enterState = state;\n                // let defName = this.checkDefault(state, states);\n                // if (null != defName) {\n                //     l.defaultStateName = defName;\n                // }\n            } else if (\"-2\" == state.id) {\n                //TODO any\n            } else if (\"-3\" == state.id) {\n                //TODO exit\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\n                states.splice(j, 1);\n            } else {\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\n                    clipsID.push(state.clip._$uuid);\n                }\n\n                this.checkNext(state, states, data);\n                if (null == clipState) {\n                    clipState = [];\n                }\n                clipState.push(state);\n            }\n        }\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\n        if (clipState && enterState) {\n            let defName = this.checkDefault(enterState, clipState);\n            if (null != defName) {\n                ret = { states: clipState, enterName: defName };\n            }\n        }\n\n\n        return ret;\n    }\n\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\n        let nexts = state.soloTransitions;\n        if (nexts) {\n            for (let i = nexts.length - 1; i >= 0; i--) {\n                let next = nexts[i];\n                let nState = this.getStateByID(states, next.id);\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\n                    nexts.splice(i, 1);\n                } else {\n                    next.name = nState.name;\n\n                    next.conditions = this.checkConditions(next.conditions, data);\n\n\n                }\n            }\n        }\n    }\n\n\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\n            return [];\n        }\n\n        let parms = data.animatorParams;\n\n        for (let i = conditions.length - 1; i >= 0; i--) {\n            let o = conditions[i];\n            let parm: TypeAnimatorParams = null;\n            for (let j = parms.length - 1; j >= 0; j--) {\n                if (parms[j].id == o.id) {\n                    parm = parms[j];\n                    break;\n                }\n            }\n            if (null == parm) {\n                conditions.splice(i, 1);\n            } else {\n                o.name = parm.name;\n                if (parm.type == AniParmType.Float) {\n                    let num = Number(o.checkValue);\n                    if (isNaN(num)) {\n                        o.checkValue = 0;\n                    }\n                    num = Number(o.type);\n                    if (isNaN(num)) {\n                        o.type = 0;\n                    }\n                }\n\n\n            }\n\n\n        }\n\n\n\n        return conditions;\n\n\n    }\n\n\n\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\n        let nexts = state.soloTransitions;\n        let id: string = null;\n        if (nexts && 0 < nexts.length) {\n            id = nexts[0].id;\n        }\n\n        let defState: TypeAnimatorState = null;\n        if (null != id) {\n            defState = this.getStateByID(states, id);\n        }\n        if (null != defState && (null != defState.clip || null != defState.states)) {\n            return defState.name;\n        }\n\n        for (let i = states.length - 1; i >= 0; i--) {\n            if (states[i].clip) {\n                return states[i].name;\n            }\n        }\n\n\n        return null;\n\n    }\n\n\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\n        if (states) {\n            for (let i = states.length - 1; i >= 0; i--) {\n                if (states[i].id == id) {\n                    return states[i];\n                }\n            }\n        }\n        return null;\n    }\n\n}","/**\n * 动画更新模式\n */\nexport enum AnimatorUpdateMode {\n    /**正常更新。*/\n    Normal = 0,\n    /**低频率更新 */\n    LowFrame = 1,\n    /**不更新 */\n    UnScaleTime = 2\n}\n","\nimport { Stat } from \"../utils/Stat\";\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { Component } from \"./Component\";\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\nimport { Node } from \"../../laya/display/Node\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { Animation2DParm } from \"./Animation2DParm\";\nimport { AnimatorController2D } from \"./AnimatorController2D\";\nimport { AniParmType } from \"./AnimatorControllerParse\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\nimport { Animation2DEvent } from \"./Animation2DEvent\";\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\n\n/**\n * <code>Animator2D<code/>2D动画组件\n */\nexport class Animator2D extends Component {\n    /**@internal */\n    private _speed = 1;\n    /**@internal 更新模式*/\n    private _updateMode = AnimatorUpdateMode.Normal;\n    /**@internal 降低更新频率调整值*/\n    private _lowUpdateDelty = 20;\n    /**@internal */\n    private _isPlaying = true;\n    /**@internal */\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\n    /**@internal */\n    _parameters: Record<string, Animation2DParm>;\n    /**@internal */\n    _controllerLayers: AnimatorControllerLayer2D[];\n    /**@internal */\n    _controller: AnimatorController2D;\n\n    /**\n     * 实例化2D动画组件\n     */\n    constructor() {\n        super();\n        this._controllerLayers = [];\n        this._parameters = {};\n    }\n\n    /**\n     * 2D动画控制器\n     */\n    set controller(val: AnimatorController2D) {\n        this._controller = val;\n        if (val) {\n            val.updateTo(this);\n        }\n    }\n\n    get controller() {\n        return this._controller;\n    }\n\n    /**\n     * 动画参数\n     */\n    set parameters(val: Record<string, Animation2DParm>) {\n        this._parameters = val;\n    }\n\n    get parameters() {\n        return this._parameters;\n    }\n\n    /**\n     * 播放速度\n     */\n    set speed(num: number) {\n        this._speed = num;\n    }\n\n    get speed() {\n        return this._speed;\n    }\n\n    /**\n     * 是否正在播放中\n     */\n    get isPlaying() {\n        return this._isPlaying;\n    }\n\n    /**\n     * @internal\n     * @param animatorState \n     * @param playState \n     */\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\n        if (playState._finish) {\n            animatorState._eventExit();//派发播放完成的事件\n        }\n    }\n\n    /**\n     * 赋值Node数据\n     * @param stateInfo 动画状态\n     * @param additive 是否为addtive\n     * @param weight state权重\n     * @param isFirstLayer 是否是第一层\n     */\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, isFirstLayer: boolean, controllerLayer: AnimatorControllerLayer2D = null): void {\n        var realtimeDatas = stateInfo._realtimeDatas;\n        var nodes = stateInfo._clip!._nodes!;\n        for (var i = 0, n = nodes.count; i < n; i++) {\n            var node = nodes.getNodeByIndex(i);\n            var o = this.getOwner(node);\n            o && this._applyFloat(o, additive, weight, isFirstLayer, realtimeDatas[i]);\n        }\n    }\n\n    /**\n     * @internal\n     * @param o \n     * @param additive \n     * @param weight \n     * @param isFirstLayer \n     * @param data \n     */\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, isFirstLayer: boolean, data: string | number | boolean): void {\n        var pro = o.pro;\n        if (pro && pro.ower) {\n            if (additive && \"number\" == typeof data) {\n                pro.ower[pro.key] = pro.defVal + weight * data;\n            } else if (\"number\" == typeof data) {\n                pro.ower[pro.key] = weight * data;\n            } else {\n                pro.ower[pro.key] = data;\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * @param node \n     * @returns \n     */\n    private getOwner(node: KeyframeNode2D) {\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\n        if (this._ownerMap) {\n            ret = this._ownerMap.get(node);\n            if (ret) {\n                return ret;\n            }\n        }\n\n        var property = this.owner;\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\n            var ownPat = node.getOwnerPathByIndex(j);\n            if (\"\" == ownPat) {\n                continue;\n            } else {\n                property = property.getChildByName(ownPat);\n                if (!property)\n                    break;\n            }\n        }\n\n        ret = { ower: property };\n\n        if (property) {\n            var pobj: any = property;\n            var propertyCount = node.propertyCount;\n\n            if (1 == propertyCount) {\n                var pname = node.getPropertyByIndex(0);\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\n            } else {\n                for (var i = 0; i < propertyCount; i++) {\n                    var pname = node.getPropertyByIndex(i);\n\n                    if (i == propertyCount - 1 || null == pobj) {\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\n                        break;\n                    }\n\n                    if (null == pobj[pname] && property == pobj) {\n                        //有可能是组件,查找组件逻辑\n                        pobj = null;\n                        var classObj = ClassUtils.getClass(pname);\n                        if (classObj) {\n                            pobj = property.getComponent(classObj);\n                        }\n\n                    } else {\n                        pobj = pobj[pname];\n                    }\n                }\n            }\n\n        }\n        if (null == this._ownerMap) {\n            this._ownerMap = new Map();\n        }\n        this._ownerMap.set(node, ret);\n        return ret;\n\n\n    }\n\n    /**\n     * 更新clip数据\n     * @internal\n     */\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\n        var clip = animatorState._clip;\n        var clipDuration = clip!._duration;\n\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\n        var currentFrameIndices = animatorState._currentFrameIndices;\n        //var frontPlay = playStateInfo._frontPlay;\n        let frontPlay = true;\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\n    }\n\n    /**\n     * @internal\n     * @param animatorState \n     * @param playState \n     * @param elapsedTime \n     * @param loop \n     * @param layerIndex \n     * @returns \n     */\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\n\n        let isReplay = false;\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\n\n        var lastElapsedTime = playState._elapsedTime;\n\n        let pAllTime = playState._playAllTime;\n\n        playState._playAllTime += Math.abs(elapsedTime);\n\n        //动画播放总时间\n        elapsedTime = lastElapsedTime + elapsedTime;\n        //动画播放的上次总时间\n        playState._lastElapsedTime = lastElapsedTime;\n        playState._elapsedTime = elapsedTime;\n        var normalizedTime = elapsedTime / clipDuration;\n\n        let scale = 1;\n        if (animatorState.yoyo) {\n            scale = 2;\n        }\n\n        //总播放次数\n        let pTime = playState._playAllTime / (clipDuration * scale);\n\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\n            isReplay = true;\n        }\n\n        var playTime = normalizedTime % 1.0;\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n        playState._normalizedPlayTime = normalizedPlayTime;\n        playState._duration = clipDuration;\n\n        if (1 != scale) {\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\n            playTime = normalizedTime % 1.0;\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n\n            if (animatorState.yoyo) {\n                if (0.5 > normalizedPlayTime) {\n                    if (!playState._frontPlay) {\n                        if (0 > animatorState.speed) {\n                            playState._elapsedTime = animatorState.clipEnd;\n                            playState._normalizedPlayTime = animatorState.clipEnd;\n                        } else {\n                            playState._elapsedTime = animatorState.clipStart;\n                            playState._normalizedPlayTime = animatorState.clipStart;\n                        }\n                        playState._frontPlay = true;\n                    }\n                } else {\n                    if (playState._frontPlay) {\n                        playState._frontPlay = false;\n                        if (0 > animatorState.speed) {\n                            playState._elapsedTime = animatorState.clipStart;\n                            playState._normalizedPlayTime = animatorState.clipStart;\n                        } else {\n                            playState._elapsedTime = animatorState.clipEnd;\n                            playState._normalizedPlayTime = animatorState.clipEnd;\n                        }\n                    }\n                }\n            }\n        }\n\n        animatorState._eventStateUpdate(normalizedPlayTime);\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\n\n        if (!ret && isReplay) {\n            let absTime = playState._playAllTime / (clipDuration * scale);\n            if (0 < loop && loop <= absTime) {\n                playState._finish = true;\n\n                if (0 > animatorState.speed) {\n                    if (animatorState.yoyo) {\n                        playState._elapsedTime = animatorState.clipEnd;\n                        playState._normalizedPlayTime = animatorState.clipEnd;\n                    } else {\n                        playState._elapsedTime = animatorState.clipStart;\n                        playState._normalizedPlayTime = animatorState.clipStart;\n                    }\n                } else {\n                    if (animatorState.yoyo) {\n                        playState._elapsedTime = animatorState.clipStart;\n                        playState._normalizedPlayTime = animatorState.clipStart;\n                    } else {\n                        playState._elapsedTime = animatorState.clipEnd;\n                        playState._normalizedPlayTime = animatorState.clipEnd;\n                    }\n                }\n                return;\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * @param stateInfo \n     * @param playStateInfo \n     */\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\n        let clip = stateInfo._clip;\n        let events = clip!._animationEvents;\n\n        let clipDuration = clip!._duration;\n        let elapsedTime = playStateInfo._elapsedTime;\n        let time = elapsedTime % clipDuration;\n        let loopCount = Math.abs(Math.floor(elapsedTime / clipDuration) - Math.floor(playStateInfo._lastElapsedTime / clipDuration));//backPlay可能为负数\n\n        let frontPlay = playStateInfo._elapsedTime >= playStateInfo._lastElapsedTime;\n        if (playStateInfo._lastIsFront !== frontPlay) {\n            if (frontPlay)\n                playStateInfo._playEventIndex++;\n            else\n                playStateInfo._playEventIndex--;\n            playStateInfo._lastIsFront = frontPlay;\n        }\n        let preEventIndex = playStateInfo._playEventIndex;\n        if (frontPlay) {\n            let newEventIndex = this._eventScript(events, playStateInfo._playEventIndex, loopCount > 0 ? clipDuration : time, true);\n            (preEventIndex === playStateInfo._playEventIndex) && (playStateInfo._playEventIndex = newEventIndex);//这里打个补丁，在event中调用Play 需要重置eventindex，不能直接赋值\n            for (let i = 0, n = loopCount - 1; i < n; i++)\n                this._eventScript(events, 0, clipDuration, true);\n            (loopCount > 0 && time > 0) && (playStateInfo._playEventIndex = this._eventScript(events, 0, time, true));//if need cross loop,'time' must large than 0\n        } else {\n            let newEventIndex = this._eventScript(events, playStateInfo._playEventIndex, loopCount > 0 ? 0 : time, false);\n            (preEventIndex === playStateInfo._playEventIndex) && (playStateInfo._playEventIndex = newEventIndex);//这里打个补丁，在event中调用Play 需要重置eventindex，不能直接赋值\n            let eventIndex = events.length - 1;\n            for (let i = 0, n = loopCount - 1; i < n; i++)\n                this._eventScript(events, eventIndex, 0, false);\n            (loopCount > 0 && time > 0) && (playStateInfo._playEventIndex = this._eventScript(events, eventIndex, time, false));//if need cross loop,'time' must large than 0\n        }\n\n    }\n\n    /**\n     * @internal\n     */\n    private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean): number {\n        let scripts = this.owner.components;\n        if (front) {\n            for (let n = events.length; eventIndex < n; eventIndex++) {\n                let event = events[eventIndex];\n                if (event.time <= endTime) {\n                    for (let j = 0, m = scripts.length; j < m; j++) {\n                        let script = scripts[j];\n                        if (script._isScript()) {\n                            let fun: Function = (script as any)[event.eventName];\n                            (fun) && (fun.apply(script, event.params));\n                        }\n                    }\n                } else {\n                    break;\n                }\n            }\n        } else {\n            for (; eventIndex >= 0; eventIndex--) {\n                let event = events[eventIndex];\n                if (event.time >= endTime) {\n                    for (let j = 0, m = scripts.length; j < m; j++) {\n                        let script = scripts[j];\n                        if (script._isScript()) {\n                            let fun = (script as any)[event.eventName];\n                            (fun) && (fun.apply(script, event.params));\n                        }\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        return eventIndex;\n    }\n\n    /**\n     * 启用过渡\n     * @param layerindex \n     * @param transition \n     * @returns \n     */\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\n        if (!transition)\n            return false;\n        return this.crossFade(transition.destState.name, transition.transduration, layerindex, transition.transstartoffset);\n    }\n\n    /**\n     * @internal\n     * @param delta \n     * @returns \n     */\n    private _applyUpdateMode(delta: number): number {\n        let ret;\n        switch (this._updateMode) {\n            case AnimatorUpdateMode.Normal:\n                ret = delta;\n                break;\n            case AnimatorUpdateMode.LowFrame:\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\n                break;\n            case AnimatorUpdateMode.UnScaleTime:\n                ret = 0;\n                break;\n        }\n        return ret;\n    }\n\n    /**\n     * 播放动画\n     * @param name 动画名称\n     * @param layerIndex 层索引\n     * @param normalizedTime 归一化时间\n     * @returns \n     */\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\n        this._isPlaying = true;\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var defaultState = controllerLayer.defaultState;\n            if (!name && !defaultState)\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\n\n            var playStateInfo = controllerLayer._playStateInfo!;\n            var curPlayState = playStateInfo._currentState!;\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\n\n            if (!animatorState._clip)\n                return;\n\n\n\n            var clipDuration = animatorState._clip!._duration;\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\n\n            // this.resetDefOwerVal();\n            // playStateInfo._resetPlayState(0.0, calclipduration);\n            // if (curPlayState != animatorState) {\n            //     playStateInfo._currentState = animatorState;\n            // }\n            // controllerLayer._playType = 0;、\n\n            if (curPlayState !== animatorState) {\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n                else\n                    playStateInfo._resetPlayState(0.0, calclipduration);\n                (curPlayState !== null && curPlayState !== animatorState);\n                controllerLayer._playType = 0;\n                playStateInfo._currentState = animatorState;\n            } else {\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n                    controllerLayer._playType = 0;\n                }\n            }\n            animatorState._eventStart();\n\n\n\n\n\n\n        }\n        var scripts = animatorState._scripts!;\n        if (scripts) {\n            for (var i = 0, n = scripts.length; i < n; i++)\n                scripts[i].onStateEnter();\n        }\n    }\n\n    /**\n     * 停止播放动画\n     */\n    stop() {\n        this._isPlaying = false;\n    }\n\n    /**\n     * 帧循环\n     * @returns \n     */\n    onUpdate(): void {\n        if (!this._isPlaying) return;\n        var delta = this.owner.timer._delta / 1000.0;\n        delta = this._applyUpdateMode(delta);\n        if (0 == this.speed || 0 == delta) return;\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\n\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\n            var controllerLayer = this._controllerLayers[i];\n            if (!controllerLayer.enable)\n                continue;\n\n\n            var playStateInfo = controllerLayer._playStateInfo!;\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\n            switch (controllerLayer._playType) {\n                case 0:\n                    var animatorState = playStateInfo._currentState!;\n                    var speed = this._speed * animatorState.speed;\n                    var finish = playStateInfo._finish;\n\n                    var loop = animatorState.loop;\n                    if (-1 >= loop) {\n                        var clip = animatorState._clip!;\n                        if (clip.islooping) {\n                            loop = 0;\n                        } else {\n                            loop = 1;\n                        }\n                    }\n\n                    let dir = 1;\n                    if (!playStateInfo._frontPlay) {\n                        dir = -1;\n                    }\n\n\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\n                    if (needRender) {\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\n                        finish || this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, i == 0, controllerLayer);\n                        finish || this._updateEventScript(animatorState, playStateInfo)\n                    }\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * 添加控制器层。\n     */\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\n        this._controllerLayers.push(controllderLayer);\n    }\n\n    /**\n     * 在当前动画状态和目标动画状态之间进行融合过渡播放。\n     * @param\tname 目标动画状态。\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\n     * @param\tlayerIndex 层索引。\n     * @param\tnormalizedTime 归一化的播放起始时间。\n     */\n    crossFade(name: string, transitionDuration: number, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var destAnimatorState = controllerLayer.getStateByName(name);\n            if (destAnimatorState) {\n\n                this.play(name, layerIndex, normalizedTime);\n                return true;\n\n            }\n            else {\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    onAfterDeserialize(): void {\n        let arr = (<any>this).controllerLayers;\n        if (!arr || null != this.controller)\n            return;\n        delete (<any>this).controllerLayers;\n        this._controllerLayers.length = 0;\n        for (let layer of arr) {\n            this.addControllerLayer(layer);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    onEnable() {\n        if (this._isPlaying) {\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\n                if (this._controllerLayers[i].playOnWake) {\n                    var defaultClip = this.getDefaultState(i);\n                    (defaultClip) && (this.play(null, i));\n                }\n            }\n        }\n    }\n\n    /**\n     * 默认状态机\n     * @param layerIndex \n     * @returns \n     */\n    getDefaultState(layerIndex = 0) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        return controllerLayer.defaultState;\n    }\n\n    /**\n     * 设置参数Trigger值\n     * @param name 名字\n     */\n    setParamsTrigger(name: string) {\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\n    }\n\n    /**\n     * 设置参数Number值\n     * @param name 名字\n     * @param value 值\n     */\n    setParamsNumber(name: string, value: number) {\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\n    }\n\n    /**\n     * 设置参数Bool值\n     * @param name 名字\n     * @param value 值\n     */\n    setParamsBool(name: string, value: boolean) {\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\n    }\n\n    /**\n     * 得到参数值\n     * @param name 名字\n     * @returns \n     */\n    getParamsvalue(name: number) {\n        let parm = this._parameters[name];\n        if (parm) {\n            return parm.value;\n        }\n        return null;\n    }\n\n    /**\n     * @internal\n     */\n    onDestroy() {\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\n            this._controllerLayers[i].destroy();\n        this._controllerLayers.length = 0;\n        this._isPlaying = false;\n        this._parameters = null;\n    }\n}","import { AnimatorStateScript } from \"../d3/animation/AnimatorStateScript\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { IClone } from \"../utils/IClone\";\nimport { Animation2DParm } from \"./Animation2DParm\";\nimport { AnimationClip2D } from \"./AnimationClip2D\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\n\n/**\n * <code>Animator</code> 类用于创建动画组件。\n */\nexport class AnimatorState2D extends EventDispatcher implements IClone {\n    /**@internal */\n    static EVENT_OnStateEnter = \"OnStartEnter\";\n\n    /**@internal */\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\n\n    /**@internal */\n    static EVENT_OnStateExit = \"OnStateExit\";\n\n    /** @internal */\n    private _referenceCount = 0;\n\n    /** @internal */\n    _clip: AnimationClip2D | null = null;\n\n    /**@internal */\n    _currentFrameIndices: Int16Array | null = null;\n\n    /**\n     * 名称\n     */\n    name: string;\n\n    /**\n     * 动画播放速度\n     */\n    speed = 1.0;\n\n    /**\n     * 动作播放起始时间。\n     */\n    clipStart = 0.0;\n\n    /**\n     * 动作播放结束时间。\n     */\n    clipEnd = 1.0;\n\n    /**\n     *  动画循环次数，-1或者小于-1为使用clip的循环状态，1为播放一次，2为播放2次，0为无限循环\n     */\n    loop = -1;\n\n    /**\n     * 是否为一次正播放，一次倒播放模式 \n     */\n    yoyo = false;\n\n    /**@internal 过渡列表*/\n    transitions: AnimatorTransition2D[] = [];\n\n    /**@internal 优先过渡列表only play this transition */\n    soloTransitions: AnimatorTransition2D[] = [];\n\n    /**@internal */\n    _scripts: AnimatorStateScript[] | null = null;\n\n    /**@internal */\n    _realtimeDatas: Array<number | string | boolean> = [];\n\n    /**\n     * 动作。\n     */\n    get clip(): AnimationClip2D | null {\n        return this._clip;\n    }\n\n    set clip(value: AnimationClip2D | null) {\n        if (this._clip != value) {\n            if (this._clip)\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\n            if (value) {\n                var clipNodes = value._nodes!;\n                var count = clipNodes.count;\n                this._currentFrameIndices = new Int16Array(count);\n                this._resetFrameIndices();\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\n                this._realtimeDatas.length = count;\n            }\n            this._clip = value;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _eventStateUpdate(value: number) {\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\n        if (this._scripts) {\n            for (var i = 0, n = this._scripts.length; i < n; i++)\n                this._scripts[i].onStateUpdate(value);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _eventStart() {\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\n        if (this._scripts) {\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++)\n                this._scripts[i].onStateEnter();\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _eventExit() {\n        this.event(AnimatorState2D.EVENT_OnStateExit);\n        if (this._scripts) {\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\n                this._scripts[i].onStateExit();\n            }\n        }\n    }\n\n    /**\n     * 派发过渡事件\n     * @internal\n     * @param normalizeTime \n     * @param paramsMap \n     */\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\n        let soloNums = this.soloTransitions.length;\n        if (soloNums > 0) {\n            for (var i = 0; i < soloNums; i++) {\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\n                    return this.soloTransitions[i];\n            }\n            return null;\n        }\n        let transNums = this.transitions.length;\n        for (var i = 0; i < transNums; i++) {\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\n                return this.transitions[i];\n        }\n        return null;\n    }\n    \n    /**\n     * @internal\n     */\n    _resetFrameIndices(): void {\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\n            this._currentFrameIndices![i] = -1;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    _getReferenceCount(): number {\n        return this._referenceCount;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _addReference(count: number): void {\n        (this._clip) && (this._clip._addReference(count));\n        this._referenceCount += count;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _removeReference(count: number): void {\n        (this._clip) && (this._clip._removeReference(count));\n        this._referenceCount -= count;\n    }\n\n    /**\n     * @internal\n     */\n    _clearReference(): void {\n        this._removeReference(-this._referenceCount);\n    }\n\n    /**\n     * 添加脚本。\n     * @param\ttype  组件类型。\n     * @return 脚本。\n     */\n    addScript(type: typeof AnimatorStateScript): AnimatorStateScript {\n        var script: AnimatorStateScript = new type();\n        this._scripts = this._scripts || [];\n        this._scripts.push(script);\n        return script;\n    }\n\n    /**\n     * 获取脚本。\n     * @param\ttype  组件类型。\n     * @return 脚本。\n     */\n    getScript(type: typeof AnimatorStateScript): AnimatorStateScript | null {\n        if (this._scripts) {\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\n                var script: AnimatorStateScript = this._scripts[i];\n                if (script instanceof type)\n                    return script;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 获取脚本集合。\n     * @param\ttype  组件类型。\n     * @return 脚本集合。\n     */\n    getScripts(type: typeof AnimatorStateScript): AnimatorStateScript[] | null {\n        var coms: AnimatorStateScript[] | null = null;\n        if (this._scripts) {\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\n                var script: AnimatorStateScript = this._scripts[i];\n                if (script instanceof type) {\n                    coms = coms || [];\n                    coms.push(script);\n                }\n            }\n        }\n        return coms;\n    }\n\n    /**\n     * 克隆\n     * @returns \n     */\n    clone() {\n        var dest: AnimatorState2D = new AnimatorState2D();\n        this.cloneTo(dest);\n        return dest;\n    }\n\n    /**\n     * 拷贝到目标\n     * @param destObject 目标节点\n     */\n    cloneTo(destObject: any): void {\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\n        dest.name = this.name;\n        dest.speed = this.speed;\n        dest.clip = this._clip;\n    }\n\n    /**\n     * 删除\n     */\n    destroy() {\n        this._clip = null;\n        this._currentFrameIndices = null;\n        this._scripts = null;\n        //this.nexts = null;\n        this._realtimeDatas.length = 0;\n    }\n\n}","import { Keyframe2D } from \"./KeyFrame2D\";\n\nexport class KeyframeNode2D {\n    _ownerPath: string[] = [];\n    _propertys: string[] = [];\n    fullPath: string;\n    nodePath: string;\n    _indexInList: number;\n\n\n\n    _keyFrames: Keyframe2D[] = [];\n    /**\n    * 帧个数。\n    */\n    get keyFramesCount(): number {\n        return this._keyFrames.length;\n    }\n    _setOwnerPathCount(value: number) {\n        this._ownerPath.length = value;\n    }\n    _setOwnerPathByIndex(index: number, value: string) {\n        this._ownerPath[index] = value;\n    }\n    _setPropertyCount(value: number) {\n        this._propertys.length = value;\n    }\n    _setPropertyByIndex(index: number, value: string) {\n        this._propertys[index] = value;\n    }\n    _setKeyframeCount(value: number) {\n        this._keyFrames.length = value;\n    }\n\n    _joinOwnerPath(sep: string): string {\n        return this._ownerPath.join(sep);\n    }\n    _joinProperty(sep: string): string {\n        return this._propertys.join(sep);\n    }\n\n    /**\n    * 通过索引获取帧。\n    * @param index 索引。\n    */\n    getKeyframeByIndex(index: number): Keyframe2D {\n        return this._keyFrames[index];\n    }\n    /**\n    * 精灵路径个数。\n    */\n    get ownerPathCount(): number {\n        return this._ownerPath.length;\n    }\n    /**\n     * 属性路径个数。\n     */\n    get propertyCount(): number {\n        return this._propertys.length;\n    }\n\n    /**\n     * 通过索引获取精灵路径。\n     * @param index 索引。\n     */\n    getOwnerPathByIndex(index: number): string {\n        return this._ownerPath[index];\n    }\n    /**\n     * 通过索引获取属性路径。\n     * @param index 索引。\n     */\n    getPropertyByIndex(index: number): string {\n        return this._propertys[index];\n    }\n\n\n}","import { IClone } from \"../utils/IClone\";\n\nexport interface TypeAniKey {\n    /**第几帧 */\n    f: number,\n    val: number | string | boolean,\n    /**目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... */\n    tweenType?: string,\n    /**扩展，如果有一些其它数据需要加入到关键帧中可以写在这里 */\n    extend?: any,\n    /**tween的信息 */\n    tweenInfo?: TypeTweenInfo,\n}\n\nexport interface TypeTweenInfo {\n    outTangent?: number,\n    outWeight?: number,\n    inTangent?: number,\n    inWeight?: number,\n    inWeightLock?: boolean,\n    outWeightLock?: boolean,\n    broken?: boolean,\n}\n\nexport class Keyframe2D implements IClone {\n    static defaultWeight = 0.33333;\n    /**时间。*/\n    time: number;\n    /**帧里面的具体数据 */\n    data: TypeAniKey;\n\n\n\n    clone() {\n        var dest = new Keyframe2D();\n        this.cloneTo(dest);\n        return dest;\n    }\n    cloneTo(destObject: any): void {\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\n        destKeyFrame.time = this.time;\n    }\n\n}","/**\n * <code>Animation2DEvent</code> 类用于实现动画事件。\n */\nexport class Animation2DEvent {\n    /** 事件触发时间。*/\n    time: number;\n    /** 事件触发名称。*/\n    eventName: string;\n    /** 事件触发参数。*/\n    params: any[];\n\n    /**\n     * 创建一个 <code>Animation2DEvent</code> 实例。\n     */\n    constructor() {\n    }\n\n}\n","import { AnimationClip2D } from \"./AnimationClip2D\";\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\nimport { Keyframe2D } from \"./KeyFrame2D\";\nimport { Animation2DEvent } from \"./Animation2DEvent\";\nimport { Byte } from \"../utils/Byte\";\n\n/**\n * <code>AnimationClip2DParse01</code>\n * AnimationClip资源解析\n */\nexport class AnimationClip2DParse01 {\n    \n    /**@internal */\n    private static _clip: AnimationClip2D | null;\n    /**@internal */\n    private static _reader: Byte | null;\n    /**@internal */\n    private static _version: string | null;\n    /**@internal */\n    private static _strings: string[] = [];\n    /**@internal */\n    private static _DATA = { offset: 0, size: 0 };\n    /**@internal */\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\n\n    /**\n     * @internal\n     */\n    private static READ_DATA() {\n        this._DATA.offset = this._reader!.getUint32();\n        this._DATA.size = this._reader!.getUint32();\n    }\n\n    /**\n     * @internal\n     */\n    private static READ_BLOCK() {\n        var count = this._BLOCK.count = this._reader!.getUint16();\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(this._reader!.getUint32());\n            blockLengths.push(this._reader!.getUint32());\n        }\n    }\n    \n    /**\n     * @internal\n     */\n    private static READ_STRINGS() {\n        var offset = this._reader!.getUint32();\n        var count = this._reader!.getUint16();\n        var prePos = this._reader!.pos;\n        this._reader!.pos = offset + this._DATA.offset;\n\n        for (var i = 0; i < count; i++)\n            this._strings[i] = this._reader!.readUTFString();\n        this._reader!.pos = prePos;\n    }\n\n    /**\n     * @internal\n     * @param clip \n     * @param reader \n     * @param version \n     */\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\n        this._clip = clip;\n        this._reader = reader;\n        this._version = version;\n        this.READ_DATA();\n        this.READ_BLOCK();\n        this.READ_STRINGS();\n\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\n            var index = reader.getUint16();\n            var blockName = this._strings[index];\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\n            if (!fn) {\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\n            }\n            else\n                fn.call(this);\n        }\n\n        this._version = null;\n        this._reader = null;\n        this._clip = null;\n        this._strings.length = 0;\n\n    }\n\n    /**\n     * @internal\n     * @param second \n     * @param fps \n     * @returns \n     */\n    private static timeToFrame(second: number, fps: number): number {\n        return Math.round(second * fps);\n    }\n\n    /**\n     * @internal\n     */\n    static READ_ANIMATIONS2D(): void {\n        var i: number, j: number;\n\n        var reader = this._reader!;\n        var clip = this._clip!;\n        var node: KeyframeNode2D;\n\n        var numList: number[] = [];\n        var numCount = reader.getUint16();\n        numList.length = numCount;\n        for (i = 0; i < numCount; i++) {\n            numList[i] = reader.getFloat32();\n        }\n\n        var clipDur = clip._duration = numList[reader.getInt16()];\n        clip.islooping = !!reader.getByte();\n        clip._frameRate = reader.getInt16();\n        var nodeCount = reader.getInt16();\n\n        var nodes = clip._nodes!;\n        nodes.count = nodeCount;\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\n\n        for (i = 0; i < nodeCount; i++) {\n            node = new KeyframeNode2D();\n            nodes.setNodeByIndex(i, node);\n            node._indexInList = i;\n\n            var pathLength = reader.getUint16();\n            node._setOwnerPathCount(pathLength);\n\n            for (j = 0; j < pathLength; j++) {\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\n            }\n            var nodePath = node._joinOwnerPath(\"/\");\n            var mapArray = nodesMap[nodePath];\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\n            mapArray.push(node);\n\n\n            var propertyLength = reader.getUint16();\n            node._setPropertyCount(propertyLength);\n            for (j = 0; j < propertyLength; j++) {\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\n            }\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\n            nodesDic[fullPath] = node;\n            node.fullPath = fullPath;\n            node.nodePath = nodePath;\n\n            var keyframeCount = reader.getUint16();\n            //node._setKeyframeCount(keyframeCount);\n            for (j = 0; j < keyframeCount; j++) {\n                var k = new Keyframe2D();\n                k.time = numList[reader.getUint16()];\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\n\n                if (1 == reader.getByte()) {\n                    k.data.tweenType = this._strings[reader.getUint16()];\n                }\n\n                if (1 == reader.getByte()) {\n                    k.data.tweenInfo = {};\n\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\n\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\n                    //     if (0 > k.data.tweenInfo.inTangent) {\n                    //         k.data.tweenInfo.inTangent *= -1;\n                    //     }\n                    // }\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\n                    //     if (0 > k.data.tweenInfo.outTangent) {\n                    //         k.data.tweenInfo.outTangent *= -1;\n                    //     }\n                    // }\n\n\n                    if (1 == reader.getByte()) {\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\n                    }\n\n                    if (1 == reader.getByte()) {\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\n                    }\n                }\n                var num = reader.getByte();\n                if (0 == num) {\n                    k.data.val = numList[reader.getUint16()];\n                } else if (1 == num) {\n                    k.data.val = this._strings[reader.getUint16()];\n                } else if (2 == num) {\n                    k.data.val = !!reader.getByte();\n                }\n\n                if (1 == reader.getByte()) {\n                    try {\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\n                    } catch (err) { }\n                }\n                node._keyFrames.push(k);\n            }\n        }\n        var eventCount = reader.getUint16();\n        for (i = 0; i < eventCount; i++) {\n            var event = new Animation2DEvent();\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\n            event.time = numList[reader.getUint16()];\n            event.eventName = this._strings[reader.getUint16()];\n            var params: Array<number | string | boolean> = [];\n            var paramCount: number = reader.getUint16();\n            (paramCount > 0) && (event.params = params = []);\n\n            for (j = 0; j < paramCount; j++) {\n                var eventType: number = reader.getByte();\n                switch (eventType) {\n                    case 0:\n                        params.push(!!reader.getByte());\n                        break;\n                    case 1:\n                        params.push(reader.getInt32());\n                        break;\n                    case 2:\n                        params.push(numList[reader.getUint16()]);\n                        break;\n                    case 3:\n                        params.push(this._strings[reader.getUint16()]);\n                        break;\n                    default:\n                        throw new Error(\"unknown type.\");\n                }\n            }\n            clip.addEvent(event);\n        }\n\n    }\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\n\nexport class KeyframeNodeList2D {\n    private _nodes: KeyframeNode2D[] = [];\n    /**\n    *\t节点个数。\n    */\n    get count(): number {\n        return this._nodes.length;\n    }\n    set count(value: number) {\n        this._nodes.length = value;\n    }\n    /**\n     * 通过索引获取节点。\n     * @param\tindex 索引。\n     * @return 节点。\n     */\n    getNodeByIndex(index: number): KeyframeNode2D {\n        return this._nodes[index];\n    }\n\n    /**\n     * 通过索引设置节点。\n     * @param\tindex 索引。\n     * @param 节点。\n     */\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\n        this._nodes[index] = node;\n    }\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\nimport { Keyframe2D } from \"./KeyFrame2D\";\nimport { Animation2DEvent } from \"./Animation2DEvent\";\nimport { Resource } from \"../resource/Resource\";\nimport { Byte } from \"../utils/Byte\";\n\nexport class AnimationClip2D extends Resource {\n\n    /**\n     * @internal\n     * @param data \n     * @returns \n     */\n    static _parse(data: ArrayBuffer): AnimationClip2D {\n        var clip = new AnimationClip2D();\n        var reader = new Byte(data);\n        var version = reader.readUTFString();\n        switch (version) {\n            case \"LAYAANIMATION2D:01\":\n                AnimationClip2DParse01.parse(clip, reader, version);\n                break;\n            default:\n                throw \"unknown animationClip version.\";\n        }\n        return clip;\n    }\n\n    /**\n     * 动画补帧函数\n     */\n    static tween = {\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t + b;\n        },\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return -c * (t /= d) * (t - 2) + b;\n        },\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        },\n\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t * t + b;\n        },\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t * t * t + b;\n        },\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t * t * t * t + b;\n        },\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n        },\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\n        },\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n        },\n\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n        },\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n        },\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if (t == 0) return b;\n            if (t == d) return b + c;\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n        },\n\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n        },\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n        },\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n        },\n\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n        },\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\n        },\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\n        },\n\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\n            if (s == undefined) s = 1.70158;\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\n            if (s == undefined) s = 1.70158;\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\n            if (s == undefined) s = 1.70158;\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n        },\n\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\n        },\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d) < (1 / 2.75)) {\n                return c * (7.5625 * t * t) + b;\n            } else if (t < (2 / 2.75)) {\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\n            } else if (t < (2.5 / 2.75)) {\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\n            } else {\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\n            }\n        },\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        },\n\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\n                if (0 > outTangent || 0 < inTangent) return startValue;\n                return startValue;\n            }\n            var t2 = t * t;\n            var t3 = t2 * t;\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n            var b = t3 - 2.0 * t2 + t;\n            var c = t3 - t2;\n            var d = -2.0 * t3 + 3.0 * t2;\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _frameRate: number;\n\n    /**\n     * @internal\n     */\n    _duration: number;\n\n    /**\n     * @internal\n     */\n    _animationEvents: Animation2DEvent[];\n\n    /**\n     * @internal\n     */\n    _nodesDic: Record<string, KeyframeNode2D>;\n\n    /**\n     * @internal\n     */\n    _nodesMap: Record<string, KeyframeNode2D[]>;\n\n    /**\n     * @internal\n     */\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\n\n    /**\n     * 是否循环\n     */\n    islooping: boolean;\n\n    /**\n     * 实例化一个2D动画clip类\n     */\n    constructor() {\n        super();\n        this._animationEvents = [];\n    }\n\n    /**\n     * 动画时长\n     * @returns \n     */\n    duration() {\n        return this._duration;\n    }\n\n\n\n    /**\n     * @internal\n     * @param playCurTime \n     * @param realTimeCurrentFrameIndexes \n     * @param addtive \n     * @param frontPlay \n     * @param outDatas \n     */\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\n        var nodes = this._nodes;\n        for (var i = 0, n = nodes.count; i < n; i++) {\n            var node = nodes.getNodeByIndex(i);\n            var nextFrameIndex;\n            var keyFrames = node._keyFrames;\n            var keyFramesCount = keyFrames.length;\n            var frameIndex = realTimeCurrentFrameIndexes[i];\n            if (frontPlay) {\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\n                    frameIndex = -1;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n\n                nextFrameIndex = frameIndex + 1;\n                while (nextFrameIndex < keyFramesCount) {\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\n                        break;\n                    frameIndex++;\n                    nextFrameIndex++;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n            } else {\n                nextFrameIndex = frameIndex + 1;\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\n                    frameIndex = keyFramesCount - 1;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n\n                nextFrameIndex = frameIndex + 1;\n                while (frameIndex > -1) {\n                    if (keyFrames[frameIndex].time < playCurTime)\n                        break;\n                    frameIndex--;\n                    nextFrameIndex--;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n\n            }\n            var isEnd = nextFrameIndex == keyFramesCount;\n\n            if (-1 != frameIndex) {\n                var frame = keyFrames[frameIndex];\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\n                    outDatas[i] = frame.data.val;\n                } else {\n                    var nextFarme = keyFrames[nextFrameIndex];\n                    var d = nextFarme.time - frame.time;\n                    var t;\n                    if (d !== 0)\n                        t = (playCurTime - frame.time) / d;\n                    else\n                        t = 0;\n\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\n                }\n            } else {\n                outDatas[i] = keyFrames[0].data.val;\n            }\n\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\n            }\n\n        }\n    }\n\n    /**\n     * @internal\n     * @param frame \n     * @param nextFrame \n     * @param t \n     * @param dur \n     * @returns \n     */\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\n        var start = frame.data;\n        var end = nextFrame.data;\n\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\n            return start.val;\n        }\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\n        var poval = start.val as number;\n        var oval = end.val as number;\n\n        //var t = (x - s.cx) / (e.cx - s.cx);\n        if (null != tweenFun) {\n            return tweenFun(t, poval, oval - poval, 1);\n        }\n\n        var outTangent = 0;\n        var inTangent = 0;\n\n        var outWeight = NaN;\n        var inWeight = NaN;\n\n        if (null != start.tweenInfo) {\n            outTangent = start.tweenInfo.outTangent;\n            outWeight = start.tweenInfo.outWeight;\n        }\n        if (null != end.tweenInfo) {\n            inTangent = end.tweenInfo.inTangent;\n            inWeight = end.tweenInfo.inWeight;\n        }\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\n        if (isNaN(outTangent)) outTangent = 0;\n        if (isNaN(inTangent)) inTangent = 0;\n\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\n            if (0 > outTangent) {\n                outTangent = -Infinity;\n            } else {\n                outTangent = Infinity;\n            }\n        }\n\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\n            if (0 > inTangent) {\n                inTangent = -Infinity;\n            } else {\n                inTangent = Infinity;\n            }\n        }\n\n        var tnum: number;\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\n            //var dur = nextFrameTime - startFrameTime;\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\n        } else {\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\n        }\n        return tnum;\n    }\n\n    /**\n     * @internal\n     * @param time \n     * @returns \n     */\n    private _binarySearchEventIndex(time: number): number {\n        var start = 0;\n        var end = this._animationEvents.length - 1;\n        var mid;\n        while (start <= end) {\n            mid = (start + end) >> 1;\n            var midValue = this._animationEvents[mid].time;\n            if (midValue == time)\n                return mid;\n            else if (midValue > time)\n                end = mid - 1;\n            else\n                start = mid + 1;\n        }\n        return start;\n    }\n\n    /**\n     * hermite插值算法\n     * @param frameValue 上一帧值\n     * @param frametime 上一帧事件\n     * @param frameOutWeight 上一帧权重\n     * @param frameOutTangent 上一帧切线\n     * @param nextframeValue 下一帧值\n     * @param nextframetime 下一帧时间\n     * @param nextframeInweight 下一帧权重\n     * @param nextframeIntangent 下一帧切线\n     * @param time 时间\n     * @returns \n     */\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\n        let Eps = 2.22e-16;\n\n        let x = time;\n        let x1 = frametime;\n        let y1 = frameValue;\n        let wt1 = frameOutWeight;\n        let x2 = nextframetime;\n        let y2 = nextframeValue;\n        let wt2 = nextframeInweight;\n\n        let dx = x2 - x1;\n        let dy = y2 - y1;\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\n\n        let yp1 = frameOutTangent;\n        let yp2 = nextframeIntangent;\n\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\n            return frameValue;\n        }\n\n        yp1 = yp1 * dx / dy;\n        yp2 = yp2 * dx / dy;\n\n        let wt2s = 1 - wt2;\n\n        let t = 0.5;\n        let t2 = 0;\n\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\n            t = x;\n            t2 = 1 - t;\n        }\n        else {\n            while (true) {\n                t2 = (1 - t);\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\n                if (Math.abs(fg) <= 2.5 * Eps)\n                    break;\n\n                // third order householder method\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\n\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\n            }\n        }\n\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\n\n        return y * dy + y1;\n    }\n\n\n    /**\n     * 添加动画事件。\n     * @param event 动画事件\n     */\n    addEvent(event: Animation2DEvent): void {\n        var index = this._binarySearchEventIndex(event.time);\n        this._animationEvents.splice(index, 0, event);\n    }\n\n\n\n}","import { AniParmType } from \"./AnimatorControllerParse\";\n\nexport class Animation2DParm {\n    name: string;\n    type: AniParmType;\n    value: boolean | number;\n}","\n/**\n * 动画条件类型\n */\nexport enum AniConditionType {\n    /**\n     * 大于\n     */\n    Greater,\n    /**\n     * 小于\n     */\n    Less,\n    /**\n     * 等于\n     */\n    Equals,\n    /**\n     * 不等于\n     */\n    NotEqual,//不等于\n}\n\n/**\n * 2D动画类型\n */\nexport class Animation2DCondition {\n    /**\n     * id编号\n     */\n    id: number;\n    /**\n     * 动画条件\n     */\n    type: AniConditionType;\n    /**\n     * 检测值\n     */\n    checkValue: any\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\n\nexport class AnimatorStateCondition {\n    /**\n     * @internal\n     */\n    static _conditionNameMap: any = {};\n\n    /**\n     * @internal\n     */\n    static _propertyNameCounter: number = 0;\n\n    /**\n     * 通过名称获得唯一ID。\n     * @param name Shader属性名称。\n     * @return 唯一ID。\n     */\n    static conditionNameToID(name: string): number {\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\n            return AnimatorStateCondition._conditionNameMap[name];\n        } else {\n            var id: number = this._propertyNameCounter++;\n            this._conditionNameMap[name] = id;\n            this._conditionNameMap[id] = name;\n            return id;\n        }\n    }\n\n    /**\n     * 通过ID获得唯一名称。\n     * @param id \n     * @returns \n     */\n    static conditionIDToName(id: number): string {\n        return this._conditionNameMap[id];\n    }\n\n    /**\n     * @internal 状态条件类型\n     */\n    protected _type: AniStateConditionType;\n\n    /**\n     * @internal\n     */\n    private _id: number;\n\n    /**\n     * @intenral\n     */\n    private _name: string;\n\n    /**\n     * 状态机过渡条件\n     */\n    constructor(name: string = null) {\n        if (!name) return;\n        this._id = AnimatorStateCondition.conditionNameToID(name);\n        this._name = name;\n    }\n\n    /**\n     * 唯一ID\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * 名称\n     */\n    get name() {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._id = AnimatorStateCondition.conditionNameToID(value);\n        this._name = value\n    }\n\n    /**\n     * 条件类型\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * 检查状态是否触发\n     * @param value \n     * @returns \n     */\n    checkState(value: number | boolean): boolean {\n        return false;\n    }\n}\n\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\n    /**\n     * @internal\n     */\n    private _numberValue: number;\n\n    /**\n     * @internal\n     */\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\n\n    /**\n     * 创建number比较条件类\n     * @param name \n     */\n    constructor(name: string) {\n        super(name);\n        this._numberValue = 0;\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\n        this._type = AniStateConditionType.Number;\n    }\n\n    /**\n     * number值\n     */\n    get numberValue() {\n        return this._numberValue;\n    }\n\n    set numberValue(value: number) {\n        this._numberValue = value;\n    }\n\n    /**\n     * 判断类型\n     */\n    get compareFlag() {\n        return this._numberCompareFlag;\n    }\n\n    set compareFlag(value: AniStateConditionNumberCompressType) {\n        this._numberCompareFlag = value;\n    }\n\n    /**\n     * 检查状态是否触发\n     * @param value \n     * @returns \n     */\n    checkState(value: number): boolean {\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\n            return value > this._numberValue;\n        else\n            return value < this._numberValue;\n    }\n}\n\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\n    /**\n     * @internal\n     */\n    private _compareFlag: boolean;\n\n    /**\n     * 创建bool比较条件类\n     * @param name \n     */\n    constructor(name: string) {\n        super(name);\n        this._compareFlag = true;\n        this._type = AniStateConditionType.Bool;\n    }\n\n    /**\n     * 判断类型 \n     */\n    get compareFlag() {\n        return this._compareFlag;\n    }\n\n    set compareFlag(value: boolean) {\n        this._compareFlag = value;\n    }\n\n    /**\n     * 检查状态是否触发\n     * @param value \n     * @returns \n     */\n    checkState(value: boolean): boolean {\n        return this._compareFlag == value;\n    }\n}\n\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\n    /**\n     * 创建trigger比较条件类\n     * @param name \n     */\n    constructor(name: string) {\n        super(name);\n        this._type = AniStateConditionType.Trigger;\n    }\n\n    /**\n     * 检查状态是否触发,tigger 如果是true,就算条件达成\n     * @param value \n     * @returns \n     */\n    checkState(value: boolean): boolean {\n        return value;\n    }\n}","import { Animation2DParm } from \"./Animation2DParm\";\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\n\nexport class AnimatorTransition2D {\n    mute: boolean;\n    exitTime: number;//退出时间\n    exitByTime: boolean;//是否设置生效时间\n    transstartoffset: number;//归一化的时间的下一个state播放位置\n    transduration: number;//归一化过度时间 TODO 0-1\n    conditions: AnimatorStateCondition[];//\n    destState: AnimatorState2D;\n    /**\n     * 创建一个新的Animatortransition2D\n     */\n    constructor() {\n        this.conditions = [];\n        this.exitByTime = true;\n        this.exitTime = 1;\n        this.transduration = 0;\n        this.transstartoffset = 0;\n        this.mute = false;\n    }\n\n    /**\n     * 增加一个条件\n     * @param condition \n     */\n     addCondition(condition: AnimatorStateCondition): void {\n        if (this.conditions.indexOf(condition) == -1) {\n            this.conditions.push(condition);\n        }\n    }\n\n    /**\n     * 删除一个条件\n     * @param condition \n     */\n    removeCondition(condition: AnimatorStateCondition): void {\n        let index = this.conditions.indexOf(condition);\n        if (index != -1) {\n            this.conditions.splice(index, 0);\n        }\n    }\n\n    /**\n    * 是否启用过渡\n    * @param normalizeTime \n    * @param paramsMap \n    */\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\n        if (this.mute) {\n            return false;\n        }\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\n            return false;\n        }\n        if (null == this.conditions || 0 == this.conditions.length) {\n            return true;\n        }\n        for (var i = 0; i < this.conditions.length; i++) {\n            let con = this.conditions[i];\n\n            let out = con.checkState(paramsMap[con.name].value);\n            if (out) {\n                if (con.type == AniStateConditionType.Trigger) {\n                    paramsMap[con.name].value = false;\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n}","import { Resource } from \"../resource/Resource\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { Animation2DParm } from \"./Animation2DParm\";\nimport { Animator2D } from \"./Animator2D\";\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\n\n/**\n * <code>2D动画控制器<code/>\n */\nexport class AnimatorController2D extends Resource {\n    /**\n     * @internal\n     */\n    data: TypeAnimatorControllerData;\n    \n    /**\n     * @internal\n     */\n    clipsID: string[];\n\n    /**\n     * 实例化2D动画控制器\n     * @param data \n     */\n    constructor(data: any) {\n        super();\n        let obj = AnimatorControllerParse.parse(data);\n        this.data = obj.ret;\n        this.clipsID = obj.clipsID;\n    }\n    \n    /**\n     * @internal\n     * @returns \n     */\n    private getLayers() {\n        let layers = this.data.controllerLayers;\n        let lArr: AnimatorControllerLayer2D[] = [];\n        for (let i = layers.length - 1; i >= 0; i--) {\n            let l = layers[i];\n            let acl = new AnimatorControllerLayer2D(l.name);\n            lArr.unshift(acl);\n\n\n            for (let k in l) {\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\n                    continue;\n                }\n                try {\n                    (acl as any)[k] = (l as any)[k];\n                } catch (err: any) { }\n            }\n            this.getState(l.states, acl, this.data);\n\n        }\n        return lArr;\n    }\n\n    /**\n     * @internal\n     * @param states \n     * @param idCatch \n     * @param acl \n     * @returns \n     */\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\n        if (!states) return null;\n        let ret: Record<string, AnimatorState2D> = {};\n        let defID: string = null;\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n            let childStates = obj.states;\n            if (childStates) {\n                let groupRet = this.createState(childStates, idCatch, acl);\n                if (groupRet) {\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\n                }\n                continue;\n            }\n\n            if (0 > Number(obj.id)) {\n                if (\"-1\" == obj.id) {\n                    let transitions = obj.soloTransitions;\n                    if (transitions && 0 < transitions.length) {\n                        defID = transitions[0].id;\n                    }\n                }\n                continue;\n            }\n\n            let state = new AnimatorState2D();\n            idCatch[obj.id] = state;\n            ret[obj.id] = state;\n            for (let k in obj) {\n                try {\n                    if (\"scripts\" == k) {\n                        let scripts: string[] = obj[k];\n                        if (scripts && Array.isArray(scripts)) {\n                            for (let k = scripts.length - 1; k >= 0; k--) {\n                                let uuid = scripts[k];\n                                let c = ClassUtils.getClass(uuid);\n                                if (c) {\n                                    state.addScript(c);\n                                }\n                            }\n                        }\n                        continue;\n                    } else if (\"soloTransitions\" == k) {\n                        continue;\n                    } else if (null != (obj as any)[k]) {\n                        (state as any)[k] = (obj as any)[k];\n                    }\n                } catch (err: any) { }\n            }\n\n            acl.addState(state);\n        }\n        return { id: defID, states: ret };\n    }\n\n    /**\n     * @internal\n     * @param states \n     * @param acl \n     * @param data \n     */\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\n        //let ret:\n        if (states) {\n            let idCatch: Record<string, AnimatorState2D> = {};\n            this.createState(states, idCatch, acl);\n            this.setTransitions(states, idCatch, acl, data);\n        }\n    }\n\n    /**\n     * @internal\n     * @param exitRet \n     * @param transitions \n     * @param idCatch \n     * @param data \n     * @param pExitRet \n     */\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\n        for (let id in exitRet) {\n            let state = idCatch[id];\n            if (state) {\n\n                let ats: AnimatorTransition2D[] = state.transitions;\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\n\n                let linArr = exitRet[id];\n                for (let i = transitions.length - 1; i >= 0; i--) {\n                    let t = transitions[i];\n                    if (\"-3\" == t.id) {\n                        if (null == pExitRet[id]) {\n                            pExitRet[id] = [];\n                        }\n                        pExitRet[id].push(t);\n                        continue;\n                    }\n\n\n                    for (let j = linArr.length - 1; j >= 0; j--) {\n                        let t2 = linArr[j];\n\n\n                        let ato = new AnimatorTransition2D();\n                        ato.destState = idCatch[t.id];\n\n                        if (t.conditions) {\n                            this.addConditions(t.conditions, ato, data);\n                        }\n\n                        if (t2.conditions) {\n                            this.addConditions(t2.conditions, ato, data);\n                        }\n\n\n                        for (let k in t) {\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                                continue;\n                            } else {\n                                (ato as any)[k] = (t as any)[k];\n                            }\n                        }\n\n                        if (t.solo) {\n                            sts.unshift(ato);\n                        } else {\n                            ats.unshift(ato);\n                        }\n\n\n\n                    }\n                }\n\n\n\n\n\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * @param states \n     * @param idCatch \n     * @param acl \n     * @param data \n     * @param pState \n     * @returns \n     */\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\n        if (!states) return null;\n\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\n\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n\n            if (obj.states) {\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\n                if (exitTransition) {\n                    let transitions = obj.soloTransitions;\n                    if (transitions) {\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\n                    }\n                }\n            }\n        }\n\n\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n\n            if (obj.states) {\n                continue;\n            }\n\n\n\n\n            if (\"-1\" == obj.id) {\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\n                    if (null == pState) {\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\n                    } else {\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\n                    }\n                    continue;\n                }\n            } else if (\"-2\" == obj.id) {\n                let transitions = obj.soloTransitions;\n                if (transitions) {\n                    for (let j = transitions.length - 1; j >= 0; j--) {\n                        let o = transitions[j];\n                        let destState = idCatch[o.id];\n                        if (destState) {\n                            for (let idk in idCatch) {\n                                let state = idCatch[idk];\n                                let ato = new AnimatorTransition2D();\n                                ato.destState = destState;\n                                if (o.conditions) {\n                                    this.addConditions(o.conditions, ato, data);\n                                }\n\n                                for (let k in o) {\n                                    if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                                        continue;\n                                    } else {\n                                        (ato as any)[k] = (o as any)[k];\n                                    }\n                                }\n\n                                if (o.solo) {\n                                    state.soloTransitions.unshift(ato);\n                                } else {\n                                    state.transitions.unshift(ato);\n                                }\n\n\n\n\n                            }\n                        }\n\n                    }\n                }\n                continue;\n            } else if (\"-3\" == obj.id) {\n                continue;\n            }\n\n            let soloTransitions = obj.soloTransitions;\n            if (soloTransitions && idCatch[obj.id]) {\n\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\n\n\n\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\n                    let o = soloTransitions[j];\n                    if (\"-3\" == o.id) {\n                        if (null == exitRet[obj.id]) {\n                            exitRet[obj.id] = [];\n                        }\n                        exitRet[obj.id].push(o);\n                        continue;\n                    }\n\n                    let ato = new AnimatorTransition2D();\n\n                    if (idCatch[o.id]) {\n                        ato.destState = idCatch[o.id];\n                    }\n                    if (o.conditions) {\n                        this.addConditions(o.conditions, ato, data);\n                    }\n\n\n                    for (let k in o) {\n                        if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                            continue;\n                        } else {\n                            (ato as any)[k] = (o as any)[k];\n                        }\n                    }\n                    if (o.solo) {\n                        sts.unshift(ato);\n                    } else {\n                        ats.unshift(ato);\n                    }\n                }\n            }\n\n\n        }\n\n        return exitRet;\n    }\n\n    /**\n     * @internal\n     * @param arr \n     * @param ato \n     * @param data \n     * @returns \n     */\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\n        let parms = data.animatorParams;\n        if (null == parms || 0 == parms.length) return;\n        for (let i = 0, len = arr.length; i < len; i++) {\n            let o = arr[i];\n            let parm: TypeAnimatorParams = null;\n            for (let j = parms.length - 1; j >= 0; j--) {\n                if (parms[j].id == o.id) {\n                    parm = parms[j];\n                    break;\n                }\n            }\n            if (null == parm) {\n                return;\n            }\n            let c: AnimatorStateCondition;\n            if (parm.type == AniParmType.Bool) {\n                let b = new AnimatorStateBoolCondition(o.name);\n                b.compareFlag = Boolean(o.checkValue);\n                c = b;\n            } else if (parm.type == AniParmType.Float) {\n                let n = new AnimatorStateNumberCondition(o.name);\n                n.numberValue = Number(o.checkValue);\n                n.compareFlag = o.type;\n                c = n;\n            } else if (parm.type == AniParmType.Trigger) {\n                let t = new AnimatorStateTriggerCondition(o.name);\n                c = t;\n            }\n\n\n            ato.addCondition(c);\n        }\n    }\n\n    /**\n     * @internal\n     * @param a \n     */\n    updateTo(a: Animator2D) {\n        let currLayer = (a as any)._controllerLayers;\n\n        for (let i = 0, len = currLayer.length; i < len; i++) {\n            currLayer[i].destroy();\n        }\n        currLayer.length = 0;\n\n        let layers = this.getLayers();\n        for (let i = 0, len = layers.length; i < len; i++) {\n            a.addControllerLayer(layers[i]);\n        }\n\n        let parms = this.data.animatorParams;\n        if (parms) {\n            let setParm: Record<string, Animation2DParm> = {};\n            for (let i = parms.length - 1; i >= 0; i--) {\n                let p = parms[i];\n                let sp = new Animation2DParm();\n                sp.name = p.name;\n                sp.type = p.type;\n                sp.value = p.val;\n                setParm[p.name] = sp;\n            }\n            a.parameters = setParm;\n        }\n\n\n\n    }\n}","import { Vector3 } from \"./Vector3\";\nimport { Quaternion } from \"./Quaternion\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { IClone } from \"../utils/IClone\";\n\nconst _tempVector0 = new Vector3();\nconst _tempVector1 = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempVector3 = new Vector3();\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/**\n * <code>Matrix4x4</code> 类用于创建4x4矩阵。\n */\nexport class Matrix4x4 implements IClone {\n    /**@internal */\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\n    /**@internal */\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\n\n    /**默认矩阵,禁止修改*/\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\n    /**默认矩阵,禁止修改*/\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\n    /**\n     * 绕X轴旋转\n     * @param\trad  旋转角度\n     * @param\tout 输出矩阵\n     */\n    static createRotationX(rad: number, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\n        oe[0] = oe[15] = 1;\n        oe[5] = oe[10] = c;\n        oe[6] = s;\n        oe[9] = -s;\n    }\n\n    /**\n     *\n     * 绕Y轴旋转\n     * @param\trad  旋转角度\n     * @param\tout 输出矩阵\n     */\n    static createRotationY(rad: number, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\n        oe[5] = oe[15] = 1;\n        oe[0] = oe[10] = c;\n        oe[2] = -s;\n        oe[8] = s;\n    }\n\n    /**\n     * 绕Z轴旋转\n     * @param\trad  旋转角度\n     * @param\tout 输出矩阵\n     */\n    static createRotationZ(rad: number, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\n        oe[10] = oe[15] = 1;\n        oe[0] = oe[5] = c;\n        oe[1] = s;\n        oe[4] = -s;\n    }\n\n    /**\n     * 通过yaw pitch roll旋转创建旋转矩阵。\n     * @param\tyaw\n     * @param\tpitch\n     * @param\troll\n     * @param\tresult\n     */\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\n    }\n\n    /**\n     * 通过旋转轴axis和旋转角度angle计算旋转矩阵。\n     * @param\taxis 旋转轴,假定已经归一化。\n     * @param\tangle 旋转角度。\n     * @param\tresult 结果矩阵。\n     */\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\n        var x: number = axis.x;\n        var y: number = axis.y;\n        var z: number = axis.z;\n        var cos: number = Math.cos(angle);\n        var sin: number = Math.sin(angle);\n        var xx: number = x * x;\n        var yy: number = y * y;\n        var zz: number = z * z;\n        var xy: number = x * y;\n        var xz: number = x * z;\n        var yz: number = y * z;\n\n        var resultE: Float32Array = result.elements;\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\n        resultE[15] = 1.0;\n        resultE[0] = xx + (cos * (1.0 - xx));\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\n        resultE[5] = yy + (cos * (1.0 - yy));\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\n        resultE[10] = zz + (cos * (1.0 - zz));\n    }\n\n    /**\n     * 通过四元数创建旋转矩阵。\n     * @param\trotation 旋转四元数。\n     * @param\tresult 输出旋转矩阵\n     */\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\n        var resultE: Float32Array = result.elements;\n        var rotationX: number = rotation.x;\n        var rotationY: number = rotation.y;\n        var rotationZ: number = rotation.z;\n        var rotationW: number = rotation.w;\n\n        var xx: number = rotationX * rotationX;\n        var yy: number = rotationY * rotationY;\n        var zz: number = rotationZ * rotationZ;\n        var xy: number = rotationX * rotationY;\n        var zw: number = rotationZ * rotationW;\n        var zx: number = rotationZ * rotationX;\n        var yw: number = rotationY * rotationW;\n        var yz: number = rotationY * rotationZ;\n        var xw: number = rotationX * rotationW;\n\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\n        resultE[15] = 1.0;\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\n        resultE[1] = 2.0 * (xy + zw);\n        resultE[2] = 2.0 * (zx - yw);\n        resultE[4] = 2.0 * (xy - zw);\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\n        resultE[6] = 2.0 * (yz + xw);\n        resultE[8] = 2.0 * (zx + yw);\n        resultE[9] = 2.0 * (yz - xw);\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\n    }\n\n    /**\n     * 根据平移计算输出矩阵\n     * @param\ttrans  平移向量\n     * @param\tout 输出矩阵\n     */\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\n        oe[12] = trans.x;\n        oe[13] = trans.y;\n        oe[14] = trans.z;\n    }\n\n    /**\n     * 根据缩放计算输出矩阵\n     * @param\tscale  缩放值\n     * @param\tout 输出矩阵\n     */\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        oe[0] = scale.x;\n        oe[5] = scale.y;\n        oe[10] = scale.z;\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\n        oe[15] = 1;\n    }\n\n    /**\n     * 计算两个矩阵的乘法\n     * @param\tleft left矩阵\n     * @param\tright  right矩阵\n     * @param\tout  输出矩阵\n     */\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\n        var l: Float32Array = right.elements;\n        var r: Float32Array = left.elements;\n        var e: Float32Array = out.elements;\n\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\n\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\n\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\n    }\n\n    /**\n     * 从四元数计算旋转矩阵\n     * @param\trotation 四元数\n     * @param\tout 输出矩阵\n     */\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\n        var e: Float32Array = out.elements;\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\n        var x2: number = x + x;\n        var y2: number = y + y;\n        var z2: number = z + z;\n\n        var xx: number = x * x2;\n        var yx: number = y * x2;\n        var yy: number = y * y2;\n        var zx: number = z * x2;\n        var zy: number = z * y2;\n        var zz: number = z * z2;\n        var wx: number = w * x2;\n        var wy: number = w * y2;\n        var wz: number = w * z2;\n\n        e[0] = 1 - yy - zz;\n        e[1] = yx + wz;\n        e[2] = zx - wy;\n        e[3] = 0;\n\n        e[4] = yx - wz;\n        e[5] = 1 - xx - zz;\n        e[6] = zy + wx;\n        e[7] = 0;\n\n        e[8] = zx + wy;\n        e[9] = zy - wx;\n        e[10] = 1 - xx - yy;\n        e[11] = 0;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = 0;\n        e[15] = 1;\n    }\n\n    /**\n     * 计算仿射矩阵\n     * @param\ttrans 平移\n     * @param\trot 旋转\n     * @param\tscale 缩放\n     * @param\tout 输出矩阵\n     */\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\n\n        oe[0] = (1 - (yy + zz)) * sx;\n        oe[1] = (xy + wz) * sx;\n        oe[2] = (xz - wy) * sx;\n        oe[3] = 0;\n        oe[4] = (xy - wz) * sy;\n        oe[5] = (1 - (xx + zz)) * sy;\n        oe[6] = (yz + wx) * sy;\n        oe[7] = 0;\n        oe[8] = (xz + wy) * sz;\n        oe[9] = (yz - wx) * sz;\n        oe[10] = (1 - (xx + yy)) * sz;\n        oe[11] = 0;\n        oe[12] = trans.x;\n        oe[13] = trans.y;\n        oe[14] = trans.z;\n        oe[15] = 1;\n    }\n\n    /**\n     * 计算观察矩阵\n     * @param\teye 视点位置\n     * @param\ttarget 视点目标\n     * @param\tup 向上向量\n     * @param\tout 输出矩阵\n     */\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\n        var oE: Float32Array = out.elements;\n        var xaxis: Vector3 = _tempVector0;\n        var yaxis: Vector3 = _tempVector1;\n        var zaxis: Vector3 = _tempVector2;\n        Vector3.subtract(eye, target, zaxis);\n        Vector3.normalize(zaxis, zaxis);\n        Vector3.cross(up, zaxis, xaxis);\n        Vector3.normalize(xaxis, xaxis);\n        Vector3.cross(zaxis, xaxis, yaxis);\n\n        oE[3] = oE[7] = oE[11] = 0;\n        oE[15] = 1;\n        oE[0] = xaxis.x;\n        oE[4] = xaxis.y;\n        oE[8] = xaxis.z;\n        oE[1] = yaxis.x;\n        oE[5] = yaxis.y;\n        oE[9] = yaxis.z;\n        oE[2] = zaxis.x;\n        oE[6] = zaxis.y;\n        oE[10] = zaxis.z;\n\n        oE[12] = -Vector3.dot(xaxis, eye);\n        oE[13] = -Vector3.dot(yaxis, eye);\n        oE[14] = -Vector3.dot(zaxis, eye);\n    }\n\n    /**\n     * 通过FOV创建透视投影矩阵。\n     * @param\tfov  视角。\n     * @param\taspect 横纵比。\n     * @param\tnear 近裁面。\n     * @param\tfar 远裁面。\n     * @param\tout 输出矩阵。\n     */\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\n        var xScale: number = yScale / aspect;\n\n        var halfWidth: number = znear / xScale;\n        var halfHeight: number = znear / yScale;\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\n    }\n\n    /**\n     * 创建透视投影矩阵。\n     * @param\tleft 视椎左边界。\n     * @param\tright 视椎右边界。\n     * @param\tbottom 视椎底边界。\n     * @param\ttop 视椎顶边界。\n     * @param\tznear 视椎近边界。\n     * @param\tzfar 视椎远边界。\n     * @param\tout 输出矩阵。\n     */\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n        var zRange: number = zfar / (zfar - znear);\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\n        oe[0] = 2.0 * znear / (right - left);\n        oe[5] = 2.0 * znear / (top - bottom);\n        oe[8] = (left + right) / (right - left);\n        oe[9] = (top + bottom) / (top - bottom);\n        oe[10] = -zRange;\n        oe[11] = -1.0;\n        oe[14] = -znear * zRange;\n    }\n\n    /**\n     * 计算正交投影矩阵。\n     * @param\tleft 视椎左边界。\n     * @param\tright 视椎右边界。\n     * @param\tbottom 视椎底边界。\n     * @param\ttop 视椎顶边界。\n     * @param\tnear 视椎近边界。\n     * @param\tfar 视椎远边界。\n     * @param\tout 输出矩阵。\n     */\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        var zRange: number = 1.0 / (zfar - znear);\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\n        oe[15] = 1;\n        oe[0] = 2.0 / (right - left);\n        oe[5] = 2.0 / (top - bottom);\n        oe[10] = -zRange;\n        oe[12] = (left + right) / (left - right);\n        oe[13] = (top + bottom) / (bottom - top);\n        oe[14] = -znear * zRange;\n    }\n\n    /**矩阵元素数组*/\n    elements: Float32Array;\n\n    /**\n     * 创建一个 <code>Matrix4x4</code> 实例。\n     * @param\t4x4矩阵的各元素\n     */\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\n        if (arguments.length == 0) {\n            this.elements = DEFAULTARRAY.slice();\n            return;\n        }\n        if (arguments.length === 1 && arguments[0] === null)\n            return;\n\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\n        e[0] = m11;\n        e[1] = m12;\n        e[2] = m13;\n        e[3] = m14;\n        e[4] = m21;\n        e[5] = m22;\n        e[6] = m23;\n        e[7] = m24;\n        e[8] = m31;\n        e[9] = m32;\n        e[10] = m33;\n        e[11] = m34;\n        e[12] = m41;\n        e[13] = m42;\n        e[14] = m43;\n        e[15] = m44;\n    }\n\n    /**\n     * @internal\n     * @param row \n     * @param column \n     * @returns \n     */\n    getElementByRowColumn(row: number, column: number): number {\n        if (row < 0 || row > 3)\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\n        if (column < 0 || column > 3)\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\n\n        return this.elements[(row * 4) + column];\n    }\n\n    /**\n     * @internal\n     * @param row \n     * @param column \n     * @param value \n     */\n    setElementByRowColumn(row: number, column: number, value: number): void {\n        if (row < 0 || row > 3)\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\n        if (column < 0 || column > 3)\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\n\n        this.elements[(row * 4) + column] = value;\n    }\n\n       /**\n     * 四元数生成矩阵\n     * @param rotation \n     */\n       setRotation(rotation: Quaternion): void {\n        var rotationX: number = rotation.x;\n        var rotationY: number = rotation.y;\n        var rotationZ: number = rotation.z;\n        var rotationW: number = rotation.w;\n\n        var xx: number = rotationX * rotationX;\n        var yy: number = rotationY * rotationY;\n        var zz: number = rotationZ * rotationZ;\n        var xy: number = rotationX * rotationY;\n        var zw: number = rotationZ * rotationW;\n        var zx: number = rotationZ * rotationX;\n        var yw: number = rotationY * rotationW;\n        var yz: number = rotationY * rotationZ;\n        var xw: number = rotationX * rotationW;\n\n        var e: Float32Array = this.elements;\n        e[0] = 1.0 - (2.0 * (yy + zz));\n        e[1] = 2.0 * (xy + zw);\n        e[2] = 2.0 * (zx - yw);\n        e[4] = 2.0 * (xy - zw);\n        e[5] = 1.0 - (2.0 * (zz + xx));\n        e[6] = 2.0 * (yz + xw);\n        e[8] = 2.0 * (zx + yw);\n        e[9] = 2.0 * (yz - xw);\n        e[10] = 1.0 - (2.0 * (yy + xx));\n    }\n\n    /**\n     * 位置\n     * @param position \n     */\n    setPosition(position: Vector3): void {\n        var e: Float32Array = this.elements;\n        e[12] = position.x;\n        e[13] = position.y;\n        e[14] = position.z;\n    }\n\n\n    /**\n     * 判断两个4x4矩阵的值是否相等。\n     * @param\tother 4x4矩阵\n     */\n    equalsOtherMatrix(other: Matrix4x4): boolean {\n        var e: Float32Array = this.elements;\n        var oe: Float32Array = other.elements;\n\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\n    }\n\n    /**\n     * 分解矩阵为平移向量、旋转四元数、缩放向量。\n     * @param\ttranslation 平移向量。\n     * @param\trotation 旋转四元数。\n     * @param\tscale 缩放向量。\n     * @return 是否分解成功。\n     */\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\n            return true;\n        } else {\n            rotation.identity();\n            return false;\n        }\n    }\n\n    /**\n     * 分解矩阵为平移向量、旋转矩阵、缩放向量。\n     * @param\ttranslation 平移向量。\n     * @param\trotationMatrix 旋转矩阵。\n     * @param\tscale 缩放向量。\n     * @return 是否分解成功。\n     */\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\n        var e: Float32Array = this.elements;\n        var te: Vector3 = translation;\n        var re: Float32Array = rotationMatrix.elements;\n        var se: Vector3 = scale;\n\n        //Get the translation. \n        te.x = e[12];\n        te.y = e[13];\n        te.z = e[14];\n\n        //Scaling is the length of the rows. \n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\n\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\n\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\n            re[0] = re[5] = re[10] = re[15] = 1;\n            return false;\n        }\n\n        // Calculate an perfect orthonormal matrix (no reflections)\n        var at: Vector3 = _tempVector0;\n        at.x = m31 / sZ;\n        at.y = m32 / sZ;\n        at.z = m33 / sZ;\n        var tempRight: Vector3 = _tempVector1;\n        tempRight.x = m11 / sX;\n        tempRight.y = m12 / sX;\n        tempRight.z = m13 / sX;\n        var up: Vector3 = _tempVector2;\n        Vector3.cross(at, tempRight, up);\n        var right: Vector3 = _tempVector1;\n        Vector3.cross(up, at, right);\n\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\n        re[15] = 1;\n        re[0] = right.x;\n        re[1] = right.y;\n        re[2] = right.z;\n\n        re[4] = up.x;\n        re[5] = up.y;\n        re[6] = up.z;\n\n        re[8] = at.x;\n        re[9] = at.y;\n        re[10] = at.z;\n\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\n\n        return true;\n    }\n\n    /**\n     * 分解旋转矩阵的旋转为YawPitchRoll欧拉角。\n     * @param\tout float yaw\n     * @param\tout float pitch\n     * @param\tout float roll\n     * @return\n     */\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\n        var pitch: number = Math.asin(-this.elements[9]);\n        yawPitchRoll.y = pitch;\n        // Hardcoded constant - burn him, he's a witch\n        // double threshold = 0.001; \n        var test: number = Math.cos(pitch);\n        if (test > MathUtils3D.zeroTolerance) {\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\n        } else {\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\n            yawPitchRoll.x = 0.0;\n        }\n    }\n\n    /**\n     * 归一化矩阵 \n     */\n    normalize(): void {\n        var v: Float32Array = this.elements;\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\n        if (g) {\n            if (g == 1)\n                return;\n        } else {\n            v[0] = 0;\n            v[1] = 0;\n            v[2] = 0;\n            return;\n        }\n        g = 1 / g;\n        v[0] = c * g;\n        v[1] = d * g;\n        v[2] = e * g;\n    }\n\n    /**\n     * 计算矩阵的转置矩阵\n     */\n    transpose(): Matrix4x4 {\n        var e: Float32Array, t: number;\n        e = this.elements;\n        t = e[1];\n        e[1] = e[4];\n        e[4] = t;\n        t = e[2];\n        e[2] = e[8];\n        e[8] = t;\n        t = e[3];\n        e[3] = e[12];\n        e[12] = t;\n        t = e[6];\n        e[6] = e[9];\n        e[9] = t;\n        t = e[7];\n        e[7] = e[13];\n        e[13] = t;\n        t = e[11];\n        e[11] = e[14];\n        e[14] = t;\n        return this;\n    }\n\n    /**\n     * 计算一个矩阵的逆矩阵\n     * @param\tout 输出矩阵\n     */\n    invert(out: Matrix4x4): void {\n\n        var ae: Float32Array = this.elements;\n        var oe: Float32Array = out.elements;\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\n\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\n\n            // Calculate the determinant \n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n        if (Math.abs(det) === 0.0) {\n            return;\n        }\n        det = 1.0 / det;\n\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    }\n\n    /**\n     * 计算BlillBoard矩阵\n     * @param\tobjectPosition 物体位置\n     * @param\tcameraPosition 相机位置\n     * @param\tcameraUp       相机上向量\n     * @param\tcameraForward  相机前向量\n     * @param\tmat            变换矩阵\n     */\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\n\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\n\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\n\n        if (MathUtils3D.isZero(lengthSq)) {\n            Vector3.scale(cameraForward, -1, _tempVector1);\n            _tempVector1.cloneTo(_tempVector0);\n        } else {\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\n        }\n\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\n        Vector3.normalize(_tempVector2, _tempVector2);\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\n\n        var crosse: Vector3 = _tempVector2;\n        var finale: Vector3 = _tempVector3;\n        var diffee: Vector3 = _tempVector0;\n        var obpose: Vector3 = objectPosition;\n\n        var mate: Float32Array = mat.elements;\n        mate[0] = crosse.x;\n        mate[1] = crosse.y;\n        mate[2] = crosse.z;\n        mate[3] = 0.0;\n        mate[4] = finale.x;\n        mate[5] = finale.y;\n        mate[6] = finale.z;\n        mate[7] = 0.0;\n        mate[8] = diffee.x;\n        mate[9] = diffee.y;\n        mate[10] = diffee.z;\n        mate[11] = 0.0;\n        mate[12] = obpose.x;\n        mate[13] = obpose.y;\n        mate[14] = obpose.z;\n        mate[15] = 1.0;\n    }\n\n    /**\n     * 归一化\n     */\n    identity(): void {\n        /*\n        var e: Float32Array = this.elements;\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\n        e[0] = e[5] = e[10] = e[15] = 1;\n        */\n        this.elements.set(DEFAULTARRAY);\n    }\n\n    /**判断是否是单位矩阵 */\n    isIdentity(): boolean {\n        let delty = function (num0: number, num1: number) {\n            return Math.abs(num0 - num1) < 1e-7;\n        }\n        let e = this.elements;\n        let defined = Matrix4x4.DEFAULT.elements;\n        for (let i = 0, n = e.length; i < n; i++) {\n            if (!delty(e[i], defined[i]))\n                return false;\n        }\n        return true;\n\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var i: number, s: Float32Array, d: Float32Array;\n        s = this.elements;\n        d = destObject.elements;\n        if (s === d) {\n            return;\n        }\n        destObject.elements.set(this.elements);\n        /*for (i = 0; i < 16; ++i) {\n            d[i] = s[i];\n        }*/\n    }\n\n    /**\n     * 克隆\n     * @param destObject \n     */\n    cloneByArray(destObject: Float32Array) {\n        this.elements.set(destObject);\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Matrix4x4 = new Matrix4x4(null);\n        dest.elements = this.elements.slice();\n        return dest;\n    }\n\n    static translation(v3: Vector3, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\n        oe[12] = v3.x;\n        oe[13] = v3.y;\n        oe[14] = v3.z;\n    }\n\n    /**\n     * 获取平移向量。\n     * @param\tout 平移向量。\n     */\n    getTranslationVector(out: Vector3): void {\n        var me: Float32Array = this.elements;\n        out.x = me[12];\n        out.y = me[13];\n        out.z = me[14];\n    }\n\n    /**\n     * 设置平移向量。\n     * @param\ttranslate 平移向量。\n     */\n    setTranslationVector(translate: Vector3): void {\n        var me: Float32Array = this.elements;\n        var ve: Vector3 = translate;\n        me[12] = ve.x;\n        me[13] = ve.y;\n        me[14] = ve.z;\n    }\n\n    /**\n     * 获取前向量。\n     * @param\tout 前向量。\n     */\n    getForward(out: Vector3): void {\n        var me: Float32Array = this.elements;\n        out.x = -me[8];\n        out.y = -me[9];\n        out.z = -me[10];\n    }\n\n    /**\n     * 设置前向量。\n     * @param\tforward 前向量。\n     */\n    setForward(forward: Vector3): void {\n        var me: Float32Array = this.elements;\n        me[8] = -forward.x;\n        me[9] = -forward.y;\n        me[10] = -forward.z;\n    }\n\n    /**\n     * 判断此矩阵是否是反向矩阵\n     */\n    getInvertFront(): boolean {\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\n        var scale: Vector3 = _tempVector1;\n        var isInvert: boolean = scale.x < 0;\n        (scale.y < 0) && (isInvert = !isInvert);\n        (scale.z < 0) && (isInvert = !isInvert);\n        return isInvert;\n    }\n}\n\nconst _tempMatrix4x4 = new Matrix4x4();","import { Vector3 } from \"./Vector3\";\nimport { Vector2 } from \"./Vector2\";\nimport { Matrix4x4 } from \"./Matrix4x4\";\nimport { Quaternion } from \"./Quaternion\";\nimport { IClone } from \"../utils/IClone\";\n\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst _tempV30 = new Vector3();\nconst _tempV31 = new Vector3();\nconst _tempV32 = new Vector3();\n\n/**\n * <code>Matrix3x3</code> 类用于创建3x3矩阵。\n */\nexport class Matrix3x3 implements IClone {\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\n\n    /**\n     * 通过四元数创建旋转矩阵。\n     * @param rotation 旋转四元数。\n     * @param out 旋转矩阵。\n     */\n\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\n        var rotX: number = rotation.x;\n        var rotY: number = rotation.y;\n        var rotZ: number = rotation.z;\n        var rotW: number = rotation.w;\n\n        var xx: number = rotX * rotX;\n        var yy: number = rotY * rotY;\n        var zz: number = rotZ * rotZ;\n        var xy: number = rotX * rotY;\n        var zw: number = rotZ * rotW;\n        var zx: number = rotZ * rotX;\n        var yw: number = rotY * rotW;\n        var yz: number = rotY * rotZ;\n        var xw: number = rotX * rotW;\n\n        var resultE: Float32Array = out.elements;\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\n        resultE[1] = 2.0 * (xy + zw);\n        resultE[2] = 2.0 * (zx - yw);\n        resultE[3] = 2.0 * (xy - zw);\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\n        resultE[5] = 2.0 * (yz + xw);\n        resultE[6] = 2.0 * (zx + yw);\n        resultE[7] = 2.0 * (yz - xw);\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\n    }\n\n    /**\n     * 根据指定平移生成3x3矩阵\n     * @param\ttra 平移\n     * @param\tout 输出矩阵\n     */\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        e[0] = 1;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n        e[4] = 1;\n        e[5] = 0;\n        e[6] = trans.x;\n        e[7] = trans.y;\n        e[8] = 1;\n    }\n\n    /**\n     * 根据指定旋转生成3x3矩阵\n     * @param\trad  旋转值\n     * @param\tout 输出矩阵\n     */\n    static createFromRotation(rad: number, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        e[0] = c;\n        e[1] = s;\n        e[2] = 0;\n\n        e[3] = -s;\n        e[4] = c;\n        e[5] = 0;\n\n        e[6] = 0;\n        e[7] = 0;\n        e[8] = 1;\n    }\n\n    /**\n     * 根据制定缩放生成3x3矩阵\n     * @param\tscale 缩放值\n     * @param\tout 输出矩阵\n     */\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n\n        e[0] = scale.x;\n        e[1] = 0;\n        e[2] = 0;\n\n        e[3] = 0;\n        e[4] = scale.y;\n        e[5] = 0;\n\n        e[6] = 0;\n        e[7] = 0;\n        e[8] = scale.z;\n    }\n\n    /**\n     * 从4x4矩阵转换为一个3x3的矩阵（原则为upper-left,忽略第四行四列）\n     * @param\tsou 4x4源矩阵\n     * @param\tout 3x3输出矩阵\n     */\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\n        var souE: Float32Array = sou.elements;\n        var outE: Float32Array = out.elements;\n        outE[0] = souE[0];\n        outE[1] = souE[1];\n        outE[2] = souE[2];\n        outE[3] = souE[4];\n        outE[4] = souE[5];\n        outE[5] = souE[6];\n        outE[6] = souE[8];\n        outE[7] = souE[9];\n        outE[8] = souE[10];\n    }\n\n    /**\n     *  两个3x3矩阵的相乘\n     * @param\tleft 左矩阵\n     * @param\tright  右矩阵\n     * @param\tout  输出矩阵\n     */\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\n        var l: Float32Array = left.elements;\n        var r: Float32Array = right.elements;\n        var e: Float32Array = out.elements;\n\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\n\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\n\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\n\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\n\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\n    }\n\n    /**矩阵元素数组*/\n    elements: Float32Array;\n\n    /**\n     * 创建一个 <code>Matrix3x3</code> 实例。\n     */\n    constructor(createElement: boolean = true) {\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\n    }\n\n    /**\n     * 计算3x3矩阵的行列式\n     * @return    矩阵的行列式\n     */\n    determinant(): number {\n        var f: Float32Array = this.elements;\n\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\n\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n    }\n\n    /**\n     * 通过一个二维向量转换3x3矩阵\n     * @param\ttra 转换向量\n     * @param\tout 输出矩阵\n     */\n    translate(trans: Vector2, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\n        var x: number = trans.x, y: number = trans.y;\n\n        e[0] = a00;\n        e[1] = a01;\n        e[2] = a02;\n\n        e[3] = a10;\n        e[4] = a11;\n        e[5] = a12;\n\n        e[6] = x * a00 + y * a10 + a20;\n        e[7] = x * a01 + y * a11 + a21;\n        e[8] = x * a02 + y * a12 + a22;\n    }\n\n    /**\n     * 根据指定角度旋转3x3矩阵\n     * @param\trad 旋转角度\n     * @param\tout 输出矩阵\n     */\n    rotate(rad: number, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\n\n        var s: number = Math.sin(rad);\n        var c: number = Math.cos(rad);\n\n        e[0] = c * a00 + s * a10;\n        e[1] = c * a01 + s * a11;\n        e[2] = c * a02 + s * a12;\n\n        e[3] = c * a10 - s * a00;\n        e[4] = c * a11 - s * a01;\n        e[5] = c * a12 - s * a02;\n\n        e[6] = a20;\n        e[7] = a21;\n        e[8] = a22;\n    }\n\n    /**\n     *根据制定缩放3x3矩阵\n     * @param\tscale 缩放值\n     * @param\tout 输出矩阵\n     */\n    scale(scale: Vector2, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        var x: number = scale.x, y: number = scale.y;\n\n        e[0] = x * f[0];\n        e[1] = x * f[1];\n        e[2] = x * f[2];\n\n        e[3] = y * f[3];\n        e[4] = y * f[4];\n        e[5] = y * f[5];\n\n        e[6] = f[6];\n        e[7] = f[7];\n        e[8] = f[8];\n    }\n\n    /**\n     * 计算3x3矩阵的逆矩阵\n     * @param\tout 输出的逆矩阵\n     */\n    invert(out: Matrix3x3): void {\n        var e = out.elements;\n        var f = this.elements;\n\n        var a00 = f[0], a01 = f[1], a02 = f[2];\n        var a10 = f[3], a11 = f[4], a12 = f[5];\n        var a20 = f[6], a21 = f[7], a22 = f[8];\n\n        var b01: number = a22 * a11 - a12 * a21;\n        var b11: number = -a22 * a10 + a12 * a20;\n        var b21: number = a21 * a10 - a11 * a20;\n\n        // Calculate the determinant\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\n\n        if (!det) {\n            return;\n        }\n        det = 1.0 / det;\n\n        e[0] = b01 * det;\n        e[1] = (-a22 * a01 + a02 * a21) * det;\n        e[2] = (a12 * a01 - a02 * a11) * det;\n        e[3] = b11 * det;\n        e[4] = (a22 * a00 - a02 * a20) * det;\n        e[5] = (-a12 * a00 + a02 * a10) * det;\n        e[6] = b21 * det;\n        e[7] = (-a21 * a00 + a01 * a20) * det;\n        e[8] = (a11 * a00 - a01 * a10) * det;\n    }\n\n    /**\n     * 计算3x3矩阵的转置矩阵\n     * @param \tout 输出矩阵\n     */\n    transpose(out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        if (out === this) {\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\n            e[1] = f[3];\n            e[2] = f[6];\n            e[3] = a01;\n            e[5] = f[7];\n            e[6] = a02;\n            e[7] = a12;\n        } else {\n            e[0] = f[0];\n            e[1] = f[3];\n            e[2] = f[6];\n            e[3] = f[1];\n            e[4] = f[4];\n            e[5] = f[7];\n            e[6] = f[2];\n            e[7] = f[5];\n            e[8] = f[8];\n        }\n    }\n\n    /** 设置已有的矩阵为单位矩阵*/\n    identity(): void {\n        this.elements.set(_DEFAULTELEMENTS);\n        /*\n        var e: Float32Array = this.elements;\n        e[0] = 1;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n        e[4] = 1;\n        e[5] = 0;\n        e[6] = 0;\n        e[7] = 0;\n        e[8] = 1;*/\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var i: number, s: Float32Array, d: Float32Array;\n        s = this.elements;\n        d = destObject.elements;\n        if (s === d) {\n            return;\n        }\n        s.set(d);\n        /*\n        for (i = 0; i < 9; ++i) {\n            d[i] = s[i];\n        }*/\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Matrix3x3 = new Matrix3x3(false);\n        dest.elements = this.elements.slice();\n        return dest;\n    }\n\n    /**\n     * 计算观察3x3矩阵\n     * @param\teye    观察者位置\n     * @param\ttarget 目标位置\n     * @param\tup     上向量\n     * @param\tout    输出3x3矩阵\n     */\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\n        Vector3.normalize(_tempV30, _tempV30);\n\n        Vector3.cross(up, _tempV30, _tempV31);\n        Vector3.normalize(_tempV31, _tempV31);\n\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\n\n        var v0: Vector3 = _tempV30;\n        var v1: Vector3 = _tempV31;\n        var v2: Vector3 = _tempV32;\n\n        var me: Float32Array = out.elements;\n        me[0] = v1.x;\n        me[3] = v1.y;\n        me[6] = v1.z;\n\n        me[1] = v2.x;\n        me[4] = v2.y;\n        me[7] = v2.z;\n\n        me[2] = v0.x;\n        me[5] = v0.y;\n        me[8] = v0.z;\n    }\n\n    /**\n     * forward看向target\n     * forward在这里规定为z轴\n     * @param eye \n     * @param target 目标\n     * @param up \n     * @param out \n     */\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\n        var vx = _tempV31;\n        var vy = _tempV32;\n        var vz = _tempV30;\n\n        target.vsub(eye, vz).normalize();\n        up.cross(vz, vx).normalize();\n        vz.cross(vx, vy);\n\n        var m = out.elements;\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\n    }\n}","import { Vector3 } from \"./Vector3\";\nimport { Matrix4x4 } from \"./Matrix4x4\";\nimport { Matrix3x3 } from \"./Matrix3x3\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { Vector2 } from \"./Vector2\";\nimport { IClone } from \"../utils/IClone\";\n\nconst TEMPVector30 = new Vector3();\nconst TEMPVector31 = new Vector3();\nconst TEMPVector32 = new Vector3();\nconst TEMPVector33 = new Vector3();\nconst _tempMatrix3x3 = new Matrix3x3();\n\n/**\n * <code>Quaternion</code> 类用于创建四元数。\n */\nexport class Quaternion implements IClone {\n\n    /**@internal */\n    static TEMP = new Quaternion();\n\n    /**默认矩阵,禁止修改*/\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\n    /**无效矩阵,禁止修改*/\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\n\n    /**\n     *  从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\n     * @param\tyaw yaw值\n     * @param\tpitch pitch值\n     * @param\troll roll值\n     * @param\tout 输出四元数\n     */\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\n        var halfRoll: number = roll * 0.5;\n        var halfPitch: number = pitch * 0.5;\n        var halfYaw: number = yaw * 0.5;\n\n        var sinRoll: number = Math.sin(halfRoll);\n        var cosRoll: number = Math.cos(halfRoll);\n        var sinPitch: number = Math.sin(halfPitch);\n        var cosPitch: number = Math.cos(halfPitch);\n        var sinYaw: number = Math.sin(halfYaw);\n        var cosYaw: number = Math.cos(halfYaw);\n\n\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n    }\n\n    /**\n     * 计算两个四元数相乘\n     * @param\tleft left四元数\n     * @param\tright  right四元数\n     * @param\tout 输出四元数\n     */\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\n        var lx: number = left.x;\n        var ly: number = left.y;\n        var lz: number = left.z;\n        var lw: number = left.w;\n        var rx: number = right.x;\n        var ry: number = right.y;\n        var rz: number = right.z;\n        var rw: number = right.w;\n        var a: number = (ly * rz - lz * ry);\n        var b: number = (lz * rx - lx * rz);\n        var c: number = (lx * ry - ly * rx);\n        var d: number = (lx * rx + ly * ry + lz * rz);\n        out.x = (lx * rw + rx * lw) + a;\n        out.y = (ly * rw + ry * lw) + b;\n        out.z = (lz * rw + rz * lw) + c;\n        out.w = lw * rw - d;\n    }\n\n    private static arcTanAngle(x: number, y: number): number {\n        if (x == 0) {\n            if (y == 1)\n                return Math.PI / 2;\n            return -Math.PI / 2;\n        }\n        if (x > 0)\n            return Math.atan(y / x);\n        if (x < 0) {\n            if (y > 0)\n                return Math.atan(y / x) + Math.PI;\n            return Math.atan(y / x) - Math.PI;\n        }\n        return 0;\n    }\n\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\n        Vector3.subtract(location, from, TEMPVector30);\n        Vector3.normalize(TEMPVector30, TEMPVector30);\n\n        angle.x = Math.asin(TEMPVector30.y);\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\n    }\n\n    /**\n     * 从指定的轴和角度计算四元数\n     * @param\taxis  轴\n     * @param\trad  角度\n     * @param\tout  输出四元数\n     */\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\n        rad = rad * 0.5;\n        var s: number = Math.sin(rad);\n        out.x = s * axis.x;\n        out.y = s * axis.y;\n        out.z = s * axis.z;\n        out.w = Math.cos(rad);\n    }\n\n\n    /**\n     *  从旋转矩阵计算四元数\n     * @param\tmat 旋转矩阵\n     * @param\tout  输出四元数\n     */\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\n        var me: Float32Array = mat.elements;\n\n        var sqrt: number;\n        var half: number;\n        var scale: number = me[0] + me[5] + me[10];\n\n        if (scale > 0.0) {\n            sqrt = Math.sqrt(scale + 1.0);\n            out.w = sqrt * 0.5;\n            sqrt = 0.5 / sqrt;\n\n            out.x = (me[6] - me[9]) * sqrt;\n            out.y = (me[8] - me[2]) * sqrt;\n            out.z = (me[1] - me[4]) * sqrt;\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\n            half = 0.5 / sqrt;\n\n            out.x = 0.5 * sqrt;\n            out.y = (me[1] + me[4]) * half;\n            out.z = (me[2] + me[8]) * half;\n            out.w = (me[6] - me[9]) * half;\n        } else if (me[5] > me[10]) {\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\n            half = 0.5 / sqrt;\n\n            out.x = (me[4] + me[1]) * half;\n            out.y = 0.5 * sqrt;\n            out.z = (me[9] + me[6]) * half;\n            out.w = (me[8] - me[2]) * half;\n        } else {\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\n            half = 0.5 / sqrt;\n\n            out.x = (me[8] + me[2]) * half;\n            out.y = (me[9] + me[6]) * half;\n            out.z = 0.5 * sqrt;\n            out.w = (me[1] - me[4]) * half;\n        }\n\n    }\n\n    /**\n     * 球面插值\n     * @param\tleft left四元数\n     * @param\tright  right四元数\n     * @param\tt 插值比例\n     * @param\tout 输出四元数\n     * @returns 输出Float32Array\n     */\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\n\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\n\n        // calc cosine \n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary) \n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n        // calculate coefficients \n        if ((1.0 - cosom) > 0.000001) {\n            // standard case (slerp) \n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            // \"from\" and \"to\" quaternions are very close  \n            //  ... so we can do a linear interpolation \n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n        // calculate final values \n        out.x = scale0 * ax + scale1 * bx;\n        out.y = scale0 * ay + scale1 * by;\n        out.z = scale0 * az + scale1 * bz;\n        out.w = scale0 * aw + scale1 * bw;\n\n        return out;\n    }\n\n    /**\n     * 计算两个四元数的线性插值\n     * @param\tleft left四元数\n     * @param\tright right四元数b\n     * @param\tt 插值比例\n     * @param\tout 输出四元数\n     */\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\n        var inverse: number = 1.0 - amount;\n        if (Quaternion.dot(left, right) >= 0) {\n            out.x = (inverse * left.x) + (amount * right.x);\n            out.y = (inverse * left.y) + (amount * right.y);\n            out.z = (inverse * left.z) + (amount * right.z);\n            out.w = (inverse * left.w) + (amount * right.w);\n        } else {\n            out.x = (inverse * left.x) - (amount * right.x);\n            out.y = (inverse * left.y) - (amount * right.y);\n            out.z = (inverse * left.z) - (amount * right.z);\n            out.w = (inverse * left.w) - (amount * right.w);\n        }\n        out.normalize(out);\n    }\n\n    /**\n     * 计算两个四元数的和\n     * @param\tleft  left四元数\n     * @param\tright right 四元数\n     * @param\tout 输出四元数\n     */\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\n        out.x = left.x + right.x;\n        out.y = left.y + right.y;\n        out.z = left.z + right.z;\n        out.w = left.w + right.w;\n    }\n\n    /**\n     * 计算两个四元数的点积\n     * @param\tleft left四元数\n     * @param\tright right四元数\n     * @return  点积\n     */\n    static dot(left: Quaternion, right: Quaternion): number {\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\n    }\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n    /**Z轴坐标*/\n    z: number;\n    /**W轴坐标*/\n    w: number;\n\n    /**\n     * 创建一个 <code>Quaternion</code> 实例。\n     * @param\tx 四元数的x值\n     * @param\ty 四元数的y值\n     * @param\tz 四元数的z值\n     * @param\tw 四元数的w值\n     */\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * 设置四元数的值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     */\n    setValue(x: number, y: number, z: number, w: number): void {\n        this.x = x; this.y = y; this.z = z; this.w = w;\n    }\n\n    /**\n     * 设置四元数的值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     * @return 返回四元数\n     */\n    set(x: number, y: number, z: number, w: number) {\n        this.x = x; this.y = y; this.z = z; this.w = w;\n        return this;\n    }\n    /**\n     * 根据缩放值缩放四元数\n     * @param\tscale 缩放值\n     * @param\tout 输出四元数\n     */\n    scaling(scaling: number, out: Quaternion): void {\n        out.x = this.x * scaling;\n        out.y = this.y * scaling;\n        out.z = this.z * scaling;\n        out.w = this.w * scaling;\n    }\n\n    /**\n     * 归一化四元数\n     * @param\tout 输出四元数\n     */\n    normalize(out: Quaternion): void {\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            out.x = this.x * len;\n            out.y = this.y * len;\n            out.z = this.z * len;\n            out.w = this.w * len;\n        }\n    }\n\n    /**\n     * 计算四元数的长度\n     * @return  长度\n     */\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    /**\n     * 根据绕X轴的角度旋转四元数\n     * @param\trad 角度\n     * @param\tout 输出四元数\n     */\n    rotateX(rad: number, out: Quaternion): void {\n        rad *= 0.5;\n\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\n\n        out.x = this.x * bw + this.w * bx;\n        out.y = this.y * bw + this.z * bx;\n        out.z = this.z * bw - this.y * bx;\n        out.w = this.w * bw - this.x * bx;\n    }\n\n    /**\n     * 根据绕Y轴的制定角度旋转四元数\n     * @param\trad 角度\n     * @param\tout 输出四元数\n     */\n    rotateY(rad: number, out: Quaternion): void {\n        rad *= 0.5;\n\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\n\n        out.x = this.x * bw - this.z * by;\n        out.y = this.y * bw + this.w * by;\n        out.z = this.z * bw + this.x * by;\n        out.w = this.w * bw - this.y * by;\n    }\n\n    /**\n     * 根据绕Z轴的制定角度旋转四元数\n     * @param\trad 角度\n     * @param\tout 输出四元数\n     */\n    rotateZ(rad: number, out: Quaternion): void {\n        rad *= 0.5;\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\n\n        out.x = this.x * bw + this.y * bz;\n        out.y = this.y * bw - this.x * bz;\n        out.z = this.z * bw + this.w * bz;\n        out.w = this.w * bw - this.z * bz;\n    }\n\n    /**\n     * 分解四元数到欧拉角（顺序为Yaw、Pitch、Roll），参考自http://xboxforums.create.msdn.com/forums/p/4574/23988.aspx#23988,问题绕X轴翻转超过±90度时有，会产生瞬间反转\n     * @param\tquaternion 源四元数\n     * @param\tout 欧拉角值\n     */\n    getYawPitchRoll(out: Vector3): void {\n\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\n\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\n        var upe: Vector3 = TEMPVector32;\n\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\n        var angle: Vector3 = TEMPVector33;\n\n        if (angle.x == Math.PI / 2) {\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\n            angle.z = 0;\n        } else if (angle.x == -Math.PI / 2) {\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\n            angle.z = 0;\n        } else {\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\n\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\n        }\n\n        // Special cases.\n        if (angle.y <= -Math.PI)\n            angle.y = Math.PI;\n        if (angle.z <= -Math.PI)\n            angle.z = Math.PI;\n\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\n            angle.y = 0;\n            angle.z = 0;\n            angle.x = Math.PI - angle.x;\n        }\n\n        var oe: Vector3 = out;\n        oe.x = angle.y;\n        oe.y = angle.x;\n        oe.z = angle.z;\n    }\n\n    /**\n     * 求四元数的逆\n     * @param\tout  输出四元数\n     */\n    invert(out: Quaternion): void {\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        var invDot: number = dot ? 1.0 / dot : 0;\n\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n        out.x = -a0 * invDot;\n        out.y = -a1 * invDot;\n        out.z = -a2 * invDot;\n        out.w = a3 * invDot;\n    }\n\n    /**\n     *设置四元数为单位算数\n     * @param out  输出四元数\n     */\n    identity(): void {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 1;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  array 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(array: any[], offset: number = 0): void {\n        this.x = array[offset + 0];\n        this.y = array[offset + 1];\n        this.z = array[offset + 2];\n        this.w = array[offset + 3];\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        if (this === destObject) {\n            return;\n        }\n        destObject.x = this.x;\n        destObject.y = this.y;\n        destObject.z = this.z;\n        destObject.w = this.w;\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Quaternion = new Quaternion();\n        this.cloneTo(dest);\n        return dest;\n    }\n\n    equals(b: Quaternion): boolean {\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\n    }\n\n    /**\n     * 计算旋转观察四元数\n     * @param\tforward 方向\n     * @param\tup     上向量\n     * @param\tout    输出四元数\n     */\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\n    }\n\n    /**\n     * 计算观察四元数（适用Camera 灯光）\n     * @param\teye    观察者位置\n     * @param\ttarget 目标位置\n     * @param\tup     上向量\n     * @param\tout    输出四元数\n     */\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\n    }\n\n    /**\n     * 计算观察四元数（适用gameObject）\n     * @param eye 观察者位置\n     * @param target 目标位置\n     * @param up 上向量\n     * @param out 输出四元数\n     */\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\n    }\n\n    /**\n     * 计算长度的平方。\n     * @return 长度的平方。\n     */\n    lengthSquared(): number {\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\n    }\n\n    /**\n     * 计算四元数的逆四元数。\n     * @param\tvalue 四元数。\n     * @param\tout 逆四元数。\n     */\n    static invert(value: Quaternion, out: Quaternion): void {\n        var lengthSq: number = value.lengthSquared();\n        if (!MathUtils3D.isZero(lengthSq)) {\n            lengthSq = 1.0 / lengthSq;\n\n            out.x = -value.x * lengthSq;\n            out.y = -value.y * lengthSq;\n            out.z = -value.z * lengthSq;\n            out.w = value.w * lengthSq;\n        }\n    }\n\n    /**\n     * 通过一个3x3矩阵创建一个四元数\n     * @param\tmatrix3x3  3x3矩阵\n     * @param\tout        四元数\n     */\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\n        var me: Float32Array = matrix3x3.elements;\n        var m11: number = me[0];\n        var m12: number = me[1];\n        var m13: number = me[2];\n        var m21: number = me[3];\n        var m22: number = me[4];\n        var m23: number = me[5];\n        var m31: number = me[6];\n        var m32: number = me[7];\n        var m33: number = me[8];\n\n        var sqrt: number, half: number;\n        var scale: number = m11 + m22 + m33;\n\n        if (scale > 0) {\n\n            sqrt = Math.sqrt(scale + 1);\n            out.w = sqrt * 0.5;\n            sqrt = 0.5 / sqrt;\n\n            out.x = (m23 - m32) * sqrt;\n            out.y = (m31 - m13) * sqrt;\n            out.z = (m12 - m21) * sqrt;\n\n        } else if ((m11 >= m22) && (m11 >= m33)) {\n\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\n            half = 0.5 / sqrt;\n\n            out.x = 0.5 * sqrt;\n            out.y = (m12 + m21) * half;\n            out.z = (m13 + m31) * half;\n            out.w = (m23 - m32) * half;\n        } else if (m22 > m33) {\n\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\n            half = 0.5 / sqrt;\n\n            out.x = (m21 + m12) * half;\n            out.y = 0.5 * sqrt;\n            out.z = (m32 + m23) * half;\n            out.w = (m31 - m13) * half;\n        } else {\n\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\n            half = 0.5 / sqrt;\n\n            out.x = (m31 + m13) * half;\n            out.y = (m32 + m23) * half;\n            out.z = 0.5 * sqrt;\n            out.w = (m12 - m21) * half;\n        }\n    }\n\n    forNativeElement(nativeElements: Float32Array = null): void//[NATIVE_TS]\n    {\n\n        if (nativeElements) {\n            (<any>this).elements = nativeElements;\n            (<any>this).elements[0] = this.x;\n            (<any>this).elements[1] = this.y;\n            (<any>this).elements[2] = this.z;\n            (<any>this).elements[3] = this.w;\n        }\n        else {\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\n        }\n        Vector2.rewriteNumProperty(this, \"x\", 0);\n        Vector2.rewriteNumProperty(this, \"y\", 1);\n        Vector2.rewriteNumProperty(this, \"z\", 2);\n        Vector2.rewriteNumProperty(this, \"w\", 3);\n    }\n}","import { Resource } from \"./Resource\";\n/**\n * 文字资源格式\n */\nexport enum TextResourceFormat {\n    /**Buffer */\n    Buffer,\n    /**TODO */\n    Plain,\n    /**Json */\n    JSON,\n    /**XML */\n    XML\n}\n\n/**\n * 文字资源\n */\nexport class TextResource extends Resource {\n    /**数据 */\n    public readonly data: any;\n    /**格式 */\n    public readonly format: TextResourceFormat;\n    /**\n     * 实例化文字资源\n     * @param data \n     * @param format \n     */\n    constructor(data: any, format: TextResourceFormat) {\n        super();\n        this.data = data;\n        this.format = format;\n    }\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\n\nclass TextAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.Plain);\n        });\n    }\n}\n\nclass BytesAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.Buffer);\n        });\n    }\n}\n\nclass JsonAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.JSON);\n        });\n    }\n}\n\nclass XMLAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.XML);\n        });\n    }\n}\n\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\nLoader.registerLoader([\"bin\", \"bytes\"], BytesAssetLoader, Loader.BUFFER);\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\nLoader.registerLoader([\"xml\", \"fnt\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { AtlasResource } from \"../resource/AtlasResource\";\nimport { Texture } from \"../resource/Texture\";\nimport { Utils } from \"../utils/Utils\";\n\nclass AtlasLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n            if (!data)\n                return null;\n\n            let toloadPics: Array<Promise<Texture>> = [];\n            if (data.meta && data.meta.image) {\n                let folderPath: string = \"\";\n                let i = task.url.lastIndexOf(\"/\");\n                if (i != -1)\n                    folderPath = task.url.substring(0, i + 1);\n\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\n                let query: string = \"\";\n                i = task.url.lastIndexOf(\"?\");\n                if (i != -1)\n                    query = task.url.substring(i);\n\n                //带图片信息的类型\n                let pics: Array<string> = data.meta.image.split(\",\");\n                for (let pic of pics)\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\n            } else {  //不带图片信息\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\n            }\n\n            return Promise.all(toloadPics).then(pics => {\n                let baseUrl = task.options.baseUrl || \"\";\n\n                let frames: any = data.frames;\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\n                let subTextures: Array<Texture> = [];\n\n                let scaleRate: number = 1;\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\n                    scaleRate = parseFloat(data.meta.scale);\n\n                for (let tPic of pics) {\n                    if (tPic) {\n                        tPic._addReference();\n                        tPic.scaleRate = scaleRate;\n                    }\n                }\n\n                for (let name in frames) {\n                    let obj = frames[name];\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\n                    if (!tPic)\n                        continue;\n\n                    let url = baseUrl + directory + name;\n                    let tTexture = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\n                    tTexture.lock = true;\n                    task.loader.cacheRes(url, tTexture);\n                    tTexture.url = url;\n                    subTextures.push(tTexture);\n                }\n\n                return new AtlasResource(directory, pics, subTextures);\n            });\n        });\n    }\n}\n\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { ILaya } from \"../../ILaya\";\nimport { Node } from \"../display/Node\";\nimport { Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\n\nexport const TypedArrayClasses: Record<string, any> = {\n    \"Int8Array\": Int8Array,\n    \"Uint8Array\": Uint8Array,\n    \"Int16Array\": Int16Array,\n    \"Uint16Array\": Uint16Array,\n    \"Int32Array\": Int32Array,\n    \"Uint32Array\": Uint32Array,\n    \"Float32Array\": Float32Array,\n    \"Float64Array\": Float64Array\n};\n\nexport class SerializeUtil {\n\n    public static decodeObj(data: any, obj?: any, type?: string, nodeFinder?: (id: string | Array<string>) => Node, errors?: Array<any>): any {\n        if (data == null)\n            return null;\n        else if (Array.isArray(data)) {\n            let arr: any[] = [];\n            for (let i = 0; i < data.length; i++) {\n                let v = data[i];\n                if (v != null) {\n                    try {\n                        arr[i] = this.decodeObj(v, null, null, nodeFinder, errors);\n                    }\n                    catch (error: any) {\n                        if (errors)\n                            errors.push(error);\n                        arr[i] = null;\n                    }\n                }\n                else\n                    arr[i] = null;\n            }\n            return arr;\n        }\n        else if (typeof (data) === \"object\") {\n            if (data._$uuid != null) {\n                let url = URL.getResURLByUUID(data._$uuid);\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\n            }\n\n            if (data._$ref != null) {\n                let node = nodeFinder?.(data._$ref);\n                if (node && data._$type) {\n                    let cls: any = ClassUtils.getClass(data._$type);\n                    if (cls)\n                        return node.getComponent(cls);\n                    else\n                        return null;\n                }\n                else\n                    return node;\n            }\n\n            type = type || data._$type;\n\n            if (type === \"any\") {\n                if (data._$type)\n                    return data.value;\n                else\n                    return data;\n            }\n\n            let typedArray = TypedArrayClasses[type];\n            if (typedArray != null) {\n                if (data._$type)\n                    return new typedArray(data.value);\n                else\n                    return new typedArray(data);\n            }\n\n            if (!obj) {\n                let cls: any = ClassUtils.getClass(type);\n                if (!cls) {\n                    //this._errors.push(new Error(`missing type '${type}'`));\n                    return null;\n                }\n\n                obj = new cls();\n            }\n\n            for (let key in data) {\n                if (key.startsWith(\"_$\"))\n                    continue;\n\n                let v = data[key];\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\n                    || v._$type || v._$uuid || v._$ref) {\n                    try {\n                        obj[key] = SerializeUtil.decodeObj(v, null, null, nodeFinder, errors);\n                    }\n                    catch (error: any) {\n                        if (errors)\n                            errors.push(error);\n                    }\n                }\n                else {\n                    let childObj = obj[key];\n                    if (childObj) {\n                        try {\n                            SerializeUtil.decodeObj(v, childObj, null, nodeFinder, errors);\n                        }\n                        catch (error: any) {\n                            if (errors)\n                                errors.push(error);\n                        }\n                    }\n                }\n            }\n\n            if (obj.onAfterDeserialize)\n                obj.onAfterDeserialize();\n\n            return obj;\n        }\n        else\n            return data;\n    }\n\n    static getLoadTypeByEngineType(type: string) {\n        switch (type) {\n            case \"Texture2D\":\n            case \"RenderTexture\":\n                return Loader.TEXTURE2D;\n            case \"TextureCube\":\n                return Loader.TEXTURECUBE;\n            case \"Prefab\":\n                return Loader.HIERARCHY;\n            default:\n                return null;\n        }\n    }\n}","import { Component } from \"../components/Component\";\nimport { Node } from \"../display/Node\";\nimport { Scene } from \"../display/Scene\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Loader, ILoadURL } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { SerializeUtil } from \"./SerializeUtil\";\n\nconst errorList: Array<any> = [];\n\nexport class HierarchyParser {\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\n        errors = errors || errorList;\n        let nodeMap: Record<string, Node> = {};\n        let dataList: Array<any> = [];\n        let allNodes: Array<Node> = [];\n        let outNodes: Array<Node> = [];\n        let scene: Scene;\n\n        let inPrefab: boolean;\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\n        let skinBaseUrl: string;\n        if (options) {\n            inPrefab = options.inPrefab;\n            if (inPrefab)\n                prefabNodeDict = options.prefabNodeDict;\n            skinBaseUrl = options.skinBaseUrl;\n        }\n\n        function createChildren(data: any, prefab: Node) {\n            for (let child of data._$child) {\n                if (child._$child) {\n                    let node = createNode(child, prefab);\n                    createChildren(child, child._$prefab ? node : prefab);\n\n                    dataList.push(child);\n                    allNodes.push(node);\n                }\n                else {\n                    let node = createNode(child, prefab);\n                    dataList.push(child);\n                    allNodes.push(node);\n                }\n            }\n        }\n\n        function createNode(nodeData: any, prefab: Node, runtime?: any): Node {\n            let node: Node;\n            let pstr: string;\n            if (pstr = nodeData._$override) { //prefab里的override节点\n                if (prefab && prefabNodeDict) {\n                    if (Array.isArray(pstr)) {\n                        node = prefab;\n                        for (let i = 0, n = pstr.length; i < n; i++) {\n                            let map = prefabNodeDict.get(node);\n                            node = map?.[pstr[i]];\n                            if (!node)\n                                break;\n                        }\n                    }\n                    else {\n                        let map = prefabNodeDict.get(prefab);\n                        if (map)\n                            node = map[nodeData._$override];\n                    }\n                }\n            }\n            else {\n                if (pstr = nodeData._$prefab) { //prefab根节点\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\n                    if (res) {\n                        if (!prefabNodeDict)\n                            prefabNodeDict = new Map();\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict }, errors);\n                    }\n                }\n                else if (pstr = nodeData._$type) {\n                    let cls: any = runtime ?? ClassUtils.getClass(pstr);\n                    if (cls) {\n                        try {\n                            node = new cls();\n                        }\n                        catch (err: any) {\n                            errors.push(err);\n                        }\n                    }\n                    else {\n                        errors.push(new Error(`unknown type '${pstr}'`));\n                    }\n                }\n\n                if (node)\n                    nodeMap[nodeData._$id] = node;\n            }\n\n            return node;\n        }\n\n        function findNode(idPath: string | string[]) {\n            if (Array.isArray(idPath)) {\n                let prefab = nodeMap[idPath[0]];\n                if (prefab && idPath.length > 1)\n                    return findNodeInPrefab(prefab, idPath, 1);\n                else\n                    return prefab;\n            }\n            else\n                return nodeMap[idPath];\n        }\n\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\n            if (!idPath)\n                return prefab;\n\n            let map = prefabNodeDict?.get(prefab);\n            if (!map)\n                return null;\n\n            if (Array.isArray(idPath)) {\n                let node: Node;\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\n                    if (!map)\n                        return null;\n\n                    node = map[idPath[i]];\n                    if (!node)\n                        break;\n\n                    map = prefabNodeDict.get(node);\n                }\n                return node;\n            }\n            else\n                return map[idPath];\n        }\n\n        let runtime: any;\n        if (data._$type || data._$prefab) {\n            if (runtime = data._$runtime) {\n                if (runtime.startsWith(\"res://\"))\n                    runtime = runtime.substring(6);\n                let cls = ClassUtils.getClass(runtime);\n                if (cls)\n                    runtime = cls;\n                else\n                    errors.push(new Error(`unknown runtime '${runtime}'`));\n            }\n\n            let node = createNode(data, null, runtime);\n            if (node) {\n                if (data._$child)\n                    createChildren(data, data._$prefab ? node : null);\n\n                dataList.push(data);\n                allNodes.push(node);\n\n                if (node instanceof Scene)\n                    scene = node;\n            }\n        }\n        else {\n            if (data._$child)\n                createChildren(data, null);\n        }\n\n        let cnt = dataList.length;\n\n        //生成树\n        let k = 0;\n        for (let i = 0; i < cnt; i++) {\n            let nodeData = dataList[i];\n            let node = allNodes[i];\n\n            let children: Array<any> = nodeData._$child;\n            if (children) {\n                let num = children.length;\n                if (node) {\n                    if (nodeData._$prefab) {\n                        for (let j = 0; j < num; j++) {\n                            let m = k - num + j;\n                            let n = outNodes[m];\n                            if (n && !n.parent) { //是预制体新增\n                                let nodeData2 = dataList[i - num + j];\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\n                                if (parentNode) {\n                                    let pos = nodeData2._$index;\n                                    if (pos != null && pos < parentNode.numChildren)\n                                        parentNode.addChildAt(n, pos);\n                                    else\n                                        parentNode.addChild(n);\n                                }\n                                else {\n                                    //挂接的节点可能被删掉了\n                                    node.addChildAt(n, 0);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (let j = 0; j < num; j++) {\n                            let n = outNodes[k - num + j];\n                            if (n) {\n                                if (node === scene && n._is3D)\n                                    scene._scene3D = <any>n;\n                                else\n                                    node.addChild(n);\n                            }\n                        }\n                    }\n                }\n                k -= num;\n            }\n\n            outNodes[k] = node;\n            k++;\n        }\n        outNodes.length = k;\n        outNodes = outNodes.filter(n => n != null);\n        let topNode = outNodes[0];\n\n        //加载所有组件\n        let compInitList: Array<any> = [];\n        for (let i = 0; i < cnt; i++) {\n            let components = dataList[i]._$comp;\n            if (!components)\n                continue;\n\n            let node = allNodes[i];\n            if (!node)\n                continue;\n\n            for (let compData of components) {\n                let comp: Component;\n                if (compData._$override) {\n                    let cls: any = ClassUtils.getClass(compData._$override);\n                    if (cls)\n                        comp = node.getComponent(cls);\n                }\n                else {\n                    let cls: any = ClassUtils.getClass(compData._$type);\n                    if (cls) {\n                        comp = node.getComponent(cls);\n                        if (!comp) {\n                            try {\n                                comp = node.addComponent(cls);\n                            }\n                            catch (err: any) {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n\n                if (comp)\n                    compInitList.push(compData, comp);\n            }\n        }\n\n        //设置节点属性\n        for (let i = 0; i < cnt; i++) {\n            let nodeData = dataList[i];\n            let node = allNodes[i];\n            if (node) {\n                if (skinBaseUrl != null && (node instanceof Sprite))\n                    node._skinBaseUrl = skinBaseUrl;\n\n                SerializeUtil.decodeObj(nodeData, node, null, findNode, errors);\n\n                if (runtime && nodeData._$var && node.name) {\n                    try {\n                        (<any>topNode)[node.name] = node;\n                    }\n                    catch (err: any) {\n                        errors.push(err);\n                    }\n                }\n            }\n        }\n\n        //设置组件属性\n        cnt = compInitList.length;\n        for (let i = 0; i < cnt; i += 2) {\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], null, findNode, errors);\n        }\n\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\n            prefabNodeDict.set(topNode, nodeMap);\n\n        if (errors == errorList)\n            errorList.length = 0;\n\n        return outNodes;\n    }\n\n    public static collectResourceLinks(data: any, basePath: string) {\n        let test: Record<string, string[]> = {};\n        let innerUrls: ILoadURL[] = [];\n\n        function addInnerUrl(url: string, type: string) {\n            if (!url)\n                return \"\";\n            let entry = test[url];\n            if (entry === undefined) {\n                let url2: string;\n                if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\n                    url2 = \"res://\" + url;\n                else\n                    url2 = URL.join(basePath, url);\n                innerUrls.push({ url: url2, type: type });\n                test[url] = entry = [url2, type];\n            }\n            else if (entry.indexOf(type) == -1) {\n                entry.push(type);\n                innerUrls.push({ url: entry[0], type: type });\n            }\n            return entry[0];\n        }\n\n        function check(data: any) {\n            for (let key in data) {\n                let child = data[key];\n                if (child == null)\n                    continue;\n                if (Array.isArray(child)) {\n                    for (let item of child) {\n                        if (item == null)\n                            continue;\n\n                        if (typeof (item) === \"object\") {\n                            if (item._$uuid != null)\n                                item._$uuid = addInnerUrl(item._$uuid, SerializeUtil.getLoadTypeByEngineType(item._$type));\n                            else if (item._$prefab != null) {\n                                item._$prefab = addInnerUrl(item._$prefab, Loader.HIERARCHY);\n                                check(item);\n                            }\n                            else\n                                check(item);\n                        }\n                    }\n                }\n                else if (typeof (child) === \"object\") {\n                    if (child._$uuid != null)\n                        child._$uuid = addInnerUrl(child._$uuid, SerializeUtil.getLoadTypeByEngineType(child._$type));\n                    else if (child._$prefab != null) {\n                        child._$prefab = addInnerUrl(child._$prefab, Loader.HIERARCHY);\n                        check(child);\n                    }\n                    else\n                        check(child);\n                }\n            }\n        }\n\n        check(data);\n\n        return innerUrls;\n    }\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\nimport { HierarchyParser } from \"./HierarchyParser\";\nimport { LegacyUIParser } from \"./LegacyUIParser\";\n\nexport class HierarchyLoader implements IResourceLoader {\n    static v3: IHierarchyParserAPI = HierarchyParser;\n    static v2: IHierarchyParserAPI = null;\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\n\n    load(task: ILoadTask) {\n        let url = task.url;\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\";\n        if (isModel)\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n            if (!data)\n                return null;\n\n            if (data._$ver != null)\n                return this._load(HierarchyLoader.v3, task, data, 3);\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\n                return this._load(HierarchyLoader.v2, task, data, 2);\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\n            else\n                return null;\n        });\n    }\n\n    //@internal\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\n        let basePath = URL.getPath(task.url);\n        let links = api.collectResourceLinks(data, basePath);\n        return task.loader.load(links, null, task.progress.createCallback()).then((resArray: any[]) => {\n            let res = new PrefabImpl(api, data, version);\n            res.addDeps(resArray);\n            return res;\n        });\n    }\n}\n\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\n * \n * 文件第一行为 \"#?RADIANCE\"\n * \n * 以 \"#\" 开始为 注释行\n * \n * 后面有 key=value 形式声明信息\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\n * \n * 空行代表 header 结束， \n * \n * header 信息下一行 描述 图像分辨率和像素数据\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\n * \n * 之后为 图像 二进制像素数据\n *  \n */\n\nimport { Vector4 } from \"../maths/Vector4\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { Texture2D } from \"../resource/Texture2D\";\n\n/**\n * https://floyd.lbl.gov/radiance/framer.html\n */\nexport class HDRTextureInfo {\n\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\n\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\n\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\n\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\n\n        texture.setHDRData(hdrInfo);\n\n        return texture;\n    }\n\n    /**\n     * \n     * @param source \n     */\n    static getHDRInfo(source: ArrayBuffer) {\n\n        let data = new Uint8Array(source);\n        let readByteOffset = 0;\n\n        const readLine = () => {\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\n            // string 带着 '\\n' 就不用 +1\n            readByteOffset += lineStr.length + 1;\n            return lineStr;\n        }\n\n        // header\n        let identifier = readLine();\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\n        if (identifier != \"#?RADIANCE\") {\n            throw \"HDR image: identifier wrong.\";\n        }\n\n        let commandsMap = new Map();\n\n        let line = \"\";\n        do {\n            line = readLine();\n            if (line[0] != \"#\") {\n                let commands = line.split(\"=\");\n                commandsMap.set(commands[0], commands[1]);\n            }\n\n        } while (line != \"\");\n        // header end\n\n        /**\n         * FORMAT\n         * EXPOSURE\n         * COLORCORR\n         * SOFTWARE\n         * PIXASPECT\n         * VIEW\n         * PRIMARIES\n         */\n        let hdrFormat = commandsMap.get(\"FORMAT\");\n        /**\n         * 32-bit_rle_rgbe\n         * 32-bit_rle_xyze\n         */\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\n            throw \"HDR image: unsupported format.\";\n        }\n\n        let resolutionStr = readLine();\n        let resolutions = resolutionStr.split(\" \");\n\n        let decreaseY = resolutions[0] == \"-Y\";\n        let decreaseX = resolutions[2] == \"-X\";\n\n        let height = parseInt(resolutions[1]);\n        let width = parseInt(resolutions[3]);\n\n        // format 固定?\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32);\n\n        /**\n         * Scanline Records\n         * 1. Uncompressed 每像素 4 字节\n         * 2. Old run-length encoded\n         * 3. New run-length encoded *✓\n         */\n\n\n        return hdrInfo;\n    }\n\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\n\n        let dataLength = data.length;\n\n        let index = readByteOffset;\n\n        let res = \"\";\n        let char = \"\";\n        // do {\n        //     char = String.fromCharCode(data[index]);\n        //     res = `${res}${char}`;\n        //     index++;\n        // } while (index < dataLength && char != \"\\n\");\n\n        while (index < dataLength && char != \"\\n\") {\n            res = `${res}${char}`;\n            char = String.fromCharCode(data[index]);\n            index++;\n        }\n\n        return res;\n\n    }\n\n\n\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\n\n    }\n\n    get_32_bit_rle_rgbe(): ArrayBufferView {\n\n        let width = this.width;\n        let height = this.height;\n        let decreaseX = this.decreaseX;\n        let decreaseY = this.decreaseY;\n\n        let data = new Uint8Array(this.source, this.byteOffset);\n        let dataIndex = 0;\n\n        let rgbeBuffer = new ArrayBuffer(width * 4);\n        let rgbeArray = new Uint8Array(rgbeBuffer);\n\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\n        let pixelArray = new Float32Array(pixelBuffer);\n\n        // todo decreaseX and decreaseY\n        for (let y = height; y > 0; y--) {\n\n            // begin unnormalized pixel\n            let a2 = data[dataIndex++]; // equal to 2\n            let b2 = data[dataIndex++]; // equal to 2\n            let c = data[dataIndex++]; // upper byte\n            let d = data[dataIndex++]; // lower byte\n\n            let scanlineLength = (c << 8) | d;\n\n            if (scanlineLength != width) {\n                throw \"HDR info: scanlineLength wrong.\";\n            }\n\n            let index = 0;\n            for (let i = 0; i < 4; i++) {\n                let endIndex = (i + 1) * scanlineLength;\n\n                while (index < endIndex) {\n                    let a = data[dataIndex++];\n                    let b = data[dataIndex++];\n                    if (a > 128) {\n                        let count = a - 128;\n                        if (count > endIndex - index) {\n                            throw \"HDR info: ??\";\n                        }\n                        while (count-- > 0) {\n                            rgbeArray[index++] = b;\n                        }\n                    }\n                    else {\n                        let count = a;\n                        if (count == 0 || count > endIndex - index) {\n                            throw \"HDR info: ??\";\n                        }\n                        rgbeArray[index++] = b;\n                        if (--count > 0) {\n                            for (let j = 0; j < count; j++) {\n                                rgbeArray[index++] = data[dataIndex++];\n                            }\n                        }\n                    }\n\n                }\n            }\n\n            for (let i = 0; i < scanlineLength; i++) {\n                let r = rgbeArray[i];\n                let g = rgbeArray[i + scanlineLength];\n                let b = rgbeArray[i + 2 * scanlineLength];\n                let e = rgbeArray[i + 3 * scanlineLength];\n\n                // /// test data\n                // /**\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\n                //  */\n                // r = 128;\n                // g = 64;\n                // b = 32;\n                // e = 129;\n\n                let index = (height - y) * scanlineLength * 3 + i * 3;\n\n                const Ldexp = (mantissa: number, exponent: number) => {\n                    if (exponent > 1023) {\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\n                    }\n\n                    if (exponent < -1074) {\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\n                    }\n\n                    return mantissa * Math.pow(2, exponent);\n                }\n\n                if (e > 0) {\n                    let exponent = Ldexp(1.0, e - (128 + 8));\n                    pixelArray[index] = r * exponent;\n                    pixelArray[index + 1] = g * exponent;\n                    pixelArray[index + 2] = b * exponent;\n                }\n                else {\n                    pixelArray[index] = 0;\n                    pixelArray[index + 1] = 0;\n                    pixelArray[index + 2] = 0;\n                }\n            }\n\n        }\n\n        return pixelArray;\n    }\n\n\n    /**\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\n     */\n    readScanLine(): ArrayBufferView {\n\n        let width = this.width;\n        let height = this.height;\n        let decreaseX = this.decreaseX;\n        let decreaseY = this.decreaseY;\n\n        let pixelArray = new Float32Array(width * height * 3);\n\n        let scanlineArray = new Uint8Array(width * 4);\n\n        let data = new Uint8Array(this.source, this.byteOffset);\n        let dataLength = data.length;\n        let dataIndex = 0;\n\n        const getc = () => {\n            // todo  check\n            if (dataIndex >= dataLength) {\n                throw \"HDR info: data wrong.\";\n            }\n\n            return data[dataIndex++];\n        };\n\n        const wrong = () => {\n            throw \"HDR info: data wrong.\";\n        }\n\n        for (let y = height - 1; y >= 0; y--) {\n\n            this.readcolors(scanlineArray, getc, wrong);\n\n            for (let i = 0; i < width; i++) {\n\n                // color_color func\n                let index = 4 * i;\n                let byter = scanlineArray[index];\n                let byteg = scanlineArray[index + 1];\n                let byteb = scanlineArray[index + 2];\n                let bytee = scanlineArray[index + 3];\n\n                // /// test data\n                // /**\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\n                //  */\n                // byter = 128;\n                // byteg = 64;\n                // byteb = 32;\n                // bytee = 129;\n\n                let offsetY = y;\n                let offsetX = i;\n                if (decreaseY) {\n                    offsetY = height - 1 - y;\n                }\n                if (decreaseX) {\n                    offsetX = width - 1 - i;\n                }\n\n                let pixelIndex = offsetY * width * 3 + offsetX * 3;\n\n                if (bytee == 0) {\n                    pixelArray[pixelIndex] = 0;\n                    pixelArray[pixelIndex + 1] = 0;\n                    pixelArray[pixelIndex + 2] = 0;\n                }\n                else {\n                    let f = ldexp(1.0, bytee - (128 + 8));\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\n                }\n            }\n\n        }\n        return pixelArray;\n    }\n\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\n\n        const setScanLineData = (w: number, channel: number, value: number) => {\n            scanlineArray[w * 4 + channel] = value;\n        }\n\n        let width = this.width;\n\n        // 第一个数据\n        let unnormalizedr = getc();\n        let unnormalizedg = getc();\n        let unnormalizedb = getc();\n        let unnormalizede = getc();\n\n        if (width < 8 || width > 32767) {\n            this.olddreadcolors(scanlineArray, getc);\n            // continue;\n        }\n\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\n            this.olddreadcolors(scanlineArray, getc);\n            // continue;\n        }\n\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\n            wrong()\n        }\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < width;) {\n                let code = getc();\n                if (code > 128) {\n                    code &= 127;\n                    let val = getc();\n                    if (j + code > width) {\n                        wrong();\n                    }\n                    while (code--) {\n                        setScanLineData(j++, i, val);\n                    }\n                }\n                else {\n                    if (j + code > width) {\n                        wrong();\n                    }\n                    while (code--) {\n                        let val = getc();\n                        setScanLineData(j++, i, val);\n                    }\n                }\n            }\n        }\n\n    }\n\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number) {\n\n        let rshift = 0;\n\n        let len = this.width;\n\n        for (let w = 0; w < len; w++) {\n            let unnormalizedr = getc();\n            let unnormalizedg = getc();\n            let unnormalizedb = getc();\n            let unnormalizede = getc();\n\n            let scanIndex = w * 4;\n            scanlineArray[scanIndex] = unnormalizedr;\n            scanlineArray[scanIndex + 1] = unnormalizedg;\n            scanlineArray[scanIndex + 2] = unnormalizedb;\n            scanlineArray[scanIndex + 3] = unnormalizede;\n\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\n                let lastIndex = scanIndex - 4;\n                for (let i = unnormalizede << rshift; i > 0; i--) {\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\n                    len--;\n                }\n                rshift += 8;\n            }\n            else {\n                len--;\n                rshift = 0;\n            }\n        }\n\n\n    }\n\n    color_color(col: Vector4, clr: Vector4) {\n        let f = 0;\n        if (clr.w == 0) {\n            col.x = col.y = col.z = 0;\n        }\n        else {\n            f = ldexp(1.0, clr.w - (128 + 8));\n            // todo   + 0.5 值会变\n            col.x = (clr.x) * f;\n            col.y = (clr.y) * f;\n            col.z = (clr.z) * f;\n        }\n    }\n\n\n\n}\n\nfunction ldexp(value: number, exponent: number): number {\n    return value * Math.pow(2, exponent);\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\nimport { Texture } from \"../resource/Texture\";\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { BaseTexture } from \"../resource/BaseTexture\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { Browser } from \"../utils/Browser\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Resource } from \"../resource/Resource\";\nimport { Utils } from \"../utils/Utils\";\nimport { RenderTexture } from \"../resource/RenderTexture\";\nimport { VideoTexture } from \"../media/VideoTexture\";\n\nconst metaFetchingOptions = { noRetry: true, silent: true };\n\nvar internalResources: Record<string, Texture2D>;\n\nclass Texture2DLoader implements IResourceLoader {\n    constructor() {\n        if (!internalResources) {\n            internalResources = {\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\n                \"BlackTexture.png\": Texture2D.blackTexture,\n                \"GrayTexture.png\": Texture2D.grayTexture,\n                \"NormalTexture.png\": Texture2D.normalTexture,\n            };\n        }\n    }\n\n    load(task: ILoadTask) {\n        if (task.url.indexOf(\"internal/\") != -1) {\n            let tex = internalResources[Utils.getBaseName(task.url)];\n            if (tex)\n                return Promise.resolve(tex);\n        }\n\n        let meta = AssetDb.inst.getMeta(task.url, task.uuid);\n        if (!meta || typeof (meta) === \"object\")\n            return this.load2(task, meta);\n        else if (!task.options.noMetaFile)\n            return task.loader.fetch(meta, \"json\", task.progress.createCallback(0.1), metaFetchingOptions)\n                .then(meta => this.load2(task, meta));\n        else\n            return this.load2(task, null);\n    }\n\n    protected load2(task: ILoadTask, meta: any) {\n        let constructParams: TextureConstructParams;\n        let propertyParams: TexturePropertyParams;\n        let ext = task.ext;\n        let url = task.url;\n        if (meta) {\n            let platform = Browser.platform;\n            let fileIndex = meta.platforms?.[platform] || 0;\n            let fileInfo = meta.files[fileIndex];\n            if (fileInfo.file) {\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\n                ext = fileInfo.ext;\n            }\n\n            constructParams = [0, 0, fileInfo.format, meta.mipmap, meta.readWrite, meta.sRGB];\n            propertyParams = {\n                wrapModeU: meta.wrapMode,\n                wrapModeV: meta.wrapMode,\n                filterMode: meta.filterMode,\n                anisoLevel: meta.anisoLevel,\n                premultiplyAlpha: meta.pma,\n                hdrEncodeFormat: meta.hdrEncodeFormat,\n            };\n        }\n        else {\n            constructParams = task.options.constructParams;\n            propertyParams = task.options.propertyParams;\n        }\n\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\n        if (compress != null) {\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n                if (!data)\n                    return null;\n\n                let tex: BaseTexture;\n                switch (compress) {\n                    case \"dds\":\n                        tex = Texture2D._parseDDS(data, propertyParams, constructParams);\n                        break;\n\n                    case \"ktx\":\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\n                            //这里在core模块，不能直接引用d3里的TextureCube\n                            let cls = ClassUtils.getClass(\"TextureCube\");\n                            if (cls) {\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\n                                tc.setKTXData(ktxInfo);\n                                tex = tc;\n                            }\n                            else\n                                return null;\n                        }\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\n                        }\n                        break;\n                    case \"pvr\":\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\n                        break;\n\n                    case \"hdr\":\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\n                        break;\n\n                    case \"lanit.ls\":\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\n                        break;\n                }\n\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\n                    tex = this.move(obsoluteInst, tex);\n\n                if (propertyParams && propertyParams.hdrEncodeFormat)\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\n                return tex;\n            });\n        }\n        else {\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), task.options).then(img => {\n                if (!img)\n                    return null;\n\n                let tex: BaseTexture = Texture2D._parseImage(img, propertyParams, constructParams);\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\n                    tex = this.move(obsoluteInst, tex);\n                return tex;\n            });\n        }\n    }\n\n    private move(obsoluteInst: BaseTexture, tex: BaseTexture) {\n        obsoluteInst._texture = tex._texture;\n        obsoluteInst.width = tex.width;\n        obsoluteInst.height = tex.height;\n        obsoluteInst.obsolute = false;\n        delete Resource._idResourcesMap[tex.id];\n        return obsoluteInst;\n    }\n}\n\nclass RenderTextureLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            let obsoluteInst = <RenderTexture>task.obsoluteInst;\n            if (obsoluteInst) {\n                obsoluteInst.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\n                    data.generateMipmap, data.multiSamples, false, data.sRGB);\n                return obsoluteInst;\n            }\n            else\n                return new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\n                    data.generateMipmap, data.multiSamples, false, data.sRGB);\n        });\n    }\n}\n\n\nclass VideoTextureLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\n        inst.source = task.url;\n        return Promise.resolve(inst);\n    }\n}\n\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\n\nclass TextureLoader implements IResourceLoader {\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\n        if (!tex2D)\n            return null;\n\n        let tex = <Texture>task.obsoluteInst;\n        if (tex) { //recover\n            tex.setTo(tex2D);\n            tex.obsolute = false;\n        }\n        else\n            tex = new Texture(tex2D);\n        return tex;\n    }\n\n    load(task: ILoadTask) {\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\n        if (!tex2D || tex2D.obsolute) {\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\n\n            if (!task.options.propertyParams)\n                url.propertyParams = propertyParams2d;\n            else if (task.options.propertyParams.premultiplyAlpha == null)\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\n\n            if (!task.options.constructParams)\n                url.constructParams = constructParams2d;\n            else if (task.options.constructParams[5] == null)\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\n                return this.wrapTex2D(task, tex2D);\n            });\n        }\n        else\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\n    }\n}\n\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\nconst videoFormats = [\"mp4\", \"webm\"];\n\nLoader.registerLoader([\"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE);\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D);\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D);\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","import { AnimationClip2D } from \"../components/AnimationClip2D\";\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\n\nclass AnimationClip2DLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return AnimationClip2D._parse(data);\n        });\n    }\n}\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader, \"ANIMATIONCLIP2D\");","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\n\nexport class NullLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return Promise.resolve(null);\n    }\n}\n\nLoader.registerLoader([\"lighting\"], NullLoader);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\nimport { WebAudioSound } from \"./WebAudioSound\";\n\nclass WebAudioLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return WebAudioSound.ctx.decodeAudioData(data);\n        });\n    }\n}\n\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\nimport { Component } from \"./components/Component\";\nimport { Animation } from \"./display/Animation\";\nimport { AnimationBase } from \"./display/AnimationBase\";\nimport { BitmapFont } from \"./display/BitmapFont\";\nimport { EffectAnimation } from \"./display/EffectAnimation\";\nimport { FrameAnimation } from \"./display/FrameAnimation\";\nimport { Input } from \"./display/Input\";\nimport { Node } from \"./display/Node\";\nimport { Scene } from \"./display/Scene\";\nimport { Sprite } from \"./display/Sprite\";\nimport { Stage } from \"./display/Stage\";\nimport { Text } from \"./display/Text\";\nimport { BlurFilter } from \"./filters/BlurFilter\";\nimport { ColorFilter } from \"./filters/ColorFilter\";\nimport { GlowFilter } from \"./filters/GlowFilter\";\nimport { Point } from \"./maths/Point\";\nimport { Rectangle } from \"./maths/Rectangle\";\nimport { SoundNode } from \"./media/SoundNode\";\nimport { VideoNode } from \"./media/VideoNode\";\nimport { Texture } from \"./resource/Texture\";\nimport { Texture2D } from \"./resource/Texture2D\";\nimport { Animator2D } from \"./components/Animator2D\";\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\nimport { Animation2DParm } from \"./components/Animation2DParm\";\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\nimport { Prefab } from \"./resource/HierarchyResource\";\nimport { Widget } from \"./components/Widget\";\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\nimport { Vector2 } from \"./maths/Vector2\";\nimport { Vector3 } from \"./maths/Vector3\";\nimport { Vector4 } from \"./maths/Vector4\";\nimport { Quaternion } from \"./maths/Quaternion\";\nimport { Color } from \"./maths/Color\";\n\nimport \"./loaders/TextResourceLoader\";\nimport \"./loaders/AtlasLoader\";\nimport \"./loaders/HierarchyLoader\";\nimport \"./loaders/TextureLoader\";\nimport \"./loaders/AnimationClip2DLoader\";\nimport \"./loaders/NullLoader\";\nimport \"./media/webaudio/WebAudioLoader\";\n\nlet c = ClassUtils.regClass;\n\nc(\"Record\", Object);\nc(\"Node\", Node);\nc(\"Sprite\", Sprite);\nc(\"Widget\", Widget);\nc(\"Text\", Text);\nc(\"Input\", Input);\nc(\"AnimationBase\", AnimationBase);\nc(\"Animation\", Animation);\nc(\"FrameAnimation\", FrameAnimation);\nc(\"EffectAnimation\", EffectAnimation);\nc(\"SoundNode\", SoundNode);\nc(\"VideoNode\", VideoNode);\n\nc(\"Scene\", Scene);\nc(\"Stage\", Stage);\nc(\"Component\", Component);\nc(\"BitmapFont\", BitmapFont);\nc(\"BlurFilter\", BlurFilter);\nc(\"ColorFilter\", ColorFilter);\nc(\"GlowFilter\", GlowFilter);\nc(\"Point\", Point);\nc(\"Rectangle\", Rectangle);\nc(\"Texture\", Texture);\nc(\"Texture2D\", Texture2D);\n\nc(\"Prefab\", Prefab);\n\nc(\"Animator2D\", Animator2D);\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\nc(\"AnimatorState2D\", AnimatorState2D);\nc(\"AnimationClip2D\", AnimationClip2D);\nc(\"AnimatorController2D\", AnimatorController2D);\nc(\"Animation2DParm\", Animation2DParm);\nc(\"Animation2DCondition\", Animation2DCondition);\n\nc(\"Vector2\", Vector2);\nc(\"Vector3\", Vector3);\nc(\"Vector4\", Vector4);\nc(\"Quaternion\", Quaternion);\nc(\"Color\", Color);","/**\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\n */\nexport class LocalStorage {\n\n    /**@ 基础类*/\n    static _baseClass: any;\n    /**\n     *  数据列表。\n     */\n    static items: any;\n    /**\n     * 表示是否支持  <code>LocalStorage</code>。\n     */\n    static support: boolean = false;\n    /**@internal */\n    static __init__(): boolean {\n        if (!LocalStorage._baseClass) {\n            LocalStorage._baseClass = Storage;\n            Storage.init();\n        }\n        LocalStorage.items = LocalStorage._baseClass.items;\n        LocalStorage.support = LocalStorage._baseClass.support;\n        return LocalStorage.support;\n    }\n\n    /**\n     * 存储指定键名和键值，字符串类型。\n     * @param key 键名。\n     * @param value 键值。\n     */\n    static setItem(key: string, value: string): void {\n        LocalStorage._baseClass.setItem(key, value);\n    }\n\n    /**\n     * 获取指定键名的值。\n     * @param key 键名。\n     * @return 字符串型值。\n     */\n    static getItem(key: string): string {\n        return LocalStorage._baseClass.getItem(key);\n    }\n\n    /**\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\n     * @param key 键名。\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\n     */\n    static setJSON(key: string, value: any): void {\n        LocalStorage._baseClass.setJSON(key, value);\n    }\n\n    /**\n     * 获取指定键名对应的 <code>Object</code> 类型值。\n     * @param key 键名。\n     * @return <code>Object</code> 类型值\n     */\n    static getJSON(key: string): any {\n        return LocalStorage._baseClass.getJSON(key);\n    }\n\n    /**\n     * 删除指定键名的信息。\n     * @param key 键名。\n     */\n    static removeItem(key: string): void {\n        LocalStorage._baseClass.removeItem(key);\n    }\n\n    /**\n     * 清除本地存储信息。\n     */\n    static clear(): void {\n        LocalStorage._baseClass.clear();\n    }\n}\n\n\n/** @internal */\nclass Storage {\n\n\t/**\n\t *  数据列表。\n\t */\n    static items: any;\n\t/**\n\t * 表示是否支持  <code>LocalStorage</code>。\n\t */\n    static support: boolean = false;\n\n    static init(): void {\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\n    }\n\n\t/**\n\t * 存储指定键名和键值，字符串类型。\n\t * @param key 键名。\n\t * @param value 键值。\n\t */\n    static setItem(key: string, value: string): void {\n        try {\n            Storage.support && Storage.items.setItem(key, value);\n        } catch (e) {\n            console.warn(\"set localStorage failed\", e);\n        }\n    }\n\n\t/**\n\t * 获取指定键名的值。\n\t * @param key 键名。\n\t * @return 字符串型值。\n\t */\n    static getItem(key: string): string {\n        return Storage.support ? Storage.items.getItem(key) : null;\n    }\n\n\t/**\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\n\t * @param key 键名。\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\n\t */\n    static setJSON(key: string, value: any): void {\n        try {\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\n        } catch (e) {\n            console.warn(\"set localStorage failed\", e);\n        }\n    }\n\n\t/**\n\t * 获取指定键名的 <code>Object</code> 类型值。\n\t * @param key 键名。\n\t * @return <code>Object</code> 类型值\n\t */\n    static getJSON(key: string): any {\n        try{\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\n            return obj;\n        }catch(err){\n            return Storage.items.getItem(key);\n        }\n    }\n\n\t/**\n\t * 删除指定键名的信息。\n\t * @param key 键名。\n\t */\n    static removeItem(key: string): void {\n        Storage.support && Storage.items.removeItem(key);\n    }\n\n\t/**\n\t * 清除本地存储信息。\n\t */\n    static clear(): void {\n        Storage.support && Storage.items.clear();\n    }\n\n}\n","/**\n * @author laya\n */\nexport class IStatRender {\n    /**\n     * 显示性能统计信息。\n     * @param\tx X轴显示位置。\n     * @param\ty Y轴显示位置。\n     */\n    show(x: number = 0, y: number = 0,views: any): void {\n    }\n\n    /**激活性能统计*/\n    enable(): void {\n    }\n\n    /**\n     * 隐藏性能统计信息。\n     */\n    hide(): void {\n    }\n\n    /**\n     * 点击性能统计显示区域的处理函数。\n     */\n    set_onclick(fn: Function): void {\n    }\n\n    isCanvasRender(): boolean {\n        return true;\n    }\n    // 非canvas模式的渲染\n    renderNotCanvas(ctx: any, x: number, y: number) { }\n\n}\n\n","\nimport { Browser } from \"./Browser\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Text } from \"../display/Text\"\nimport { Context } from \"../resource/Context\"\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\nimport { Stat, StatUIParams } from \"./Stat\";\nimport { ILaya } from \"../../ILaya\";\nimport { IStatRender } from \"./IStatRender\";\n\n/**\n * 显示Stat的结果。由于stat会引入很多的循环引用，所以把显示部分拆开\n * @author laya\n */\nexport class StatUI extends IStatRender {\n    private static _fontSize: number = 14;\n    private _txt: Text;\n    private _leftText: Text;\n    /**@internal */\n    _sp: Sprite;\n    /**@internal */\n    _titleSp: Sprite;\n    /**@internal */\n    _bgSp: Sprite;\n    /**@internal */\n    _show: boolean = false;\n    /**@internal */\n    _useCanvas: boolean = false;\n    private _canvas: HTMLCanvas;\n    private _ctx: Context;\n    private _first: boolean;\n    private _vx: number;\n    private _width: number;\n    private _height: number = 100;\n    private _view: any[] = [];\n\n\n    /**\n     * @override\n     * 显示性能统计信息。\n     * @param\tx X轴显示位置。\n     * @param\ty Y轴显示位置。\n     */\n    show(x: number = 0, y: number = 0, views: Array<StatUIParams>): void {\n        this._view.length = views.length;\n        for (let i = 0, n = this._view.length; i < n; i++) {\n            this._view[i] = views[i];\n        }\n        // var dt: any = Stat;\n        // if (!Browser._isMiniGame && !LayaEnv.isConch) this._useCanvas = true;\n        this._show = true;\n        // Stat._fpsData.length = 60;\n        // this._view[0] = { title: \"FPS(WebGL)\", value: \"_fpsStr\", color: \"yellow\", units: \"int\" };\n        // this._view[1] = { title: \"Sprite\", value: \"_spriteStr\", color: \"white\", units: \"int\" };\n        // this._view[2] = { title: \"RenderBatches\", value: \"renderBatches\", color: \"white\", units: \"int\" };\n        // this._view[3] = { title: \"SavedRenderBatches\", value: \"savedRenderBatches\", color: \"white\", units: \"int\" };\n        // this._view[4] = { title: \"CPUMemory\", value: \"cpuMemory\", color: \"yellow\", units: \"M\" };\n        // this._view[5] = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"yellow\", units: \"M\" };\n        // this._view[6] = { title: \"Shader\", value: \"shaderCall\", color: \"white\", units: \"int\" };\n        // this._view[7] = { title: \"Canvas\", value: \"_canvasStr\", color: \"white\", units: \"int\" };\n        // if (Render.is3DMode) {\n        // \tthis._view[0].title = \"FPS(3D)\";\n        // \tthis._view[8] = { title: \"TriFaces\", value: \"trianglesFaces\", color: \"white\", units: \"int\" };\n        // \tthis._view[9] = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\" };\n        // }\n        if (this._useCanvas) {\n            this.createUIPre(x, y);\n        } else\n            this.createUI(x, y);\n        this.enable();\n    }\n\n\n\n\n    private createUIPre(x: number, y: number): void {\n        var pixel: number = Browser.pixelRatio;\n        this._width = pixel * 180;\n        this._vx = pixel * 120;\n        this._height = pixel * (this._view.length * 12 + 3 * pixel) + 4;\n        StatUI._fontSize = 12 * pixel;\n        for (var i: number = 0; i < this._view.length; i++) {\n            this._view[i].x = 4;\n            this._view[i].y = i * StatUI._fontSize + 2 * pixel;\n        }\n        if (!this._canvas) {\n            this._canvas = new HTMLCanvas(true);\n            this._canvas.size(this._width, this._height);\n            this._ctx = this._canvas.getContext('2d') as Context;\n            this._ctx.textBaseline = \"top\";\n            this._ctx.font = StatUI._fontSize + \"px Arial\";\n\n            this._canvas.source.style.cssText = \"pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:\" + x + \"px;top:\" + y + \"px;width:\" + (this._width / pixel) + \"px;height:\" + (this._height / pixel) + \"px;\";\n        }\n        if (!Browser.onKGMiniGame) {\n            Browser.container.appendChild(this._canvas.source);\n        }\n\n        this._first = true;\n        this.loop();\n        this._first = false;\n    }\n\n    private createUI(x: number, y: number): void {\n        var stat: Sprite = this._sp;\n        var pixel: number = Browser.pixelRatio;\n        if (!stat) {\n            stat = new Sprite();\n            this._leftText = new Text();\n            this._leftText.pos(5, 5);\n            this._leftText.color = \"#ffffff\";\n            stat.addChild(this._leftText);\n\n            this._txt = new Text();\n            this._txt.pos(170 * pixel, 5);\n            this._txt.color = \"#ffffff\";\n            stat.addChild(this._txt);\n            this._sp = stat;\n        }\n\n        stat.pos(x, y);\n\n        var text: string = \"\";\n        for (var i: number = 0; i < this._view.length; i++) {\n            var one: any = this._view[i];\n            text += one.title + \"\\n\";\n        }\n        this._leftText.text = text;\n\n        //调整为合适大小和字体\t\t\t\n        var width: number = pixel * 138;\n        var height: number = pixel * (this._view.length * 12 + 3 * pixel) + 4;\n        this._txt.fontSize = StatUI._fontSize * pixel;\n        this._leftText.fontSize = StatUI._fontSize * pixel;\n\n        stat.size(width, height);\n        stat.graphics.clear();\n        stat.graphics.alpha(0.5);\n        stat.graphics.drawRect(0, 0, width + 110, height + 30, \"#999999\");\n        stat.graphics.alpha(2);\n        this.loop();\n    }\n\n    /**\n     * @override\n     * 激活性能统计\n     * */\n    enable(): void {\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\n    }\n\n    /**\n     * @override\n     * 隐藏性能统计信息。\n     */\n    hide(): void {\n        this._show = false;\n        ILaya.systemTimer.clear(this, this.loop);\n        if (this._canvas) {\n            Browser.removeElement(this._canvas.source);\n        }\n    }\n\n    /**\n     * @override\n     * 点击性能统计显示区域的处理函数。\n     */\n    set_onclick(fn: (this: GlobalEventHandlers, ev: MouseEvent) => any): void {\n        if (this._sp) {\n            this._sp.on(\"click\", this._sp, fn);\n        }\n        if (this._canvas) {\n            this._canvas.source.onclick = fn;\n            this._canvas.source.style.pointerEvents = '';\n        }\n    }\n\n    /**\n     * @private\n     * 性能统计参数计算循环处理函数。\n     */\n    loop(): void {\n        Stat._count++;\n        var timer: number = Browser.now();\n        if (timer - Stat._timer < 1000) return;\n\n        var count: number = Stat._count;\n        //计算更精确的FPS值\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\n        if (this._show) {\n            Stat.updateEngineData();\n            // //计算平均值\n            // Stat.trianglesFaces = Math.round(Stat.trianglesFaces / count);\n            // if (!this._useCanvas) {\n            // \tStat.renderBatches = Math.round(Stat.renderBatches / count) - 1;\n            // } else {\n            // \tStat.renderBatches = Math.round(Stat.renderBatches / count);\n            // }\n            // Stat.savedRenderBatches = Math.round(Stat.savedRenderBatches / count);\n            // Stat.shaderCall = Math.round(Stat.shaderCall / count);\n            // Stat.spriteRenderUseCacheCount = Math.round(Stat.spriteRenderUseCacheCount / count);\n            // Stat.canvasNormal = Math.round(Stat.canvasNormal / count);\n            // Stat.canvasBitmap = Math.round(Stat.canvasBitmap / count);\n            // Stat.canvasReCache = Math.ceil(Stat.canvasReCache / count);\n            // Stat.frustumCulling = Math.round(Stat.frustumCulling / count);\n            var delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay;\n            // // if (this._useCanvas)\n            // // Stat._spriteStr = (Stat.spriteCount - 1) + (Stat.spriteRenderUseCacheCount ? (\"/\" + Stat.spriteRenderUseCacheCount) : '');\n            // // else\n            // Sta._spriteStr = Stat.spriteCount + (Stat.spriteRenderUseCacheCount ? (\"/\" + Stat.spriteRenderUseCacheCount) : '');\n\n            // Stat._canvasStr = Stat.canvasReCache + \"/\" + Stat.canvasNormal + \"/\" + Stat.canvasBitmap;\n            // Stat.cpuMemory = Resource.cpuMemory;\n            // Stat.gpuMemory = Resource.gpuMemory;\n            // if (this._useCanvas) {\n            // \tthis.renderInfoPre();\n            // } else\n            this.renderInfo(count);\n            Stat.clear();\n        }\n\n        Stat._count = 0;\n        Stat._timer = timer;\n    }\n\n    // private renderInfoPre(): void {\n    // \tvar i: number = 0;\n    // \tvar one: any;\n    // \tvar value: any;\n    // \tif (this._canvas) {\n    // \t\tvar ctx: any = this._ctx;\n    // \t\tctx.clearRect(this._first ? 0 : this._vx, 0, this._width, this._height);\n    // \t\tfor (i = 0; i < this._view.length; i++) {\n    // \t\t\tone = this._view[i];\n    // \t\t\t//只有第一次才渲染标题文字，减少文字渲染次数\n    // \t\t\tif (this._first) {\n    // \t\t\t\tctx.fillStyle = \"white\";\n    // \t\t\t\tctx.fillText(one.title, one.x, one.y);\n    // \t\t\t}\n    // \t\t\tctx.fillStyle = one.color;\n    // \t\t\tvalue = (Stat as any)[one.value];\n    // \t\t\t(one.units == \"M\") && (value = Math.floor(value / (1024 * 1024) * 100) / 100 + \" M\");\n    // \t\t\tctx.fillText(value + \"\", one.x + this._vx, one.y);\n    // \t\t}\n    // \t}\n    // }\n\n    private renderInfo(count: number): void {\n        var text: string = \"\";\n        for (var i: number = 0; i < this._view.length; i++) {\n            let vieparam: StatUIParams = this._view[i];\n\n            let isAverage: boolean = vieparam.mode == \"average\";\n\n            // var one: any = this._view[i];\n            var value: any = (Stat as any)[vieparam.value];\n            (vieparam.units == \"M\") && (value = Math.floor(value / (1024 * 1024) * 100) / 100);\n            (vieparam.units == \"K\") && (value = Math.floor(value / (1024) * 100) / 100);\n\n            if (isAverage) {\n                value /= count;\n                value = Math.floor(value);\n            }\n\n            (vieparam.units == \"M\") && (value += \"M\");\n            (vieparam.units == \"K\") && (value += \"K\");\n            text += value + \"\\n\";\n        }\n        this._txt.text = text;\n    }\n\n    /**\n     * @override\n     */\n    isCanvasRender(): boolean {\n        return this._useCanvas;\n    }\n\n    /**\n     * @override\n     * 非canvas模式的渲染\n     * */\n    renderNotCanvas(ctx: any, x: number, y: number) {\n        this._show && this._sp && this._sp.render(ctx, 0, 0);\n    }\n\n}\n\n","import { ShaderDefines2D } from \"../ShaderDefines2D\"\nimport { Value2D } from \"../value/Value2D\"\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { RenderParams } from \"../../../../RenderEngine/RenderEnum/RenderParams\";\nimport { Const } from \"../../../../Const\";\n\nexport class SkinSV extends Value2D {\n    texcoord: any;\n    position: any;\n    offsetX: number = 300;\n    offsetY: number = 0;\n\n    //TODO:coverage\n    constructor(type: any) {\n        super(ShaderDefines2D.SKINMESH, 0);\n        var _vlen: number = 8 * Const.BYTES_PE;\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT)\n        this.position = [2, glfloat, false, _vlen, 0];\n        this.texcoord = [2, glfloat, false, _vlen, 2 * Const.BYTES_PE];\n        this.color = [4, glfloat, false, _vlen, 4 * Const.BYTES_PE];\n    }\n\n}\n\n\n","import { Value2D } from \"./Value2D\";\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\n\nexport class PrimitiveSV extends Value2D{\t\n    constructor(args:any){\n        super(ShaderDefines2D.PRIMITIVE,0);\n        this._attribLocation = ['position', 0, 'attribColor', 1];// , 'clipDir', 2, 'clipRect', 3];\n    }\n}\n\n","import { Value2D } from \"./Value2D\";\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\n\nexport class TextureSV extends Value2D {\n    u_colorMatrix: any[];\n    strength: number = 0;\n    blurInfo: any[] = null;\n    colorMat: Float32Array = null;\n    colorAlpha: Float32Array = null;\n    constructor(subID: number = 0) {\n        super(ShaderDefines2D.TEXTURE2D, subID);\n        this._attribLocation = ['posuv', 0, 'attribColor', 1, 'attribFlags', 2];// , 'clipDir', 3, 'clipRect', 4];\n    }\n    /**\n     * @override\n     */\n    clear(): void {\n        this.texture = null;\n        this.shader = null;\n        this.defines._value = this.subID;\n        //defines.setValue(0);\n    }\n}\n\n// 放在这里容易导致这个文件被排除\n//Value2D._initone(ShaderDefines2D.TEXTURE2D, TextureSV);\n//Value2D._initone(ShaderDefines2D.TEXTURE2D | ShaderDefines2D.FILTERGLOW, TextureSV);\n","import { Browser } from \"./Browser\";\n/**\n * <code>Mouse</code> 类用于控制鼠标光标样式。\n */\nexport class Mouse {\n    /**@private */\n    private static _style: any;\n    /**@private */\n    private static _preCursor: string;\n\n    /**\n     * 设置鼠标样式\n     * @param cursorStr\n     * 例如auto move no-drop col-resize\n     * all-scroll pointer not-allowed row-resize\n     * crosshair progress e-resize ne-resize\n     * default text n-resize nw-resize\n     * help vertical-text s-resize se-resize\n     * inherit wait w-resize sw-resize\n     */\n    static set cursor(cursorStr: string) {\n        Mouse._style.cursor = cursorStr;\n    }\n\n    static get cursor(): string {\n        return Mouse._style.cursor;\n    }\n\n    /**@internal */\n    static __init__(): any {\n        Mouse._style = Browser.document.body.style;\n    }\n\n    /**\n     * 隐藏鼠标\n     */\n    static hide(): void {\n        if (Mouse.cursor != \"none\") {\n            Mouse._preCursor = Mouse.cursor;\n            Mouse.cursor = \"none\";\n        }\n    }\n\n    /**\n     * 显示鼠标\n     */\n    static show(): void {\n        if (Mouse.cursor == \"none\") {\n            if (Mouse._preCursor) {\n                Mouse.cursor = Mouse._preCursor;\n            } else {\n                Mouse.cursor = \"auto\";\n            }\n        }\n    }\n}\n\n","import { Mesh2D } from \"./Mesh2D\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { VertexElement } from \"../../renders/VertexElement\";\n\n/**\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\n */\nexport class MeshParticle2D extends Mesh2D {\n    static const_stride: number = 116;\n    private static _fixattriInfo: any[];\n    private static _POOL: any[] = [];\n    static vertexDeclaration: VertexDeclaration = null;\n    static __init__(): void {\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT);\n        MeshParticle2D._fixattriInfo = [\n            glfloat, 4, 0,\t//CornerTextureCoordinate\n            glfloat, 3, 16,//pos\n            glfloat, 3, 28,//vel\n            glfloat, 4, 40,//start color\n            glfloat, 4, 56,//end color\n            glfloat, 3, 72,//size,rot\n            glfloat, 2, 84,//radius\n            glfloat, 4, 92,//radian\n            glfloat, 1, 108,//AgeAddScale\n            glfloat, 1, 112];\n\n\n    }\n\n    //TODO:coverage\n    constructor(maxNum: number) {\n        super(MeshParticle2D.const_stride, maxNum * 4 * MeshParticle2D.const_stride, 4);\t\t//ib 先4\n        this.canReuse = true;\n        this.setAttributes(MeshParticle2D._fixattriInfo);\n        this.createQuadIB(maxNum);\n        this._quadNum = maxNum;\n\n        if (!MeshParticle2D.vertexDeclaration) {\n            MeshParticle2D.vertexDeclaration = new VertexDeclaration(116, [\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\n                new VertexElement(16, VertexElementFormat.Vector3, 1),\n                new VertexElement(28, VertexElementFormat.Vector3, 2),\n                new VertexElement(40, VertexElementFormat.Vector4, 3),\n                new VertexElement(56, VertexElementFormat.Vector4, 4),\n                new VertexElement(72, VertexElementFormat.Vector3, 5),\n                new VertexElement(84, VertexElementFormat.Vector2, 6),\n                new VertexElement(92, VertexElementFormat.Vector4, 7),\n                new VertexElement(108, VertexElementFormat.Single, 8),\n                new VertexElement(112, VertexElementFormat.Single, 9)\n            ]);\n        }\n\n        this._vb.vertexDeclaration = MeshParticle2D.vertexDeclaration;\n    }\n\n    setMaxParticleNum(maxNum: number): void {\n        this._vb.buffer2D._resizeBuffer(maxNum * 4 * MeshParticle2D.const_stride, false);\n        this.createQuadIB(maxNum);\n    }\n\n    /**\n     * \n     */\n    //TODO:coverage\n    static getAMesh(maxNum: number): MeshParticle2D {\n        //console.log('getmesh');\n        if (MeshParticle2D._POOL.length) {\n            var ret: MeshParticle2D = MeshParticle2D._POOL.pop();\n            ret.setMaxParticleNum(maxNum);\n            return ret;\n        }\n        return new MeshParticle2D(maxNum);\n    }\n\n    /**\n     * 把本对象放到回收池中，以便getMesh能用。\n     * @override\n     */\n    //TODO:coverage\n    releaseMesh(): void {\n        this._vb.buffer2D.setByteLength(0);\n        this.vertNum = 0;\n        this.indexNum = 0;\n        //_applied = false;\n        MeshParticle2D._POOL.push(this);\n    }\n\n    //TODO:coverage\n    /**\n     * @override\n     */\n    destroy(): void {\n        this._ib.destroy();\n        this._vb.destroy();\n        this._vb.deleteBuffer();\n        //ib用deletebuffer么\n    }\n}\n\n","﻿import { ILaya } from \"./ILaya\";\nimport { Input } from \"./laya/display/Input\";\nimport { Sprite } from \"./laya/display/Sprite\";\nimport { Stage } from \"./laya/display/Stage\";\nimport { InputManager } from \"./laya/events/InputManager\";\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\nimport { SoundManager } from \"./laya/media/SoundManager\";\nimport { Loader } from \"./laya/net/Loader\";\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\nimport { Render } from \"./laya/renders/Render\";\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\nimport { Context } from \"./laya/resource/Context\";\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\nimport { RenderTexture2D } from \"./laya/resource/RenderTexture2D\";\nimport { Texture } from \"./laya/resource/Texture\";\nimport { Browser } from \"./laya/utils/Browser\";\nimport { CacheManger } from \"./laya/utils/CacheManger\";\nimport { ColorUtils } from \"./laya/utils/ColorUtils\";\nimport { Stat } from \"./laya/utils/Stat\";\nimport { StatUI } from \"./laya/utils/StatUI\";\nimport { Timer } from \"./laya/utils/Timer\";\nimport { ShaderDefines2D } from \"./laya/webgl/shader/d2/ShaderDefines2D\";\nimport { SkinSV } from \"./laya/webgl/shader/d2/skinAnishader/SkinSV\";\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\nimport { Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\nimport { RenderState2D } from \"./laya/webgl/utils/RenderState2D\";\nimport { WebGL } from \"./laya/webgl/WebGL\";\nimport { Mouse } from \"./laya/utils/Mouse\";\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\nimport { MeshParticle2D } from \"./laya/webgl/utils/MeshParticle2D\";\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\nimport { WeakObject } from \"./laya/utils/WeakObject\";\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\nimport { RenderClearFlag } from \"./laya/RenderEngine/RenderEnum/RenderClearFlag\";\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\nimport { Color } from \"./laya/maths/Color\";\nimport { URL } from \"./laya/net/URL\";\nimport { RunDriver } from \"./laya/utils/RunDriver\";\nimport { Config } from \"./Config\";\n\nvar _isinit = false;\n\n/**\n * <code>Laya</code> 是全局对象的引用入口集。\n * Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\n */\nexport class Laya {\n    /*[COMPILER OPTIONS:normal]*/\n    /** 舞台对象的引用。*/\n    static stage: Stage = null;\n\n    /**@private 系统时钟管理器，引擎内部使用*/\n    static systemTimer: Timer = null;\n    /**@private 组件的物理时钟管理器*/\n    static physicsTimer: Timer = null;\n    /**游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果*/\n    static timer: Timer = null;\n    /** 加载管理器的引用。*/\n    static loader: Loader = null;\n    /** 当前引擎版本。*/\n\n    /**@private Render 类的引用。*/\n    static render: Render;\n    /**是否是微信小游戏子域，默认为false**/\n    static isWXOpenDataContext: boolean = false;\n    /**微信小游戏是否需要在主域中自动将加载的文本数据自动传递到子域，默认 false**/\n    static isWXPosMsg: boolean = false;\n    /**@internal */\n    static WasmModules: { [key: string]: { exports: WebAssembly.Exports, memory: WebAssembly.Memory } } = {};\n\n    /**\n     * 初始化引擎。使用引擎需要先初始化引擎，否则可能会报错。\n     */\n    static init(stageConfig?: IStageConfig): Promise<void>;\n    /**\n     * 初始化引擎。使用引擎需要先初始化引擎，否则可能会报错。\n     * @param\twidth 初始化的游戏窗口宽度，又称设计宽度。\n     * @param\theight\t初始化的游戏窗口高度，又称设计高度。\n     * @param\tplugins 参数已失效。\n     */\n    static init(width: number, height: number, ...plugins: any[]): Promise<void>;\n    static init(...args: any[]): Promise<void> {\n        if (_isinit)\n            return Promise.resolve();\n        _isinit = true;\n\n        let stageConfig: IStageConfig;\n        if (typeof (args[0]) === \"number\") {\n            stageConfig = {\n                designWidth: args[0],\n                designHeight: args[1]\n            };\n        }\n        else\n            stageConfig = args[0];\n\n        ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\n        Float32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\n        Uint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\n        Uint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);\n\n        Browser.__init__();\n        URL.__init__();\n\n        let laya3D = (<any>window)[\"Laya3D\"];\n        if (laya3D) {\n            if (!WebGL.enable())\n                return Promise.reject(\"Must support webGL!\");\n\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\n            Render.is3DMode = true;\n        }\n\n        // 创建主画布\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\n        var mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\n        //Render._mainCanvas = mainCanv;\n        var style: any = mainCanv.source.style;\n        style.position = 'absolute';\n        style.top = style.left = \"0px\";\n        style.background = \"#000000\";\n\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame) {\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\n        }\n\n        // 创建离屏画布\n        //创建离线画布\n        Browser.canvas = new HTMLCanvas(true);\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\n        Browser.supportWebAudio = SoundManager.__init__();\n        Browser.supportLocalStorage = LocalStorage.__init__();\n\n        //temp TODO 以后分包\n        Laya.systemTimer = new Timer(false);\n        systemTimer = Timer.gSysTimer = Laya.systemTimer;\n        Laya.physicsTimer = new Timer(false);\n        Laya.timer = new Timer(false);\n\n        ILaya.systemTimer = Laya.systemTimer;\n        timer = ILaya.timer = Laya.timer;\n        physicsTimer = ILaya.physicsTimer = Laya.physicsTimer;\n\n        Laya.loader = new Loader();\n        ILaya.Laya = Laya;\n        loader = ILaya.loader = Laya.loader;\n\n        WeakObject.__init__();\n        Mouse.__init__();\n\n        if (LayaEnv.beforeInit) {\n            if (LayaEnv.isPlaying)\n                LayaEnv.beforeInit(stageConfig);\n            else\n                LayaEnv.beforeInit = null;\n        }\n\n        if (LayaEnv.isConch) {\n            Laya.enableNative();\n        }\n        CacheManger.beginCheck();\n\n        stage = Laya.stage = new Stage();\n        ILaya.stage = Laya.stage;\n\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\n        }\n\n        MeshQuadTexture.__int__();\n        MeshVG.__init__();\n        MeshTexture.__init__();\n        Laya.render = new Render(0, 0, Browser.mainCanvas);\n        render = Laya.render;\n\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\n        if (stageConfig.scaleMode)\n            stage.scaleMode = stageConfig.scaleMode;\n        if (stageConfig.screenMode)\n            stage.screenMode = stageConfig.screenMode;\n        if (stageConfig.alignV)\n            stage.alignV = stageConfig.alignV;\n        if (stageConfig.alignH)\n            stage.alignH = stageConfig.alignH;\n        if (Config.isAlpha)\n            stage.bgColor = null;\n        else if (stageConfig.backgroundColor)\n            stage.bgColor = stageConfig.backgroundColor;\n\n        ((<any>window)).stage = stage;\n\n        RenderStateContext.__init__();\n        MeshParticle2D.__init__();\n        RenderSprite.__init__();\n        InputManager.__init__(stage, Render.canvas);\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\n            Input.isAppUseNewInput = true;\n        }\n        Input.__init__();\n        SoundManager.autoStopMusic = true;\n        Stat._StatRender = new StatUI();\n\n        Value2D._initone(ShaderDefines2D.TEXTURE2D, TextureSV);\n        Value2D._initone(ShaderDefines2D.TEXTURE2D | ShaderDefines2D.FILTERGLOW, TextureSV);\n        Value2D._initone(ShaderDefines2D.PRIMITIVE, PrimitiveSV);\n        Value2D._initone(ShaderDefines2D.SKINMESH, SkinSV);\n\n        if (laya3D) {\n            return laya3D.__init__().then(() => {\n                if (LayaEnv.afterInit) {\n                    if (LayaEnv.isPlaying)\n                        LayaEnv.afterInit();\n                    else\n                        LayaEnv.afterInit = null;\n                }\n            });\n        }\n        else {\n            if (LayaEnv.afterInit) {\n                if (LayaEnv.isPlaying)\n                    LayaEnv.afterInit();\n                else\n                    LayaEnv.afterInit = null;\n            }\n\n            return Promise.resolve();\n        }\n    }\n\n    static addWasmModule(id: string, exports: WebAssembly.Exports, memory: WebAssembly.Memory) {\n        Laya.WasmModules[id] = { exports, memory };\n    }\n\n    /**\n     * 表示是否捕获全局错误并弹出提示。默认为false。\n     * 适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。\n     */\n    static alertGlobalError(value: boolean) {\n        var erralert: number = 0;\n        if (value) {\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\n                if (erralert++ < 5 && detail)\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\n            }\n        } else {\n            Browser.window.onerror = null;\n        }\n    }\n    /**@internal */\n    private static _evcode: string = \"eva\" + \"l\";\n\n    /**@internal */\n    static _runScript(script: string): any {\n        return Browser.window[Laya._evcode](script);\n    }\n\n    /**\n     * 开启DebugPanel\n     * @param\tdebugJsPath laya.debugtool.js文件路径\n     */\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\n            var script: any = Browser.createElement(\"script\");\n            script.onload = function (): void {\n                (window as any)['Laya'][\"DebugPanel\"].enable();\n            }\n            script.src = debugJsPath;\n            Browser.document.body.appendChild(script);\n        } else {\n            (window as any)['Laya'][\"DebugPanel\"].enable();\n        }\n    }\n\n    private static isNativeRender_enable: boolean = false;\n\n    /**@private */\n    private static enableNative(): void {\n        if (Laya.isNativeRender_enable)\n            return;\n        Laya.isNativeRender_enable = true;\n        RenderState2D.width = Browser.window.innerWidth;\n        RenderState2D.height = Browser.window.innerHeight;\n        Browser.measureText = function (txt: string, font: string): any {\n            (window as any)[\"conchTextCanvas\"].font = font;\n            return (window as any)[\"conchTextCanvas\"].measureText(txt);\n        }\n\n        Stage.clear = function (color: string): void {\n            Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\n            var c: any[] = ColorUtils.create(color).arrColor;\n\n            LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, new Color(c[0], c[1], c[2], c[3]), 1);\n            // if (c) gl.clearColor(c[0], c[1], c[2], c[3]);\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n            RenderState2D.clear();\n        }\n\n        Sprite.drawToCanvas = function (sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): any {\n            offsetX -= sprite.x;\n            offsetY -= sprite.y;\n            offsetX |= 0;\n            offsetY |= 0;\n            canvasWidth |= 0;\n            canvasHeight |= 0;\n\n            var canv: HTMLCanvas = new HTMLCanvas(false);\n            var ctx: Context = canv.getContext('2d') as Context;\n            canv.size(canvasWidth, canvasHeight);\n\n            ctx.asBitmap = true;\n            ctx._targets.start();\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\n            ctx.flush();\n            ctx._targets.end();\n            ctx._targets.restore();\n            return canv;\n        }\n        //RenderTexture2D.prototype._uv = RenderTexture2D.flipyuv;\n        Object[\"defineProperty\"](RenderTexture2D.prototype, \"uv\", {\n            \"get\": function (): any {\n                return this._uv;\n            },\n            \"set\": function (v: any): void {\n                this._uv = v;\n            }\n        }\n        );\n        HTMLCanvas.prototype.getTexture = function (): Texture | RenderTexture2D {\n            if (!this._texture) {\n                // @ts-ignore\n                this._texture = this.context._targets;\n                //遗留的奇怪代码，先注释掉\n                // @ts-ignore\n                this._texture.uv = RenderTexture2D.flipyuv;\n                // @ts-ignore\n                this._texture.bitmap = this._texture;\n            }\n            return this._texture;\n        }\n    }\n}\n\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\n    newU8List.set(arrU8List);\n    return newU8List.buffer;\n}\n\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\n    var sz: number = this.length;\n    var dec: Uint8Array = new Uint8Array(this.length);\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\n    return dec;\n}\n\nfunction float32ArraySlice(this: Float32Array): Float32Array {\n    var sz: number = this.length;\n    var dec: Float32Array = new Float32Array(this.length);\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\n    return dec;\n}\n\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\n    var sz: number;\n    var dec: Uint16Array;\n    var i: number;\n    if (arg.length === 0) {\n        sz = this.length;\n        dec = new Uint16Array(sz);\n        for (i = 0; i < sz; i++)\n            dec[i] = this[i];\n\n    } else if (arg.length === 2) {\n        var start: number = arg[0];\n        var end: number = arg[1];\n\n        if (end > start) {\n            sz = end - start;\n            dec = new Uint16Array(sz);\n            for (i = start; i < end; i++)\n                dec[i - start] = this[i];\n        } else {\n            dec = new Uint16Array(0);\n        }\n    }\n    return dec;\n}\n\n\nILaya.Loader = Loader;\nILaya.Context = Context;\nILaya.Browser = Browser;\n\n/**@internal */\nexport var init = Laya.init;\n/**@internal */\nexport var stage: Stage;\n/**@internal */\nexport var systemTimer: Timer;\n/**@internal */\nexport var startTimer: Timer;\n/**@internal */\nexport var physicsTimer: Timer;\n/**@internal */\nexport var updateTimer: Timer;\n/**@internal */\nexport var lateTimer: Timer;\n/**@internal */\nexport var timer: Timer;\n/**@internal */\nexport var loader: Loader;\n/**@internal */\nexport var render: Render;\n/**@internal */\nexport var isWXOpenDataContext: boolean;\n/**@internal */\nexport var isWXPosMsg: boolean;\n/**@internal */\nexport var alertGlobalError = Laya.alertGlobalError;\n/**@internal */\nexport var enableDebugPanel = Laya.enableDebugPanel;","export class AnimatorState2DScript {\n    /**\n     * 动画状态开始时执行。\n     */\n    onStateEnter(): void {\n\n    }\n\n    /**\n     * 动画状态更新时执行。\n     */\n    onStateUpdate(): void {\n\n    }\n\n    /**\n     * 动画状态退出时执行。\n     */\n    onStateExit(): void {\n\n    }\n}","import { Component } from \"./Component\";\nimport { Event } from \"../events/Event\"\nimport { Collision } from \"../d3/physics/Collision\";\nimport { PhysicsComponent } from \"../d3/physics/PhysicsComponent\";\nimport { ColliderBase } from \"../physics/ColliderBase\";\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\nimport { Sprite } from \"../display/Sprite\";\n\n/**\n * <code>Script</code> 类用于创建脚本的父类，该类为抽象类，不允许实例。\n */\nexport class Script extends Component {\n    declare owner: Sprite | Sprite3D;\n\n    /**\n     * @internal\n     * @override\n     */\n    _isScript(): boolean {\n        return true;\n    }\n\n    protected setupScript(): void {\n        let owner = this.owner;\n        let func: Function;\n\n        if (func = this.onTriggerEnter) owner.on(Event.TRIGGER_ENTER, this, func);\n        if (func = this.onTriggerStay) owner.on(Event.TRIGGER_STAY, this, func);\n        if (func = this.onTriggerExit) owner.on(Event.TRIGGER_EXIT, this, func);\n\n        if (func = this.onCollisionEnter) owner.on(Event.COLLISION_ENTER, this, func);\n        if (func = this.onCollisionStay) owner.on(Event.COLLISION_STAY, this, func);\n        if (func = this.onCollisionExit) owner.on(Event.COLLISION_EXIT, this, func);\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\n\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\n\n        if (func = this.onKeyDown) owner.on(Event.KEY_DOWN, this, func);\n        if (func = this.onKeyPress) owner.on(Event.KEY_PRESS, this, func);\n        if (func = this.onKeyUp) owner.on(Event.KEY_UP, this, func);\n    }\n\n    /**\n     * 开始碰撞时执行\n     */\n    onTriggerEnter?(other: PhysicsComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\n\n    /**\n     * 持续碰撞时执行\n     */\n    onTriggerStay?(other: PhysicsComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\n\n    /**\n     * 结束碰撞时执行\n     */\n    onTriggerExit?(other: PhysicsComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\n\n    /**\n     * 开始碰撞时执行\n     */\n    onCollisionEnter?(collision: Collision): void;\n\n    /**\n     * 持续碰撞时执行\n     */\n    onCollisionStay?(collision: Collision): void;\n\n    /**\n     * 结束碰撞时执行\n     */\n    onCollisionExit?(collision: Collision): void;\n\n    /**\n     * 关节破坏时执行此方法\n     */\n    onJointBreak?(): void;\n\n    /**\n     * 鼠标按下时执行\n     */\n    onMouseDown?(evt: Event): void;\n\n    /**\n     * 鼠标抬起时执行\n     */\n    onMouseUp?(evt: Event): void;\n\n    /**\n     * 鼠标右键或中键按下时执行\n     */\n    onRightMouseDown?(evt: Event): void;\n\n    /**\n     * 鼠标右键或中键抬起时执行\n     */\n    onRightMouseUp?(evt: Event): void;\n\n    /**\n     * 鼠标在节点上移动时执行\n     */\n    onMouseMove?(evt: Event): void;\n\n    /**\n     * 鼠标进入节点时执行\n     */\n    onMouseOver?(evt: Event): void;\n\n    /**\n     * 鼠标离开节点时执行\n     */\n    onMouseOut?(evt: Event): void;\n\n    /**\n     * 鼠标按住一个物体后，拖拽时执行\n     */\n    onMouseDrag?(evt: Event): void;\n\n    /**\n     * 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行\n     */\n    onMouseDragEnd?(evt: Event): void;\n\n    /**\n     * 鼠标点击时执行\n     */\n    onMouseClick?(evt: Event): void;\n\n    /**\n     * 鼠标双击时执行\n     */\n    onMouseDoubleClick?(evt: Event): void;\n\n    /**\n     * 鼠标右键点击时执行\n     */\n    onMouseRightClick?(evt: Event): void;\n\n    /**\n     * 键盘按下时执行\n     */\n    onKeyDown?(evt: Event): void;\n\n    /**\n     * 键盘产生一个字符时执行\n     */\n    onKeyPress?(evt: Event): void;\n\n    /**\n     * 键盘抬起时执行\n     */\n    onKeyUp?(evt: Event): void;\n}\n\n","import { Sprite } from \"../display/Sprite\";\nimport { Tween } from \"../utils/Tween\";\nimport { Event } from \"../events/Event\";\nimport { Ease } from \"../utils/Ease\";\nimport { Handler } from \"../utils/Handler\";\n\n/**\n * @Script {name:ButtonEffect}\n * @author ww\n */\nexport class ButtonEffect {\n\n    private _tar: Sprite;\n    private _curState: number = 0;\n    private _curTween: Tween;\n    /**\n     * effectScale\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\n     */\n    effectScale: number = 1.5;\n    /**\n     * tweenTime\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\n     */\n    tweenTime: number = 300;\n    /**\n     * effectEase\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\n     */\n    effectEase: string;\n    /**\n     * backEase\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\n     */\n    backEase: string;\n\n    /**\n     * 设置控制对象 \n     * @param tar\n     */\n    set target(tar: Sprite) {\n        this._tar = tar;\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\n    }\n\n    private toChangedState(): void {\n        this._curState = 1;\n        if (this._curTween) Tween.clear(this._curTween);\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\n    }\n\n    private toInitState(): void {\n        if (this._curState == 2) return;\n        if (this._curTween) Tween.clear(this._curTween);\n        this._curState = 2;\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\n    }\n    private tweenComplete(): void {\n        this._curState = 0;\n        this._curTween = null;\n    }\n}\n\n\n","import { Handler } from \"../utils/Handler\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Tween } from \"../utils/Tween\";\nimport { Component } from \"../components/Component\";\n\n/**\n * 效果插件基类，基于对象池管理\n */\nexport class EffectBase extends Component {\n    /**动画持续时间，单位为毫秒*/\n    duration: number = 1000;\n    /**动画延迟时间，单位为毫秒*/\n    delay: number = 0;\n    /**重复次数，默认为播放一次*/\n    repeat: number = 0;\n    /**缓动类型，如果为空，则默认为匀速播放*/\n    ease: string;\n    /**触发事件，如果为空，则创建时触发*/\n    eventName: string;\n    /**效用作用的目标对象，如果为空，则是脚本所在的节点本身*/\n    target: Sprite;\n    /**效果结束后，是否自动移除节点*/\n    autoDestroyAtComplete: boolean = true;\n\n    protected _comlete: Handler;\n    protected _tween: Tween;\n\n    protected _onAwake(): void {\n        this.target = this.target || (<Sprite>this.owner);\n        if (this.autoDestroyAtComplete) \n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\n        if (this.eventName) \n            this.owner.on(this.eventName, this, this._exeTween);\n        else \n            this._exeTween();\n    }\n\n    protected _exeTween(): void {\n        this._tween = this._doTween();\n        this._tween.repeat = this.repeat;\n    }\n\n    protected _doTween(): Tween {\n        return null;\n    }\n\n    onReset(): void {\n        this.duration = 1000;\n        this.delay = 0;\n        this.repeat = 0;\n        this.ease = null;\n        this.target = null;\n        if (this.eventName) {\n            this.owner.off(this.eventName, this, this._exeTween);\n            this.eventName = null;\n        }\n        if (this._comlete) {\n            this._comlete.recover();\n            this._comlete = null;\n        }\n        if (this._tween) {\n            this._tween.clear();\n            this._tween = null;\n        }\n    }\n}\n\n","import { EffectBase } from \"././EffectBase\";\nimport { Tween } from \"../utils/Tween\";\nimport { Ease } from \"../utils/Ease\";\n\n/**\n * 淡入效果\n */\nexport class FadeIn extends EffectBase {\n    /**\n     * @override\n     */\n    protected _doTween(): Tween {\n        this.target.alpha = 0;\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\n    }\n}\n\n","import { EffectBase } from \"././EffectBase\";\nimport { Tween } from \"../utils/Tween\";\nimport { Ease } from \"../utils/Ease\";\n\n/**\n * 淡出效果\n */\nexport class FadeOut extends EffectBase {\n    /**\n     * @override\n     */\n    protected _doTween(): Tween {\n        this.target.alpha = 1;\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\n    }\n}\n\n","/**\n * <p><code>KeyLocation</code> 类包含表示在键盘或类似键盘的输入设备上按键位置的常量。</p>\n * <p><code>KeyLocation</code> 常数用在键盘事件对象的 <code>keyLocation </code>属性中。</p>\n */\nexport class KeyLocation {\n    /**\n     * 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\n     */\n    static STANDARD: number = 0;\n    /**\n     * 表示激活的键在左侧键位置（此键有多个可能的位置）。\n     */\n    static LEFT: number = 1;\n    /**\n     * 表示激活的键在右侧键位置（此键有多个可能的位置）。\n     */\n    static RIGHT: number = 2;\n    /**\n     * <p>表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。</p>\n     * <p>注意：此属性只在flash模式下有效。</p>\n     * */\n    static NUM_PAD: number = 3;\n\n}\n\n\n","/**\n * <code>Keyboard</code> 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\n */\nexport class Keyboard {\n    /** 与 0 的键控代码值 (48) 关联的常数。*/\n    static NUMBER_0: number = 48;\n    /** 与 1 的键控代码值 (49) 关联的常数。*/\n    static NUMBER_1: number = 49;\n    /** 与 2 的键控代码值 (50) 关联的常数。*/\n    static NUMBER_2: number = 50;\n    /** 与 3 的键控代码值 (51) 关联的常数。*/\n    static NUMBER_3: number = 51;\n    /** 与 4 的键控代码值 (52) 关联的常数。*/\n    static NUMBER_4: number = 52;\n    /** 与 5 的键控代码值 (53) 关联的常数。*/\n    static NUMBER_5: number = 53;\n    /** 与 6 的键控代码值 (54) 关联的常数。*/\n    static NUMBER_6: number = 54;\n    /** 与 7 的键控代码值 (55) 关联的常数。*/\n    static NUMBER_7: number = 55;\n    /** 与 8 的键控代码值 (56) 关联的常数。*/\n    static NUMBER_8: number = 56;\n    /** 与 9 的键控代码值 (57) 关联的常数。*/\n    static NUMBER_9: number = 57;\n\n    /** 与 A 键的键控代码值 (65) 关联的常数。*/\n    static A: number = 65;\n    /** 与 B 键的键控代码值 (66) 关联的常数。*/\n    static B: number = 66;\n    /** 与 C 键的键控代码值 (67) 关联的常数。*/\n    static C: number = 67;\n    /** 与 D 键的键控代码值 (68) 关联的常数。*/\n    static D: number = 68;\n    /** 与 E 键的键控代码值 (69) 关联的常数。*/\n    static E: number = 69;\n    /** 与 F 键的键控代码值 (70) 关联的常数。*/\n    static F: number = 70;\n    /** 与 G 键的键控代码值 (71) 关联的常数。*/\n    static G: number = 71;\n    /** 与 H 键的键控代码值 (72) 关联的常数。*/\n    static H: number = 72;\n    /** 与 I 键的键控代码值 (73) 关联的常数。*/\n    static I: number = 73;\n    /** 与 J 键的键控代码值 (74) 关联的常数。*/\n    static J: number = 74;\n    /** 与 K 键的键控代码值 (75) 关联的常数。*/\n    static K: number = 75;\n    /** 与 L 键的键控代码值 (76) 关联的常数。*/\n    static L: number = 76;\n    /** 与 M 键的键控代码值 (77) 关联的常数。*/\n    static M: number = 77;\n    /** 与 N 键的键控代码值 (78) 关联的常数。*/\n    static N: number = 78;\n    /** 与 O 键的键控代码值 (79) 关联的常数。*/\n    static O: number = 79;\n    /** 与 P 键的键控代码值 (80) 关联的常数。*/\n    static P: number = 80;\n    /** 与 Q 键的键控代码值 (81) 关联的常数。*/\n    static Q: number = 81;\n    /** 与 R 键的键控代码值 (82) 关联的常数。*/\n    static R: number = 82;\n    /** 与 S 键的键控代码值 (83) 关联的常数。*/\n    static S: number = 83;\n    /** 与 T 键的键控代码值 (84) 关联的常数。*/\n    static T: number = 84;\n    /** 与 U 键的键控代码值 (85) 关联的常数。*/\n    static U: number = 85;\n    /** 与 V 键的键控代码值 (86) 关联的常数。*/\n    static V: number = 86;\n    /** 与 W 键的键控代码值 (87) 关联的常数。*/\n    static W: number = 87;\n    /** 与 X 键的键控代码值 (88) 关联的常数。*/\n    static X: number = 88;\n    /** 与 Y 键的键控代码值 (89) 关联的常数。*/\n    static Y: number = 89;\n    /** 与 Z 键的键控代码值 (90) 关联的常数。*/\n    static Z: number = 90;\n\n    /** 与 F1 的键控代码值 (112) 关联的常数。*/\n    static F1: number = 112;\n    /** 与 F2 的键控代码值 (113) 关联的常数。*/\n    static F2: number = 113;\n    /** 与 F3 的键控代码值 (114) 关联的常数。*/\n    static F3: number = 114;\n    /** 与 F4 的键控代码值 (115) 关联的常数。*/\n    static F4: number = 115;\n    /** 与 F5 的键控代码值 (116) 关联的常数。*/\n    static F5: number = 116;\n    /** 与 F6 的键控代码值 (117) 关联的常数。*/\n    static F6: number = 117;\n    /** 与 F7 的键控代码值 (118) 关联的常数。*/\n    static F7: number = 118;\n    /** 与 F8 的键控代码值 (119) 关联的常数。*/\n    static F8: number = 119;\n    /** 与 F9 的键控代码值 (120) 关联的常数。*/\n    static F9: number = 120;\n    /** 与 F10 的键控代码值 (121) 关联的常数。*/\n    static F10: number = 121;\n    /** 与 F11 的键控代码值 (122) 关联的常数。*/\n    static F11: number = 122;\n    /** 与 F12 的键控代码值 (123) 关联的常数。*/\n    static F12: number = 123;\n    /** 与 F13 的键控代码值 (124) 关联的常数。*/\n    static F13: number = 124;\n    /** 与 F14 的键控代码值 (125) 关联的常数。*/\n    static F14: number = 125;\n    /** 与 F15 的键控代码值 (126) 关联的常数。*/\n    static F15: number = 126;\n\n    /** 与数字键盘的伪键控代码 (21) 关联的常数。*/\n    static NUMPAD: number = 21;\n    /** 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。*/\n    static NUMPAD_0: number = 96;\n    /** 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。*/\n    static NUMPAD_1: number = 97;\n    /** 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。*/\n    static NUMPAD_2: number = 98;\n    /** 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。*/\n    static NUMPAD_3: number = 99;\n    /** 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。*/\n    static NUMPAD_4: number = 100;\n    /** 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。*/\n    static NUMPAD_5: number = 101;\n    /** 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。*/\n    static NUMPAD_6: number = 102;\n    /** 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。*/\n    static NUMPAD_7: number = 103;\n    /** 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。*/\n    static NUMPAD_8: number = 104;\n    /** 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。*/\n    static NUMPAD_9: number = 105;\n\n    /** 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。*/\n    static NUMPAD_ADD: number = 107;\n    /** 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。*/\n    static NUMPAD_DECIMAL: number = 110;\n    /** 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。*/\n    static NUMPAD_DIVIDE: number = 111;\n    /** 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。*/\n    static NUMPAD_ENTER: number = 108;\n    /** 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。*/\n    static NUMPAD_MULTIPLY: number = 106;\n    /** 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。*/\n    static NUMPAD_SUBTRACT: number = 109;\n    /** 与 ; 键的键控代码值 (186) 关联的常数。*/\n    static SEMICOLON: number = 186;\n    /** 与 = 键的键控代码值 (187) 关联的常数。*/\n    static EQUAL: number = 187;\n    /** 与 F15 的键控代码值 (188) 关联的常数。*/\n    static COMMA: number = 188;\n    /** 与 - 键的键控代码值 (189) 关联的常数。*/\n    static MINUS: number = 189;\n    /** 与 . 键的键控代码值 (190) 关联的常数。*/\n    static PERIOD: number = 190;\n    /** 与 / 键的键控代码值 (191) 关联的常数。*/\n    static SLASH: number = 191;\n    /** 与 ` 键的键控代码值 (192) 关联的常数。*/\n    static BACKQUOTE: number = 192;\n    /** 与 [ 键的键控代码值 (219) 关联的常数。*/\n    static LEFTBRACKET: number = 219;\n    /** 与 \\ 键的键控代码值 (220) 关联的常数。*/\n    static BACKSLASH: number = 220;\n    /** 与 ] 键的键控代码值 (221) 关联的常数。*/\n    static RIGHTBRACKET: number = 221;\n    /** 与 ' 键的键控代码值 (222) 关联的常数。*/\n    static QUOTE: number = 222;\n    /** 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。*/\n    static ALTERNATE: number = 18;\n    /** 与 Backspace 的键控代码值 (8) 关联的常数。*/\n    static BACKSPACE: number = 8;\n    /** 与 Caps Lock 的键控代码值 (20) 关联的常数。*/\n    static CAPS_LOCK: number = 20;\n    /** 与 Mac 命令键 (15) 关联的常数。*/\n    static COMMAND: number = 15;\n    /** 与 Ctrl 的键控代码值 (17) 关联的常数。*/\n    static CONTROL: number = 17;\n    /** 与 Delete 的键控代码值 (46) 关联的常数。*/\n    static DELETE: number = 46;\n    /** 与 Enter 的键控代码值 (13) 关联的常数。*/\n    static ENTER: number = 13;\n    /** 与 Esc 的键控代码值 (27) 关联的常数。*/\n    static ESCAPE: number = 27;\n    /** 与 Page Up 的键控代码值 (33) 关联的常数。*/\n    static PAGE_UP: number = 33;\n    /** 与 Page Down 的键控代码值 (34) 关联的常数。*/\n    static PAGE_DOWN: number = 34;\n    /** 与 End 的键控代码值 (35) 关联的常数。*/\n    static END: number = 35;\n    /** 与 Home 的键控代码值 (36) 关联的常数。*/\n    static HOME: number = 36;\n    /** 与向左箭头键的键控代码值 (37) 关联的常数。*/\n    static LEFT: number = 37;\n    /** 与向上箭头键的键控代码值 (38) 关联的常数。*/\n    static UP: number = 38;\n    /** 与向右箭头键的键控代码值 (39) 关联的常数。*/\n    static RIGHT: number = 39;\n    /** 与向下箭头键的键控代码值 (40) 关联的常数。*/\n    static DOWN: number = 40;\n    /** 与 Shift 的键控代码值 (16) 关联的常数。*/\n    static SHIFT: number = 16;\n    /** 与空格键的键控代码值 (32) 关联的常数。*/\n    static SPACE: number = 32;\n    /** 与 Tab 的键控代码值 (9) 关联的常数。*/\n    static TAB: number = 9;\n    /** 与 Insert 的键控代码值 (45) 关联的常数。*/\n    static INSERT: number = 45;\n}\n\n\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\n\n/**\n * @private\n * CommandEncoder Shader变量集合\n */\nexport class CommandEncoder {\n    \n    /**@internal shader variable list*/\n    _idata: ShaderVariable[] = [];\n\n    /**\n     * 实例化一个ShaderVariable集合\n     */\n    constructor() {\n    }\n\n    /**\n     * @internal\n     * @returns Array of ShaderVariable\n     */\n    getArrayData(): ShaderVariable[] {\n        return this._idata;\n    }\n\n    /**\n     * @internal\n     * @returns count of ShaderVariableArray\n     */\n    getCount(): number {\n        return this._idata.length;\n    }\n\n    /**\n     * @internal\n     * add one ShaderVariable\n     * @param variable \n     */\n    addShaderUniform(variable: ShaderVariable): void {\n        this._idata.push(variable);\n    }\n\n}\n\n","import { Sprite } from \"../display/Sprite\"\nimport { SpriteConst } from \"../display/SpriteConst\"\nimport { Stage } from \"../display/Stage\"\nimport { RenderSprite } from \"../renders/RenderSprite\"\nimport { Context } from \"../resource/Context\"\nimport { ILaya } from \"../../ILaya\";\n/**\n * ...\n * @author ww\n */\nexport class QuickTestTool {\n\n    private static showedDic: any = {};\n    private static _rendertypeToStrDic: any = {};\n    private static _typeToNameDic: any = {};\n\n    //TODO:coverage\n    static getMCDName(type: number): string {\n        return QuickTestTool._typeToNameDic[type];\n    }\n\n    //TODO:coverage\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\n        if (!force && QuickTestTool.showedDic[type])\n            return;\n        QuickTestTool.showedDic[type] = true;\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\n            var arr: any[] = [];\n            var tType: number;\n            tType = 1;\n            while (tType <= type) {\n                if (tType & type) {\n                    arr.push(QuickTestTool.getMCDName(tType & type));\n                }\n                tType = tType << 1;\n            }\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\n        }\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\n\n    }\n\n    //TODO:coverage\n    static __init__(): void {\n\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\n        QuickTestTool._typeToNameDic[SpriteConst.ONECHILD] = \"ONECHILD\";\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\n\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\n        QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\n    }\n    _renderType: number;\n    _repaint: number;\n    _x: number;\n    _y: number;\n    //TODO:coverage\n    constructor() {\n\n    }\n    /**\n     * 更新、呈现显示对象。由系统调用。\n     * @param\tcontext 渲染的上下文引用。\n     * @param\tx X轴坐标。\n     * @param\ty Y轴坐标。\n     */\n    //TODO:coverage\n    render(context: Context, x: number, y: number): void {\n        QuickTestTool._addType(this._renderType);\n        QuickTestTool.showRenderTypeInfo(this._renderType);\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\n        //{\n        //debugger;\n        //}\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\n        this._repaint = 0;\n    }\n\n    private static _PreStageRender: Function;\n\n    /**@internal */\n    //TODO:coverage\n    _stageRender(context: Context, x: number, y: number): void {\n        QuickTestTool._countStart();\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\n        QuickTestTool._countEnd();\n    }\n    private static _countDic: any = {};\n\n    //TODO:coverage\n    private static _countStart(): void {\n        var key: string;\n        for (key in QuickTestTool._countDic) {\n            QuickTestTool._countDic[key] = 0;\n        }\n    }\n    private static _i: number = 0;\n\n    //TODO:coverage\n    private static _countEnd(): void {\n        QuickTestTool._i++;\n        if (QuickTestTool._i > 60) {\n            QuickTestTool.showCountInfo();\n            QuickTestTool._i = 0;\n        }\n    }\n\n    /**@internal */\n    private static _addType(type: number): void {\n        if (!QuickTestTool._countDic[type]) {\n            QuickTestTool._countDic[type] = 1;\n        } else {\n            QuickTestTool._countDic[type] += 1;\n        }\n    }\n\n    //TODO:coverage\n    static showCountInfo(): void {\n        console.log(\"===================\");\n        var key: string;\n        for (key in QuickTestTool._countDic) {\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\n            QuickTestTool.showRenderTypeInfo(key, true);\n        }\n    }\n\n    //TODO:coverage\n    static enableQuickTest(): void {\n        QuickTestTool.__init__();\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\n    }\n}\n\n\n","import { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { Browser } from \"../utils/Browser\";\nimport { Handler } from \"../utils/Handler\";\n\n/**\n * @private\n */\nexport class TTFLoader {\n    private static _testString: string = \"LayaTTFFont\";\n    fontName: string;\n    complete: Handler | null;\n    err: Handler | null;\n    private _fontTxt: string;\n    private _url: string;\n    private _div: any;\n    private _txtWidth: number;\n\n    //TODO:coverage\n    load(fontPath: string): void {\n        this._url = fontPath;\n        var tArr: any[] = fontPath.toLowerCase().split(\".ttf\")[0].split(\"/\");\n        this.fontName = tArr[tArr.length - 1];\n        if (LayaEnv.isConch) {\n            ILaya.loader.fetch(this._url, \"arraybuffer\").then(data => {\n                if (data)\n                    (window as any)[\"conchTextCanvas\"].setFontFaceFromBuffer(this.fontName, data);\n                this._complete();\n            });\n        } else\n            if ((window as any).FontFace) {\n                this._loadWithFontFace()\n            }\n            else {\n                this._loadWithCSS();\n            }\n    }\n\n    //TODO:coverage\n    private _complete(): void {\n        ILaya.systemTimer.clear(this, this._complete);\n        ILaya.systemTimer.clear(this, this._checkComplete);\n        if (this._div && this._div.parentNode) {\n\n            this._div.parentNode.removeChild(this._div);\n            this._div = null;\n        }\n        if (this.complete) {\n            this.complete.runWith(this);\n            this.complete = null;\n        }\n    }\n\n    //TODO:coverage\n    private _checkComplete(): void {\n        if (ILaya.Browser.measureText(TTFLoader._testString, this._fontTxt).width != this._txtWidth) {\n            this._complete();\n        }\n    }\n\n    //TODO:coverage\n    private _loadWithFontFace(): void {\n\n        var fontFace: any = new (window as any).FontFace(this.fontName, \"url('\" + this._url + \"')\");\n        (document as any).fonts.add(fontFace);\n        var self: TTFLoader = this;\n        fontFace.loaded.then((function (): void {\n            self._complete()\n        }));\n        //_createDiv();\n        fontFace.load();\n\n    }\n\n    //TODO:coverage\n    private _createDiv(): void {\n        this._div = Browser.createElement(\"div\");\n        this._div.innerHTML = \"laya\";\n        var _style: any = this._div.style;\n        _style.fontFamily = this.fontName;\n        _style.position = \"absolute\";\n        _style.left = \"-100px\";\n        _style.top = \"-100px\";\n        document.body.appendChild(this._div);\n    }\n\n    //TODO:coverage\n    private _loadWithCSS(): void {\n\n        var fontStyle: any = Browser.createElement(\"style\");\n        fontStyle.type = \"text/css\";\n        document.body.appendChild(fontStyle);\n        fontStyle.textContent = \"@font-face { font-family:'\" + this.fontName + \"'; src:url('\" + this._url + \"');}\";\n        this._fontTxt = \"40px \" + this.fontName;\n        this._txtWidth = Browser.measureText(TTFLoader._testString, this._fontTxt).width;\n\n        var self: TTFLoader = this;\n        fontStyle.onload = function (): void {\n            ILaya.systemTimer.once(10000, self, self._complete);\n        };\n        ILaya.systemTimer.loop(20, this, this._checkComplete);\n\n        this._createDiv();\n\n    }\n\n}\n\n\n","import { URL } from \"./URL\";\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * <p>资源版本的生成由layacmd或IDE完成，使用 <code>ResourceVersion</code> 简化使用过程。</p>\n * <p>调用 <code>enable</code> 启用资源版本管理。</p>\n */\nexport class ResourceVersion {\n    /**基于文件夹的资源管理方式（老版本IDE默认类型）*/\n    static FOLDER_VERSION: number = 1;\n    /**基于文件名映射管理方式（新版本IDE默认类型）*/\n    static FILENAME_VERSION: number = 2;\n    /**版本清单*/\n    static manifest: any;\n    /**当前使用的版本管理类型*/\n    static type: number = ResourceVersion.FOLDER_VERSION;\n\n    /**\n     * <p>启用资源版本管理。</p>\n     * <p>由于只有发布版本需要资源管理。因此没有资源管理文件时，可以设置manifestFile为null或者不存在的路径。</p>\n     * @param\tmanifestFile\t清单（json）文件的路径。\n     * @param   callback\t\t清单（json）文件加载完成后执行。\n     * @param   type\t\t\tFOLDER_VERSION为基于文件夹管理方式（老版本IDE默认类型），FILENAME_VERSION为基于文件名映射管理（新版本IDE默认类型\n     */\n    static enable(manifestFile: string, callback: Handler, type: number = 2): void {\n        ResourceVersion.type = type;\n        ILaya.loader.fetch(manifestFile, \"json\").then(data => {\n            if (!data) {\n                console.warn(\"资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。\");\n                return;\n            }\n\n            ResourceVersion.manifest = data;\n            URL.customFormat = ResourceVersion.addVersionPrefix;\n            callback.run();\n        });\n    }\n\n    /**\n     * 为加载路径添加版本前缀。\n     * @param\toriginURL\t源路径。\n     * @return 格式化后的新路径。\n     */\n    static addVersionPrefix(originURL: string): string {\n        if (ResourceVersion.manifest && ResourceVersion.manifest[originURL]) {\n            if (ResourceVersion.type == ResourceVersion.FILENAME_VERSION) return ResourceVersion.manifest[originURL];\n            return ResourceVersion.manifest[originURL] + \"/\" + originURL;\n        }\n\n        return originURL;\n    }\n}\n\n","import { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Browser } from \"../utils/Browser\"\nimport { Byte } from \"../utils/Byte\"\n\n/**\n * 连接建立成功后调度。\n * @eventType Event.OPEN\n * */\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\n/**\n * 接收到数据后调度。\n * @eventType Event.MESSAGE\n * */\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\n/**\n * 连接被关闭后调度。\n * @eventType Event.CLOSE\n * */\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\n/**\n * 出现异常后调度。\n * @eventType Event.ERROR\n * */\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\n */\nexport class Socket extends EventDispatcher {\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\n     */\n    static LITTLE_ENDIAN: string = \"littleEndian\";\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     */\n    static BIG_ENDIAN: string = \"bigEndian\";\n    /**@internal */\n    _endian: string;\n    /**@private */\n    protected _socket: any;\n    /**@private */\n    private _connected: boolean;\n    /**@private */\n    private _addInputPosition: number;\n    /**@private */\n    private _input: any;\n    /**@private */\n    private _output: any;\n\n    /**\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\n     */\n    disableInput: boolean = false;\n    /**\n     * 用来发送和接收数据的 <code>Byte</code> 类。\n     */\n    private _byteClass: new () => any;\n    /**\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\n     */\n    protocols: any = [];\n\n    /**\n     * 缓存的服务端发来的数据。\n     */\n    get input(): any {\n        return this._input;\n    }\n\n    /**\n     * 表示需要发送至服务端的缓冲区中的数据。\n     */\n    get output(): any {\n        return this._output;\n    }\n\n    /**\n     * 表示此 Socket 对象目前是否已连接。\n     */\n    get connected(): boolean {\n        return this._connected;\n    }\n\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\n     */\n    get endian(): string {\n        return this._endian;\n    }\n\n    set endian(value: string) {\n        this._endian = value;\n        if (this._input != null) this._input.endian = value;\n        if (this._output != null) this._output.endian = value;\n    }\n\n    /**\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\n     * @param host\t\t服务器地址。\n     * @param port\t\t服务器端口。\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\n     * @see laya.utils.Byte\n     */\n    constructor(host: string|null = null, port: number = 0, byteClass: new () => any = null, protocols: any[]|null = null) {\n        super();\n        this._byteClass = byteClass ? byteClass : Byte;\n        this.protocols = protocols;\n        this.endian = Socket.BIG_ENDIAN;\n        if (host && port > 0 && port < 65535) this.connect(host, port);\n    }\n\n    /**\n     * <p>连接到指定的主机和端口。</p>\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\n     * @param host\t服务器地址。\n     * @param port\t服务器端口。\n     */\n    connect(host: string, port: number): void {\n        var url: string = \"ws://\" + host + \":\" + port;\n        this.connectByUrl(url);\n    }\n\n    /**\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\n     */\n    connectByUrl(url: string): void {\n        if (this._socket != null) this.close();\n\n        this._socket && this.cleanSocket();\n\n        if (!this.protocols || this.protocols.length == 0) {\n            this._socket = new Browser.window.WebSocket(url);\n        } else {\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\n        }\n\n        this._socket.binaryType = \"arraybuffer\";\n\n        this._output = new this._byteClass();\n        this._output.endian = this.endian;\n        this._input = new this._byteClass();\n        this._input.endian = this.endian;\n        this._addInputPosition = 0;\n\n        this._socket.onopen = (e: any) => {\n            this._onOpen(e);\n        };\n        this._socket.onmessage = (msg: any): void => {\n            this._onMessage(msg);\n        };\n        this._socket.onclose = (e: any): void => {\n            this._onClose(e);\n        };\n        this._socket.onerror = (e: any): void => {\n            this._onError(e);\n        };\n    }\n\n    /**\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\n     */\n    cleanSocket(): void {\n        this.close();\n        this._connected = false;\n        this._socket.onopen = null;\n        this._socket.onmessage = null;\n        this._socket.onclose = null;\n        this._socket.onerror = null;\n        this._socket = null;\n    }\n\n    /**\n     * 关闭连接。\n     */\n    close(): void {\n        if (this._socket != null) {\n            try {\n                this._socket.close();\n            } catch (e) {\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 连接建立成功 。\n     */\n    protected _onOpen(e: any): void {\n        this._connected = true;\n        this.event(Event.OPEN, e);\n    }\n\n    /**\n     * @private\n     * 接收到数据处理方法。\n     * @param msg 数据。\n     */\n    protected _onMessage(msg: any): void {\n        if (!msg || !msg.data) return;\n        var data: any = msg.data;\n        if (this.disableInput && data) {\n            this.event(Event.MESSAGE, data);\n            return;\n        }\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\n            this._input.clear();\n            this._addInputPosition = 0;\n        }\n        var pre: number = this._input.pos;\n        !this._addInputPosition && (this._addInputPosition = 0);\n        this._input.pos = this._addInputPosition;\n\n        if (data) {\n            if (typeof (data) == 'string') {\n                this._input.writeUTFBytes(data);\n            } else {\n                this._input.writeArrayBuffer(data);\n            }\n            this._addInputPosition = this._input.pos;\n            this._input.pos = pre;\n        }\n        this.event(Event.MESSAGE, data);\n    }\n\n    /**\n     * @private\n     * 连接被关闭处理方法。\n     */\n    protected _onClose(e: any): void {\n        this._connected = false;\n        this.event(Event.CLOSE, e)\n    }\n\n    /**\n     * @private\n     * 出现异常处理方法。\n     */\n    protected _onError(e: any): void {\n        this.event(Event.ERROR, e)\n    }\n\n    /**\n     * 发送数据到服务器。\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\n     */\n    send(data: any): void {\n        this._socket.send(data);\n    }\n\n    /**\n     * 发送缓冲区中的数据到服务器。\n     */\n    flush(): void {\n        if (this._output && this._output.length > 0) {\n            var evt: any;\n            try {\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\n            } catch (e) {\n                evt = e;\n            }\n            this._output.endian = this.endian;\n            this._output.clear();\n            if (evt) this.event(Event.ERROR, evt);\n        }\n    }\n}\n\n\n","/**\n * @private\n */\nexport class System {\n    /**\n     * 替换指定名称的定义。用来动态更改类的定义。\n     * @param\tname 属性名。\n     * @param\tclassObj 属性值。\n     */\n    //TODO:coverage\n    static changeDefinition(name: string, classObj: any): void {\n        (window as any).Laya[name] = classObj;\n        var str: string = name + \"=classObj\";\n        window['eval'](str);\n    }\n}\n\n","export class Base64Tool {\n\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\n\n    // Use a lookup table to find the index.\n    static lookup: Uint8Array = null;\n\n    static init(): void {\n        if (Base64Tool.lookup)\n            return;\n        Base64Tool.lookup = new Uint8Array(256)\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\n        }\n    }\n\n    /**\n     * 判断字符串是否是 base64\n     * @param str \n     */\n    static isBase64String(str: string): boolean {\n        return Base64Tool.reg.test(str);\n    }\n\n    /**\n     * 编码ArrayBuffer \n     * @param arraybuffer\n     * @return \n     * \n     */\n    static encode(arraybuffer: ArrayBuffer): string {\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\n\n        for (i = 0; i < len; i += 3) {\n            base64 += Base64Tool.chars[bytes[i] >> 2];\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\n        }\n\n        if ((len % 3) === 2) {\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\n        }\n        else if (len % 3 === 1) {\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\n        }\n\n        return base64;\n    }\n\n    /**\n     * 解码成ArrayBuffer \n     * @param base64\n     * @return \n     * \n     */\n    static decode(base64: string): ArrayBuffer {\n        Base64Tool.init();\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\n\n        if (base64[base64.length - 1] === \"=\") {\n            bufferLength--;\n            if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n            }\n        }\n\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\n\n        for (i = 0; i < len; i += 4) {\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\n\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        }\n\n        return arraybuffer;\n    }\n\n}","import { Pool } from \"./Pool\";\n/**\n * @private\n * <code>HTMLChar</code> 是一个 HTML 字符类。\n */\nexport class HTMLChar {\n\n    private static _isWordRegExp: RegExp = new RegExp(\"[\\\\w\\.]\", \"\");\n\n    /** x坐标*/\n    x: number;\n    /** y坐标*/\n    y: number;\n    /** 宽*/\n    width: number;\n    /** 高*/\n    height: number;\n    /** 表示是否是正常单词(英文|.|数字)。*/\n    isWord: boolean;\n    /** 字符。*/\n    char: string|null;\n    /** 字符数量。*/\n    charNum: number;\n    /** CSS 样式。*/\n    style: any;\n\n    /**\n     * 创建实例\n     */\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * 根据指定的字符、宽高、样式，创建一个 <code>HTMLChar</code> 类的实例。\n     * @param\tchar 字符。\n     * @param\tw 宽度。\n     * @param\th 高度。\n     * @param\tstyle CSS 样式。\n     */\n    setData(char: string, w: number, h: number, style: any): HTMLChar {\n        this.char = char;\n        this.charNum = char.charCodeAt(0);\n        this.x = this.y = 0;\n        this.width = w;\n        this.height = h;\n        this.style = style;\n        this.isWord = !HTMLChar._isWordRegExp.test(char);\n        return this;\n    }\n\n    /**\n     * 重置\n     */\n    reset(): HTMLChar {\n        this.x = this.y = this.width = this.height = 0;\n        this.isWord = false;\n        this.char = null;\n        this.charNum = 0;\n        this.style = null;\n        return this;\n    }\n\n    /**\n     * 回收\n     */\n    //TODO:coverage\n    recover(): void {\n        Pool.recover(\"HTMLChar\", this.reset());\n    }\n\n    /**\n     * 创建\n     */\n    static create(): HTMLChar {\n        return Pool.getItemByClass(\"HTMLChar\", HTMLChar);\n    }\n\n    /** @internal */\n    _isChar(): boolean {\n        return true;\n    }\n\n    /** @internal */\n    _getCSSStyle(): any {\n        return this.style;\n    }\n}\n\n","import { Browser } from \"./Browser\";\n\n/**\n * <code>Log</code> 类用于在界面内显示日志记录信息。\n * 注意：在加速器内不可使用\n */\nexport class Log {\n\n    /**@private */\n    private static _logdiv: any;\n    /**@private */\n    private static _btn: any;\n    /**@private */\n    private static _count: number = 0;\n    /**最大打印数量，超过这个数量，则自动清理一次，默认为50次*/\n    static maxCount: number = 50;\n    /**是否自动滚动到底部，默认为true*/\n    static autoScrollToBottom: boolean = true;\n\n    /**\n     * 激活Log系统，使用方法Laya.init(800,600,Laya.Log);\n     */\n    static enable(): void {\n        if (!Log._logdiv) {\n            Log._logdiv = Browser.createElement('div');\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\n            Browser.document.body.appendChild(Log._logdiv);\n\n            Log._btn = Browser.createElement(\"button\");\n            Log._btn.innerText = \"Hide\";\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\n            Log._btn.onclick = Log.toggle;\n            Browser.document.body.appendChild(Log._btn);\n        }\n    }\n\n    /**隐藏/显示日志面板*/\n    static toggle(): void {\n        var style: any = Log._logdiv.style;\n        if (style.display === \"\") {\n            Log._btn.innerText = \"Show\";\n            style.display = \"none\";\n        } else {\n            Log._btn.innerText = \"Hide\";\n            style.display = \"\";\n        }\n    }\n\n    /**\n     * 增加日志内容。\n     * @param\tvalue 需要增加的日志内容。\n     */\n    static print(value: string): void {\n        if (Log._logdiv) {\n            //内容太多清理掉\n            if (Log._count >= Log.maxCount) Log.clear();\n            Log._count++;\n\n            Log._logdiv.innerText += value + \"\\n\";\n            //自动滚动\n            if (Log.autoScrollToBottom) {\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\n                }\n            }\n        }\n    }\n\n    /**\n     * 清理日志\n     */\n    static clear(): void {\n        Log._logdiv.innerText = \"\";\n        Log._count = 0;\n    }\n}\n\n","//import { PerfHUD } from \"./PerfHUD\";\nlet DATANUM = 300;\n/**\n * @internal\n */\nexport class PerfData {\n    id: number;\n    name: string;\n    color: number;\n    scale: number = 1.0;\n    datas: any[] = new Array(DATANUM);\n    datapos: number = 0;\n    constructor(id: number, color: number, name: string, scale: number) {\n        this.id = id;\n        this.color = color;\n        this.name = name;\n        this.scale = scale;\n    }\n    addData(v: number): void {\n        this.datas[this.datapos] = v;\n        this.datapos++;\n        this.datapos %= DATANUM;\n    }\n}\n\n","import { PerfData } from \"./PerfData\";\nimport { Sprite } from \"../display/Sprite\"\nimport { SpriteConst } from \"../display/SpriteConst\"\nimport { Context } from \"../resource/Context\"\n/**\n * @internal\n */\nexport class PerfHUD extends Sprite {\n    private static _lastTm: number = 0;\t//perf Data\n    private static _now: () => number = null;\n    private datas: any[] = [];\n    static DATANUM: number = 300;\n\n    xdata: any[] = new Array(PerfHUD.DATANUM);\n    ydata: any[] = new Array(PerfHUD.DATANUM);\n\n    hud_width: number = 800;\n    hud_height: number = 200;\n\n    gMinV: number = 0;\n    gMaxV: number = 100;\n\n    private textSpace: number = 40;\t//留给刻度文字的\n    static inst: PerfHUD;\n\n    private _now: Function;\n    private sttm: number = 0;\n\n    static drawTexTm: number = 0;\n\n    //TODO:coverage\n    constructor() {\n        super();\n        PerfHUD.inst = this;\n        this._renderType |= SpriteConst.CUSTOM;\n        this._setRenderType(this._renderType);\n        this._setCustomRender();\n\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\n    }\n\n    //TODO:coverage\n    now(): number {\n        return PerfHUD._now();\n    }\n\n    //TODO:coverage\n    start(): void {\n        this.sttm = PerfHUD._now();\n    }\n\n    //TODO:coverage\n    end(i: number): void {\n        var dt: number = PerfHUD._now() - this.sttm;\n        this.updateValue(i, dt);\n    }\n\n    //TODO:coverage\n    config(w: number, h: number): void {\n        this.hud_width = w;\n        this.hud_height = h;\n    }\n\n    //TODO:coverage\n    addDataDef(id: number, color: number, name: string, scale: number): void {\n        this.datas[id] = new PerfData(id, color, name, scale);\n    }\n\n    //TODO:coverage\n    updateValue(id: number, v: number): void {\n        this.datas[id].addData(v);\n    }\n\n    //TODO:coverage\n    v2y(v: number): number {\n        var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\n    }\n\n    //TODO:coverage\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\n        var sx: number = this._x;\n        var ex: number = this._x + this.hud_width;\n        var sy: number = this.v2y(v);\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\n        sx += this.textSpace;\n        ctx.fillStyle = color;\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\n    }\n\n    //TODO:coverage\n    /**\n     * \n     * @param ctx \n     * @param x \n     * @param y \n     * @override\n     */\n    customRender(ctx: Context, x: number, y: number): void {\n        var now: number = performance.now();;\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\n        this.updateValue(0, now - PerfHUD._lastTm);\n        PerfHUD._lastTm = now;\n\n        ctx.save();\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\n        ctx.globalAlpha = 0.9;\n        /*\n        for ( var i = 0; i < gMaxV; i+=30) {\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\n        }\n        */\n        this.drawHLine(ctx, 0, 'green', '    0');\n        this.drawHLine(ctx, 10, 'green', '  10');\n        this.drawHLine(ctx, 16.667, 'red', ' ');\n        this.drawHLine(ctx, 20, 'green', '50|20');\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\n        this.drawHLine(ctx, 50, 'green', '20|50');\n        this.drawHLine(ctx, 100, 'green', '10|100');\n\n        //数据\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\n            var cd: PerfData = this.datas[di];\n            if (!cd) continue;\n            var dtlen: number = cd.datas.length;\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\n            var cx: number = cd.datapos;\n            var _cx: number = this._x + this.textSpace;\n            ctx.fillStyle = cd.color;\n            //开始部分\n            /*\n            ctx.beginPath();\n            ctx.strokeStyle = cd.color;\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\n            cx++;\n            _cx += dx;\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\n                _cx += dx;\n            }\n            //剩下的\n            for (cx = 0; cx < cd.datapos; cx++) {\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\n                _cx += dx;\n            }\n            ctx.stroke();\n            */\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\n                _cx += dx;\n            }\n            //剩下的\n            for (cx = 0; cx < cd.datapos; cx++) {\n                sty = this.v2y(cd.datas[cx] * cd.scale);\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\n                _cx += dx;\n            }\n\n        }\n        ctx.restore();\n    }\n}\n\n","import { CacheManger } from \"./CacheManger\";\nimport { Pool } from \"./Pool\";\n\n/**\n * @private\n * 基于个数的对象缓存管理器\n */\nexport class PoolCache {\n\n    //TODO:\n    /**\n     * 对象在Pool中的标识\n     */\n    sign: string;\n    /**\n     * 允许缓存的最大数量\n     */\n    maxCount: number = 1000;\n\n    /**\n     * 获取缓存的对象列表\n     * @return\n     *\n     */\n    getCacheList(): any[] {\n        return Pool.getPoolBySign(this.sign);\n    }\n\n    /**\n     * 尝试清理缓存\n     * @param force 是否强制清理\n     *\n     */\n    tryDispose(force: boolean): void {\n        var list: any[];\n        list = Pool.getPoolBySign(this.sign);\n        if (list.length > this.maxCount) {\n            list.splice(this.maxCount, list.length - this.maxCount);\n        }\n    }\n\n    /**\n     * 添加对象缓存管理\n     * @param sign 对象在Pool中的标识\n     * @param maxCount 允许缓存的最大数量\n     *\n     */\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\n        var cache: PoolCache;\n        cache = new PoolCache();\n        cache.sign = sign;\n        cache.maxCount = maxCount;\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\n    }\n}\n\n","\n/**\n * <code>SingletonList</code> 类用于实现单例队列。\n */\nexport class SingletonList<T> {\n    /**@internal [只读]*/\n    elements: Array<T> = [];\n    /** @internal [只读]*/\n    length: number = 0;\n\n    /**\n     * 创建一个新的 <code>SingletonList</code> 实例。\n     */\n    constructor() {\n    }\n\n    /**\n     * @internal\n     */\n    protected _add(element: T): void {\n        if (this.length === this.elements.length)\n            this.elements.push(element);\n        else\n            this.elements[this.length] = element;\n    }\n\n    /**\n     * @internal\n     */\n    add(element: T): void {\n        let index = this.elements.indexOf(element);\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\n            return;\n        if (this.length === this.elements.length)\n            this.elements.push(element);\n        else\n            this.elements[this.length] = element;\n        this.length++;\n    }\n\n    indexof(element:T){\n        let index = this.elements.indexOf(element);\n        if(index!=-1&&index<this.length)\n            return index;\n        return -1;\n    }\n\n    /**\n     * @internal\n     * @param element \n     */\n    remove(element: T): void {\n        let index = this.elements.indexOf(element);\n        if (index != -1 && index < this.length) {\n            this.elements[index] = this.elements[this.length - 1];\n            this.length--;\n        }\n\n    }\n\n    /**\n     * @internal\n     */\n    clear(){\n        this.elements = [];\n        this.length = 0;\n    }\n\n    destroy() {\n        this.elements = null;\n    }\n}\n\n\n","import { Pool } from \"./Pool\";\nimport { Tween } from \"./Tween\";\nimport { Browser } from \"./Browser\";\nimport { Handler } from \"./Handler\";\nimport { Utils } from \"./Utils\";\nimport { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * 整个缓动结束的时候会调度\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n/**\n * 当缓动到达标签时会调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>TimeLine</code> 是一个用来创建时间轴动画的类。\n */\nexport class TimeLine extends EventDispatcher {\n\n    private _labelDic: any;\n    private _tweenDic: any = {};\n    private _tweenDataList: any[] = [];\n    private _endTweenDataList: any[];//以结束时间进行排序\n    private _currTime: number = 0;\n    private _lastTime: number = 0;\n    private _startTime: number = 0;\n    /**当前动画数据播放到第几个了*/\n    private _index: number = 0;\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\n    private _gidIndex: number = 0;\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\n    private _firstTweenDic: any = {};\n    /**是否需要排序*/\n    private _startTimeSort: boolean = false;\n    private _endTimeSort: boolean = false;\n    /**是否循环*/\n    private _loopKey: boolean = false;\n    /** 缩放动画播放的速度。*/\n    scale: number = 1;\n\n    private _frameRate: number = 60;\n    private _frameIndex: number = 0;\n    private _total: number = 0;\n\n    /**\n     * 控制一个对象，从当前点移动到目标点。\n     * @param\ttarget\t\t要控制的对象。\n     * @param\tprops\t\t要控制对象的属性。\n     * @param\tduration\t对象TWEEN的时间。\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\n     */\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return (new TimeLine()).to(target, props, duration, ease, offset);\n    }\n\n    /**\n     * 从 props 属性，缓动到当前状态。\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\n     * @param\tprops\t\t要控制对象的属性\n     * @param\tduration\t对象TWEEN的时间\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\n     */\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return (new TimeLine()).from(target, props, duration, ease, offset);\n    }\n\n    /**\n     * 控制一个对象，从当前点移动到目标点。\n     * @param\ttarget\t\t要控制的对象。\n     * @param\tprops\t\t要控制对象的属性。\n     * @param\tduration\t对象TWEEN的时间。\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\n     */\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return this._create(target, props, duration, ease, offset, true);\n    }\n\n    /**\n     * 从 props 属性，缓动到当前状态。\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\n     * @param\tprops\t\t要控制对象的属性\n     * @param\tduration\t对象TWEEN的时间\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\n     */\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return this._create(target, props, duration, ease, offset, false);\n    }\n\n    /** @private */\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\n        tTweenData.isTo = isTo;\n        tTweenData.type = 0;\n        tTweenData.target = target;\n        tTweenData.duration = duration;\n        tTweenData.data = props;\n        tTweenData.startTime = this._startTime + offset;\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\n        tTweenData.ease = ease;\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\n        this._tweenDataList.push(tTweenData);\n        this._startTimeSort = true;\n        this._endTimeSort = true;\n        return this;\n    }\n\n    /**\n     * 在时间队列中加入一个标签。\n     * @param\tlabel\t标签名称。\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\n     */\n    addLabel(label: string, offset: number): TimeLine {\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\n        tTweenData.type = 1;\n        tTweenData.data = label;\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\n        this._labelDic || (this._labelDic = {});\n        this._labelDic[label] = tTweenData;\n        this._tweenDataList.push(tTweenData);\n        return this;\n    }\n\n    /**\n     * 移除指定的标签\n     * @param\tlabel\n     */\n    removeLabel(label: string): void {\n        if (this._labelDic && this._labelDic[label]) {\n            var tTweenData: tweenData = this._labelDic[label];\n            if (tTweenData) {\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\n                if (tIndex > -1) {\n                    this._tweenDataList.splice(tIndex, 1);\n                }\n            }\n            delete this._labelDic[label];\n        }\n    }\n\n    /**\n     * 动画从整个动画的某一时间开始。\n     * @param\ttime(单位：毫秒)。\n     */\n    gotoTime(time: number): void {\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\n        var tTween: Tween;\n        var tObject: any;\n        for (var p in this._firstTweenDic) {\n            tObject = this._firstTweenDic[p];\n            if (tObject) {\n                for (var tDataP in tObject) {\n                    if (tDataP in tObject.diyTarget) {\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\n                    }\n                }\n            }\n        }\n        for (p in this._tweenDic) {\n            tTween = this._tweenDic[p];\n            tTween.clear();\n            delete this._tweenDic[p];\n        }\n        this._index = 0;\n        this._gidIndex = 0;\n        this._currTime = time;\n        this._lastTime = Browser.now();\n        var tTweenDataCopyList: any[];\n        if (this._endTweenDataList == null || this._endTimeSort) {\n            this._endTimeSort = false;\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\n            //对数据排序\n            function Compare(paraA: any, paraB: any): number {\n                if (paraA.endTime > paraB.endTime) {\n                    return 1;\n                } else if (paraA.endTime < paraB.endTime) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            }\n            tTweenDataCopyList.sort(Compare);\n        } else {\n            tTweenDataCopyList = this._endTweenDataList\n        }\n\n        var tTweenData: tweenData;\n        //叠加已经经过的关键帧数据\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\n            tTweenData = tTweenDataCopyList[i];\n            if (tTweenData.type == 0) {\n                if (time >= tTweenData.endTime) {\n                    this._index = Math.max(this._index, i + 1);\n                    //把经历过的属性加入到对象中\n                    var props: any = tTweenData.data;\n                    if (tTweenData.isTo) {\n                        for (var tP in props) {\n                            tTweenData.target[tP] = props[tP];\n                        }\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        //创建当前正在行动的TWEEN;\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\n            tTweenData = this._tweenDataList[i];\n            if (tTweenData.type == 0) {\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\n                    this._index = Math.max(this._index, i + 1);\n                    this._gidIndex++;\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\n                    tTween._updateEase(this._currTime);\n                    tTween.gid = this._gidIndex;\n                    this._tweenDic[this._gidIndex] = tTween;\n                }\n            }\n        }\n    }\n\n    /**\n     * 从指定的标签开始播。\n     * @param\tLabel 标签名。\n     */\n    gotoLabel(Label: string): void {\n        if (this._labelDic == null) return;\n        var tLabelData: tweenData = this._labelDic[Label];\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\n    }\n\n    /**\n     * 暂停整个动画。\n     */\n    pause(): void {\n        ILaya.timer.clear(this, this._update);\n    }\n\n    /**\n     * 恢复暂停动画的播放。\n     */\n    resume(): void {\n        this.play(this._currTime, this._loopKey);\n    }\n\n    /**\n     * 播放动画。\n     * @param\ttimeOrLabel 开启播放的时间点或标签名。\n     * @param\tloop 是否循环播放。\n     */\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\n        if (!this._tweenDataList) return;\n        if (this._startTimeSort) {\n            this._startTimeSort = false;\n            //对数据排序\n            function Compare(paraA: any, paraB: any): number {\n                if (paraA.startTime > paraB.startTime) {\n                    return 1;\n                } else if (paraA.startTime < paraB.startTime) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            }\n            this._tweenDataList.sort(Compare);\n\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\n                var tTweenData: tweenData = this._tweenDataList[i];\n                if (tTweenData != null && tTweenData.type == 0) {\n                    var tTarget: any = tTweenData.target;\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\n                    var tSrcData: any = null;\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\n                    if (this._firstTweenDic[gid] == null) {\n                        tSrcData = {};\n                        tSrcData.diyTarget = tTarget;\n                        this._firstTweenDic[gid] = tSrcData;\n                    } else {\n                        tSrcData = this._firstTweenDic[gid];\n                    }\n                    for (var p in tTweenData.data) {\n                        if (tSrcData[p] == null) {\n                            tSrcData[p] = tTarget[p];\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof (timeOrLabel) == 'string') {\n            this.gotoLabel(timeOrLabel);\n        } else {\n            this.gotoTime(timeOrLabel);\n        }\n        this._loopKey = loop;\n        this._lastTime = Browser.now();\n        ILaya.timer.frameLoop(1, this, this._update);\n    }\n\n    /**\n     * 更新当前动画。\n     */\n    private _update(): void {\n        if (this._currTime >= this._startTime) {\n            if (this._loopKey) {\n                this._complete();\n                if (!this._tweenDataList) return;\n                this.gotoTime(0);\n            } else {\n                for (var p in this._tweenDic) {\n                    tTween = this._tweenDic[p];\n                    tTween.complete();\n                }\n                this.pause();\n                this._complete();\n                return;\n            }\n        }\n\n        var tNow: number = Browser.now();\n        var tFrameTime: number = tNow - this._lastTime;\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\n        this._lastTime = tNow;\n\n        for (p in this._tweenDic) {\n            tTween = this._tweenDic[p];\n            tTween._updateEase(tCurrTime);\n        }\n\n        var tTween: Tween;\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\n            var tTweenData: tweenData = this._tweenDataList[this._index];\n            if (tCurrTime >= tTweenData.startTime) {\n                this._index++;\n                //创建TWEEN\n                if (tTweenData.type == 0) {\n                    this._gidIndex++;\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\n                    tTween.setStartTime(tCurrTime);\n                    tTween.gid = this._gidIndex;\n                    this._tweenDic[this._gidIndex] = tTween;\n                    tTween._updateEase(tCurrTime);\n                } else {\n                    this.event(Event.LABEL, tTweenData.data);\n                }\n            }\n        }\n\n\n    }\n\n    /**\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\n     * @param\tindex\n     */\n    private _animComplete(index: number): void {\n        var tTween: Tween = this._tweenDic[index];\n        if (tTween) delete this._tweenDic[index];\n    }\n\n    /** @private */\n    private _complete(): void {\n        this.event(Event.COMPLETE);\n    }\n\n    /**\n     * @private\n     * 得到帧索引\n     */\n    get index(): number {\n        return this._frameIndex;\n    }\n\n    /**\n     * @private\n     * 设置帧索引\n     */\n    set index(value: number) {\n        this._frameIndex = value;\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\n    }\n\n    /**\n     * 得到总帧数。\n     */\n    get total(): number {\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\n        return this._total;\n    }\n\n    /**\n     * 重置所有对象，复用对象的时候使用。\n     */\n    reset(): void {\n        var p: any;\n        if (this._labelDic) {\n            for (p in this._labelDic) {\n                delete this._labelDic[p];\n            }\n        }\n        var tTween: Tween;\n        for (p in this._tweenDic) {\n            tTween = this._tweenDic[p];\n            tTween.clear();\n            delete this._tweenDic[p];\n        }\n        for (p in this._firstTweenDic) {\n            delete this._firstTweenDic[p];\n        }\n        this._endTweenDataList = null;\n        if (this._tweenDataList && this._tweenDataList.length) {\n            var i: number, len: number;\n            len = this._tweenDataList.length;\n            for (i = 0; i < len; i++) {\n                if (this._tweenDataList[i])\n                    this._tweenDataList[i].destroy();\n            }\n        }\n        this._tweenDataList.length = 0;\n        this._currTime = 0;\n        this._lastTime = 0;\n        this._startTime = 0;\n        this._index = 0;\n        this._gidIndex = 0;\n        this.scale = 1;\n        ILaya.timer.clear(this, this._update);\n    }\n\n    /**\n     * 彻底销毁此对象。\n     */\n    destroy(): void {\n        this.reset();\n        this._labelDic = null;\n        this._tweenDic = null;\n        this._tweenDataList = null;\n        this._firstTweenDic = null;\n    }\n}\n\n\n/**\n * @internal\n */\nclass tweenData {\n    type: number = 0;//0代表TWEEN,1代表标签\n    isTo: boolean = true;\n    startTime: number;\n    endTime: number;\n    target: any;\n    duration: number;\n    ease: Function;\n    data: any;\n    destroy(): void {\n        this.target = null;\n        this.ease = null;\n        this.data = null;\n        this.isTo = true;\n        this.type = 0;\n        Pool.recover(\"tweenData\", this);\n    }\n}\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制粒子\n * @private\n */\nexport class DrawParticleCmd {\n    static ID: string = \"DrawParticleCmd\";\n\n    private _templ: any;\n\n    /**@private */\n    static create(_temp: any): DrawParticleCmd {\n        var cmd: DrawParticleCmd = Pool.getItemByClass(\"DrawParticleCmd\", DrawParticleCmd);\n        cmd._templ = _temp;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this._templ = null;\n        Pool.recover(\"DrawParticleCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        //这个只有webgl在用\n        context.drawParticle(gx, gy, this._templ);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawParticleCmd.ID;\n    }\n}\n\n","import { SoundChannel } from \"./SoundChannel\";\nimport { EventDispatcher } from \"../events/EventDispatcher\"\n\n/**\n * <code>Sound</code> 类是用来播放控制声音的类。\n * 引擎默认有两套声音方案，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\n */\nexport class Sound extends EventDispatcher {\n\n    /**\n     * 加载声音。\n     * @param url 地址。\n     */\n    load(url: string): void {\n\n    }\n\n    /**\n     * 播放声音。\n     * @param startTime 开始时间,单位秒\n     * @param loops 循环次数,0表示一直循环\n     * @return 声道 SoundChannel 对象。\n     */\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\n        return null;\n    }\n\n    /**\n     * 获取总时间。\n     */\n    get duration(): number {\n        return 0;\n    }\n\n    /**\n     * 释放声音资源。\n     */\n    dispose(): void {\n\n    }\n}\n\n","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\nimport { BlendType } from \"./RenderEnum/BlendType\";\n\nexport class BlendState {\n    static _blend_All_pool: any = {};\n    static _blend_seperate_pool: any = {};\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\n\n    }\n    /** Whether to enable blend. */\n    blendType: BlendType = 0;\n    colorBlendComponent: BlendComponent;\n    alphaBlendComponent: BlendComponent;\n    constructor(blendType: number) {\n\n    }\n}\n\nexport class BlendComponent {\n    static _pool: any = {};\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\n    }\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\n        if (!BlendComponent._pool[index])\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\n        return BlendComponent._pool[index];\n    }\n    _blendOperation: BlendEquationSeparate;\n    _blendOperationGLData: number;\n    _sourceBlendFactor: BlendFactor;\n    _sourceBlendFactorGLData: number;\n    _destinationFactor: BlendFactor;\n    _destinationFactorGLData: number;\n    _hashIndex = 0;\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\n        this._hashIndex = hashindex;\n        this._blendOperationGLData = blendOperationGLData;\n        this._sourceBlendFactor = sourceBlendFactor;\n        this._destinationFactor = destinationFactor;\n    }\n\n\n\n\n}","import { LayaGL } from \"../layagl/LayaGL\";\n\nexport class CommandUniformMap {\n\n\t/**@internal */\n\t_idata: { [key: number]: string } = {};\n\t_stateName: string;\n\n\tconstructor(stateName: string) {\n\t\tthis._stateName = stateName;\n\t}\n\n\thasPtrID(propertyID: number): boolean {\n\t\treturn !!(this._idata[propertyID] != null);\n\t}\n\n\tgetMap() {\n\t\treturn this._idata;\n\t}\n\n\t/**\n\t * 增加一个UniformMap\n\t * @internal\n\t * @param propertyID \n\t * @param propertyKey \n\t */\n\taddShaderUniform(propertyID: number, propertyKey: string): void {\n\t\tthis._idata[propertyID] = propertyKey;\n\t}\n\n}","export class DepthState{\n    \n}","\n/**\n * https://openexr.readthedocs.io/en/latest/OpenEXRFileLayout.html\n */\n\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\n\n// todo\nexport enum AttributeType {\n    box2i = \"box2i\",\n    box2f = \"box2f\",\n    chlist = \"chlist\",\n    chromaticities = \"chromaticities\",\n    compression = \"compression\",\n    double = \"double\",\n    envmap = \"envmap\",\n    float = \"float\",\n    int = \"int\",\n    keycode = \"keycode\",\n    lineOrder = \"lineOrder\",\n    m33f = \"m33f\",\n    m44f = \"m44f\",\n    preview = \"preview\",\n    rational = \"rational\",\n    string = \"string\",\n    stringvector = \"stringvector\",\n    titledesc = \"titledesc\",\n    timecode = \"timecode\",\n    v2i = \"v2i\",\n    v2f = \"v2f\",\n    v3i = \"v3i\",\n    v3f = \"v3f\"\n}\n\nexport class EXRTextureInfo {\n\n    static getEXRInfo(buffer: ArrayBuffer) {\n\n        const wrong = () => {\n            throw \"EXR info: data wrong.\";\n        }\n\n        // temp todo\n        const todo = () => {\n            console.log(\"EXR info: todo\");\n        }\n\n        // let uint8Data = new Uint8Array(buffer);\n\n        /**\n         * \n         * Integers, Floating-Point Numbers: little-endian\n         * Text: 1 byte字节字符, null: 0x00\n         * \n         */\n        let littleEndian = true;\n        let dataView = new DataView(buffer);\n        let viewOffset = 0;\n\n        const getString = (length: number = 0) => {\n            let res = \"\";\n            let charCode;\n            let charCount = 0;\n            while ((charCode = dataView.getUint8(viewOffset++)) != 0x00) {\n                res = `${res}${String.fromCharCode(charCode)}`;\n                charCount++;\n                if (charCount == length) {\n                    // todo\n                    viewOffset++; // 0x00\n                    break;\n                }\n            }\n            return res;\n        }\n\n        const getUnsignedChar = () => {\n            return dataView.getUint8(viewOffset++);\n        }\n\n        const getShort = () => {\n            let short = dataView.getInt16(viewOffset, littleEndian);\n            viewOffset += 2;\n            return short;\n        }\n\n        const getunSignedShort = () => {\n            let short = dataView.getUint16(viewOffset, littleEndian);\n            viewOffset += 2;\n            return short;\n        }\n\n        const getInt = () => {\n            let res = dataView.getInt32(viewOffset, littleEndian);\n            viewOffset += 4;\n            return res;\n        }\n\n        const getUnsignedInt = () => {\n            let int = dataView.getUint32(viewOffset, littleEndian);\n            viewOffset += 4;\n            return int;\n        }\n\n        const getUnsignedlong = () => {\n            let long = dataView.getBigUint64(viewOffset, littleEndian);\n            viewOffset += 8;\n            return long;\n        }\n\n        const getHalf = () => {\n            let halfBits = dataView.getUint16(viewOffset, littleEndian);\n            viewOffset += 2;\n            // todo  half float \n            let half = HalfFloatUtils.convertToNumber(halfBits);\n\n            return half;\n        }\n\n        const getFloat = () => {\n            let res = dataView.getFloat32(viewOffset, littleEndian);\n            viewOffset += 4;\n            return res;\n        }\n\n        const getDouble = () => {\n            let double = dataView.getFloat64(viewOffset, littleEndian);\n            viewOffset += 8;\n            return double;\n        }\n\n\n        // read attributes\n\n\n        const readBox2i = (size: number) => {\n            let xMin = getInt();\n            let yMin = getInt();\n            let xMax = getInt();\n            let yMax = getInt();\n\n            return {\n                xMin: xMin,\n                yMin: yMin,\n                xMax: xMax,\n                yMax: yMax\n            }\n        }\n\n        const readBox2f = (size: number) => {\n            let xMin = getFloat();\n            let yMin = getFloat();\n            let xMax = getFloat();\n            let yMax = getFloat();\n\n            return {\n                xMin: xMin,\n                yMin: yMin,\n                xMax: xMax,\n                yMax: yMax\n            }\n        }\n\n        const readChlist = (size: number) => {\n            let res = [];\n            let endOffset = viewOffset + size;\n            while (viewOffset < endOffset - 1) {\n                // channel\n                let name = getString();\n                let pixelType = getInt();\n                let pLinear = getUnsignedChar();\n                let reserved = `${getUnsignedChar()}${getUnsignedChar()}${getUnsignedChar()}`;\n                let xSampling = getInt();\n                let ySampling = getInt();\n\n                let channel = {\n                    name: name,\n                    pixelType: pixelType,\n                    pLinear: pLinear,\n                    reserved: reserved,\n                    xSampling: xSampling,\n                    ySampling: ySampling\n                }\n                res.push(channel);\n            }\n            let nullByte = getUnsignedChar();\n            if (nullByte != 0x00) {\n                wrong();\n            }\n            return res;\n        }\n\n        const readChromaticities = (size: number) => {\n            let redX = getFloat();\n            let redY = getFloat();\n            let greenX = getFloat();\n            let greenY = getFloat();\n            let blueX = getFloat();\n            let blueY = getFloat();\n            let whiteX = getFloat();\n            let whiteY = getFloat();\n\n            return {\n                redX: redX,\n                redY: redY,\n                greenX: greenX,\n                greenY: greenY,\n                blueX: blueX,\n                blueY: blueY,\n                whiteX: whiteX,\n                whiteY: whiteY,\n            }\n        }\n\n        const readCompression = (size: number) => {\n            return getUnsignedChar();\n        }\n\n        const readLineOrder = (size: number) => {\n            return getUnsignedChar();\n        }\n\n        const readKeycode = (size: number) => {\n            let filmMfcCode = getInt();\n            let filmType = getInt();\n            let prefix = getInt();\n            let count = getInt();\n            let perfOffset = getInt();\n            let perfsPerFrame = getInt();\n            let perfsPerCount = getInt();\n\n            return {\n                filmMfcCode: filmMfcCode,\n                filmType: filmType,\n                prefix: prefix,\n                count: count,\n                perfOffset: perfOffset,\n                perfsPerFrame: perfsPerFrame,\n                perfsPerCount: perfsPerCount,\n            }\n        }\n\n        const readv2i = (size: number) => {\n            let num0 = getInt();\n            let num1 = getInt();\n            return [num0, num1];\n        }\n\n        const readv2f = (size: number) => {\n            let num0 = getFloat();\n            let num1 = getFloat();\n            return [num0, num1];\n        }\n\n        const readv3i = (size: number) => {\n            let num0 = getInt();\n            let num1 = getInt();\n            let num2 = getInt();\n            return [num0, num1, num2];\n        }\n\n        const readv3f = (size: number) => {\n            let num0 = getFloat();\n            let num1 = getFloat();\n            let num2 = getFloat();\n            return [num0, num1, num2];\n        }\n\n        // 0x76, 0x2f, 0x31, 0x01\n        let magicNumber = dataView.getInt32(viewOffset, littleEndian);\n        viewOffset += 4;\n\n\n        if (magicNumber != 20000630) {\n            wrong();\n        }\n\n        /**\n         * version field\n         */\n        let version = getInt();\n        let versionNumber = version &= 0xff;\n        // singleTileBit\n        let bit9 = version &= 0x200;\n        // longNameBit\n        let bit10 = version &= 0x400;\n        // nonImageBit\n        let bit11 = version &= 0x800;\n        // multipartBit\n        let bit12 = version &= 0x1000;\n\n        if (bit9 == 0 && bit11 == 0 && bit12 == 0) {\n            // Single-part scan line. One normal scan line image.\n        }\n        else if (bit9 == 1 && bit11 == 0 && bit12 == 0) {\n            // Single-part tile.\n            todo();\n            wrong();\n        }\n        else if (bit9 == 0 && bit11 == 0 && bit12 == 1) {\n            // Multi-part (new in 2.0). Multiple normal images (scan line and/or tiled).\n            // OpenEXR 2.0.\n            todo();\n            wrong();\n        }\n        else if (bit9 == 0 && bit11 == 1 && bit12 == 0) {\n            // Single-part deep data (new in 2.0). One deep tile or deep scan line part.\n            // OpenEXR 2.0.\n            todo();\n            wrong();\n        }\n        else if (bit9 == 0 && bit11 == 1 && bit12 == 1) {\n            // Multi-part deep data (new in 2.0). Multiple parts (any combination of: tiles, scan lines, deep tiles and/or deep scan lines).\n            // OpenEXR 2.0.\n            todo();\n            wrong();\n        }\n\n        let maxNameLength = bit10 ? 255 : 31;\n        /**\n         * Header\n         */\n        // single part\n\n        // read attributes\n        let attributeMap = new Map<string, any>();\n        let attributeName;\n        while ((attributeName = getString()) != \"\") {\n\n            let attribute: { name: string, value: any } = { name: attributeName, value: null };\n\n            let attributeType = getString();\n            let attributeSize = getInt();\n\n            switch (attributeType) {\n                case AttributeType.chlist:\n                    let chlist = readChlist(attributeSize);\n                    attribute.value = chlist;\n                    break;\n                case AttributeType.compression:\n                    let compression = readCompression(attributeSize);\n                    attribute.value = compression;\n                    break;\n                case AttributeType.box2i:\n                    let box2i = readBox2i(attributeSize);\n                    attribute.value = box2i;\n                    break;\n                case AttributeType.lineOrder:\n                    let lineorder = readLineOrder(attributeSize);\n                    attribute.value = lineorder;\n                    break;\n                case AttributeType.float:\n                    attribute.value = getFloat();\n                    break;\n                case AttributeType.v2f:\n                    attribute.value = readv2f(attributeSize);\n                    break;\n                default:\n                    wrong();\n            }\n            console.log(attribute);\n\n            attributeMap.set(attribute.name, attribute.value);\n        }\n\n        /**\n         * offset tables\n         */\n\n        // scan lines\n        let blockSize = 0;\n        if (bit12 == 0 && !attributeMap.has(\"chunkCount\")) {\n            let dataWindow = attributeMap.get(\"dataWindow\");\n            blockSize = dataWindow.yMax - dataWindow.yMin + 1;\n\n            let compression = attributeMap.get(\"compression\");\n\n            switch (compression) {\n                case 4:\n                    blockSize /= 32;\n                    break;\n                default:\n                    wrong();\n                    break;\n            }\n\n            blockSize = Math.ceil(blockSize);\n        }\n\n        let offsets = [];\n        for (let index = 0; index < blockSize; index++) {\n            offsets[index] = getUnsignedlong();\n        }\n\n        /**\n         * Pixel data\n         */\n        for (let index = 0; index < blockSize; index++) {\n            let y = getInt();\n            let pixelDataByteSize = getInt();\n\n            // todo 图像数据 压缩格式数据解析。。。。\n            viewOffset += pixelDataByteSize;\n        }\n\n        if (viewOffset != buffer.byteLength) {\n            wrong();\n        }\n\n        debugger;\n    }\n\n}","export class StencilState{\n    \n}","import { IClone } from \"../../utils/IClone\";\nimport { ShaderDefine } from \"./ShaderDefine\";\n\n/**\n * <code>DefineDatas</code> 类用于创建宏定义数据集合。\n */\nexport class DefineDatas implements IClone {\n\t/** @internal */\n\t_mask: Array<number> = [];\n\t/** @internal */\n\t_length: number = 0;\n\n\t/**\n\t * 创建一个 <code>DefineDatas</code> 实例。\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_intersectionDefineDatas(define: DefineDatas): void {\n\t\tvar unionMask: Array<number> = define._mask;\n\t\tvar mask: Array<number> = this._mask;\n\t\tfor (var i: number = this._length - 1; i >= 0; i--) {\n\t\t\tvar value: number = mask[i] & unionMask[i];\n\t\t\tif (value == 0 && i == this._length - 1)\n\t\t\t\tthis._length--;\n\t\t\telse\n\t\t\t\tmask[i] = value;\n\t\t}\n\t}\n\n\t/**\n\t * 添加宏定义值。\n\t * @param define 宏定义值。\n\t */\n\tadd(define: ShaderDefine): void {\n\t\tvar index: number = define._index;\n\t\tvar size: number = index + 1;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar maskStart: number = this._length;//must from this._length because this._length maybe less than mask.length and have dirty data should clear.\n\t\tif (maskStart < size) {\n\t\t\t(mask.length < size) && (mask.length = size);//mask.length maybe small than size,maybe not.\n\t\t\tfor (; maskStart < index; maskStart++)\n\t\t\t\tmask[maskStart] = 0;\n\t\t\tmask[index] = define._value;\n\t\t\tthis._length = size;\n\t\t}\n\t\telse {\n\t\t\tmask[index] |= define._value;\n\t\t}\n\t}\n\n\t/**\n\t * 移除宏定义。\n\t * @param define 宏定义。\n\t */\n\tremove(define: ShaderDefine): void {\n\t\tvar index: number = define._index;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar endIndex: number = this._length - 1;\n\t\tif (index > endIndex)//不重置Length,避免经常扩充\n\t\t\treturn;\n\t\tvar newValue = mask[index] & ~define._value;\n\t\tif (index == endIndex && newValue === 0)\n\t\t\tthis._length--;\n\t\telse\n\t\t\tmask[index] = newValue;\n\t}\n\n\t/**\n\t * 添加宏定义集合。\n\t * @param define 宏定义集合。\n\t */\n\taddDefineDatas(define: DefineDatas): void {\n\t\tvar addMask: Array<number> = define._mask;\n\t\tvar size: number = define._length;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar maskStart: number = this._length;\n\t\tif (maskStart < size) {\n\t\t\tmask.length = size;\n\t\t\tfor (var i: number = 0; i < maskStart; i++)\n\t\t\t\tmask[i] |= addMask[i];\n\t\t\tfor (; i < size; i++)\n\t\t\t\tmask[i] = addMask[i];\n\t\t\tthis._length = size;\n\t\t} else {\n\t\t\tfor (var i: number = 0; i < size; i++) {\n\t\t\t\tmask[i] |= addMask[i];\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * 移除宏定义集合。\n\t * @param define 宏定义集合。\n\t */\n\tremoveDefineDatas(define: DefineDatas): void {\n\t\tvar removeMask: Array<number> = define._mask;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar endIndex: number = this._length - 1;\n\t\tvar i = Math.min(define._length, endIndex);\n\t\tfor (; i >= 0; i--) {\n\t\t\tvar newValue = mask[i] & ~removeMask[i];\n\t\t\tif (i == endIndex && newValue === 0) {\n\t\t\t\tendIndex--;\n\t\t\t\tthis._length--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmask[i] = newValue;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * 是否有宏定义。\n\t * @param define 宏定义。\n\t */\n\thas(define: ShaderDefine): boolean {\n\t\tvar index: number = define._index;\n\t\tif (index >= this._length)\n\t\t\treturn false;\n\t\treturn (this._mask[index] & define._value) !== 0;\n\t}\n\n\t/**\n\t * 清空宏定义。\n\t */\n\tclear(): void {\n\t\tthis._length = 0;\n\t}\n\n\t/**\n\t * 克隆。\n\t * @param\tdestObject 克隆源。\n\t */\n\tcloneTo(destObject: any): void {\n\t\tvar destDefineData: DefineDatas = (<DefineDatas>destObject);\n\t\tvar destMask: Array<number> = destDefineData._mask;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar count: number = this._length;\n\t\tdestMask.length = count;\n\t\tfor (var i: number = 0; i < count; i++)\n\t\t\tdestMask[i] = mask[i];\n\t\tdestDefineData._length = count;\n\t}\n\n\t/**\n\t * 克隆。\n\t * @return\t 克隆副本。\n\t */\n\tclone(): any {\n\t\tvar dest: DefineDatas = new DefineDatas();\n\t\tthis.cloneTo(dest);\n\t\treturn dest;\n\t}\n\n\tdestroy() {\n\t\tdelete this._mask;\n\t}\n}\n\n\n","/**\n * <code>ShaderDefine</code> 类用于定义宏数据。\n */\nexport class ShaderDefine {\n\n\t/**\n\t * @internal\n\t * 存储 texture uniform gamma define\n\t */\n\tstatic _texGammaDefine: { [key: string]: ShaderDefine } = {};\n\n\t/**@internal */\n\t_index: number;\n\t/**@internal */\n\t_value: number;\n\t/**\n\t * 创建一个宏定义的实例\n\t * @param index 宏索引\n\t * @param value 宏值\n\t */\n\tconstructor(index: number, value: number) {\n\t\tthis._index = index;\n\t\tthis._value = value;\n\t}\n}\n\n\n\n\n\n\n","import { DefineDatas } from \"./DefineDatas\";\nimport { Shader3D } from \"./Shader3D\";\nimport { ShaderPass } from \"./ShaderPass\";\nimport { SubShader } from \"./SubShader\";\n\n/**\n * 着色器变种。\n */\nexport class ShaderVariant {\n    /** @internal */\n    _shader: Shader3D;\n    /** @internal */\n    _subShaderIndex: number = 0;\n    /** @internal */\n    _passIndex: number = 0;\n    /** @internal */\n    _defineNames: string[];\n\n    /**\n     * 着色器。\n     */\n    public get shader(): Shader3D {\n        return this._shader;\n    }\n\n    /**\n     * 子着色器索引。\n     */\n    public get subShaderIndex(): number {\n        return this._subShaderIndex;\n    }\n\n    /**\n     * 通道索引。\n     */\n    public get passIndex(): number {\n        return this._passIndex;\n    }\n\n    /**\n     * 宏定义集合。\n     */\n    public get defineNames(): Readonly<string[]> {\n        return this._defineNames;\n    }\n\n    /**\n     * 创建着色器变种。\n     * @param shader 着色器\n     * @param subShaderIndex 子着色器索引 \n     * @param passIndex 通道索引\n     * @param defines 宏定义集合\n     */\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\n        this.setValue(shader, subShaderIndex, passIndex, defines);\n    }\n\n    /**\n     * 给着色器变种赋值。\n     * @param shader 着色器\n     * @param subShaderIndex 子着色器索引 \n     * @param passIndex 通道索引\n     * @param defineNames 宏定义集合\n     */\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\n        if (shader) {\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\n            if (subShader) {\n                var pass: ShaderPass = subShader._passes[passIndex];\n                if (pass) {\n                    var validDefine: DefineDatas = pass._validDefine;\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\n                        var defname: string = defineNames[i];\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\n                    }\n                }\n                else {\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\n                }\n            }\n            else {\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\n            }\n        }\n        else {\n            throw `ShaderVariantInfo:Shader can't be null.`;\n        }\n        this._shader = shader;\n        this._subShaderIndex = subShaderIndex;\n        this._passIndex = passIndex;\n        this._defineNames = defineNames;\n    }\n\n    /**\n     * 是否相等。\n     * @param other 其它着色器变种\n     * @return 是否相等。\n     */\n    equal(other: ShaderVariant): boolean {\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\n            return false;\n\n        var defines: string[] = this._defineNames;\n        var otherDefines: string[] = other._defineNames;\n        if (defines.length !== otherDefines.length)\n            return false;\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\n            if (defines[i] !== otherDefines[i])\n                return false;\n        }\n        return true;\n\n    }\n\n\n    /**\n     * 克隆。\n     * @return 着色器变种。 \n     */\n    clone(): ShaderVariant {\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\n        return dest;\n    }\n}\n\n/**\n * 着色器变种集合。\n */\nexport class ShaderVariantCollection {\n    /** @internal */\n    private _allCompiled: boolean = false;\n    /** @internal */\n    private _variants: ShaderVariant[] = [];\n\n    /**\n     * 是否已经全部编译。\n     */\n    get allCompiled(): boolean {\n        return this._allCompiled;\n    }\n\n    /**\n     * 包含的变种数量。\n     */\n    get variantCount(): number {\n        return this._variants.length;\n    }\n\n    /**\n     * 添加着色器变种。\n     * @param variant 着色器变种。\n     * @param 是否添加成功。\n     */\n    add(variant: ShaderVariant): boolean {\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\n            if (this._variants[i].equal(variant))\n                return false;\n        }\n        this._variants.push(variant.clone());\n        this._allCompiled = false;\n        return true;\n    }\n\n    /**\n     * 移除着色器变种。\n     * @param variant 着色器变种。\n     * @return 是否移除成功。\n     */\n    remove(variant: ShaderVariant): boolean {\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\n            if (this._variants[i].equal(variant)) {\n                this._variants.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 是否包含着色器变种。\n     * @param variant 着色器变种。\n     */\n    contatins(variant: ShaderVariant): boolean {\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\n            if (this._variants[i].equal(variant))\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * 通过索引获取着色器变种。\n     * @param index 索引。\n     * @returns 着色器变种。\n     */\n    getByIndex(index: number): ShaderVariant {\n        return this._variants[index];\n    }\n\n    /**\n     * 清空。\n     */\n    clear(): void {\n        this._variants.length = 0;\n    }\n\n    /**\n     * 执行编译。\n     */\n    compile(): void {\n        if (!this._allCompiled) {\n            var variants: ShaderVariant[] = this._variants;\n            for (var i: number = 0, n: number = variants.length; i < n; i++) {\n                var variant: ShaderVariant = variants[i];\n                Shader3D.compileShaderByDefineNames(variant._shader._name, variant._subShaderIndex, variant._passIndex, variant._defineNames);\n            }\n            this._allCompiled = true;\n        }\n    }\n}","import { BaseTexture } from \"../../resource/BaseTexture\";\nimport { Resource } from \"../../resource/Resource\";\nimport { DefineDatas } from \"./DefineDatas\";\nimport { ShaderDefine } from \"./ShaderDefine\";\nimport { Texture2D } from \"../../resource/Texture2D\";\nimport { IClone } from \"../../utils/IClone\";\nimport { UniformBufferObject } from \"../UniformBufferObject\";\nimport { UniformBufferParamsType, UnifromBufferData } from \"../UniformBufferData\";\nimport { Color } from \"../../maths/Color\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../maths/Quaternion\";\nimport { Vector2 } from \"../../maths/Vector2\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Vector4 } from \"../../maths/Vector4\";\n\nexport enum ShaderDataType {\n\tInt,\n\tBool,\n\tFloat,\n\tVector2,\n\tVector3,\n\tVector4,\n\tColor,\n\tMatrix4x4,\n\tTexture2D,\n\tTextureCube,\n\tBuffer\n}\n\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array;\n\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\n\tswitch (type) {\n\t\tcase ShaderDataType.Int:\n\t\t\treturn 0;\n\t\tcase ShaderDataType.Bool:\n\t\t\treturn false;\n\t\tcase ShaderDataType.Float:\n\t\t\treturn 0;\n\t\tcase ShaderDataType.Vector2:\n\t\t\treturn Vector2.ZERO;\n\t\tcase ShaderDataType.Vector3:\n\t\t\treturn Vector3.ZERO;\n\t\tcase ShaderDataType.Vector4:\n\t\t\treturn Vector4.ZERO;\n\t\tcase ShaderDataType.Color:\n\t\t\treturn Color.BLACK;\n\t\tcase ShaderDataType.Matrix4x4:\n\t\t\treturn Matrix4x4.DEFAULT;\n\t}\n\treturn null;\n}\n\n/**\n * 着色器数据类。\n */\nexport class ShaderData implements IClone {\n\t/**@internal 反向找Material*/\n\tprotected _ownerResource: Resource = null;\n\n\t/**@internal */\n\tprotected _gammaColorMap: Map<number, Color>;\n\n\t/**@internal */\n\t_data: any = null;\n\n\t/** @internal */\n\t_defineDatas: DefineDatas = new DefineDatas();\n\n\t/**@internal */\n\t_uniformBufferDatas: Map<string, UniformBufferObject>;\n\n\t/**\n\t * @internal\n\t * key: uniform property id\n\t * value: UniformBufferObject\n\t * 保存 每个 uniform id 所在的 ubo\n\t */\n\t_uniformBuffersMap: Map<number, UniformBufferObject>;\n\n\t/**\n\t * @internal\n\t */\n\tget uniformBufferDatas() {\n\t\treturn this._uniformBufferDatas;\n\t}\n\n\tget uniformBuffersMap(): Map<number, UniformBufferObject> {\n\t\treturn this._uniformBuffersMap;\n\t}\n\n\n\n\t/**\n\t * @internal\t\n\t */\n\tconstructor(ownerResource: Resource = null) {\n\t\tthis._ownerResource = ownerResource;\n\t\tthis._initData();\n\n\t\tthis._uniformBufferDatas = new Map();\n\t\tthis._uniformBuffersMap = new Map();\n\t}\n\n\t/**\n\t * @internal\n\t * @param key \n\t * @param ubo \n\t * @param uboData \n\t */\n\t_addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\n\t\tthis._uniformBufferDatas.set(key, ubo);\n\t\tuboData._uniformParamsState.forEach((value: UniformBufferParamsType, id: number) => {\n\t\t\tthis.uniformBuffersMap.set(id, ubo);\n\t\t});\n\t\tubo.setDataByUniformBufferData(uboData);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_initData(): void {\n\t\tthis._data = {};\n\t\tthis._gammaColorMap = new Map();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tgetData(): any {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * 增加Shader宏定义。\n\t * @param value 宏定义。\n\t */\n\taddDefine(define: ShaderDefine): void {\n\t\tthis._defineDatas.add(define);\n\t}\n\n\t/**\n\t * 移除Shader宏定义。\n\t * @param value 宏定义。\n\t */\n\tremoveDefine(define: ShaderDefine): void {\n\t\tthis._defineDatas.remove(define);\n\t}\n\n\t/**\n\t * 是否包含Shader宏定义。\n\t * @param value 宏定义。\n\t */\n\thasDefine(define: ShaderDefine): boolean {\n\t\treturn this._defineDatas.has(define);\n\t}\n\n\t/**\n\t * 清空宏定义。\n\t */\n\tclearDefine(): void {\n\t\tthis._defineDatas.clear();\n\t}\n\n\t/**\n\t * 获取布尔。\n\t * @param\tindex shader索引。\n\t * @return  布尔。\n\t */\n\tgetBool(index: number): boolean {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置布尔。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 布尔。\n\t */\n\tsetBool(index: number, value: boolean): void {\n\t\tthis._data[index] = value;\n\t}\n\n\t/**\n\t * 获取整形。\n\t * @param\tindex shader索引。\n\t * @return  整形。\n\t */\n\tgetInt(index: number): number {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置整型。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 整形。\n\t */\n\tsetInt(index: number, value: number): void {\n\t\tthis._data[index] = value;\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getInt(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * 获取浮点。\n\t * @param\tindex shader索引。\n\t * @return  浮点。\n\t */\n\tgetNumber(index: number): number {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置浮点。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 浮点。\n\t */\n\tsetNumber(index: number, value: number): void {\n\t\tthis._data[index] = value;\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getNumber(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * 获取Vector2向量。\n\t * @param\tindex shader索引。\n\t * @return Vector2向量。\n\t */\n\tgetVector2(index: number): Vector2 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置Vector2向量。\n\t * @param\tindex shader索引。\n\t * @param\tvalue Vector2向量。\n\t */\n\tsetVector2(index: number, value: Vector2): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else\n\t\t\tthis._data[index] = value.clone();\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getVector2(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * 获取Vector3向量。\n\t * @param\tindex shader索引。\n\t * @return Vector3向量。\n\t */\n\tgetVector3(index: number): Vector3 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置Vector3向量。\n\t * @param\tindex shader索引。\n\t * @param\tvalue Vector3向量。\n\t */\n\tsetVector3(index: number, value: Vector3): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else\n\t\t\tthis._data[index] = value.clone();\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getVector3(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * 获取颜色。\n\t * @param \tindex shader索引。\n\t * @return  向量。\n\t */\n\tgetVector(index: number): Vector4 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置向量。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 向量。\n\t */\n\tsetVector(index: number, value: Vector4): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else\n\t\t\tthis._data[index] = value.clone();\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getVector(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * 获取颜色\n\t * @param index 索引\n\t * @returns 颜色\n\t */\n\tgetColor(index: number): Color {\n\t\treturn this._gammaColorMap.get(index);\n\t}\n\n\t/**\n\t * 设置颜色\n\t * @param index 索引\n\t * @param value 颜色值\n\t */\n\tsetColor(index: number, value: Color): void {\n\t\tif (!value)\n\t\t\treturn;\n\t\tif (this._data[index]) {\n\t\t\tlet gammaColor = this._gammaColorMap.get(index);\n\t\t\tvalue.cloneTo(gammaColor);\n\t\t\tlet linearColor = this._data[index];\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\n\t\t\tlinearColor.w = value.a;\n\t\t}\n\t\telse {\n\t\t\tlet linearColor = new Vector4();\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\n\t\t\tlinearColor.w = value.a;\n\t\t\tthis._data[index] = linearColor;\n\t\t\tthis._gammaColorMap.set(index, value.clone());\n\t\t}\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getLinearColor(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param index \n\t */\n\tgetLinearColor(index: number): Vector4 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 获取矩阵。\n\t * @param\tindex shader索引。\n\t * @return  矩阵。\n\t */\n\tgetMatrix4x4(index: number): Matrix4x4 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置矩阵。\n\t * @param\tindex shader索引。\n\t * @param\tvalue  矩阵。\n\t */\n\tsetMatrix4x4(index: number, value: Matrix4x4): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else {\n\t\t\tthis._data[index] = value.clone();\n\t\t}\n\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getVector(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * 获取Buffer。\n\t * @param\tindex shader索引。\n\t * @return\n\t */\n\tgetBuffer(index: number): Float32Array {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置Buffer。\n\t * @param\tindex shader索引。\n\t * @param\tvalue  buffer数据。\n\t */\n\tsetBuffer(index: number, value: Float32Array): void {\n\t\tthis._data[index] = value;\n\t}\n\n\t/**\n\t * 设置纹理。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 纹理。\n\t */\n\tsetTexture(index: number, value: BaseTexture): void {\n\t\tvar lastValue: BaseTexture = this._data[index];\n\t\tif (value) {\n\t\t\tlet shaderDefine = ShaderDefine._texGammaDefine[index];\n\t\t\tif (shaderDefine && value && value.gammaCorrection > 1) {\n\t\t\t\tthis.addDefine(shaderDefine);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// todo 自动的\n\t\t\t\tshaderDefine && this.removeDefine(shaderDefine);\n\t\t\t}\n\t\t}\n\n\t\t//维护Reference\n\t\tthis._data[index] = value ? value : Texture2D.erroTextur;\n\t\t(lastValue) && (lastValue._removeReference());\n\t\t(value) && (value._addReference());\n\t}\n\n\t/**\n\t * 获取纹理。\n\t * @param\tindex shader索引。\n\t * @return  纹理。\n\t */\n\tgetTexture(index: number): BaseTexture {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * set shader data\n\t * @deprecated\n\t * @param index uniformID\n\t * @param value data\n\t */\n\tsetValueData(index: number, value: any) {\n\t\t//Color 需要特殊处理\n\t\tif (value instanceof Color) {\n\t\t\tthis.setColor(index, value);\n\t\t\treturn;\n\t\t} else if (!value) {//value null\n\t\t\tthis._data[index] = value;\n\t\t}\n\t\telse if (!!value.clone) {\n\t\t\tthis._data[index] = value.clone();\n\t\t} else\n\t\t\tthis._data[index] = value;\n\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tubo._updateDataInfo._setData(index, this.getValueData(index));\n\t\t\tubo.setDataByUniformBufferData(ubo._updateDataInfo);\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @param index \n\t * @param value \n\t */\n\tsetUniformBuffer(index: number, value: UniformBufferObject) {\n\t\tthis._data[index] = value;\n\t}\n\n\tgetUniformBuffer(index: number): UniformBufferObject {\n\t\treturn this._data[index];\n\t}\n\n\tsetShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\n\t\tswitch (type) {\n\t\t\tcase ShaderDataType.Int:\n\t\t\t\tthis.setInt(uniformIndex, <number>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Bool:\n\t\t\t\tthis.setBool(uniformIndex, <boolean>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Float:\n\t\t\t\tthis.setNumber(uniformIndex, <number>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Vector2:\n\t\t\t\tthis.setVector2(uniformIndex, <Vector2>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Vector3:\n\t\t\t\tthis.setVector3(uniformIndex, <Vector3>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Vector4:\n\t\t\t\tthis.setVector(uniformIndex, <Vector4>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Color:\n\t\t\t\tthis.setColor(uniformIndex, <Color>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Matrix4x4:\n\t\t\t\tthis.setMatrix4x4(uniformIndex, <Matrix4x4>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Texture2D:\n\t\t\tcase ShaderDataType.TextureCube:\n\t\t\t\tthis.setTexture(uniformIndex, <BaseTexture>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Buffer:\n\t\t\t\tthis.setBuffer(uniformIndex, <Float32Array>value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow \"unkone shader data type.\";\n\t\t}\n\t}\n\n\tgetShaderData(uniformIndex: number, type: ShaderDataType) {\n\t\tswitch (type) {\n\t\t\tcase ShaderDataType.Int:\n\t\t\t\treturn this.getInt(uniformIndex);\n\t\t\tcase ShaderDataType.Bool:\n\t\t\t\treturn this.getBool(uniformIndex);\n\t\t\tcase ShaderDataType.Float:\n\t\t\t\treturn this.getNumber(uniformIndex);\n\t\t\tcase ShaderDataType.Vector2:\n\t\t\t\treturn this.getVector2(uniformIndex);\n\t\t\tcase ShaderDataType.Vector3:\n\t\t\t\treturn this.getVector3(uniformIndex);\n\t\t\tcase ShaderDataType.Vector4:\n\t\t\t\treturn this.getVector(uniformIndex);\n\t\t\tcase ShaderDataType.Color:\n\t\t\t\treturn this.getColor(uniformIndex);\n\t\t\tcase ShaderDataType.Matrix4x4:\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\n\t\t\tcase ShaderDataType.Texture2D:\n\t\t\tcase ShaderDataType.TextureCube:\n\t\t\t\treturn this.getTexture(uniformIndex);\n\t\t\tcase ShaderDataType.Buffer:\n\t\t\t\treturn this.getBuffer(uniformIndex);\n\t\t\tdefault:\n\t\t\t\tthrow \"unkone shader data type.\";\n\t\t}\n\t}\n\n\t/**\n\t * get shader data\n\t * @deprecated\n\t * @param index uniform ID\n\t * @returns \n\t */\n\tgetValueData(index: number): any {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 克隆。\n\t * @param\tdestObject 克隆源。\n\t */\n\tcloneTo(destObject: ShaderData): void {\n\t\tvar dest: ShaderData = <ShaderData>destObject;\n\t\tvar destData: { [key: string]: number | boolean | Vector2 | Vector3 | Vector4 | Matrix4x4 | BaseTexture } = dest._data;\n\t\tfor (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\n\t\t\tvar value: any = this._data[k];\n\t\t\tif (value != null) {\n\t\t\t\tif (typeof (value) == 'number') {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t} else if (typeof (value) == 'number') {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t} else if (typeof (value) == \"boolean\") {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t} else if (value instanceof Vector2) {\n\t\t\t\t\tvar v2 = (destData[k]) || (destData[k] = new Vector2());\n\t\t\t\t\t((<Vector2>value)).cloneTo(v2);\n\t\t\t\t\tdestData[k] = v2;\n\t\t\t\t} else if (value instanceof Vector3) {\n\t\t\t\t\tvar v3 = (destData[k]) || (destData[k] = new Vector3());\n\t\t\t\t\t((<Vector3>value)).cloneTo(v3);\n\t\t\t\t\tdestData[k] = v3;\n\t\t\t\t} else if (value instanceof Vector4) {\n\t\t\t\t\tlet color = this.getColor(parseInt(k));\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tlet clonecolor = color.clone();\n\t\t\t\t\t\tdestObject.setColor(parseInt(k), clonecolor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar v4 = (destData[k]) || (destData[k] = new Vector4());\n\t\t\t\t\t\t((<Vector4>value)).cloneTo(v4);\n\t\t\t\t\t\tdestData[k] = v4;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (value instanceof Matrix4x4) {\n\t\t\t\t\tvar mat = (destData[k]) || (destData[k] = new Matrix4x4());\n\t\t\t\t\t((<Matrix4x4>value)).cloneTo(mat);\n\t\t\t\t\tdestData[k] = mat;\n\t\t\t\t} else if (value instanceof BaseTexture) {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t\tvalue._addReference();\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._defineDatas.cloneTo(dest._defineDatas);\n\t\tthis._gammaColorMap.forEach((color, index) => {\n\t\t\tdestObject._gammaColorMap.set(index, color.clone());\n\t\t})\n\n\t}\n\n\t/**\n\t * 克隆。\n\t * @return\t 克隆副本。\n\t */\n\tclone(): any {\n\t\tvar dest: ShaderData = new ShaderData();\n\t\tthis.cloneTo(dest);\n\t\treturn dest;\n\t}\n\n\treset() {\n\t\tfor (var k in this._data) {\n\t\t\t//维护Refrence\n\t\t\tvar value: any = this._data[k];\n\t\t\tif (value instanceof Resource) {\n\t\t\t\tvalue._removeReference();\n\t\t\t}\n\t\t}\n\t\tthis._data = {};\n\t\tthis._gammaColorMap.clear();\n\t\tthis._uniformBufferDatas.clear();\n\t\tthis._uniformBuffersMap.clear();\n\t\tthis._defineDatas.clear();\n\t}\n\n\tdestroy(): void {\n\t\tthis._defineDatas.destroy();\n\t\tthis._defineDatas = null;\n\t\tfor (var k in this._data) {\n\t\t\t//维护Refrence\n\t\t\tvar value: any = this._data[k];\n\t\t\tif (value instanceof Resource) {\n\t\t\t\tvalue._removeReference();\n\t\t\t}\n\t\t}\n\t\tthis._data = null;\n\t\tthis._gammaColorMap.clear();\n\t\tthis._gammaColorMap = null;\n\t\t// // 使用对象解析\n\t\tdelete this._uniformBufferDatas;\n\t\tdelete this._uniformBuffersMap;\n\t\tthis._uniformBufferDatas = null;\n\t\tthis._uniformBuffersMap = null;\n\n\t}\n}\n\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderInstance } from \"../../RenderEngine/RenderShader/ShaderInstance\";\nimport { SubShader } from \"../../RenderEngine/RenderShader/SubShader\";\nimport { WebGL } from \"../WebGL\";\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\nimport { ShaderNode } from \"./ShaderNode\";\n\nexport class ShaderCompileDefineBase {\n    /** @internal */\n    static _defineString: Array<string> = [];\n    /** @internal */\n    static _debugDefineString: string[] = [];\n    /** @internal */\n    static _debugDefineMask: number[] = [];\n    /** @internal */\n    public _VS: ShaderNode;\n    /** @internal */\n    public _PS: ShaderNode;\n    /** @internal */\n    _defs: Set<string>;\n    /** @internal */\n    _validDefine: DefineDatas = new DefineDatas();\n    /** @internal */\n    protected _cacheShaderHierarchy: number = 1;\n    /** @internal */\n    protected _owner: SubShader;\n    /** @internal */\n    name: string;\n    /** @internal */\n    protected _cacheSharders: { [key: number]: { [key: number]: { [key: number]: ShaderInstance } } } = {};\n\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\n        this._owner = owner;\n        this.name = name;\n        this._VS = compiledObj.vsNode;\n        this._PS = compiledObj.psNode;\n        this._defs = compiledObj.defs;\n        for (let k of compiledObj.defs)\n            this._validDefine.add(Shader3D.getDefineByName(k));\n    }\n\n    /**\n     * @internal\n     */\n    _resizeCacheShaderMap(cacheMap: any, hierarchy: number, resizeLength: number): void {\n        var end: number = this._cacheShaderHierarchy - 1;\n        if (hierarchy == end) {\n            for (var k in cacheMap) {\n                var shader = cacheMap[k];\n                for (var i: number = 0, n: number = resizeLength - end; i < n; i++) {\n                    if (i == n - 1)\n                        cacheMap[0] = shader;//0替代(i == 0 ? k : 0),只扩不缩\n                    else\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\n                }\n            }\n        }\n        else {\n            ++hierarchy;\n            for (var k in cacheMap)\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\n        var debugDefineString: string[] = ShaderCompileDefineBase._debugDefineString;\n        var debugDefineMask: number[] = ShaderCompileDefineBase._debugDefineMask;\n        var debugMaskLength: number;\n        compileDefine._intersectionDefineDatas(this._validDefine);\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\n            debugMaskLength = compileDefine._length;\n        }\n        //compileDefine.addDefineDatas(Scene3D._configDefineValues);\n\n        var cacheShaders: any = this._cacheSharders;\n        var maskLength: number = compileDefine._length;\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\n            this._cacheShaderHierarchy = maskLength;\n        }\n\n        var mask: Array<number> = compileDefine._mask;\n        var endIndex: number = compileDefine._length - 1;\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\n        for (var i: number = 0; i < maxEndIndex; i++) {\n            var subMask: number = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        var shader: ShaderInstance = cacheShaders[cacheKey];\n        if (shader)\n            return shader;\n\n        var defineString: string[] = ShaderCompileDefineBase._defineString;\n        //TODO\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\n\n        // var config: Config3D = Config3D._config;\n        // var clusterSlices: Vector3 = config.lightClusterCount;\n        var defMap: any = {};\n\n        var vertexHead: string;\n        var fragmentHead: string;\n        var defineStr: string = \"\";\n\n        if (WebGL._isWebGL2) {\n            vertexHead =\n                `#version 300 es\\n\n                #define attribute in\n                #define varying out\n                #define textureCube texture\n                #define texture2D texture\\n`;\n            fragmentHead =\n                `#version 300 es\\n\n                #define varying in\n                out highp vec4 pc_fragColor;\n                #define gl_FragColor pc_fragColor\n                #define gl_FragDepthEXT gl_FragDepth\n                #define texture2D texture\n                #define textureCube texture\n                #define texture2DProj textureProj\n                #define texture2DLodEXT textureLod\n                #define texture2DProjLodEXT textureProjLod\n                #define textureCubeLodEXT textureLod\n                #define texture2DGradEXT textureGrad\n                #define texture2DProjGradEXT textureProjGrad\n                #define textureCubeGradEXT textureGrad\\n`;\n        }\n        else {\n            vertexHead = \"\"\n            fragmentHead =\n                `#ifdef GL_EXT_shader_texture_lod\n                    #extension GL_EXT_shader_texture_lod : enable\n                #endif\n                #if !defined(GL_EXT_shader_texture_lod)\n                    #define texture1DLodEXT texture1D\n                    #define texture2DLodEXT texture2D\n                    #define texture2DProjLodEXT texture2DProj\n                    #define texture3DLodEXT texture3D\n                    #define textureCubeLodEXT textureCube\n                #endif\\n`;\n        }\n\n\n        for (var i: number = 0, n: number = defineString.length; i < n; i++) {\n            var def: string = defineString[i];\n            defineStr += \"#define \" + def + \"\\n\";\n            defMap[def] = true;\n        }\n\n        var vs: any[] = this._VS.toscript(defMap, []);\n        var vsVersion: string = '';\n        if (vs[0].indexOf('#version') == 0) {\n            vsVersion = vs[0] + '\\n';\n            vs.shift();\n        }\n\n        var ps: any[] = this._PS.toscript(defMap, []);\n        var psVersion: string = '';\n        if (ps[0].indexOf('#version') == 0) {\n            psVersion = ps[0] + '\\n';\n            ps.shift();\n        }\n\n        shader = LayaGL.renderOBJCreate.createShaderInstance(vsVersion + vertexHead + defineStr + vs.join('\\n'), psVersion + fragmentHead + defineStr + ps.join('\\n'), this._owner._attributeMap, this);\n\n        cacheShaders[cacheKey] = shader;\n\n        if (Shader3D.debugMode) {\n            var defStr: string = \"\";\n            var defMask: string = \"\";\n\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++)\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\n\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this.name + \" \" + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\n        }\n\n        return shader;\n    }\n}","\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { UniformMapType } from \"./SubShader\";\n\n/**\n * @internal\n */\nexport class GLSLCodeGenerator {\n\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\n\n        let res = \"\";\n        for (const key in attributeMap) {\n            let type = getAttributeType(attributeMap[key][1]);\n            res = `${res}attribute ${type} ${key};\\n`;\n        }\n\n        return res;\n    }\n\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\n\n        if (useUniformBlock) {\n            let blocksStr = \"\";\n            let uniformsStr = \"\";\n            for (const key in uniformsMap) {\n                // uniform block\n                if (typeof uniformsMap[key] == \"object\") {\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\n                    blocksStr += `uniform ${key} {\\n`;\n                    for (const uniformName in blockUniforms) {\n                        let dataType = blockUniforms[uniformName];\n                        blocksStr += `${getAttributeType(dataType)} ${uniformName};\\n`;\n                    }\n                    blocksStr += \"};\\n\";\n                }\n                else { // uniform\n                    let dataType = <ShaderDataType>uniformsMap[key];\n                    uniformsStr += `uniform ${getAttributeType(dataType)} ${key};\\n`;\n                }\n            }\n            return blocksStr + uniformsStr;\n\n        }\n        else {\n            let uniformsStr = \"\";\n            for (const key in uniformsMap) {\n                // uniform block\n                if (typeof uniformsMap[key] == \"object\") {\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\n                    for (const uniformName in blockUniforms) {\n                        let dataType = blockUniforms[uniformName];\n                        uniformsStr += `uniform ${getAttributeType(dataType)} ${uniformName};\\n`;\n                    }\n                }\n                else { // uniform\n                    let dataType = <ShaderDataType>uniformsMap[key];\n                    uniformsStr += `uniform ${getAttributeType(dataType)} ${key};\\n`;\n                }\n            }\n            return uniformsStr;\n        }\n\n    }\n}\n\nfunction getAttributeType(type: ShaderDataType) {\n    switch (type) {\n        case ShaderDataType.Int:\n            return \"int\";\n        case ShaderDataType.Bool:\n            return \"bool\";\n        case ShaderDataType.Float:\n            return \"float\";\n        case ShaderDataType.Vector2:\n            return \"vec2\";\n        case ShaderDataType.Vector3:\n            return \"vec3\";\n        case ShaderDataType.Vector4:\n        case ShaderDataType.Color:\n            return \"vec4\";\n        case ShaderDataType.Matrix4x4:\n            return \"mat4\";\n        case ShaderDataType.Texture2D:\n            return \"sampler2D\";\n        case ShaderDataType.TextureCube:\n            return \"samplerCube\";\n        default:\n            return \"\";\n    }\n}","import { Config3D } from \"../../../Config3D\";\nimport { WebGL } from \"../../webgl/WebGL\";\nimport { SubShader } from \"./SubShader\";\nimport { ShaderCompileDefineBase } from \"../../webgl/utils/ShaderCompileDefineBase\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderVariant } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { GLSLCodeGenerator } from \"./GLSLCodeGenerator\";\nimport { RenderState } from \"./RenderState\";\nimport { ShaderInstance } from \"./ShaderInstance\";\n\n/**\n * <code>ShaderPass</code> 类用于实现ShaderPass。\n */\nexport class ShaderPass extends ShaderCompileDefineBase {\n\n    /** @internal */\n    private static _defineStrings: Array<string> = [];\n    /** @internal */\n    private static _debugDefineStrings: string[] = [];\n    /** @internal */\n    private static _debugDefineMasks: number[] = [];\n    /** @internal */\n    private _renderState: RenderState;\n    /** @internal */\n    _tags: any = {};\n    /** @internal */\n    _pipelineMode: string;\n    /** 优先 ShaderPass 渲染状态 */\n    statefirst: boolean = false;\n\n    /**\n     * 渲染状态。\n     */\n    get renderState(): RenderState {\n        return this._renderState;\n    }\n\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\n        super(owner, null, compiledObj);\n        this._renderState = LayaGL.renderOBJCreate.createRenderState();\n        this._renderState.setNull();\n    }\n\n    /**\n     * @internal\n     */\n    _addDebugShaderVariantCollection(compileDefine: DefineDatas, outDebugDefines: string[], outDebugDefineMask: number[]): void {\n        var dbugShaderVariantInfo: ShaderVariant = Shader3D._debugShaderVariantInfo;\n        var debugSubShader: SubShader = this._owner;\n        var debugShader: Shader3D = debugSubShader._owner;\n        var mask: number[] = compileDefine._mask;\n        Shader3D._getNamesByDefineData(compileDefine, outDebugDefines);\n        outDebugDefineMask.length = mask.length;\n        for (var i: number = 0, n: number = mask.length; i < n; i++)\n            outDebugDefineMask[i] = mask[i];\n\n        if (dbugShaderVariantInfo)\n            dbugShaderVariantInfo.setValue(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\n        else\n            Shader3D._debugShaderVariantInfo = dbugShaderVariantInfo = new ShaderVariant(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\n        Shader3D.debugShaderVariantCollection.add(dbugShaderVariantInfo);\n    }\n\n    /**\n     * @override\n     * @internal\n     */\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\n        var debugDefineString: string[] = ShaderPass._debugDefineStrings;\n        var debugDefineMask: number[] = ShaderPass._debugDefineMasks;\n        var debugMaskLength: number;\n        compileDefine._intersectionDefineDatas(this._validDefine);\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\n            debugMaskLength = compileDefine._length;\n            this._addDebugShaderVariantCollection(compileDefine, debugDefineString, debugDefineMask);\n        }\n\n        var cacheShaders: any = this._cacheSharders;\n        var maskLength: number = compileDefine._length;\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\n            this._cacheShaderHierarchy = maskLength;\n        }\n\n        var mask: Array<number> = compileDefine._mask;\n        var endIndex: number = compileDefine._length - 1;\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\n        for (var i: number = 0; i < maxEndIndex; i++) {\n            var subMask: number = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        var shader: ShaderInstance = cacheShaders[cacheKey];\n        if (shader)\n            return shader;\n\n        var defineString: string[] = ShaderPass._defineStrings;\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\n\n        var clusterSlices: Vector3 = Config3D.lightClusterCount;\n        var defMap: any = {};\n\n        var vertexHead: string;\n        var fragmentHead: string;\n        var defineStr: string = \"\";\n\n        // 拼接 shader attribute\n        let attributeMap = this._owner._attributeMap;\n        let uniformMap = this._owner._uniformMap;\n        let useUniformBlock = Config3D._uniformBlock;\n        let attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\n        let uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\n\n        if (WebGL._isWebGL2) {\n            vertexHead =\n                `#version 300 es\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n#else\n    precision mediump float;\n    precision mediump int;\n#endif\nlayout(std140, column_major) uniform;\n#define attribute in\n#define varying out\n#define textureCube texture\n#define texture2D texture\n${attributeglsl}\n${uniformglsl}\n`;\n\n            fragmentHead =\n                `#version 300 es\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n#else\n    precision mediump float;\n    precision mediump int;\n#endif\nlayout(std140, column_major) uniform;\n#define varying in\nout highp vec4 pc_fragColor;\n#define gl_FragColor pc_fragColor\n#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad\n${uniformglsl}`;\n        }\n        else {\n            vertexHead =\n                `#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n#else\n    precision mediump float;\n    precision mediump int;\n#endif\n${attributeglsl}\n${uniformglsl}`;\n            fragmentHead =\n                `#ifdef GL_EXT_shader_texture_lod\n    #extension GL_EXT_shader_texture_lod : enable\n#endif\n\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n#else\n    precision mediump float;\n    precision mediump int;\n#endif\n\n#if !defined(GL_EXT_shader_texture_lod)\n    #define texture1DLodEXT texture1D\n    #define texture2DLodEXT texture2D\n    #define texture2DProjLodEXT texture2DProj\n    #define texture3DLodEXT texture3D\n    #define textureCubeLodEXT textureCube\n#endif\n${uniformglsl}`;\n        }\n\n        // todo \n        defineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\n        defineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\n        defineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\n        defineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\n        defineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\n        defineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\n\n\n\n        for (var i: number = 0, n: number = defineString.length; i < n; i++) {\n            var def: string = defineString[i];\n            defineStr += \"#define \" + def + \"\\n\";\n            defMap[def] = true;\n        }\n\n        var vs: any[] = this._VS.toscript(defMap, []);\n        var vsVersion: string = '';\n        if (vs[0].indexOf('#version') == 0) {\n            vsVersion = vs[0] + '\\n';\n            vs.shift();\n        }\n\n        var ps: any[] = this._PS.toscript(defMap, []);\n        var psVersion: string = '';\n        if (ps[0].indexOf('#version') == 0) {\n            psVersion = ps[0] + '\\n';\n            ps.shift();\n        };\n        // todo definestr\n        shader = LayaGL.renderOBJCreate.createShaderInstance(vsVersion + vertexHead + defineStr + vs.join('\\n'), psVersion + fragmentHead + defineStr + ps.join('\\n'), this._owner._attributeMap, this);\n\n        cacheShaders[cacheKey] = shader;\n\n        if (Shader3D.debugMode) {\n            var defStr: string = \"\";\n            var defMask: string = \"\";\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++){\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\n            }\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this._owner._owner._name + \" SubShaderIndex:\" + this._owner._owner._subShaders.indexOf(this._owner) + \" PassIndex:\" + this._owner._passes.indexOf(this) + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\n        }\n        return shader;\n    }\n}\n\n\n","import { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { VertexDeclaration } from \"../VertexDeclaration\";\n\n/**\n * ...\n * @author ...\n */\nexport class VertexMesh {\n\t/**顶点位置数据 */\n\tstatic MESH_POSITION0: number = 0;\n\t/**顶点顶点色数据 */\n\tstatic MESH_COLOR0: number = 1;\n\t/**顶点UV0数据 */\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\n\t/**顶点法线数据 */\n\tstatic MESH_NORMAL0: number = 3;\n\t/**顶点切线数据 */\n\tstatic MESH_TANGENT0: number = 4;\n\t/**顶点骨骼索引数据 */\n\tstatic MESH_BLENDINDICES0: number = 5;\n\t/**顶点骨骼权重数据 */\n\tstatic MESH_BLENDWEIGHT0: number = 6;\n\t/**顶点UV1数据 */\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\n\t/**顶点世界矩阵数据Row0 */\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\n\t/**顶点世界矩阵数据Row1 */\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\n\t/**顶点世界矩阵数据Row2 */\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\n\t/**顶点世界矩阵数据Row3 */\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\n\n\n\t//TODO：location不够\n\t/**简单数据动画数据 */\n\tstatic MESH_SIMPLEANIMATOR:number = 12;\n\t/**instanceworld顶点描述 */\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\n\t/**instanceSimple动画数据顶点描述 */\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\n\n\t\n\t/**自定义attribute instance 预留位*/\n\t/**顶点自定义数据0 */\n\tstatic MESH_CUSTOME0:number = 12;\n\t/**顶点自定义数据1 */\n\tstatic MESH_CUSTOME1:number = 13;\n\t/**顶点自定义数据2 */\n\tstatic MESH_CUSTOME2:number = 14;\n\t/**顶点自定义数据3 */\n\tstatic MESH_CUSTOME3:number = 15;\n\n\n\n\t\n\t/**@internal */\n\tprivate static _vertexDeclarationMap: any = {};\n\n\t\n\n\n\t/**\n\t * @internal\n\t */\n\tstatic __init__(): void {\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\n\t\t\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16,[new VertexElement(0,VertexElementFormat.Vector4,VertexMesh.MESH_SIMPLEANIMATOR)]);\n\t}\n\n\t/**\n\t * 获取顶点声明。\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\n\t * @return 顶点声明。\n\t */\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\n\t\tif (!verDec) {\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\n\t\t\tvar offset: number = 0;\n\t\t\tvar elements: any[] = [];\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\n\t\t\t\tvar element: VertexElement;\n\t\t\t\tswitch (subFlags[i]) {\n\t\t\t\t\tcase \"POSITION\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\n\t\t\t\t\t\toffset += 12;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"NORMAL\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\n\t\t\t\t\t\toffset += 12;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"COLOR\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\n\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"UV\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\n\t\t\t\t\t\toffset += 8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"UV1\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\n\t\t\t\t\t\toffset += 8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"BLENDWEIGHT\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\n\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"BLENDINDICES\":\n\t\t\t\t\t\tif (compatible) {\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\n\t\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\n\t\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"TANGENT\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\n\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"NORMAL_BYTE\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\n\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\n\t\t\t\t}\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t\tverDec = new VertexDeclaration(offset, elements);\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\n\t\t}\n\t\treturn verDec;\n\t}\n}\n\n\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDataItem, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderDefine } from \"../../RenderEngine/RenderShader/ShaderDefine\";\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\nimport { ShaderPass } from \"./ShaderPass\";\nimport { VertexMesh } from \"./VertexMesh\";\n\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\n\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\n\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\n\n/**\n * <code>SubShader</code> 类用于创建SubShader。\n */\nexport class SubShader {\n    public static IncludeUniformMap: any;\n\n    /**\n     * @internal\n     */\n    public static StateParamsMap: { [stateID: number]: number };\n\n    /**\n     * 注册glsl所用到的Uniform\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\n     * @param includeName \n     * @param uniformInfo \n     * @param defaultUniformData \n     */\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\n        let obj: any = {};\n        let data: any = obj[includeName] = {};\n        data[\"uniformMap\"] = uniformMap;\n        data[\"defaultValue\"] = defaultValue;\n        Object.assign(SubShader.IncludeUniformMap, obj);\n    }\n\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector2]\n    }\n\n    static __init__() {\n        let DefaultShaderStateMap: { [s: string]: number } = {\n            's_Cull': Shader3D.RENDER_STATE_CULL,\n            's_Blend': Shader3D.RENDER_STATE_BLEND,\n            's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\n            's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\n            's_BlendSrcRGB': Shader3D.RENDER_STATE_BLEND_SRC_RGB,\n            's_BlendDstRGB': Shader3D.RENDER_STATE_BLEND_DST_RGB,\n            's_BlendSrcAlpha': Shader3D.RENDER_STATE_BLEND_SRC_ALPHA,\n            's_BlendDstAlpha': Shader3D.RENDER_STATE_BLEND_DST_ALPHA,\n            's_BlendEquation': Shader3D.RENDER_STATE_BLEND_EQUATION,\n            's_BlendEquationRGB': Shader3D.RENDER_STATE_BLEND_EQUATION_RGB,\n            's_BlendEquationAlpha': Shader3D.RENDER_STATE_BLEND_EQUATION_ALPHA,\n            's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\n            's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE,\n            's_StencilRef': Shader3D.RENDER_STATE_STENCIL_REF,\n            's_StencilTest': Shader3D.RENDER_STATE_STENCIL_TEST,\n            's_StencilWrite': Shader3D.RENDER_STATE_STENCIL_WRITE,\n            's_StencilOp': Shader3D.RENDER_STATE_STENCIL_OP\n        }\n        this.StateParamsMap = {};\n        for (let s in DefaultShaderStateMap) {\n            this.StateParamsMap[DefaultShaderStateMap[s]] = Shader3D.propertyNameToID(s);\n        }\n\n        SubShader.IncludeUniformMap = {};\n    }\n\n    /**@internal */\n    _attributeMap: AttributeMapType;\n\n    /**@internal */\n    _uniformMap: UniformMapType;\n\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\n    /**\n     * @internal\n     * uniform 默认值\n     */\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\n    /**\n     * @internal\n     * uniform 数据类型\n     */\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\n\n    /**@internal */\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\n\n    /**@internal */\n    _owner: Shader3D;\n    /**@internal */\n    _flags: any = {};\n    /**@internal */\n    _passes: ShaderPass[] = [];\n\n    /**\n     * 创建一个 <code>SubShader</code> 实例。\n     * @param\tattributeMap  顶点属性表。\n     * @param\tuniformMap  uniform属性表。\n     */\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\n        this._attributeMap = attributeMap;\n        this._uniformMap = uniformMap;\n        this._uniformDefaultValue = uniformDefaultValue;\n        this._uniformTypeMap = new Map();\n        for (const key in uniformMap) {\n            if (typeof uniformMap[key] == \"object\") {\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\n                for (const uniformName in block) {\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\n                    blockUniformMap.set(uniformName, uniformType);\n\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\n                }\n\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\n                blockUniformMap.forEach((value, key) => {\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\n                });\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\n                this._uniformBufferDataMap.set(key, blockData);\n            }\n            else {\n                let unifromType = <ShaderDataType>uniformMap[key];\n                this._uniformTypeMap.set(key, unifromType);\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube) {\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\n                    let uniformIndex = Shader3D.propertyNameToID(key);\n                    ShaderDefine._texGammaDefine[uniformIndex] = textureGammaDefine;\n                }\n\n            }\n        }\n    }\n\n    /**\n     * 添加标记。\n     * @param key 标记键。\n     * @param value 标记值。\n     */\n    setFlag(key: string, value: string): void {\n        if (value)\n            this._flags[key] = value;\n        else\n            delete this._flags[key];\n    }\n\n    /**\n     * 获取标记值。\n     * @return key 标记键。\n     */\n    getFlag(key: string): string {\n        return this._flags[key];\n    }\n\n    /**\n     * 添加着色器Pass\n     * @param vs \n     * @param ps \n     * @param stateMap \n     * @param pipelineMode 渲染管线模式。 \n     */\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\n    }\n\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\n        shaderPass._pipelineMode = pipelineMode;\n        this._passes.push(shaderPass);\n        this._addIncludeUniform(compiledObj.includeNames);\n        return shaderPass;\n    }\n\n    private _addIncludeUniform(includemap: Set<string>) {\n        for (let ele of includemap) {\n            if (SubShader.IncludeUniformMap[ele]) {\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\n                for (var i in bindtypeMap) {\n                    if (!this._uniformTypeMap.has(i)) {\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\n                        this._uniformMap[i] = bindtypeMap[i];\n                    }\n                }\n                for (var i in bindDefaultValue) {\n                    if (!this._uniformDefaultValue[i]) {\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\n                    }\n                }\n            }\n        }\n    }\n\n}\n\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\n\n    switch (shaderDataType) {\n        case ShaderDataType.Float:\n            return UniformBufferParamsType.Number;\n        case ShaderDataType.Vector2:\n            return UniformBufferParamsType.Vector2;\n        case ShaderDataType.Vector3:\n            return UniformBufferParamsType.Vector3;\n        case ShaderDataType.Vector4:\n        case ShaderDataType.Color:\n            return UniformBufferParamsType.Vector4;\n        case ShaderDataType.Matrix4x4:\n            return UniformBufferParamsType.Matrix4x4;\n        default:\n            throw \"ShaderDataType can not be in UniformBuffer.\";\n    }\n\n}\n\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\nimport { DefineDatas } from \"./DefineDatas\";\nimport { ShaderDefine } from \"./ShaderDefine\";\nimport { ShaderPass } from \"./ShaderPass\";\nimport { ShaderVariant, ShaderVariantCollection } from \"./ShaderVariantCollection\";\nimport { SubShader } from \"./SubShader\";\n\nexport interface IShaderObjStructor {\n    name: string,\n    enableInstancing: boolean,\n    supportReflectionProbe: boolean,\n    attributeMap: any;\n    uniformMap: any;\n    defaultValue: any;\n    shaderPass: Array<any>;\n}\n\nexport interface IShaderpassStructor {\n    VS?: string,\n    FS?: string,\n    VSPath?: string,//TODO\n    FSPath?: string,//TODO\n    pipeline?: string,\n\n}\n/**\n * <code>Shader3D</code> 类用于创建Shader3D。\n */\nexport class Shader3D {\n    static _configDefineValues = new DefineDatas();\n    /**@internal */\n    private static _compileDefineDatas: DefineDatas = new DefineDatas();\n    /**渲染状态_剔除。*/\n    static RENDER_STATE_CULL: number = 0;\n    /**渲染状态_混合。*/\n    static RENDER_STATE_BLEND: number = 1;\n    /**渲染状态_混合源。*/\n    static RENDER_STATE_BLEND_SRC: number = 2;\n    /**渲染状态_混合目标。*/\n    static RENDER_STATE_BLEND_DST: number = 3;\n    /**渲染状态_混合源RGB。*/\n    static RENDER_STATE_BLEND_SRC_RGB: number = 4;\n    /**渲染状态_混合目标RGB。*/\n    static RENDER_STATE_BLEND_DST_RGB: number = 5;\n    /**渲染状态_混合源ALPHA。*/\n    static RENDER_STATE_BLEND_SRC_ALPHA: number = 6;\n    /**渲染状态_混合目标ALPHA。*/\n    static RENDER_STATE_BLEND_DST_ALPHA: number = 7;\n    /**渲染状态_混合常量颜色。*/\n    static RENDER_STATE_BLEND_CONST_COLOR: number = 8;\n    /**渲染状态_混合方程。*/\n    static RENDER_STATE_BLEND_EQUATION: number = 9;\n    /**渲染状态_RGB混合方程。*/\n    static RENDER_STATE_BLEND_EQUATION_RGB: number = 10;\n    /**渲染状态_ALPHA混合方程。*/\n    static RENDER_STATE_BLEND_EQUATION_ALPHA: number = 11;\n    /**渲染状态_深度测试。*/\n    static RENDER_STATE_DEPTH_TEST: number = 12;\n    /**渲染状态_深度写入。*/\n    static RENDER_STATE_DEPTH_WRITE: number = 13;\n    /**渲染状态_模板测试。*/\n    static RENDER_STATE_STENCIL_TEST: number = 14;\n    /**渲染状态_模板写入 */\n    static RENDER_STATE_STENCIL_WRITE: number = 15;\n    /**渲染状态_模板写入值 */\n    static RENDER_STATE_STENCIL_REF: number = 16;\n    /**渲染状态_模板写入设置 */\n    static RENDER_STATE_STENCIL_OP: number = 17;\n\n    /**shader变量提交周期，自定义。*/\n    static PERIOD_CUSTOM: number = 0;\n    /**shader变量提交周期，逐材质。*/\n    static PERIOD_MATERIAL: number = 1;\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\n    static PERIOD_SPRITE: number = 2;\n    /**shader变量提交周期，逐相机。*/\n    static PERIOD_CAMERA: number = 3;\n    /**shader变量提交周期，逐场景。*/\n    static PERIOD_SCENE: number = 4;\n\n    /**@internal */\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\n    /**@internal 图形API为WebGL1.0/OPENGLES2.0。*/\n    static SHADERDEFINE_GRAPHICS_API_GLES2: ShaderDefine;\n    /**@internal 图形API为WebGL2.0/OPENGLES3.0。*/\n    static SHADERDEFINE_GRAPHICS_API_GLES3: ShaderDefine;\n    /**@internal 图形数据传输使用UniformBlock的方式 */\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\n\n    /**@internal */\n    static _propertyNameMap: any = {};\n    /**@internal */\n    private static _propertyNameCounter: number = 0;\n    /**@internal */\n    private static _defineCounter: number = 0;\n    // todo  这个 map 和 get 函数转移到 ShaderDefine 里面\n    /**@internal */\n    private static _defineMap: { [key: string]: ShaderDefine } = {};\n    /**@internal */\n    static _preCompileShader: { [key: string]: Shader3D } = {};\n    /**@internal */\n    static _maskMap: Array<{ [key: number]: string }> = [];\n    /**@internal */\n    static _debugShaderVariantInfo: ShaderVariant;\n    /**是否开启调试模式。 */\n    static debugMode: boolean = false;\n    /**调试着色器变种集合。 */\n    static readonly debugShaderVariantCollection: ShaderVariantCollection = new ShaderVariantCollection();\n\n    /**\n     * @internal\n     */\n    static _getNamesByDefineData(defineData: DefineDatas, out: Array<string>): void {\n        var maskMap: Array<{ [key: number]: string }> = Shader3D._maskMap;\n        var mask: Array<number> = defineData._mask;\n        out.length = 0;\n        for (var i: number = 0, n: number = defineData._length; i < n; i++) {\n            var subMaskMap: { [key: number]: string } = maskMap[i];\n            var subMask: number = mask[i];\n            for (var j: number = 0; j < 32; j++) {\n                var d: number = 1 << j;\n                if (subMask > 0 && d > subMask)//如果31位存在subMask为负数,避免break\n                    break;\n                if (subMask & d)\n                    out.push(subMaskMap[d]);\n            }\n        }\n    }\n\n    /**\n     * 注册宏定义。\n     * @param name \n     */\n    static getDefineByName(name: string): ShaderDefine {\n        var define: ShaderDefine = Shader3D._defineMap[name];\n        if (!define) {\n            var maskMap = Shader3D._maskMap;\n            var counter: number = Shader3D._defineCounter;\n            var index: number = Math.floor(counter / 32);\n            var value: number = 1 << counter % 32;\n            define = new ShaderDefine(index, value);\n            Shader3D._defineMap[name] = define;\n            if (index == maskMap.length) {\n                maskMap.length++;\n                maskMap[index] = {};\n            }\n            maskMap[index][value] = name;\n            Shader3D._defineCounter++;\n        }\n        return define;\n    }\n\n    /**\n     * 通过Shader属性名称获得唯一ID。\n     * @param name Shader属性名称。\n     * @return 唯一ID。\n     */\n    static propertyNameToID(name: string): number {\n        return LayaGL.renderEngine.propertyNameToID(name);\n    }\n\n    static propertyIDToName(id: number): string {\n        return LayaGL.renderEngine.propertyIDToName(id);\n    }\n\n    /**\n     * 添加函数库引用。\n     * @param fileName 文件名字。\n     * @param txt 文件内容\n     */\n    static addInclude(fileName: string, txt: string): void {\n        ShaderCompile.addInclude(fileName, txt);\n    }\n\n    /**\n     * 通过宏定义名字编译shader。\n     * @param\tshaderName Shader名称。\n     * @param   subShaderIndex 子着色器索引。\n     * @param   passIndex  通道索引。\n     * @param\tdefineNames 宏定义名字集合。\n     */\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\n        var shader: Shader3D = Shader3D.find(shaderName);\n        if (shader) {\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\n            if (subShader) {\n                var pass: ShaderPass = subShader._passes[passIndex];\n                if (pass) {\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\n                    compileDefineDatas.clear();\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++)\n                        compileDefineDatas.add(Shader3D.getDefineByName(defineNames[i]));\n                    compileDefineDatas.addDefineDatas(Shader3D._configDefineValues);\n                    pass.withCompile(compileDefineDatas);\n                } else {\n                    console.warn(\"Shader3D: unknown passIndex.\");\n                }\n            } else {\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\n            }\n        } else {\n            console.warn(\"Shader3D: unknown shader name.\");\n        }\n    }\n\n    /**\n     * 添加预编译shader文件，主要是处理宏定义\n     */\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\n    }\n\n    /**\n     * 获取ShaderCompile3D。\n     * @param\tname\n     * @return ShaderCompile3D。\n     */\n    static find(name: string): Shader3D {\n        return Shader3D._preCompileShader[name];\n    }\n\n    static parse(data: IShaderObjStructor, basePath: string) {\n        if (!data.name || !data.uniformMap)\n            console.error(\"TODO\");\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\n        shader.addSubShader(subshader);\n        let passArray = data.shaderPass;\n        for (var i in passArray) {\n            let pass = passArray[i] as IShaderpassStructor;\n            subshader._addShaderPass(ShaderCompile.compile(pass.VS, pass.FS, basePath), pass.pipeline);\n        }\n        return shader;\n    }\n\n    /**@internal */\n    _name: string;\n    /**@internal */\n    _enableInstancing: boolean = false;\n    /**@internal */\n    _supportReflectionProbe: boolean = false;\n    /**@internal */\n    _subShaders: SubShader[] = [];\n\n    /**\n     * 名字。\n     */\n    get name(): string {\n        return this._name;\n    }\n\n    /**\n     * 创建一个 <code>Shader3D</code> 实例。\n     */\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\n        this._name = name;\n        this._enableInstancing = enableInstancing;\n        this._supportReflectionProbe = supportReflectionProbe;\n    }\n\n    /**\n     * 添加子着色器。\n     * @param 子着色器。\n     */\n    addSubShader(subShader: SubShader): void {\n        this._subShaders.push(subShader);\n        subShader._owner = this;\n    }\n\n    /**\n     * 在特定索引获取子着色器。\n     * @param\tindex 索引。\n     * @return 子着色器。\n     */\n    getSubShaderAt(index: number): SubShader {\n        return this._subShaders[index];\n    }\n\n    /**\n     * @deprecated\n     * 通过宏定义遮罩编译shader,建议使用compileShaderByDefineNames。\n     * @param\tshaderName Shader名称。\n     * @param   subShaderIndex 子着色器索引。\n     * @param   passIndex  通道索引。\n     * @param\tdefineMask 宏定义遮罩集合。\n     */\n    static compileShader(shaderName: string, subShaderIndex: number, passIndex: number, ...defineMask: any[]): void {\n        var shader: Shader3D = Shader3D.find(shaderName);\n        if (shader) {\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\n            if (subShader) {\n                var pass: ShaderPass = subShader._passes[passIndex];\n                if (pass) {\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\n                    var mask: Array<number> = compileDefineDatas._mask;\n                    mask.length = 0;\n                    for (var i: number = 0, n: number = defineMask.length; i < n; i++)\n                        mask.push(defineMask[i]);\n                    compileDefineDatas._length = defineMask.length;\n                    pass.withCompile(compileDefineDatas);\n\n                } else {\n                    console.warn(\"Shader3D: unknown passIndex.\");\n                }\n            } else {\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\n            }\n        } else {\n            console.warn(\"Shader3D: unknown shader name.\");\n        }\n    }\n\n}\n\n\n","import { Color } from \"../maths/Color\";\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Shader3D } from \"./RenderShader/Shader3D\";\n\n/**\n *描述UniformBuffer参数类型\n */\nexport enum UniformBufferParamsType {\n    Number,\n    Vector2,\n    Vector3,\n    Vector4,\n    Matrix4x4,\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\n    MatrixArray\n}\n\n/**\n * 实例化UniformBuffer数据\n * 注：要与glsl中Uniform block结构相同\n */\nexport class UnifromBufferData {\n\n    /**\n     * @internal\n     * key: UniformID,value: x:offset y:length z:\n     */\n    protected _layoutMap: any;\n\n    /**\n     * @internal\n     * data length\n     */\n    protected _bytelength: number;\n\n    /**\n     * @internal\n     * params describe\n     */\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\n\n    /**\n     * @internal\n     * update frome x to max,x:min,y:max\n     */\n    _updateFlag: Vector2;\n\n    /**\n     * Buffer Data\n     */\n    _buffer: Float32Array;\n\n    /**\n     * create UniformBufferData Instance\n     * @param uniformParamsStat Params describe\n     */\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\n        // todo 后面改掉 不用map 初始化\n        this._uniformParamsState = new Map(uniformParamsStat);\n        this._createBuffer();\n        this._updateFlag = new Vector2();\n        this._resetUpdateFlag();\n    }\n\n    /**\n     * @internal \n     * createBuffer\n     */\n    protected _createBuffer() {\n        var dataPos = 0;\n        this._layoutMap = {};\n        const elementSize = 4;\n        this._uniformParamsState.forEach((key, value) => {\n            dataPos += this._addUniformParams(value, key, dataPos);\n        });\n        //这里需要对手机平台做兼容\n        //this._bytelength = dataPos * elementSize;\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\n        this._buffer = new Float32Array(dataPos);\n    }\n\n    /**\n     * @internal\n     */\n    protected _getArraySize(key: string) {\n        let left = key.indexOf(\"[\");\n        let right = key.indexOf(\"]\");\n        if (left != -1 && right != -1 && left < right) {\n            return parseFloat(key.substring(left + 1, right));\n        } else\n            throw key + \" is illegal \"\n    }\n\n    /**\n     * @interanl\n     * layout UniformBuffer pitch std140\n     */\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\n        let size: number = 0;\n        let posAdd: number = 0;\n        let posG = offset % 4;\n        let offsetadd;\n        switch (value) {\n            case UniformBufferParamsType.Number:\n                size = 1;\n                posAdd = 1;\n                break;\n            case UniformBufferParamsType.Vector2:\n                size = 2;\n                switch (posG) {\n                    case 0:\n                    case 2:\n                        posAdd = 2;\n                        break;\n                    case 1:\n                    case 3:\n                        offset += 1;\n                        posAdd = 3;\n                        break;\n                }\n                break;\n            case UniformBufferParamsType.Vector3:\n                size = 3;\n                posAdd = 3;\n                switch (posG) {\n                    case 1:\n                    case 2:\n                    case 3:\n                        offset += (4 - posG);\n                        posAdd = (4 - posG) + 3;\n                        break;\n                }\n                break;\n            case UniformBufferParamsType.Vector4:\n            //case UniformBufferParamsType.Color:\n                size = 4;\n                switch (posG) {\n                    case 0:\n                        posAdd = 4;\n                        break;\n                    case 1:\n                        offset += 3;\n                        posAdd = 7;\n                        break;\n                    case 2:\n                        offset += 2;\n                        posAdd = 6;\n                        break;\n                    case 3:\n                        offset += 1;\n                        posAdd = 5;\n                        break;\n                }\n                break;\n            case UniformBufferParamsType.Matrix4x4:\n                size = 16;\n                offsetadd = posG ? 4 - posG : posG;\n                offset += offsetadd\n                posAdd = size + offsetadd;\n                break;\n            case UniformBufferParamsType.Vector4Array:\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\n                offsetadd = posG ? 4 - posG : posG;\n                offset += offsetadd\n                posAdd = size + offsetadd;\n                break;\n            case UniformBufferParamsType.MatrixArray:\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\n                offsetadd = posG ? 4 - posG : posG;\n                offset += offsetadd\n                posAdd = size + offsetadd;\n                break;\n            default:\n                throw \"Unifrom Buffer Params Type is illegal \"\n        }\n        const paramsInfo = new Vector2(offset, size);\n        this._layoutMap[uniformID] = paramsInfo;\n        return posAdd;\n    }\n\n    /**\n     * @internal\n     */\n    private _getParamsInfo(key: number): Vector2 {\n        return this._layoutMap[key];\n    }\n\n    /**\n     * @interanl\n     * set upload range\n     */\n    private _setUpdateFlag(min: number, max: number) {\n        if (min < this._updateFlag.x)\n            this._updateFlag.x = min;\n        if (max > this._updateFlag.y)\n            this._updateFlag.y = max;\n\n    }\n\n    /**\n     * @internal\n     */\n    destroy() {\n        delete this._buffer;\n        this._uniformParamsState.clear();\n        this._uniformParamsState = null;\n        this._layoutMap = null;\n        this._updateFlag = null;\n    }\n\n    /**\n     * @internal\n     */\n    _resetUpdateFlag() {\n        this._updateFlag.setValue(this._buffer.length, 0);\n    }\n\n    /**\n     * @internal\n     * @param uniformID \n     * @returns \n     */\n    _has(uniformID: number) {\n        const info = this._getParamsInfo(uniformID);\n        return !!info;\n    }\n\n    /**\n     * @internal\n     * set buffer params Data\n     */\n    _setData(uniformID: number, value: any) {\n\n        let uniformType = this._uniformParamsState.get(uniformID);\n\n        switch (uniformType) {\n            case UniformBufferParamsType.Number:\n                this.setNumberbyIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector2:\n                this.setVector2byIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector3:\n                this.setVector3byIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector4:\n                this.setVector4byIndex(uniformID, value);\n                break;\n            // case UniformBufferParamsType.Color:\n            //     this.setColorbyIndex(uniformID, value);\n            //     break;\n            case UniformBufferParamsType.Matrix4x4:\n                this.setMatrixbyIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector4Array:\n                this.setVector4ArraybyIndex(uniformID,value);\n                break;\n            case UniformBufferParamsType.MatrixArray:\n                this.setMatrixArraybyIndex(uniformID,value);\n                break;\n            // todo\n            default:\n                break;\n        }\n    }\n\n    /**\n     * get Buffer byte length\n     * @returns \n     */\n    getbyteLength(): number {\n        return this._bytelength;\n    }\n\n    /**\n     * set Vector4Array by paramsName\n     * @param name uniform params name\n     * @param value vector4Array data\n     */\n    setVector4Array(name: string, value: Vector4[]) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector4ArraybyIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector4Array by paramsIndex\n     * @param uniformID uniform params index\n     * @param value vector4Array data\n     * @returns \n     */\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        let count = info.y / 4;\n        for (let i = 0; i < count; i++) {\n            let vec = value[i];\n            this._buffer[pos++] = vec.x;\n            this._buffer[pos++] = vec.y;\n            this._buffer[pos++] = vec.z;\n            this._buffer[pos++] = vec.w;\n        }\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set MatrixArray by paramsName\n     * @param name uniform params name\n     * @param value MatrixArray data\n     */\n    setMatrixArray(name: string, value: Matrix4x4[]) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setMatrixArraybyIndex(uniformID, value);\n    }\n\n    /**\n     * set MatrixArray by paramsIndex\n     * @param uniformID uniform params index\n     * @param value MatrixArray data\n     * @returns \n     */\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        let count = info.y / 4;\n        for (let i = 0; i < count; i++) {\n            let mat = value[i];\n            this._buffer.set(mat.elements, pos);\n            pos += 16;\n        }\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Number by paramsName\n     * @param name uniform params name\n     * @param value Number data\n     */\n    setNumber(name: string, value: number) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setNumberbyIndex(uniformID, value);\n    }\n\n    /**\n     * set Number by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Number data\n     * @returns \n     */\n    setNumberbyIndex(uniformID: number, value: number) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Vector2 by paramsName\n     * @param name uniform params name\n     * @param value Vector2 data\n     */\n    setVector2(name: string, value: Vector2) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector2byIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector2 by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Vector2 data\n     * @returns \n     */\n    setVector2byIndex(uniformID: number, value: Vector2) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value.x;\n        this._buffer[pos++] = value.y;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Vector3 by paramsName\n     * @param name uniform params name\n     * @param value Vector3 data\n     */\n    setVector3(name: string, value: Vector3) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector3byIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector3 by uniformID\n     * @param uniformID uniform params index\n     * @param value Vector3 data\n     * @returns \n     */\n    setVector3byIndex(uniformID: number, value: Vector3) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value.x;\n        this._buffer[pos++] = value.y;\n        this._buffer[pos++] = value.z;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Vector4 by paramsName\n     * @param name uniform params name\n     * @param value Vector4 data\n     */\n    setVector4(name: string, value: Vector4) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector4byIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector4 by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Vector4 data\n     * @returns \n     */\n    setVector4byIndex(uniformID: number, value: Vector4) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value.x;\n        this._buffer[pos++] = value.y;\n        this._buffer[pos++] = value.z;\n        this._buffer[pos++] = value.w;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Color by paramsName\n     * @param name uniform params name\n     * @param value Color data\n     */\n    setColor(name: string, value: Color) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setColorbyIndex(uniformID, value);\n    }\n\n    setColorbyIndex(uniformID: number, value: Color) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\n        this._setUpdateFlag(info.x, pos);\n\n    }\n\n    /**\n     * set Matrix by paramsName\n     * @param name uniform params name\n     * @param value Matrix data\n     */\n    setMatrix(name: string, value: Matrix4x4) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setMatrixbyIndex(uniformID, value);\n    }\n\n    /**\n     * set Matrix by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Matrix data\n     * @returns \n     */\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer.set(value.elements, pos);\n        pos += 16;\n        this._setUpdateFlag(info.x, pos);\n    }\n    \n\n    clone(): UnifromBufferData {\n        // todo clone 更改\n        let ubd = new UnifromBufferData(this._uniformParamsState);\n        return ubd\n    }\n}","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\nexport class SubUniformBufferData extends UnifromBufferData{\n    \n    /**@internal */\n    _offset:number;\n\n    /**@interanl */\n    _isInPool:boolean = false;\n\n    /**@interanl */\n    _needUpdate:boolean = false;\n\n    /**@internal */\n    _realByte = 0;\n    /**\n     * create UniformBufferData Instance\n     * @param uniformParamsStat Params describe\n     */\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\n        super(uniformParamsStat);\n        this._offset = bufferOffset;\n        this._realByte = this._bytelength;\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\n    }\n\n\n}\n\n\n","import { UniformBufferObject } from \"./UniformBufferObject\";\n\n/**\n * 管理\n */\nexport class UniformBufferBase {\n    /**@internal */\n    _singgle: boolean;\n    /**@internal */\n    _mapArray: UniformBufferObject[];\n    /**@internal bind pointer*/\n    _glPointerID: number;\n    /**@internal ubo name*/\n    _blockName: string;\n    /**@internal */\n    _curUniformBuffer:UniformBufferObject;\n    /**\n     * 实例化一个UBOBase\n     * @internal\n     * @param name \n     * @param pointer \n     * @param single \n     */\n    constructor(name: string, pointer: number, single: boolean) {\n        this._mapArray = [];\n        this._blockName = name;\n        this._singgle = single;\n        this._glPointerID = pointer;\n    }\n\n    /**\n     * 增加Buffer\n     * @internal\n     * @param buffer \n     */\n    add(buffer: UniformBufferObject) {\n        let index = this._mapArray.indexOf(buffer);\n        if (index == -1)\n            this._mapArray.push(buffer);\n    }\n\n    /**\n     * 移除Buffer\n     * @internal\n     * @param buffer \n     */\n    splitBuffer(buffer: UniformBufferObject) {\n        let index = this._mapArray.indexOf(buffer);\n        if (index != -1)\n            this._mapArray.splice(index, 1);\n    }\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\nimport { UniformBufferBase } from \"./UniformBufferBase\";\nimport { UnifromBufferData } from \"./UniformBufferData\";\nimport { Buffer } from \"./Buffer\";\n/**\n * 类封装WebGL2UniformBufferObect\n */\nexport class UniformBufferObject extends Buffer {\n    static UBONAME_SCENE = \"SceneUniformBlock\";\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\n    private static commonMap: string[] = [\"CameraUniformBlock\", \"SceneUniformBlock\", \"SpriteUniformBlock\", \"ShadowUniformBlock\"]\n\n    /**@internal */\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\n\n    /**\n     * create Uniform Buffer Base\n     * @param name Uniform block name(must pitch Shader)\n     * @param bufferUsage config usage\n     * @param bytelength byte length\n     * @returns \n     */\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\n        if (!UniformBufferObject._Map.get(name)) {\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\n        }\n        let bufferBase = UniformBufferObject._Map.get(name);\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\n            return null;\n        } else {\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\n            if(bufferBase._singgle) bufferBase.add(ubo);\n            return ubo;\n        }\n    }\n\n    /**\n     * get Uniform Buffer by name\n     * @param name Uniform block name(must pitch Shader)\n     * @returns \n     */\n    static getBuffer(name: string, index: number) {\n        let base = UniformBufferObject._Map.get(name);\n        if (!base)\n            return null;\n        return base._mapArray[index];\n    }\n\n    /**@interanl */\n    _glPointer: number;\n\n    /**@internal */\n    _updateDataInfo: UnifromBufferData;\n\n    /**@internal */\n    _isSingle: boolean = false;\n\n    /**buffer name */\n    _name: string;\n\n    /**all byte length */\n    byteLength: number;\n\n    /**\n     * @interanl\n     */\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\n        super(BufferTargetType.UNIFORM_BUFFER,bufferUsage);\n        this._glPointer = glPointer;\n        this.byteLength = byteLength;\n        this._name = name;\n        this._isSingle = isSingle;\n        this.bind();\n        if (this._isSingle)\n            this._bindUniformBufferBase();\n        this._glBuffer.setDataLength(this.byteLength);\n    }\n\n    /**\n     * differcnt UBO bind Point\n     * @internal\n     */\n    _bindUniformBufferBase() {\n        // const base = UniformBufferObject._Map.get(this._name);\n        // if (base._curUniformBuffer != this) {\n            this._glBuffer.bindBufferBase(this._glPointer);\n            //base._curUniformBuffer = this;\n        // }\n    }\n\n    /**\n     * 绑定一段\n     * @internal\n     */\n    _bindBufferRange(offset: number, byteCount: number) {\n        this.bind();\n        this._glBuffer.bindBufferRange(this._glPointer,offset,byteCount);\n        //gl.bindBufferRange(gl.UNIFORM_BUFFER, this._glPointer, this._glBuffer, offset, byteCount);\n    }\n\n    /**\n     * 重置buffer长度\n     * @param bytelength \n     */\n    _reset(bytelength: number) {\n        \n        //destroy\n        if (this._glBuffer) {\n            this._glBuffer.destroy();\n            this._glBuffer = null;\n        }\n        //create new\n        this._byteLength = this.byteLength = bytelength;\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this._bufferType,this._bufferUsage);\n        if (this._isSingle)\n            this._bindUniformBufferBase();\n        this._glBuffer.setDataLength(this.byteLength);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    bind(): boolean {\n       return this._glBuffer.bindBuffer();\n    }\n\n    /**\n     * set UniformBuffer data by UniformBufferData\n     * @param buffer Float32Array data\n     * @param bufferOffset byteOffset\n     * @param byteCount  byteCount\n     * @returns \n     */\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\n        if (byteCount < 0) return;\n        this.bind();\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\n        if (needSubData) {\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\n            //bufferSubData(this._bufferType, bufferOffset, subData);\n            this._glBuffer.setData(subData,bufferOffset);\n        }\n        else {\n            // let gl = (LayaGL.instance as WebGL2RenderingContext);                                                 \n            // gl.bufferSubData(this._bufferType, bufferOffset, buffer, 0, buffer.length);\n            this._glBuffer.setDataEx(buffer,bufferOffset,buffer.length);\n        }\n    }\n\n    /**\n     * set UniformBuffer data by UniformBufferData\n     * @param bufferData \n     */\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\n        if (this._updateDataInfo == bufferData) {\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\n            bufferData._resetUpdateFlag();\n        } else {\n            this.setData(bufferData._buffer, 0, this.byteLength);\n            bufferData._resetUpdateFlag();\n            this._updateDataInfo = bufferData;\n        }\n    }\n\n    /**\n     * set Data by subUniformBufferData\n     * @param bufferData sub UniformBufferData\n     * @param offset \n     */\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\n        let datalength = bufferData.getbyteLength();//offset\n        let reallength = bufferData._realByte;//update Count\n        bufferData._resetUpdateFlag();\n        //let gl = (LayaGL.instance as WebGL2RenderingContext);\n        this.bind();\n        //gl.bufferSubData(this._bufferType, offset * datalength, bufferData._buffer, 0, reallength / 4);\n        this._glBuffer.setDataEx(bufferData._buffer,offset * datalength,reallength / 4);\n    }\n\n    /**\n\t * @private\n\t */\n\tdestroy(): void {\n\t\tsuper.destroy();\n\t}\n}","export enum RenderDrawMode{\n    TRIANGLES,\n    POINTS,\n    LINES\n}","export enum RenderIndexMode{\n    UNSIGNED_BYTE,\n    UNSIGNED_SHORT,\n    UNSIGNED_INT\n}","/**\n * 纹理解码格式。\n */\nexport enum TextureDecodeFormat {\n    /** 常规解码方式,直接采样纹理颜色。*/\n    Normal,\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\n    RGBM\n}","import { Vector3 } from \"../../maths/Vector3\";\nimport { BlendEquationSeparate } from \"../RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEnum/BlendFactor\";\nimport { BlendType } from \"../RenderEnum/BlendType\";\nimport { CompareFunction } from \"../RenderEnum/CompareFunction\";\nimport { CullMode } from \"../RenderEnum/CullMode\";\nimport { StencilOperation } from \"../RenderEnum/StencilOperation\";\n\n\n\n/**\n * <code>RenderState</code> 类用于控制渲染状态。\n */\nexport class RenderState {\n\t/**剔除枚举_不剔除。*/\n\tstatic CULL_NONE: number = CullMode.Off;\n\t/**剔除枚举_剔除正面。*/\n\tstatic CULL_FRONT: number = CullMode.Front;\n\t/**剔除枚举_剔除背面。*/\n\tstatic CULL_BACK: number = CullMode.Back;\n\n\t/**混合枚举_禁用。*/\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\n\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\n\t/**混合参数枚举_混合设置颜色 */\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\n\t/**很合参数枚举_混合颜色取反 */\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\n\n\t/**混合方程枚举_加法,例：source + destination*/\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\n\t/**混合方程枚举_减法，例：source - destination*/\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\n\t/**混合方程枚举_反序减法，例：destination - source*/\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\n\t/**混合方程枚举_取最小 TODO */\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\n\t/**混合方程枚举_取最大 TODO*/\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\n\n\t/**深度测试函数枚举_关闭深度测试。*/\n\tstatic DEPTHTEST_OFF: number = 0/*WebGLContext.NEVER*/;//TODO:什么鬼\n\t/**深度测试函数枚举_从不通过。*/\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\n\t/**深度测试函数枚举_小于时通过。*/\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\n\t/**深度测试函数枚举_等于时通过。*/\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\n\t/**深度测试函数枚举_小于等于时通过。*/\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\n\t/**深度测试函数枚举_大于时通过。*/\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\n\t/**深度测试函数枚举_不等于时通过。*/\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\n\t/**深度测试函数枚举_大于等于时通过。*/\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\n\t/**深度测试函数枚举_总是通过。*/\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\n\n\n\tstatic STENCILTEST_OFF: number = 0;\n\t/**深度测试函数枚举_从不通过。*/\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\n\t/**深度测试函数枚举_小于时通过。*/\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\n\t/**深度测试函数枚举_等于时通过。*/\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\n\t/**深度测试函数枚举_小于等于时通过。*/\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\n\t/**深度测试函数枚举_大于时通过。*/\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\n\t/**深度测试函数枚举_不等于时通过。*/\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\n\t/**深度测试函数枚举_大于等于时通过。*/\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\n\t/**深度测试函数枚举_总是通过。*/\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\n\t/**保持当前值*/\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\n\t/**将模板缓冲区值设置为0*/\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\n\t/**将模具缓冲区值设置为指定的参考值*/\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\n\t/**增加当前模具缓冲区值+1 */\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\n\t/**递减当前模板缓冲区的值*/\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\n\t/**按位反转当前的模板缓冲区的值*/\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\n\n\t/** @internal */\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\n\n\t/**渲染剔除状态。*/\n\tcull: number;\n\t/**透明混合。*/\n\tblend: number;\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\n\tsrcBlend: number;\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\n\tdstBlend: number;\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tsrcBlendRGB: number;\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tdstBlendRGB: number;\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tsrcBlendAlpha: number;\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tdstBlendAlpha: number;\n\t/**混合方程。*/\n\tblendEquation: number;\n\t/**RGB混合方程。*/\n\tblendEquationRGB: number;\n\t/**Alpha混合方程。*/\n\tblendEquationAlpha: number;\n\t/**深度测试函数。*/\n\tdepthTest: number;\n\t/**是否深度测试。*/\n\tdepthWrite: boolean;\n\t/**是否模板写入 */\n\tstencilWrite: boolean;\n\t/**是否开启模板测试 */\n\tstencilTest: number;\n\t/**模板值 一般会在0-255*/\n\tstencilRef: number;\n\t/**模板设置值 */\n\tstencilOp: Vector3;\n\n\t/**\n\t * 创建一个 <code>RenderState</code> 实例。\n\t */\n\tconstructor() {\n\t\tthis.cull = RenderState.CULL_BACK;\n\t\tthis.blend = RenderState.BLEND_DISABLE;\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\n\t\tthis.depthWrite = true;\n\t\tthis.stencilRef = 1;\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\n\t\tthis.stencilWrite = false;\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetNull() {\n\t\tthis.cull = null;\n\t\tthis.blend = null;\n\t\tthis.srcBlend = null;\n\t\tthis.dstBlend = null;\n\t\tthis.srcBlendRGB = null;\n\t\tthis.dstBlendRGB = null;\n\t\tthis.srcBlendAlpha = null;\n\t\tthis.dstBlendAlpha = null;\n\t\tthis.blendEquation = null;\n\t\tthis.blendEquationRGB = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.depthTest = null;\n\t\tthis.depthWrite = null;\n\t\tthis.stencilRef = null;\n\t\tthis.stencilTest = null;\n\t\tthis.stencilWrite = null;\n\t\tthis.stencilOp = null;\n\t}\n\n\n\t// /**\n\t//  * 克隆。\n\t//  * @return\t 克隆副本。\n\t//  */\n\t// clone(): any {\n\t// \tvar dest: RenderState = new RenderState();\n\t// \tthis.cloneTo(dest);\n\t// \treturn dest;\n\t// }\n\n}\n\n\n","import { CommandEncoder } from \"../../layagl/CommandEncoder\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\nimport { RenderStateType } from \"../../RenderEngine/RenderEnum/RenderStateType\";\nimport { IRenderShaderInstance } from \"../../RenderEngine/RenderInterface/IRenderShaderInstance\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderData, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderPass } from \"../../RenderEngine/RenderShader/ShaderPass\";\nimport { ShaderVariable } from \"../../RenderEngine/RenderShader/ShaderVariable\";\nimport { SubShader } from \"../../RenderEngine/RenderShader/SubShader\";\nimport { RenderStateCommand } from \"../../RenderEngine/RenderStateCommand\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { ShaderCompileDefineBase } from \"../../webgl/utils/ShaderCompileDefineBase\";\nimport { RenderState } from \"./RenderState\";\n\n/**\n * @internal\n * <code>ShaderInstance</code> 类用于实现ShaderInstance。\n */\nexport class ShaderInstance {\n\t/**@internal */\n\tprivate _shaderPass: ShaderCompileDefineBase | ShaderPass;\n\n\tprivate _renderShaderInstance: IRenderShaderInstance;\n\n\t/**@internal */\n\t_sceneUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_cameraUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_spriteUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_materialUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\tprivate _customUniformParamsMap: any[] = [];\n\n\t/**@internal */\n\t_uploadMark: number = -1;\n\t/**@internal */\n\t_uploadMaterial: ShaderData;\n\t/**@internal RenderIDTODO*/\n\t_uploadRender: any;\n\t/** @internal */\n\t_uploadRenderType: number = -1;\n\t/**@internal CamneraTOD*/\n\t_uploadCameraShaderValue: ShaderData;\n\t/**@internal SceneIDTODO*/\n\t_uploadScene: any;\n\n\t_cullStateCMD: RenderStateCommand;\n\n\t/**\n\t * 创建一个 <code>ShaderInstance</code> 实例。\n\t */\n\tconstructor(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }, shaderPass: ShaderCompileDefineBase) {\n\t\tthis._cullStateCMD = LayaGL.renderOBJCreate.createRenderStateComand();\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(vs, ps, attributeMap);\n\t\tif (this._renderShaderInstance._complete) {\n\t\t\tthis._shaderPass = shaderPass;\n\t\t\tthis._create();\n\t\t}\n\n\n\t}\n\n\tget complete(): boolean {\n\t\treturn this._renderShaderInstance._complete;\n\t}\n\n\n\t/**\n\t * @internal TODO3D\n\t */\n\tprotected _create(): void {\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\n\t\tthis._cameraUniformParamsMap = new CommandEncoder();\n\t\tthis._spriteUniformParamsMap = new CommandEncoder();\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\n\t\tconst sceneParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Scene3D\");\n\t\tconst spriteParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite3D\");\n\t\tconst cameraParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"BaseCamera\");\n\t\tconst customParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Custom\");\n\t\tlet i, n;\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\n\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\tlet one: ShaderVariable = data[i];\n\t\t\tif (sceneParams.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (cameraParams.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._cameraUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (spriteParms.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._spriteUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (customParams.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._customUniformParamsMap || (this._customUniformParamsMap = []);\n\t\t\t\tthis._customUniformParamsMap[one.dataOffset] = one;\n\t\t\t} else {\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\t/**\n\t * @inheritDoc\n\t * @override\n\t */\n\tprotected _disposeResource(): void {\n\t\tthis._renderShaderInstance.destroy();\n\t\tthis._sceneUniformParamsMap = null;\n\t\tthis._cameraUniformParamsMap = null;\n\t\tthis._spriteUniformParamsMap = null;\n\t\tthis._materialUniformParamsMap = null\n\t\tthis._customUniformParamsMap = null;\n\n\t\tthis._uploadMaterial = null;\n\t\tthis._uploadRender = null;\n\t\tthis._uploadCameraShaderValue = null;\n\t\tthis._uploadScene = null;\n\t}\n\n\n\t//miner RenderState  removeTODO\n\n\t/**\n\t * @internal\n\t */\n\tprivate _getRenderState(shaderDatas: any, stateIndex: number): any {\n\t\tvar stateID: any = SubShader.StateParamsMap[stateIndex];\n\t\treturn shaderDatas[stateID];\n\t}\n\n\tbind() {\n\t\treturn this._renderShaderInstance.bind();\n\t}\n\n\tuploadUniforms(shaderUniform: CommandEncoder, shaderDatas: ShaderData, uploadUnTexture: boolean) {\n\t\tLayaGL.renderEngine.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tuploadRenderStateBlendDepth(shaderDatas: ShaderData): void {\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\n\t\tvar datas: any = shaderDatas.getData();\n\n\t\tvar depthWrite: any = this._getRenderState(datas, Shader3D.RENDER_STATE_DEPTH_WRITE);\n\t\tvar depthTest: any = this._getRenderState(datas, Shader3D.RENDER_STATE_DEPTH_TEST);\n\t\tvar blend: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND);\n\t\tvar stencilRef: any = this._getRenderState(datas, Shader3D.RENDER_STATE_STENCIL_REF);\n\t\tvar stencilTest: any = this._getRenderState(datas, Shader3D.RENDER_STATE_STENCIL_TEST);\n\t\tvar stencilWrite: any = this._getRenderState(datas, Shader3D.RENDER_STATE_STENCIL_WRITE);\n\t\tvar stencilOp: any = this._getRenderState(datas, Shader3D.RENDER_STATE_STENCIL_OP);\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\n\t\t\trenderState.depthWrite != null ? depthWrite = renderState.depthWrite : 0;\n\t\t\trenderState.depthTest != null ? depthTest = renderState.depthTest : 0;\n\t\t\trenderState.blend != null ? blend = renderState.blend : 0;\n\t\t\trenderState.stencilRef != null ? stencilRef = renderState.stencilRef : 0;\n\t\t\trenderState.stencilTest != null ? stencilTest = renderState.stencilTest : 0;\n\t\t\trenderState.stencilWrite != null ? stencilWrite = renderState.stencilWrite : 0;\n\t\t\trenderState.stencilOp != null ? stencilOp = renderState.stencilOp : 0;\n\t\t}\n\t\telse {\n\t\t\tdepthWrite = depthWrite ?? renderState.depthWrite;\n\t\t\tdepthTest = depthTest ?? renderState.depthTest;\n\t\t\tblend = blend ?? renderState.blend;\n\t\t\tstencilRef = stencilRef ?? renderState.stencilRef;\n\t\t\tstencilTest = stencilTest ?? renderState.stencilTest;\n\t\t\tstencilWrite = stencilWrite ?? renderState.stencilWrite;\n\t\t\tstencilOp = stencilOp ?? renderState.stencilOp;\n\t\t}\n\n\t\tdepthWrite = depthWrite ?? RenderState.Default.depthWrite;\n\t\tdepthTest = depthTest ?? RenderState.Default.depthTest;\n\t\tblend = blend ?? RenderState.Default.blend;\n\t\tstencilRef = stencilRef ?? RenderState.Default.stencilRef;\n\t\tstencilTest = stencilTest ?? RenderState.Default.stencilTest;\n\t\tstencilWrite = stencilWrite ?? RenderState.Default.stencilWrite;\n\t\tstencilOp = stencilOp ?? RenderState.Default.stencilOp;\n\n\t\tRenderStateContext.setDepthMask(depthWrite);\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF)\n\t\t\tRenderStateContext.setDepthTest(false);\n\t\telse {\n\t\t\tRenderStateContext.setDepthTest(true);\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\n\t\t}\n\t\t//blend\n\t\tswitch (blend) {\n\t\t\tcase RenderState.BLEND_DISABLE:\n\t\t\t\tRenderStateContext.setBlend(false);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\n\t\t\t\tvar blendEquation: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_EQUATION);\n\t\t\t\tvar srcBlend: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_SRC);\n\t\t\t\tvar dstBlend: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_DST);\n\t\t\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\n\t\t\t\t\trenderState.blendEquation != null ? blendEquation = renderState.blendEquation : 0;\n\t\t\t\t\trenderState.srcBlend != null ? srcBlend = renderState.srcBlend : 0;\n\t\t\t\t\trenderState.dstBlend != null ? dstBlend = renderState.dstBlend : 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tblendEquation = blendEquation ?? renderState.blendEquation;\n\t\t\t\t\tsrcBlend = srcBlend ?? renderState.srcBlend;\n\t\t\t\t\tdstBlend = dstBlend ?? renderState.dstBlend;\n\t\t\t\t}\n\t\t\t\tblendEquation = blendEquation ?? RenderState.Default.blendEquation;\n\t\t\t\tsrcBlend = srcBlend ?? RenderState.Default.srcBlend;\n\t\t\t\tdstBlend = dstBlend ?? RenderState.Default.dstBlend;\n\n\t\t\t\tRenderStateContext.setBlend(true);\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\n\n\t\t\t\tvar blendEquationRGB: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_EQUATION_RGB);\n\t\t\t\tvar blendEquationAlpha: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_EQUATION_ALPHA);\n\t\t\t\tvar srcRGB: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_SRC_RGB);\n\t\t\t\tvar dstRGB: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_DST_RGB);\n\t\t\t\tvar srcAlpha: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_SRC_ALPHA);\n\t\t\t\tvar dstAlpha: any = this._getRenderState(datas, Shader3D.RENDER_STATE_BLEND_DST_ALPHA);\n\t\t\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\n\t\t\t\t\trenderState.blendEquationRGB != null ? blendEquationRGB = renderState.blendEquationRGB : 0;\n\t\t\t\t\trenderState.blendEquationAlpha != null ? blendEquationAlpha = renderState.blendEquationAlpha : 0;\n\t\t\t\t\trenderState.srcBlendRGB != null ? srcRGB = renderState.srcBlendRGB : 0;\n\t\t\t\t\trenderState.dstBlendRGB != null ? dstRGB = renderState.dstBlendRGB : 0;\n\t\t\t\t\trenderState.srcBlendAlpha != null ? srcAlpha = renderState.srcBlendAlpha : 0;\n\t\t\t\t\trenderState.dstBlendAlpha != null ? dstAlpha = renderState.dstBlendAlpha : 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tblendEquationRGB = blendEquationRGB ?? renderState.blendEquationRGB;\n\t\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? renderState.blendEquationAlpha;\n\t\t\t\t\tsrcRGB = srcRGB ?? renderState.srcBlendRGB;\n\t\t\t\t\tdstRGB = dstRGB ?? renderState.dstBlendRGB;\n\t\t\t\t\tsrcAlpha = srcAlpha ?? renderState.srcBlendAlpha;\n\t\t\t\t\tdstAlpha = dstAlpha ?? renderState.dstBlendAlpha;\n\t\t\t\t}\n\n\t\t\t\tblendEquationRGB = blendEquationRGB ?? RenderState.Default.blendEquationRGB;\n\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? RenderState.Default.blendEquationAlpha;\n\t\t\t\tsrcRGB = srcRGB ?? RenderState.Default.srcBlendRGB;\n\t\t\t\tdstRGB = dstRGB ?? RenderState.Default.dstBlendRGB;\n\t\t\t\tsrcAlpha = srcAlpha ?? RenderState.Default.srcBlendAlpha;\n\t\t\t\tdstAlpha = dstAlpha ?? RenderState.Default.dstBlendAlpha;\n\n\t\t\t\tRenderStateContext.setBlend(true);\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Stencil\n\t\tRenderStateContext.setStencilMask(stencilWrite);\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\n\t\t\tRenderStateContext.setStencilTest(false);\n\t\t} else {\n\t\t\tRenderStateContext.setStencilTest(true);\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\n\n\t\t}\n\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\n\n\n\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tuploadRenderStateFrontFace(shaderDatas: ShaderData, isTarget: boolean, invertFront: boolean): void {\n\t\tthis._cullStateCMD.clear();\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\n\t\tvar datas: any = shaderDatas.getData();\n\t\tvar cull: any = this._getRenderState(datas, Shader3D.RENDER_STATE_CULL);\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\n\t\t\tcull = renderState.cull ?? cull;\n\t\t}\n\t\t\n\t\tcull = cull ?? RenderState.Default.cull;\n\n\t\tvar forntFace: number;\n\t\tswitch (cull) {\n\t\t\tcase RenderState.CULL_NONE:\n\t\t\t\tthis._cullStateCMD.addCMD(RenderStateType.CullFace, false);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.CULL_FRONT:\n\t\t\t\tthis._cullStateCMD.addCMD(RenderStateType.CullFace, true);\n\t\t\t\tif (isTarget == invertFront)\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\n\t\t\t\telse\n\t\t\t\t\tforntFace = CullMode.Back;\n\t\t\t\tthis._cullStateCMD.addCMD(RenderStateType.FrontFace, forntFace);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.CULL_BACK:\n\t\t\t\tthis._cullStateCMD.addCMD(RenderStateType.CullFace, true);\n\t\t\t\tif (isTarget != invertFront)\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\n\t\t\t\telse\n\t\t\t\t\tforntFace = CullMode.Back;\n\t\t\t\tthis._cullStateCMD.addCMD(RenderStateType.FrontFace, forntFace);\n\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._cullStateCMD.applyCMD();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tuploadCustomUniform(index: number, data: any): void {\n\t\tLayaGL.renderEngine.uploadCustomUniforms(this._renderShaderInstance, this._customUniformParamsMap, index, data);\n\t}\n}\n\n","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n\nexport class NativeGLRender2DContext extends NativeGLObject implements IRender2DContext {\n\n    constructor(engine: NativeWebGLEngine) {\n        super(engine);\n    }\n\n    activeTexture(textureID: number): void {\n\n    }\n\n    bindTexture(target: number, texture: WebGLTexture): void {\n    }\n\n    bindUseProgram(webglProgram: any):boolean {\n        return true;\n    }\n\n}","/**\n * init Webgl option\n */\nexport class WebGlConfig {\n    stencil: boolean;\n    alpha: boolean;\n    depth: boolean;\n    antialias: boolean;\n    failIfMajorPerformanceCaveat: boolean;\n    premultipliedAlpha: boolean;\n    preserveDrawingBuffer: boolean;\n    powerPreference: WebGLPowerPreference;\n}","/**\n * 共享内存分配,并且绑定Native共享Buffer\n */\nexport class CommonMemoryAllocater{\n    \n    /**\n     * 创建内存，并绑定为共享内存\n     * @param size \n     * @returns \n     */\n    static creatBlock(size:number):ArrayBuffer{\n        const buffer = new ArrayBuffer(size);\n        \n        //native bind todo:\n        //buffer.nativeid = ??\n        return buffer;\n    }\n\n    /**\n     * 释放共享内存\n     * @param buffer \n     */\n    static freeMemoryBlock(buffer:ArrayBuffer){\n        //TODO native free buffer\n        buffer = null;\n    }\n    \n    \n    \n}","export enum MemoryDataType{\n   ShaderData,\n   TextureData,\n   VertexData,\n   IndexData,\n   BaseRenderData,\n}","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\n\nexport class NativeMemory {\n    static NativeSourceID:number = 0;\n    /**@internal 共享内存数据 */\n    public _buffer: ArrayBuffer;\n    /**@internal 显示数据 */\n    static  _sharedBuffer: ArrayBuffer = new ArrayBuffer(256);\n    /**@internal 显示数据 */\n    protected _idata:Int32Array;\n    protected _fdata:Float32Array;\n    protected _f64data:Float64Array;\n    protected _byteArray:Uint8Array;\n    /**数据长度 */\n    protected _byteLength: number;\n    /**销毁标记 */\n    protected _destroyed: boolean;\n    /**数据资源 */\n    protected _id:number;\n    /**\n     * 实例化一个共享内存\n     * @param size byteLength\n     */\n    constructor(size: number, shared: boolean) {\n        if (shared) {\n            if (size > NativeMemory._sharedBuffer.byteLength) {\n                throw new Error(\"NativeMemory:shared buffer not enough\");\n            }\n            this._buffer = NativeMemory._sharedBuffer;\n        }\n        else {\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\n        }\n        this._idata = new Int32Array(this._buffer);\n        this._fdata = new Float32Array(this._buffer);\n        this._f64data = new Float64Array(this._buffer);\n        this._byteArray = new Uint8Array(this._buffer);\n        this._byteLength = size;\n    }\n\n    /**\n     * Float32Array Data\n     */\n    get float32Array(): Float32Array {\n        return  this._fdata;\n    }\n\n    get float64Array(): Float64Array {\n        return  this._f64data;\n    }\n    /**\n     * Uint16Array Data\n     */\n    /*get uint16Array(): Uint16Array {\n        if (!(this._bufferData instanceof Uint16Array))\n            this._bufferData = new Uint16Array(this._buffer);\n        return <Uint16Array>this._bufferData;\n    }*/\n\n    /**\n     * Uint8Array Data\n     */\n    get uint8Array(): Uint8Array {\n        return this._byteArray;\n    }\n\n    /**\n     * Int32Array Data\n     */\n    get int32Array(): Int32Array {\n        return this._idata;\n    }\n\n    /**\n     * 设置数据\n     * @param data 数据\n     * @param stride 字节偏移\n     * //TODO 字节对齐\n     */\n    /*setData(data:Uint8Array|Uint16Array|Uint32Array|Int32Array|Float32Array,stride:number):void{\n        if(data instanceof Uint8Array){\n           this.uint8Array.set(data,stride/2);\n            return;\n        }\n        else if(data instanceof Uint16Array){\n           this.uint16Array.set(data,stride/2);\n            return;\n        }else{\n           this.float32Array.set(data,stride/4);\n            return;\n        }\n    }*/\n\n    /**\n     * 设置多个参数\n     * @param offset \n     * @param args \n     * 考虑字节对齐\n     */\n    /*setDataByParams(offset:number,...args: number[]):void{\n        if(args)\n        {\n            for(let i=0,n:number=args.length;i<n;i++)\n            this._bufferData[i+offset]=args[i];\n        }\n    }*/\n\n    /**\n     * 扩充buffer\n     * @param size \n     * @returns \n     */\n    /*expand(size: number) {\n        if(size<=this._byteLength)\n            return;\n        this._byteLength = size;\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\n        this.clear();\n        this._buffer = CommonMemoryAllocater.creatBlock(size);\n    }*/\n\n    /**\n     * 删除\n     * @returns \n     */\n    destroy() {\n        if(this._destroyed)\n            return;\n        this.clear();\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\n        this._destroyed = true;\n    }\n\n    /**\n     * 清楚\n     */\n    clear(): void {\n        this._idata = null;\n        this._fdata = null;\n        this._byteArray = null;\n    }\n}","import { INativeUploadNode } from \"./INativeUploadNode\";\nimport { NativeMemory } from \"./NativeMemory\";\n\nexport class UploadMemory extends NativeMemory{\n    \n    /**\n     * @internal\n     * 数据填充的位置\n     */\n    _currentOffsetInByte:number = 0;\n\n    constructor(size:number){\n        super(size,false);\n    }\n\n    addBlockCell(node: INativeUploadNode, dataSizeInByte: number){\n        if (node.uploadDataTOShareMemory(this, this._currentOffsetInByte)) {\n            this._currentOffsetInByte += dataSizeInByte;\n        }\n    }\n\n    /**\n     * check ability of size data\n     * @param size \n     * @returns \n     */\n    check(size:number){\n        return this._currentOffsetInByte + size < this._byteLength;\n    }\n\n    /**\n     * 清空更新数据\n     */\n    clear(): void {\n      this._currentOffsetInByte = 0;\n    }\n\n\n}","import { SingletonList } from \"../../../../utils/SingletonList\";\nimport { INativeUploadNode } from \"./INativeUploadNode\";\nimport { UploadMemory } from \"./UploadMemory\";\n\n/**\n * 用来组织所有的数据更新\n * 基本思路如下：每个需要更新native数据的类都继承接口INativeUploadNode，当需要上传数据时，会添加到UploadMemoryMenager.dataNodeList队列中，统一更新数据到共享Buffer中\n * 会有一个共享Buffer NativeMemory来记录总共用了几个UploadMemory，每个Upload中有几个UploadMemoryCell，在native中统一的将数据变化全部同步到Native的渲染底层\n */\nexport class UploadMemoryManager {\n    /**\n     * each upload block memory size\n     * defined 1MB\n     */\n    static UploadMemorySize: number = 1024 * 1024;\n    /*@internal SingleOBJ*/\n    private static _instance: UploadMemoryManager = null;\n    /**@internal 需要上传数据的Node列表*/\n    _dataNodeList: SingletonList<INativeUploadNode> = new SingletonList();\n    /**@internal */\n    _currentBlock: UploadMemory;\n    /**@internal */\n    _commandNums: number = 0;\n\n    /**@native C++ */\n    _conchUploadMemoryManager:any;\n\n    constructor() {\n        this._currentBlock = new UploadMemory(UploadMemoryManager.UploadMemorySize);\n        this._conchUploadMemoryManager = new (window as any).conchUploadMemoryManager();\n    }\n    static getInstance(): UploadMemoryManager {\n        if (!UploadMemoryManager._instance) {\n            UploadMemoryManager._instance = new UploadMemoryManager();\n        }\n        return UploadMemoryManager._instance;\n    }\n    private _addNodeCommand(node: INativeUploadNode, sizeInByte: number) {\n        this._currentBlock.addBlockCell(node, sizeInByte);\n        this._commandNums++;\n    }\n\n    static syncRenderMemory()\n    {\n        UploadMemoryManager.getInstance()._serialiseData();\n        UploadMemoryManager.getInstance().clear();\n    }\n\n    /**\n     * @internal\n     */\n    private _serialiseData() {\n        const elements = this._dataNodeList.elements;\n        for (let i = 0; i < this._dataNodeList.length; i++) {\n            let node = elements[i];\n            let dataSizeInByte = node.getUploadMemoryLength();//get upload Memory Length\n            if (dataSizeInByte > UploadMemoryManager.UploadMemorySize)\n                throw \"dataSize is too large, greater than UploadMemorySize,\";\n            if (this._currentBlock.check(dataSizeInByte)) { \n                 //Deserialization all cmd to native data\n                this.uploadData();\n                this._addNodeCommand(node, dataSizeInByte);\n            } else { \n              \n                this._addNodeCommand(node, dataSizeInByte);\n            }\n        }\n        this.uploadData();\n    }\n\n    /**强制更新数据 */\n    uploadData() {\n        if (this._commandNums > 0)\n        {\n            //Native upload data\n            this._conchUploadMemoryManager.uploadData(this._currentBlock._buffer, this._commandNums);\n            //clear uploadMemory\n            this._commandNums = 0;\n            this._currentBlock.clear();\n        }\n    }\n\n\n    /**\n     * clear UpdateLoad list\n     */\n    clear() {\n        this._dataNodeList.length = 0;\n    }\n}","export class ShaderValue {\n    constructor() {\n\n    }\n}\n\n\n","\n/**\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\n */\n/**\n\t * Javascript Arabic Reshaper by Louy Alakkad\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\n\t * Based on (http://git.io/vsnAd)\n\t */\nexport class ArabicReshaper {\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\n        0x0614, /* ARABIC SIGN TAKHALLUS */\n        0x0615, /* ARABIC SMALL HIGH TAH */\n        0x064B, /* ARABIC FATHATAN */\n        0x064C, /* ARABIC DAMMATAN */\n        0x064D, /* ARABIC KASRATAN */\n        0x064E, /* ARABIC FATHA */\n        0x064F, /* ARABIC DAMMA */\n        0x0650, /* ARABIC KASRA */\n        0x0651, /* ARABIC SHADDA */\n        0x0652, /* ARABIC SUKUN */\n        0x0653, /* ARABIC MADDAH ABOVE */\n        0x0654, /* ARABIC HAMZA ABOVE */\n        0x0655, /* ARABIC HAMZA BELOW */\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\n        0x0657, /* ARABIC INVERTED DAMMA */\n        0x0658, /* ARABIC MARK NOON GHUNNA */\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\n        0x06E3, /* ARABIC SMALL LOW SEEN */\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\n        0x06E7, /* ARABIC SMALL HIGH YEH */\n        0x06E8, /* ARABIC SMALL HIGH NOON */\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\n        0x06ED];\n\n\n    //TODO:coverage\n    characterMapContains(c: number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\n            if (ArabicReshaper.charsMap[i][0] === c) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //TODO:coverage\n    getCharRep(c: number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\n            if (ArabicReshaper.charsMap[i][0] === c) {\n                return ArabicReshaper.charsMap[i];\n            }\n        }\n        return false;\n    }\n\n    //TODO:coverage\n    getCombCharRep(c1:number, c2:number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\n                return ArabicReshaper.combCharsMap[i];\n            }\n        }\n\n        // We should never reach here...\n        // istanbul ignore next\n        return false;\n    }\n\n    //TODO:coverage\n    isTransparent(c:number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\n            if (ArabicReshaper.transChars[i] === c) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    //TODO:coverage\n    getOriginalCharsFromCode(code:number): string {\n        var j: number;\n\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\n            }\n        }\n\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\n            }\n        }\n\n        return String.fromCharCode(code);\n    }\n\n    /**\n     * 转换函数。从normal转到presentB\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\n     * 例如\n     * graphics.fillText(convertArabic('سلام'),....)\n     * \n    */\n    //TODO:coverage\n    convertArabic(normal:any): string {\n        var crep: any,\n            combcrep: any,\n            shaped: string = '';\n\n        for (var i: number = 0; i < normal.length; ++i) {\n            var current: number = normal.charCodeAt(i);\n            if (this.characterMapContains(current)) {\n                var prev: any = null,\n                    next: any = null,\n                    prevID: number = i - 1,\n                    nextID: number = i + 1;\n\n\t\t\t\t/*\n\t\t\t\t  Transparent characters have no effect in the shaping process.\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\n\t\t\t\t  current character.\n\t\t\t\t  */\n                for (; prevID >= 0; --prevID) {\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\n                        break;\n                    }\n                }\n\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\n                crep = prev ? this.getCharRep(prev) : false;\n                if (!crep || crep[2] == null && crep[3] == null) {\n                    prev = null; // prev character doesn’t connect with its successor\n                }\n\n\t\t\t\t/*\n\t\t\t\t  Transparent characters have no effect in the shaping process.\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\n\t\t\t\t  current character.\n\t\t\t\t  */\n                for (; nextID < normal.length; ++nextID) {\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\n                        break;\n                    }\n                }\n\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\n                crep = next ? this.getCharRep(next) : false;\n                if (!crep || crep[3] == null && crep[4] == null) {\n                    next = null; // next character doesn’t connect with its predecessor\n                }\n\n                /* Combinations */\n                if (current === 0x0644 && next != null &&\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\n                    combcrep = this.getCombCharRep(current, next);\n                    if (prev != null) {\n                        shaped += String.fromCharCode(combcrep[4]);\n                    } else {\n                        shaped += String.fromCharCode(combcrep[1]);\n                    }\n\n                    ++i;\n                    continue;\n                }\n\n                crep = this.getCharRep(current);\n\n                /* Medial */\n                if (prev != null && next != null && crep[3] != null) {\n                    shaped += String.fromCharCode(crep[3]);\n                    continue;\n                } else /* Final */\n                    if (prev != null && crep[4] != null) {\n                        shaped += String.fromCharCode(crep[4]);\n                        continue;\n                    } else /* Initial */\n                        if (next != null && crep[2] != null) {\n                            shaped += String.fromCharCode(crep[2]);\n                            continue;\n                        } else /* Isolated */ {\n                            shaped += String.fromCharCode(crep[1]);\n                        }\n            } else {\n                shaped += String.fromCharCode(current);\n            }\n        }\n\n        return shaped;\n    }/*;*/\n\n    // convert from Arabic Presentation Forms B\n    //TODO:coverage\n    convertArabicBack(apfb:any): string {\n        var toReturn: string = '',\n            selectedChar: number;\n\n        var i: number;\n\n        for (i = 0; i < apfb.length; ++i) {\n            selectedChar = apfb.charCodeAt(i);\n\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\n        }\n        return toReturn;\n    }\n}\n\n\n","export class MatirxArray {\n\n    /**\n     * 4*4矩阵数组相乘。\n     * o=a*b;\n     * @param\ta 4*4矩阵数组。\n     * @param\tb 4*4矩阵数组。\n     * @param\to 4*4矩阵数组。\n     */\n    //TODO:coverage\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\n        if (!a) {\n            MatirxArray.copyArray(b, o);\n            return;\n        }\n\n        if (!b) {\n            MatirxArray.copyArray(a, o);\n            return;\n        }\n\n        var ai0: number, ai1: number, ai2: number, ai3: number;\n        for (var i: number = 0; i < 4; i++) {\n            ai0 = a[i];\n            ai1 = a[i + 4];\n            ai2 = a[i + 8];\n            ai3 = a[i + 12];\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\n        }\n    }\n\n    //TODO:coverage\n    static copyArray(f: any[], t: any[]): void {\n        if (!f) return;\n        if (!t) return;\n        for (var i: number = 0; i < f.length; i++) {\n            t[i] = f[i];\n        }\n    }\n}\n\n"],"names":["HDREncodeFormat","TextureFormat","FilterMode","RenderCapable","TextureDimension","RenderTargetFormat","RenderClearFlag","BlendFactor","BlendType","RenderStateType","RenderStatisticsInfo","RenderParams","BufferTargetType","BufferUsage","IndexFormat","BlendEquationSeparate","CullMode","MeshTopology","WrapMode","_tempPoints","WebGLMode","WebGLExtension","TextureCompareMode","DrawType","CompareFunction","StencilOperation","LayaEvent","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","TextResourceFormat","systemTimer","timer","physicsTimer","loader","stage","render","AttributeType","ShaderDataType","UniformBufferParamsType","RenderDrawMode","RenderIndexMode","TextureDecodeFormat","MemoryDataType"],"mappings":"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AAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC7D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GA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AAQ,CAAC;YAEtC,QAAQ,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,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AAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAClD,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAClD,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAClD,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAClD,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAClD,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAClD,QAAA,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,QAAA,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,QAAA,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,QAAA,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,QAAA,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,G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,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACxC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM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"}