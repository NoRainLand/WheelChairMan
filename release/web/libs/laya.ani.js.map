{"version":3,"file":"laya.ani.js","sources":["../../src/layaAir/laya/ani/AniLibPack.ts","../../src/layaAir/laya/ani/AnimationContent.ts","../../src/layaAir/laya/ani/AnimationNodeContent.ts","../../src/layaAir/laya/ani/KeyFramesContent.ts","../../src/layaAir/laya/ani/AnimationParser01.ts","../../src/layaAir/laya/ani/AnimationParser02.ts","../../src/layaAir/laya/ani/AnimationState.ts","../../src/layaAir/laya/ani/AnimationPlayer.ts","../../src/layaAir/laya/ani/math/BezierLerp.ts","../../src/layaAir/laya/ani/AnimationTemplet.ts","../../src/layaAir/laya/ani/GraphicsAni.ts","../../src/layaAir/laya/ani/bone/IkConstraint.ts","../../src/layaAir/laya/ani/bone/PathConstraint.ts","../../src/layaAir/laya/ani/bone/TfConstraint.ts","../../src/layaAir/laya/ani/bone/Skeleton.ts","../../src/layaAir/laya/ani/bone/Transform.ts","../../src/layaAir/laya/ani/bone/Bone.ts","../../src/layaAir/laya/ani/bone/TfConstraintData.ts","../../src/layaAir/laya/ani/bone/PathConstraintData.ts","../../src/layaAir/laya/ani/bone/DeformAniData.ts","../../src/layaAir/laya/ani/bone/DeformSlotData.ts","../../src/layaAir/laya/ani/bone/DeformSlotDisplayData.ts","../../src/layaAir/laya/ani/bone/DrawOrderData.ts","../../src/layaAir/laya/ani/bone/EventData.ts","../../src/layaAir/laya/ani/bone/UVTools.ts","../../src/layaAir/laya/ani/bone/canvasmesh/MeshData.ts","../../src/layaAir/laya/ani/bone/canvasmesh/SkinMeshForGraphic.ts","../../src/layaAir/laya/ani/bone/BoneSlot.ts","../../src/layaAir/laya/ani/bone/SkinData.ts","../../src/layaAir/laya/ani/bone/SkinSlotDisplayData.ts","../../src/layaAir/laya/ani/bone/SlotData.ts","../../src/layaAir/laya/ani/bone/IkConstraintData.ts","../../src/layaAir/laya/ani/bone/Templet.ts","../../src/layaAir/laya/ani/TempletLoader.ts","../../src/layaAir/laya/ani/ModuleDef.ts","../../src/layaAir/laya/ani/swf/MovieClip.ts"],"sourcesContent":["import { Skeleton } from \"./bone/Skeleton\";\r\nimport { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { Templet } from \"./bone/Templet\";\r\n/**\r\n * @internal\r\n */\r\nexport class IAniLib {\r\n    static Skeleton: typeof Skeleton = null;\r\n    static AnimationTemplet: typeof AnimationTemplet = null;\r\n    static Templet: typeof Templet = null;\r\n}\r\n","import { AnimationNodeContent } from \"./AnimationNodeContent\";\r\n/**\r\n * @internal\r\n * @author ...\r\n */\r\nexport class AnimationContent {\r\n\tnodes: AnimationNodeContent[];\r\n\tname: string;\r\n\tplayTime: number;\r\n\tbone3DMap: any;\r\n\ttotalKeyframeDatasLength: number;\r\n}\r\n\r\n","import { KeyFramesContent } from \"./KeyFramesContent\";\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationNodeContent {\r\n\tname: string;\r\n\tparentIndex: number;\r\n\tparent: AnimationNodeContent;\r\n\tkeyframeWidth: number;\r\n\tlerpType: number;\r\n\tinterpolationMethod: any[];\r\n\tchilds: any[];\r\n\tkeyFrame: KeyFramesContent[];// = new Vector.<KeyFramesContent>;\r\n\tplayTime: number;\r\n\textenData: ArrayBuffer;\r\n\tdataOffset: number;\r\n}\r\n\r\n","/**\r\n * 关键帧\r\n */\r\nexport class KeyFramesContent {\r\n\t//TODO 这个对内存影响较大，建议减少一下\r\n\t/**开始时间 */\r\n\tstartTime: number;\r\n\t/**持续时间 */\r\n\tduration: number;\r\n\t/**私有插值方式 */\r\n\tinterpolationData: any[];//私有插值方式 [type0(插值类型),Data0(插值数据,可为空)，type1(插值类型),Data1(插值数据,可为空)] 注意：254全线性插值，255全不插值\r\n\t/**数据 */\r\n\tdata: Float32Array;//= new Float32Array();\t数据\r\n\t/**数据变化量 */\r\n\tdData: Float32Array;//= new Float32Array();\t数据变化量\r\n\t/**下一次的数据 */\r\n\tnextData: Float32Array;//= new Float32Array();\r\n\r\n}\r\n\r\n\r\n","import { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { AnimationContent } from \"./AnimationContent\";\r\nimport { AnimationNodeContent } from \"./AnimationNodeContent\";\r\nimport { KeyFramesContent } from \"./KeyFramesContent\";\r\nimport { IAniLib } from \"./AniLibPack\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationParser01 {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tstatic parse(templet: AnimationTemplet, reader: Byte): void {\r\n\t\tvar data: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar i: number, j: number, k: number, n: number, l: number, m: number, o: number;\r\n\t\t//if (head != KeyframesAniTemplet.LAYA_ANIMATION_VISION)\r\n\t\t//{\r\n\t\t//trace(\"[Error] Version \" + _aniVersion + \" The engine is inconsistent, update to the version \" + KeyframesAniTemplet.LAYA_ANIMATION_VISION + \" please.\");\r\n\t\t//return;\r\n\t\t//}\r\n\t\tvar aniClassName: string = reader.readUTFString();//字符串(动画播放器类名，缺省为ANI)\r\n\t\ttemplet._aniClassName = aniClassName;\r\n\t\tvar strList: any[] = reader.readUTFString().split(\"\\n\");//字符串(\\n分割 UTF8 )\r\n\t\tvar aniCount: number = reader.getUint8();//动画块数:Uint8\r\n\r\n\t\tvar publicDataPos: number = reader.getUint32();//公用数据POS\t\r\n\t\tvar publicExtDataPos: number = reader.getUint32();//公用扩展数据POS\r\n\r\n\t\tvar publicData: ArrayBuffer;//获取公用数据\r\n\t\tif (publicDataPos > 0)\r\n\t\t\tpublicData = data.slice(publicDataPos, publicExtDataPos);\r\n\t\tvar publicRead: Byte = new Byte(publicData);\r\n\r\n\t\tif (publicExtDataPos > 0)//获取公用扩展数据\r\n\t\t\ttemplet._publicExtData = data.slice(publicExtDataPos, data.byteLength);\r\n\r\n\t\ttemplet._useParent = !!reader.getUint8();\r\n\t\ttemplet._anis.length = aniCount;\r\n\r\n\t\tfor (i = 0; i < aniCount; i++) {\r\n\t\t\tvar ani: AnimationContent = templet._anis[i] = new AnimationContent();\r\n\t\t\t//[IF-SCRIPT] {};//不要删除\r\n\t\t\tani.nodes = [];\r\n\t\t\tvar name: string = ani.name = strList[reader.getUint16()];//获得骨骼名字\r\n\r\n\t\t\ttemplet._aniMap[name] = i;//按名字可以取得动画索引\r\n\t\t\tani.bone3DMap = {};\r\n\t\t\tani.playTime = reader.getFloat32();//本骨骼播放时间\r\n\t\t\tvar boneCount: number = ani.nodes.length = reader.getUint8();//得到本动画骨骼数目\r\n\r\n\t\t\tani.totalKeyframeDatasLength = 0;\r\n\r\n\t\t\tfor (j = 0; j < boneCount; j++) {\r\n\t\t\t\tvar node: AnimationNodeContent = ani.nodes[j] = new AnimationNodeContent();\r\n\t\t\t\t//[IF-SCRIPT] {};//不要删除\r\n\t\t\t\tnode.childs = [];\r\n\r\n\t\t\t\tvar nameIndex: number = reader.getInt16();\r\n\t\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\t\tnode.name = strList[nameIndex];//骨骼名字\r\n\t\t\t\t\tani.bone3DMap[node.name] = j;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.keyFrame = [];\r\n\t\t\t\tnode.parentIndex = reader.getInt16();//父对象编号，相对本动画(INT16,-1表示没有)\r\n\t\t\t\tnode.parentIndex == -1 ? node.parent = null : node.parent = ani.nodes[node.parentIndex]\r\n\r\n\t\t\t\tnode.lerpType = reader.getUint8();//该节点插值类型:0为不插值，1为逐节点插值，2为私有插值\r\n\r\n\t\t\t\tvar keyframeParamsOffset: number = reader.getUint32();//相对于数据扩展区的偏移地址\r\n\t\t\t\tpublicRead.pos = keyframeParamsOffset;//切换到数据区偏移地址\r\n\r\n\t\t\t\tvar keyframeDataCount: number = node.keyframeWidth = publicRead.getUint16();//keyframe数据宽度:Uint8\t\t\r\n\t\t\t\tani.totalKeyframeDatasLength += keyframeDataCount;\r\n\t\t\t\t//每个数据的插值方式:Uint8*keyframe数据宽度\r\n\t\t\t\tif (node.lerpType === 0 || node.lerpType === 1)//是否逐节点插值\r\n\t\t\t\t{\r\n\t\t\t\t\tnode.interpolationMethod = [];\r\n\t\t\t\t\tnode.interpolationMethod.length = keyframeDataCount;\r\n\t\t\t\t\tfor (k = 0; k < keyframeDataCount; k++)\r\n\t\t\t\t\t\tnode.interpolationMethod[k] = IAniLib.AnimationTemplet.interpolation[publicRead.getUint8()];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (node.parent != null)\r\n\t\t\t\t\tnode.parent.childs.push(node);\r\n\r\n\t\t\t\tvar privateDataLen: number = reader.getUint16();//\"UINT16\", [1],//私有数据长度\r\n\t\t\t\tif (privateDataLen > 0) {\r\n\t\t\t\t\t//\"BYTE\", [1],//私有数据\r\n\t\t\t\t\tnode.extenData = data.slice(reader.pos, reader.pos + privateDataLen);\r\n\t\t\t\t\treader.pos += privateDataLen;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keyframeCount: number = reader.getUint16();\r\n\t\t\t\tnode.keyFrame.length = keyframeCount;\r\n\t\t\t\tvar startTime: number = 0;\r\n\t\t\t\tvar keyFrame: KeyFramesContent;\r\n\t\t\t\tfor (k = 0, n = keyframeCount; k < n; k++) {\r\n\t\t\t\t\tkeyFrame = node.keyFrame[k] = new KeyFramesContent();\r\n\t\t\t\t\t//[IF-SCRIPT] {};//不要删除\r\n\t\t\t\t\tkeyFrame.duration = reader.getFloat32();\r\n\t\t\t\t\tkeyFrame.startTime = startTime;\r\n\r\n\t\t\t\t\tif (node.lerpType === 2)//是否逐帧插值\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkeyFrame.interpolationData = [];\r\n\t\t\t\t\t\tvar interDataLength: number = reader.getUint8();//插值数据长度\r\n\t\t\t\t\t\tvar lerpType: number;\r\n\t\t\t\t\t\tlerpType = reader.getFloat32();\r\n\t\t\t\t\t\tswitch (lerpType) {\r\n\t\t\t\t\t\t\tcase 254: //全线性插值\r\n\t\t\t\t\t\t\t\tkeyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t\t\tfor (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t\t\t\tkeyFrame.interpolationData[o] = 0;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 255: //全不插值\r\n\t\t\t\t\t\t\t\tkeyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t\t\tfor (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t\t\t\tkeyFrame.interpolationData[o] = 5;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tkeyFrame.interpolationData.push(lerpType);\r\n\t\t\t\t\t\t\t\tfor (m = 1; m < interDataLength; m++) {\r\n\t\t\t\t\t\t\t\t\tkeyFrame.interpolationData.push(reader.getFloat32());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//for (m = 0; m < interDataLength; m++) {\r\n\t\t\t\t\t\t//var lerpData:int = read.getFloat32();//插值数据\r\n\t\t\t\t\t\t//switch (lerpData) {\r\n\t\t\t\t\t\t//case 254: //全线性插值\r\n\t\t\t\t\t\t//keyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t//for (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t//keyFrame.interpolationData[o] = 0;\r\n\t\t\t\t\t\t//break;\r\n\t\t\t\t\t\t//case 255: //全不插值\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t//keyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t//for (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t//keyFrame.interpolationData[o] = 5;\r\n\t\t\t\t\t\t//break;\r\n\t\t\t\t\t\t//default: \r\n\t\t\t\t\t\t//keyFrame.interpolationData.push(lerpData);\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkeyFrame.data = new Float32Array(keyframeDataCount);\r\n\t\t\t\t\tkeyFrame.dData = new Float32Array(keyframeDataCount);\r\n\t\t\t\t\tkeyFrame.nextData = new Float32Array(keyframeDataCount);\r\n\t\t\t\t\tfor (l = 0; l < keyframeDataCount; l++) {\r\n\t\t\t\t\t\tkeyFrame.data[l] = reader.getFloat32();\r\n\t\t\t\t\t\tif (keyFrame.data[l] > -0.00000001 && keyFrame.data[l] < 0.00000001) keyFrame.data[l] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstartTime += keyFrame.duration;\r\n\t\t\t\t}\r\n\t\t\t\tkeyFrame.startTime = ani.playTime;//因工具BUG，矫正最后一帧startTime\r\n\t\t\t\tnode.playTime = ani.playTime;//节点总时间可能比总时长大，次处修正\r\n\t\t\t\ttemplet._calculateKeyFrame(node, keyframeCount, keyframeDataCount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { AnimationContent } from \"./AnimationContent\";\r\nimport { AnimationNodeContent } from \"./AnimationNodeContent\";\r\nimport { KeyFramesContent } from \"./KeyFramesContent\";\r\nimport { IAniLib } from \"./AniLibPack\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationParser02 {\r\n\t/**@internal */\r\n\tprivate static _templet: AnimationTemplet;\r\n\t/**@internal */\r\n\tprivate static _reader: Byte;\r\n\t/**@internal */\r\n\tprivate static _strings: any[] = [];\r\n\t/**@internal */\r\n\tprivate static _BLOCK: any = { count: 0 };\r\n\t/**@internal */\r\n\tprivate static _DATA: any = { offset: 0, size: 0 };\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate static READ_DATA(): void {\r\n\t\tAnimationParser02._DATA.offset = AnimationParser02._reader.getUint32();\r\n\t\tAnimationParser02._DATA.size = AnimationParser02._reader.getUint32();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static READ_BLOCK(): void {\r\n\t\tvar count: number = AnimationParser02._BLOCK.count = AnimationParser02._reader.getUint16();\r\n\t\tvar blockStarts: any[] = AnimationParser02._BLOCK.blockStarts = [];\r\n\t\tvar blockLengths: any[] = AnimationParser02._BLOCK.blockLengths = [];\r\n\t\tfor (var i: number = 0; i < count; i++) {\r\n\t\t\tblockStarts.push(AnimationParser02._reader.getUint32());\r\n\t\t\tblockLengths.push(AnimationParser02._reader.getUint32());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static READ_STRINGS(): void {\r\n\t\tvar offset: number = AnimationParser02._reader.getUint32();\r\n\t\tvar count: number = AnimationParser02._reader.getUint16();\r\n\t\tvar prePos: number = AnimationParser02._reader.pos;\r\n\t\tAnimationParser02._reader.pos = offset + AnimationParser02._DATA.offset;\r\n\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tAnimationParser02._strings[i] = AnimationParser02._reader.readUTFString();\r\n\r\n\t\tAnimationParser02._reader.pos = prePos;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tstatic parse(templet: AnimationTemplet, reader: Byte): void {\r\n\t\tAnimationParser02._templet = templet;\r\n\t\tAnimationParser02._reader = reader;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tAnimationParser02.READ_DATA();\r\n\t\tAnimationParser02.READ_BLOCK();\r\n\t\tAnimationParser02.READ_STRINGS();\r\n\t\tfor (var i: number = 0, n: number = AnimationParser02._BLOCK.count; i < n; i++) {\r\n\t\t\tvar index: number = reader.getUint16();\r\n\t\t\tvar blockName: string = AnimationParser02._strings[index];\r\n\t\t\tvar fn: Function = (AnimationParser02 as any)[\"READ_\" + blockName];\r\n\t\t\tif (fn == null)\r\n\t\t\t\tthrow new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n\t\t\telse\r\n\t\t\t\tfn.call(null);\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tstatic READ_ANIMATIONS(): void {\r\n\t\tvar reader: Byte = AnimationParser02._reader;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar i: number, j: number, k: number, n: number, l: number;\r\n\t\tvar keyframeWidth: number = reader.getUint16();\r\n\t\tvar interpolationMethod: any[] = [];\r\n\t\tinterpolationMethod.length = keyframeWidth;\r\n\t\tfor (i = 0; i < keyframeWidth; i++)\r\n\t\t\tinterpolationMethod[i] = IAniLib.AnimationTemplet.interpolation[reader.getByte()];\r\n\r\n\t\tvar aniCount: number = reader.getUint8();\r\n\t\tAnimationParser02._templet._anis.length = aniCount;\r\n\r\n\t\tfor (i = 0; i < aniCount; i++) {\r\n\t\t\tvar ani: AnimationContent = AnimationParser02._templet._anis[i] = new AnimationContent();\r\n\t\t\tani.nodes = [];\r\n\t\t\tvar aniName: string = ani.name = AnimationParser02._strings[reader.getUint16()];\r\n\t\t\tAnimationParser02._templet._aniMap[aniName] = i;//按名字可以取得动画索引\r\n\t\t\tani.bone3DMap = {};\r\n\t\t\tani.playTime = reader.getFloat32();\r\n\t\t\tvar boneCount: number = ani.nodes.length = reader.getInt16();\r\n\t\t\tani.totalKeyframeDatasLength = 0;\r\n\t\t\tfor (j = 0; j < boneCount; j++) {\r\n\t\t\t\tvar node: AnimationNodeContent = ani.nodes[j] = new AnimationNodeContent();\r\n\t\t\t\tnode.keyframeWidth = keyframeWidth;//TODO:存在骨骼里是否合并，需要优化到动画中更合理。\r\n\t\t\t\tnode.childs = [];\r\n\r\n\t\t\t\tvar nameIndex: number = reader.getUint16();\r\n\t\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\t\tnode.name = AnimationParser02._strings[nameIndex];//骨骼名字\r\n\t\t\t\t\tani.bone3DMap[node.name] = j;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.keyFrame = [];\r\n\t\t\t\tnode.parentIndex = reader.getInt16();//父对象编号，相对本动画(INT16,-1表示没有)\r\n\t\t\t\tnode.parentIndex == -1 ? node.parent = null : node.parent = ani.nodes[node.parentIndex]\r\n\r\n\t\t\t\tani.totalKeyframeDatasLength += keyframeWidth;\r\n\r\n\t\t\t\tnode.interpolationMethod = interpolationMethod;//TODO:\r\n\r\n\t\t\t\tif (node.parent != null)\r\n\t\t\t\t\tnode.parent.childs.push(node);\r\n\r\n\t\t\t\tvar keyframeCount: number = reader.getUint16();\r\n\t\t\t\tnode.keyFrame.length = keyframeCount;\r\n\t\t\t\tvar keyFrame: KeyFramesContent = null, lastKeyFrame: KeyFramesContent = null;\r\n\t\t\t\tfor (k = 0, n = keyframeCount; k < n; k++) {\r\n\t\t\t\t\tkeyFrame = node.keyFrame[k] = new KeyFramesContent();\r\n\t\t\t\t\tkeyFrame.startTime = reader.getFloat32();\r\n\r\n\t\t\t\t\t(lastKeyFrame) && (lastKeyFrame.duration = keyFrame.startTime - lastKeyFrame.startTime);\r\n\r\n\t\t\t\t\tkeyFrame.dData = new Float32Array(keyframeWidth);\r\n\t\t\t\t\tkeyFrame.nextData = new Float32Array(keyframeWidth);\r\n\r\n\t\t\t\t\tvar offset: number = AnimationParser02._DATA.offset;\r\n\r\n\t\t\t\t\tvar keyframeDataOffset: number = reader.getUint32();\r\n\t\t\t\t\tvar keyframeDataLength: number = keyframeWidth * 4;\r\n\t\t\t\t\tvar keyframeArrayBuffer: ArrayBuffer = arrayBuffer.slice(offset + keyframeDataOffset, offset + keyframeDataOffset + keyframeDataLength);\r\n\t\t\t\t\tkeyFrame.data = new Float32Array(keyframeArrayBuffer);\r\n\t\t\t\t\tlastKeyFrame = keyFrame;\r\n\t\t\t\t}\r\n\t\t\t\tkeyFrame.duration = 0;\r\n\r\n\t\t\t\tnode.playTime = ani.playTime;//节点总时间可能比总时长大，次处修正\r\n\t\t\t\tAnimationParser02._templet._calculateKeyFrame(node, keyframeCount, keyframeWidth);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class AnimationState {\r\n\tstatic stopped: number = 0;\r\n\tstatic paused: number = 1;\r\n\tstatic playing: number = 2;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n}\r\n\r\n","import { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { AnimationState } from \"./AnimationState\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\n\r\n/**开始播放时调度。\r\n * @eventType Event.PLAYED\r\n * */\r\n/*[Event(name = \"played\", type = \"laya.events.Event\")]*/\r\n/**暂停时调度。\r\n * @eventType Event.PAUSED\r\n * */\r\n/*[Event(name = \"paused\", type = \"laya.events.Event\")]*/\r\n/**完成一次循环时调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**停止时调度。\r\n * @eventType Event.STOPPED\r\n * */\r\n/*[Event(name = \"stopped\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>AnimationPlayer</code> 类用于动画播放器。\r\n */\r\nexport class AnimationPlayer extends EventDispatcher {\r\n\t/**@internal */\r\n\tprivate _destroyed: boolean;\r\n\t/** @internal 数据模板*/\r\n\tprivate _templet: AnimationTemplet;\r\n\t/** @internal 当前精确时间，不包括重播时间*/\r\n\tprivate _currentTime: number;\r\n\t/** @internal 当前帧时间，不包括重播时间*/\r\n\tprivate _currentFrameTime: number;\t// 这个是根据当前帧数反向计算的时间。\r\n\t/** @internal 动画播放的起始时间位置*/\r\n\tprivate _playStart: number;\r\n\t/** @internal 动画播放的结束时间位置*/\r\n\tprivate _playEnd: number;\r\n\t/** @internal 动画播放一次的总时间*/\r\n\tprivate _playDuration: number;\r\n\t/** @internal 动画播放总时间*/\r\n\tprivate _overallDuration: number;\r\n\t/** @internal 是否在一次动画结束时停止。 设置这个标志后就不会再发送complete事件了*/\r\n\tprivate _stopWhenCircleFinish: boolean;\r\n\t/**@internal 已播放时间，包括重播时间*/\r\n\t_elapsedPlaybackTime: number;\r\n\t/** @internal 播放时帧数*/\r\n\tprivate _startUpdateLoopCount: number;\r\n\t/** @internal 当前动画索引*/\r\n\tprivate _currentAnimationClipIndex: number;\r\n\t/** @internal 当前帧数*/\r\n\tprivate _currentKeyframeIndex: number;\r\n\t/** @internal 是否暂停*/\r\n\tprivate _paused: boolean;\r\n\t/** @internal 默认帧率,必须大于0*/\r\n\tprivate _cacheFrameRate: number;\r\n\t/** @internal 帧率间隔时间*/\r\n\tprivate _cacheFrameRateInterval: number;\r\n\t/** @internal 缓存播放速率*/\r\n\tprivate _cachePlayRate: number;\r\n\r\n\t/**是否缓存*/\r\n\tisCache: boolean = true;\r\n\t/** 播放速率*/\r\n\tplaybackRate: number = 1.0;\r\n\t/** 停止时是否归零*/\r\n\treturnToZeroStopped: boolean;\r\n\r\n\t/**\r\n\t * 获取动画数据模板\r\n\t * @param\tvalue 动画数据模板\r\n\t */\r\n\tget templet(): AnimationTemplet {\r\n\t\treturn this._templet;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置动画数据模板,注意：修改此值会有计算开销。\r\n\t * @param\tvalue 动画数据模板\r\n\t */\r\n\tset templet(value: AnimationTemplet) {\r\n\t\tif (!(this.state === AnimationState.stopped))\r\n\t\t\tthis.stop(true);\r\n\r\n\t\tif (this._templet !== value) {\r\n\t\t\tthis._templet = value;\r\n\t\t\t//if (value.loaded)\r\n\t\t\tthis._computeFullKeyframeIndices();\r\n\t\t\t//else\r\n\t\t\t//value.once(Event.LOADED, this, _onTempletLoadedComputeFullKeyframeIndices, [_cachePlayRate, _cacheFrameRate]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 动画播放的起始时间位置。\r\n\t * @return\t 起始时间位置。\r\n\t */\r\n\tget playStart(): number {\r\n\t\treturn this._playStart;\r\n\t}\r\n\r\n\t/**\r\n\t * 动画播放的结束时间位置。\r\n\t * @return\t 结束时间位置。\r\n\t */\r\n\tget playEnd(): number {\r\n\t\treturn this._playEnd;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取动画播放一次的总时间\r\n\t * @return\t 动画播放一次的总时间\r\n\t */\r\n\tget playDuration(): number {\r\n\t\treturn this._playDuration;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取动画播放的总总时间\r\n\t * @return\t 动画播放的总时间\r\n\t */\r\n\tget overallDuration(): number {\r\n\t\treturn this._overallDuration;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前动画索引\r\n\t * @return\tvalue 当前动画索引\r\n\t */\r\n\tget currentAnimationClipIndex(): number {\r\n\t\treturn this._currentAnimationClipIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前帧数\r\n\t * @return\t 当前帧数\r\n\t */\r\n\tget currentKeyframeIndex(): number {\r\n\t\treturn this._currentKeyframeIndex;\r\n\t}\r\n\r\n\t/**\r\n\t *  获取当前精确时间，不包括重播时间\r\n\t * @return\tvalue 当前时间\r\n\t */\r\n\tget currentPlayTime(): number {\r\n\t\treturn this._currentTime + this._playStart;\r\n\t}\r\n\r\n\t/**\r\n\t *  获取当前帧时间，不包括重播时间\r\n\t * @return\tvalue 当前时间\r\n\t */\r\n\tget currentFrameTime(): number {\r\n\t\treturn this._currentFrameTime;\r\n\t}\r\n\r\n\t/**\r\n\t *  获取缓存播放速率。*\r\n\t * @return\t 缓存播放速率。\r\n\t */\r\n\tget cachePlayRate(): number {\r\n\t\treturn this._cachePlayRate;\r\n\t}\r\n\r\n\t/**\r\n\t *  设置缓存播放速率,默认值为1.0,注意：修改此值会有计算开销。*\r\n\t * @return\tvalue 缓存播放速率。\r\n\t */\r\n\tset cachePlayRate(value: number) {\r\n\t\tif (this._cachePlayRate !== value) {\r\n\t\t\tthis._cachePlayRate = value;\r\n\t\t\tif (this._templet)\r\n\t\t\t\t//if (_templet.loaded)\r\n\t\t\t\tthis._computeFullKeyframeIndices();\r\n\t\t\t//else\r\n\t\t\t//_templet.once(Event.LOADED, this, _onTempletLoadedComputeFullKeyframeIndices, [value, _cacheFrameRate]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *  获取默认帧率*\r\n\t * @return\tvalue 默认帧率\r\n\t */\r\n\tget cacheFrameRate(): number {\r\n\t\treturn this._cacheFrameRate;\r\n\t}\r\n\r\n\t/**\r\n\t *  设置默认帧率,每秒60帧,注意：修改此值会有计算开销。*\r\n\t * @return\tvalue 缓存帧率\r\n\t */\r\n\tset cacheFrameRate(value: number) {\r\n\t\tif (this._cacheFrameRate !== value) {\r\n\t\t\tthis._cacheFrameRate = value;\r\n\t\t\tthis._cacheFrameRateInterval = 1000.0 / this._cacheFrameRate;\r\n\t\t\tif (this._templet)\r\n\t\t\t\t//if (_templet.loaded)\r\n\t\t\t\tthis._computeFullKeyframeIndices();\r\n\t\t\t//else\r\n\t\t\t//_templet.once(Event.LOADED, this, _onTempletLoadedComputeFullKeyframeIndices, [_cachePlayRate, value]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 设置当前播放位置\r\n\t * @param\tvalue 当前时间\r\n\t */\r\n\tset currentTime(value: number) {\r\n\t\tif (this._currentAnimationClipIndex === -1 || !this._templet /*|| !_templet.loaded*/)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < this._playStart || value > this._playEnd)\r\n\t\t\tthrow new Error(\"AnimationPlayer:value must large than playStartTime,small than playEndTime.\");\r\n\r\n\t\tthis._startUpdateLoopCount = Stat.loopCount;\r\n\t\tvar cacheFrameInterval: number = this._cacheFrameRateInterval * this._cachePlayRate;\r\n\t\tthis._currentTime = value /*% playDuration*/;\r\n\t\tthis._currentKeyframeIndex = Math.floor(this.currentPlayTime / cacheFrameInterval);\r\n\t\tthis._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前是否暂停\r\n\t * @return\t是否暂停\r\n\t */\r\n\tget paused(): boolean {\r\n\t\treturn this._paused;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置是否暂停\r\n\t * @param\tvalue 是否暂停\r\n\t */\r\n\tset paused(value: boolean) {\r\n\t\tthis._paused = value;\r\n\t\tvalue && this.event(Event.PAUSED);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取缓存帧率间隔时间\r\n\t * @return\t缓存帧率间隔时间\r\n\t */\r\n\tget cacheFrameRateInterval(): number {\r\n\t\treturn this._cacheFrameRateInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前播放状态\r\n\t * @return\t当前播放状态\r\n\t */\r\n\tget state(): number {\r\n\t\tif (this._currentAnimationClipIndex === -1)\r\n\t\t\treturn AnimationState.stopped;\r\n\t\tif (this._paused)\r\n\t\t\treturn AnimationState.paused;\r\n\t\treturn AnimationState.playing;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取是否已销毁。\r\n\t * @return 是否已销毁。\r\n\t */\r\n\tget destroyed(): boolean {\r\n\t\treturn this._destroyed;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>AnimationPlayer</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._destroyed = false;\r\n\t\tthis._currentAnimationClipIndex = -1;\r\n\t\tthis._currentKeyframeIndex = -1;\r\n\t\tthis._currentTime = 0.0;\r\n\t\tthis._overallDuration = Number.MAX_VALUE;\r\n\t\tthis._stopWhenCircleFinish = false;\r\n\t\tthis._elapsedPlaybackTime = 0;\r\n\t\tthis._startUpdateLoopCount = -1;\r\n\t\tthis._cachePlayRate = 1.0;\r\n\t\tthis.cacheFrameRate = 60;\r\n\t\tthis.returnToZeroStopped = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_onTempletLoadedComputeFullKeyframeIndices(cachePlayRate: number, cacheFrameRate: number, templet: AnimationTemplet): void {\r\n\t\tif (this._templet === templet && this._cachePlayRate === cachePlayRate && this._cacheFrameRate === cacheFrameRate)\r\n\t\t\tthis._computeFullKeyframeIndices();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _computeFullKeyframeIndices(): void {\r\n\t\treturn;// 先改成实时计算了。否则占用内存太多\r\n\t\tvar templet: AnimationTemplet = this._templet;\r\n\t\tif (templet._fullFrames)\r\n\t\t\treturn;\r\n\r\n\r\n\r\n\t\tvar anifullFrames: any[] = this._templet._fullFrames = [];\r\n\r\n\t\tvar cacheFrameInterval: number = this._cacheFrameRateInterval * this._cachePlayRate;\r\n\r\n\t\tfor (var i: number = 0, iNum: number = templet.getAnimationCount(); i < iNum; i++) {\r\n\t\t\tvar aniFullFrame: any[] = [];\r\n\t\t\tif (!templet.getAnimation(i).nodes) {\r\n\t\t\t\tanifullFrames.push(aniFullFrame);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (var j: number = 0, jNum: number = templet.getAnimation(i).nodes.length; j < jNum; j++) {\r\n\t\t\t\tvar node: any = templet.getAnimation(i).nodes[j];\r\n\t\t\t\tvar frameCount: number = Math.round(node.playTime / cacheFrameInterval);\r\n\t\t\t\tvar nodeFullFrames: Uint16Array = new Uint16Array(frameCount + 1);//本骨骼对应的全帧关键帧编号\r\n\t\t\t\t// 先把关键帧所在的位置填上\r\n\t\t\t\tvar stidx: number = -1;// 第一帧的位置，应该是0\r\n\t\t\t\tvar nodeframes: any[] = node.keyFrame;\r\n\t\t\t\tfor (var n: number = 0, nNum: number = nodeframes.length; n < nNum; n++) {\r\n\t\t\t\t\tvar keyFrame: any = nodeframes[n];\r\n\t\t\t\t\tvar pos: number = Math.round(keyFrame.startTime / cacheFrameInterval);\r\n\t\t\t\t\tif (stidx < 0 && pos > 0) {\r\n\t\t\t\t\t\tstidx = pos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pos <= frameCount) {// 实际大小是frameCount+1\r\n\t\t\t\t\t\tnodeFullFrames[pos] = n;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 再把空隙填满\r\n\t\t\t\tvar cf: number = 0;\r\n\t\t\t\tfor (n = stidx; n < frameCount; n++) {\t// 实际大小是frameCount+1 \r\n\t\t\t\t\tif (nodeFullFrames[n] == 0) {\r\n\t\t\t\t\t\tnodeFullFrames[n] = cf;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcf = nodeFullFrames[n]; \t// 新的开始\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\taniFullFrame.push(nodeFullFrames);\r\n\t\t\t}\r\n\t\t\tanifullFrames.push(aniFullFrame);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _onAnimationTempletLoaded(): void {\r\n\t\t(this.destroyed) || (this._calculatePlayDuration());\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _calculatePlayDuration(): void {\r\n\t\tif (this.state !== AnimationState.stopped) {//防止动画已停止，异步回调导致BUG\r\n\t\t\tvar oriDuration: number = this._templet.getAniDuration(this._currentAnimationClipIndex);\r\n\t\t\t(this._playEnd === 0) && (this._playEnd = oriDuration);\r\n\r\n\t\t\tif (this._playEnd > oriDuration)//以毫秒为最小时间单位,取整。FillTextureSprite\r\n\t\t\t\tthis._playEnd = oriDuration;\r\n\r\n\t\t\tthis._playDuration = this._playEnd - this._playStart;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate _setPlayParams(time: number, cacheFrameInterval: number): void {\r\n\t\tthis._currentTime = time;\r\n\t\tthis._currentKeyframeIndex = Math.floor((this.currentPlayTime) / cacheFrameInterval + 0.01);\r\n\t\tthis._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * 动画停止了对应的参数。目前都是设置时间为最后\r\n\t * @private\r\n\t */\r\n\tprivate _setPlayParamsWhenStop(currentAniClipPlayDuration: number, cacheFrameInterval: number, playEnd: number = -1): void {\r\n\t\tthis._currentTime = currentAniClipPlayDuration;\r\n\t\tvar endTime: number = playEnd > 0 ? playEnd : currentAniClipPlayDuration;\r\n\t\tthis._currentKeyframeIndex = Math.floor(endTime / cacheFrameInterval + 0.01);\r\n\t\tthis._currentKeyframeIndex = Math.floor(currentAniClipPlayDuration / cacheFrameInterval + 0.01);\r\n\t\tthis._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\r\n\t\tthis._currentAnimationClipIndex = -1;//动画结束\t\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_update(elapsedTime: number): void {\r\n\t\tif (this._currentAnimationClipIndex === -1 || this._paused || !this._templet /*|| !_templet.loaded*/)//动画停止或暂停，不更新\r\n\t\t\treturn;\r\n\r\n\t\tvar cacheFrameInterval: number = this._cacheFrameRateInterval * this._cachePlayRate;\r\n\t\tvar time: number = 0;\t// 时间间隔\r\n\t\t// 计算经过的时间\r\n\t\t(this._startUpdateLoopCount !== Stat.loopCount) && (time = elapsedTime * this.playbackRate, this._elapsedPlaybackTime += time);//elapsedTime为距离上一帧时间,首帧播放如果_startPlayLoopCount===Stat.loopCount，则不累加时间\r\n\r\n\t\tvar currentAniClipPlayDuration: number = this.playDuration;\r\n\t\t// 如果设置了总播放时间，并且超过总播放时间了，就发送stop事件\r\n\t\t// 如果没有设置_overallDuration，且播放时间超过的动画总时间，也发送stop事件？  也就是说单次播放不会发出complete事件？\r\n\t\t// 如果设置了loop播放，则会设置 _overallDuration \r\n\t\ttime += this._currentTime;\r\n\t\tif ((this._overallDuration !== 0 && this._elapsedPlaybackTime >= this._overallDuration) || (this._overallDuration === 0 && this._elapsedPlaybackTime >= currentAniClipPlayDuration\r\n\t\t\t|| (this._overallDuration === 0 && time >= this.playEnd))) {\r\n\t\t\tthis._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval, this.playEnd);\t// (总播放时间,缓存帧的时间间隔(33.33))\r\n\t\t\tthis.event(Event.STOPPED);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (currentAniClipPlayDuration > 0) {// 如果设置了 总动画时间，一般都设置了把，就是动画文件本身记录的时间\r\n\t\t\tif (time >= currentAniClipPlayDuration) {\t// 如果超出了总动画时间\r\n\t\t\t\tif (this._stopWhenCircleFinish) {// 如果只播放一次，就发送stop事件\r\n\t\t\t\t\tthis._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval);// (总播放时间,缓存帧的时间间隔(33.33))\r\n\t\t\t\t\tthis._stopWhenCircleFinish = false;\r\n\t\t\t\t\tthis.event(Event.STOPPED);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 如果多次播放,发送complete事件\r\n\t\t\t\t\ttime = time % currentAniClipPlayDuration;\r\n\t\t\t\t\tthis._setPlayParams(time, cacheFrameInterval);\r\n\t\t\t\t\tthis.event(Event.COMPLETE);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._setPlayParams(time, cacheFrameInterval);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._stopWhenCircleFinish) {\r\n\t\t\t\tthis._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval);\r\n\t\t\t\tthis._stopWhenCircleFinish = false;\r\n\t\t\t\tthis.event(Event.STOPPED);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;\r\n\t\t\tthis.event(Event.COMPLETE);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_destroy(): void {\r\n\t\tthis.offAll();\r\n\t\tthis._templet = null;\r\n\t\t//_fullFrames = null;\r\n\t\tthis._destroyed = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 播放动画。\r\n\t * @param\tindex 动画索引。\r\n\t * @param\tplaybackRate 播放速率。\r\n\t * @param\tduration 播放时长（0为1次,Number.MAX_VALUE为循环播放）。\r\n\t * @param\tplayStart 播放的起始时间位置。\r\n\t * @param\tplayEnd 播放的结束时间位置。（0为动画一次循环的最长结束时间位置）。\r\n\t */\r\n\tplay(index: number = 0, playbackRate: number = 1.0, overallDuration: number = /*int.MAX_VALUE*/ 2147483647, playStart: number = 0, playEnd: number = 0): void {\r\n\t\tif (!this._templet)\r\n\t\t\tthrow new Error(\"AnimationPlayer:templet must not be null,maybe you need to set url.\");\r\n\r\n\t\tif (overallDuration < 0 || playStart < 0 || playEnd < 0)\r\n\t\t\tthrow new Error(\"AnimationPlayer:overallDuration,playStart and playEnd must large than zero.\");\r\n\r\n\t\tif ((playEnd !== 0) && (playStart > playEnd))\r\n\t\t\tthrow new Error(\"AnimationPlayer:start must less than end.\");\r\n\r\n\t\tthis._currentTime = 0;\r\n\t\tthis._currentFrameTime = 0;\r\n\t\tthis._elapsedPlaybackTime = 0;\r\n\t\tthis.playbackRate = playbackRate;\r\n\t\tthis._overallDuration = overallDuration;\r\n\t\tthis._playStart = playStart;\r\n\t\tthis._playEnd = playEnd;\r\n\t\tthis._paused = false;\r\n\t\tthis._currentAnimationClipIndex = index;\r\n\t\tthis._currentKeyframeIndex = 0;\r\n\t\tthis._startUpdateLoopCount = Stat.loopCount;\r\n\t\tthis.event(Event.PLAYED);\r\n\r\n\t\t//if (_templet.loaded)\r\n\t\tthis._calculatePlayDuration();\r\n\t\t//else\r\n\t\t//_templet.once(Event.LOADED, this, _onAnimationTempletLoaded);\r\n\r\n\t\tthis._update(0);//如果分段播放,可修正帧率\r\n\t}\r\n\r\n\t/**\r\n\t * 播放动画。\r\n\t * @param\tindex 动画索引。\r\n\t * @param\tplaybackRate 播放速率。\r\n\t * @param\tduration 播放时长（0为1次,Number.MAX_VALUE为循环播放）。\r\n\t * @param\tplayStartFrame 播放的原始起始帧率位置。\r\n\t * @param\tplayEndFrame 播放的原始结束帧率位置。（0为动画一次循环的最长结束时间位置）。\r\n\t */\r\n\tplayByFrame(index: number = 0, playbackRate: number = 1.0, overallDuration: number = /*int.MAX_VALUE*/ 2147483647, playStartFrame: number = 0, playEndFrame: number = 0, fpsIn3DBuilder: number = 30): void {\r\n\t\tvar interval: number = 1000.0 / fpsIn3DBuilder;\r\n\t\tthis.play(index, playbackRate, overallDuration, playStartFrame * interval, playEndFrame * interval);\r\n\t}\r\n\r\n\t/**\r\n\t * 停止播放当前动画\r\n\t * 如果不是立即停止就等待动画播放完成后再停止\r\n\t * @param\timmediate 是否立即停止\r\n\t */\r\n\tstop(immediate: boolean = true): void {\r\n\t\tif (immediate) {\r\n\t\t\tthis._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;\r\n\t\t\tthis._currentAnimationClipIndex = -1;\r\n\t\t\tthis.event(Event.STOPPED);\r\n\t\t} else {\r\n\t\t\tthis._stopWhenCircleFinish = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { Bezier } from \"../../maths/Bezier\";\r\n\r\n/**\r\n * @internal\r\n * ...\r\n * @author ww\r\n */\r\nexport class BezierLerp {\r\n\r\n    constructor() {\r\n\r\n    }\r\n    /**@internal */\r\n    private static _bezierResultCache: any = {};\r\n    /**@internal */\r\n    private static _bezierPointsCache: any = {};\r\n\r\n    //TODO:coverage\r\n    static getBezierRate(t: number, px0: number, py0: number, px1: number, py1: number): number {\r\n        var key: number = BezierLerp._getBezierParamKey(px0, py0, px1, py1);\r\n        var vKey: number = key * 100 + t;\r\n        if (BezierLerp._bezierResultCache[vKey]) return BezierLerp._bezierResultCache[vKey];\r\n        var points: any[] = BezierLerp._getBezierPoints(px0, py0, px1, py1, key);\r\n        var i: number, len: number;\r\n        len = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            if (t <= points[i]) {\r\n                BezierLerp._bezierResultCache[vKey] = points[i + 1];\r\n                return points[i + 1];\r\n            }\r\n        }\r\n        BezierLerp._bezierResultCache[vKey] = 1;\r\n        return 1;\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    private static _getBezierParamKey(px0: number, py0: number, px1: number, py1: number): number {\r\n        return (((px0 * 100 + py0) * 100 + px1) * 100 + py1) * 100;\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    private static _getBezierPoints(px0: number, py0: number, px1: number, py1: number, key: number): any[] {\r\n        if (BezierLerp._bezierPointsCache[key]) return BezierLerp._bezierPointsCache[key];\r\n        var controlPoints: any[];\r\n        controlPoints = [0, 0, px0, py0, px1, py1, 1, 1];\r\n        var bz: Bezier;\r\n        bz = new Bezier();\r\n        var points: any[];\r\n        points = bz.getBezierPoints(controlPoints, 100, 3);\r\n        BezierLerp._bezierPointsCache[key] = points;\r\n        return points;\r\n    }\r\n}\r\n\r\n\r\n","import { AnimationNodeContent } from \"./AnimationNodeContent\";\r\nimport { AnimationContent } from \"./AnimationContent\";\r\nimport { KeyFramesContent } from \"./KeyFramesContent\";\r\nimport { AnimationParser01 } from \"./AnimationParser01\";\r\nimport { AnimationParser02 } from \"./AnimationParser02\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { MathUtil } from \"../maths/MathUtil\";\r\nimport { IAniLib } from \"./AniLibPack\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { BezierLerp } from \"./math/BezierLerp\";\r\n\r\n/**\r\n * <code>AnimationTemplet</code> 类用于动画模板资源。\r\n */\r\nexport class AnimationTemplet extends Resource {\r\n    /**插值函数 */\r\n    static interpolation: any[] = [AnimationTemplet._LinearInterpolation_0, AnimationTemplet._QuaternionInterpolation_1, AnimationTemplet._AngleInterpolation_2, AnimationTemplet._RadiansInterpolation_3, AnimationTemplet._Matrix4x4Interpolation_4, AnimationTemplet._NoInterpolation_5, AnimationTemplet._BezierInterpolation_6, AnimationTemplet._BezierInterpolation_7];\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _LinearInterpolation_0(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n        out[outOfs] = data[index] + dt * dData[index];\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _QuaternionInterpolation_1(bone: any, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n        var amount: number = duration === 0 ? 0 : dt / duration;\r\n        MathUtil.slerpQuaternionArray(data, index, nextData, index, amount, out, outOfs);//(dt/duration)为amount比例\r\n        return 4;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _AngleInterpolation_2(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _RadiansInterpolation_3(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _Matrix4x4Interpolation_4(bone: any, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n        for (let i = 0; i < 16; i++, index++)\r\n            out[outOfs + i] = data[index] + dt * dData[index];\r\n        return 16;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _NoInterpolation_5(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n        out[outOfs] = data[index];\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _BezierInterpolation_6(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null, offset: number = 0): number {\r\n        out[outOfs] = data[index] + (nextData[index] - data[index]) * BezierLerp.getBezierRate(dt / duration, interData[offset], interData[offset + 1], interData[offset + 2], interData[offset + 3]);\r\n        return 5;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    //TODO:coverage\r\n    private static _BezierInterpolation_7(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null, offset: number = 0): number {\r\n        //interData=[x0,y0,x1,y1,start,d,offTime,allTime]\r\n        out[outOfs] = interData[offset + 4] + interData[offset + 5] * BezierLerp.getBezierRate((dt * 0.001 + interData[offset + 6]) / interData[offset + 7], interData[offset], interData[offset + 1], interData[offset + 2], interData[offset + 3]);\r\n        return 9;\r\n    }\r\n\r\n    /**\r\n     * 加载动画模板。\r\n     * @param url 动画模板地址。\r\n     */\r\n    //TODO:coverage\r\n    //public static function load(url_load:String):AnimationTemplet {\r\n    //return Laya.loader.create(url, null, null, AnimationTemplet);\r\n    //}\r\n\r\n    /**@internal */\r\n    _aniVersion: string;\r\n    /**@internal */\r\n    _anis: AnimationContent[] = [];\r\n    /**@internal */\r\n    _aniMap: any = {};\r\n    /**@internal */\r\n    _publicExtData: ArrayBuffer;//公共扩展数据\r\n    /**@internal */\r\n    _useParent: boolean;//是否采用对象树数据格式\r\n    /**@private */\r\n    protected unfixedCurrentFrameIndexes: Uint32Array;\r\n    /**@private */\r\n    protected unfixedCurrentTimes: Float32Array;\r\n    /**@private */\r\n    protected unfixedKeyframes: KeyFramesContent[];\r\n    /**@private */\r\n    protected unfixedLastAniIndex: number = -1;\r\n    /**@internal */\r\n    _aniClassName: string;\r\n    /**@internal */\r\n    _animationDatasCache: any;\r\n    /**@internal */\r\n    _fullFrames: any[] = null;\r\n\r\n    /**@private */\r\n    private _boneCurKeyFrm: any[] = [];\t// 记录每个骨骼当前在动画的第几帧。这个是为了去掉缓存的帧索引数据。TODO 其实这个应该放到skeleton中\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _calculateKeyFrame(node: AnimationNodeContent, keyframeCount: number, keyframeDataCount: number): void {\r\n        var keyFrames: KeyFramesContent[] = node.keyFrame;\r\n        keyFrames[keyframeCount] = keyFrames[0];\r\n        for (var i: number = 0; i < keyframeCount; i++) {\r\n            var keyFrame: KeyFramesContent = keyFrames[i];\r\n            for (var j: number = 0; j < keyframeDataCount; j++) {\r\n                keyFrame.dData[j] = (keyFrame.duration === 0) ? 0 : (keyFrames[i + 1].data[j] - keyFrame.data[j]) / keyFrame.duration;//末帧dData数据为0\r\n                keyFrame.nextData[j] = keyFrames[i + 1].data[j];\r\n            }\r\n        }\r\n        keyFrames.length--;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    //TODO:coverage\r\n    _onAsynLoaded(data: any, propertyParams: any = null): void {\r\n        var reader: Byte = new Byte(data);\r\n        this._aniVersion = reader.readUTFString();\r\n        switch (this._aniVersion) {\r\n            case \"LAYAANIMATION:02\":\r\n                AnimationParser02.parse(this, reader);\r\n                break;\r\n            default:\r\n                AnimationParser01.parse(this, reader);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取动画数量\r\n     */\r\n    getAnimationCount(): number {\r\n        return this._anis.length;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取动画\r\n     * @param aniIndex \r\n     */\r\n    getAnimation(aniIndex: number): any {\r\n        return this._anis[aniIndex];\r\n    }\r\n\r\n    /**\r\n     * 获取动画时长\r\n     * @param aniIndex \r\n     */\r\n    getAniDuration(aniIndex: number): number {\r\n        return this._anis[aniIndex].playTime;\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**获取动画nodes信息 */\r\n    getNodes(aniIndex: number): any {\r\n        return this._anis[aniIndex].nodes;\r\n    }\r\n\r\n    /**获取动画骨骼信息 */\r\n    getNodeIndexWithName(aniIndex: number, name: string): number {\r\n        return this._anis[aniIndex].bone3DMap[name];\r\n    }\r\n\r\n    /**获取nodes长度 */\r\n    getNodeCount(aniIndex: number): number {\r\n        return this._anis[aniIndex].nodes.length;\r\n    }\r\n\r\n    /**获取keyframes长度 */\r\n    getTotalkeyframesLength(aniIndex: number): number {\r\n        return this._anis[aniIndex].totalKeyframeDatasLength;\r\n    }\r\n\r\n    /**获取附加数据 */\r\n    getPublicExtData(): ArrayBuffer {\r\n        return this._publicExtData;\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**获取动画信息数据 */\r\n    getAnimationDataWithCache(key: any, cacheDatas: any, aniIndex: number, frameIndex: number): Float32Array {\r\n        var aniDatas: any = cacheDatas[aniIndex];\r\n        if (!aniDatas) {\r\n            return null;\r\n        } else {\r\n            var keyDatas: any[] = aniDatas[key];\r\n            if (!keyDatas)\r\n                return null;\r\n            else {\r\n                return keyDatas[frameIndex];\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**设置动画信息数据 */\r\n    setAnimationDataWithCache(key: any, cacheDatas: any[], aniIndex: number, frameIndex: number, data: any): void {\r\n        var aniDatas: any = (cacheDatas[aniIndex]) || (cacheDatas[aniIndex] = {});\r\n        var aniDatasCache: any[] = (aniDatas[key]) || (aniDatas[key] = []);\r\n        aniDatasCache[frameIndex] = data;\r\n    }\r\n\r\n    /**\r\n     * 计算当前时间应该对应关键帧的哪一帧\r\n     * @param\tnodeframes\t当前骨骼的关键帧数据\r\n     * @param\tnodeid\t\t骨骼id，因为要使用和更新 _boneCurKeyFrm\r\n     * @param\ttm\r\n     * @return\r\n     * 问题\r\n     * \t最后一帧有问题，例如倒数第二帧时间是0.033ms,则后两帧非常靠近，当实际给最后一帧的时候，根据帧数计算出的时间实际上落在倒数第二帧\r\n     *  \t使用与AnimationPlayer一致的累积时间就行\r\n     */\r\n    getNodeKeyFrame(nodeframes: KeyFramesContent[], nodeid: number, tm: number): number {\r\n        var cid: any = this._boneCurKeyFrm[nodeid];\r\n        var frmNum: number = nodeframes.length;\r\n\r\n        if (cid == void 0 || cid >= frmNum) {\r\n            cid = this._boneCurKeyFrm[nodeid] = 0;\r\n        }\r\n\r\n        var kinfo: KeyFramesContent = nodeframes[cid];\r\n\r\n        var curFrmTm: number = kinfo.startTime;\r\n        var dt: number = tm - curFrmTm;\r\n        // 缓存命中的情况\r\n        if (dt == 0 || (dt > 0 && kinfo.duration > dt)) {\r\n            return cid;\r\n        }\r\n        // 否则就要前后判断在第几帧\r\n        var i: number = 0;\r\n        if (dt > 0) {\r\n            // 在后面\r\n            tm = tm + 0.01;// 有个问题，由于浮点精度的问题可能导致 前后 st+duration  st+duration 接不上。导致cid+1的起始时间>tm，所以时间加上一点\r\n            for (i = cid + 1; i < frmNum; i++) {\r\n                kinfo = nodeframes[i];\r\n                if (kinfo.startTime <= tm && kinfo.startTime + kinfo.duration > tm) {\r\n                    this._boneCurKeyFrm[nodeid] = i;\r\n                    return i;\r\n                }\r\n            }\r\n            return frmNum - 1;\r\n        } else {\r\n            // 在前面\r\n            for (i = 0; i < cid; i++) {\r\n                kinfo = nodeframes[i];\r\n                if (kinfo.startTime <= tm && kinfo.startTime + kinfo.duration > tm) {\r\n                    this._boneCurKeyFrm[nodeid] = i;\r\n                    return i;\r\n                }\r\n            }\r\n            return cid;\t// 可能误差导致，返回最后一个\r\n        }\r\n        return 0;\t// 这个怎么做\r\n    }\r\n\r\n    /**\r\n     * 获取原始数据\r\n     * @param\taniIndex\r\n     * @param\toriginalData\r\n     * @param\tnodesFrameIndices\r\n     * @param\tframeIndex\r\n     * @param\tplayCurTime\r\n     */\r\n    getOriginalData(aniIndex: number, originalData: Float32Array, nodesFrameIndices: any[], frameIndex: number, playCurTime: number): void {\r\n        var oneAni: AnimationContent = this._anis[aniIndex];\r\n\r\n        var nodes: AnimationNodeContent[] = oneAni.nodes;\r\n\r\n        // 当前帧缓存数组可能大小需要调整\r\n        var curKFrm: any[] = this._boneCurKeyFrm;\r\n        if (curKFrm.length < nodes.length) {\r\n            curKFrm.length = nodes.length;\r\n        }\r\n        //playCurTime %= oneAni.playTime;\r\n        var j: number = 0;\r\n        for (var i: number = 0, n: number = nodes.length, outOfs: number = 0; i < n; i++) {\r\n            var node: AnimationNodeContent = nodes[i];\r\n\r\n            var key: KeyFramesContent;\r\n            //key = node.keyFrame[nodesFrameIndices[i][frameIndex]];\r\n            var kfrm: KeyFramesContent[] = node.keyFrame;\r\n            key = kfrm[this.getNodeKeyFrame(kfrm, i, playCurTime)];\r\n\r\n            node.dataOffset = outOfs;\r\n\r\n            var dt: number = playCurTime - key.startTime;\r\n\r\n            var lerpType: number = node.lerpType;\r\n            if (lerpType) {\r\n                switch (lerpType) {\r\n                    case 0:\r\n                    case 1:\r\n                        for (j = 0; j < node.keyframeWidth;)\r\n                            j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n                        break;\r\n                    case 2:\r\n                        var interpolationData: any[] = key.interpolationData;\r\n                        var interDataLen: number = interpolationData.length;\r\n                        var dataIndex: number = 0;\r\n                        for (j = 0; j < interDataLen;) {\r\n                            var type: number = interpolationData[j];\r\n                            switch (type) {\r\n                                case 6:\r\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n                                    break;\r\n                                case 7:\r\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n                                    break;\r\n                                default:\r\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n\r\n                            }\r\n                            //if (type === 6)\r\n                            //j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData.slice(j+1, j + 5));\r\n                            //else\r\n                            //j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n                            dataIndex++;\r\n                        }\r\n                        break;\r\n                }\r\n            } else {\r\n                for (j = 0; j < node.keyframeWidth;)\r\n                    j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n            }\r\n\r\n            outOfs += node.keyframeWidth;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**获取nodes信息 */\r\n    getNodesCurrentFrameIndex(aniIndex: number, playCurTime: number): Uint32Array {\r\n        var ani: AnimationContent = this._anis[aniIndex];\r\n        var nodes: AnimationNodeContent[] = ani.nodes;\r\n\r\n        if (aniIndex !== this.unfixedLastAniIndex) {\r\n            this.unfixedCurrentFrameIndexes = new Uint32Array(nodes.length);\r\n            this.unfixedCurrentTimes = new Float32Array(nodes.length);\r\n            this.unfixedLastAniIndex = aniIndex;\r\n        }\r\n\r\n        for (var i = 0, n = nodes.length; i < n; i++) {\r\n            var node = nodes[i];\r\n            if (playCurTime < this.unfixedCurrentTimes[i])\r\n                this.unfixedCurrentFrameIndexes[i] = 0;\r\n            this.unfixedCurrentTimes[i] = playCurTime;\r\n\r\n            while ((this.unfixedCurrentFrameIndexes[i] < node.keyFrame.length)) {\r\n                if (node.keyFrame[this.unfixedCurrentFrameIndexes[i]].startTime > this.unfixedCurrentTimes[i])\r\n                    break;\r\n\r\n                this.unfixedCurrentFrameIndexes[i]++;\r\n            }\r\n            this.unfixedCurrentFrameIndexes[i]--;\r\n        }\r\n        return this.unfixedCurrentFrameIndexes;\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**获取原始数据 */\r\n    getOriginalDataUnfixedRate(aniIndex: number, originalData: Float32Array, playCurTime: number): void {\r\n        var oneAni: AnimationContent = this._anis[aniIndex];\r\n\r\n        var nodes: AnimationNodeContent[] = oneAni.nodes;\r\n\r\n        if (aniIndex !== this.unfixedLastAniIndex) {\r\n            this.unfixedCurrentFrameIndexes = new Uint32Array(nodes.length);\r\n            this.unfixedCurrentTimes = new Float32Array(nodes.length);\r\n            this.unfixedKeyframes = [];\r\n            this.unfixedLastAniIndex = aniIndex;\r\n        }\r\n\r\n        var j: number = 0;\r\n        for (var i: number = 0, n: number = nodes.length, outOfs: number = 0; i < n; i++) {\r\n            var node: AnimationNodeContent = nodes[i];\r\n\r\n            if (playCurTime < this.unfixedCurrentTimes[i])\r\n                this.unfixedCurrentFrameIndexes[i] = 0;\r\n\r\n            this.unfixedCurrentTimes[i] = playCurTime;\r\n\r\n            while (this.unfixedCurrentFrameIndexes[i] < node.keyFrame.length) {\r\n                if (node.keyFrame[this.unfixedCurrentFrameIndexes[i]].startTime > this.unfixedCurrentTimes[i])\r\n                    break;\r\n\r\n                this.unfixedKeyframes[i] = node.keyFrame[this.unfixedCurrentFrameIndexes[i]];\r\n                this.unfixedCurrentFrameIndexes[i]++;\r\n            }\r\n\r\n            var key: KeyFramesContent = this.unfixedKeyframes[i];\r\n            node.dataOffset = outOfs;\r\n            var dt: number = playCurTime - key.startTime;\r\n            var lerpType: number = node.lerpType;\r\n            if (lerpType) {\r\n                switch (node.lerpType) {\r\n                    case 0:\r\n                    case 1:\r\n                        for (j = 0; j < node.keyframeWidth;)\r\n                            j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n                        break;\r\n                    case 2:\r\n                        var interpolationData: any[] = key.interpolationData;\r\n                        var interDataLen: number = interpolationData.length;\r\n                        var dataIndex: number = 0;\r\n                        for (j = 0; j < interDataLen;) {\r\n                            var type: number = interpolationData[j];\r\n                            switch (type) {\r\n                                case 6:\r\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n                                    break;\r\n                                case 7:\r\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n                                    break;\r\n                                default:\r\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n\r\n                            }\r\n                            //if (type === 6)\r\n                            //j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData.slice(j+1, j + 5));\r\n                            //else\r\n                            //j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n                            dataIndex++;\r\n                        }\r\n                        break;\r\n                }\r\n            } else {\r\n                for (j = 0; j < node.keyframeWidth;)\r\n                    j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n            }\r\n\r\n            outOfs += node.keyframeWidth;\r\n        }\r\n    }\r\n}\r\n\r\nIAniLib.AnimationTemplet = AnimationTemplet;","import { SkinMeshForGraphic } from \"./bone/canvasmesh/SkinMeshForGraphic\"\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Graphics } from \"../display/Graphics\";\r\n/**\r\n * Graphic动画\r\n */\r\nexport class GraphicsAni extends Graphics {\r\n\r\n\t/**\r\n\t * @private\r\n\t * 画自定义蒙皮动画\r\n\t * @param\tskin\r\n\t */\r\n\t//TODO:coverage\r\n\tdrawSkin(skinA: SkinMeshForGraphic, alpha: number): void {\r\n\t\tthis.drawTriangles(skinA.texture, 0, 0, (<Float32Array>skinA.vertices), (<Float32Array>skinA.uvs), (<Uint16Array>skinA.indexes), skinA.transform || Matrix.EMPTY, alpha);\r\n\t}\r\n\r\n\tprivate static _caches: any[] = [];\r\n\t/**\r\n\t * 获取一个GraphicsAni\r\n\t * @returns \r\n\t */\r\n\tstatic create(): GraphicsAni {\r\n\t\tvar rs: GraphicsAni = GraphicsAni._caches.pop();\r\n\t\treturn rs || new GraphicsAni();\r\n\t}\r\n\r\n\t/**\r\n\t * 回收清理GraphicAni\r\n\t * @param graphics \r\n\t */\r\n\t//TODO:coverage\r\n\tstatic recycle(graphics: GraphicsAni): void {\r\n\t\tgraphics.clear();\r\n\t\tGraphicsAni._caches.push(graphics);\r\n\t}\r\n}\r\n\r\n\r\n","import { IkConstraintData } from \"./IkConstraintData\";\r\nimport { Bone } from \"./Bone\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Sprite } from \"../../display/Sprite\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class IkConstraint {\r\n\r\n\t/**@internal */\r\n\tprivate _targetBone: Bone;\r\n\t/**@internal */\r\n\tprivate _bones: Bone[];\r\n\t/**@internal */\r\n\t//private _data: IkConstraintData;\r\n\tname: string;\r\n\tmix: number;\r\n\tbendDirection: number;\r\n\tisSpine: boolean = true;\r\n\tstatic radDeg: number = 180 / Math.PI;\r\n\tstatic degRad: number = Math.PI / 180;\r\n\t/**@internal */\r\n\tprivate static _tempMatrix: Matrix = new Matrix();\r\n\r\n\t//TODO:coverage\r\n\tconstructor(data: IkConstraintData, bones: Bone[]) {\r\n\t\t//this._data = data;\r\n\t\tthis._targetBone = bones[data.targetBoneIndex];\r\n\t\tthis.isSpine = data.isSpine;\r\n\t\tif (this._bones == null) this._bones = [];\r\n\t\tthis._bones.length = 0;\r\n\t\tfor (var i: number = 0, n: number = data.boneIndexs.length; i < n; i++) {\r\n\t\t\tthis._bones.push(bones[data.boneIndexs[i]]);\r\n\t\t}\r\n\t\tthis.name = data.name;\r\n\t\tthis.mix = data.mix;\r\n\t\tthis.bendDirection = data.bendDirection;\r\n\t}\r\n\r\n\tapply(): void {\r\n\t\tswitch (this._bones.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (this.isSpine) {\r\n\t\t\t\t\tthis._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);// tIkConstraintData.mix);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);// tIkConstraintData.mix);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate _applyIk1(bone: Bone, targetX: number, targetY: number, alpha: number): void {\r\n\t\tvar pp: Bone = bone.parentBone;\r\n\t\tvar id: number = 1 / (pp.resultMatrix.a * pp.resultMatrix.d - pp.resultMatrix.b * pp.resultMatrix.c);\r\n\t\tvar x: number = targetX - pp.resultMatrix.tx;\r\n\t\tvar y: number = targetY - pp.resultMatrix.ty;\r\n\t\tvar tx: number = (x * pp.resultMatrix.d - y * pp.resultMatrix.c) * id - bone.transform.x;\r\n\t\tvar ty: number = (y * pp.resultMatrix.a - x * pp.resultMatrix.b) * id - bone.transform.y;\r\n\t\tvar rotationIK: number = Math.atan2(ty, tx) * IkConstraint.radDeg - 0 - bone.transform.skX;\r\n\t\tif (bone.transform.scX < 0) rotationIK += 180;\r\n\t\tif (rotationIK > 180)\r\n\t\t\trotationIK -= 360;\r\n\t\telse if (rotationIK < -180) rotationIK += 360;\r\n\t\tbone.transform.skX = bone.transform.skY = bone.transform.skX + rotationIK * alpha;\r\n\t\tbone.update();\r\n\t}\r\n\r\n\t//debug相关代码\r\n\t/**@internal */\r\n\tprivate _sp: Sprite;\r\n\tprivate isDebug: boolean = false;\r\n\r\n\t//TODO:coverage\r\n\tupdatePos(x: number, y: number): void {\r\n\t\tif (this._sp) {\r\n\t\t\tthis._sp.pos(x, y);\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate _applyIk2(parent: Bone, child: Bone, targetX: number, targetY: number, bendDir: number, alpha: number): void {\r\n\t\tif (alpha == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//spine 双骨骼ik计算\r\n\t\tvar px: number = parent.resultTransform.x, py: number = parent.resultTransform.y;\r\n\t\tvar psx: number = parent.transform.scX, psy: number = parent.transform.scY;\r\n\t\tvar csx: number = child.transform.scX;\r\n\t\tvar os1: number, os2: number, s2: number;\r\n\t\tif (psx < 0) {\r\n\t\t\tpsx = -psx;\r\n\t\t\tos1 = 180;\r\n\t\t\ts2 = -1;\r\n\t\t} else {\r\n\t\t\tos1 = 0;\r\n\t\t\ts2 = 1;\r\n\t\t}\r\n\t\tif (psy < 0) {\r\n\t\t\tpsy = -psy;\r\n\t\t\ts2 = -s2;\r\n\t\t}\r\n\t\tif (csx < 0) {\r\n\t\t\tcsx = -csx;\r\n\t\t\tos2 = 180;\r\n\t\t} else {\r\n\t\t\tos2 = 0\r\n\t\t}\r\n\r\n\t\tvar cx: number = child.resultTransform.x, cy: number, cwx: number, cwy: number;\r\n\t\tvar a: number = parent.resultMatrix.a, b: number = parent.resultMatrix.c;\r\n\t\tvar c: number = parent.resultMatrix.b, d: number = parent.resultMatrix.d;\r\n\t\tvar u: boolean = Math.abs(psx - psy) <= 0.0001;\r\n\t\t//求子骨骼的世界坐标点\r\n\t\tif (!u) {\r\n\t\t\tcy = 0;\r\n\t\t\tcwx = a * cx + parent.resultMatrix.tx;\r\n\t\t\tcwy = c * cx + parent.resultMatrix.ty;\r\n\t\t} else {\r\n\t\t\tcy = child.resultTransform.y;\r\n\t\t\tcwx = a * cx + b * cy + parent.resultMatrix.tx;\r\n\t\t\tcwy = c * cx + d * cy + parent.resultMatrix.ty;\r\n\t\t}\r\n\t\t//cwx,cwy为子骨骼应该在的世界坐标\r\n\r\n\t\tif (this.isDebug) {\r\n\t\t\tif (!this._sp) {\r\n\t\t\t\tthis._sp = new Sprite();\r\n\t\t\t\tILaya.stage.addChild(this._sp);\r\n\t\t\t}\r\n\t\t\tthis._sp.graphics.clear();\r\n\t\t\tthis._sp.graphics.drawCircle(targetX, targetY, 15, \"#ffff00\");\r\n\r\n\t\t\tthis._sp.graphics.drawCircle(cwx, cwy, 15, \"#ff00ff\");\r\n\t\t}\r\n\t\tparent.setRotation(Math.atan2(cwy - parent.resultMatrix.ty, cwx - parent.resultMatrix.tx));\r\n\t\tvar pp: Bone = parent.parentBone;\r\n\t\ta = pp.resultMatrix.a;\r\n\t\tb = pp.resultMatrix.c;\r\n\t\tc = pp.resultMatrix.b;\r\n\t\td = pp.resultMatrix.d;\r\n\t\t//逆因子\r\n\t\tvar id: number = 1 / (a * d - b * c);\r\n\t\t//求得IK中的子骨骼角度向量\r\n\t\tvar x: number = targetX - pp.resultMatrix.tx, y: number = targetY - pp.resultMatrix.ty;\r\n\t\tvar tx: number = (x * d - y * b) * id - px;\r\n\t\tvar ty: number = (y * a - x * c) * id - py;\r\n\r\n\t\t//求得子骨骼的角度向量\r\n\t\tx = cwx - pp.resultMatrix.tx;\r\n\t\ty = cwy - pp.resultMatrix.ty;\r\n\t\tvar dx: number = (x * d - y * b) * id - px;\r\n\t\tvar dy: number = (y * a - x * c) * id - py;\r\n\t\t//子骨骼的实际长度\r\n\t\tvar l1: number = Math.sqrt(dx * dx + dy * dy);\r\n\t\t//子骨骼的长度\r\n\t\tvar l2: number = child.length * csx;\r\n\t\tvar a1: number, a2: number;\r\n\t\tif (u) {\r\n\t\t\tl2 *= psx;\r\n\t\t\t//求IK的角度\r\n\t\t\tvar cos: number = (tx * tx + ty * ty - l1 * l1 - l2 * l2) / (2 * l1 * l2);\r\n\t\t\tif (cos < -1)\r\n\t\t\t\tcos = -1;\r\n\t\t\telse if (cos > 1) cos = 1;\r\n\t\t\ta2 = Math.acos(cos) * bendDir;\r\n\t\t\ta = l1 + l2 * cos;\r\n\t\t\tb = l2 * Math.sin(a2);\r\n\t\t\ta1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\r\n\t\t} else {\r\n\t\t\ta = psx * l2;\r\n\t\t\tb = psy * l2;\r\n\t\t\tvar aa: number = a * a, bb: number = b * b, dd: number = tx * tx + ty * ty, ta: number = Math.atan2(ty, tx);\r\n\t\t\tc = bb * l1 * l1 + aa * dd - aa * bb;\r\n\t\t\tvar c1: number = -2 * bb * l1, c2: number = bb - aa;\r\n\t\t\td = c1 * c1 - 4 * c2 * c;\r\n\t\t\tif (d > 0) {\r\n\t\t\t\tvar q: number = Math.sqrt(d);\r\n\t\t\t\tif (c1 < 0) q = -q;\r\n\t\t\t\tq = -(c1 + q) / 2;\r\n\t\t\t\tvar r0: number = q / c2, r1: number = c / q;\r\n\t\t\t\tvar r: number = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\r\n\t\t\t\tif (r * r <= dd) {\r\n\t\t\t\t\ty = Math.sqrt(dd - r * r) * bendDir;\r\n\t\t\t\t\ta1 = ta - Math.atan2(y, r);\r\n\t\t\t\t\ta2 = Math.atan2(y / psy, (r - l1) / psx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar minAngle: number = 0, minDist: number = Number.MAX_VALUE, minX: number = 0, minY: number = 0;\r\n\t\t\tvar maxAngle: number = 0, maxDist: number = 0, maxX: number = 0, maxY: number = 0;\r\n\t\t\tx = l1 + a;\r\n\t\t\td = x * x;\r\n\t\t\tif (d > maxDist) {\r\n\t\t\t\tmaxAngle = 0;\r\n\t\t\t\tmaxDist = d;\r\n\t\t\t\tmaxX = x;\r\n\t\t\t}\r\n\t\t\tx = l1 - a;\r\n\t\t\td = x * x;\r\n\t\t\tif (d < minDist) {\r\n\t\t\t\tminAngle = Math.PI;\r\n\t\t\t\tminDist = d;\r\n\t\t\t\tminX = x;\r\n\t\t\t}\r\n\t\t\tvar angle: number = Math.acos(-a * l1 / (aa - bb));\r\n\t\t\tx = a * Math.cos(angle) + l1;\r\n\t\t\ty = b * Math.sin(angle);\r\n\t\t\td = x * x + y * y;\r\n\t\t\tif (d < minDist) {\r\n\t\t\t\tminAngle = angle;\r\n\t\t\t\tminDist = d;\r\n\t\t\t\tminX = x;\r\n\t\t\t\tminY = y;\r\n\t\t\t}\r\n\t\t\tif (d > maxDist) {\r\n\t\t\t\tmaxAngle = angle;\r\n\t\t\t\tmaxDist = d;\r\n\t\t\t\tmaxX = x;\r\n\t\t\t\tmaxY = y;\r\n\t\t\t}\r\n\t\t\tif (dd <= (minDist + maxDist) / 2) {\r\n\t\t\t\ta1 = ta - Math.atan2(minY * bendDir, minX);\r\n\t\t\t\ta2 = minAngle * bendDir;\r\n\t\t\t} else {\r\n\t\t\t\ta1 = ta - Math.atan2(maxY * bendDir, maxX);\r\n\t\t\t\ta2 = maxAngle * bendDir;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar os: number = Math.atan2(cy, cx) * s2;\r\n\t\tvar rotation: number = parent.resultTransform.skX;\r\n\t\ta1 = (a1 - os) * IkConstraint.radDeg + os1 - rotation;\r\n\t\tif (a1 > 180)\r\n\t\t\ta1 -= 360;\r\n\t\telse if (a1 < -180) a1 += 360;\r\n\t\tparent.resultTransform.x = px;\r\n\t\tparent.resultTransform.y = py;\r\n\t\tparent.resultTransform.skX = parent.resultTransform.skY = rotation + a1 * alpha;\r\n\t\trotation = child.resultTransform.skX;\r\n\t\trotation = rotation % 360;\r\n\t\ta2 = ((a2 + os) * IkConstraint.radDeg - 0) * s2 + os2 - rotation;\r\n\t\tif (a2 > 180)\r\n\t\t\ta2 -= 360;\r\n\t\telse if (a2 < -180) a2 += 360;\r\n\t\tchild.resultTransform.x = cx;\r\n\t\tchild.resultTransform.y = cy;\r\n\t\tchild.resultTransform.skX = child.resultTransform.skY = child.resultTransform.skY + a2 * alpha;\r\n\t\tparent.update();\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate _applyIk3(parent: Bone, child: Bone, targetX: number, targetY: number, bendDir: number, alpha: number): void {\r\n\t\tif (alpha == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar cwx: number, cwy: number;\r\n\r\n\t\t// 龙骨双骨骼ik计算\r\n\r\n\t\tconst x: number = child.resultMatrix.a * child.length;\r\n\t\tconst y: number = child.resultMatrix.b * child.length;\r\n\r\n\t\tconst lLL: number = x * x + y * y;\r\n\t\t//child骨骼长度\r\n\t\tconst lL: number = Math.sqrt(lLL);\r\n\r\n\r\n\t\tvar parentX: number = parent.resultMatrix.tx;\r\n\t\tvar parentY: number = parent.resultMatrix.ty;\r\n\r\n\t\tvar childX: number = child.resultMatrix.tx;\r\n\t\tvar childY: number = child.resultMatrix.ty;\r\n\t\tvar dX: number = childX - parentX;\r\n\t\tvar dY: number = childY - parentY;\r\n\r\n\t\tconst lPP: number = dX * dX + dY * dY;\r\n\t\t//parent骨骼长度\r\n\t\tconst lP: number = Math.sqrt(lPP);\r\n\r\n\t\tdX = targetX - parent.resultMatrix.tx;\r\n\t\tdY = targetY - parent.resultMatrix.ty;\r\n\t\tconst lTT: number = dX * dX + dY * dY;\r\n\t\t//parent到ik的长度\r\n\t\tconst lT: number = Math.sqrt(lTT);\r\n\r\n\t\tvar ikRadianA: number = 0;\r\n\t\tif (lL + lP <= lT || lT + lL <= lP || lT + lP <= lL)//构不成三角形,被拉成直线\r\n\t\t{\r\n\t\t\tvar rate: number;\r\n\t\t\tif (lL + lP <= lT) {\r\n\t\t\t\trate = 1;\r\n\t\t\t} else {\r\n\t\t\t\trate = -1;\r\n\t\t\t}\r\n\t\t\tchildX = parentX + rate * (targetX - parentX) * lP / lT;\r\n\t\t\tchildY = parentY + rate * (targetY - parentY) * lP / lT;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst h: number = (lPP - lLL + lTT) / (2 * lTT);\r\n\t\t\tconst r: number = Math.sqrt(lPP - h * h * lTT) / lT;\r\n\t\t\tconst hX: number = parentX + (dX * h);\r\n\t\t\tconst hY: number = parentY + (dY * h);\r\n\t\t\tconst rX: number = -dY * r;\r\n\t\t\tconst rY: number = dX * r;\r\n\r\n\t\t\tif (bendDir > 0) {\r\n\t\t\t\tchildX = hX - rX;\r\n\t\t\t\tchildY = hY - rY;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchildX = hX + rX;\r\n\t\t\t\tchildY = hY + rY;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcwx = childX;\r\n\t\tcwy = childY;\r\n\r\n\t\t//cwx,cwy为子骨骼应该在的世界坐标\r\n\r\n\t\tif (this.isDebug) {\r\n\t\t\tif (!this._sp) {\r\n\t\t\t\tthis._sp = new Sprite();\r\n\t\t\t\tILaya.stage.addChild(this._sp);\r\n\t\t\t}\r\n\t\t\tthis._sp.graphics.clear();\r\n\t\t\tthis._sp.graphics.drawCircle(parentX, parentY, 15, \"#ff00ff\");\r\n\t\t\tthis._sp.graphics.drawCircle(targetX, targetY, 15, \"#ffff00\");\r\n\r\n\t\t\tthis._sp.graphics.drawCircle(cwx, cwy, 15, \"#ff00ff\");\r\n\t\t}\r\n\r\n\r\n\t\t//根据当前计算出的世界坐标更新骨骼\r\n\r\n\t\t//更新parent\r\n\t\tvar pRotation: number;\r\n\t\tpRotation = Math.atan2(cwy - parent.resultMatrix.ty, cwx - parent.resultMatrix.tx);\r\n\t\tparent.setRotation(pRotation);\r\n\r\n\t\tvar pTarMatrix: Matrix;\r\n\t\tpTarMatrix = IkConstraint._tempMatrix;\r\n\t\tpTarMatrix.identity();\r\n\t\tpTarMatrix.rotate(pRotation);\r\n\t\tpTarMatrix.scale(parent.resultMatrix.getScaleX(), parent.resultMatrix.getScaleY());\r\n\t\tpTarMatrix.translate(parent.resultMatrix.tx, parent.resultMatrix.ty);\r\n\r\n\t\tpTarMatrix.copyTo(parent.resultMatrix);\r\n\t\tparent.updateChild();\r\n\r\n\r\n\t\t//更新child\r\n\t\tvar childRotation: number;\r\n\t\tchildRotation = Math.atan2(targetY - cwy, targetX - cwx);\r\n\t\tchild.setRotation(childRotation);\r\n\r\n\t\tvar childTarMatrix: Matrix;\r\n\t\tchildTarMatrix = IkConstraint._tempMatrix;\r\n\t\tchildTarMatrix.identity();\r\n\t\tchildTarMatrix.rotate(childRotation);\r\n\t\tchildTarMatrix.scale(child.resultMatrix.getScaleX(), child.resultMatrix.getScaleY());\r\n\t\tchildTarMatrix.translate(cwx, cwy);\r\n\r\n\t\tpTarMatrix.copyTo(child.resultMatrix);\r\n\t\tchild.updateChild();\r\n\t}\r\n}\r\n\r\n\r\n","import { BoneSlot } from \"./BoneSlot\";\r\nimport { PathConstraintData } from \"./PathConstraintData\";\r\nimport { Bone } from \"./Bone\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\n\r\n\r\n/**\r\n * @internal\r\n * 路径作用器\r\n * 1，生成根据骨骼计算控制点\r\n * 2，根据控制点生成路径，并计算路径上的节点\r\n * 3，根据节点，重新调整骨骼位置\r\n */\r\nexport class PathConstraint {\r\n\r\n\t//private static NONE: number = -1;\r\n\tprivate static BEFORE: number = -2;\r\n\tprivate static AFTER: number = -3;\r\n\r\n\ttarget: BoneSlot;\r\n\tdata: PathConstraintData;\r\n\tbones: Bone[];\r\n\tposition: number;\r\n\tspacing: number;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\r\n\t/**@internal */\r\n\tprivate _debugKey: boolean = false;\r\n\t/**@internal */\r\n\tprivate _segments: number[] = [];\r\n\t/**@internal */\r\n\tprivate _curves: number[] = [];\r\n\t/**@internal */\r\n\tprivate _spaces: number[];\r\n\r\n\tconstructor(data: PathConstraintData, bones: Bone[]) {\r\n\t\tthis.data = data;\r\n\t\tthis.position = data.position;\r\n\t\tthis.spacing = data.spacing;\r\n\t\tthis.rotateMix = data.rotateMix;\r\n\t\tthis.translateMix = data.translateMix;\r\n\t\tthis.bones = [];\r\n\t\tvar tBoneIds: number[] = this.data.bones;\r\n\t\tfor (var i: number = 0, n: number = tBoneIds.length; i < n; i++) {\r\n\t\t\tthis.bones.push(bones[tBoneIds[i]]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 计算骨骼在路径上的节点\r\n\t * @param\tboneSlot\r\n\t * @param\tboneMatrixArray\r\n\t * @param\tgraphics\r\n\t */\r\n\t//TODO:coverage\r\n\tapply(boneList: Bone[], graphics: Graphics): void {\r\n\t\tif (!this.target)\r\n\t\t\treturn;\r\n\t\tvar tTranslateMix: number = this.translateMix;\r\n\t\tvar tRotateMix: number = this.translateMix;\r\n\t\tvar tTranslate: boolean = tTranslateMix > 0;\r\n\t\tvar tRotate: boolean = tRotateMix > 0;\r\n\t\tvar tSpacingMode: string = this.data.spacingMode;\r\n\t\tvar tLengthSpacing: boolean = tSpacingMode == \"length\";\r\n\t\tvar tRotateMode: string = this.data.rotateMode;\r\n\t\tvar tTangents: boolean = tRotateMode == \"tangent\";\r\n\t\tvar tScale: boolean = tRotateMode == \"chainScale\";\r\n\r\n\t\tvar lengths: number[] = [];\r\n\t\tvar boneCount: number = this.bones.length;\r\n\t\tvar spacesCount: number = tTangents ? boneCount : boneCount + 1;\r\n\r\n\t\tvar spaces: number[] = [];\r\n\t\tthis._spaces = spaces;\r\n\t\tspaces[0] = this.position;\r\n\t\tvar spacing: number = this.spacing;\r\n\t\tif (tScale || tLengthSpacing) {\r\n\t\t\tfor (var i: number = 0, n: number = spacesCount - 1; i < n;) {\r\n\t\t\t\tvar bone: Bone = this.bones[i];\r\n\t\t\t\tvar length: number = bone.length;\r\n\t\t\t\t//var x:Number = length * bone.transform.getMatrix().a;\r\n\t\t\t\t//var y:Number = length * bone.transform.getMatrix().c;\r\n\t\t\t\tvar x: number = length * bone.resultMatrix.a;\r\n\t\t\t\tvar y: number = length * bone.resultMatrix.b;\r\n\t\t\t\tlength = Math.sqrt(x * x + y * y);\r\n\t\t\t\tif (tScale)\r\n\t\t\t\t\tlengths[i] = length;\r\n\t\t\t\tspaces[++i] = tLengthSpacing ? Math.max(0, length + spacing) : spacing;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (i = 1; i < spacesCount; i++) {\r\n\t\t\t\tspaces[i] = spacing;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar positions: number[] = this.computeWorldPositions(this.target, boneList, graphics, spacesCount, tTangents, this.data.positionMode == \"percent\", tSpacingMode == \"percent\");\r\n\t\tif (this._debugKey) {\r\n\t\t\tfor (i = 0; i < positions.length; i++) {\r\n\t\t\t\tgraphics.drawCircle(positions[i++], positions[i++], 5, \"#00ff00\");\r\n\t\t\t}\r\n\t\t\tvar tLinePos: any[] = [];\r\n\t\t\tfor (i = 0; i < positions.length; i++) {\r\n\t\t\t\ttLinePos.push(positions[i++], positions[i++]);\r\n\t\t\t}\r\n\t\t\tgraphics.drawLines(0, 0, tLinePos, \"#ff0000\");\r\n\t\t}\r\n\t\tvar skeletonX: number;\r\n\t\tvar skeletonY: number;\r\n\t\tvar boneX: number = positions[0];\r\n\t\tvar boneY: number = positions[1];\r\n\t\tvar offsetRotation: number = this.data.offsetRotation;\r\n\t\tvar tip: boolean = tRotateMode == \"chain\" && offsetRotation == 0;\r\n\t\tvar p: number;\r\n\t\tfor (i = 0, p = 3; i < boneCount; i++ , p += 3) {\r\n\t\t\tbone = this.bones[i];\r\n\t\t\tbone.resultMatrix.tx += (boneX - bone.resultMatrix.tx) * tTranslateMix;\r\n\t\t\tbone.resultMatrix.ty += (boneY - bone.resultMatrix.ty) * tTranslateMix;\r\n\r\n\t\t\tx = positions[p];\r\n\t\t\ty = positions[p + 1];\r\n\t\t\tvar dx: number = x - boneX, dy: number = y - boneY;\r\n\t\t\tif (tScale) {\r\n\t\t\t\tlength = lengths[i];\r\n\t\t\t\tif (length != 0) {\r\n\t\t\t\t\tvar s: number = (Math.sqrt(dx * dx + dy * dy) / length - 1) * tRotateMix + 1;\r\n\t\t\t\t\tbone.resultMatrix.a *= s;\r\n\t\t\t\t\tbone.resultMatrix.c *= s;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tboneX = x;\r\n\t\t\tboneY = y;\r\n\t\t\tif (tRotate) {\r\n\t\t\t\tvar a: number = bone.resultMatrix.a;\r\n\t\t\t\t//var b:Number = bone.resultMatrix.b;\r\n\t\t\t\t//var c:Number = bone.resultMatrix.c;\r\n\t\t\t\tvar b: number = bone.resultMatrix.c;\r\n\t\t\t\tvar c: number = bone.resultMatrix.b;\r\n\t\t\t\tvar d: number = bone.resultMatrix.d;\r\n\t\t\t\tvar r: number;\r\n\t\t\t\tvar cos: number;\r\n\t\t\t\tvar sin: number;\r\n\t\t\t\tif (tTangents) {\r\n\t\t\t\t\tr = positions[p - 1];\r\n\t\t\t\t}\r\n\t\t\t\telse if (spaces[i + 1] == 0) {\r\n\t\t\t\t\tr = positions[p + 2];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tr = Math.atan2(dy, dx);\r\n\t\t\t\t}\r\n\t\t\t\tr -= Math.atan2(c, a) - offsetRotation / 180 * Math.PI;\r\n\t\t\t\tif (tip) {\r\n\t\t\t\t\tcos = Math.cos(r);\r\n\t\t\t\t\tsin = Math.sin(r);\r\n\t\t\t\t\tlength = bone.length;\r\n\t\t\t\t\tboneX += (length * (cos * a - sin * c) - dx) * tRotateMix;\r\n\t\t\t\t\tboneY += (length * (sin * a + cos * c) - dy) * tRotateMix;\r\n\t\t\t\t}\r\n\t\t\t\tif (r > Math.PI) {\r\n\t\t\t\t\tr -= (Math.PI * 2);\r\n\t\t\t\t}\r\n\t\t\t\telse if (r < -Math.PI) {\r\n\t\t\t\t\tr += (Math.PI * 2);\r\n\t\t\t\t}\r\n\t\t\t\tr *= tRotateMix;\r\n\t\t\t\tcos = Math.cos(r);\r\n\t\t\t\tsin = Math.sin(r);\r\n\t\t\t\tbone.resultMatrix.a = cos * a - sin * c;\r\n\t\t\t\tbone.resultMatrix.c = cos * b - sin * d;\r\n\t\t\t\tbone.resultMatrix.b = sin * a + cos * c;\r\n\t\t\t\tbone.resultMatrix.d = sin * b + cos * d;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**@internal */\r\n\tprivate static _tempMt: Matrix = new Matrix();\r\n\t/**\r\n\t * 计算顶点的世界坐标\r\n\t * @param\tboneSlot\r\n\t * @param\tboneList\r\n\t * @param\tstart\r\n\t * @param\tcount\r\n\t * @param\tworldVertices\r\n\t * @param\toffset\r\n\t */\r\n\t//TODO:coverage\r\n\tcomputeWorldVertices2(boneSlot: BoneSlot, boneList: Bone[], start: number, count: number, worldVertices: number[], offset: number): void {\r\n\t\tvar tBones: any[] = boneSlot.currDisplayData.bones;\r\n\t\tvar tWeights: any[] = boneSlot.currDisplayData.weights;\r\n\t\tvar tTriangles: any[] = boneSlot.currDisplayData.triangles;\r\n\r\n\t\tvar tMatrix: Matrix;\r\n\t\tvar i: number = 0;\r\n\t\tvar v: number = 0;\r\n\t\tvar skip: number = 0;\r\n\t\tvar n: number = 0;\r\n\t\tvar w: number = 0;\r\n\t\tvar b: number = 0;\r\n\t\tvar wx: number = 0;\r\n\t\tvar wy: number = 0;\r\n\t\tvar vx: number = 0;\r\n\t\tvar vy: number = 0;\r\n\t\tvar bone: Bone;\r\n\t\tvar len: number;\r\n\t\t//if (!tTriangles) tTriangles = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n\t\tif (tBones == null) {\r\n\t\t\tif (!tTriangles) tTriangles = tWeights;\r\n\t\t\tif (boneSlot.deformData)\r\n\t\t\t\ttTriangles = boneSlot.deformData;\r\n\t\t\tvar parentName: string;\r\n\t\t\tparentName = boneSlot.parent;\r\n\t\t\tif (boneList) {\r\n\t\t\t\tlen = boneList.length;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tif (boneList[i].name == parentName) {\r\n\t\t\t\t\t\tbone = boneList[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar tBoneMt: Matrix;\r\n\t\t\tif (bone) {\r\n\t\t\t\ttBoneMt = bone.resultMatrix;\r\n\t\t\t}\r\n\t\t\t//bone = boneSlot.parent;\r\n\r\n\r\n\t\t\tif (!tBoneMt) tBoneMt = PathConstraint._tempMt;\r\n\t\t\tvar x: number = tBoneMt.tx;\r\n\t\t\tvar y: number = tBoneMt.ty;\r\n\t\t\tvar a: number = tBoneMt.a, bb: number = tBoneMt.b, c: number = tBoneMt.c, d: number = tBoneMt.d;\r\n\t\t\tif (bone) d *= bone.d;\r\n\t\t\tfor (v = start, w = offset; w < count; v += 2, w += 2) {\r\n\t\t\t\tvx = tTriangles[v], vy = tTriangles[v + 1];\r\n\t\t\t\tworldVertices[w] = vx * a + vy * bb + x;\r\n\t\t\t\tworldVertices[w + 1] = -(vx * c + vy * d + y);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (i = 0; i < start; i += 2) {\r\n\t\t\tn = tBones[v];\r\n\t\t\tv += n + 1;\r\n\t\t\tskip += n;\r\n\t\t}\r\n\t\tvar skeletonBones: Bone[] = boneList;\r\n\t\tfor (w = offset, b = skip * 3; w < count; w += 2) {\r\n\t\t\twx = 0, wy = 0;\r\n\t\t\tn = tBones[v++];\r\n\t\t\tn += v;\r\n\t\t\tfor (; v < n; v++ , b += 3) {\r\n\t\t\t\ttMatrix = skeletonBones[tBones[v]].resultMatrix;\r\n\t\t\t\tvx = tWeights[b];\r\n\t\t\t\tvy = tWeights[b + 1];\r\n\t\t\t\tvar weight: number = tWeights[b + 2];\r\n\t\t\t\twx += (vx * tMatrix.a + vy * tMatrix.c + tMatrix.tx) * weight;\r\n\t\t\t\twy += (vx * tMatrix.b + vy * tMatrix.d + tMatrix.ty) * weight;\r\n\t\t\t}\r\n\t\t\tworldVertices[w] = wx;\r\n\t\t\tworldVertices[w + 1] = wy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 计算路径上的节点\r\n\t * @param\tboneSlot\r\n\t * @param\tboneList\r\n\t * @param\tgraphics\r\n\t * @param\tspacesCount\r\n\t * @param\ttangents\r\n\t * @param\tpercentPosition\r\n\t * @param\tpercentSpacing\r\n\t * @return\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate computeWorldPositions(boneSlot: BoneSlot, boneList: Bone[], graphics: Graphics, spacesCount: number, tangents: boolean, percentPosition: boolean, percentSpacing: boolean): number[] {\r\n\t\tvar tBones: any[] = boneSlot.currDisplayData.bones;\r\n\t\tvar tWeights: any[] = boneSlot.currDisplayData.weights;\r\n\t\tvar tTriangles: any[] = boneSlot.currDisplayData.triangles;\r\n\r\n\t\tvar tRx: number = 0;\r\n\t\tvar tRy: number = 0;\r\n\t\tvar nn: number = 0;\r\n\t\tvar tMatrix: Matrix;\r\n\t\tvar tX: number;\r\n\t\tvar tY: number;\r\n\t\tvar tB: number = 0;\r\n\t\tvar tWeight: number = 0;\r\n\t\tvar tVertices: number[] = [];\r\n\t\tvar i: number = 0, j: number = 0, n: number = 0;\r\n\t\tvar verticesLength: number = boneSlot.currDisplayData.verLen;\r\n\t\tvar target: BoneSlot = boneSlot;\r\n\t\tvar position: number = this.position;\r\n\t\tvar spaces: number[] = this._spaces;\r\n\t\tvar world: number[] = [];\r\n\t\tvar out: number[] = [];\r\n\t\tvar closed: boolean = false;\r\n\t\tvar curveCount: number = verticesLength / 6;\r\n\t\tvar prevCurve: number = -1;\r\n\t\tvar pathLength: number;\r\n\t\tvar o: number, curve: number;\r\n\t\tvar p: number;\r\n\t\tvar space: number;\r\n\t\tvar prev: number;\r\n\t\tvar length: number;\r\n\t\tif (!true) { //path.constantSpeed) {\r\n\t\t\tvar lengths: number[] = boneSlot.currDisplayData.lengths as number[];\r\n\t\t\tcurveCount -= closed ? 1 : 2;\r\n\t\t\tpathLength = lengths[curveCount];\r\n\t\t\tif (percentPosition)\r\n\t\t\t\tposition *= pathLength;\r\n\t\t\tif (percentSpacing) {\r\n\t\t\t\tfor (i = 0; i < spacesCount; i++)\r\n\t\t\t\t\tspaces[i] *= pathLength;\r\n\t\t\t}\r\n\t\t\tworld.length = 8;\r\n\t\t\t//world = this._world;\r\n\r\n\t\t\tfor (i = 0, o = 0, curve = 0; i < spacesCount; i++ , o += 3) {\r\n\t\t\t\tspace = spaces[i];\r\n\t\t\t\tposition += space;\r\n\t\t\t\tp = position;\r\n\r\n\t\t\t\tif (closed) {\r\n\t\t\t\t\tp %= pathLength;\r\n\t\t\t\t\tif (p < 0)\r\n\t\t\t\t\t\tp += pathLength;\r\n\t\t\t\t\tcurve = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (p < 0) {\r\n\t\t\t\t\tif (prevCurve != PathConstraint.BEFORE) {\r\n\t\t\t\t\t\tprevCurve = PathConstraint.BEFORE;\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, 2, 4, world, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addBeforePosition(p, world, 0, out, o);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse if (p > pathLength) {\r\n\t\t\t\t\tif (prevCurve != PathConstraint.AFTER) {\r\n\t\t\t\t\t\tprevCurve = PathConstraint.AFTER;\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, verticesLength - 6, 4, world, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addAfterPosition(p - pathLength, world, 0, out, o);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine curve containing position.\r\n\t\t\t\tfor (; ; curve++) {\r\n\t\t\t\t\tlength = lengths[curve];\r\n\t\t\t\t\tif (p > length)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tif (curve == 0)\r\n\t\t\t\t\t\tp /= length;\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tprev = lengths[curve - 1];\r\n\t\t\t\t\t\tp = (p - prev) / (length - prev);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (curve != prevCurve) {\r\n\t\t\t\t\tprevCurve = curve;\r\n\t\t\t\t\tif (closed && curve == curveCount) {\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, verticesLength - 4, 4, world, 0);\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, 0, 4, world, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, curve * 6 + 2, 8, world, 0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\t// World vertices.\r\n\t\tif (closed) {\r\n\t\t\tverticesLength += 2;\r\n\t\t\tworld[verticesLength - 2] = world[0];\r\n\t\t\tworld[verticesLength - 1] = world[1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcurveCount--;\r\n\t\t\tverticesLength -= 4;\r\n\t\t\tthis.computeWorldVertices2(boneSlot, boneList, 2, verticesLength, tVertices, 0);\r\n\t\t\tif (this._debugKey) {\r\n\t\t\t\tfor (i = 0; i < tVertices.length;) {\r\n\t\t\t\t\tgraphics.drawCircle(tVertices[i++], tVertices[i++], 10, \"#ff0000\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tworld = tVertices;\r\n\t\t}\r\n\r\n\t\t// Curve lengths.\r\n\t\tthis._curves.length = curveCount;\r\n\t\tvar curves: number[] = this._curves;\r\n\t\tpathLength = 0;\r\n\t\tvar x1: number = world[0], y1: number = world[1], cx1: number = 0, cy1: number = 0, cx2: number = 0, cy2: number = 0, x2: number = 0, y2: number = 0;\r\n\t\tvar tmpx: number, tmpy: number, dddfx: number, dddfy: number, ddfx: number, ddfy: number, dfx: number, dfy: number;\r\n\t\tvar w: number;\r\n\t\tfor (i = 0, w = 2; i < curveCount; i++ , w += 6) {\r\n\t\t\tcx1 = world[w];\r\n\t\t\tcy1 = world[w + 1];\r\n\t\t\tcx2 = world[w + 2];\r\n\t\t\tcy2 = world[w + 3];\r\n\t\t\tx2 = world[w + 4];\r\n\t\t\ty2 = world[w + 5];\r\n\t\t\ttmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\r\n\t\t\ttmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\r\n\t\t\tdddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\r\n\t\t\tdddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\r\n\t\t\tddfx = tmpx * 2 + dddfx;\r\n\t\t\tddfy = tmpy * 2 + dddfy;\r\n\t\t\tdfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\r\n\t\t\tdfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tdfx += ddfx;\r\n\t\t\tdfy += ddfy;\r\n\t\t\tddfx += dddfx;\r\n\t\t\tddfy += dddfy;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tdfx += ddfx;\r\n\t\t\tdfy += ddfy;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tdfx += ddfx + dddfx;\r\n\t\t\tdfy += ddfy + dddfy;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tcurves[i] = pathLength;\r\n\t\t\tx1 = x2;\r\n\t\t\ty1 = y2;\r\n\t\t}\r\n\t\tif (percentPosition)\r\n\t\t\tposition *= pathLength;\r\n\t\tif (percentSpacing) {\r\n\t\t\tfor (i = 0; i < spacesCount; i++)\r\n\t\t\t\tspaces[i] *= pathLength;\r\n\t\t}\r\n\r\n\t\tvar segments: number[] = this._segments;\r\n\t\tvar curveLength: number = 0;\r\n\t\tvar segment: number;\r\n\t\tfor (i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++ , o += 3) {\r\n\t\t\tspace = spaces[i];\r\n\t\t\tposition += space;\r\n\t\t\tp = position;\r\n\r\n\t\t\tif (closed) {\r\n\t\t\t\tp %= pathLength;\r\n\t\t\t\tif (p < 0)\r\n\t\t\t\t\tp += pathLength;\r\n\t\t\t\tcurve = 0;\r\n\t\t\t}\r\n\t\t\telse if (p < 0) {\r\n\t\t\t\tthis.addBeforePosition(p, world, 0, out, o);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (p > pathLength) {\r\n\t\t\t\tthis.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Determine curve containing position.\r\n\t\t\tfor (; ; curve++) {\r\n\t\t\t\tlength = curves[curve];\r\n\t\t\t\tif (p > length)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (curve == 0)\r\n\t\t\t\t\tp /= length;\r\n\t\t\t\telse {\r\n\t\t\t\t\tprev = curves[curve - 1];\r\n\t\t\t\t\tp = (p - prev) / (length - prev);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Curve segment lengths.\r\n\t\t\tif (curve != prevCurve) {\r\n\t\t\t\tprevCurve = curve;\r\n\t\t\t\tvar ii: number = curve * 6;\r\n\t\t\t\tx1 = world[ii];\r\n\t\t\t\ty1 = world[ii + 1];\r\n\t\t\t\tcx1 = world[ii + 2];\r\n\t\t\t\tcy1 = world[ii + 3];\r\n\t\t\t\tcx2 = world[ii + 4];\r\n\t\t\t\tcy2 = world[ii + 5];\r\n\t\t\t\tx2 = world[ii + 6];\r\n\t\t\t\ty2 = world[ii + 7];\r\n\t\t\t\ttmpx = (x1 - cx1 * 2 + cx2) * 0.03;\r\n\t\t\t\ttmpy = (y1 - cy1 * 2 + cy2) * 0.03;\r\n\t\t\t\tdddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\r\n\t\t\t\tdddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\r\n\t\t\t\tddfx = tmpx * 2 + dddfx;\r\n\t\t\t\tddfy = tmpy * 2 + dddfy;\r\n\t\t\t\tdfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\r\n\t\t\t\tdfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\r\n\t\t\t\tcurveLength = Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\tsegments[0] = curveLength;\r\n\t\t\t\tfor (ii = 1; ii < 8; ii++) {\r\n\t\t\t\t\tdfx += ddfx;\r\n\t\t\t\t\tdfy += ddfy;\r\n\t\t\t\t\tddfx += dddfx;\r\n\t\t\t\t\tddfy += dddfy;\r\n\t\t\t\t\tcurveLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\t\tsegments[ii] = curveLength;\r\n\t\t\t\t}\r\n\t\t\t\tdfx += ddfx;\r\n\t\t\t\tdfy += ddfy;\r\n\t\t\t\tcurveLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\tsegments[8] = curveLength;\r\n\t\t\t\tdfx += ddfx + dddfx;\r\n\t\t\t\tdfy += ddfy + dddfy;\r\n\t\t\t\tcurveLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\tsegments[9] = curveLength;\r\n\t\t\t\tsegment = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Weight by segment length.\r\n\t\t\tp *= curveLength;\r\n\t\t\tfor (; ; segment++) {\r\n\t\t\t\tlength = segments[segment];\r\n\t\t\t\tif (p > length)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (segment == 0)\r\n\t\t\t\t\tp /= length;\r\n\t\t\t\telse {\r\n\t\t\t\t\tprev = segments[segment - 1];\r\n\t\t\t\t\tp = segment + (p - prev) / (length - prev);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate addBeforePosition(p: number, temp: number[], i: number, out: number[], o: number): void {\r\n\t\tvar x1: number = temp[i], y1: number = temp[i + 1], dx: number = temp[i + 2] - x1, dy: number = temp[i + 3] - y1, r: number = Math.atan2(dy, dx);\r\n\t\tout[o] = x1 + p * Math.cos(r);\r\n\t\tout[o + 1] = y1 + p * Math.sin(r);\r\n\t\tout[o + 2] = r;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate addAfterPosition(p: number, temp: number[], i: number, out: number[], o: number): void {\r\n\t\tvar x1: number = temp[i + 2], y1: number = temp[i + 3], dx: number = x1 - temp[i], dy: number = y1 - temp[i + 1], r: number = Math.atan2(dy, dx);\r\n\t\tout[o] = x1 + p * Math.cos(r);\r\n\t\tout[o + 1] = y1 + p * Math.sin(r);\r\n\t\tout[o + 2] = r;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate addCurvePosition(p: number, x1: number, y1: number, cx1: number, cy1: number, cx2: number, cy2: number, x2: number, y2: number, out: number[], o: number, tangents: boolean): void {\r\n\t\tif (p == 0)\r\n\t\t\tp = 0.0001;\r\n\t\tvar tt: number = p * p, ttt: number = tt * p, u: number = 1 - p, uu: number = u * u, uuu: number = uu * u;\r\n\t\tvar ut: number = u * p, ut3: number = ut * 3, uut3: number = u * ut3, utt3: number = ut3 * p;\r\n\t\tvar x: number = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y: number = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\r\n\t\tout[o] = x;\r\n\t\tout[o + 1] = y;\r\n\t\tif (tangents) {\r\n\t\t\tout[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tout[o + 2] = 0;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { TfConstraintData } from \"./TfConstraintData\";\r\nimport { Bone } from \"./Bone\";\r\n/**\r\n * @internal\r\n */\r\nexport class TfConstraint {\r\n\t/**@internal */\r\n\tprivate _data: TfConstraintData;\r\n\t/**@internal */\r\n\tprivate _bones: Bone[];\r\n\ttarget: Bone;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\tscaleMix: number;\r\n\tshearMix: number;\r\n\t/**@internal */\r\n\tprivate _temp: number[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor(data: TfConstraintData, bones: Bone[]) {\r\n\t\tthis._data = data;\r\n\t\tif (this._bones == null) {\r\n\t\t\tthis._bones = [];\r\n\t\t}\r\n\t\tthis.target = bones[data.targetIndex];\r\n\t\tvar j: number, n: number;\r\n\t\tfor (j = 0, n = data.boneIndexs.length; j < n; j++) {\r\n\t\t\tthis._bones.push(bones[data.boneIndexs[j]]);\r\n\t\t}\r\n\t\tthis.rotateMix = data.rotateMix;\r\n\t\tthis.translateMix = data.translateMix;\r\n\t\tthis.scaleMix = data.scaleMix;\r\n\t\tthis.shearMix = data.shearMix;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tapply(): void {\r\n\t\tvar tTfBone: Bone;\r\n\t\tvar ta: number = this.target.resultMatrix.a, tb: number = this.target.resultMatrix.b, tc: number = this.target.resultMatrix.c, td: number = this.target.resultMatrix.d;\r\n\t\tfor (var j: number = 0, n: number = this._bones.length; j < n; j++) {\r\n\t\t\ttTfBone = this._bones[j];\r\n\t\t\tif (this.rotateMix > 0) {\r\n\t\t\t\tvar a: number = tTfBone.resultMatrix.a, b: number = tTfBone.resultMatrix.b, c: number = tTfBone.resultMatrix.c, d: number = tTfBone.resultMatrix.d;\r\n\t\t\t\tvar r: number = Math.atan2(tc, ta) - Math.atan2(c, a) + this._data.offsetRotation * Math.PI / 180;\r\n\t\t\t\tif (r > Math.PI)\r\n\t\t\t\t\tr -= Math.PI * 2;\r\n\t\t\t\telse if (r < -Math.PI) r += Math.PI * 2;\r\n\t\t\t\tr *= this.rotateMix;\r\n\t\t\t\tvar cos: number = Math.cos(r), sin: number = Math.sin(r);\r\n\t\t\t\ttTfBone.resultMatrix.a = cos * a - sin * c;\r\n\t\t\t\ttTfBone.resultMatrix.b = cos * b - sin * d;\r\n\t\t\t\ttTfBone.resultMatrix.c = sin * a + cos * c;\r\n\t\t\t\ttTfBone.resultMatrix.d = sin * b + cos * d;\r\n\t\t\t}\r\n\t\t\tif (this.translateMix) {\r\n\t\t\t\tthis._temp[0] = this._data.offsetX;\r\n\t\t\t\tthis._temp[1] = this._data.offsetY;\r\n\t\t\t\tthis.target.localToWorld(this._temp);\r\n\t\t\t\ttTfBone.resultMatrix.tx += (this._temp[0] - tTfBone.resultMatrix.tx) * this.translateMix;\r\n\t\t\t\ttTfBone.resultMatrix.ty += (this._temp[1] - tTfBone.resultMatrix.ty) * this.translateMix;\r\n\t\t\t\ttTfBone.updateChild();\r\n\t\t\t}\r\n\t\t\tif (this.scaleMix > 0) {\r\n\t\t\t\tvar bs: number = Math.sqrt(tTfBone.resultMatrix.a * tTfBone.resultMatrix.a + tTfBone.resultMatrix.c * tTfBone.resultMatrix.c);\r\n\t\t\t\tvar ts: number = Math.sqrt(ta * ta + tc * tc);\r\n\t\t\t\tvar s: number = bs > 0.00001 ? (bs + (ts - bs + this._data.offsetScaleX) * this.scaleMix) / bs : 0;\r\n\t\t\t\ttTfBone.resultMatrix.a *= s;\r\n\t\t\t\ttTfBone.resultMatrix.c *= s;\r\n\t\t\t\tbs = Math.sqrt(tTfBone.resultMatrix.b * tTfBone.resultMatrix.b + tTfBone.resultMatrix.d * tTfBone.resultMatrix.d);\r\n\t\t\t\tts = Math.sqrt(tb * tb + td * td);\r\n\t\t\t\ts = bs > 0.00001 ? (bs + (ts - bs + this._data.offsetScaleY) * this.scaleMix) / bs : 0;\r\n\t\t\t\ttTfBone.resultMatrix.b *= s;\r\n\t\t\t\ttTfBone.resultMatrix.d *= s;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.shearMix > 0) {\r\n\t\t\t\tb = tTfBone.resultMatrix.b, d = tTfBone.resultMatrix.d;\r\n\t\t\t\tvar by: number = Math.atan2(d, b);\r\n\t\t\t\tr = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(tTfBone.resultMatrix.c, tTfBone.resultMatrix.a));\r\n\t\t\t\tif (r > Math.PI)\r\n\t\t\t\t\tr -= Math.PI * 2;\r\n\t\t\t\telse if (r < -Math.PI) r += Math.PI * 2;\r\n\t\t\t\tr = by + (r + this._data.offsetShearY * Math.PI / 180) * this.shearMix;\r\n\t\t\t\ts = Math.sqrt(b * b + d * d);\r\n\t\t\t\ttTfBone.resultMatrix.b = Math.cos(r) * s;\r\n\t\t\t\ttTfBone.resultMatrix.d = Math.sin(r) * s;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { Bone } from \"./Bone\";\r\nimport { IkConstraint } from \"./IkConstraint\";\r\nimport { PathConstraint } from \"./PathConstraint\";\r\nimport { BoneSlot } from \"./BoneSlot\";\r\nimport { TfConstraint } from \"./TfConstraint\";\r\nimport { SkinData } from \"./SkinData\";\r\nimport { EventData } from \"./EventData\";\r\nimport { DrawOrderData } from \"./DrawOrderData\";\r\nimport { Transform } from \"./Transform\";\r\nimport { DeformAniData } from \"./DeformAniData\";\r\nimport { DeformSlotData } from \"./DeformSlotData\";\r\nimport { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\r\nimport { AnimationPlayer } from \"../AnimationPlayer\"\r\nimport { GraphicsAni } from \"../GraphicsAni\"\r\nimport { Sprite } from \"../../display/Sprite\";\r\nimport { Handler } from \"../../utils/Handler\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { SoundManager } from \"../../media/SoundManager\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Texture } from \"../../resource/Texture\";\r\nimport { IAniLib } from \"../AniLibPack\";\r\nimport { Templet } from \"../../ani/bone/Templet\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\n\r\n/**动画开始播放调度\r\n * @eventType Event.PLAYED\r\n * */\r\n/*[Event(name = \"played\", type = \"laya.events.Event.PLAYED\", desc = \"动画开始播放调度\")]*/\r\n/**动画停止播放调度\r\n * @eventType Event.STOPPED\r\n * */\r\n/*[Event(name = \"stopped\", type = \"laya.events.Event.STOPPED\", desc = \"动画停止播放调度\")]*/\r\n/**动画暂停播放调度\r\n * @eventType Event.PAUSED\r\n * */\r\n/*[Event(name = \"paused\", type = \"laya.events.Event.PAUSED\", desc = \"动画暂停播放调度\")]*/\r\n/**自定义事件。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event.LABEL\", desc = \"自定义事件\")]*/\r\n/**\r\n * 骨骼动画由<code>Templet</code>，<code>AnimationPlayer</code>，<code>Skeleton</code>三部分组成。\r\n */\r\nexport class Skeleton extends Sprite {\r\n\r\n    protected _source: string;\r\n    /**@internal */\r\n    protected _templet: Templet;//动画解析器\r\n    /** @internal */\r\n    protected _player: AnimationPlayer;//播放器\r\n    /** @internal */\r\n    protected _curOriginalData: Float32Array;//当前骨骼的偏移数据\r\n\r\n    /** @internal */\r\n    private _boneMatrixArray: any[] = [];//当前骨骼动画的最终结果数据\r\n    /** @internal */\r\n    private _lastTime: number = 0;//上次的帧时间\r\n    /** @internal */\r\n    private _currAniIndex: number = -1;\r\n    /** @internal */\r\n    private _pause: boolean = true;\r\n    /** @internal */\r\n    protected _aniClipIndex: number = -1;\r\n    /** @internal */\r\n    protected _clipIndex: number = -1;\r\n    /** @internal */\r\n    private _skinIndex: number = 0;\r\n    /** @internal */\r\n    private _skinName: string = \"default\";\r\n    /** @internal */\r\n    private _aniMode: number = 0;//\r\n    /** @internal 当前动画自己的缓冲区*/\r\n    private _graphicsCache: any[];\r\n    /** @internal */\r\n    private _boneSlotDic: any;\r\n    /** @internal */\r\n    private _bindBoneBoneSlotDic: any;\r\n    /** @internal */\r\n    private _boneSlotArray: any[];\r\n    /** @internal */\r\n    private _index: number = -1;\r\n    /** @internal */\r\n    private _total: number = -1;\r\n    /** @internal */\r\n    private _indexControl: boolean = false;\r\n    /** @internal */\r\n    private _complete: Handler;\r\n    /** @internal */\r\n    private _yReverseMatrix: Matrix;\r\n    /** @internal */\r\n    private _ikArr: any[];\r\n    /** @internal */\r\n    private _tfArr: any[];\r\n    /** @internal */\r\n    private _pathDic: any;\r\n    /** @internal */\r\n    private _rootBone: Bone;\r\n    /** @internal */\r\n    protected _boneList: Bone[];\r\n    /** @internal */\r\n    protected _aniSectionDic: any;\t\t// section 是每段数据(transform,slot,ik,path)的长度，这个是一个section的数据，表示每个clip的section数据\r\n    /** @internal */\r\n    private _eventIndex: number = 0;\r\n    /** @internal */\r\n    private _drawOrderIndex: number = 0;\r\n    /** @internal */\r\n    private _drawOrder: number[] = null;\r\n    /** @internal */\r\n    private _lastAniClipIndex: number = -1;\r\n    /** @internal */\r\n    private _lastUpdateAniClipIndex: number = -1;\r\n    /** @internal */\r\n    private _playAudio: boolean = true;\r\n    /** @internal */\r\n    private _soundChannelArr: any[] = [];\r\n\r\n    private _animationName: string = \"\";\r\n    private _loop: boolean = true;\r\n\r\n    /**\r\n     * 创建一个Skeleton对象\r\n\r\n     * @param\taniMode\t动画模式，0不支持换装，1、2支持换装\r\n     */\r\n    constructor(aniMode: number = 0) {\r\n        super();\r\n\r\n        this._aniMode = aniMode;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    * 得到帧索引\r\n    */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置帧索引\r\n     */\r\n    set index(value: number) {\r\n        if (this.player) {\r\n            this._index = value;\r\n            this._player.currentTime = this._index * 1000 / this._player.cacheFrameRate;\r\n            this._indexControl = true;\r\n            if (this._aniClipIndex < 0 || this._aniClipIndex >= this.getAnimNum()) {\r\n                this._aniClipIndex = 0;\r\n                this._currAniIndex = 0;\r\n                this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(this._currAniIndex));\r\n                this._drawOrder = null;\r\n                this._eventIndex = 0;\r\n            }\r\n            this._update(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 得到总帧数据\r\n     */\r\n    get total(): number {\r\n        if (this._templet && this._player) {\r\n            this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1000 * this._player.cacheFrameRate);\r\n        } else {\r\n            this._total = -1;\r\n        }\r\n        return this._total;\r\n    }\r\n\r\n    /**\r\n     * 得到播放器的引用\r\n     */\r\n    get player(): AnimationPlayer {\r\n        return this._player;\r\n    }\r\n\r\n    /**\r\n     * 皮肤名字\r\n     */\r\n    get skinName(): string {\r\n        return this._skinName;\r\n    }\r\n\r\n    set skinName(value: string) {\r\n        this._skinName = value;\r\n        if (this._templet)\r\n            this.showSkinByName(value);\r\n    }\r\n\r\n    /**\r\n     * 动画名字\r\n     */\r\n    get animationName(): string {\r\n        return this._animationName;\r\n    }\r\n\r\n    set animationName(value: string) {\r\n        this._animationName = value;\r\n        if (this._templet)\r\n            this.play(value, this._loop, true);\r\n    }\r\n\r\n    /**\r\n     * 是否循环\r\n     */\r\n    get loop(): boolean {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        this._loop = value;\r\n        if (this._templet)\r\n            this.play(this._animationName, this._loop, true);\r\n    }\r\n\r\n    /**\r\n     * 得到动画模板的引用\r\n     * @return templet.\r\n     */\r\n    get templet(): Templet {\r\n        return this._templet;\r\n    }\r\n\r\n    set templet(value: Templet) {\r\n        this.init(value);\r\n    }\r\n\r\n    /**\r\n     * 得到动画地址\r\n     * @return templet.\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 设置动画地址\r\n     */\r\n    set source(value: string) {\r\n        this._source = value;\r\n\r\n        if (value) {\r\n            ILaya.loader.load(value).then((templet: Templet) => {\r\n                if (templet && !templet.isCreateFromURL(this._source))\r\n                    return;\r\n\r\n                this.templet = templet;\r\n            });\r\n        }\r\n        else\r\n            this.templet = null;\r\n    }\r\n\r\n    /**\r\n     * 动画类型\r\n     * <table>\r\n     * \t<tr><th>模式</th><th>描述</th></tr>\r\n     * \t<tr>\r\n     * \t\t<td>0</td> <td>使用模板缓冲的数据，模板缓冲的数据，不允许修改（内存开销小，计算开销小，不支持换装）</td>\r\n     * \t</tr>\r\n     * \t<tr>\r\n     * \t\t<td>1</td> <td>使用动画自己的缓冲区，每个动画都会有自己的缓冲区，相当耗费内存\t（内存开销大，计算开销小，支持换装）</td>\r\n     * \t</tr>\r\n     * \t<tr>\r\n     * \t\t<td>2</td> <td>使用动态方式，去实时去画（内存开销小，计算开销大，支持换装,不建议使用）</td>\r\n     * </tr>\r\n     * </table>\r\n     */\r\n    get aniMode(): number {\r\n        return this._aniMode;\r\n    }\r\n\r\n    set aniMode(value: number) {\r\n        this._aniMode = value;\r\n    }\r\n\r\n    /**\r\n     * 初始化动画\r\n     * @param\ttemplet\t\t模板\r\n     */\r\n    protected init(templet: Templet): void {\r\n        if (this._templet) {\r\n            this.reset();\r\n            this.graphics.clear();\r\n        }\r\n\r\n        this._templet = templet;\r\n        if (!this._templet)\r\n            return;\r\n\r\n        if (this._aniMode == 1) { //使用动画自己的缓冲区\r\n            this._graphicsCache = [];\r\n            for (let i = 0, n = templet.getAnimationCount(); i < n; i++) {\r\n                this._graphicsCache.push([]);\r\n            }\r\n        }\r\n        this._yReverseMatrix = templet.yReverseMatrix;\r\n        this._templet._addReference(1);\r\n        this._player = new AnimationPlayer();\r\n\r\n        this._player.templet = templet;\r\n        this._player.play();\r\n        this._parseSrcBoneMatrix();\r\n        //骨骼数据\r\n        this._boneList = templet.mBoneArr;\r\n        this._rootBone = templet.mRootBone;\r\n        this._aniSectionDic = templet.aniSectionDic;\r\n        //ik作用器\r\n        if (templet.ikArr.length > 0) {\r\n            this._ikArr = [];\r\n            for (let i = 0, n = templet.ikArr.length; i < n; i++) {\r\n                this._ikArr.push(new IkConstraint(templet.ikArr[i], this._boneList));\r\n            }\r\n        }\r\n        //path作用器\r\n        if (templet.pathArr.length > 0) {\r\n            this._pathDic = {};\r\n            for (let i = 0, n = templet.pathArr.length; i < n; i++) {\r\n                let tPathData = templet.pathArr[i];\r\n                let tPathConstraint = new PathConstraint(tPathData, this._boneList);\r\n                let tBoneSlot = this._boneSlotDic[tPathData.name];\r\n                if (tBoneSlot) {\r\n                    tPathConstraint = new PathConstraint(tPathData, this._boneList);\r\n                    tPathConstraint.target = tBoneSlot;\r\n                }\r\n                this._pathDic[tPathData.name] = tPathConstraint;\r\n            }\r\n        }\r\n        //tf作用器\r\n        if (templet.tfArr.length > 0) {\r\n            this._tfArr = [];\r\n            for (let i = 0, n = templet.tfArr.length; i < n; i++) {\r\n                this._tfArr.push(new TfConstraint(templet.tfArr[i], this._boneList));\r\n            }\r\n        }\r\n        if (templet.skinDataArray.length > 0) {\r\n            this._skinIndex = this._templet.getSkinIndexByName(this._skinName);\r\n            if (this._skinIndex == -1)\r\n                this._skinIndex = 0;\r\n        }\r\n\r\n        this._player.on(Event.PLAYED, this, this._onPlay);\r\n        this._player.on(Event.STOPPED, this, this._onStop);\r\n        this._player.on(Event.PAUSED, this, this._onPause);\r\n\r\n        if (LayaEnv.isPlaying && this._animationName)\r\n            this.play(this._animationName, this._loop, true);\r\n    }\r\n\r\n    /**\r\n     * 通过加载直接创建动画\r\n     * @param\tpath\t\t要加载的动画文件路径\r\n     * @param\tcomplete\t加载完成的回调函数\r\n     */\r\n    load(path: string, complete?: Handler): void {\r\n        ILaya.loader.load(path).then((templet: Templet) => {\r\n            if (templet == null) return;\r\n\r\n            if (!templet.isCreateFromURL(path))\r\n                return;\r\n\r\n            this.init(templet);\r\n            this.play(0, true);\r\n\r\n            complete && complete.runWith(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 传递PLAY事件\r\n     */\r\n    private _onPlay(): void {\r\n        this.event(Event.PLAYED);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 传递STOP事件\r\n     */\r\n    private _onStop(): void {\r\n        //把没播的事件播完\r\n        let tEventAniArr: any[] = this._templet.eventAniArr;\r\n        let tEventArr: EventData[] = tEventAniArr[this._aniClipIndex];\r\n        if (tEventArr && this._eventIndex < tEventArr.length) {\r\n            for (; this._eventIndex < tEventArr.length; this._eventIndex++) {\r\n                let tEventData = tEventArr[this._eventIndex];\r\n                if (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\r\n                    this.event(Event.LABEL, tEventData);\r\n                }\r\n            }\r\n        }\r\n        //_eventIndex = 0;\r\n        this._drawOrder = null;\r\n        this.event(Event.STOPPED);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 传递PAUSE事件\r\n     */\r\n    private _onPause(): void {\r\n        this.event(Event.PAUSED);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 创建骨骼的矩阵，保存每次计算的最终结果\r\n     */\r\n    private _parseSrcBoneMatrix(): void {\r\n        let n = this._templet.srcBoneMatrixArr.length;\r\n        for (let i = 0; i < n; i++) {\r\n            this._boneMatrixArray.push(new Matrix());\r\n        }\r\n        if (this._aniMode == 0) {\r\n            this._boneSlotDic = this._templet.boneSlotDic;\r\n            this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic;\r\n            this._boneSlotArray = this._templet.boneSlotArray;\r\n        } else {\r\n            this._boneSlotDic = {};\r\n            this._bindBoneBoneSlotDic = {};\r\n            this._boneSlotArray = [];\r\n            let tArr: any[] = this._templet.boneSlotArray;\r\n            for (let i = 0, n = tArr.length; i < n; i++) {\r\n                let tBS = tArr[i];\r\n                let tBSArr = this._bindBoneBoneSlotDic[tBS.parent];\r\n                if (tBSArr == null) {\r\n                    this._bindBoneBoneSlotDic[tBS.parent] = tBSArr = [];\r\n                }\r\n                this._boneSlotDic[tBS.name] = tBS = tBS.copy();\r\n                tBSArr.push(tBS);\r\n                this._boneSlotArray.push(tBS);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param startTime \r\n     * @param endTime \r\n     * @param startIndex \r\n     */\r\n    private _emitMissedEvents(startTime: number, endTime: number, startIndex: number = 0): void {\r\n        let tEventAniArr: any[] = this._templet.eventAniArr;\r\n        let tEventArr: EventData[] = tEventAniArr[this._player.currentAnimationClipIndex];\r\n        if (tEventArr) {\r\n            let len = tEventArr.length;\r\n            for (let i = startIndex; i < len; i++) {\r\n                let tEventData = tEventArr[i];\r\n                if (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\r\n                    this.event(Event.LABEL, tEventData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新动画\r\n     * @internal\r\n     * @param\tautoKey true为正常更新，false为index手动更新\r\n     */\r\n    private _update(autoKey: boolean = true): void {\r\n        if (autoKey && this._pause) return;\r\n        if (autoKey && this._indexControl) {\r\n            return;\r\n        }\r\n        let tCurrTime: number = this.timer.currTimer;\r\n        let preIndex: number = this._player.currentKeyframeIndex;\r\n        let dTime: number = tCurrTime - this._lastTime;\r\n        if (autoKey) {\r\n            // player update，更新当前帧数，判断是否stop或者complete\r\n            this._player._update(dTime);\r\n        } else {\r\n            preIndex = -1;\r\n        }\r\n        this._lastTime = tCurrTime;\r\n        this._index = this._clipIndex = this._player.currentKeyframeIndex;\t// 当前所在帧\r\n        if (this._index < 0) return;\r\n        if (dTime > 0 && this._clipIndex == preIndex && this._lastUpdateAniClipIndex == this._aniClipIndex) {\r\n            return;\r\n        }\r\n        this._lastUpdateAniClipIndex = this._aniClipIndex;\r\n        if (preIndex > this._clipIndex && this._eventIndex != 0) {\r\n            this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex);\r\n            this._eventIndex = 0;\r\n        }\r\n\r\n        // 自定义事件的检查\r\n        let tEventArr: EventData[] = this._templet.eventAniArr[this._aniClipIndex];\r\n        if (tEventArr && this._eventIndex < tEventArr.length) {\r\n            let tEventData: EventData = tEventArr[this._eventIndex];\r\n            if (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\r\n                if (this._player.currentPlayTime >= tEventData.time) {\r\n                    this.event(Event.LABEL, tEventData);\r\n                    this._eventIndex++;\r\n                    if (this._playAudio && tEventData.audioValue && tEventData.audioValue !== \"null\" && tEventData.audioValue !== \"undefined\") {\r\n                        let channel = SoundManager.playSound((this._player.templet as any)._path + tEventData.audioValue, 1, Handler.create(this, this._onAniSoundStoped));\r\n                        SoundManager.playbackRate = this._player.playbackRate;\r\n                        channel && this._soundChannelArr.push(channel);\r\n                    }\r\n                }\r\n            } else if (tEventData.time < this._player.playStart && this._playAudio && tEventData.audioValue && tEventData.audioValue !== \"null\" && tEventData.audioValue !== \"undefined\") {\r\n                this._eventIndex++;\r\n                let channel = SoundManager.playSound((this._player.templet as any)._path + tEventData.audioValue, 1, Handler.create(this, this._onAniSoundStoped), null, (this._player.currentPlayTime - tEventData.time) / 1000);\r\n                SoundManager.playbackRate = this._player.playbackRate;\r\n                channel && this._soundChannelArr.push(channel);\r\n            } else {\r\n                this._eventIndex++;\r\n            }\r\n        }\r\n\r\n        if (this._aniMode == 0) {\r\n            // 从templet中找到缓存的这一帧的 graphics\r\n            let tGraphics = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex) || this._createGraphics();// _clipIndex是 AnimationPlayer计算出来的\r\n            if (tGraphics && this.graphics != tGraphics) {\r\n                this.graphics = tGraphics;\r\n            }\r\n        } else if (this._aniMode == 1) {\r\n            let tGraphics = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex) || this._createGraphics();\t// 与0的区别是从this get，上面是从templet get\r\n            if (tGraphics && this.graphics != tGraphics) {\r\n                this.graphics = tGraphics;\r\n            }\r\n        } else {\r\n            this._createGraphics();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 清掉播放完成的音频\r\n     * @param force 是否强制删掉所有的声音channel\r\n     */\r\n    private _onAniSoundStoped(force: boolean): void {\r\n        for (let len = this._soundChannelArr.length, i = 0; i < len; i++) {\r\n            let channel = this._soundChannelArr[i];\r\n            if (channel.isStopped || force) {\r\n                !channel.isStopped && channel.stop();\r\n                this._soundChannelArr.splice(i, 1);\r\n                // SoundManager.removeChannel(_channel); // TODO 是否需要? 去掉有什么好处? 是否还需要其他操作?\r\n                len--; i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 创建grahics图像. 并且保存到cache中\r\n     * @param\t_clipIndex 第几帧\r\n     */\r\n    protected _createGraphics(_clipIndex: number = -1): GraphicsAni {\r\n        if (_clipIndex == -1) _clipIndex = this._clipIndex;\r\n        let curTime: number = _clipIndex * this._player.cacheFrameRateInterval;\r\n        //处理绘制顺序\r\n        let tDrawOrderAniArr: any[] = this._templet.drawOrderAniArr;\r\n        // 当前动作的 drawOrderArray 信息\r\n        let tDrawOrderArr: DrawOrderData[] = tDrawOrderAniArr[this._aniClipIndex];\r\n        if (tDrawOrderArr && tDrawOrderArr.length > 0) {\r\n            // 选出当前所在帧的 drawOrderArray\r\n            this._drawOrderIndex = 0;\t// 从0开始\r\n            let tDrawOrderData = tDrawOrderArr[this._drawOrderIndex];\r\n            while (curTime >= tDrawOrderData.time) {\r\n                this._drawOrder = tDrawOrderData.drawOrder;\r\n                this._drawOrderIndex++;\t// 下一帧\r\n                if (this._drawOrderIndex >= tDrawOrderArr.length) {\r\n                    break;\r\n                }\r\n                tDrawOrderData = tDrawOrderArr[this._drawOrderIndex];\r\n            }\r\n        }\r\n\r\n        //要用的graphics\r\n        if (this._aniMode == 0 || this._aniMode == 1) {\t// 有缓存的情况\r\n            this.graphics = GraphicsAni.create();// new GraphicsAni();\r\n        } else { // 实时计算的情况。 每次都是新的数据，因此要把上一帧的清理一下\r\n            if (this.graphics instanceof GraphicsAni) {\r\n                this.graphics.clear();\r\n            } else {\r\n                this.graphics = GraphicsAni.create(); //new GraphicsAni();\r\n            }\r\n        }\r\n        let tGraphics: GraphicsAni = (<GraphicsAni>this.graphics);\r\n        //获取骨骼数据\r\n        let bones: any[] = this._templet.getNodes(this._aniClipIndex);\r\n        // 现在把帧数计算改成实时的，根据时间算，因此时间要求准确，不能再用curTime了。\r\n        // 用curTime可能会出一个bug就是没有到达最后一帧。例如最后两帧间隔很短\r\n        let stopped = this._player.state == 0;\r\n\r\n        this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, /*_templet._fullFrames[_aniClipIndex]*/null, _clipIndex, stopped ? (curTime + this._player.cacheFrameRateInterval) : curTime);\r\n        let tSectionArr: any[] = this._aniSectionDic[this._aniClipIndex];\r\n        //let tParentMatrix: Matrix;//父骨骼矩阵的引用\r\n        let tStartIndex: number = 0;\r\n        let i: number = 0, j: number = 0, k: number = 0, n: number = 0;\r\n        //对骨骼数据进行计算\r\n        let boneCount: number = this._templet.srcBoneMatrixArr.length;\r\n        let origDt: Float32Array = this._curOriginalData;\r\n        for (i = 0, n = tSectionArr[0]; i < boneCount; i++) {\r\n            let tSrcBone = this._boneList[i];\r\n            let resultTrans: Transform = tSrcBone.resultTransform;\r\n            let tParentTransform = this._templet.srcBoneMatrixArr[i];\r\n            resultTrans.scX = tParentTransform.scX * origDt[tStartIndex++];\r\n            resultTrans.skX = tParentTransform.skX + origDt[tStartIndex++];\r\n            resultTrans.skY = tParentTransform.skY + origDt[tStartIndex++];\r\n            resultTrans.scY = tParentTransform.scY * origDt[tStartIndex++];\r\n            resultTrans.x = tParentTransform.x + origDt[tStartIndex++];\r\n            resultTrans.y = tParentTransform.y + origDt[tStartIndex++];\r\n            if (this._templet.tMatrixDataLen === 8) {\r\n                resultTrans.skewX = tParentTransform.skewX + origDt[tStartIndex++];\r\n                resultTrans.skewY = tParentTransform.skewY + origDt[tStartIndex++];\r\n            }\r\n\r\n        }\r\n        //对插槽进行插值计算\r\n        let tSlotDic: any = {};\r\n        let tSlotAlphaDic: any = {};\r\n        for (n += tSectionArr[1]; i < n; i++) {\r\n            let tBoneData = bones[i];\r\n            tSlotDic[tBoneData.name] = origDt[tStartIndex++];\r\n            tSlotAlphaDic[tBoneData.name] = origDt[tStartIndex++];\t// 每一个slot的alpha?\r\n            //预留\r\n            tStartIndex += 4;\r\n        }\r\n        //ik\r\n        let tBendDirectionDic: any = {};\r\n        let tMixDic: any = {};\r\n        for (n += tSectionArr[2]; i < n; i++) {\r\n            let tBoneData = bones[i];\r\n            tBendDirectionDic[tBoneData.name] = origDt[tStartIndex++];\r\n            tMixDic[tBoneData.name] = origDt[tStartIndex++];\r\n            //预留\r\n            tStartIndex += 4;\r\n        }\r\n        //path\r\n        if (this._pathDic) {\r\n            for (n += tSectionArr[3]; i < n; i++) {\r\n                let tBoneData = bones[i];\r\n                let tPathConstraint = this._pathDic[tBoneData.name];\r\n                if (tPathConstraint) {\r\n                    let tByte: Byte = new Byte(tBoneData.extenData);\r\n                    switch (tByte.getByte()) {\r\n                        case 1://position\r\n                            tPathConstraint.position = origDt[tStartIndex++];\r\n                            break;\r\n                        case 2://spacing\r\n                            tPathConstraint.spacing = origDt[tStartIndex++];\r\n                            break;\r\n                        case 3://mix\r\n                            tPathConstraint.rotateMix = origDt[tStartIndex++];\r\n                            tPathConstraint.translateMix = origDt[tStartIndex++];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 从root开始级联矩阵\r\n        this._rootBone.update(this._yReverseMatrix || Matrix.TEMP.identity());\r\n\r\n        //刷新IK作用器\r\n        if (this._ikArr) {\r\n            let tIkConstraint: IkConstraint;\r\n            for (i = 0, n = this._ikArr.length; i < n; i++) {\r\n                tIkConstraint = this._ikArr[i];\r\n                if (tIkConstraint.name in tBendDirectionDic) {\r\n                    tIkConstraint.bendDirection = tBendDirectionDic[tIkConstraint.name];\r\n                }\r\n                if (tIkConstraint.name in tMixDic) {\r\n                    tIkConstraint.mix = tMixDic[tIkConstraint.name]\r\n                }\r\n                tIkConstraint.apply();\r\n                //tIkConstraint.updatePos(this.x, this.y);\r\n            }\r\n        }\r\n        //刷新PATH作用器\r\n        if (this._pathDic) {\r\n            for (let tPathStr in this._pathDic) {\r\n                let tPathConstraint = this._pathDic[tPathStr];\r\n                tPathConstraint.apply(this._boneList, tGraphics);\r\n            }\r\n        }\r\n        //刷新transform作用器\r\n        if (this._tfArr) {\r\n            for (i = 0, k = this._tfArr.length; i < k; i++) {\r\n                let tTfConstraint = this._tfArr[i];\r\n                tTfConstraint.apply();\r\n            }\r\n        }\r\n\r\n        for (i = 0, k = this._boneList.length; i < k; i++) {\r\n            let tSrcBone = this._boneList[i];\r\n            let tDBBoneSlotArr = this._bindBoneBoneSlotDic[tSrcBone.name];\r\n            tSrcBone.resultMatrix.copyTo(this._boneMatrixArray[i]);\r\n            if (tDBBoneSlotArr) {\r\n                for (j = 0, n = tDBBoneSlotArr.length; j < n; j++) {\r\n                    let tDBBoneSlot = tDBBoneSlotArr[j];\r\n                    if (tDBBoneSlot) {\r\n                        tDBBoneSlot.setParentMatrix(tSrcBone.resultMatrix);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let tDeformDic: any = {};\r\n        //变形动画作用器\r\n        let tDeformAniArr: any[] = this._templet.deformAniArr;\r\n        if (tDeformAniArr && tDeformAniArr.length > 0) {\r\n            if (this._lastAniClipIndex != this._aniClipIndex) {\r\n                this._lastAniClipIndex = this._aniClipIndex;\r\n                for (i = 0, n = this._boneSlotArray.length; i < n; i++) {\r\n                    let tDBBoneSlot = this._boneSlotArray[i];\r\n                    tDBBoneSlot.deformData = null;\r\n                }\r\n            }\r\n            let tSkinDeformAni: any = tDeformAniArr[this._aniClipIndex];\r\n            //使用default数据\r\n            let tDeformAniData = (<DeformAniData>(tSkinDeformAni[\"default\"]));\r\n            this._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\r\n\r\n            //使用其他皮肤的数据\r\n            let tSkin: string;\r\n            for (tSkin in tSkinDeformAni) {\r\n                if (tSkin != \"default\" && tSkin != this._skinName) {\r\n                    tDeformAniData = (<DeformAniData>tSkinDeformAni[tSkin]);\r\n                    this._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\r\n                }\r\n            }\r\n\r\n            //使用自己皮肤的数据\r\n            tDeformAniData = (<DeformAniData>(tSkinDeformAni[this._skinName]));\r\n            this._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\r\n        }\r\n\r\n        //_rootBone.updateDraw(this.x,this.y);\r\n        //把动画按插槽顺序画出来\r\n        if (this._drawOrder) {\r\n            for (i = 0, n = this._drawOrder.length; i < n; i++) {\r\n                let tDBBoneSlot = this._boneSlotArray[this._drawOrder[i]];\r\n                let tSlotData2 = tSlotDic[tDBBoneSlot.name];\r\n                let tSlotData3 = tSlotAlphaDic[tDBBoneSlot.name];\r\n                if (!isNaN(tSlotData3)) {\t// 如果alpha有值的话\r\n                    //tGraphics.save();\r\n                    //tGraphics.alpha(tSlotData3);\r\n                }\r\n                if (!isNaN(tSlotData2) && tSlotData2 != -2) {\r\n\r\n                    if (this._templet.attachmentNames) {\r\n                        tDBBoneSlot.showDisplayByName(this._templet.attachmentNames[tSlotData2]);\r\n                    } else {\r\n                        tDBBoneSlot.showDisplayByIndex(tSlotData2);\r\n                    }\r\n                }\r\n                if (tDeformDic[this._drawOrder[i]]) {\r\n                    let tObject = tDeformDic[this._drawOrder[i]];\r\n                    if (tDBBoneSlot.currDisplayData && tObject[tDBBoneSlot.currDisplayData.attachmentName]) {\r\n                        tDBBoneSlot.deformData = tObject[tDBBoneSlot.currDisplayData.attachmentName];\r\n                    } else {\r\n                        tDBBoneSlot.deformData = null;\r\n                    }\r\n                } else {\r\n                    tDBBoneSlot.deformData = null;\r\n                }\r\n                if (!isNaN(tSlotData3)) {\r\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2, tSlotData3);\r\n                } else {\r\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2);\r\n                }\r\n                if (!isNaN(tSlotData3)) {\r\n                    //tGraphics.restore();\r\n                }\r\n            }\r\n        } else {\r\n            for (i = 0, n = this._boneSlotArray.length; i < n; i++) {\r\n                let tDBBoneSlot = this._boneSlotArray[i];\r\n                let tSlotData2 = tSlotDic[tDBBoneSlot.name];\r\n                let tSlotData3 = tSlotAlphaDic[tDBBoneSlot.name];\r\n                if (!isNaN(tSlotData3)) {\r\n                    //tGraphics.save();\r\n                    //tGraphics.alpha(tSlotData3);\r\n                }\r\n                if (!isNaN(tSlotData2) && tSlotData2 != -2) {\r\n                    if (this._templet.attachmentNames) {\r\n                        tDBBoneSlot.showDisplayByName(this._templet.attachmentNames[tSlotData2]);\r\n                    } else {\r\n                        tDBBoneSlot.showDisplayByIndex(tSlotData2);\r\n                    }\r\n                }\r\n                if (tDeformDic[i]) {\r\n                    let tObject = tDeformDic[i];\r\n                    if (tDBBoneSlot.currDisplayData && tObject[tDBBoneSlot.currDisplayData.attachmentName]) {\r\n                        tDBBoneSlot.deformData = tObject[tDBBoneSlot.currDisplayData.attachmentName];\r\n                    } else {\r\n                        tDBBoneSlot.deformData = null;\r\n                    }\r\n                } else {\r\n                    tDBBoneSlot.deformData = null;\r\n                }\r\n                if (!isNaN(tSlotData3)) {\r\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2, tSlotData3);\r\n                } else {\r\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2);\r\n                }\r\n                if (!isNaN(tSlotData3)) {\r\n                    //tGraphics.restore();\r\n                }\r\n            }\r\n        }\r\n        if (this._aniMode == 0) {\r\n            this._templet.setGrahicsDataWithCache(this._aniClipIndex, _clipIndex, tGraphics);\r\n            this._checkIsAllParsed(this._aniClipIndex);\r\n        } else if (this._aniMode == 1) {\r\n            this._setGrahicsDataWithCache(this._aniClipIndex, _clipIndex, tGraphics);\r\n        }\r\n        return tGraphics;\r\n    }\r\n\r\n    private _checkIsAllParsed(_aniClipIndex: number): void {\r\n        let len = Math.floor(0.01 + this._templet.getAniDuration(_aniClipIndex) / 1000 * this._player.cacheFrameRate);\r\n        for (let i = 0; i < len; i++) {\r\n            if (!this._templet.getGrahicsDataWithCache(_aniClipIndex, i)) return;\r\n        }\r\n        if (!this._templet.getGrahicsDataWithCache(_aniClipIndex, len)) {\r\n            this._createGraphics(len);\r\n            return;\r\n        }\r\n        this._templet.deleteAniData(_aniClipIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置deform数据\r\n     * @internal\r\n     * @param\ttDeformAniData\r\n     * @param\ttDeformDic\r\n     * @param\t_boneSlotArray\r\n     * @param\tcurTime\r\n     */\r\n    private _setDeform(tDeformAniData: DeformAniData, tDeformDic: any, _boneSlotArray: any[], curTime: number): void {\r\n        if (!tDeformAniData) return;\r\n        let tDeformSlotData: DeformSlotData;\r\n        let tDeformSlotDisplayData: DeformSlotDisplayData;\r\n        let tDBBoneSlot: BoneSlot;\r\n        if (tDeformAniData) {\r\n            for (let i = 0, n = tDeformAniData.deformSlotDataList.length; i < n; i++) {\r\n                tDeformSlotData = tDeformAniData.deformSlotDataList[i];\r\n                for (let j = 0; j < tDeformSlotData.deformSlotDisplayList.length; j++) {\r\n                    tDeformSlotDisplayData = tDeformSlotData.deformSlotDisplayList[j];\r\n                    tDBBoneSlot = _boneSlotArray[tDeformSlotDisplayData.slotIndex];\r\n                    tDeformSlotDisplayData.apply(curTime, tDBBoneSlot);\r\n                    if (!tDeformDic[tDeformSlotDisplayData.slotIndex]) {\r\n                        tDeformDic[tDeformSlotDisplayData.slotIndex] = {};\r\n                    }\r\n                    tDeformDic[tDeformSlotDisplayData.slotIndex][tDeformSlotDisplayData.attachment] = tDeformSlotDisplayData.deformData;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*******************************************定义接口*************************************************/\r\n    /**\r\n     * 得到当前动画的数量\r\n     * @return 当前动画的数量\r\n     */\r\n    getAnimNum(): number {\r\n        return this._templet.getAnimationCount();\r\n    }\r\n\r\n    /**\r\n     * 得到指定动画的名字\r\n     * @param\tindex\t动画的索引\r\n     */\r\n    getAniNameByIndex(index: number): string {\r\n        return this._templet.getAniNameByIndex(index);\r\n    }\r\n\r\n    /**\r\n     * 通过名字得到插槽的引用\r\n     * @param\tname\t动画的名字\r\n     * @return 插槽的引用\r\n     */\r\n    getSlotByName(name: string): BoneSlot {\r\n        return this._boneSlotDic[name];\r\n    }\r\n\r\n    /**\r\n     * 通过名字显示一套皮肤\r\n     * @param\tname\t皮肤的名字\r\n     * @param\tfreshSlotIndex\t是否将插槽纹理重置到初始化状态\r\n     */\r\n    showSkinByName(name: string, freshSlotIndex: boolean = true): void {\r\n        this.showSkinByIndex(this._templet.getSkinIndexByName(name), freshSlotIndex);\r\n    }\r\n\r\n    /**\r\n     * 通过索引显示一套皮肤\r\n     * @param\tskinIndex\t皮肤索引\r\n     * @param\tfreshSlotIndex\t是否将插槽纹理重置到初始化状态\r\n     */\r\n    showSkinByIndex(skinIndex: number, freshSlotIndex: boolean = true): void {\r\n        for (let i = 0; i < this._boneSlotArray.length; i++) {\r\n            ((<BoneSlot>this._boneSlotArray[i])).showSlotData(null, freshSlotIndex);\r\n        }\r\n        if (this._templet.showSkinByIndex(this._boneSlotDic, skinIndex, freshSlotIndex)) {\r\n            let tSkinData: SkinData = this._templet.skinDataArray[skinIndex];\r\n            this._skinName = tSkinData.name;\r\n        }\r\n        this._clearCache();\r\n    }\r\n\r\n    /**\r\n     * 设置某插槽的皮肤\r\n     * @param\tslotName\t插槽名称\r\n     * @param\tindex\t插糟皮肤的索引\r\n     */\r\n    showSlotSkinByIndex(slotName: string, index: number): void {\r\n        if (this._aniMode == 0) return;\r\n        let tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n        if (tBoneSlot) {\r\n            tBoneSlot.showDisplayByIndex(index);\r\n        }\r\n        this._clearCache();\r\n    }\r\n\r\n    /**\r\n     * 设置某插槽的皮肤\r\n     * @param\tslotName\t插槽名称\r\n     * @param\tname\t皮肤名称\r\n     */\r\n    showSlotSkinByName(slotName: string, name: string): void {\r\n        if (this._aniMode == 0) return;\r\n        let tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n        if (tBoneSlot) {\r\n            tBoneSlot.showDisplayByName(name);\r\n        }\r\n        this._clearCache();\r\n    }\r\n\r\n    /**\r\n     * 替换插槽贴图名\r\n     * @param\tslotName 插槽名称\r\n     * @param\toldName 要替换的贴图名\r\n     * @param\tnewName 替换后的贴图名\r\n     */\r\n    replaceSlotSkinName(slotName: string, oldName: string, newName: string): void {\r\n        if (this._aniMode == 0) return;\r\n        let tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n        if (tBoneSlot) {\r\n            tBoneSlot.replaceDisplayByName(oldName, newName);\r\n        }\r\n        this._clearCache();\r\n    }\r\n\r\n    /**\r\n     * 替换插槽的贴图索引\r\n     * @param\tslotName 插槽名称\r\n     * @param\toldIndex 要替换的索引\r\n     * @param\tnewIndex 替换后的索引\r\n     */\r\n    replaceSlotSkinByIndex(slotName: string, oldIndex: number, newIndex: number): void {\r\n        if (this._aniMode == 0) return;\r\n        let tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n        if (tBoneSlot) {\r\n            tBoneSlot.replaceDisplayByIndex(oldIndex, newIndex);\r\n        }\r\n        this._clearCache();\r\n    }\r\n\r\n    /**\r\n     * 设置自定义皮肤\r\n     * @param\tname\t\t插糟的名字\r\n     * @param\ttexture\t\t自定义的纹理\r\n     */\r\n    setSlotSkin(slotName: string, texture: Texture): void {\r\n        if (this._aniMode == 0) return;\r\n        let tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n        if (tBoneSlot) {\r\n            tBoneSlot.replaceSkin(texture);\r\n        }\r\n        this._clearCache();\r\n    }\r\n\r\n    /**\r\n     * 换装的时候，需要清一下缓冲区\r\n     * @internal\r\n     */\r\n    private _clearCache(): void {\r\n        if (this._aniMode == 1) {\r\n            for (let i = 0, n = this._graphicsCache.length; i < n; i++) {\r\n                for (let j = 0, len = this._graphicsCache[i].length; j < len; j++) {\r\n                    var gp: GraphicsAni = this._graphicsCache[i][j];\r\n                    if (gp && gp != this.graphics) {\r\n                        GraphicsAni.recycle(gp);\r\n                    }\r\n                }\r\n                this._graphicsCache[i].length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     *\r\n     * @param\tnameOrIndex\t动画名字或者索引\r\n     * @param\tloop\t\t是否循环播放\r\n     * @param\tforce\t\tfalse,如果要播的动画跟上一个相同就不生效,true,强制生效\r\n     * @param\tstart\t\t起始时间\r\n     * @param\tend\t\t\t结束时间\r\n     * @param\tfreshSkin\t是否刷新皮肤数据\r\n     * @param\tplayAudio\t是否播放音频\r\n     */\r\n    play(nameOrIndex: any, loop: boolean, force: boolean = true, start: number = 0, end: number = 0, freshSkin: boolean = true, playAudio: boolean = true): void {\r\n        this._playAudio = playAudio;\r\n        this._indexControl = false;\r\n        let index: number = -1;\r\n        var duration: number;\r\n        if (loop) {\r\n            duration = 2147483647;//int.MAX_VALUE;\r\n        } else {\r\n            duration = 0;\r\n        }\r\n        if (typeof (nameOrIndex) == 'string') {\r\n            for (let i = 0, n = this._templet.getAnimationCount(); i < n; i++) {\r\n                let animation: any = this._templet.getAnimation(i);\r\n                if (animation && nameOrIndex == animation.name) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            index = nameOrIndex;\r\n        }\r\n        if (index > -1 && index < this.getAnimNum()) {\r\n            this._aniClipIndex = index;\r\n            if (force || this._pause || this._currAniIndex != index) {\r\n                this._currAniIndex = index;\r\n                this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(index));\r\n                this._drawOrder = null;\r\n                this._eventIndex = 0;\r\n                this._player.play(index, this._player.playbackRate, duration, start, end);\r\n                if (freshSkin)\r\n                    this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex);\r\n                if (this._pause) {\r\n                    this._pause = false;\r\n                    this._lastTime = ILaya.Browser.now();\r\n                    this.timer.frameLoop(1, this, this._update, null, true);\r\n                }\r\n                this._update();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止动画\r\n     */\r\n    stop(): void {\r\n        if (!this._pause) {\r\n            this._pause = true;\r\n            if (this._player) {\r\n                this._player.stop(true);\r\n            }\r\n            if (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n                this._onAniSoundStoped(true);\r\n            }\r\n            this.timer.clear(this, this._update);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置动画播放速率\r\n     * @param\tvalue\t1为标准速率\r\n     */\r\n    playbackRate(value: number): void {\r\n        if (this._player) {\r\n            this._player.playbackRate = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停动画的播放\r\n     */\r\n    paused(): void {\r\n        if (!this._pause) {\r\n            this._pause = true;\r\n            if (this._player) {\r\n                this._player.paused = true;\r\n            }\r\n            if (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n                for (let len = this._soundChannelArr.length, i = 0; i < len; i++) {\r\n                    let channel = this._soundChannelArr[i];\r\n                    if (!channel.isStopped) {\r\n                        channel.pause();\r\n                    }\r\n\r\n                }\r\n            }\r\n            this.timer.clear(this, this._update);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 恢复动画的播放\r\n     */\r\n    resume(): void {\r\n        this._indexControl = false;\r\n        if (this._pause) {\r\n            this._pause = false;\r\n            if (this._player) {\r\n                this._player.paused = false;\r\n            }\r\n            if (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n                for (let len = this._soundChannelArr.length, i = 0; i < len; i++) {\r\n                    let channel = this._soundChannelArr[i];\r\n                    if ((channel as any).audioBuffer) {\r\n                        channel.resume();\r\n                    }\r\n                }\r\n            }\r\n            this._lastTime = ILaya.Browser.now();\r\n            this.timer.frameLoop(1, this, this._update, null, true);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 得到缓冲数据\r\n     * @param\taniIndex\r\n     * @param\tframeIndex\r\n     * @return\r\n     */\r\n    private _getGrahicsDataWithCache(aniIndex: number, frameIndex: number): Graphics {\r\n        return this._graphicsCache[aniIndex][frameIndex];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 保存缓冲grahpics\r\n     * @param\taniIndex\r\n     * @param\tframeIndex\r\n     * @param\tgraphics\r\n     */\r\n    private _setGrahicsDataWithCache(aniIndex: number, frameIndex: number, graphics: Graphics): void {\r\n        this._graphicsCache[aniIndex][frameIndex] = graphics;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private reset() {\r\n        this._templet._removeReference();\r\n        this._templet = null;\r\n        this._player.offAll();\r\n        this._player = null;\r\n        this._curOriginalData = null;\r\n        this._boneMatrixArray.length = 0;\r\n        this._ikArr = null;\r\n        this._pathDic = null;\r\n        this._tfArr = null;\r\n        this._lastTime = 0;\r\n        this._currAniIndex = -1;\r\n        this._clipIndex = -1;\r\n        this._indexControl = false;\r\n        this._eventIndex = 0;\r\n        this._drawOrderIndex = 0;\r\n        this._drawOrder = null;\r\n        this._lastAniClipIndex = -1;\r\n        this._lastUpdateAniClipIndex = -1;\r\n        this._pause = true;\r\n        this.timer.clear(this, this._update);\r\n        if (this._soundChannelArr.length > 0)\r\n            this._onAniSoundStoped(true);\r\n    }\r\n\r\n    /**\r\n     * 销毁当前动画\r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        if (this._templet)\r\n            this.reset();\r\n    }\r\n}\r\n\r\nIAniLib.Skeleton = Skeleton;","import { Matrix } from \"../../maths/Matrix\";\r\n\r\nexport class Transform {\r\n\r\n\t/**水平方向旋转角度 */\r\n\tskX: number = 0;\t\t// 旋转？\r\n\t/**垂直方向旋转角度 */\r\n\tskY: number = 0;\t\t// 不知道干什么的\r\n\t/**水平方向缩放 */\r\n\tscX: number = 1;\t\t// 缩放\r\n\t/**垂直方向缩放 */\r\n\tscY: number = 1;\r\n\t/**水平方向偏移 */\r\n\tx: number = 0;\t\t// 偏移\r\n\t/**垂直方向偏移 */\r\n\ty: number = 0;\r\n\t/**水平方向倾斜角度 */\r\n\tskewX: number = 0;\t// skew\r\n\t/**垂直方向倾斜角度 */\r\n\tskewY: number = 0;\r\n\tprivate mMatrix: Matrix;\r\n\r\n\t/**\r\n\t * 初始化数据\r\n\t * @param data \r\n\t */\r\n\t//TODO:coverage\r\n\tinitData(data: any): void {\r\n\t\tif (data.x != undefined) {\r\n\t\t\tthis.x = data.x;\r\n\t\t}\r\n\t\tif (data.y != undefined) {\r\n\t\t\tthis.y = data.y;\r\n\t\t}\r\n\t\tif (data.skX != undefined) {\r\n\t\t\tthis.skX = data.skX;\r\n\t\t}\r\n\t\tif (data.skY != undefined) {\r\n\t\t\tthis.skY = data.skY;\r\n\t\t}\r\n\t\tif (data.scX != undefined) {\r\n\t\t\tthis.scX = data.scX;\r\n\t\t}\r\n\t\tif (data.scY != undefined) {\r\n\t\t\tthis.scY = data.scY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前矩阵\r\n\t */\r\n\t//TODO:coverage\r\n\tgetMatrix(): Matrix {\r\n\t\tvar tMatrix: Matrix;\r\n\t\tif (this.mMatrix) {\r\n\t\t\ttMatrix = this.mMatrix;\r\n\t\t} else {\r\n\t\t\ttMatrix = this.mMatrix = new Matrix();\r\n\t\t}\r\n\r\n\t\ttMatrix.identity();\r\n\t\ttMatrix.scale(this.scX, this.scY);\r\n\t\tif (this.skewX || this.skewY) {\r\n\t\t\tthis.skew(tMatrix, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180);\r\n\t\t}\r\n\t\ttMatrix.rotate(this.skX * Math.PI / 180);\r\n\t\ttMatrix.translate(this.x, this.y);\r\n\r\n\t\treturn tMatrix;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取倾斜矩阵\r\n\t * @param m \r\n\t * @param x \r\n\t * @param y \r\n\t */\r\n\t//TODO:coverage\r\n\tskew(m: Matrix, x: number, y: number): Matrix {\r\n\t\tvar sinX: number = Math.sin(y);\r\n\t\tvar cosX: number = Math.cos(y);\r\n\t\tvar sinY: number = Math.sin(x);\r\n\t\tvar cosY: number = Math.cos(x);\r\n\r\n\t\tm.setTo(m.a * cosY - m.b * sinX,\r\n\t\t\tm.a * sinY + m.b * cosX,\r\n\t\t\tm.c * cosY - m.d * sinX,\r\n\t\t\tm.c * sinY + m.d * cosX,\r\n\t\t\tm.tx * cosY - m.ty * sinX,\r\n\t\t\tm.tx * sinY + m.ty * cosX);\r\n\t\treturn m;\r\n\t}\r\n}\r\n\r\n","import { Transform } from \"./Transform\";\r\nimport { Sprite } from \"../../display/Sprite\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class Bone {\r\n    static ShowBones: any = {};\r\n    name: string;\r\n    root: Bone;\r\n    parentBone: Bone;\r\n    length: number = 10;\r\n    transform: Transform;\r\n    resultTransform: Transform = new Transform();\r\n    resultMatrix: Matrix = new Matrix();\r\n    inheritScale: boolean = true;\r\n    inheritRotation: boolean = true;\r\n\r\n    rotation: number;\r\n    resultRotation: number;\r\n    d: number = -1;\r\n\r\n    /**@internal */\r\n    private _tempMatrix: Matrix;\r\n    /**@internal */\r\n    private _children: Bone[] = [];\r\n    /**@internal */\r\n    private _sprite: Sprite;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    setTempMatrix(matrix: Matrix): void {\r\n        this._tempMatrix = matrix;\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.setTempMatrix(this._tempMatrix);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    update(pMatrix: Matrix|null = null): void {\r\n        this.rotation = this.transform.skX;\r\n        var tResultMatrix: Matrix;\r\n        if (pMatrix) {\r\n            tResultMatrix = this.resultTransform.getMatrix();\r\n            Matrix.mul(tResultMatrix, pMatrix, this.resultMatrix);\r\n            this.resultRotation = this.rotation;\r\n        }\r\n        else {\r\n            this.resultRotation = this.rotation + this.parentBone.resultRotation;\r\n            if (this.parentBone) {\r\n                if (this.inheritRotation && this.inheritScale) {\r\n                    tResultMatrix = this.resultTransform.getMatrix();\r\n                    Matrix.mul(tResultMatrix, this.parentBone.resultMatrix, this.resultMatrix);\r\n                }\r\n                else {\r\n                    var parent: Bone = this.parentBone;\r\n                    var tAngle: number;\r\n                    var cos: number;\r\n                    var sin: number;\r\n                    var tParentMatrix: Matrix = this.parentBone.resultMatrix;\r\n\r\n                    //var worldX:Number = tParentMatrix.a * transform.x + tParentMatrix.c * transform.y + tParentMatrix.tx;\r\n                    //var worldY:Number = tParentMatrix.b * transform.x + tParentMatrix.d * transform.y + tParentMatrix.ty;\r\n\r\n                    //out.tx = ba * atx + bc * aty + btx;\r\n                    //out.ty = bb * atx + bd * aty + bty;\r\n                    tResultMatrix = this.resultTransform.getMatrix();\r\n                    var worldX: number = tParentMatrix.a * tResultMatrix.tx + tParentMatrix.c * tResultMatrix.ty + tParentMatrix.tx;\r\n                    var worldY: number = tParentMatrix.b * tResultMatrix.tx + tParentMatrix.d * tResultMatrix.ty + tParentMatrix.ty;\r\n\r\n                    var tTestMatrix: Matrix = new Matrix();\r\n                    if (this.inheritRotation) {\r\n                        tAngle = Math.atan2(parent.resultMatrix.b, parent.resultMatrix.a);\r\n                        cos = Math.cos(tAngle), sin = Math.sin(tAngle);\r\n                        tTestMatrix.setTo(cos, sin, -sin, cos, 0, 0);\r\n                        Matrix.mul(this._tempMatrix, tTestMatrix, Matrix.TEMP);\r\n                        Matrix.TEMP.copyTo(tTestMatrix);\r\n                        tResultMatrix = this.resultTransform.getMatrix();\r\n                        Matrix.mul(tResultMatrix, tTestMatrix, this.resultMatrix);\r\n                        if (this.resultTransform.scX * this.resultTransform.scY < 0) {\r\n                            this.resultMatrix.rotate(Math.PI * 0.5);\r\n                        }\r\n                        this.resultMatrix.tx = worldX;\r\n                        this.resultMatrix.ty = worldY;\r\n                    }\r\n                    else if (this.inheritScale) {\r\n                        tResultMatrix = this.resultTransform.getMatrix();\r\n                        Matrix.TEMP.identity();\r\n                        Matrix.TEMP.d = this.d;\r\n                        Matrix.mul(tResultMatrix, Matrix.TEMP, this.resultMatrix);\r\n                        this.resultMatrix.tx = worldX;\r\n                        this.resultMatrix.ty = worldY;\r\n                    }\r\n                    else {\r\n                        tResultMatrix = this.resultTransform.getMatrix();\r\n                        Matrix.TEMP.identity();\r\n                        Matrix.TEMP.d = this.d;\r\n                        Matrix.mul(tResultMatrix, Matrix.TEMP, this.resultMatrix);\r\n                        this.resultMatrix.tx = worldX;\r\n                        this.resultMatrix.ty = worldY;\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                tResultMatrix = this.resultTransform.getMatrix();\r\n                tResultMatrix.copyTo(this.resultMatrix);\r\n            }\r\n        }\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.update();\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateChild(): void {\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.update();\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setRotation(rd: number): void {\r\n        if (this._sprite) {\r\n            this._sprite.rotation = rd * 180 / Math.PI;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateDraw(x: number, y: number): void {\r\n        if (!Bone.ShowBones || Bone.ShowBones[this.name]) {\r\n            if (this._sprite) {\r\n                this._sprite.x = x + this.resultMatrix.tx;\r\n                this._sprite.y = y + this.resultMatrix.ty;\r\n            }\r\n            else {\r\n                this._sprite = new Sprite();\r\n                this._sprite.graphics.drawCircle(0, 0, 5, \"#ff0000\");\r\n                this._sprite.graphics.drawLine(0, 0, this.length, 0, \"#00ff00\");\r\n                this._sprite.graphics.fillText(this.name, 0, 0, \"20px Arial\", \"#00ff00\", \"center\");\r\n                ILaya.stage.addChild(this._sprite);\r\n                this._sprite.x = x + this.resultMatrix.tx;\r\n                this._sprite.y = y + this.resultMatrix.ty;\r\n            }\r\n\r\n        }\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.updateDraw(x, y);\r\n        }\r\n    }\r\n\r\n    addChild(bone: Bone): void {\r\n        this._children.push(bone);\r\n        bone.parentBone = this;\r\n    }\r\n\r\n    //TODO:coverage\r\n    findBone(boneName: string): Bone|null {\r\n        if (this.name == boneName) {\r\n            return this;\r\n        }\r\n        else {\r\n            var i: number, n: number;\r\n            var tBone: Bone;\r\n            var tResult: Bone|null;\r\n            for (i = 0, n = this._children.length; i < n; i++) {\r\n                tBone = this._children[i];\r\n                tResult = tBone.findBone(boneName);\r\n                if (tResult) {\r\n                    return tResult;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    localToWorld(local: number[]): void {\r\n        var localX: number = local[0];\r\n        var localY: number = local[1];\r\n        local[0] = localX * this.resultMatrix.a + localY * this.resultMatrix.c + this.resultMatrix.tx;\r\n        local[1] = localX * this.resultMatrix.b + localY * this.resultMatrix.d + this.resultMatrix.ty;\r\n    }\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\n//TODO:coverage\r\nexport class TfConstraintData {\r\n\r\n\tname: string;\r\n\tboneIndexs: number[] = [];\r\n\ttargetIndex: number;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\tscaleMix: number;\r\n\tshearMix: number;\r\n\toffsetRotation: number;\r\n\toffsetX: number;\r\n\toffsetY: number;\r\n\toffsetScaleX: number;\r\n\toffsetScaleY: number;\r\n\toffsetShearY: number;\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class PathConstraintData {\r\n\r\n\tname: string;\r\n\tbones: number[] = [];\r\n\ttarget: string;\r\n\tpositionMode: string;\r\n\tspacingMode: string;\r\n\trotateMode: string;\r\n\toffsetRotation: number;\r\n\tposition: number;\r\n\tspacing: number;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n}\r\n\r\n","import { DeformSlotData } from \"./DeformSlotData\";\r\n/**\r\n * @internal\r\n */\r\nexport class DeformAniData {\r\n\r\n\tskinName: string;\r\n\tdeformSlotDataList: DeformSlotData[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\r\n/**\r\n * @internal\r\n */\r\nexport class DeformSlotData {\r\n\r\n\tdeformSlotDisplayList: DeformSlotDisplayData[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { BoneSlot } from \"./BoneSlot\";\r\n/**\r\n * @internal\r\n */\r\nexport class DeformSlotDisplayData {\r\n\r\n\tboneSlot: BoneSlot;\r\n\tslotIndex: number = -1;\r\n\tattachment: string;\r\n\ttimeList: number[] = [];\r\n\tvectices: any[][] = [];\r\n\ttweenKeyList: boolean[] = [];\r\n\r\n\tdeformData: any[];\r\n\tframeIndex: number = 0;\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tprivate binarySearch1(values: number[], target: number): number {\r\n\t\tvar low: number = 0;\r\n\t\tvar high: number = values.length - 2;\r\n\t\tif (high == 0)\r\n\t\t\treturn 1;\r\n\t\tvar current: number = high >>> 1;\r\n\t\twhile (true) {\r\n\t\t\tif (values[Math.floor(current + 1)] <= target)\r\n\t\t\t\tlow = current + 1;\r\n\t\t\telse\r\n\t\t\t\thigh = current;\r\n\t\t\tif (low == high)\r\n\t\t\t\treturn low + 1;\r\n\t\t\tcurrent = (low + high) >>> 1;\r\n\t\t}\r\n\t\treturn 0; // Can't happen.\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tapply(time: number, boneSlot: BoneSlot, alpha: number = 1): void {\r\n\t\ttime += 0.05;\r\n\t\tif (this.timeList.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar i = 0;\r\n\t\tvar tTime = this.timeList[0];\r\n\t\tif (time < tTime) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tVertexCount = this.vectices[0].length;\r\n\t\tvar tVertices: any[] = [];\r\n\t\tvar tFrameIndex = this.binarySearch1(this.timeList, time);\r\n\t\tthis.frameIndex = tFrameIndex;\r\n\t\tif (time >= this.timeList[this.timeList.length - 1]) {\r\n\t\t\tvar lastVertices: any[] = this.vectices[this.vectices.length - 1];\r\n\r\n\t\t\tif (alpha < 1) {\r\n\t\t\t\tfor (i = 0; i < tVertexCount; i++) {\r\n\t\t\t\t\ttVertices[i] += (lastVertices[i] - tVertices[i]) * alpha;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < tVertexCount; i++) {\r\n\t\t\t\t\ttVertices[i] = lastVertices[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.deformData = tVertices;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//var tTweenKey: boolean = this.tweenKeyList[this.frameIndex];\r\n\t\tvar tPrevVertices = this.vectices[this.frameIndex - 1];\r\n\t\tvar tNextVertices = this.vectices[this.frameIndex];\r\n\t\tvar tPreFrameTime = this.timeList[this.frameIndex - 1];\r\n\t\tvar tFrameTime = this.timeList[this.frameIndex];\r\n\r\n\t\tif (this.tweenKeyList[tFrameIndex - 1]) {\r\n\t\t\talpha = (time - tPreFrameTime) / (tFrameTime - tPreFrameTime);\r\n\t\t} else {\r\n\t\t\talpha = 0;\r\n\t\t}\r\n\r\n\t\tvar tPrev: number;\r\n\t\tfor (i = 0; i < tVertexCount; i++) {\r\n\t\t\ttPrev = tPrevVertices[i];\r\n\t\t\ttVertices[i] = tPrev + (tNextVertices[i] - tPrev) * alpha;\r\n\t\t}\r\n\t\tthis.deformData = tVertices;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class DrawOrderData {\r\n\ttime: number;\r\n\tdrawOrder: number[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\t}\r\n}\r\n\r\n","/**\r\n * 事件数据\r\n */\r\nexport class EventData {\r\n\t/**事件名称 */\r\n\tname: string;\r\n\t/**整数数据 */\r\n\tintValue: number;\r\n\t/**单精度浮点数数据 */\r\n\tfloatValue: number;\r\n\t/**字符串数据 */\r\n\tstringValue: string;\r\n\t/**多媒体数据 */\r\n\taudioValue: string;\r\n\t/**事件数据 */\r\n\ttime: number;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { Utils } from \"../../utils/Utils\";\r\n\r\n/**\r\n * 用于UV转换的工具类\r\n * @internal\r\n */\r\nexport class UVTools {\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\t//[0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]\r\n\t/**\r\n\t * 将相对于大图图集的小UV转换成相对某个大图的UV\r\n\t * @param\tbigUV 某个大图的UV\r\n\t * @param\tsmallUV 大图图集中的UV\r\n\t * @return 相对于某个大图的UV\r\n\t */\r\n\t//TODO:coverage\r\n\tstatic getRelativeUV(bigUV: ArrayLike<number>, smallUV: any[], rst: any[] = null): any[] {\r\n\t\tvar startX: number = bigUV[0];\r\n\t\tvar width: number = bigUV[2] - bigUV[0];\r\n\t\tvar startY: number = bigUV[1];\r\n\t\tvar height: number = bigUV[5] - bigUV[1];\r\n\t\tif (!rst) rst = [];\r\n\t\trst.length = smallUV.length;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = rst.length;\r\n\t\tvar dWidth: number = 1 / width;\r\n\t\tvar dHeight: number = 1 / height;\r\n\t\tfor (i = 0; i < len; i += 2) {\r\n\t\t\trst[i] = (smallUV[i] - startX) * dWidth;\r\n\t\t\trst[i + 1] = (smallUV[i + 1] - startY) * dHeight;\r\n\t\t}\r\n\t\treturn rst;\r\n\t}\r\n\t/**\r\n\t * 将相对于某个大图的UV转换成相对于大图图集的UV\r\n\t * @param\tbigUV 某个大图的UV\r\n\t * @param\tsmallUV 相对于某个大图的UV\r\n\t * @return 相对于大图图集的UV\r\n\t */\r\n\t//TODO:coverage\r\n\tstatic getAbsoluteUV(bigUV: ArrayLike<number>, smallUV: any[], rst: any[] = null): any[] {\r\n\t\tif (bigUV[0] == 0 && bigUV[1] == 0 && bigUV[4] == 1 && bigUV[5] == 1) {\r\n\t\t\tif (rst) {\r\n\t\t\t\tUtils.copyArray(rst, smallUV);\r\n\t\t\t\treturn rst;\r\n\t\t\t} else {\r\n\t\t\t\treturn smallUV;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar startX: number = bigUV[0];\r\n\t\tvar width: number = bigUV[2] - bigUV[0];\r\n\t\tvar startY: number = bigUV[1];\r\n\t\tvar height: number = bigUV[5] - bigUV[1];\r\n\t\tif (!rst) rst = [];\r\n\t\trst.length = smallUV.length;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = rst.length;\r\n\t\tfor (i = 0; i < len; i += 2) {\r\n\t\t\trst[i] = smallUV[i] * width + startX;\r\n\t\t\trst[i + 1] = smallUV[i + 1] * height + startY;\r\n\t\t}\r\n\t\treturn rst;\r\n\t}\r\n}\r\n\r\n\r\n","import { Texture } from \"../../../resource/Texture\";\r\nimport { Matrix } from \"../../../maths/Matrix\";\r\nimport { Rectangle } from \"../../../maths/Rectangle\";\r\n\r\n\r\n/**\r\n * 网格数据\r\n */\r\nexport class MeshData {\r\n\t/**\r\n\t * 纹理 \r\n\t */\r\n    texture: Texture;\r\n\r\n\t/**\r\n\t * uv数据 \r\n\t */\r\n    uvs: Float32Array = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\r\n\r\n\t/**\r\n\t * 顶点数据 \r\n\t */\r\n    vertices: Float32Array = new Float32Array([0, 0, 100, 0, 100, 100, 0, 100]);\r\n\r\n\t/**\r\n\t * 顶点索引 \r\n\t */\r\n    indexes: Uint16Array = new Uint16Array([0, 1, 3, 3, 1, 2]);\r\n\r\n\t/**\r\n\t * uv变换矩阵 \r\n\t */\r\n    uvTransform: Matrix;\r\n\r\n\t/**\r\n\t * 是否有uv变化矩阵\r\n\t */\r\n    useUvTransform: boolean = false;\r\n\r\n\t/**\r\n\t * 扩展像素,用来去除黑边 \r\n\t */\r\n    canvasPadding: number = 1;\r\n\r\n\t/**\r\n\t * 计算mesh的Bounds \r\n\t * @return \r\n\t * \r\n\t */\r\n    //TODO:coverage\r\n    getBounds(): Rectangle {\r\n        return Rectangle._getWrapRec(this.vertices);\r\n    }\r\n}\r\n\r\n\r\n","import { MeshData } from \"./MeshData\";\r\nimport { Matrix } from \"../../../maths/Matrix\";\r\nimport { Texture } from \"../../../resource/Texture\";\r\n\r\n\r\n/**\r\n * <code>Laya<code>\r\n */\r\nexport class SkinMeshForGraphic extends MeshData {\r\n\r\n    /**\r\n     * 创建SkinGraphic Mesh数据\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n\t/**\r\n\t * 矩阵\r\n\t */\r\n    transform: Matrix|null;\r\n\r\n    /**\r\n     * 创建Texture MeshData\r\n     * @param texture 纹理\r\n     * @param ps 索引数据\r\n     * @param verticles 顶点数据\r\n     * @param uvs uv数据\r\n     */\r\n    init2(texture: Texture, ps: any[], verticles: any[], uvs: any[]): void {\r\n        if (this.transform) {\r\n            this.transform = null;\r\n        }\r\n        var _ps: any[] = ps || [0, 1, 3, 3, 1, 2];\r\n        this.texture = texture;\r\n\r\n        this.indexes = new Uint16Array(_ps);\r\n        this.vertices = new Float32Array(verticles);\r\n        this.uvs = new Float32Array(uvs);\r\n    }\r\n}\r\n\r\n\r\n","import { Templet } from \"./Templet\";\r\nimport { SlotData } from \"./SlotData\";\r\nimport { SkinSlotDisplayData } from \"./SkinSlotDisplayData\";\r\nimport { UVTools } from \"./UVTools\";\r\nimport { SkinMeshForGraphic } from \"./canvasmesh/SkinMeshForGraphic\"\r\nimport { GraphicsAni } from \"../GraphicsAni\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Texture } from \"../../resource/Texture\";\r\nimport { Utils } from \"../../utils/Utils\";\r\n\r\n\r\nexport class BoneSlot {\r\n\r\n    /** 插槽名称 */\r\n    name: string;\r\n    /** 插槽绑定的骨骼名称 */\r\n    parent: string;\r\n    /** 插糟显示数据数据的名称 */\r\n    attachmentName: string;\r\n    /** 原始数据的索引 */\r\n    srcDisplayIndex: number = -1;\r\n    /** 判断对象是否是原对象 */\r\n    type: string = \"src\";\r\n    /** 模板的指针 */\r\n    templet: Templet;\r\n    /** 当前插槽对应的数据 */\r\n    currSlotData: SlotData;\r\n    /** 当前插槽显示的纹理 */\r\n    currTexture: Texture | null;\r\n    /** 显示对象对应的数据 */\r\n    currDisplayData: SkinSlotDisplayData | null;\r\n\r\n    /** 显示皮肤的索引 */\r\n    displayIndex: number = -1;\r\n    /** @private */\r\n    originalIndex: number = -1;\r\n\r\n    /** 用户自定义的皮肤 */\r\n    /**@internal */\r\n    private _diyTexture: Texture | null;\r\n    /**@internal */\r\n    private _parentMatrix: Matrix;\t// 指向了骨骼的resultMatrix\r\n    /**@internal */\r\n    private _resultMatrix: Matrix;\t// 只有不使用缓冲时才使用\r\n    /** @internal 索引替换表 */\r\n    private _replaceDic: any = {};\r\n    /** @internal 当前diyTexture的动画纹理 */\r\n    private _curDiyUV: any[];\r\n\r\n    /** @internal 实时模式下，复用使用 */\r\n    private _skinSprite: any;\r\n    /** @private 变形动画数据 */\r\n    deformData: any[];\r\n\r\n    /**\r\n     * 设置要显示的插槽数据\r\n     * @param\tslotData\r\n     * @param\tdisIndex\r\n     * @param\tfreshIndex 是否重置纹理\r\n     */\r\n    showSlotData(slotData: SlotData, freshIndex: boolean = true): void {\r\n        this.currSlotData = slotData;\r\n        if (freshIndex)\r\n            this.displayIndex = this.srcDisplayIndex;\r\n        this.currDisplayData = null;\r\n        this.currTexture = null;\r\n    }\r\n\r\n    /**\r\n     * 通过名字显示指定对象\r\n     * @param\tname\r\n     */\r\n    showDisplayByName(name: string): void {\r\n        if (this.currSlotData) {\r\n            this.showDisplayByIndex(this.currSlotData.getDisplayByName(name));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 替换贴图名\r\n     * @param\ttarName 要替换的贴图名\r\n     * @param\tnewName 替换后的贴图名\r\n     */\r\n    replaceDisplayByName(tarName: string, newName: string): void {\r\n        if (!this.currSlotData) return;\r\n        var preIndex: number;\r\n        preIndex = this.currSlotData.getDisplayByName(tarName);\r\n        var newIndex: number;\r\n        newIndex = this.currSlotData.getDisplayByName(newName);\r\n        this.replaceDisplayByIndex(preIndex, newIndex);\r\n    }\r\n\r\n    /**\r\n     * 替换贴图索引\r\n     * @param\ttarIndex 要替换的索引\r\n     * @param\tnewIndex 替换后的索引\r\n     */\r\n    replaceDisplayByIndex(tarIndex: number, newIndex: number): void {\r\n        if (!this.currSlotData) return;\r\n        this._replaceDic[tarIndex] = newIndex;\r\n        if (this.originalIndex == tarIndex) {\r\n            this.showDisplayByIndex(tarIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定显示对象\r\n     * @param\tindex\r\n     */\r\n    showDisplayByIndex(index: number): void {\r\n        this.originalIndex = index;\r\n        if (this._replaceDic[index] != null) index = this._replaceDic[index];\r\n        if (this.currSlotData && index > -1 && index < this.currSlotData.displayArr.length) {\r\n            this.displayIndex = index;\r\n            this.currDisplayData = this.currSlotData.displayArr[index];\r\n            if (this.currDisplayData) {\r\n                var tName: string = this.currDisplayData.name;\r\n                this.currTexture = this.templet.getTexture(tName);\r\n                if (this.currTexture && this.currDisplayData.type == 0 && this.currDisplayData.uvs) {\r\n                    this.currTexture = this.currDisplayData.createTexture(this.currTexture);\r\n                }\r\n            }\r\n        } else {\r\n            this.displayIndex = -1;\r\n            this.currDisplayData = null;\r\n            this.currTexture = null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 替换皮肤\r\n     * @param\t_texture\r\n     */\r\n    replaceSkin(_texture: Texture): void {\r\n        this._diyTexture = _texture;\r\n        if (this._curDiyUV) this._curDiyUV.length = 0;\r\n        if (this.currDisplayData && this._diyTexture == this.currDisplayData.texture) {\r\n            this._diyTexture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存父矩阵的索引\r\n     * @param\tparentMatrix\r\n     */\r\n    //TODO:coverage\r\n    setParentMatrix(parentMatrix: Matrix): void {\r\n        this._parentMatrix = parentMatrix;\r\n    }\r\n\r\n    private _mVerticleArr: any[];\r\n    private static _tempMatrix: Matrix = new Matrix();\r\n\r\n    //TODO:coverage\r\n    static createSkinMesh(): any {\r\n        return new SkinMeshForGraphic();\r\n    }\r\n\r\n    //TODO:coverage\r\n    private static isSameArr(arrA: any[], arrB: any[]): boolean {\r\n        if (arrA.length != arrB.length) return false;\r\n        var i: number, len: number;\r\n        len = arrA.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**@internal */\r\n    private static _tempResultMatrix: Matrix = new Matrix();\r\n    /**@internal */\r\n    private _preGraphicVerticle: any[];\r\n\r\n    //TODO:coverage\r\n    private getSaveVerticle(tArr: any[]): any[] {\r\n        if (BoneSlot.useSameMatrixAndVerticle && this._preGraphicVerticle && BoneSlot.isSameArr(tArr, this._preGraphicVerticle)) {\r\n            tArr = this._preGraphicVerticle;\r\n        } else {\r\n            tArr = Utils.copyArray([], tArr);\r\n            this._preGraphicVerticle = tArr;\r\n        }\r\n        return tArr;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static isSameMatrix(mtA: Matrix, mtB: Matrix): boolean {\r\n        return mtA.a == mtB.a && mtA.b == mtB.b && mtA.c == mtB.c && mtA.d == mtB.d && Math.abs(mtA.tx - mtB.tx) < 0.00001 && Math.abs(mtA.ty - mtB.ty) < 0.00001;\r\n    }\r\n\r\n    private _preGraphicMatrix: Matrix;\r\n\r\n    private static useSameMatrixAndVerticle: boolean = true;\r\n\r\n    //TODO:coverage\r\n    private getSaveMatrix(tResultMatrix: Matrix): Matrix {\r\n        if (BoneSlot.useSameMatrixAndVerticle && this._preGraphicMatrix && BoneSlot.isSameMatrix(tResultMatrix, this._preGraphicMatrix)) {\r\n            tResultMatrix = this._preGraphicMatrix;\r\n        } else {\r\n            var newMatrix: Matrix = tResultMatrix.clone();\r\n            tResultMatrix = newMatrix;\r\n            this._preGraphicMatrix = tResultMatrix;\r\n        }\r\n        return tResultMatrix;\r\n    }\r\n    /**\r\n     * 把纹理画到Graphics上\r\n     * @param\tgraphics\r\n     * @param\tnoUseSave   不使用共享的矩阵对象 _tempResultMatrix，只有实时计算的时候才设置为true\r\n     */\r\n    draw(graphics: GraphicsAni, boneMatrixArray: any[], noUseSave: boolean = false, alpha: number = 1): void {\r\n        if ((this._diyTexture == null && this.currTexture == null) || this.currDisplayData == null) {\r\n            if (!(this.currDisplayData && this.currDisplayData.type == 3)) {\r\n                return;\r\n            }\r\n        }\r\n        var tTexture = this.currTexture;\r\n        if (this._diyTexture) tTexture = this._diyTexture;\r\n        var tSkinSprite: any;\r\n        switch (this.currDisplayData.type) {\r\n            case 0:\r\n                if (graphics) {\r\n                    var tCurrentMatrix = this.getDisplayMatrix();\r\n                    if (this._parentMatrix) {\r\n                        var tRotateKey: boolean = false;\t\t// 是否有旋转\r\n                        if (tCurrentMatrix) {\r\n                            Matrix.mul(tCurrentMatrix, this._parentMatrix, Matrix.TEMP);\r\n                            var tResultMatrix: Matrix;\r\n                            if (noUseSave) {\r\n                                if (this._resultMatrix == null) this._resultMatrix = new Matrix();\r\n                                tResultMatrix = this._resultMatrix;\r\n                            } else {\r\n                                //tResultMatrix = new Matrix();\r\n                                tResultMatrix = BoneSlot._tempResultMatrix;\r\n                            }\r\n                            if (this._diyTexture && this.currDisplayData.uvs) {\r\n                                var tTestMatrix: Matrix = BoneSlot._tempMatrix;\r\n                                tTestMatrix.identity();\r\n                                //判断是否上下反转。\r\n                                if (this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {\r\n                                    tTestMatrix.d = -1;\r\n                                }\r\n                                //判断是否旋转\r\n                                if (this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4]\r\n                                    && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {\r\n                                    tRotateKey = true;\r\n                                    tTestMatrix.rotate(-Math.PI / 2);\r\n                                }\r\n                                Matrix.mul(tTestMatrix, Matrix.TEMP, tResultMatrix);\r\n                            } else {\r\n                                Matrix.TEMP.copyTo(tResultMatrix);\r\n                            }\r\n\r\n                            if (!noUseSave) {\r\n                                tResultMatrix = this.getSaveMatrix(tResultMatrix);\r\n                            }\r\n                            tResultMatrix._checkTransform();\r\n                            if (tRotateKey) {\r\n                                graphics.drawTexture(tTexture, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, tResultMatrix, alpha);\r\n                            } else {\r\n                                graphics.drawTexture(tTexture, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, tResultMatrix, alpha);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                if (noUseSave) {\r\n                    if (this._skinSprite == null) {\r\n                        this._skinSprite = BoneSlot.createSkinMesh();\r\n                    }\r\n                    tSkinSprite = this._skinSprite;\r\n                } else {\r\n                    tSkinSprite = BoneSlot.createSkinMesh();\r\n                }\r\n                if (tSkinSprite == null) {\r\n                    return;\r\n                }\r\n                var tIBArray: any[];\r\n                if (this.currDisplayData.bones == null) {\r\n                    var tVertices: any[] = this.currDisplayData.weights;\r\n                    if (this.deformData) {\r\n                        tVertices = this.deformData;\r\n                    }\r\n                    var tUVs: any[];\r\n                    if (this._diyTexture) {\r\n                        if (!this._curDiyUV) {\r\n                            this._curDiyUV = [];\r\n                        }\r\n                        if (this._curDiyUV.length == 0) {\r\n                            this._curDiyUV = UVTools.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);\r\n                            this._curDiyUV = UVTools.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV);\r\n                        }\r\n                        tUVs = this._curDiyUV;\r\n                    } else {\r\n                        tUVs = this.currDisplayData.uvs;\r\n                    }\r\n\r\n                    this._mVerticleArr = tVertices;\r\n                    var tTriangleNum: number = this.currDisplayData.triangles.length / 3;\r\n\r\n                    tIBArray = this.currDisplayData.triangles;\r\n\r\n\r\n                    if (this.deformData) {\r\n                        if (!noUseSave) {\r\n                            this._mVerticleArr = this.getSaveVerticle(this._mVerticleArr);\r\n                        }\r\n                    }\r\n                    tSkinSprite.init2(tTexture, tIBArray, this._mVerticleArr, tUVs);\r\n\r\n                    var tCurrentMatrix2 = this.getDisplayMatrix();\r\n                    if (this._parentMatrix) {\r\n                        if (tCurrentMatrix2) {\r\n                            Matrix.mul(tCurrentMatrix2, this._parentMatrix, Matrix.TEMP);\r\n                            var tResultMatrix2: Matrix;\r\n                            if (noUseSave) {\r\n                                if (this._resultMatrix == null) this._resultMatrix = new Matrix();\r\n                                tResultMatrix2 = this._resultMatrix;\r\n                            } else {\r\n                                tResultMatrix2 = BoneSlot._tempResultMatrix;\r\n                            }\r\n                            Matrix.TEMP.copyTo(tResultMatrix2);\r\n\r\n                            if (!noUseSave) {\r\n                                tResultMatrix2 = this.getSaveMatrix(tResultMatrix2);\r\n                            }\r\n                            tSkinSprite.transform = tResultMatrix2;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.skinMesh(boneMatrixArray, tSkinSprite);\r\n                }\r\n\r\n                graphics.drawSkin(tSkinSprite, alpha);\r\n                break;\r\n            case 2:\r\n                if (noUseSave) {\r\n                    if (this._skinSprite == null) {\r\n                        this._skinSprite = BoneSlot.createSkinMesh();\r\n                    }\r\n                    tSkinSprite = this._skinSprite;\r\n                } else {\r\n                    tSkinSprite = BoneSlot.createSkinMesh();\r\n                }\r\n                if (tSkinSprite == null) {\r\n                    return;\r\n                }\r\n                this.skinMesh(boneMatrixArray, tSkinSprite);\r\n                graphics.drawSkin(tSkinSprite, alpha);\r\n                break;\r\n            case 3:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private static _tempVerticleArr: any[] = [];\r\n    /**\r\n     * 显示蒙皮动画\r\n     * @param\tboneMatrixArray 当前帧的骨骼矩阵\r\n     */\r\n    private skinMesh(boneMatrixArray: any[], skinSprite: any): void {\r\n        var tTexture: Texture = this.currTexture;\r\n        var tBones: any[] = this.currDisplayData.bones;\r\n        var tUvs: any[];\r\n        if (this._diyTexture) {\r\n            tTexture = this._diyTexture;\r\n            if (!this._curDiyUV) {\r\n                this._curDiyUV = [];\r\n            }\r\n            if (this._curDiyUV.length == 0) {\r\n                this._curDiyUV = UVTools.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);\r\n                this._curDiyUV = UVTools.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV);\r\n            }\r\n            tUvs = this._curDiyUV;\r\n        } else {\r\n            tUvs = this.currDisplayData.uvs;\r\n        }\r\n\r\n        var tWeights: any[] = this.currDisplayData.weights;\r\n        var tTriangles: any[] = this.currDisplayData.triangles;\r\n        var tIBArray: any[];\r\n        var tRx: number = 0;\r\n        var tRy: number = 0;\r\n        var nn: number = 0;\r\n        var tMatrix: Matrix;\r\n        var tX: number;\r\n        var tY: number;\r\n        var tB: number = 0;\r\n        var tWeight: number = 0;\r\n        var tVertices: any[];\r\n        var i: number = 0, j: number = 0, n: number = 0;\r\n        var tRed: number = 1;\r\n        var tGreed: number = 1;\r\n        var tBlue: number = 1;\r\n        BoneSlot._tempVerticleArr.length = 0;\r\n        tVertices = BoneSlot._tempVerticleArr;\r\n        if (this.deformData && this.deformData.length > 0) {\r\n            var f: number = 0;\r\n            for (i = 0, n = tBones.length; i < n;) {\r\n                nn = tBones[i++] + i;\r\n                tRx = 0, tRy = 0;\r\n                for (; i < nn; i++) {\r\n                    tMatrix = boneMatrixArray[tBones[i]]\r\n                    tX = tWeights[tB] + this.deformData[f++];\r\n                    tY = tWeights[tB + 1] + this.deformData[f++];\r\n                    tWeight = tWeights[tB + 2];\r\n                    tRx += (tX * tMatrix.a + tY * tMatrix.c + tMatrix.tx) * tWeight;\r\n                    tRy += (tX * tMatrix.b + tY * tMatrix.d + tMatrix.ty) * tWeight;\r\n                    tB += 3;\r\n                }\r\n                tVertices.push(tRx, tRy);\r\n            }\r\n        } else {\r\n            for (i = 0, n = tBones.length; i < n;) {\r\n                nn = tBones[i++] + i;\r\n                tRx = 0, tRy = 0;\r\n                for (; i < nn; i++) {\r\n                    tMatrix = boneMatrixArray[tBones[i]]\r\n                    tX = tWeights[tB];\r\n                    tY = tWeights[tB + 1];\r\n                    tWeight = tWeights[tB + 2];\r\n                    tRx += (tX * tMatrix.a + tY * tMatrix.c + tMatrix.tx) * tWeight;\r\n                    tRy += (tX * tMatrix.b + tY * tMatrix.d + tMatrix.ty) * tWeight;\r\n                    tB += 3;\r\n                }\r\n                tVertices.push(tRx, tRy);\r\n            }\r\n        }\r\n        this._mVerticleArr = tVertices;\r\n        tIBArray = tTriangles;\r\n        this._mVerticleArr = this.getSaveVerticle(this._mVerticleArr);\r\n        skinSprite.init2(tTexture, tIBArray, this._mVerticleArr, tUvs);\r\n    }\r\n\r\n    /**\r\n     * 画骨骼的起始点，方便调试\r\n     * @param\tgraphics\r\n     */\r\n    drawBonePoint(graphics: Graphics): void {\r\n        if (graphics && this._parentMatrix) {\r\n            graphics.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, \"#ff0000\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 得到显示对象的矩阵\r\n     * @return\r\n     */\r\n    //TODO:coverage\r\n    private getDisplayMatrix(): Matrix | null {\r\n        if (this.currDisplayData) {\r\n            return this.currDisplayData.transform.getMatrix();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 得到插糟的矩阵\r\n     * @return\r\n     */\r\n    getMatrix(): Matrix {\r\n        return this._resultMatrix;\r\n    }\r\n\r\n    /**\r\n     * 用原始数据拷贝出一个\r\n     * @return\r\n     */\r\n    copy(): BoneSlot {\r\n        var tBoneSlot: BoneSlot = new BoneSlot();\r\n        tBoneSlot.type = \"copy\";\r\n        tBoneSlot.name = this.name;\r\n        tBoneSlot.attachmentName = this.attachmentName;\r\n        tBoneSlot.srcDisplayIndex = this.srcDisplayIndex;\r\n        tBoneSlot.parent = this.parent;\r\n        tBoneSlot.displayIndex = this.displayIndex;\r\n        tBoneSlot.templet = this.templet;\r\n        tBoneSlot.currSlotData = this.currSlotData;\r\n        tBoneSlot.currTexture = this.currTexture;\r\n        tBoneSlot.currDisplayData = this.currDisplayData;\r\n        return tBoneSlot;\r\n    }\r\n}\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class SkinData {\r\n\r\n\tname: string;\r\n\tslotArr: any[] = [];\r\n}\r\n\r\n","import { Transform } from \"./Transform\";\r\nimport { Texture } from \"../../resource/Texture\";\r\n\r\n/**\r\n * 插槽显示数据\r\n */\r\nexport class SkinSlotDisplayData {\r\n\r\n\t/**名称 */\r\n\tname: string;\r\n\t/**附件名称 */\r\n\tattachmentName: string;\r\n\t/**类型 */\r\n\ttype: number;\t\t\t\t//0 硬  1 skin 2 另一种skin? 3 不支持\r\n\t/**变换 */\r\n\ttransform: Transform;\r\n\t/**宽度 */\r\n\twidth: number;\r\n\t/**高度 */\r\n\theight: number;\r\n\t/**纹理 */\r\n\ttexture: Texture;\r\n\r\n\t/**骨骼数据 */\r\n\tbones: any[];\r\n\t/**uv数据 */\r\n\tuvs: any[];\r\n\t/**权重 */\r\n\tweights: any[];\r\n\t/**三角面数据 */\r\n\ttriangles: any[];\r\n\t/**顶点数据 */\r\n\tvertices: any[];\r\n\t/**长度数据 */\r\n\tlengths: any[];\r\n\t/**版本号 */\r\n\tverLen: number;\r\n\r\n\tcreateTexture(currTexture: Texture): Texture {\r\n\t\tif (this.texture) return this.texture;\r\n\t\tthis.texture = new Texture(currTexture.bitmap, this.uvs);\r\n\r\n\t\t//判断是否旋转\r\n\t\tif (this.uvs[0] > this.uvs[4]\r\n\t\t\t&& this.uvs[1] > this.uvs[5]) {\r\n\t\t\t//旋转\r\n\t\t\tthis.texture.width = currTexture.height;\r\n\t\t\tthis.texture.height = currTexture.width;\r\n\t\t\tthis.texture.offsetX = -currTexture.offsetX;\r\n\t\t\tthis.texture.offsetY = -currTexture.offsetY;\r\n\t\t\tthis.texture.sourceWidth = currTexture.sourceHeight;\r\n\t\t\tthis.texture.sourceHeight = currTexture.sourceWidth;\r\n\t\t} else {\r\n\t\t\tthis.texture.width = currTexture.width;\r\n\t\t\tthis.texture.height = currTexture.height;\r\n\t\t\tthis.texture.offsetX = -currTexture.offsetX;\r\n\t\t\tthis.texture.offsetY = -currTexture.offsetY;\r\n\t\t\tthis.texture.sourceWidth = currTexture.sourceWidth;\r\n\t\t\tthis.texture.sourceHeight = currTexture.sourceHeight;\r\n\t\t}\r\n\t\treturn this.texture;\r\n\t}\r\n\r\n\tdestory(): void {\r\n\t\tif (this.texture) this.texture.destroy();\r\n\t}\r\n}\r\n\r\n","import { SkinSlotDisplayData } from \"./SkinSlotDisplayData\";\r\nexport class SlotData {\r\n\tname: string;\r\n\tdisplayArr: any[] = [];\r\n\r\n\t/**\r\n\t * 通过附件名称获取位置\r\n\t * @param name \r\n\t */\r\n\tgetDisplayByName(name: string): number {\r\n\t\tvar tDisplay: SkinSlotDisplayData;\r\n\t\tfor (var i: number = 0, n: number = this.displayArr.length; i < n; i++) {\r\n\t\t\ttDisplay = this.displayArr[i];\r\n\t\t\tif (tDisplay.attachmentName == name) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class IkConstraintData {\r\n\r\n\tname: string;\r\n\ttargetBoneName: string;\r\n\tboneNames: string[] = [];\r\n\tbendDirection: number = 1;\r\n\tmix: number = 1;\r\n\tisSpine: boolean = true;\r\n\ttargetBoneIndex: number = -1;\r\n\tboneIndexs: number[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { Bone } from \"./Bone\";\r\nimport { TfConstraintData } from \"./TfConstraintData\";\r\nimport { PathConstraintData } from \"./PathConstraintData\";\r\nimport { DeformAniData } from \"./DeformAniData\";\r\nimport { DeformSlotData } from \"./DeformSlotData\";\r\nimport { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\r\nimport { DrawOrderData } from \"./DrawOrderData\";\r\nimport { EventData } from \"./EventData\";\r\nimport { AnimationContent } from \"../AnimationContent\"\r\nimport { AnimationTemplet } from \"../AnimationTemplet\"\r\nimport { BoneSlot } from \"./BoneSlot\"\r\nimport { SkinData } from \"./SkinData\"\r\nimport { SkinSlotDisplayData } from \"./SkinSlotDisplayData\"\r\nimport { SlotData } from \"./SlotData\"\r\nimport { Transform } from \"./Transform\"\r\nimport { IkConstraintData } from \"./IkConstraintData\"\r\nimport { Texture } from \"../../resource/Texture\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { IAniLib } from \"../AniLibPack\";\r\nimport { Skeleton } from \"./Skeleton\";\r\nimport { AnimationParser01 } from \"../AnimationParser01\";\r\n\r\nconst LAYA_ANIMATION_160_VISION: string = \"LAYAANIMATION:1.6.0\";\r\nconst LAYA_ANIMATION_VISION: string = \"LAYAANIMATION:1.7.0\";\r\n\r\n/**\r\n * 动画模板类\r\n */\r\nexport class Templet extends AnimationTemplet {\r\n    public rate: number = 30;\r\n\r\n    /**@internal */\r\n    private _mainTexture: Texture;\r\n    /**@internal */\r\n    private _graphicsCache: any[] = [];\r\n\r\n    /** 存放原始骨骼信息 */\r\n    srcBoneMatrixArr: any[] = [];\r\n    /** IK数据 */\r\n    ikArr: any[] = [];\r\n    /** transform数据 */\r\n    tfArr: any[] = [];\r\n    /** path数据 */\r\n    pathArr: any[] = [];\r\n    /** 存放插槽数据的字典 */\r\n    boneSlotDic: any = {};\r\n    /** 绑定插槽数据的字典 */\r\n    bindBoneBoneSlotDic: any = {};\r\n    /** 存放插糟数据的数组 */\r\n    boneSlotArray: any[] = [];\r\n    /** 皮肤数据 */\r\n    skinDataArray: any[] = [];\r\n    /** 皮肤的字典数据 */\r\n    skinDic: any = {};\r\n    /** 存放纹理数据 */\r\n    subTextureDic: Record<string, Texture> = {};\r\n    /** 是否解析失败 */\r\n    isParseFail: boolean = false;\r\n    /** 反转矩阵，有些骨骼动画要反转才能显示 */\r\n    yReverseMatrix: Matrix;\r\n    /** 渲染顺序动画数据 */\r\n    drawOrderAniArr: any[] = [];\r\n    /** 事件动画数据 */\r\n    eventAniArr: any[] = [];\r\n    /** @private 索引对应的名称 */\r\n    attachmentNames: any[] = null;\r\n    /** 顶点动画数据 */\r\n    deformAniArr: any[] = [];\r\n    /** 实际显示对象列表，用于销毁用 */\r\n    skinSlotDisplayDataArr: SkinSlotDisplayData[] = [];\r\n\r\n    /** @internal 是否需要解析audio数据 */\r\n    private _isParseAudio: boolean = false;\r\n    aniSectionDic: any = {};\r\n    /**@internal */\r\n    private _path: string;\r\n    /**@private */\r\n    tMatrixDataLen: number;\r\n\r\n    mRootBone: Bone;\r\n    mBoneArr: Bone[] = [];\r\n\r\n    /**\r\n     * 创建动画\r\n     * 0,使用模板缓冲的数据，模板缓冲的数据，不允许修改\t\t\t\t\t（内存开销小，计算开销小，不支持换装）\r\n     * 1,使用动画自己的缓冲区，每个动画都会有自己的缓冲区，相当耗费内存\t（内存开销大，计算开销小，支持换装）\r\n     * 2,使用动态方式，去实时去画\t\t\t\t\t\t\t\t\t\t（内存开销小，计算开销大，支持换装,不建议使用）\r\n     * @param\taniMode 0\t动画模式，0:不支持换装,1,2支持换装\r\n     * @return\r\n     */\r\n    buildArmature(aniMode: number = 0): Skeleton {\r\n        let sk = new Skeleton(aniMode);\r\n        sk.templet = this;\r\n        return sk;\r\n    }\r\n\r\n    _parse(texture: Texture, createURL: string, skeletonData: ArrayBuffer) {\r\n        this._path = createURL.slice(0, createURL.lastIndexOf(\"/\")) + \"/\";\r\n        texture._addReference();\r\n        this._mainTexture = texture;\r\n\r\n        var reader: Byte = new Byte(skeletonData);\r\n        this._aniVersion = reader.readUTFString();\r\n        AnimationParser01.parse(this, reader);\r\n\r\n        if (this._aniVersion === LAYA_ANIMATION_VISION) {\r\n            this._isParseAudio = true;\r\n        } else if (this._aniVersion != LAYA_ANIMATION_160_VISION) {\r\n            console.log(\"[Error] 版本不一致，请使用IDE版本配套的重新导出\" + this._aniVersion + \"->\" + LAYA_ANIMATION_VISION);\r\n        }\r\n\r\n        for (let i = 0, n = this.getAnimationCount(); i < n; i++) {\r\n            this._graphicsCache.push([]);\r\n        }\r\n\r\n        var tByte: Byte = new Byte(this.getPublicExtData());\r\n        var tX: number = 0, tY: number = 0, tWidth: number = 0, tHeight: number = 0;\r\n        var tFrameX: number = 0, tFrameY: number = 0, tFrameWidth: number = 0, tFrameHeight: number = 0;\r\n        var tTempleData: number = 0;\r\n        var tTextureLen: number = tByte.getInt32();\r\n        var tTextureName: string = tByte.readUTFString();\r\n        var tTextureNameArr: any[] = tTextureName.split(\"\\n\");\r\n        var tSrcTexturePath: string;\r\n        for (let i = 0; i < tTextureLen; i++) {\r\n            tSrcTexturePath = this._path + tTextureNameArr[i * 2];\r\n            tTextureName = tTextureNameArr[i * 2 + 1];\r\n            tX = tByte.getFloat32();\r\n            tY = tByte.getFloat32();\r\n            tWidth = tByte.getFloat32();\r\n            tHeight = tByte.getFloat32();\r\n\r\n            tTempleData = tByte.getFloat32();\r\n            tFrameX = isNaN(tTempleData) ? 0 : tTempleData;\r\n            tTempleData = tByte.getFloat32();\r\n            tFrameY = isNaN(tTempleData) ? 0 : tTempleData;\r\n            tTempleData = tByte.getFloat32();\r\n            tFrameWidth = isNaN(tTempleData) ? tWidth : tTempleData;\r\n            tTempleData = tByte.getFloat32();\r\n            tFrameHeight = isNaN(tTempleData) ? tHeight : tTempleData;\r\n\r\n            this.subTextureDic[tTextureName] = Texture.create(this._mainTexture, tX, tY, tWidth, tHeight, -tFrameX, -tFrameY, tFrameWidth, tFrameHeight);\r\n        }\r\n\r\n        var isSpine: boolean;\r\n        isSpine = this._aniClassName != \"Dragon\";\r\n\r\n        var tAniCount: number = tByte.getUint16();\r\n        var tSectionArr: any[];\r\n        for (let i = 0; i < tAniCount; i++) {\r\n            tSectionArr = [];\r\n            tSectionArr.push(tByte.getUint16());\r\n            tSectionArr.push(tByte.getUint16());\r\n            tSectionArr.push(tByte.getUint16());\r\n            tSectionArr.push(tByte.getUint16());\r\n            this.aniSectionDic[i] = tSectionArr;\r\n        }\r\n\r\n        var tBone: Bone;\r\n        var tParentBone: Bone;\r\n        var tName: string;\r\n        var tParentName: string;\r\n        var tBoneLen: number = tByte.getInt16();\r\n        var tBoneDic: any = {};\r\n        var tRootBone: Bone;\r\n        for (let i = 0; i < tBoneLen; i++) {\r\n            tBone = new Bone();\r\n            if (i == 0) {\r\n                tRootBone = tBone;\r\n            } else {\r\n                tBone.root = tRootBone;\r\n            }\r\n            tBone.d = isSpine ? -1 : 1;\r\n            tName = tByte.readUTFString();\r\n            tParentName = tByte.readUTFString();\r\n            tBone.length = tByte.getFloat32();\r\n            if (tByte.getByte() == 1) {\r\n                tBone.inheritRotation = false;\r\n            }\r\n            if (tByte.getByte() == 1) {\r\n                tBone.inheritScale = false;\r\n            }\r\n            tBone.name = tName;\r\n            if (tParentName) {\r\n                tParentBone = tBoneDic[tParentName];\r\n                if (tParentBone) {\r\n                    tParentBone.addChild(tBone);\r\n                } else {\r\n                    this.mRootBone = tBone;\r\n                }\r\n            }\r\n            tBoneDic[tName] = tBone;\r\n            this.mBoneArr.push(tBone);\r\n        }\r\n\r\n        this.tMatrixDataLen = tByte.getUint16();\r\n        var tLen: number = tByte.getUint16();\r\n        var boneLength: number = Math.floor(tLen / this.tMatrixDataLen);\r\n        var tResultTransform: Transform;\r\n        var tMatrixArray: any[] = this.srcBoneMatrixArr;\r\n        for (let i = 0; i < boneLength; i++) {\r\n            tResultTransform = new Transform();\r\n            tResultTransform.scX = tByte.getFloat32();\r\n            tResultTransform.skX = tByte.getFloat32();\r\n            tResultTransform.skY = tByte.getFloat32();\r\n            tResultTransform.scY = tByte.getFloat32();\r\n            tResultTransform.x = tByte.getFloat32();\r\n            tResultTransform.y = tByte.getFloat32();\r\n            if (this.tMatrixDataLen === 8) {\r\n                tResultTransform.skewX = tByte.getFloat32();\r\n                tResultTransform.skewY = tByte.getFloat32();\r\n            }\r\n            tMatrixArray.push(tResultTransform);\r\n            tBone = this.mBoneArr[i];\r\n            tBone.transform = tResultTransform;\r\n        }\r\n\r\n        var tIkConstraintData: IkConstraintData;\r\n        var tIkLen: number = tByte.getUint16();\r\n        var tIkBoneLen: number;\r\n        for (let i = 0; i < tIkLen; i++) {\r\n            tIkConstraintData = new IkConstraintData();\r\n            tIkBoneLen = tByte.getUint16();\r\n            for (let j = 0; j < tIkBoneLen; j++) {\r\n                tIkConstraintData.boneNames.push(tByte.readUTFString());\r\n                tIkConstraintData.boneIndexs.push(tByte.getInt16());\r\n            }\r\n            tIkConstraintData.name = tByte.readUTFString();\r\n            tIkConstraintData.targetBoneName = tByte.readUTFString();\r\n            tIkConstraintData.targetBoneIndex = tByte.getInt16();\r\n            tIkConstraintData.bendDirection = tByte.getFloat32();\r\n            tIkConstraintData.mix = tByte.getFloat32();\r\n            tIkConstraintData.isSpine = isSpine;\r\n            this.ikArr.push(tIkConstraintData);\r\n        }\r\n\r\n        var tTfConstraintData: TfConstraintData;\r\n        var tTfLen: number = tByte.getUint16();\r\n        var tTfBoneLen: number;\r\n        for (let i = 0; i < tTfLen; i++) {\r\n            tTfConstraintData = new TfConstraintData();\r\n            tTfBoneLen = tByte.getUint16();\r\n            for (let j = 0; j < tTfBoneLen; j++) {\r\n                tTfConstraintData.boneIndexs.push(tByte.getInt16());\r\n            }\r\n            tTfConstraintData.name = tByte.getUTFString();\r\n            tTfConstraintData.targetIndex = tByte.getInt16();\r\n            tTfConstraintData.rotateMix = tByte.getFloat32();\r\n            tTfConstraintData.translateMix = tByte.getFloat32();\r\n            tTfConstraintData.scaleMix = tByte.getFloat32();\r\n            tTfConstraintData.shearMix = tByte.getFloat32();\r\n            tTfConstraintData.offsetRotation = tByte.getFloat32();\r\n            tTfConstraintData.offsetX = tByte.getFloat32();\r\n            tTfConstraintData.offsetY = tByte.getFloat32();\r\n            tTfConstraintData.offsetScaleX = tByte.getFloat32();\r\n            tTfConstraintData.offsetScaleY = tByte.getFloat32();\r\n            tTfConstraintData.offsetShearY = tByte.getFloat32();\r\n            this.tfArr.push(tTfConstraintData);\r\n        }\r\n\r\n        var tPathConstraintData: PathConstraintData;\r\n        var tPathLen: number = tByte.getUint16();\r\n        var tPathBoneLen: number;\r\n        for (let i = 0; i < tPathLen; i++) {\r\n            tPathConstraintData = new PathConstraintData();\r\n            tPathConstraintData.name = tByte.readUTFString();\r\n            tPathBoneLen = tByte.getUint16();\r\n            for (let j = 0; j < tPathBoneLen; j++) {\r\n                tPathConstraintData.bones.push(tByte.getInt16());\r\n            }\r\n            tPathConstraintData.target = tByte.readUTFString();\r\n            tPathConstraintData.positionMode = tByte.readUTFString();\r\n            tPathConstraintData.spacingMode = tByte.readUTFString();\r\n            tPathConstraintData.rotateMode = tByte.readUTFString();\r\n            tPathConstraintData.offsetRotation = tByte.getFloat32();\r\n            tPathConstraintData.position = tByte.getFloat32();\r\n            tPathConstraintData.spacing = tByte.getFloat32();\r\n            tPathConstraintData.rotateMix = tByte.getFloat32();\r\n            tPathConstraintData.translateMix = tByte.getFloat32();\r\n            this.pathArr.push(tPathConstraintData);\r\n        }\r\n\r\n        var tDeformSlotLen: number;\r\n        var tDeformSlotDisplayLen: number;\r\n        var tDSlotIndex: number;\r\n        var tDAttachment: string;\r\n        var tDeformTimeLen: number;\r\n        var tDTime: number;\r\n        var tDeformVecticesLen: number;\r\n        var tDeformAniData: DeformAniData;\r\n        var tDeformSlotData: DeformSlotData;\r\n        var tDeformSlotDisplayData: DeformSlotDisplayData;\r\n        var tDeformVectices: any[];\r\n        var tDeformAniLen: number = tByte.getInt16();\r\n        for (let i = 0; i < tDeformAniLen; i++) {\r\n            var tDeformSkinLen: number = tByte.getUint8();\r\n            var tSkinDic: any = {};\r\n            this.deformAniArr.push(tSkinDic);\r\n            for (let f: number = 0; f < tDeformSkinLen; f++) {\r\n                tDeformAniData = new DeformAniData();\r\n                tDeformAniData.skinName = tByte.getUTFString();\r\n                tSkinDic[tDeformAniData.skinName] = tDeformAniData;\r\n                tDeformSlotLen = tByte.getInt16();\r\n                for (let j = 0; j < tDeformSlotLen; j++) {\r\n                    tDeformSlotData = new DeformSlotData();\r\n                    tDeformAniData.deformSlotDataList.push(tDeformSlotData);\r\n\r\n                    tDeformSlotDisplayLen = tByte.getInt16();\r\n                    for (let k = 0; k < tDeformSlotDisplayLen; k++) {\r\n                        tDeformSlotDisplayData = new DeformSlotDisplayData();\r\n                        tDeformSlotData.deformSlotDisplayList.push(tDeformSlotDisplayData);\r\n                        tDeformSlotDisplayData.slotIndex = tDSlotIndex = tByte.getInt16();\r\n                        tDeformSlotDisplayData.attachment = tDAttachment = tByte.getUTFString();\r\n                        tDeformTimeLen = tByte.getInt16();\r\n                        for (let l = 0; l < tDeformTimeLen; l++) {\r\n                            if (tByte.getByte() == 1) {\r\n                                tDeformSlotDisplayData.tweenKeyList.push(true);\r\n                            } else {\r\n                                tDeformSlotDisplayData.tweenKeyList.push(false);\r\n                            }\r\n                            tDTime = tByte.getFloat32();\r\n                            tDeformSlotDisplayData.timeList.push(tDTime);\r\n                            tDeformVectices = [];\r\n                            tDeformSlotDisplayData.vectices.push(tDeformVectices);\r\n                            tDeformVecticesLen = tByte.getInt16();\r\n                            for (let n = 0; n < tDeformVecticesLen; n++) {\r\n                                tDeformVectices.push(tByte.getFloat32());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var tDrawOrderArr: DrawOrderData[];\r\n        var tDrawOrderAniLen: number = tByte.getInt16();\r\n        var tDrawOrderLen: number;\r\n        var tDrawOrderData: DrawOrderData;\r\n        var tDoLen: number;\r\n        for (let i = 0; i < tDrawOrderAniLen; i++) {\r\n            tDrawOrderLen = tByte.getInt16();\r\n            tDrawOrderArr = [];\r\n            for (let j = 0; j < tDrawOrderLen; j++) {\r\n                tDrawOrderData = new DrawOrderData();\r\n                tDrawOrderData.time = tByte.getFloat32();\r\n                tDoLen = tByte.getInt16();\r\n                for (let k = 0; k < tDoLen; k++) {\r\n                    tDrawOrderData.drawOrder.push(tByte.getInt16());\r\n                }\r\n                tDrawOrderArr.push(tDrawOrderData);\r\n            }\r\n            this.drawOrderAniArr.push(tDrawOrderArr);\r\n        }\r\n\r\n        var tEventArr: EventData[];\r\n        var tEventAniLen: number = tByte.getInt16();\r\n        var tEventLen: number;\r\n        var tEventData: EventData;\r\n        for (let i = 0; i < tEventAniLen; i++) {\r\n            tEventLen = tByte.getInt16();\r\n            tEventArr = [];\r\n            for (let j = 0; j < tEventLen; j++) {\r\n                tEventData = new EventData();\r\n                tEventData.name = tByte.getUTFString();\r\n                if (this._isParseAudio) tEventData.audioValue = tByte.getUTFString();\r\n                tEventData.intValue = tByte.getInt32();\r\n                tEventData.floatValue = tByte.getFloat32();\r\n                tEventData.stringValue = tByte.getUTFString();\r\n                tEventData.time = tByte.getFloat32();\r\n                tEventArr.push(tEventData);\r\n            }\r\n            this.eventAniArr.push(tEventArr);\r\n        }\r\n\r\n        var tAttachmentLen: number = tByte.getInt16();\r\n        if (tAttachmentLen > 0) {\r\n            this.attachmentNames = [];\r\n            for (let i = 0; i < tAttachmentLen; i++) {\r\n                this.attachmentNames.push(tByte.getUTFString());\r\n            }\r\n        }\r\n\r\n        //创建插槽并绑定到骨骼上\r\n        var tBoneSlotLen: number = tByte.getInt16();\r\n        var tDBBoneSlot: BoneSlot;\r\n        var tDBBoneSlotArr: any[];\r\n        for (let i = 0; i < tBoneSlotLen; i++) {\r\n            tDBBoneSlot = new BoneSlot();\r\n            tDBBoneSlot.name = tByte.readUTFString();\r\n            tDBBoneSlot.parent = tByte.readUTFString();\r\n            tDBBoneSlot.attachmentName = tByte.readUTFString();\r\n            tDBBoneSlot.srcDisplayIndex = tDBBoneSlot.displayIndex = tByte.getInt16();\r\n            tDBBoneSlot.templet = this;\r\n            this.boneSlotDic[tDBBoneSlot.name] = tDBBoneSlot;\r\n            tDBBoneSlotArr = this.bindBoneBoneSlotDic[tDBBoneSlot.parent];\r\n            if (tDBBoneSlotArr == null) {\r\n                this.bindBoneBoneSlotDic[tDBBoneSlot.parent] = tDBBoneSlotArr = [];\r\n            }\r\n            tDBBoneSlotArr.push(tDBBoneSlot);\r\n            this.boneSlotArray.push(tDBBoneSlot);\r\n        }\r\n\r\n        var tNameString: string = tByte.readUTFString();\r\n        var tNameArray: any[] = tNameString.split(\"\\n\");\r\n        var tNameStartIndex: number = 0;\r\n\r\n        var tSkinDataLen: number = tByte.getUint8();\r\n        var tSkinData: SkinData, tSlotData: SlotData, tDisplayData: SkinSlotDisplayData;\r\n        var tSlotDataLen: number, tDisplayDataLen: number;\r\n        var tUvLen: number, tWeightLen: number, tTriangleLen: number, tVerticeLen: number, tLengthLen: number;\r\n        for (let i = 0; i < tSkinDataLen; i++) {\r\n            tSkinData = new SkinData();\r\n            tSkinData.name = tNameArray[tNameStartIndex++];\r\n            tSlotDataLen = tByte.getUint8();\r\n            for (let j = 0; j < tSlotDataLen; j++) {\r\n                tSlotData = new SlotData();\r\n                tSlotData.name = tNameArray[tNameStartIndex++];\r\n                tDBBoneSlot = this.boneSlotDic[tSlotData.name];\r\n                tDisplayDataLen = tByte.getUint8();\r\n                for (let k = 0; k < tDisplayDataLen; k++) {\r\n                    tDisplayData = new SkinSlotDisplayData();\r\n                    this.skinSlotDisplayDataArr.push(tDisplayData);\r\n                    tDisplayData.name = tNameArray[tNameStartIndex++];\r\n                    tDisplayData.attachmentName = tNameArray[tNameStartIndex++];\r\n                    tDisplayData.transform = new Transform();\r\n                    tDisplayData.transform.scX = tByte.getFloat32();\r\n                    tDisplayData.transform.skX = tByte.getFloat32();\r\n                    tDisplayData.transform.skY = tByte.getFloat32();\r\n                    tDisplayData.transform.scY = tByte.getFloat32();\r\n                    tDisplayData.transform.x = tByte.getFloat32();\r\n                    tDisplayData.transform.y = tByte.getFloat32();\r\n\r\n                    tSlotData.displayArr.push(tDisplayData);\r\n                    tDisplayData.width = tByte.getFloat32();\r\n                    tDisplayData.height = tByte.getFloat32();\r\n                    tDisplayData.type = tByte.getUint8();\r\n                    tDisplayData.verLen = tByte.getUint16();\r\n\r\n                    tBoneLen = tByte.getUint16();\r\n                    if (tBoneLen > 0) {\r\n                        tDisplayData.bones = [];\r\n                        for (let l = 0; l < tBoneLen; l++) {\r\n                            let tBoneId: number = tByte.getUint16();\r\n                            tDisplayData.bones.push(tBoneId);\r\n                        }\r\n                    }\r\n                    tUvLen = tByte.getUint16();\r\n                    if (tUvLen > 0) {\r\n                        tDisplayData.uvs = [];\r\n                        for (let l = 0; l < tUvLen; l++) {\r\n                            tDisplayData.uvs.push(tByte.getFloat32());\r\n                        }\r\n                    }\r\n                    tWeightLen = tByte.getUint16();\r\n                    if (tWeightLen > 0) {\r\n                        tDisplayData.weights = [];\r\n                        for (let l = 0; l < tWeightLen; l++) {\r\n                            tDisplayData.weights.push(tByte.getFloat32());\r\n                        }\r\n                    }\r\n                    tTriangleLen = tByte.getUint16();\r\n                    if (tTriangleLen > 0) {\r\n                        tDisplayData.triangles = [];\r\n                        for (let l = 0; l < tTriangleLen; l++) {\r\n                            tDisplayData.triangles.push(tByte.getUint16());\r\n                        }\r\n                    }\r\n                    tVerticeLen = tByte.getUint16();\r\n                    if (tVerticeLen > 0) {\r\n                        tDisplayData.vertices = [];\r\n                        for (let l = 0; l < tVerticeLen; l++) {\r\n                            tDisplayData.vertices.push(tByte.getFloat32());\r\n                        }\r\n                    }\r\n\r\n                    tLengthLen = tByte.getUint16();\r\n                    if (tLengthLen > 0) {\r\n                        tDisplayData.lengths = [];\r\n                        for (let l = 0; l < tLengthLen; l++) {\r\n                            tDisplayData.lengths.push(tByte.getFloat32());\r\n                        }\r\n                    }\r\n                }\r\n                tSkinData.slotArr.push(tSlotData);\r\n            }\r\n            this.skinDic[tSkinData.name] = tSkinData;\r\n            this.skinDataArray.push(tSkinData);\r\n        }\r\n        var tReverse: number = tByte.getUint8();\r\n        if (tReverse == 1) {\r\n            this.yReverseMatrix = new Matrix(1, 0, 0, -1, 0, 0);\r\n            if (tRootBone) {\r\n                tRootBone.setTempMatrix(this.yReverseMatrix);\r\n            }\r\n        } else {\r\n            if (tRootBone) {\r\n                tRootBone.setTempMatrix(new Matrix());\r\n            }\r\n        }\r\n        this.showSkinByIndex(this.boneSlotDic, 0);\r\n    }\r\n\r\n    /**\r\n     * 得到指定的纹理\r\n     * @param\tname\t纹理的名字\r\n     * @return\r\n     */\r\n    getTexture(name: string): Texture {\r\n        let tTexture = this.subTextureDic[name];\r\n        if (!tTexture) {\r\n            tTexture = this.subTextureDic[name.substring(0, name.length - 1)];\r\n        }\r\n        if (tTexture == null) {\r\n            return this._mainTexture;\r\n        }\r\n        return tTexture;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示指定的皮肤\r\n     * @param\tboneSlotDic\t插糟字典的引用\r\n     * @param\tskinIndex\t皮肤的索引\r\n     * @param\tfreshDisplayIndex\t是否重置插槽纹理\r\n     */\r\n    showSkinByIndex(boneSlotDic: any, skinIndex: number, freshDisplayIndex: boolean = true): boolean {\r\n        if (skinIndex < 0 && skinIndex >= this.skinDataArray.length) return false;\r\n        var i: number, n: number;\r\n        var tBoneSlot: BoneSlot;\r\n        var tSlotData: SlotData;\r\n        var tSkinData: SkinData = this.skinDataArray[skinIndex];\r\n        if (tSkinData) {\r\n            for (i = 0, n = tSkinData.slotArr.length; i < n; i++) {\r\n                tSlotData = tSkinData.slotArr[i];\r\n                if (tSlotData) {\r\n                    tBoneSlot = boneSlotDic[tSlotData.name];\r\n                    if (tBoneSlot) {\r\n                        tBoneSlot.showSlotData(tSlotData, freshDisplayIndex);\r\n                        if (freshDisplayIndex && tBoneSlot.attachmentName != \"undefined\" && tBoneSlot.attachmentName != \"null\") {\r\n                            tBoneSlot.showDisplayByName(tBoneSlot.attachmentName);\r\n                        } else {\r\n                            tBoneSlot.showDisplayByIndex(tBoneSlot.displayIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过皮肤名字得到皮肤索引\r\n     * @param\tskinName 皮肤名称\r\n     * @return\r\n     */\r\n    getSkinIndexByName(skinName: string): number {\r\n        for (let i = 0, n = this.skinDataArray.length; i < n; i++) {\r\n            let tSkinData = this.skinDataArray[i];\r\n            if (tSkinData.name == skinName) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 得到缓冲数据\r\n     * @param\taniIndex\t动画索引\r\n     * @param\tframeIndex\t帧索引\r\n     * @return\r\n     */\r\n    getGrahicsDataWithCache(aniIndex: number, frameIndex: number): Graphics {\r\n        if (this._graphicsCache[aniIndex] && this._graphicsCache[aniIndex][frameIndex]) {\r\n            return this._graphicsCache[aniIndex][frameIndex];\r\n        }\r\n        //trace(\"getGrahicsDataWithCache fail:\",aniIndex,frameIndex,this._path);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 保存缓冲grahpics\r\n     * @param\taniIndex\t动画索引\r\n     * @param\tframeIndex\t帧索引\r\n     * @param\tgraphics\t要保存的数据\r\n     */\r\n    setGrahicsDataWithCache(aniIndex: number, frameIndex: number, graphics: Graphics): void {\r\n        this._graphicsCache[aniIndex][frameIndex] = graphics;\r\n    }\r\n\r\n    deleteAniData(aniIndex: number): void {\r\n        if (this._anis[aniIndex]) {\r\n            var tAniDataO: AnimationContent = this._anis[aniIndex];\r\n            tAniDataO.bone3DMap = null;\r\n            tAniDataO.nodes = null;\r\n        }\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        for (let k in this.subTextureDic) {\r\n            this.subTextureDic[k]?.destroy();\r\n        }\r\n        this._mainTexture._removeReference();\r\n\r\n        var tSkinSlotDisplayData: SkinSlotDisplayData;\r\n        for (var i: number = 0, n: number = this.skinSlotDisplayDataArr.length; i < n; i++) {\r\n            tSkinSlotDisplayData = this.skinSlotDisplayDataArr[i];\r\n            tSkinSlotDisplayData.destory();\r\n        }\r\n        this.skinSlotDisplayDataArr.length = 0;\r\n    }\r\n\r\n    /***********************************下面为一些儿访问接口*****************************************/\r\n    /**\r\n     * 通过索引得动画名称\r\n     * @param\tindex\r\n     * @return\r\n     */\r\n    getAniNameByIndex(index: number): string {\r\n        var tAni: any = this.getAnimation(index);\r\n        if (tAni) return tAni.name;\r\n        return null;\r\n    }\r\n}\r\n\r\nIAniLib.Templet = Templet;","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { Templet } from \"./bone/Templet\";\r\n\r\nclass TempletLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return Promise.all([\r\n            task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options),\r\n            task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback())\r\n        ]).then(res => {\r\n            if (!res[0] || !res[1])\r\n                return null;\r\n\r\n            let templet = new Templet();\r\n            templet._parse(res[1], task.url, res[0]);\r\n            return templet;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"sk\"], TempletLoader);","import { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Skeleton } from \"./bone/Skeleton\";\r\n\r\nimport \"./TempletLoader\";\r\n\r\nlet c = ClassUtils.regClass;\r\n\r\nc(\"Skeleton\", Skeleton);","import { Sprite } from \"../../display/Sprite\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Handler } from \"../../utils/Handler\";\r\nimport { NodeFlags } from \"../../Const\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Loader } from \"../../net/Loader\";\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 加载完成后调度。\r\n * @eventType Event.LOADED\r\n */\r\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 进入帧后调度。\r\n * @eventType Event.FRAME\r\n */\r\n/*[Event(name = \"frame\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>MovieClip</code> 用于播放经过工具处理后的 swf 动画。</p>\r\n */\r\nexport class MovieClip extends Sprite {\r\n    /**@internal */\r\n    protected static _ValueList: any[] = [\"x\", \"y\", \"width\", \"height\", \"scaleX\", \"scaleY\", \"rotation\", \"alpha\"];\r\n    /**@internal 数据起始位置。*/\r\n    protected _start: number = 0;\r\n    /**@internal 当前位置。*/\r\n    protected _Pos: number = 0;\r\n    /**@internal 数据。*/\r\n    protected _data: Byte;\r\n    /**@internal */\r\n    protected _curIndex: number;\r\n    /**@internal */\r\n    protected _preIndex: number;\r\n    /**@internal */\r\n    protected _playIndex: number;\r\n    /**@internal */\r\n    protected _playing: boolean;\r\n    /**@internal */\r\n    protected _ended: boolean = true;\r\n    /**@internal 总帧数。*/\r\n    protected _count: number;\r\n    /**@internal id_data起始位置表*/\r\n    _ids: any;\r\n    /**@internal */\r\n    protected _loadedImage: any = {};\r\n    /**@internal id_实例表*/\r\n    _idOfSprite: any[];\r\n    /**@internal 父mc*/\r\n    _parentMovieClip: MovieClip;\r\n    /**@internal 需要更新的movieClip表*/\r\n    _movieClipList: MovieClip[];\r\n    /**@internal */\r\n    protected _labels: any;\r\n    /**资源根目录。*/\r\n    basePath: string;\r\n    /**@internal */\r\n    private _isRoot: boolean;\r\n    /**@internal */\r\n    private _completeHandler: Handler;\r\n    /**@internal */\r\n    private _endFrame: number = -1;\r\n    private _source: string;\r\n\r\n    /** 播放间隔(单位：毫秒)。*/\r\n    interval: number = 30;\r\n    /**是否循环播放 */\r\n    loop: boolean;\r\n\r\n    /**\r\n     * 创建一个 <code>MovieClip</code> 实例。\r\n     * @param parentMovieClip 父MovieClip,自己创建时不需要传该参数\r\n     */\r\n    constructor(parentMovieClip: MovieClip = null) {\r\n        super();\r\n        this._ids = {};\r\n        this._idOfSprite = [];\r\n        this._reset();\r\n        this._playing = false;\r\n        this._parentMovieClip = parentMovieClip;\r\n        if (!parentMovieClip) {\r\n            this._movieClipList = [this];\r\n            this._isRoot = true;\r\n            this._setBitUp(NodeFlags.DISPLAY);\r\n        } else {\r\n            this._isRoot = false;\r\n            this._movieClipList = parentMovieClip._movieClipList;\r\n            this._movieClipList.push(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。以及销毁引用的Texture</p>\r\n     * @param\tdestroyChild 是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._clear();\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override \r\n     */\r\n    _setDisplay(value: boolean): void {\r\n        super._setDisplay(value);\r\n        if (this._isRoot) {\r\n            this._onDisplay(value);\r\n        }\r\n    }\r\n    /**\r\n     * @internal \r\n     * @override\r\n     */\r\n    protected _onDisplay(value?: boolean): void {\r\n        if (value) this.timer.loop(this.interval, this, this.updates, null, true);\r\n        else this.timer.clear(this, this.updates);\r\n    }\r\n\r\n    /**@private 更新时间轴*/\r\n    //TODO:coverage\r\n    updates(): void {\r\n        if (this._parentMovieClip) return;\r\n        var i: number, len: number;\r\n        len = this._movieClipList.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._movieClipList[i] && this._movieClipList[i]._update();\r\n        }\r\n    }\r\n\r\n    /**当前播放索引。*/\r\n    get index(): number {\r\n        return this._playIndex;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._playIndex = value;\r\n        if (this._data)\r\n            this._displayFrame(this._playIndex);\r\n        if (this._labels && this._labels[value]) this.event(Event.LABEL, this._labels[value]);\r\n    }\r\n\r\n    /**\r\n     * 增加一个标签到index帧上，播放到此index后会派发label事件\r\n     * @param\tlabel\t标签名称\r\n     * @param\tindex\t索引位置\r\n     */\r\n    addLabel(label: string, index: number): void {\r\n        if (!this._labels) this._labels = {};\r\n        this._labels[index] = label;\r\n    }\r\n\r\n    /**\r\n     * 删除某个标签\r\n     * @param\tlabel 标签名字，如果label为空，则删除所有Label\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (!label) this._labels = null;\r\n        else if (!this._labels) {\r\n            for (var name in this._labels) {\r\n                if (this._labels[name] === label) {\r\n                    delete this._labels[name];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 帧总数。\r\n     */\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * 是否在播放中\r\n     */\r\n    get playing(): boolean {\r\n        return this._playing;\r\n    }\r\n    /**\r\n     * @internal\r\n     * 动画的帧更新处理函数。\r\n     */\r\n    //TODO:coverage\r\n    private _update(): void {\r\n        if (!this._data) return;\r\n        if (!this._playing) return;\r\n        this._playIndex++;\r\n        if (this._playIndex >= this._count) {\r\n            if (!this.loop) {\r\n                this._playIndex--;\r\n                this.stop();\r\n                return;\r\n            }\r\n            this._playIndex = 0;\r\n        }\r\n        this._parseFrame(this._playIndex);\r\n        if (this._labels && this._labels[this._playIndex]) this.event(Event.LABEL, this._labels[this._playIndex]);\r\n        if (this._endFrame != -1 && this._endFrame == this._playIndex) {\r\n            this._endFrame = -1;\r\n            if (this._completeHandler != null) {\r\n                var handler: Handler = this._completeHandler;\r\n                this._completeHandler = null;\r\n                handler.run();\r\n            }\r\n            this.stop();\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放动画。\r\n     */\r\n    stop(): void {\r\n        this._playing = false;\r\n    }\r\n\r\n    /**\r\n     * 跳到某帧并停止播放动画。\r\n     * @param frame 要跳到的帧\r\n     */\r\n    gotoAndStop(index: number): void {\r\n        this.index = index;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 清理。\r\n     */\r\n    private _clear(): void {\r\n        this.stop();\r\n        this._idOfSprite.length = 0;\r\n        if (!this._parentMovieClip) {\r\n            this.timer.clear(this, this.updates);\r\n            var i: number, len: number;\r\n            len = this._movieClipList.length;\r\n            for (i = 0; i < len; i++) {\r\n                if (this._movieClipList[i] != this)\r\n                    this._movieClipList[i]._clear();\r\n            }\r\n            this._movieClipList.length = 0;\r\n        }\r\n        var key: string;\r\n        for (key in this._loadedImage) {\r\n            let obj = this._loadedImage[key];\r\n            if (obj) {\r\n                ILaya.Loader.clearRes(key, obj);\r\n                this._loadedImage[key] = false;\r\n            }\r\n        }\r\n        this.removeChildren();\r\n        this.graphics = null;\r\n        this._parentMovieClip = null;\r\n    }\r\n\r\n    /**\r\n     * 播放动画。\r\n     * @param\tindex 帧索引。\r\n     */\r\n    play(index: number = 0, loop: boolean = true): void {\r\n        this.loop = loop;\r\n        this._playing = true;\r\n        if (this._data)\r\n            this._displayFrame(index);\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    private _displayFrame(frameIndex: number = -1): void {\r\n        if (frameIndex != -1) {\r\n            if (this._curIndex > frameIndex) this._reset();\r\n            this._parseFrame(frameIndex);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private _reset(rm: boolean = true): void {\r\n        if (rm && this._curIndex != 1) this.removeChildren();\r\n        this._preIndex = this._curIndex = -1;\r\n        this._Pos = this._start;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    private _parseFrame(frameIndex: number): void {\r\n        var mc: MovieClip, sp: Sprite, key: number, type: number, tPos: number, ttype: number, ifAdd: boolean = false;\r\n        var _idOfSprite: any[] = this._idOfSprite, _data: Byte = this._data, eStr: string;\r\n        if (this._ended) this._reset();\r\n        _data.pos = this._Pos;\r\n        this._ended = false;\r\n        this._playIndex = frameIndex;\r\n        if (this._curIndex > frameIndex && frameIndex < this._preIndex) {\r\n            this._reset(true);\r\n            _data.pos = this._Pos;\r\n        }\r\n        while ((this._curIndex <= frameIndex) && (!this._ended)) {\r\n            type = _data.getUint16();\r\n            switch (type) {\r\n                case 12: //new MC\r\n                    key = _data.getUint16();\r\n                    tPos = this._ids[_data.getUint16()];\r\n                    this._Pos = _data.pos;\r\n                    _data.pos = tPos;\r\n                    if ((ttype = _data.getUint8()) == 0) {\r\n                        var pid: number = _data.getUint16();\r\n                        sp = _idOfSprite[key]\r\n                        if (!sp) {\r\n                            sp = _idOfSprite[key] = new Sprite();\r\n                            var spp: Sprite = new Sprite();\r\n                            spp.loadImage(this.basePath + pid + \".png\");\r\n                            this._loadedImage[this.basePath + pid + \".png\"] = true;\r\n                            sp.addChild(spp);\r\n                            spp.size(_data.getFloat32(), _data.getFloat32());\r\n                            var mat: Matrix = _data._getMatrix();\r\n                            spp.transform = mat;\r\n                        }\r\n                        sp.alpha = 1;\r\n                    } else if (ttype == 1) {\r\n                        mc = _idOfSprite[key]\r\n                        if (!mc) {\r\n                            _idOfSprite[key] = mc = new MovieClip(this);\r\n                            mc.interval = this.interval;\r\n                            mc._ids = this._ids;\r\n                            mc.basePath = this.basePath;\r\n                            mc._setData(_data, tPos);\r\n                            mc._initState();\r\n                            mc.play(0);\r\n                        }\r\n                        mc.alpha = 1;\r\n                    }\r\n                    _data.pos = this._Pos;\r\n                    break;\r\n                case 3: //addChild\r\n                    var node: Sprite = _idOfSprite[ /*key*/_data.getUint16()];\r\n                    if (node) {\r\n                        this.addChild(node);\r\n                        node.zOrder = _data.getUint16();\r\n                        ifAdd = true;\r\n                    }\r\n                    break;\r\n                case 4: //remove\r\n                    node = _idOfSprite[ /*key*/_data.getUint16()];\r\n                    node && node.removeSelf();\r\n                    break;\r\n                case 5: //setValue\r\n                    _idOfSprite[_data.getUint16()][MovieClip._ValueList[_data.getUint16()]] = (_data.getFloat32());\r\n                    break;\r\n                case 6: //visible\r\n                    _idOfSprite[_data.getUint16()].visible = ( /*visible*/_data.getUint8() > 0);\r\n                    break;\r\n                case 7: //SetTransform\r\n                    sp = _idOfSprite[ /*key*/_data.getUint16()]; //.transform=mt;\r\n                    var mt: Matrix = sp.transform || Matrix.create();\r\n                    mt.setTo(_data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32());\r\n                    sp.transform = mt;\r\n                    break;\r\n                case 8: //pos\r\n                    _idOfSprite[_data.getUint16()].setPos(_data.getFloat32(), _data.getFloat32());\r\n                    break;\r\n                case 9: //size\r\n                    _idOfSprite[_data.getUint16()].setSize(_data.getFloat32(), _data.getFloat32());\r\n                    break;\r\n                case 10: //alpha\r\n                    _idOfSprite[ /*key*/_data.getUint16()].alpha = /*alpha*/ _data.getFloat32();\r\n                    break;\r\n                case 11: //scale\r\n                    _idOfSprite[_data.getUint16()].setScale(_data.getFloat32(), _data.getFloat32());\r\n                    break;\r\n                case 98: //event\t\t\r\n                    eStr = _data.getString();\r\n                    this.event(eStr);\r\n                    if (eStr == \"stop\") this.stop();\r\n                    break;\r\n                case 99: //FrameBegin\t\t\t\t\r\n                    this._curIndex = _data.getUint16();\r\n                    ifAdd && this.updateZOrder();\r\n                    break;\r\n                case 100: //cmdEnd\r\n                    this._count = this._curIndex + 1;\r\n                    this._ended = true;\r\n                    if (this._playing) {\r\n                        this.event(Event.FRAME);\r\n                        this.event(Event.END);\r\n                        this.event(Event.COMPLETE);\r\n                    }\r\n\r\n                    this._reset(false);\r\n                    break;\r\n            }\r\n        }\r\n        if (this._playing && !this._ended) this.event(Event.FRAME);\r\n        this._Pos = _data.pos;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _setData(data: Byte, start: number): void {\r\n        this._data = data;\r\n        this._start = start + 3;\r\n    }\r\n\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 资源地址。\r\n     */\r\n    set source(value: string) {\r\n        this.load(value);\r\n    }\r\n\r\n    /**\r\n     * 加载资源。\r\n     * @param\turl swf 资源地址。\r\n     * @param   atlas  是否使用图集资源\r\n     * @param   atlasPath  图集路径，默认使用与swf同名的图集\r\n     */\r\n    load(url: string, atlas: boolean = false, atlasPath: string = null): void {\r\n        this.stop();\r\n        this._clear();\r\n        this._movieClipList = [this];\r\n        this._source = url;\r\n\r\n        if (atlas)\r\n            atlasPath = atlasPath ? atlasPath : url.split(\".swf\")[0] + \".json\";\r\n\r\n        ILaya.loader.load(atlasPath ? [url, atlasPath] : [url], Loader.BUFFER).then(res => {\r\n            if (!res) {\r\n                this.event(Event.ERROR, \"file not find\");\r\n                return;\r\n            }\r\n\r\n            let basePath: string = atlas ? res[1]?.dir : url.split(\".swf\")[0] + \"/image/\";\r\n            this._initData(new Byte(res[0].data), basePath);\r\n        });\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    private _initState(): void {\r\n        this._reset();\r\n        this._ended = false;\r\n        var preState: boolean = this._playing;\r\n        this._playing = false;\r\n        this._curIndex = 0;\r\n        while (!this._ended) this._parseFrame(++this._curIndex);\r\n        this._playing = preState;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    private _initData(data: Byte, basePath: string): void {\r\n        this.basePath = basePath;\r\n        let len: number = data.getUint16();\r\n        for (let i = 0; i < len; i++) this._ids[data.getInt16()] = data.getInt32();\r\n        this.interval = 1000 / data.getUint16();\r\n        this._setData(data, this._ids[32767]);\r\n        this._initState();\r\n        this.play(0);\r\n        this.event(Event.READY);\r\n        if (!this._parentMovieClip) this.timer.loop(this.interval, this, this.updates, null, true);\r\n    }\r\n\r\n    /**\r\n     * 从开始索引播放到结束索引，结束之后出发complete回调\r\n     * @param\tstart\t开始索引\r\n     * @param\tend\t\t结束索引\r\n     * @param\tcomplete\t结束回调\r\n     */\r\n    playTo(start: number, end: number, complete: Handler = null): void {\r\n        this._completeHandler = complete;\r\n        this._endFrame = end;\r\n        this.play(start, false);\r\n    }\r\n}\r\n\r\n"],"names":["Byte","EventDispatcher","Stat","Event","Bezier","Resource","MathUtil","Graphics","Matrix","Sprite","ILaya","LayaEnv","SoundManager","Handler","Utils","Rectangle","Texture","Loader","ClassUtils","NodeFlags"],"mappings":"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"}